%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-Remote.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 13/12/2018, 12:20:13 p.m.
%%BoundingBox: 0 0 688 553
%%HiResBoundingBox: 0 0 687.2400 552.6000
%%CropBox: 0 0 687.2400 552.6000
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -552.6 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 552.6 li
687.24 552.6 li
687.24 0 li
cp
clp
0 0 mo
687.238 0 li
687.238 552.602 li
0 552.602 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.281 486.84 mo
670.441 486.84 li
74.281 447.121 mo
670.441 447.121 li
74.281 407.398 mo
670.441 407.398 li
74.281 367.68 mo
670.441 367.68 li
74.281 327.961 mo
670.441 327.961 li
74.281 288.238 mo
670.441 288.238 li
74.281 248.52 mo
670.441 248.52 li
74.281 208.801 mo
670.441 208.801 li
74.281 169.078 mo
670.441 169.078 li
74.281 129.359 mo
670.441 129.359 li
74.281 89.762 mo
670.441 89.762 li
74.281 50.039 mo
670.441 50.039 li
.140414 .108034 .108034 0 cmyk
@
74.281 466.922 mo
670.441 466.922 li
74.281 427.199 mo
670.441 427.199 li
74.281 387.48 mo
670.441 387.48 li
74.281 347.879 mo
670.441 347.879 li
74.281 308.16 mo
670.441 308.16 li
74.281 268.441 mo
670.441 268.441 li
74.281 228.719 mo
670.441 228.719 li
74.281 189 mo
670.441 189 li
74.281 149.281 mo
670.441 149.281 li
74.281 109.559 mo
670.441 109.559 li
74.281 69.84 mo
670.441 69.84 li
74.281 30.121 mo
670.441 30.121 li
.328344 .284215 .278569 .000915541 cmyk
@
111.48 30.121 mo
111.48 506.641 li
186 30.121 mo
186 506.641 li
260.641 30.121 mo
260.641 506.641 li
335.16 30.121 mo
335.16 506.641 li
409.68 30.121 mo
409.68 506.641 li
484.199 30.121 mo
484.199 506.641 li
558.719 30.121 mo
558.719 506.641 li
633.238 30.121 mo
633.238 506.641 li
.178592 .148898 .143923 0 cmyk
@
74.281 30.121 mo
74.281 506.641 li
148.801 30.121 mo
148.801 506.641 li
223.32 30.121 mo
223.32 506.641 li
297.84 30.121 mo
297.84 506.641 li
372.359 30.121 mo
372.359 506.641 li
446.879 30.121 mo
446.879 506.641 li
521.398 30.121 mo
521.398 506.641 li
595.922 30.121 mo
595.922 506.641 li
670.441 30.121 mo
670.441 506.641 li
.328344 .284215 .278569 .000915541 cmyk
@
36.48 497.398 mo
61.32 497.398 li
61.32 514.441 li
36.48 514.441 li
cp
0 0 0 0 cmyk
ef
36.48 457.68 mo
61.32 457.68 li
61.32 474.719 li
36.48 474.719 li
cp
ef
36.48 417.961 mo
61.32 417.961 li
61.32 435 li
36.48 435 li
cp
ef
36.48 378.238 mo
61.32 378.238 li
61.32 395.281 li
36.48 395.281 li
cp
ef
36.48 338.52 mo
61.32 338.52 li
61.32 355.559 li
36.48 355.559 li
cp
ef
36.48 298.801 mo
61.32 298.801 li
61.32 315.84 li
36.48 315.84 li
cp
ef
36.48 259.078 mo
61.32 259.078 li
61.32 276.121 li
36.48 276.121 li
cp
ef
36.48 219.359 mo
61.32 219.359 li
61.32 236.519 li
36.48 236.519 li
cp
ef
29.398 179.641 mo
61.32 179.641 li
61.32 196.801 li
29.398 196.801 li
cp
ef
29.398 139.922 mo
61.32 139.922 li
61.32 157.078 li
29.398 157.078 li
cp
ef
29.398 100.199 mo
61.32 100.199 li
61.32 117.359 li
29.398 117.359 li
cp
ef
29.398 60.48 mo
61.32 60.48 li
61.32 77.64 li
29.398 77.64 li
cp
ef
29.398 20.879 mo
61.32 20.879 li
61.32 37.922 li
29.398 37.922 li
cp
ef
.96 lw
74.281 506.641 mo
670.441 506.641 li
.367803 .29575 .300999 .00198367 cmyk
@
74.281 506.641 mo
74.281 511.078 li
148.801 506.641 mo
148.801 511.078 li
223.32 506.641 mo
223.32 511.078 li
297.84 506.641 mo
297.84 511.078 li
372.359 506.641 mo
372.359 511.078 li
446.879 506.641 mo
446.879 511.078 li
521.398 506.641 mo
521.398 511.078 li
595.922 506.641 mo
595.922 511.078 li
670.441 506.641 mo
670.441 511.078 li
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
1 lc
74.281 360.238 mo
148.801 365.879 li
223.32 372.719 li
297.84 385.922 li
372.359 376.199 li
446.879 375.238 li
521.398 383.398 li
595.922 394.922 li
670.441 377.039 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
69.078 355.141 mo
79.039 355.141 li
79.039 365.102 li
69.078 365.102 li
cp
.62768 .285466 0 0 cmyk
@
143.602 360.898 mo
153.559 360.898 li
153.559 370.859 li
143.602 370.859 li
cp
@
218.238 367.738 mo
228.199 367.738 li
228.199 377.699 li
218.238 377.699 li
cp
@
292.762 380.941 mo
302.719 380.941 li
302.719 390.898 li
292.762 390.898 li
cp
@
367.281 371.102 mo
377.238 371.102 li
377.238 381.059 li
367.281 381.059 li
cp
@
441.801 370.141 mo
451.762 370.141 li
451.762 380.102 li
441.801 380.102 li
cp
@
516.32 378.422 mo
526.281 378.422 li
526.281 388.379 li
516.32 388.379 li
cp
@
590.84 389.82 mo
600.801 389.82 li
600.801 399.781 li
590.84 399.781 li
cp
@
665.359 372.059 mo
675.32 372.059 li
675.32 382.02 li
665.359 382.02 li
cp
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
.96 lw
1 lc
74.281 345.84 mo
148.801 377.641 li
223.32 394.922 li
297.84 412.801 li
372.359 390 li
446.879 413.16 li
521.398 406.801 li
595.922 413.762 li
670.441 411.84 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
69.078 340.738 mo
79.039 340.738 li
79.039 350.699 li
69.078 350.699 li
cp
.0319219 .621851 .911223 .000427253 cmyk
@
143.602 372.66 mo
153.559 372.66 li
153.559 382.621 li
143.602 382.621 li
cp
@
218.238 389.82 mo
228.199 389.82 li
228.199 399.781 li
218.238 399.781 li
cp
@
292.762 407.699 mo
302.719 407.699 li
302.719 417.66 li
292.762 417.66 li
cp
@
367.281 385.02 mo
377.238 385.02 li
377.238 394.981 li
367.281 394.981 li
cp
@
441.801 408.18 mo
451.762 408.18 li
451.762 418.141 li
441.801 418.141 li
cp
@
516.32 401.699 mo
526.281 401.699 li
526.281 411.66 li
516.32 411.66 li
cp
@
590.84 408.66 mo
600.801 408.66 li
600.801 418.621 li
590.84 418.621 li
cp
@
665.359 406.859 mo
675.32 406.859 li
675.32 416.82 li
665.359 416.82 li
cp
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
.96 lw
1 lc
74.281 332.641 mo
148.801 388.441 li
223.32 396.121 li
297.84 415.801 li
372.359 413.762 li
446.879 397.441 li
521.398 405.359 li
595.922 409.68 li
670.441 410.039 li
.619135 .109529 .981689 .00570687 cmyk
@
grestore
69.078 327.66 mo
79.039 327.66 li
79.039 337.621 li
69.078 337.621 li
cp
.619135 .109529 .981689 .00570687 cmyk
@
143.602 383.34 mo
153.559 383.34 li
153.559 393.301 li
143.602 393.301 li
cp
@
218.238 391.02 mo
228.199 391.02 li
228.199 400.981 li
218.238 400.981 li
cp
@
292.762 410.699 mo
302.719 410.699 li
302.719 420.66 li
292.762 420.66 li
cp
@
367.281 408.66 mo
377.238 408.66 li
377.238 418.621 li
367.281 418.621 li
cp
@
441.801 392.461 mo
451.762 392.461 li
451.762 402.422 li
441.801 402.422 li
cp
@
516.32 400.262 mo
526.281 400.262 li
526.281 410.219 li
516.32 410.219 li
cp
@
590.84 404.699 mo
600.801 404.699 li
600.801 414.66 li
590.84 414.66 li
cp
@
665.359 405.059 mo
675.32 405.059 li
675.32 415.02 li
665.359 415.02 li
cp
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
.96 lw
1 lc
74.281 340.559 mo
148.801 373.922 li
223.32 389.16 li
297.84 392.16 li
372.359 385.922 li
446.879 401.52 li
521.398 381.359 li
595.922 391.199 li
670.441 408.121 li
0 .990631 1 .000396735 cmyk
@
grestore
69.078 335.578 mo
79.039 335.578 li
79.039 345.539 li
69.078 345.539 li
cp
0 .990631 1 .000396735 cmyk
@
143.602 368.82 mo
153.559 368.82 li
153.559 378.781 li
143.602 378.781 li
cp
@
218.238 384.059 mo
228.199 384.059 li
228.199 394.02 li
218.238 394.02 li
cp
@
292.762 387.18 mo
302.719 387.18 li
302.719 397.141 li
292.762 397.141 li
cp
@
367.281 380.941 mo
377.238 380.941 li
377.238 390.898 li
367.281 390.898 li
cp
@
441.801 396.422 mo
451.762 396.422 li
451.762 406.379 li
441.801 406.379 li
cp
@
516.32 376.379 mo
526.281 376.379 li
526.281 386.34 li
516.32 386.34 li
cp
@
590.84 386.219 mo
600.801 386.219 li
600.801 396.18 li
590.84 396.18 li
cp
@
665.359 403.02 mo
675.32 403.02 li
675.32 412.981 li
665.359 412.981 li
cp
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.281 352.441 mo
148.801 374.879 li
223.32 387.48 li
297.84 408.84 li
372.359 400.559 li
446.879 396.359 li
521.398 399.602 li
595.922 402.84 li
670.441 392.52 li
.62768 .285466 0 0 cmyk
@
grestore
69.078 347.34 mo
79.039 347.34 li
79.039 357.301 li
69.078 357.301 li
cp
.62768 .285466 0 0 cmyk
@
143.602 369.781 mo
153.559 369.781 li
153.559 379.738 li
143.602 379.738 li
cp
@
218.238 382.5 mo
228.199 382.5 li
228.199 392.461 li
218.238 392.461 li
cp
@
292.762 403.738 mo
302.719 403.738 li
302.719 413.699 li
292.762 413.699 li
cp
@
367.281 395.578 mo
377.238 395.578 li
377.238 405.539 li
367.281 405.539 li
cp
@
441.801 391.262 mo
451.762 391.262 li
451.762 401.219 li
441.801 401.219 li
cp
@
516.32 394.621 mo
526.281 394.621 li
526.281 404.578 li
516.32 404.578 li
cp
@
590.84 397.859 mo
600.801 397.859 li
600.801 407.82 li
590.84 407.82 li
cp
@
665.359 387.539 mo
675.32 387.539 li
675.32 397.5 li
665.359 397.5 li
cp
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.281 356.52 mo
148.801 383.281 li
223.32 403.441 li
297.84 412.922 li
372.359 399.238 li
446.879 407.16 li
521.398 394.922 li
595.922 401.16 li
670.441 393.48 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
69.559 351.898 mo
78.559 351.898 li
78.559 360.898 li
69.559 360.898 li
cp
.0319219 .621851 .911223 .000427253 cmyk
@
144.078 378.66 mo
153.078 378.66 li
153.078 387.66 li
144.078 387.66 li
cp
@
218.719 398.941 mo
227.719 398.941 li
227.719 407.941 li
218.719 407.941 li
cp
@
293.238 408.301 mo
302.238 408.301 li
302.238 417.301 li
293.238 417.301 li
cp
@
367.762 394.738 mo
376.762 394.738 li
376.762 403.738 li
367.762 403.738 li
cp
@
442.281 402.66 mo
451.281 402.66 li
451.281 411.66 li
442.281 411.66 li
cp
@
516.801 390.301 mo
525.801 390.301 li
525.801 399.301 li
516.801 399.301 li
cp
@
591.32 396.539 mo
600.32 396.539 li
600.32 405.539 li
591.32 405.539 li
cp
@
665.84 388.859 mo
674.84 388.859 li
674.84 397.859 li
665.84 397.859 li
cp
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.281 352.32 mo
148.801 376.441 li
223.32 387.121 li
297.84 416.641 li
372.359 400.078 li
446.879 397.199 li
521.398 390 li
595.922 383.52 li
670.441 409.199 li
.619135 .109529 .981689 .00570687 cmyk
@
grestore
69.078 347.219 mo
79.039 347.219 li
79.039 357.18 li
69.078 357.18 li
cp
.619135 .109529 .981689 .00570687 cmyk
@
143.602 371.34 mo
153.559 371.34 li
153.559 381.301 li
143.602 381.301 li
cp
@
218.238 382.141 mo
228.199 382.141 li
228.199 392.102 li
218.238 392.102 li
cp
@
292.762 411.539 mo
302.719 411.539 li
302.719 421.5 li
292.762 421.5 li
cp
@
367.281 394.98 mo
377.238 394.98 li
377.238 404.941 li
367.281 404.941 li
cp
@
441.801 392.102 mo
451.762 392.102 li
451.762 402.059 li
441.801 402.059 li
cp
@
516.32 385.02 mo
526.281 385.02 li
526.281 394.981 li
516.32 394.981 li
cp
@
590.84 378.422 mo
600.801 378.422 li
600.801 388.379 li
590.84 388.379 li
cp
@
665.359 404.102 mo
675.32 404.102 li
675.32 414.059 li
665.359 414.059 li
cp
@
gsave
74.16 30.121 mo
671.16 30.121 li
671.16 507.359 li
74.16 507.359 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.281 335.16 mo
148.801 384.48 li
223.32 392.281 li
297.84 401.398 li
372.359 408.602 li
446.879 412.801 li
521.398 389.879 li
595.922 408.121 li
670.441 397.68 li
0 .990631 1 .000396735 cmyk
@
grestore
69.078 330.059 mo
79.039 330.059 li
79.039 340.02 li
69.078 340.02 li
cp
0 .990631 1 .000396735 cmyk
@
143.602 379.5 mo
153.559 379.5 li
153.559 389.461 li
143.602 389.461 li
cp
@
218.238 387.301 mo
228.199 387.301 li
228.199 397.262 li
218.238 397.262 li
cp
@
292.762 396.422 mo
302.719 396.422 li
302.719 406.379 li
292.762 406.379 li
cp
@
367.281 403.621 mo
377.238 403.621 li
377.238 413.578 li
367.281 413.578 li
cp
@
441.801 407.699 mo
451.762 407.699 li
451.762 417.66 li
441.801 417.66 li
cp
@
516.32 384.898 mo
526.281 384.898 li
526.281 394.859 li
516.32 394.859 li
cp
@
590.84 403.02 mo
600.801 403.02 li
600.801 412.981 li
590.84 412.981 li
cp
@
665.359 392.699 mo
675.32 392.699 li
675.32 402.66 li
665.359 402.66 li
cp
@
36.422 497.414 mo
61.238 497.414 li
61.238 514.504 li
36.422 514.504 li
cp
0 0 0 0 cmyk
ef
43.07 506.375 mo
43.066 507.059 43.012 507.684 42.906 508.246 cv
42.797 508.812 42.621 509.297 42.371 509.699 cv
42.121 510.105 41.793 510.418 41.395 510.637 cv
40.988 510.859 40.492 510.969 39.906 510.969 cv
39.344 510.969 38.875 510.871 38.492 510.672 cv
38.109 510.473 37.801 510.18 37.566 509.793 cv
37.332 509.406 37.164 508.93 37.07 508.363 cv
36.969 507.801 36.922 507.152 36.926 506.418 cv
36.922 505.742 36.977 505.121 37.09 504.555 cv
37.195 503.988 37.375 503.504 37.625 503.098 cv
37.871 502.695 38.195 502.379 38.598 502.156 cv
39 501.937 39.492 501.828 40.082 501.824 cv
40.641 501.828 41.113 501.93 41.5 502.125 cv
41.879 502.328 42.188 502.621 42.422 503.004 cv
42.652 503.395 42.82 503.867 42.922 504.43 cv
43.02 504.996 43.066 505.645 43.07 506.375 cv
cp
41.863 506.457 mo
41.859 506.016 41.844 505.621 41.813 505.266 cv
41.777 504.914 41.73 504.602 41.672 504.332 cv
41.605 504.062 41.523 503.828 41.43 503.633 cv
41.328 503.437 41.211 503.277 41.078 503.152 cv
40.938 503.027 40.781 502.937 40.605 502.879 cv
40.43 502.824 40.234 502.797 40.016 502.793 cv
39.625 502.797 39.309 502.887 39.066 503.066 cv
38.824 503.25 38.633 503.5 38.492 503.82 cv
38.352 504.141 38.254 504.52 38.207 504.949 cv
38.152 505.383 38.129 505.844 38.133 506.336 cv
38.129 507.004 38.164 507.57 38.234 508.031 cv
38.305 508.5 38.414 508.879 38.563 509.168 cv
38.711 509.465 38.898 509.676 39.133 509.805 cv
39.359 509.941 39.641 510.008 39.973 510.004 cv
40.227 510.008 40.453 509.965 40.648 509.879 cv
40.844 509.797 41.008 509.68 41.148 509.523 cv
41.285 509.371 41.402 509.187 41.496 508.973 cv
41.586 508.758 41.66 508.52 41.719 508.258 cv
41.77 508 41.809 507.719 41.832 507.41 cv
41.852 507.109 41.859 506.789 41.863 506.457 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.016 510.09 mo
46.012 510.418 45.957 510.637 45.855 510.742 cv
45.746 510.848 45.551 510.898 45.27 510.902 cv
44.988 510.898 44.797 510.848 44.695 510.746 cv
44.586 510.641 44.535 510.43 44.539 510.113 cv
44.535 509.789 44.59 509.574 44.699 509.465 cv
44.809 509.359 45.004 509.305 45.289 509.301 cv
45.563 509.305 45.754 509.359 45.859 509.461 cv
45.961 509.57 46.012 509.777 46.016 510.09 cv
cp
f
53.73 506.375 mo
53.727 507.059 53.672 507.684 53.566 508.246 cv
53.457 508.812 53.281 509.297 53.031 509.699 cv
52.781 510.105 52.453 510.418 52.055 510.637 cv
51.648 510.859 51.152 510.969 50.566 510.969 cv
50.004 510.969 49.535 510.871 49.152 510.672 cv
48.77 510.473 48.461 510.18 48.227 509.793 cv
47.992 509.406 47.824 508.93 47.73 508.363 cv
47.629 507.801 47.582 507.152 47.586 506.418 cv
47.582 505.742 47.637 505.121 47.75 504.555 cv
47.855 503.988 48.035 503.504 48.285 503.098 cv
48.531 502.695 48.855 502.379 49.258 502.156 cv
49.66 501.937 50.152 501.828 50.742 501.824 cv
51.301 501.828 51.773 501.93 52.16 502.125 cv
52.539 502.328 52.848 502.621 53.082 503.004 cv
53.313 503.395 53.48 503.867 53.582 504.43 cv
53.68 504.996 53.727 505.645 53.73 506.375 cv
cp
52.523 506.457 mo
52.52 506.016 52.504 505.621 52.473 505.266 cv
52.438 504.914 52.391 504.602 52.332 504.332 cv
52.266 504.062 52.184 503.828 52.09 503.633 cv
51.988 503.437 51.871 503.277 51.738 503.152 cv
51.598 503.027 51.441 502.937 51.266 502.879 cv
51.09 502.824 50.895 502.797 50.676 502.793 cv
50.285 502.797 49.969 502.887 49.727 503.066 cv
49.484 503.25 49.293 503.5 49.152 503.82 cv
49.012 504.141 48.914 504.52 48.867 504.949 cv
48.813 505.383 48.789 505.844 48.793 506.336 cv
48.789 507.004 48.824 507.57 48.895 508.031 cv
48.965 508.5 49.074 508.879 49.223 509.168 cv
49.371 509.465 49.559 509.676 49.793 509.805 cv
50.02 509.941 50.301 510.008 50.633 510.004 cv
50.887 510.008 51.113 509.965 51.309 509.879 cv
51.504 509.797 51.668 509.68 51.809 509.523 cv
51.945 509.371 52.063 509.187 52.156 508.973 cv
52.246 508.758 52.32 508.52 52.379 508.258 cv
52.43 508 52.469 507.719 52.492 507.41 cv
52.512 507.109 52.52 506.789 52.523 506.457 cv
cp
f
60.805 506.375 mo
60.801 507.059 60.746 507.684 60.641 508.246 cv
60.531 508.812 60.355 509.297 60.105 509.699 cv
59.855 510.105 59.527 510.418 59.129 510.637 cv
58.723 510.859 58.227 510.969 57.641 510.969 cv
57.078 510.969 56.609 510.871 56.227 510.672 cv
55.844 510.473 55.535 510.18 55.301 509.793 cv
55.066 509.406 54.898 508.93 54.805 508.363 cv
54.703 507.801 54.656 507.152 54.66 506.418 cv
54.656 505.742 54.711 505.121 54.824 504.555 cv
54.93 503.988 55.109 503.504 55.359 503.098 cv
55.605 502.695 55.93 502.379 56.332 502.156 cv
56.734 501.937 57.227 501.828 57.816 501.824 cv
58.375 501.828 58.848 501.93 59.234 502.125 cv
59.613 502.328 59.922 502.621 60.156 503.004 cv
60.387 503.395 60.555 503.867 60.656 504.43 cv
60.754 504.996 60.801 505.645 60.805 506.375 cv
cp
59.598 506.457 mo
59.594 506.016 59.578 505.621 59.547 505.266 cv
59.512 504.914 59.465 504.602 59.406 504.332 cv
59.34 504.062 59.258 503.828 59.164 503.633 cv
59.063 503.437 58.945 503.277 58.813 503.152 cv
58.672 503.027 58.516 502.937 58.34 502.879 cv
58.164 502.824 57.969 502.797 57.75 502.793 cv
57.359 502.797 57.043 502.887 56.801 503.066 cv
56.559 503.25 56.367 503.5 56.227 503.82 cv
56.086 504.141 55.988 504.52 55.941 504.949 cv
55.887 505.383 55.863 505.844 55.867 506.336 cv
55.863 507.004 55.898 507.57 55.969 508.031 cv
56.039 508.5 56.148 508.879 56.297 509.168 cv
56.445 509.465 56.633 509.676 56.867 509.805 cv
57.094 509.941 57.375 510.008 57.707 510.004 cv
57.961 510.008 58.188 509.965 58.383 509.879 cv
58.578 509.797 58.742 509.68 58.883 509.523 cv
59.02 509.371 59.137 509.187 59.23 508.973 cv
59.32 508.758 59.395 508.52 59.453 508.258 cv
59.504 508 59.543 507.719 59.566 507.41 cv
59.586 507.109 59.594 506.789 59.598 506.457 cv
cp
f
36.422 457.699 mo
61.238 457.699 li
61.238 474.789 li
36.422 474.789 li
cp
0 0 0 0 cmyk
ef
42.785 470.656 mo
42.781 470.746 42.773 470.816 42.762 470.875 cv
42.746 470.937 42.727 470.988 42.707 471.02 cv
42.684 471.059 42.66 471.082 42.629 471.098 cv
42.598 471.113 42.566 471.121 42.539 471.121 cv
37.902 471.121 li
37.867 471.121 37.84 471.113 37.813 471.098 cv
37.785 471.082 37.758 471.059 37.734 471.02 cv
37.707 470.988 37.688 470.937 37.676 470.875 cv
37.66 470.816 37.652 470.746 37.656 470.656 cv
37.652 470.578 37.66 470.504 37.676 470.441 cv
37.688 470.383 37.703 470.336 37.727 470.297 cv
37.742 470.262 37.77 470.23 37.801 470.207 cv
37.832 470.187 37.863 470.18 37.902 470.176 cv
39.754 470.176 li
39.754 463.43 li
38.039 464.449 li
37.949 464.5 37.879 464.527 37.832 464.535 cv
37.777 464.543 37.734 464.535 37.703 464.504 cv
37.668 464.477 37.648 464.426 37.637 464.355 cv
37.625 464.289 37.617 464.203 37.621 464.094 cv
37.617 464.02 37.621 463.953 37.633 463.895 cv
37.637 463.844 37.648 463.797 37.664 463.758 cv
37.676 463.723 37.695 463.691 37.719 463.664 cv
37.742 463.637 37.773 463.609 37.82 463.582 cv
39.863 462.27 li
39.879 462.258 39.898 462.246 39.93 462.238 cv
39.953 462.23 39.988 462.223 40.035 462.211 cv
40.074 462.203 40.125 462.195 40.18 462.191 cv
40.234 462.191 40.301 462.191 40.387 462.187 cv
40.492 462.191 40.586 462.195 40.66 462.203 cv
40.73 462.211 40.785 462.227 40.832 462.242 cv
40.871 462.262 40.898 462.281 40.914 462.305 cv
40.922 462.332 40.93 462.355 40.934 462.379 cv
40.934 470.176 li
42.539 470.176 li
42.574 470.18 42.609 470.187 42.641 470.207 cv
42.672 470.23 42.695 470.262 42.719 470.297 cv
42.734 470.336 42.75 470.383 42.766 470.441 cv
42.773 470.504 42.781 470.578 42.785 470.656 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.055 470.375 mo
46.055 470.703 46 470.918 45.895 471.023 cv
45.785 471.129 45.59 471.18 45.309 471.184 cv
45.031 471.18 44.84 471.129 44.738 471.027 cv
44.629 470.922 44.578 470.711 44.582 470.395 cv
44.578 470.07 44.633 469.855 44.742 469.746 cv
44.848 469.641 45.043 469.586 45.328 469.586 cv
45.602 469.586 45.789 469.641 45.898 469.746 cv
46 469.852 46.055 470.062 46.055 470.375 cv
cp
f
53.422 470.613 mo
53.418 470.699 53.414 470.773 53.402 470.836 cv
53.391 470.902 53.375 470.957 53.355 470.996 cv
53.332 471.043 53.305 471.074 53.273 471.09 cv
53.238 471.113 53.199 471.121 53.16 471.121 cv
48.258 471.121 li
48.195 471.121 48.137 471.113 48.09 471.098 cv
48.039 471.082 48 471.059 47.965 471.02 cv
47.93 470.988 47.902 470.934 47.891 470.863 cv
47.871 470.793 47.863 470.707 47.867 470.605 cv
47.863 470.516 47.867 470.437 47.875 470.367 cv
47.879 470.301 47.895 470.242 47.922 470.187 cv
47.945 470.137 47.977 470.082 48.012 470.027 cv
48.047 469.977 48.09 469.922 48.148 469.859 cv
49.922 468.035 li
50.332 467.617 50.66 467.242 50.91 466.906 cv
51.156 466.578 51.348 466.273 51.48 465.996 cv
51.613 465.723 51.699 465.473 51.746 465.246 cv
51.785 465.023 51.809 464.812 51.809 464.617 cv
51.809 464.422 51.773 464.238 51.707 464.059 cv
51.641 463.887 51.547 463.73 51.422 463.594 cv
51.297 463.465 51.141 463.359 50.953 463.277 cv
50.766 463.203 50.547 463.164 50.301 463.16 cv
50.012 463.164 49.754 463.203 49.527 463.277 cv
49.297 463.359 49.098 463.445 48.926 463.531 cv
48.754 463.625 48.609 463.707 48.492 463.785 cv
48.375 463.863 48.289 463.902 48.238 463.902 cv
48.203 463.902 48.172 463.895 48.148 463.875 cv
48.117 463.859 48.098 463.828 48.082 463.785 cv
48.066 463.746 48.051 463.691 48.043 463.621 cv
48.031 463.555 48.027 463.473 48.031 463.375 cv
48.027 463.309 48.031 463.25 48.039 463.199 cv
48.043 463.148 48.051 463.105 48.063 463.066 cv
48.07 463.031 48.086 462.996 48.105 462.965 cv
48.125 462.934 48.16 462.895 48.219 462.844 cv
48.27 462.797 48.363 462.73 48.5 462.648 cv
48.633 462.566 48.805 462.488 49.008 462.406 cv
49.211 462.328 49.434 462.258 49.68 462.203 cv
49.922 462.148 50.18 462.121 50.453 462.121 cv
50.879 462.121 51.254 462.184 51.578 462.305 cv
51.898 462.426 52.164 462.59 52.379 462.801 cv
52.59 463.012 52.75 463.258 52.855 463.531 cv
52.961 463.812 53.016 464.109 53.016 464.422 cv
53.016 464.711 52.988 464.992 52.938 465.27 cv
52.887 465.555 52.781 465.859 52.621 466.184 cv
52.457 466.512 52.223 466.875 51.918 467.273 cv
51.609 467.676 51.203 468.137 50.699 468.652 cv
49.293 470.121 li
53.152 470.121 li
53.184 470.125 53.219 470.137 53.258 470.152 cv
53.289 470.176 53.32 470.207 53.348 470.246 cv
53.371 470.289 53.391 470.34 53.402 470.398 cv
53.414 470.465 53.418 470.535 53.422 470.613 cv
cp
f
60.496 468.27 mo
60.496 468.746 60.414 469.168 60.254 469.539 cv
60.094 469.91 59.867 470.223 59.578 470.477 cv
59.281 470.73 58.934 470.926 58.531 471.055 cv
58.125 471.187 57.676 471.25 57.184 471.25 cv
56.906 471.25 56.645 471.23 56.402 471.191 cv
56.152 471.152 55.934 471.105 55.746 471.051 cv
55.551 470.996 55.395 470.941 55.27 470.883 cv
55.145 470.832 55.066 470.789 55.035 470.754 cv
55 470.723 54.977 470.691 54.965 470.664 cv
54.949 470.637 54.934 470.605 54.926 470.562 cv
54.91 470.527 54.902 470.477 54.902 470.414 cv
54.895 470.355 54.895 470.285 54.895 470.203 cv
54.895 470.129 54.898 470.059 54.906 469.996 cv
54.914 469.934 54.926 469.883 54.945 469.844 cv
54.961 469.805 54.98 469.777 55.008 469.758 cv
55.031 469.742 55.063 469.734 55.094 469.73 cv
55.141 469.734 55.211 469.762 55.305 469.816 cv
55.398 469.875 55.527 469.937 55.691 470.004 cv
55.855 470.07 56.055 470.133 56.297 470.191 cv
56.531 470.25 56.816 470.277 57.152 470.277 cv
57.453 470.277 57.734 470.242 57.992 470.168 cv
58.246 470.098 58.469 469.984 58.656 469.828 cv
58.84 469.676 58.984 469.48 59.09 469.242 cv
59.195 469.008 59.246 468.719 59.25 468.379 cv
59.246 468.098 59.203 467.848 59.113 467.629 cv
59.023 467.41 58.887 467.23 58.703 467.086 cv
58.516 466.945 58.281 466.84 58 466.766 cv
57.715 466.695 57.375 466.656 56.988 466.656 cv
56.703 466.656 56.465 466.672 56.266 466.699 cv
56.063 466.73 55.875 466.746 55.703 466.742 cv
55.574 466.746 55.48 466.715 55.43 466.652 cv
55.371 466.594 55.344 466.48 55.348 466.309 cv
55.348 462.695 li
55.344 462.547 55.379 462.437 55.453 462.359 cv
55.52 462.289 55.621 462.25 55.758 462.25 cv
59.688 462.25 li
59.723 462.25 59.758 462.262 59.793 462.281 cv
59.824 462.305 59.852 462.336 59.879 462.375 cv
59.898 462.418 59.914 462.469 59.93 462.531 cv
59.938 462.598 59.945 462.676 59.949 462.758 cv
59.945 462.926 59.922 463.051 59.883 463.141 cv
59.836 463.234 59.777 463.281 59.699 463.277 cv
56.527 463.277 li
56.527 465.766 li
56.68 465.746 56.836 465.734 57 465.727 cv
57.156 465.723 57.344 465.719 57.559 465.719 cv
58.043 465.719 58.469 465.781 58.836 465.902 cv
59.199 466.023 59.504 466.195 59.754 466.414 cv
59.996 466.641 60.184 466.906 60.309 467.219 cv
60.434 467.535 60.496 467.887 60.496 468.27 cv
cp
f
36.422 417.988 mo
61.238 417.988 li
61.238 435.078 li
36.422 435.078 li
cp
0 0 0 0 cmyk
ef
42.766 430.891 mo
42.762 430.977 42.758 431.051 42.746 431.113 cv
42.734 431.18 42.719 431.234 42.699 431.273 cv
42.676 431.32 42.648 431.352 42.617 431.367 cv
42.582 431.391 42.543 431.398 42.504 431.398 cv
37.602 431.398 li
37.539 431.398 37.48 431.391 37.434 431.375 cv
37.383 431.359 37.344 431.336 37.309 431.297 cv
37.273 431.266 37.246 431.211 37.234 431.141 cv
37.215 431.07 37.207 430.984 37.211 430.883 cv
37.207 430.793 37.211 430.715 37.219 430.645 cv
37.223 430.578 37.238 430.52 37.266 430.465 cv
37.289 430.414 37.32 430.359 37.355 430.305 cv
37.391 430.254 37.434 430.199 37.492 430.137 cv
39.266 428.312 li
39.676 427.895 40.004 427.52 40.254 427.184 cv
40.5 426.855 40.691 426.551 40.824 426.273 cv
40.957 426 41.043 425.75 41.09 425.523 cv
41.129 425.301 41.152 425.09 41.152 424.895 cv
41.152 424.699 41.117 424.516 41.051 424.336 cv
40.984 424.164 40.891 424.008 40.766 423.871 cv
40.641 423.742 40.484 423.637 40.297 423.555 cv
40.109 423.48 39.891 423.441 39.645 423.437 cv
39.355 423.441 39.098 423.48 38.871 423.555 cv
38.641 423.637 38.441 423.723 38.27 423.809 cv
38.098 423.902 37.953 423.984 37.836 424.062 cv
37.719 424.141 37.633 424.18 37.582 424.18 cv
37.547 424.18 37.516 424.172 37.492 424.152 cv
37.461 424.137 37.441 424.105 37.426 424.062 cv
37.41 424.023 37.395 423.969 37.387 423.898 cv
37.375 423.832 37.371 423.75 37.375 423.652 cv
37.371 423.586 37.375 423.527 37.383 423.477 cv
37.387 423.426 37.395 423.383 37.406 423.344 cv
37.414 423.309 37.43 423.273 37.449 423.242 cv
37.469 423.211 37.504 423.172 37.563 423.121 cv
37.613 423.074 37.707 423.008 37.844 422.926 cv
37.977 422.844 38.148 422.766 38.352 422.684 cv
38.555 422.605 38.777 422.535 39.023 422.48 cv
39.266 422.426 39.523 422.398 39.797 422.398 cv
40.223 422.398 40.598 422.461 40.922 422.582 cv
41.242 422.703 41.508 422.867 41.723 423.078 cv
41.934 423.289 42.094 423.535 42.199 423.809 cv
42.305 424.09 42.359 424.387 42.359 424.699 cv
42.359 424.988 42.332 425.27 42.281 425.547 cv
42.23 425.832 42.125 426.137 41.965 426.461 cv
41.801 426.789 41.566 427.152 41.262 427.551 cv
40.953 427.953 40.547 428.414 40.043 428.93 cv
38.637 430.398 li
42.496 430.398 li
42.527 430.402 42.563 430.414 42.602 430.43 cv
42.633 430.453 42.664 430.484 42.691 430.523 cv
42.715 430.566 42.734 430.617 42.746 430.676 cv
42.758 430.742 42.762 430.812 42.766 430.891 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.055 430.652 mo
46.055 430.98 46 431.195 45.895 431.301 cv
45.785 431.406 45.59 431.457 45.309 431.461 cv
45.031 431.457 44.84 431.406 44.738 431.305 cv
44.629 431.199 44.578 430.988 44.582 430.672 cv
44.578 430.348 44.633 430.133 44.742 430.023 cv
44.848 429.918 45.043 429.863 45.328 429.863 cv
45.602 429.863 45.789 429.918 45.898 430.023 cv
46 430.129 46.055 430.34 46.055 430.652 cv
cp
f
53.379 428.547 mo
53.379 429.023 53.297 429.445 53.137 429.816 cv
52.977 430.187 52.75 430.5 52.461 430.754 cv
52.164 431.008 51.816 431.203 51.414 431.332 cv
51.008 431.465 50.559 431.527 50.066 431.527 cv
49.789 431.527 49.527 431.508 49.285 431.469 cv
49.035 431.43 48.816 431.383 48.629 431.328 cv
48.434 431.273 48.277 431.219 48.152 431.16 cv
48.027 431.109 47.949 431.066 47.918 431.031 cv
47.883 431 47.859 430.969 47.848 430.941 cv
47.832 430.914 47.816 430.883 47.809 430.84 cv
47.793 430.805 47.785 430.754 47.785 430.691 cv
47.777 430.633 47.777 430.562 47.777 430.48 cv
47.777 430.406 47.781 430.336 47.789 430.273 cv
47.797 430.211 47.809 430.16 47.828 430.121 cv
47.844 430.082 47.863 430.055 47.891 430.035 cv
47.914 430.02 47.945 430.012 47.977 430.008 cv
48.023 430.012 48.094 430.039 48.188 430.094 cv
48.281 430.152 48.41 430.215 48.574 430.281 cv
48.738 430.348 48.938 430.41 49.18 430.469 cv
49.414 430.527 49.699 430.555 50.035 430.555 cv
50.336 430.555 50.617 430.52 50.875 430.445 cv
51.129 430.375 51.352 430.262 51.539 430.105 cv
51.723 429.953 51.867 429.758 51.973 429.52 cv
52.078 429.285 52.129 428.996 52.133 428.656 cv
52.129 428.375 52.086 428.125 51.996 427.906 cv
51.906 427.687 51.77 427.508 51.586 427.363 cv
51.398 427.223 51.164 427.117 50.883 427.043 cv
50.598 426.973 50.258 426.934 49.871 426.934 cv
49.586 426.934 49.348 426.949 49.148 426.977 cv
48.945 427.008 48.758 427.023 48.586 427.02 cv
48.457 427.023 48.363 426.992 48.313 426.93 cv
48.254 426.871 48.227 426.758 48.23 426.586 cv
48.23 422.973 li
48.227 422.824 48.262 422.715 48.336 422.637 cv
48.402 422.566 48.504 422.527 48.641 422.527 cv
52.57 422.527 li
52.605 422.527 52.641 422.539 52.676 422.559 cv
52.707 422.582 52.734 422.613 52.762 422.652 cv
52.781 422.695 52.797 422.746 52.813 422.809 cv
52.82 422.875 52.828 422.953 52.832 423.035 cv
52.828 423.203 52.805 423.328 52.766 423.418 cv
52.719 423.512 52.66 423.559 52.582 423.555 cv
49.41 423.555 li
49.41 426.043 li
49.563 426.023 49.719 426.012 49.883 426.004 cv
50.039 426 50.227 425.996 50.441 425.996 cv
50.926 425.996 51.352 426.059 51.719 426.18 cv
52.082 426.301 52.387 426.473 52.637 426.691 cv
52.879 426.918 53.066 427.184 53.191 427.496 cv
53.316 427.812 53.379 428.164 53.379 428.547 cv
cp
f
60.832 426.941 mo
60.828 427.625 60.777 428.246 60.672 428.809 cv
60.563 429.371 60.383 429.855 60.137 430.258 cv
59.883 430.664 59.555 430.977 59.156 431.195 cv
58.75 431.418 58.258 431.527 57.672 431.527 cv
57.113 431.527 56.641 431.43 56.262 431.23 cv
55.879 431.035 55.574 430.742 55.34 430.355 cv
55.105 429.969 54.938 429.496 54.844 428.93 cv
54.742 428.367 54.695 427.719 54.695 426.984 cv
54.695 426.312 54.75 425.691 54.859 425.125 cv
54.969 424.562 55.145 424.078 55.395 423.672 cv
55.637 423.27 55.961 422.957 56.367 422.73 cv
56.766 422.512 57.262 422.398 57.852 422.398 cv
58.41 422.398 58.883 422.5 59.266 422.695 cv
59.648 422.898 59.953 423.191 60.188 423.574 cv
60.418 423.965 60.586 424.437 60.684 425 cv
60.781 425.562 60.828 426.211 60.832 426.941 cv
cp
59.625 427.023 mo
59.621 426.582 59.605 426.184 59.578 425.832 cv
59.543 425.48 59.496 425.172 59.438 424.902 cv
59.371 424.633 59.293 424.402 59.195 424.207 cv
59.098 424.016 58.98 423.855 58.844 423.727 cv
58.703 423.602 58.543 423.508 58.371 423.449 cv
58.191 423.395 57.996 423.367 57.781 423.363 cv
57.391 423.367 57.074 423.457 56.836 423.641 cv
56.59 423.824 56.398 424.078 56.262 424.395 cv
56.121 424.715 56.027 425.086 55.977 425.516 cv
55.926 425.945 55.902 426.41 55.902 426.902 cv
55.902 427.566 55.934 428.129 56.004 428.59 cv
56.07 429.059 56.18 429.437 56.332 429.727 cv
56.477 430.023 56.668 430.234 56.898 430.363 cv
57.129 430.5 57.41 430.566 57.742 430.562 cv
57.996 430.566 58.219 430.527 58.414 430.441 cv
58.605 430.363 58.773 430.242 58.914 430.086 cv
59.055 429.934 59.168 429.75 59.262 429.535 cv
59.348 429.32 59.422 429.082 59.48 428.82 cv
59.531 428.562 59.57 428.281 59.594 427.977 cv
59.613 427.672 59.621 427.355 59.625 427.023 cv
cp
f
36.422 378.281 mo
61.238 378.281 li
61.238 395.371 li
36.422 395.371 li
cp
0 0 0 0 cmyk
ef
42.695 389.145 mo
42.691 389.555 42.621 389.922 42.48 390.246 cv
42.336 390.574 42.133 390.855 41.871 391.086 cv
41.605 391.32 41.277 391.496 40.891 391.621 cv
40.5 391.746 40.063 391.809 39.578 391.809 cv
39.273 391.809 38.996 391.781 38.742 391.734 cv
38.48 391.687 38.25 391.637 38.055 391.566 cv
37.852 391.504 37.688 391.434 37.555 391.363 cv
37.422 391.293 37.336 391.242 37.305 391.207 cv
37.266 391.18 37.242 391.148 37.227 391.113 cv
37.207 391.082 37.188 391.043 37.176 390.996 cv
37.16 390.953 37.152 390.898 37.145 390.828 cv
37.137 390.766 37.133 390.684 37.137 390.582 cv
37.133 390.422 37.148 390.309 37.184 390.242 cv
37.215 390.18 37.262 390.145 37.324 390.145 cv
37.367 390.145 37.449 390.184 37.574 390.254 cv
37.695 390.332 37.855 390.41 38.051 390.492 cv
38.242 390.578 38.469 390.656 38.734 390.727 cv
38.992 390.801 39.285 390.836 39.605 390.836 cv
39.914 390.836 40.184 390.797 40.422 390.719 cv
40.652 390.641 40.852 390.531 41.012 390.391 cv
41.168 390.25 41.285 390.082 41.367 389.887 cv
41.445 389.691 41.484 389.48 41.488 389.254 cv
41.484 389.004 41.434 388.777 41.336 388.574 cv
41.23 388.375 41.082 388.203 40.891 388.055 cv
40.691 387.91 40.453 387.797 40.168 387.719 cv
39.883 387.641 39.559 387.602 39.195 387.602 cv
38.324 387.602 li
38.281 387.602 38.246 387.594 38.211 387.578 cv
38.176 387.562 38.145 387.535 38.121 387.496 cv
38.094 387.461 38.074 387.414 38.059 387.355 cv
38.043 387.297 38.035 387.219 38.035 387.121 cv
38.035 387.035 38.039 386.965 38.055 386.906 cv
38.063 386.852 38.082 386.805 38.113 386.77 cv
38.137 386.734 38.168 386.711 38.199 386.691 cv
38.23 386.68 38.266 386.672 38.309 386.668 cv
39.082 386.668 li
39.383 386.672 39.652 386.633 39.895 386.551 cv
40.129 386.477 40.332 386.363 40.504 386.215 cv
40.668 386.07 40.797 385.895 40.887 385.691 cv
40.977 385.488 41.023 385.262 41.023 385.008 cv
41.023 384.828 40.992 384.652 40.934 384.484 cv
40.871 384.32 40.781 384.176 40.664 384.051 cv
40.543 383.926 40.391 383.828 40.211 383.758 cv
40.023 383.687 39.813 383.652 39.57 383.652 cv
39.305 383.652 39.059 383.695 38.84 383.773 cv
38.613 383.855 38.418 383.941 38.246 384.031 cv
38.07 384.125 37.926 384.211 37.813 384.289 cv
37.699 384.371 37.617 384.41 37.574 384.406 cv
37.539 384.41 37.512 384.402 37.488 384.391 cv
37.461 384.379 37.441 384.355 37.426 384.32 cv
37.41 384.289 37.398 384.242 37.391 384.176 cv
37.383 384.117 37.379 384.035 37.383 383.934 cv
37.379 383.867 37.379 383.809 37.387 383.754 cv
37.387 383.703 37.398 383.656 37.414 383.613 cv
37.43 383.578 37.445 383.543 37.465 383.508 cv
37.48 383.48 37.512 383.441 37.555 383.395 cv
37.598 383.352 37.684 383.289 37.82 383.207 cv
37.949 383.125 38.113 383.047 38.309 382.965 cv
38.5 382.887 38.723 382.816 38.98 382.762 cv
39.23 382.707 39.504 382.68 39.801 382.68 cv
40.207 382.68 40.57 382.734 40.883 382.836 cv
41.195 382.945 41.453 383.094 41.664 383.281 cv
41.867 383.477 42.023 383.707 42.129 383.973 cv
42.23 384.242 42.281 384.535 42.285 384.859 cv
42.281 385.141 42.246 385.402 42.176 385.637 cv
42.102 385.879 41.992 386.09 41.852 386.273 cv
41.707 386.461 41.535 386.617 41.332 386.746 cv
41.125 386.879 40.887 386.973 40.617 387.02 cv
40.617 387.031 li
40.922 387.066 41.203 387.141 41.457 387.262 cv
41.711 387.383 41.93 387.535 42.113 387.719 cv
42.293 387.902 42.434 388.117 42.539 388.359 cv
42.641 388.605 42.691 388.867 42.695 389.145 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.055 390.934 mo
46.055 391.262 46 391.477 45.895 391.582 cv
45.785 391.687 45.59 391.738 45.309 391.742 cv
45.031 391.738 44.84 391.687 44.738 391.586 cv
44.629 391.48 44.578 391.27 44.582 390.953 cv
44.578 390.629 44.633 390.414 44.742 390.305 cv
44.848 390.199 45.043 390.145 45.328 390.145 cv
45.602 390.145 45.789 390.199 45.898 390.305 cv
46 390.41 46.055 390.621 46.055 390.934 cv
cp
f
53.551 383.316 mo
53.547 383.402 53.543 383.477 53.539 383.539 cv
53.531 383.609 53.523 383.672 53.512 383.73 cv
53.5 383.797 53.484 383.855 53.465 383.91 cv
53.441 383.969 53.418 384.031 53.395 384.09 cv
50.199 391.453 li
50.172 391.512 50.145 391.555 50.113 391.586 cv
50.078 391.621 50.035 391.648 49.98 391.668 cv
49.926 391.687 49.855 391.699 49.777 391.711 cv
49.691 391.715 49.594 391.719 49.477 391.723 cv
49.32 391.719 49.199 391.711 49.113 391.699 cv
49.027 391.684 48.965 391.668 48.926 391.637 cv
48.887 391.609 48.867 391.57 48.875 391.527 cv
48.875 391.484 48.891 391.434 48.922 391.371 cv
52.281 383.844 li
48.023 383.844 li
47.938 383.848 47.871 383.801 47.828 383.707 cv
47.785 383.617 47.766 383.488 47.766 383.324 cv
47.766 383.238 47.77 383.164 47.781 383.098 cv
47.793 383.035 47.809 382.98 47.832 382.937 cv
47.852 382.895 47.879 382.863 47.914 382.84 cv
47.945 382.82 47.984 382.809 48.023 382.809 cv
53.195 382.809 li
53.254 382.809 53.309 382.816 53.359 382.832 cv
53.406 382.848 53.441 382.875 53.469 382.914 cv
53.492 382.953 53.512 383.008 53.527 383.07 cv
53.539 383.137 53.547 383.219 53.551 383.316 cv
cp
f
60.496 388.828 mo
60.496 389.305 60.414 389.727 60.254 390.098 cv
60.094 390.469 59.867 390.781 59.578 391.035 cv
59.281 391.289 58.934 391.484 58.531 391.613 cv
58.125 391.746 57.676 391.809 57.184 391.809 cv
56.906 391.809 56.645 391.789 56.402 391.75 cv
56.152 391.711 55.934 391.664 55.746 391.609 cv
55.551 391.555 55.395 391.5 55.27 391.441 cv
55.145 391.391 55.066 391.348 55.035 391.312 cv
55 391.281 54.977 391.25 54.965 391.223 cv
54.949 391.195 54.934 391.164 54.926 391.121 cv
54.91 391.086 54.902 391.035 54.902 390.973 cv
54.895 390.914 54.895 390.844 54.895 390.762 cv
54.895 390.687 54.898 390.617 54.906 390.555 cv
54.914 390.492 54.926 390.441 54.945 390.402 cv
54.961 390.363 54.98 390.336 55.008 390.316 cv
55.031 390.301 55.063 390.293 55.094 390.289 cv
55.141 390.293 55.211 390.32 55.305 390.375 cv
55.398 390.434 55.527 390.496 55.691 390.562 cv
55.855 390.629 56.055 390.691 56.297 390.75 cv
56.531 390.809 56.816 390.836 57.152 390.836 cv
57.453 390.836 57.734 390.801 57.992 390.727 cv
58.246 390.656 58.469 390.543 58.656 390.387 cv
58.84 390.234 58.984 390.039 59.09 389.801 cv
59.195 389.566 59.246 389.277 59.25 388.937 cv
59.246 388.656 59.203 388.406 59.113 388.187 cv
59.023 387.969 58.887 387.789 58.703 387.645 cv
58.516 387.504 58.281 387.398 58 387.324 cv
57.715 387.254 57.375 387.215 56.988 387.215 cv
56.703 387.215 56.465 387.23 56.266 387.258 cv
56.063 387.289 55.875 387.305 55.703 387.301 cv
55.574 387.305 55.48 387.273 55.43 387.211 cv
55.371 387.152 55.344 387.039 55.348 386.867 cv
55.348 383.254 li
55.344 383.105 55.379 382.996 55.453 382.918 cv
55.52 382.848 55.621 382.809 55.758 382.809 cv
59.688 382.809 li
59.723 382.809 59.758 382.82 59.793 382.84 cv
59.824 382.863 59.852 382.895 59.879 382.934 cv
59.898 382.977 59.914 383.027 59.93 383.09 cv
59.938 383.156 59.945 383.234 59.949 383.316 cv
59.945 383.484 59.922 383.609 59.883 383.699 cv
59.836 383.793 59.777 383.84 59.699 383.836 cv
56.527 383.836 li
56.527 386.324 li
56.68 386.305 56.836 386.293 57 386.285 cv
57.156 386.281 57.344 386.277 57.559 386.277 cv
58.043 386.277 58.469 386.34 58.836 386.461 cv
59.199 386.582 59.504 386.754 59.754 386.973 cv
59.996 387.199 60.184 387.465 60.309 387.777 cv
60.434 388.094 60.496 388.445 60.496 388.828 cv
cp
f
36.422 338.57 mo
61.238 338.57 li
61.238 355.66 li
36.422 355.66 li
cp
0 0 0 0 cmyk
ef
42.723 349.109 mo
42.723 349.586 42.641 350.008 42.48 350.379 cv
42.32 350.75 42.094 351.062 41.805 351.316 cv
41.508 351.57 41.16 351.766 40.758 351.895 cv
40.352 352.027 39.902 352.09 39.41 352.09 cv
39.133 352.09 38.871 352.07 38.629 352.031 cv
38.379 351.992 38.16 351.945 37.973 351.891 cv
37.777 351.836 37.621 351.781 37.496 351.723 cv
37.371 351.672 37.293 351.629 37.262 351.594 cv
37.227 351.562 37.203 351.531 37.191 351.504 cv
37.176 351.477 37.16 351.445 37.152 351.402 cv
37.137 351.367 37.129 351.316 37.129 351.254 cv
37.121 351.195 37.121 351.125 37.121 351.043 cv
37.121 350.969 37.125 350.898 37.133 350.836 cv
37.141 350.773 37.152 350.723 37.172 350.684 cv
37.188 350.645 37.207 350.617 37.234 350.598 cv
37.258 350.582 37.289 350.574 37.32 350.57 cv
37.367 350.574 37.438 350.602 37.531 350.656 cv
37.625 350.715 37.754 350.777 37.918 350.844 cv
38.082 350.91 38.281 350.973 38.523 351.031 cv
38.758 351.09 39.043 351.117 39.379 351.117 cv
39.68 351.117 39.961 351.082 40.219 351.008 cv
40.473 350.937 40.695 350.824 40.883 350.668 cv
41.066 350.516 41.211 350.32 41.316 350.082 cv
41.422 349.848 41.473 349.559 41.477 349.219 cv
41.473 348.937 41.43 348.687 41.34 348.469 cv
41.25 348.25 41.113 348.07 40.93 347.926 cv
40.742 347.785 40.508 347.68 40.227 347.605 cv
39.941 347.535 39.602 347.496 39.215 347.496 cv
38.93 347.496 38.691 347.512 38.492 347.539 cv
38.289 347.57 38.102 347.586 37.93 347.582 cv
37.801 347.586 37.707 347.555 37.656 347.492 cv
37.598 347.434 37.57 347.32 37.574 347.148 cv
37.574 343.535 li
37.57 343.387 37.605 343.277 37.68 343.199 cv
37.746 343.129 37.848 343.09 37.984 343.09 cv
41.914 343.09 li
41.949 343.09 41.984 343.102 42.02 343.121 cv
42.051 343.145 42.078 343.176 42.105 343.215 cv
42.125 343.258 42.141 343.309 42.156 343.371 cv
42.164 343.437 42.172 343.516 42.176 343.598 cv
42.172 343.766 42.148 343.891 42.109 343.98 cv
42.063 344.074 42.004 344.121 41.926 344.117 cv
38.754 344.117 li
38.754 346.605 li
38.906 346.586 39.063 346.574 39.227 346.566 cv
39.383 346.562 39.57 346.559 39.785 346.559 cv
40.27 346.559 40.695 346.621 41.063 346.742 cv
41.426 346.863 41.73 347.035 41.98 347.254 cv
42.223 347.48 42.41 347.746 42.535 348.059 cv
42.66 348.375 42.723 348.727 42.723 349.109 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.055 351.215 mo
46.055 351.543 46 351.758 45.895 351.863 cv
45.785 351.969 45.59 352.02 45.309 352.023 cv
45.031 352.02 44.84 351.969 44.738 351.867 cv
44.629 351.762 44.578 351.551 44.582 351.234 cv
44.578 350.91 44.633 350.695 44.742 350.586 cv
44.848 350.48 45.043 350.426 45.328 350.426 cv
45.602 350.426 45.789 350.48 45.898 350.586 cv
46 350.691 46.055 350.902 46.055 351.215 cv
cp
f
53.715 347.504 mo
53.711 348.187 53.66 348.809 53.555 349.371 cv
53.445 349.934 53.266 350.418 53.02 350.82 cv
52.766 351.227 52.438 351.539 52.039 351.758 cv
51.633 351.98 51.141 352.09 50.555 352.09 cv
49.996 352.09 49.523 351.992 49.145 351.793 cv
48.762 351.598 48.457 351.305 48.223 350.918 cv
47.988 350.531 47.82 350.059 47.727 349.492 cv
47.625 348.93 47.578 348.281 47.578 347.547 cv
47.578 346.875 47.633 346.254 47.742 345.687 cv
47.852 345.125 48.027 344.641 48.277 344.234 cv
48.52 343.832 48.844 343.52 49.25 343.293 cv
49.648 343.074 50.145 342.961 50.734 342.961 cv
51.293 342.961 51.766 343.062 52.148 343.258 cv
52.531 343.461 52.836 343.754 53.07 344.137 cv
53.301 344.527 53.469 345 53.566 345.562 cv
53.664 346.125 53.711 346.773 53.715 347.504 cv
cp
52.508 347.586 mo
52.504 347.145 52.488 346.746 52.461 346.395 cv
52.426 346.043 52.379 345.734 52.32 345.465 cv
52.254 345.195 52.176 344.965 52.078 344.77 cv
51.98 344.578 51.863 344.418 51.727 344.289 cv
51.586 344.164 51.426 344.07 51.254 344.012 cv
51.074 343.957 50.879 343.93 50.664 343.926 cv
50.273 343.93 49.957 344.02 49.719 344.203 cv
49.473 344.387 49.281 344.641 49.145 344.957 cv
49.004 345.277 48.91 345.648 48.859 346.078 cv
48.809 346.508 48.785 346.973 48.785 347.465 cv
48.785 348.129 48.816 348.691 48.887 349.152 cv
48.953 349.621 49.063 350 49.215 350.289 cv
49.359 350.586 49.551 350.797 49.781 350.926 cv
50.012 351.062 50.293 351.129 50.625 351.125 cv
50.879 351.129 51.102 351.09 51.297 351.004 cv
51.488 350.926 51.656 350.805 51.797 350.648 cv
51.938 350.496 52.051 350.312 52.145 350.098 cv
52.23 349.883 52.305 349.645 52.363 349.383 cv
52.414 349.125 52.453 348.844 52.477 348.539 cv
52.496 348.234 52.504 347.918 52.508 347.586 cv
cp
f
60.832 347.504 mo
60.828 348.187 60.777 348.809 60.672 349.371 cv
60.563 349.934 60.383 350.418 60.137 350.82 cv
59.883 351.227 59.555 351.539 59.156 351.758 cv
58.75 351.98 58.258 352.09 57.672 352.09 cv
57.113 352.09 56.641 351.992 56.262 351.793 cv
55.879 351.598 55.574 351.305 55.34 350.918 cv
55.105 350.531 54.938 350.059 54.844 349.492 cv
54.742 348.93 54.695 348.281 54.695 347.547 cv
54.695 346.875 54.75 346.254 54.859 345.687 cv
54.969 345.125 55.145 344.641 55.395 344.234 cv
55.637 343.832 55.961 343.52 56.367 343.293 cv
56.766 343.074 57.262 342.961 57.852 342.961 cv
58.41 342.961 58.883 343.062 59.266 343.258 cv
59.648 343.461 59.953 343.754 60.188 344.137 cv
60.418 344.527 60.586 345 60.684 345.562 cv
60.781 346.125 60.828 346.773 60.832 347.504 cv
cp
59.625 347.586 mo
59.621 347.145 59.605 346.746 59.578 346.395 cv
59.543 346.043 59.496 345.734 59.438 345.465 cv
59.371 345.195 59.293 344.965 59.195 344.77 cv
59.098 344.578 58.98 344.418 58.844 344.289 cv
58.703 344.164 58.543 344.07 58.371 344.012 cv
58.191 343.957 57.996 343.93 57.781 343.926 cv
57.391 343.93 57.074 344.02 56.836 344.203 cv
56.59 344.387 56.398 344.641 56.262 344.957 cv
56.121 345.277 56.027 345.648 55.977 346.078 cv
55.926 346.508 55.902 346.973 55.902 347.465 cv
55.902 348.129 55.934 348.691 56.004 349.152 cv
56.07 349.621 56.18 350 56.332 350.289 cv
56.477 350.586 56.668 350.797 56.898 350.926 cv
57.129 351.062 57.41 351.129 57.742 351.125 cv
57.996 351.129 58.219 351.09 58.414 351.004 cv
58.605 350.926 58.773 350.805 58.914 350.648 cv
59.055 350.496 59.168 350.312 59.262 350.098 cv
59.348 349.883 59.422 349.645 59.48 349.383 cv
59.531 349.125 59.57 348.844 59.594 348.539 cv
59.613 348.234 59.621 347.918 59.625 347.586 cv
cp
f
36.422 298.859 mo
61.238 298.859 li
61.238 315.949 li
36.422 315.949 li
cp
0 0 0 0 cmyk
ef
42.992 309.367 mo
42.992 309.758 42.93 310.137 42.813 310.496 cv
42.688 310.863 42.504 311.18 42.262 311.453 cv
42.012 311.73 41.699 311.953 41.324 312.117 cv
40.941 312.285 40.496 312.367 39.98 312.367 cv
39.609 312.367 39.281 312.324 39 312.23 cv
38.715 312.145 38.469 312.012 38.258 311.84 cv
38.047 311.672 37.871 311.465 37.734 311.219 cv
37.594 310.973 37.48 310.691 37.398 310.375 cv
37.313 310.062 37.254 309.719 37.219 309.34 cv
37.18 308.969 37.16 308.566 37.164 308.133 cv
37.16 307.754 37.18 307.371 37.223 306.98 cv
37.262 306.598 37.336 306.223 37.441 305.855 cv
37.547 305.496 37.691 305.156 37.871 304.84 cv
38.051 304.523 38.277 304.246 38.551 304.012 cv
38.824 303.777 39.148 303.59 39.527 303.449 cv
39.906 303.312 40.348 303.246 40.852 303.242 cv
41.02 303.246 41.191 303.254 41.363 303.273 cv
41.535 303.297 41.695 303.328 41.844 303.359 cv
41.992 303.398 42.113 303.434 42.215 303.473 cv
42.313 303.512 42.379 303.547 42.414 303.57 cv
42.441 303.598 42.465 303.625 42.484 303.652 cv
42.5 303.684 42.516 303.715 42.523 303.75 cv
42.531 303.785 42.535 303.824 42.543 303.867 cv
42.543 303.91 42.547 303.965 42.551 304.027 cv
42.547 304.113 42.547 304.184 42.547 304.238 cv
42.543 304.301 42.531 304.348 42.52 304.383 cv
42.5 304.422 42.48 304.449 42.457 304.465 cv
42.43 304.484 42.398 304.492 42.359 304.492 cv
42.309 304.492 42.238 304.477 42.152 304.445 cv
42.063 304.414 41.957 304.379 41.836 304.336 cv
41.711 304.301 41.563 304.266 41.387 304.23 cv
41.211 304.203 41.008 304.187 40.777 304.184 cv
40.348 304.187 39.98 304.273 39.676 304.445 cv
39.371 304.617 39.121 304.852 38.926 305.145 cv
38.73 305.437 38.586 305.777 38.496 306.16 cv
38.398 306.551 38.344 306.953 38.336 307.371 cv
38.453 307.305 38.59 307.238 38.738 307.168 cv
38.887 307.102 39.047 307.039 39.223 306.98 cv
39.398 306.93 39.586 306.883 39.781 306.848 cv
39.977 306.816 40.188 306.801 40.414 306.797 cv
40.891 306.801 41.293 306.867 41.625 306.992 cv
41.953 307.125 42.219 307.305 42.426 307.535 cv
42.625 307.766 42.77 308.035 42.859 308.348 cv
42.945 308.66 42.992 309 42.992 309.367 cv
cp
41.797 309.477 mo
41.797 309.215 41.77 308.973 41.719 308.754 cv
41.664 308.539 41.574 308.355 41.453 308.199 cv
41.328 308.051 41.164 307.934 40.961 307.852 cv
40.75 307.77 40.496 307.727 40.199 307.727 cv
40.027 307.727 39.859 307.742 39.691 307.773 cv
39.52 307.805 39.355 307.848 39.199 307.895 cv
39.039 307.949 38.891 308.012 38.75 308.082 cv
38.605 308.156 38.473 308.23 38.355 308.309 cv
38.352 308.902 38.391 309.398 38.469 309.793 cv
38.543 310.191 38.652 310.508 38.797 310.746 cv
38.941 310.988 39.121 311.16 39.336 311.262 cv
39.551 311.367 39.801 311.418 40.09 311.414 cv
40.379 311.418 40.633 311.363 40.848 311.25 cv
41.063 311.145 41.238 310.996 41.383 310.809 cv
41.523 310.625 41.629 310.418 41.695 310.187 cv
41.762 309.957 41.797 309.723 41.797 309.477 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.055 311.492 mo
46.055 311.82 46 312.035 45.895 312.141 cv
45.785 312.246 45.59 312.297 45.309 312.301 cv
45.031 312.297 44.84 312.246 44.738 312.145 cv
44.629 312.039 44.578 311.828 44.582 311.512 cv
44.578 311.187 44.633 310.973 44.742 310.863 cv
44.848 310.758 45.043 310.703 45.328 310.703 cv
45.602 310.703 45.789 310.758 45.898 310.863 cv
46 310.969 46.055 311.18 46.055 311.492 cv
cp
f
53.422 311.73 mo
53.418 311.816 53.414 311.891 53.402 311.953 cv
53.391 312.02 53.375 312.074 53.355 312.113 cv
53.332 312.16 53.305 312.191 53.273 312.207 cv
53.238 312.23 53.199 312.238 53.16 312.238 cv
48.258 312.238 li
48.195 312.238 48.137 312.23 48.09 312.215 cv
48.039 312.199 48 312.176 47.965 312.137 cv
47.93 312.105 47.902 312.051 47.891 311.98 cv
47.871 311.91 47.863 311.824 47.867 311.723 cv
47.863 311.633 47.867 311.555 47.875 311.484 cv
47.879 311.418 47.895 311.359 47.922 311.305 cv
47.945 311.254 47.977 311.199 48.012 311.145 cv
48.047 311.094 48.09 311.039 48.148 310.977 cv
49.922 309.152 li
50.332 308.734 50.66 308.359 50.91 308.023 cv
51.156 307.695 51.348 307.391 51.48 307.113 cv
51.613 306.84 51.699 306.59 51.746 306.363 cv
51.785 306.141 51.809 305.93 51.809 305.734 cv
51.809 305.539 51.773 305.355 51.707 305.176 cv
51.641 305.004 51.547 304.848 51.422 304.711 cv
51.297 304.582 51.141 304.477 50.953 304.395 cv
50.766 304.32 50.547 304.281 50.301 304.277 cv
50.012 304.281 49.754 304.32 49.527 304.395 cv
49.297 304.477 49.098 304.562 48.926 304.648 cv
48.754 304.742 48.609 304.824 48.492 304.902 cv
48.375 304.98 48.289 305.02 48.238 305.02 cv
48.203 305.02 48.172 305.012 48.148 304.992 cv
48.117 304.977 48.098 304.945 48.082 304.902 cv
48.066 304.863 48.051 304.809 48.043 304.738 cv
48.031 304.672 48.027 304.59 48.031 304.492 cv
48.027 304.426 48.031 304.367 48.039 304.316 cv
48.043 304.266 48.051 304.223 48.063 304.184 cv
48.07 304.148 48.086 304.113 48.105 304.082 cv
48.125 304.051 48.16 304.012 48.219 303.961 cv
48.27 303.914 48.363 303.848 48.5 303.766 cv
48.633 303.684 48.805 303.605 49.008 303.523 cv
49.211 303.445 49.434 303.375 49.68 303.32 cv
49.922 303.266 50.18 303.238 50.453 303.238 cv
50.879 303.238 51.254 303.301 51.578 303.422 cv
51.898 303.543 52.164 303.707 52.379 303.918 cv
52.59 304.129 52.75 304.375 52.855 304.648 cv
52.961 304.93 53.016 305.227 53.016 305.539 cv
53.016 305.828 52.988 306.109 52.938 306.387 cv
52.887 306.672 52.781 306.977 52.621 307.301 cv
52.457 307.629 52.223 307.992 51.918 308.391 cv
51.609 308.793 51.203 309.254 50.699 309.77 cv
49.293 311.238 li
53.152 311.238 li
53.184 311.242 53.219 311.254 53.258 311.27 cv
53.289 311.293 53.32 311.324 53.348 311.363 cv
53.371 311.406 53.391 311.457 53.402 311.516 cv
53.414 311.582 53.418 311.652 53.422 311.73 cv
cp
f
60.496 309.387 mo
60.496 309.863 60.414 310.285 60.254 310.656 cv
60.094 311.027 59.867 311.34 59.578 311.594 cv
59.281 311.848 58.934 312.043 58.531 312.172 cv
58.125 312.305 57.676 312.367 57.184 312.367 cv
56.906 312.367 56.645 312.348 56.402 312.309 cv
56.152 312.27 55.934 312.223 55.746 312.168 cv
55.551 312.113 55.395 312.059 55.27 312 cv
55.145 311.949 55.066 311.906 55.035 311.871 cv
55 311.84 54.977 311.809 54.965 311.781 cv
54.949 311.754 54.934 311.723 54.926 311.68 cv
54.91 311.645 54.902 311.594 54.902 311.531 cv
54.895 311.473 54.895 311.402 54.895 311.32 cv
54.895 311.246 54.898 311.176 54.906 311.113 cv
54.914 311.051 54.926 311 54.945 310.961 cv
54.961 310.922 54.98 310.895 55.008 310.875 cv
55.031 310.859 55.063 310.852 55.094 310.848 cv
55.141 310.852 55.211 310.879 55.305 310.934 cv
55.398 310.992 55.527 311.055 55.691 311.121 cv
55.855 311.187 56.055 311.25 56.297 311.309 cv
56.531 311.367 56.816 311.395 57.152 311.395 cv
57.453 311.395 57.734 311.359 57.992 311.285 cv
58.246 311.215 58.469 311.102 58.656 310.945 cv
58.84 310.793 58.984 310.598 59.09 310.359 cv
59.195 310.125 59.246 309.836 59.25 309.496 cv
59.246 309.215 59.203 308.965 59.113 308.746 cv
59.023 308.527 58.887 308.348 58.703 308.203 cv
58.516 308.062 58.281 307.957 58 307.883 cv
57.715 307.812 57.375 307.773 56.988 307.773 cv
56.703 307.773 56.465 307.789 56.266 307.816 cv
56.063 307.848 55.875 307.863 55.703 307.859 cv
55.574 307.863 55.48 307.832 55.43 307.77 cv
55.371 307.711 55.344 307.598 55.348 307.426 cv
55.348 303.812 li
55.344 303.664 55.379 303.555 55.453 303.477 cv
55.52 303.406 55.621 303.367 55.758 303.367 cv
59.688 303.367 li
59.723 303.367 59.758 303.379 59.793 303.398 cv
59.824 303.422 59.852 303.453 59.879 303.492 cv
59.898 303.535 59.914 303.586 59.93 303.648 cv
59.938 303.715 59.945 303.793 59.949 303.875 cv
59.945 304.043 59.922 304.168 59.883 304.258 cv
59.836 304.352 59.777 304.398 59.699 304.395 cv
56.527 304.395 li
56.527 306.883 li
56.68 306.863 56.836 306.852 57 306.844 cv
57.156 306.84 57.344 306.836 57.559 306.836 cv
58.043 306.836 58.469 306.898 58.836 307.02 cv
59.199 307.141 59.504 307.312 59.754 307.531 cv
59.996 307.758 60.184 308.023 60.309 308.336 cv
60.434 308.652 60.496 309.004 60.496 309.387 cv
cp
f
36.422 259.148 mo
61.238 259.148 li
61.238 276.238 li
36.422 276.238 li
cp
0 0 0 0 cmyk
ef
42.895 264.156 mo
42.891 264.242 42.887 264.316 42.883 264.379 cv
42.875 264.449 42.867 264.512 42.855 264.57 cv
42.844 264.637 42.828 264.695 42.809 264.75 cv
42.785 264.809 42.762 264.871 42.738 264.93 cv
39.543 272.293 li
39.516 272.352 39.488 272.395 39.457 272.426 cv
39.422 272.461 39.379 272.488 39.324 272.508 cv
39.27 272.527 39.199 272.539 39.121 272.551 cv
39.035 272.555 38.938 272.559 38.82 272.562 cv
38.664 272.559 38.543 272.551 38.457 272.539 cv
38.371 272.523 38.309 272.508 38.27 272.477 cv
38.23 272.449 38.211 272.41 38.219 272.367 cv
38.219 272.324 38.234 272.273 38.266 272.211 cv
41.625 264.684 li
37.367 264.684 li
37.281 264.687 37.215 264.641 37.172 264.547 cv
37.129 264.457 37.109 264.328 37.109 264.164 cv
37.109 264.078 37.113 264.004 37.125 263.937 cv
37.137 263.875 37.152 263.82 37.176 263.777 cv
37.195 263.734 37.223 263.703 37.258 263.68 cv
37.289 263.66 37.328 263.648 37.367 263.648 cv
42.539 263.648 li
42.598 263.648 42.652 263.656 42.703 263.672 cv
42.75 263.687 42.785 263.715 42.813 263.754 cv
42.836 263.793 42.855 263.848 42.871 263.91 cv
42.883 263.977 42.891 264.059 42.895 264.156 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.055 271.773 mo
46.055 272.102 46 272.316 45.895 272.422 cv
45.785 272.527 45.59 272.578 45.309 272.582 cv
45.031 272.578 44.84 272.527 44.738 272.426 cv
44.629 272.32 44.578 272.109 44.582 271.793 cv
44.578 271.469 44.633 271.254 44.742 271.145 cv
44.848 271.039 45.043 270.984 45.328 270.984 cv
45.602 270.984 45.789 271.039 45.898 271.145 cv
46 271.25 46.055 271.461 46.055 271.773 cv
cp
f
53.379 269.668 mo
53.379 270.145 53.297 270.566 53.137 270.937 cv
52.977 271.309 52.75 271.621 52.461 271.875 cv
52.164 272.129 51.816 272.324 51.414 272.453 cv
51.008 272.586 50.559 272.648 50.066 272.648 cv
49.789 272.648 49.527 272.629 49.285 272.59 cv
49.035 272.551 48.816 272.504 48.629 272.449 cv
48.434 272.395 48.277 272.34 48.152 272.281 cv
48.027 272.23 47.949 272.187 47.918 272.152 cv
47.883 272.121 47.859 272.09 47.848 272.062 cv
47.832 272.035 47.816 272.004 47.809 271.961 cv
47.793 271.926 47.785 271.875 47.785 271.812 cv
47.777 271.754 47.777 271.684 47.777 271.602 cv
47.777 271.527 47.781 271.457 47.789 271.395 cv
47.797 271.332 47.809 271.281 47.828 271.242 cv
47.844 271.203 47.863 271.176 47.891 271.156 cv
47.914 271.141 47.945 271.133 47.977 271.129 cv
48.023 271.133 48.094 271.16 48.188 271.215 cv
48.281 271.273 48.41 271.336 48.574 271.402 cv
48.738 271.469 48.938 271.531 49.18 271.59 cv
49.414 271.648 49.699 271.676 50.035 271.676 cv
50.336 271.676 50.617 271.641 50.875 271.566 cv
51.129 271.496 51.352 271.383 51.539 271.227 cv
51.723 271.074 51.867 270.879 51.973 270.641 cv
52.078 270.406 52.129 270.117 52.133 269.777 cv
52.129 269.496 52.086 269.246 51.996 269.027 cv
51.906 268.809 51.77 268.629 51.586 268.484 cv
51.398 268.344 51.164 268.238 50.883 268.164 cv
50.598 268.094 50.258 268.055 49.871 268.055 cv
49.586 268.055 49.348 268.07 49.148 268.098 cv
48.945 268.129 48.758 268.145 48.586 268.141 cv
48.457 268.145 48.363 268.113 48.313 268.051 cv
48.254 267.992 48.227 267.879 48.23 267.707 cv
48.23 264.094 li
48.227 263.945 48.262 263.836 48.336 263.758 cv
48.402 263.687 48.504 263.648 48.641 263.648 cv
52.57 263.648 li
52.605 263.648 52.641 263.66 52.676 263.68 cv
52.707 263.703 52.734 263.734 52.762 263.773 cv
52.781 263.816 52.797 263.867 52.813 263.93 cv
52.82 263.996 52.828 264.074 52.832 264.156 cv
52.828 264.324 52.805 264.449 52.766 264.539 cv
52.719 264.633 52.66 264.68 52.582 264.676 cv
49.41 264.676 li
49.41 267.164 li
49.563 267.145 49.719 267.133 49.883 267.125 cv
50.039 267.121 50.227 267.117 50.441 267.117 cv
50.926 267.117 51.352 267.18 51.719 267.301 cv
52.082 267.422 52.387 267.594 52.637 267.812 cv
52.879 268.039 53.066 268.305 53.191 268.617 cv
53.316 268.934 53.379 269.285 53.379 269.668 cv
cp
f
60.832 268.062 mo
60.828 268.746 60.777 269.367 60.672 269.93 cv
60.563 270.492 60.383 270.977 60.137 271.379 cv
59.883 271.785 59.555 272.098 59.156 272.316 cv
58.75 272.539 58.258 272.648 57.672 272.648 cv
57.113 272.648 56.641 272.551 56.262 272.352 cv
55.879 272.156 55.574 271.863 55.34 271.477 cv
55.105 271.09 54.938 270.617 54.844 270.051 cv
54.742 269.488 54.695 268.84 54.695 268.105 cv
54.695 267.434 54.75 266.812 54.859 266.246 cv
54.969 265.684 55.145 265.199 55.395 264.793 cv
55.637 264.391 55.961 264.078 56.367 263.852 cv
56.766 263.633 57.262 263.52 57.852 263.52 cv
58.41 263.52 58.883 263.621 59.266 263.816 cv
59.648 264.02 59.953 264.312 60.188 264.695 cv
60.418 265.086 60.586 265.559 60.684 266.121 cv
60.781 266.684 60.828 267.332 60.832 268.062 cv
cp
59.625 268.145 mo
59.621 267.703 59.605 267.305 59.578 266.953 cv
59.543 266.602 59.496 266.293 59.438 266.023 cv
59.371 265.754 59.293 265.523 59.195 265.328 cv
59.098 265.137 58.98 264.977 58.844 264.848 cv
58.703 264.723 58.543 264.629 58.371 264.57 cv
58.191 264.516 57.996 264.488 57.781 264.484 cv
57.391 264.488 57.074 264.578 56.836 264.762 cv
56.59 264.945 56.398 265.199 56.262 265.516 cv
56.121 265.836 56.027 266.207 55.977 266.637 cv
55.926 267.066 55.902 267.531 55.902 268.023 cv
55.902 268.687 55.934 269.25 56.004 269.711 cv
56.07 270.18 56.18 270.559 56.332 270.848 cv
56.477 271.145 56.668 271.355 56.898 271.484 cv
57.129 271.621 57.41 271.687 57.742 271.684 cv
57.996 271.687 58.219 271.648 58.414 271.562 cv
58.605 271.484 58.773 271.363 58.914 271.207 cv
59.055 271.055 59.168 270.871 59.262 270.656 cv
59.348 270.441 59.422 270.203 59.48 269.941 cv
59.531 269.684 59.57 269.402 59.594 269.098 cv
59.613 268.793 59.621 268.477 59.625 268.145 cv
cp
f
36.422 219.441 mo
61.238 219.441 li
61.238 236.531 li
36.422 236.531 li
cp
0 0 0 0 cmyk
ef
42.969 230.523 mo
42.969 230.91 42.898 231.254 42.762 231.551 cv
42.625 231.855 42.43 232.105 42.172 232.309 cv
41.914 232.516 41.594 232.672 41.215 232.773 cv
40.832 232.879 40.398 232.93 39.914 232.93 cv
39.453 232.93 39.043 232.883 38.684 232.789 cv
38.32 232.695 38.016 232.555 37.766 232.363 cv
37.516 232.18 37.324 231.949 37.191 231.672 cv
37.059 231.398 36.992 231.086 36.992 230.73 cv
36.992 230.457 37.035 230.199 37.129 229.965 cv
37.215 229.73 37.348 229.516 37.523 229.32 cv
37.691 229.125 37.902 228.941 38.156 228.766 cv
38.406 228.598 38.691 228.434 39.008 228.277 cv
38.734 228.137 38.492 227.988 38.281 227.828 cv
38.07 227.672 37.891 227.5 37.746 227.312 cv
37.598 227.129 37.488 226.934 37.414 226.723 cv
37.336 226.516 37.297 226.285 37.301 226.035 cv
37.297 225.727 37.352 225.434 37.469 225.16 cv
37.578 224.891 37.75 224.656 37.977 224.453 cv
38.203 224.254 38.488 224.094 38.84 223.977 cv
39.184 223.859 39.594 223.801 40.063 223.801 cv
40.508 223.801 40.895 223.855 41.223 223.961 cv
41.551 224.07 41.82 224.215 42.031 224.398 cv
42.242 224.586 42.398 224.805 42.504 225.055 cv
42.602 225.305 42.652 225.574 42.656 225.863 cv
42.652 226.098 42.613 226.324 42.543 226.535 cv
42.465 226.754 42.355 226.957 42.207 227.145 cv
42.059 227.34 41.879 227.52 41.668 227.684 cv
41.457 227.855 41.215 228.012 40.941 228.152 cv
41.262 228.316 41.547 228.48 41.805 228.648 cv
42.055 228.816 42.27 228.996 42.445 229.191 cv
42.613 229.387 42.742 229.594 42.836 229.809 cv
42.922 230.027 42.969 230.266 42.969 230.523 cv
cp
41.488 225.973 mo
41.484 225.785 41.453 225.609 41.387 225.453 cv
41.32 225.297 41.223 225.164 41.098 225.055 cv
40.969 224.945 40.809 224.863 40.621 224.805 cv
40.426 224.75 40.211 224.723 39.973 224.719 cv
39.477 224.723 39.102 224.832 38.852 225.055 cv
38.594 225.281 38.469 225.59 38.473 225.973 cv
38.469 226.152 38.5 226.316 38.563 226.469 cv
38.625 226.625 38.719 226.77 38.852 226.906 cv
38.977 227.043 39.141 227.176 39.344 227.305 cv
39.539 227.437 39.777 227.574 40.055 227.715 cv
40.516 227.48 40.871 227.219 41.117 226.926 cv
41.363 226.641 41.484 226.324 41.488 225.973 cv
cp
41.777 230.648 mo
41.773 230.441 41.734 230.25 41.66 230.078 cv
41.578 229.91 41.461 229.75 41.305 229.598 cv
41.148 229.449 40.949 229.305 40.715 229.164 cv
40.477 229.027 40.207 228.883 39.898 228.73 cv
39.609 228.875 39.355 229.016 39.141 229.156 cv
38.922 229.297 38.742 229.445 38.605 229.594 cv
38.465 229.75 38.359 229.906 38.289 230.07 cv
38.215 230.238 38.18 230.422 38.184 230.621 cv
38.18 231.066 38.332 231.41 38.641 231.648 cv
38.941 231.895 39.395 232.016 40 232.012 cv
40.582 232.016 41.027 231.895 41.328 231.645 cv
41.625 231.402 41.773 231.07 41.777 230.648 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
46.055 232.055 mo
46.055 232.383 46 232.598 45.895 232.703 cv
45.785 232.809 45.59 232.859 45.309 232.863 cv
45.031 232.859 44.84 232.809 44.738 232.707 cv
44.629 232.602 44.578 232.391 44.582 232.074 cv
44.578 231.75 44.633 231.535 44.742 231.426 cv
44.848 231.32 45.043 231.266 45.328 231.266 cv
45.602 231.266 45.789 231.32 45.898 231.426 cv
46 231.531 46.055 231.742 46.055 232.055 cv
cp
f
53.551 224.437 mo
53.547 224.523 53.543 224.598 53.539 224.66 cv
53.531 224.73 53.523 224.793 53.512 224.852 cv
53.5 224.918 53.484 224.977 53.465 225.031 cv
53.441 225.09 53.418 225.152 53.395 225.211 cv
50.199 232.574 li
50.172 232.633 50.145 232.676 50.113 232.707 cv
50.078 232.742 50.035 232.77 49.98 232.789 cv
49.926 232.809 49.855 232.82 49.777 232.832 cv
49.691 232.836 49.594 232.84 49.477 232.844 cv
49.32 232.84 49.199 232.832 49.113 232.82 cv
49.027 232.805 48.965 232.789 48.926 232.758 cv
48.887 232.73 48.867 232.691 48.875 232.648 cv
48.875 232.605 48.891 232.555 48.922 232.492 cv
52.281 224.965 li
48.023 224.965 li
47.938 224.969 47.871 224.922 47.828 224.828 cv
47.785 224.738 47.766 224.609 47.766 224.445 cv
47.766 224.359 47.77 224.285 47.781 224.219 cv
47.793 224.156 47.809 224.102 47.832 224.059 cv
47.852 224.016 47.879 223.984 47.914 223.961 cv
47.945 223.941 47.984 223.93 48.023 223.93 cv
53.195 223.93 li
53.254 223.93 53.309 223.937 53.359 223.953 cv
53.406 223.969 53.441 223.996 53.469 224.035 cv
53.492 224.074 53.512 224.129 53.527 224.191 cv
53.539 224.258 53.547 224.34 53.551 224.437 cv
cp
f
60.496 229.949 mo
60.496 230.426 60.414 230.848 60.254 231.219 cv
60.094 231.59 59.867 231.902 59.578 232.156 cv
59.281 232.41 58.934 232.605 58.531 232.734 cv
58.125 232.867 57.676 232.93 57.184 232.93 cv
56.906 232.93 56.645 232.91 56.402 232.871 cv
56.152 232.832 55.934 232.785 55.746 232.73 cv
55.551 232.676 55.395 232.621 55.27 232.562 cv
55.145 232.512 55.066 232.469 55.035 232.434 cv
55 232.402 54.977 232.371 54.965 232.344 cv
54.949 232.316 54.934 232.285 54.926 232.242 cv
54.91 232.207 54.902 232.156 54.902 232.094 cv
54.895 232.035 54.895 231.965 54.895 231.883 cv
54.895 231.809 54.898 231.738 54.906 231.676 cv
54.914 231.613 54.926 231.562 54.945 231.523 cv
54.961 231.484 54.98 231.457 55.008 231.437 cv
55.031 231.422 55.063 231.414 55.094 231.41 cv
55.141 231.414 55.211 231.441 55.305 231.496 cv
55.398 231.555 55.527 231.617 55.691 231.684 cv
55.855 231.75 56.055 231.812 56.297 231.871 cv
56.531 231.93 56.816 231.957 57.152 231.957 cv
57.453 231.957 57.734 231.922 57.992 231.848 cv
58.246 231.777 58.469 231.664 58.656 231.508 cv
58.84 231.355 58.984 231.16 59.09 230.922 cv
59.195 230.687 59.246 230.398 59.25 230.059 cv
59.246 229.777 59.203 229.527 59.113 229.309 cv
59.023 229.09 58.887 228.91 58.703 228.766 cv
58.516 228.625 58.281 228.52 58 228.445 cv
57.715 228.375 57.375 228.336 56.988 228.336 cv
56.703 228.336 56.465 228.352 56.266 228.379 cv
56.063 228.41 55.875 228.426 55.703 228.422 cv
55.574 228.426 55.48 228.395 55.43 228.332 cv
55.371 228.273 55.344 228.16 55.348 227.988 cv
55.348 224.375 li
55.344 224.227 55.379 224.117 55.453 224.039 cv
55.52 223.969 55.621 223.93 55.758 223.93 cv
59.688 223.93 li
59.723 223.93 59.758 223.941 59.793 223.961 cv
59.824 223.984 59.852 224.016 59.879 224.055 cv
59.898 224.098 59.914 224.148 59.93 224.211 cv
59.938 224.277 59.945 224.355 59.949 224.437 cv
59.945 224.605 59.922 224.73 59.883 224.82 cv
59.836 224.914 59.777 224.961 59.699 224.957 cv
56.527 224.957 li
56.527 227.445 li
56.68 227.426 56.836 227.414 57 227.406 cv
57.156 227.402 57.344 227.398 57.559 227.398 cv
58.043 227.398 58.469 227.461 58.836 227.582 cv
59.199 227.703 59.504 227.875 59.754 228.094 cv
59.996 228.32 60.184 228.586 60.309 228.898 cv
60.434 229.215 60.496 229.566 60.496 229.949 cv
cp
f
29.32 179.719 mo
61.234 179.719 li
61.234 196.809 li
29.32 196.809 li
cp
0 0 0 0 cmyk
ef
35.684 192.613 mo
35.68 192.703 35.672 192.773 35.66 192.832 cv
35.645 192.895 35.625 192.945 35.605 192.977 cv
35.582 193.016 35.559 193.039 35.527 193.055 cv
35.496 193.07 35.465 193.078 35.438 193.078 cv
30.801 193.078 li
30.766 193.078 30.738 193.07 30.711 193.055 cv
30.684 193.039 30.656 193.016 30.633 192.977 cv
30.605 192.945 30.586 192.895 30.574 192.832 cv
30.559 192.773 30.551 192.703 30.555 192.613 cv
30.551 192.535 30.559 192.461 30.574 192.398 cv
30.586 192.34 30.602 192.293 30.625 192.254 cv
30.641 192.219 30.668 192.187 30.699 192.164 cv
30.73 192.145 30.762 192.137 30.801 192.133 cv
32.652 192.133 li
32.652 185.387 li
30.938 186.406 li
30.848 186.457 30.777 186.484 30.73 186.492 cv
30.676 186.5 30.633 186.492 30.602 186.461 cv
30.566 186.434 30.547 186.383 30.535 186.312 cv
30.523 186.246 30.516 186.16 30.52 186.051 cv
30.516 185.977 30.52 185.91 30.531 185.852 cv
30.535 185.801 30.547 185.754 30.563 185.715 cv
30.574 185.68 30.594 185.648 30.617 185.621 cv
30.641 185.594 30.672 185.566 30.719 185.539 cv
32.762 184.227 li
32.777 184.215 32.797 184.203 32.828 184.195 cv
32.852 184.187 32.887 184.18 32.934 184.168 cv
32.973 184.16 33.023 184.152 33.078 184.148 cv
33.133 184.148 33.199 184.148 33.285 184.145 cv
33.391 184.148 33.484 184.152 33.559 184.16 cv
33.629 184.168 33.684 184.184 33.73 184.199 cv
33.77 184.219 33.797 184.238 33.813 184.262 cv
33.82 184.289 33.828 184.312 33.832 184.336 cv
33.832 192.133 li
35.438 192.133 li
35.473 192.137 35.508 192.145 35.539 192.164 cv
35.57 192.187 35.594 192.219 35.617 192.254 cv
35.633 192.293 35.648 192.34 35.664 192.398 cv
35.672 192.461 35.68 192.535 35.684 192.613 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.078 188.621 mo
43.074 189.305 43.023 189.926 42.918 190.488 cv
42.809 191.051 42.629 191.535 42.383 191.937 cv
42.129 192.344 41.801 192.656 41.402 192.875 cv
40.996 193.098 40.504 193.207 39.918 193.207 cv
39.359 193.207 38.887 193.109 38.508 192.91 cv
38.125 192.715 37.82 192.422 37.586 192.035 cv
37.352 191.648 37.184 191.176 37.09 190.609 cv
36.988 190.047 36.941 189.398 36.941 188.664 cv
36.941 187.992 36.996 187.371 37.105 186.805 cv
37.215 186.242 37.391 185.758 37.641 185.352 cv
37.883 184.949 38.207 184.637 38.613 184.41 cv
39.012 184.191 39.508 184.078 40.098 184.078 cv
40.656 184.078 41.129 184.18 41.512 184.375 cv
41.895 184.578 42.199 184.871 42.434 185.254 cv
42.664 185.645 42.832 186.117 42.93 186.68 cv
43.027 187.242 43.074 187.891 43.078 188.621 cv
cp
41.871 188.703 mo
41.867 188.262 41.852 187.863 41.824 187.512 cv
41.789 187.16 41.742 186.852 41.684 186.582 cv
41.617 186.312 41.539 186.082 41.441 185.887 cv
41.344 185.695 41.227 185.535 41.09 185.406 cv
40.949 185.281 40.789 185.187 40.617 185.129 cv
40.438 185.074 40.242 185.047 40.027 185.043 cv
39.637 185.047 39.32 185.137 39.082 185.32 cv
38.836 185.504 38.645 185.758 38.508 186.074 cv
38.367 186.395 38.273 186.766 38.223 187.195 cv
38.172 187.625 38.148 188.09 38.148 188.582 cv
38.148 189.246 38.18 189.809 38.25 190.27 cv
38.316 190.738 38.426 191.117 38.578 191.406 cv
38.723 191.703 38.914 191.914 39.145 192.043 cv
39.375 192.18 39.656 192.246 39.988 192.242 cv
40.242 192.246 40.465 192.207 40.66 192.121 cv
40.852 192.043 41.02 191.922 41.16 191.766 cv
41.301 191.613 41.414 191.43 41.508 191.215 cv
41.594 191 41.668 190.762 41.727 190.5 cv
41.777 190.242 41.816 189.961 41.84 189.656 cv
41.859 189.352 41.867 189.035 41.871 188.703 cv
cp
f
46.004 192.332 mo
46.004 192.66 45.949 192.875 45.844 192.98 cv
45.734 193.086 45.539 193.137 45.258 193.141 cv
44.98 193.137 44.789 193.086 44.688 192.984 cv
44.578 192.879 44.527 192.668 44.531 192.352 cv
44.527 192.027 44.582 191.812 44.691 191.703 cv
44.797 191.598 44.992 191.543 45.277 191.543 cv
45.551 191.543 45.738 191.598 45.848 191.703 cv
45.949 191.809 46.004 192.02 46.004 192.332 cv
cp
f
53.707 188.621 mo
53.703 189.305 53.652 189.926 53.547 190.488 cv
53.438 191.051 53.258 191.535 53.012 191.937 cv
52.758 192.344 52.43 192.656 52.031 192.875 cv
51.625 193.098 51.133 193.207 50.547 193.207 cv
49.988 193.207 49.516 193.109 49.137 192.91 cv
48.754 192.715 48.449 192.422 48.215 192.035 cv
47.98 191.648 47.813 191.176 47.719 190.609 cv
47.617 190.047 47.57 189.398 47.57 188.664 cv
47.57 187.992 47.625 187.371 47.734 186.805 cv
47.844 186.242 48.02 185.758 48.27 185.352 cv
48.512 184.949 48.836 184.637 49.242 184.41 cv
49.641 184.191 50.137 184.078 50.727 184.078 cv
51.285 184.078 51.758 184.18 52.141 184.375 cv
52.523 184.578 52.828 184.871 53.063 185.254 cv
53.293 185.645 53.461 186.117 53.559 186.68 cv
53.656 187.242 53.703 187.891 53.707 188.621 cv
cp
52.5 188.703 mo
52.496 188.262 52.48 187.863 52.453 187.512 cv
52.418 187.16 52.371 186.852 52.313 186.582 cv
52.246 186.312 52.168 186.082 52.07 185.887 cv
51.973 185.695 51.855 185.535 51.719 185.406 cv
51.578 185.281 51.418 185.187 51.246 185.129 cv
51.066 185.074 50.871 185.047 50.656 185.043 cv
50.266 185.047 49.949 185.137 49.711 185.32 cv
49.465 185.504 49.273 185.758 49.137 186.074 cv
48.996 186.395 48.902 186.766 48.852 187.195 cv
48.801 187.625 48.777 188.09 48.777 188.582 cv
48.777 189.246 48.809 189.809 48.879 190.27 cv
48.945 190.738 49.055 191.117 49.207 191.406 cv
49.352 191.703 49.543 191.914 49.773 192.043 cv
50.004 192.18 50.285 192.246 50.617 192.242 cv
50.871 192.246 51.094 192.207 51.289 192.121 cv
51.48 192.043 51.648 191.922 51.789 191.766 cv
51.93 191.613 52.043 191.43 52.137 191.215 cv
52.223 191 52.297 190.762 52.355 190.5 cv
52.406 190.242 52.445 189.961 52.469 189.656 cv
52.488 189.352 52.496 189.035 52.5 188.703 cv
cp
f
60.824 188.621 mo
60.82 189.305 60.77 189.926 60.664 190.488 cv
60.555 191.051 60.375 191.535 60.129 191.937 cv
59.875 192.344 59.547 192.656 59.148 192.875 cv
58.742 193.098 58.25 193.207 57.664 193.207 cv
57.105 193.207 56.633 193.109 56.254 192.91 cv
55.871 192.715 55.566 192.422 55.332 192.035 cv
55.098 191.648 54.93 191.176 54.836 190.609 cv
54.734 190.047 54.688 189.398 54.688 188.664 cv
54.688 187.992 54.742 187.371 54.852 186.805 cv
54.961 186.242 55.137 185.758 55.387 185.352 cv
55.629 184.949 55.953 184.637 56.359 184.41 cv
56.758 184.191 57.254 184.078 57.844 184.078 cv
58.402 184.078 58.875 184.18 59.258 184.375 cv
59.641 184.578 59.945 184.871 60.18 185.254 cv
60.41 185.645 60.578 186.117 60.676 186.68 cv
60.773 187.242 60.82 187.891 60.824 188.621 cv
cp
59.617 188.703 mo
59.613 188.262 59.598 187.863 59.57 187.512 cv
59.535 187.16 59.488 186.852 59.43 186.582 cv
59.363 186.312 59.285 186.082 59.188 185.887 cv
59.09 185.695 58.973 185.535 58.836 185.406 cv
58.695 185.281 58.535 185.187 58.363 185.129 cv
58.184 185.074 57.988 185.047 57.773 185.043 cv
57.383 185.047 57.066 185.137 56.828 185.32 cv
56.582 185.504 56.391 185.758 56.254 186.074 cv
56.113 186.395 56.02 186.766 55.969 187.195 cv
55.918 187.625 55.895 188.09 55.895 188.582 cv
55.895 189.246 55.926 189.809 55.996 190.27 cv
56.063 190.738 56.172 191.117 56.324 191.406 cv
56.469 191.703 56.66 191.914 56.891 192.043 cv
57.121 192.18 57.402 192.246 57.734 192.242 cv
57.988 192.246 58.211 192.207 58.406 192.121 cv
58.598 192.043 58.766 191.922 58.906 191.766 cv
59.047 191.613 59.16 191.43 59.254 191.215 cv
59.34 191 59.414 190.762 59.473 190.5 cv
59.523 190.242 59.563 189.961 59.586 189.656 cv
59.605 189.352 59.613 189.035 59.617 188.703 cv
cp
f
29.32 140.012 mo
61.234 140.012 li
61.234 157.102 li
29.32 157.102 li
cp
0 0 0 0 cmyk
ef
35.684 152.895 mo
35.68 152.984 35.672 153.055 35.66 153.113 cv
35.645 153.176 35.625 153.227 35.605 153.258 cv
35.582 153.297 35.559 153.32 35.527 153.336 cv
35.496 153.352 35.465 153.359 35.438 153.359 cv
30.801 153.359 li
30.766 153.359 30.738 153.352 30.711 153.336 cv
30.684 153.32 30.656 153.297 30.633 153.258 cv
30.605 153.227 30.586 153.176 30.574 153.113 cv
30.559 153.055 30.551 152.984 30.555 152.895 cv
30.551 152.816 30.559 152.742 30.574 152.68 cv
30.586 152.621 30.602 152.574 30.625 152.535 cv
30.641 152.5 30.668 152.469 30.699 152.445 cv
30.73 152.426 30.762 152.418 30.801 152.414 cv
32.652 152.414 li
32.652 145.668 li
30.938 146.687 li
30.848 146.738 30.777 146.766 30.73 146.773 cv
30.676 146.781 30.633 146.773 30.602 146.742 cv
30.566 146.715 30.547 146.664 30.535 146.594 cv
30.523 146.527 30.516 146.441 30.52 146.332 cv
30.516 146.258 30.52 146.191 30.531 146.133 cv
30.535 146.082 30.547 146.035 30.563 145.996 cv
30.574 145.961 30.594 145.93 30.617 145.902 cv
30.641 145.875 30.672 145.848 30.719 145.82 cv
32.762 144.508 li
32.777 144.496 32.797 144.484 32.828 144.477 cv
32.852 144.469 32.887 144.461 32.934 144.449 cv
32.973 144.441 33.023 144.434 33.078 144.43 cv
33.133 144.43 33.199 144.43 33.285 144.426 cv
33.391 144.43 33.484 144.434 33.559 144.441 cv
33.629 144.449 33.684 144.465 33.73 144.48 cv
33.77 144.5 33.797 144.52 33.813 144.543 cv
33.82 144.57 33.828 144.594 33.832 144.617 cv
33.832 152.414 li
35.438 152.414 li
35.473 152.418 35.508 152.426 35.539 152.445 cv
35.57 152.469 35.594 152.5 35.617 152.535 cv
35.633 152.574 35.648 152.621 35.664 152.68 cv
35.672 152.742 35.68 152.816 35.684 152.895 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
42.805 152.895 mo
42.801 152.984 42.793 153.055 42.781 153.113 cv
42.766 153.176 42.746 153.227 42.727 153.258 cv
42.703 153.297 42.68 153.32 42.648 153.336 cv
42.617 153.352 42.586 153.359 42.559 153.359 cv
37.922 153.359 li
37.887 153.359 37.859 153.352 37.832 153.336 cv
37.805 153.32 37.777 153.297 37.754 153.258 cv
37.727 153.227 37.707 153.176 37.695 153.113 cv
37.68 153.055 37.672 152.984 37.676 152.895 cv
37.672 152.816 37.68 152.742 37.695 152.68 cv
37.707 152.621 37.723 152.574 37.746 152.535 cv
37.762 152.5 37.789 152.469 37.82 152.445 cv
37.852 152.426 37.883 152.418 37.922 152.414 cv
39.773 152.414 li
39.773 145.668 li
38.059 146.687 li
37.969 146.738 37.898 146.766 37.852 146.773 cv
37.797 146.781 37.754 146.773 37.723 146.742 cv
37.688 146.715 37.668 146.664 37.656 146.594 cv
37.645 146.527 37.637 146.441 37.641 146.332 cv
37.637 146.258 37.641 146.191 37.652 146.133 cv
37.656 146.082 37.668 146.035 37.684 145.996 cv
37.695 145.961 37.715 145.93 37.738 145.902 cv
37.762 145.875 37.793 145.848 37.84 145.82 cv
39.883 144.508 li
39.898 144.496 39.918 144.484 39.949 144.477 cv
39.973 144.469 40.008 144.461 40.055 144.449 cv
40.094 144.441 40.145 144.434 40.199 144.43 cv
40.254 144.43 40.32 144.43 40.406 144.426 cv
40.512 144.43 40.605 144.434 40.68 144.441 cv
40.75 144.449 40.805 144.465 40.852 144.48 cv
40.891 144.5 40.918 144.52 40.934 144.543 cv
40.941 144.57 40.949 144.594 40.953 144.617 cv
40.953 152.414 li
42.559 152.414 li
42.594 152.418 42.629 152.426 42.66 152.445 cv
42.691 152.469 42.715 152.5 42.738 152.535 cv
42.754 152.574 42.77 152.621 42.785 152.68 cv
42.793 152.742 42.801 152.816 42.805 152.895 cv
cp
f
46.004 152.613 mo
46.004 152.941 45.949 153.156 45.844 153.262 cv
45.734 153.367 45.539 153.418 45.258 153.422 cv
44.98 153.418 44.789 153.367 44.688 153.266 cv
44.578 153.16 44.527 152.949 44.531 152.633 cv
44.527 152.309 44.582 152.094 44.691 151.984 cv
44.797 151.879 44.992 151.824 45.277 151.824 cv
45.551 151.824 45.738 151.879 45.848 151.984 cv
45.949 152.09 46.004 152.301 46.004 152.613 cv
cp
f
53.414 152.852 mo
53.41 152.937 53.406 153.012 53.395 153.074 cv
53.383 153.141 53.367 153.195 53.348 153.234 cv
53.324 153.281 53.297 153.312 53.266 153.328 cv
53.23 153.352 53.191 153.359 53.152 153.359 cv
48.25 153.359 li
48.188 153.359 48.129 153.352 48.082 153.336 cv
48.031 153.32 47.992 153.297 47.957 153.258 cv
47.922 153.227 47.895 153.172 47.883 153.102 cv
47.863 153.031 47.855 152.945 47.859 152.844 cv
47.855 152.754 47.859 152.676 47.867 152.605 cv
47.871 152.539 47.887 152.48 47.914 152.426 cv
47.938 152.375 47.969 152.32 48.004 152.266 cv
48.039 152.215 48.082 152.16 48.141 152.098 cv
49.914 150.273 li
50.324 149.855 50.652 149.48 50.902 149.145 cv
51.148 148.816 51.34 148.512 51.473 148.234 cv
51.605 147.961 51.691 147.711 51.738 147.484 cv
51.777 147.262 51.801 147.051 51.801 146.855 cv
51.801 146.66 51.766 146.477 51.699 146.297 cv
51.633 146.125 51.539 145.969 51.414 145.832 cv
51.289 145.703 51.133 145.598 50.945 145.516 cv
50.758 145.441 50.539 145.402 50.293 145.398 cv
50.004 145.402 49.746 145.441 49.52 145.516 cv
49.289 145.598 49.09 145.684 48.918 145.77 cv
48.746 145.863 48.602 145.945 48.484 146.023 cv
48.367 146.102 48.281 146.141 48.23 146.141 cv
48.195 146.141 48.164 146.133 48.141 146.113 cv
48.109 146.098 48.09 146.066 48.074 146.023 cv
48.059 145.984 48.043 145.93 48.035 145.859 cv
48.023 145.793 48.02 145.711 48.023 145.613 cv
48.02 145.547 48.023 145.488 48.031 145.437 cv
48.035 145.387 48.043 145.344 48.055 145.305 cv
48.063 145.27 48.078 145.234 48.098 145.203 cv
48.117 145.172 48.152 145.133 48.211 145.082 cv
48.262 145.035 48.355 144.969 48.492 144.887 cv
48.625 144.805 48.797 144.727 49 144.645 cv
49.203 144.566 49.426 144.496 49.672 144.441 cv
49.914 144.387 50.172 144.359 50.445 144.359 cv
50.871 144.359 51.246 144.422 51.57 144.543 cv
51.891 144.664 52.156 144.828 52.371 145.039 cv
52.582 145.25 52.742 145.496 52.848 145.77 cv
52.953 146.051 53.008 146.348 53.008 146.66 cv
53.008 146.949 52.98 147.23 52.93 147.508 cv
52.879 147.793 52.773 148.098 52.613 148.422 cv
52.449 148.75 52.215 149.113 51.91 149.512 cv
51.602 149.914 51.195 150.375 50.691 150.891 cv
49.285 152.359 li
53.145 152.359 li
53.176 152.363 53.211 152.375 53.25 152.391 cv
53.281 152.414 53.313 152.445 53.34 152.484 cv
53.363 152.527 53.383 152.578 53.395 152.637 cv
53.406 152.703 53.41 152.773 53.414 152.852 cv
cp
f
60.488 150.508 mo
60.488 150.984 60.406 151.406 60.246 151.777 cv
60.086 152.148 59.859 152.461 59.57 152.715 cv
59.273 152.969 58.926 153.164 58.523 153.293 cv
58.117 153.426 57.668 153.488 57.176 153.488 cv
56.898 153.488 56.637 153.469 56.395 153.43 cv
56.145 153.391 55.926 153.344 55.738 153.289 cv
55.543 153.234 55.387 153.18 55.262 153.121 cv
55.137 153.07 55.059 153.027 55.027 152.992 cv
54.992 152.961 54.969 152.93 54.957 152.902 cv
54.941 152.875 54.926 152.844 54.918 152.801 cv
54.902 152.766 54.895 152.715 54.895 152.652 cv
54.887 152.594 54.887 152.523 54.887 152.441 cv
54.887 152.367 54.891 152.297 54.898 152.234 cv
54.906 152.172 54.918 152.121 54.938 152.082 cv
54.953 152.043 54.973 152.016 55 151.996 cv
55.023 151.98 55.055 151.973 55.086 151.969 cv
55.133 151.973 55.203 152 55.297 152.055 cv
55.391 152.113 55.52 152.176 55.684 152.242 cv
55.848 152.309 56.047 152.371 56.289 152.43 cv
56.523 152.488 56.809 152.516 57.145 152.516 cv
57.445 152.516 57.727 152.48 57.984 152.406 cv
58.238 152.336 58.461 152.223 58.648 152.066 cv
58.832 151.914 58.977 151.719 59.082 151.48 cv
59.188 151.246 59.238 150.957 59.242 150.617 cv
59.238 150.336 59.195 150.086 59.105 149.867 cv
59.016 149.648 58.879 149.469 58.695 149.324 cv
58.508 149.184 58.273 149.078 57.992 149.004 cv
57.707 148.934 57.367 148.895 56.98 148.895 cv
56.695 148.895 56.457 148.91 56.258 148.937 cv
56.055 148.969 55.867 148.984 55.695 148.98 cv
55.566 148.984 55.473 148.953 55.422 148.891 cv
55.363 148.832 55.336 148.719 55.34 148.547 cv
55.34 144.934 li
55.336 144.785 55.371 144.676 55.445 144.598 cv
55.512 144.527 55.613 144.488 55.75 144.488 cv
59.68 144.488 li
59.715 144.488 59.75 144.5 59.785 144.52 cv
59.816 144.543 59.844 144.574 59.871 144.613 cv
59.891 144.656 59.906 144.707 59.922 144.77 cv
59.93 144.836 59.938 144.914 59.941 144.996 cv
59.938 145.164 59.914 145.289 59.875 145.379 cv
59.828 145.473 59.77 145.52 59.691 145.516 cv
56.52 145.516 li
56.52 148.004 li
56.672 147.984 56.828 147.973 56.992 147.965 cv
57.148 147.961 57.336 147.957 57.551 147.957 cv
58.035 147.957 58.461 148.02 58.828 148.141 cv
59.191 148.262 59.496 148.434 59.746 148.652 cv
59.988 148.879 60.176 149.145 60.301 149.457 cv
60.426 149.773 60.488 150.125 60.488 150.508 cv
cp
f
29.32 100.301 mo
61.234 100.301 li
61.234 117.391 li
29.32 117.391 li
cp
0 0 0 0 cmyk
ef
35.684 113.176 mo
35.68 113.266 35.672 113.336 35.66 113.395 cv
35.645 113.457 35.625 113.508 35.605 113.539 cv
35.582 113.578 35.559 113.602 35.527 113.617 cv
35.496 113.633 35.465 113.641 35.438 113.641 cv
30.801 113.641 li
30.766 113.641 30.738 113.633 30.711 113.617 cv
30.684 113.602 30.656 113.578 30.633 113.539 cv
30.605 113.508 30.586 113.457 30.574 113.395 cv
30.559 113.336 30.551 113.266 30.555 113.176 cv
30.551 113.098 30.559 113.023 30.574 112.961 cv
30.586 112.902 30.602 112.855 30.625 112.816 cv
30.641 112.781 30.668 112.75 30.699 112.727 cv
30.73 112.707 30.762 112.699 30.801 112.695 cv
32.652 112.695 li
32.652 105.949 li
30.938 106.969 li
30.848 107.02 30.777 107.047 30.73 107.055 cv
30.676 107.062 30.633 107.055 30.602 107.023 cv
30.566 106.996 30.547 106.945 30.535 106.875 cv
30.523 106.809 30.516 106.723 30.52 106.613 cv
30.516 106.539 30.52 106.473 30.531 106.414 cv
30.535 106.363 30.547 106.316 30.563 106.277 cv
30.574 106.242 30.594 106.211 30.617 106.184 cv
30.641 106.156 30.672 106.129 30.719 106.102 cv
32.762 104.789 li
32.777 104.777 32.797 104.766 32.828 104.758 cv
32.852 104.75 32.887 104.742 32.934 104.73 cv
32.973 104.723 33.023 104.715 33.078 104.711 cv
33.133 104.711 33.199 104.711 33.285 104.707 cv
33.391 104.711 33.484 104.715 33.559 104.723 cv
33.629 104.73 33.684 104.746 33.73 104.762 cv
33.77 104.781 33.797 104.801 33.813 104.824 cv
33.82 104.852 33.828 104.875 33.832 104.898 cv
33.832 112.695 li
35.438 112.695 li
35.473 112.699 35.508 112.707 35.539 112.727 cv
35.57 112.75 35.594 112.781 35.617 112.816 cv
35.633 112.855 35.648 112.902 35.664 112.961 cv
35.672 113.023 35.68 113.098 35.684 113.176 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
42.785 113.133 mo
42.781 113.219 42.777 113.293 42.766 113.355 cv
42.754 113.422 42.738 113.477 42.719 113.516 cv
42.695 113.562 42.668 113.594 42.637 113.609 cv
42.602 113.633 42.563 113.641 42.523 113.641 cv
37.621 113.641 li
37.559 113.641 37.5 113.633 37.453 113.617 cv
37.402 113.602 37.363 113.578 37.328 113.539 cv
37.293 113.508 37.266 113.453 37.254 113.383 cv
37.234 113.312 37.227 113.227 37.23 113.125 cv
37.227 113.035 37.23 112.957 37.238 112.887 cv
37.242 112.82 37.258 112.762 37.285 112.707 cv
37.309 112.656 37.34 112.602 37.375 112.547 cv
37.41 112.496 37.453 112.441 37.512 112.379 cv
39.285 110.555 li
39.695 110.137 40.023 109.762 40.273 109.426 cv
40.52 109.098 40.711 108.793 40.844 108.516 cv
40.977 108.242 41.063 107.992 41.109 107.766 cv
41.148 107.543 41.172 107.332 41.172 107.137 cv
41.172 106.941 41.137 106.758 41.07 106.578 cv
41.004 106.406 40.91 106.25 40.785 106.113 cv
40.66 105.984 40.504 105.879 40.316 105.797 cv
40.129 105.723 39.91 105.684 39.664 105.68 cv
39.375 105.684 39.117 105.723 38.891 105.797 cv
38.66 105.879 38.461 105.965 38.289 106.051 cv
38.117 106.145 37.973 106.227 37.855 106.305 cv
37.738 106.383 37.652 106.422 37.602 106.422 cv
37.566 106.422 37.535 106.414 37.512 106.395 cv
37.48 106.379 37.461 106.348 37.445 106.305 cv
37.43 106.266 37.414 106.211 37.406 106.141 cv
37.395 106.074 37.391 105.992 37.395 105.895 cv
37.391 105.828 37.395 105.77 37.402 105.719 cv
37.406 105.668 37.414 105.625 37.426 105.586 cv
37.434 105.551 37.449 105.516 37.469 105.484 cv
37.488 105.453 37.523 105.414 37.582 105.363 cv
37.633 105.316 37.727 105.25 37.863 105.168 cv
37.996 105.086 38.168 105.008 38.371 104.926 cv
38.574 104.848 38.797 104.777 39.043 104.723 cv
39.285 104.668 39.543 104.641 39.816 104.641 cv
40.242 104.641 40.617 104.703 40.941 104.824 cv
41.262 104.945 41.527 105.109 41.742 105.32 cv
41.953 105.531 42.113 105.777 42.219 106.051 cv
42.324 106.332 42.379 106.629 42.379 106.941 cv
42.379 107.23 42.352 107.512 42.301 107.789 cv
42.25 108.074 42.145 108.379 41.984 108.703 cv
41.82 109.031 41.586 109.395 41.281 109.793 cv
40.973 110.195 40.566 110.656 40.063 111.172 cv
38.656 112.641 li
42.516 112.641 li
42.547 112.645 42.582 112.656 42.621 112.672 cv
42.652 112.695 42.684 112.727 42.711 112.766 cv
42.734 112.809 42.754 112.859 42.766 112.918 cv
42.777 112.984 42.781 113.055 42.785 113.133 cv
cp
f
46.004 112.895 mo
46.004 113.223 45.949 113.437 45.844 113.543 cv
45.734 113.648 45.539 113.699 45.258 113.703 cv
44.98 113.699 44.789 113.648 44.688 113.547 cv
44.578 113.441 44.527 113.23 44.531 112.914 cv
44.527 112.59 44.582 112.375 44.691 112.266 cv
44.797 112.16 44.992 112.105 45.277 112.105 cv
45.551 112.105 45.738 112.16 45.848 112.266 cv
45.949 112.371 46.004 112.582 46.004 112.895 cv
cp
f
53.371 110.789 mo
53.371 111.266 53.289 111.687 53.129 112.059 cv
52.969 112.43 52.742 112.742 52.453 112.996 cv
52.156 113.25 51.809 113.445 51.406 113.574 cv
51 113.707 50.551 113.77 50.059 113.77 cv
49.781 113.77 49.52 113.75 49.277 113.711 cv
49.027 113.672 48.809 113.625 48.621 113.57 cv
48.426 113.516 48.27 113.461 48.145 113.402 cv
48.02 113.352 47.941 113.309 47.91 113.273 cv
47.875 113.242 47.852 113.211 47.84 113.184 cv
47.824 113.156 47.809 113.125 47.801 113.082 cv
47.785 113.047 47.777 112.996 47.777 112.934 cv
47.77 112.875 47.77 112.805 47.77 112.723 cv
47.77 112.648 47.773 112.578 47.781 112.516 cv
47.789 112.453 47.801 112.402 47.82 112.363 cv
47.836 112.324 47.855 112.297 47.883 112.277 cv
47.906 112.262 47.938 112.254 47.969 112.25 cv
48.016 112.254 48.086 112.281 48.18 112.336 cv
48.273 112.395 48.402 112.457 48.566 112.523 cv
48.73 112.59 48.93 112.652 49.172 112.711 cv
49.406 112.77 49.691 112.797 50.027 112.797 cv
50.328 112.797 50.609 112.762 50.867 112.687 cv
51.121 112.617 51.344 112.504 51.531 112.348 cv
51.715 112.195 51.859 112 51.965 111.762 cv
52.07 111.527 52.121 111.238 52.125 110.898 cv
52.121 110.617 52.078 110.367 51.988 110.148 cv
51.898 109.93 51.762 109.75 51.578 109.605 cv
51.391 109.465 51.156 109.359 50.875 109.285 cv
50.59 109.215 50.25 109.176 49.863 109.176 cv
49.578 109.176 49.34 109.191 49.141 109.219 cv
48.938 109.25 48.75 109.266 48.578 109.262 cv
48.449 109.266 48.355 109.234 48.305 109.172 cv
48.246 109.113 48.219 109 48.223 108.828 cv
48.223 105.215 li
48.219 105.066 48.254 104.957 48.328 104.879 cv
48.395 104.809 48.496 104.77 48.633 104.77 cv
52.563 104.77 li
52.598 104.77 52.633 104.781 52.668 104.801 cv
52.699 104.824 52.727 104.855 52.754 104.895 cv
52.773 104.937 52.789 104.988 52.805 105.051 cv
52.813 105.117 52.82 105.195 52.824 105.277 cv
52.82 105.445 52.797 105.57 52.758 105.66 cv
52.711 105.754 52.652 105.801 52.574 105.797 cv
49.402 105.797 li
49.402 108.285 li
49.555 108.266 49.711 108.254 49.875 108.246 cv
50.031 108.242 50.219 108.238 50.434 108.238 cv
50.918 108.238 51.344 108.301 51.711 108.422 cv
52.074 108.543 52.379 108.715 52.629 108.934 cv
52.871 109.16 53.059 109.426 53.184 109.738 cv
53.309 110.055 53.371 110.406 53.371 110.789 cv
cp
f
60.824 109.184 mo
60.82 109.867 60.77 110.488 60.664 111.051 cv
60.555 111.613 60.375 112.098 60.129 112.5 cv
59.875 112.906 59.547 113.219 59.148 113.437 cv
58.742 113.66 58.25 113.77 57.664 113.77 cv
57.105 113.77 56.633 113.672 56.254 113.473 cv
55.871 113.277 55.566 112.984 55.332 112.598 cv
55.098 112.211 54.93 111.738 54.836 111.172 cv
54.734 110.609 54.688 109.961 54.688 109.227 cv
54.688 108.555 54.742 107.934 54.852 107.367 cv
54.961 106.805 55.137 106.32 55.387 105.914 cv
55.629 105.512 55.953 105.199 56.359 104.973 cv
56.758 104.754 57.254 104.641 57.844 104.641 cv
58.402 104.641 58.875 104.742 59.258 104.937 cv
59.641 105.141 59.945 105.434 60.18 105.816 cv
60.41 106.207 60.578 106.68 60.676 107.242 cv
60.773 107.805 60.82 108.453 60.824 109.184 cv
cp
59.617 109.266 mo
59.613 108.824 59.598 108.426 59.57 108.074 cv
59.535 107.723 59.488 107.414 59.43 107.145 cv
59.363 106.875 59.285 106.645 59.188 106.449 cv
59.09 106.258 58.973 106.098 58.836 105.969 cv
58.695 105.844 58.535 105.75 58.363 105.691 cv
58.184 105.637 57.988 105.609 57.773 105.605 cv
57.383 105.609 57.066 105.699 56.828 105.883 cv
56.582 106.066 56.391 106.32 56.254 106.637 cv
56.113 106.957 56.02 107.328 55.969 107.758 cv
55.918 108.187 55.895 108.652 55.895 109.145 cv
55.895 109.809 55.926 110.371 55.996 110.832 cv
56.063 111.301 56.172 111.68 56.324 111.969 cv
56.469 112.266 56.66 112.477 56.891 112.605 cv
57.121 112.742 57.402 112.809 57.734 112.805 cv
57.988 112.809 58.211 112.77 58.406 112.684 cv
58.598 112.605 58.766 112.484 58.906 112.328 cv
59.047 112.176 59.16 111.992 59.254 111.777 cv
59.34 111.562 59.414 111.324 59.473 111.062 cv
59.523 110.805 59.563 110.523 59.586 110.219 cv
59.605 109.914 59.613 109.598 59.617 109.266 cv
cp
f
29.32 60.59 mo
61.234 60.59 li
61.234 77.68 li
29.32 77.68 li
cp
0 0 0 0 cmyk
ef
35.684 73.457 mo
35.68 73.547 35.672 73.617 35.66 73.676 cv
35.645 73.738 35.625 73.789 35.605 73.82 cv
35.582 73.859 35.559 73.883 35.527 73.898 cv
35.496 73.914 35.465 73.922 35.438 73.922 cv
30.801 73.922 li
30.766 73.922 30.738 73.914 30.711 73.898 cv
30.684 73.883 30.656 73.859 30.633 73.82 cv
30.605 73.789 30.586 73.738 30.574 73.676 cv
30.559 73.617 30.551 73.547 30.555 73.457 cv
30.551 73.379 30.559 73.305 30.574 73.242 cv
30.586 73.184 30.602 73.137 30.625 73.098 cv
30.641 73.062 30.668 73.031 30.699 73.008 cv
30.73 72.988 30.762 72.98 30.801 72.977 cv
32.652 72.977 li
32.652 66.23 li
30.938 67.25 li
30.848 67.301 30.777 67.328 30.73 67.336 cv
30.676 67.344 30.633 67.336 30.602 67.305 cv
30.566 67.277 30.547 67.227 30.535 67.156 cv
30.523 67.09 30.516 67.004 30.52 66.895 cv
30.516 66.82 30.52 66.754 30.531 66.695 cv
30.535 66.645 30.547 66.598 30.563 66.559 cv
30.574 66.523 30.594 66.492 30.617 66.465 cv
30.641 66.437 30.672 66.41 30.719 66.383 cv
32.762 65.07 li
32.777 65.059 32.797 65.047 32.828 65.039 cv
32.852 65.031 32.887 65.023 32.934 65.012 cv
32.973 65.004 33.023 64.996 33.078 64.992 cv
33.133 64.992 33.199 64.992 33.285 64.988 cv
33.391 64.992 33.484 64.996 33.559 65.004 cv
33.629 65.012 33.684 65.027 33.73 65.043 cv
33.77 65.062 33.797 65.082 33.813 65.105 cv
33.82 65.133 33.828 65.156 33.832 65.18 cv
33.832 72.977 li
35.438 72.977 li
35.473 72.98 35.508 72.988 35.539 73.008 cv
35.57 73.031 35.594 73.062 35.617 73.098 cv
35.633 73.137 35.648 73.184 35.664 73.242 cv
35.672 73.305 35.68 73.379 35.684 73.457 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
42.715 71.387 mo
42.711 71.797 42.641 72.164 42.5 72.488 cv
42.355 72.816 42.152 73.098 41.891 73.328 cv
41.625 73.562 41.297 73.738 40.91 73.863 cv
40.52 73.988 40.082 74.051 39.598 74.051 cv
39.293 74.051 39.016 74.023 38.762 73.977 cv
38.5 73.93 38.27 73.879 38.074 73.809 cv
37.871 73.746 37.707 73.676 37.574 73.605 cv
37.441 73.535 37.355 73.484 37.324 73.449 cv
37.285 73.422 37.262 73.391 37.246 73.355 cv
37.227 73.324 37.207 73.285 37.195 73.238 cv
37.18 73.195 37.172 73.141 37.164 73.07 cv
37.156 73.008 37.152 72.926 37.156 72.824 cv
37.152 72.664 37.168 72.551 37.203 72.484 cv
37.234 72.422 37.281 72.387 37.344 72.387 cv
37.387 72.387 37.469 72.426 37.594 72.496 cv
37.715 72.574 37.875 72.652 38.07 72.734 cv
38.262 72.82 38.488 72.898 38.754 72.969 cv
39.012 73.043 39.305 73.078 39.625 73.078 cv
39.934 73.078 40.203 73.039 40.441 72.961 cv
40.672 72.883 40.871 72.773 41.031 72.633 cv
41.188 72.492 41.305 72.324 41.387 72.129 cv
41.465 71.934 41.504 71.723 41.508 71.496 cv
41.504 71.246 41.453 71.02 41.355 70.816 cv
41.25 70.617 41.102 70.445 40.91 70.297 cv
40.711 70.152 40.473 70.039 40.188 69.961 cv
39.902 69.883 39.578 69.844 39.215 69.844 cv
38.344 69.844 li
38.301 69.844 38.266 69.836 38.23 69.82 cv
38.195 69.805 38.164 69.777 38.141 69.738 cv
38.113 69.703 38.094 69.656 38.078 69.598 cv
38.063 69.539 38.055 69.461 38.055 69.363 cv
38.055 69.277 38.059 69.207 38.074 69.148 cv
38.082 69.094 38.102 69.047 38.133 69.012 cv
38.156 68.977 38.188 68.953 38.219 68.934 cv
38.25 68.922 38.285 68.914 38.328 68.91 cv
39.102 68.91 li
39.402 68.914 39.672 68.875 39.914 68.793 cv
40.148 68.719 40.352 68.605 40.523 68.457 cv
40.688 68.312 40.816 68.137 40.906 67.934 cv
40.996 67.73 41.043 67.504 41.043 67.25 cv
41.043 67.07 41.012 66.895 40.953 66.727 cv
40.891 66.562 40.801 66.418 40.684 66.293 cv
40.563 66.168 40.41 66.07 40.23 66 cv
40.043 65.93 39.832 65.895 39.59 65.895 cv
39.324 65.895 39.078 65.937 38.859 66.016 cv
38.633 66.098 38.438 66.184 38.266 66.273 cv
38.09 66.367 37.945 66.453 37.832 66.531 cv
37.719 66.613 37.637 66.652 37.594 66.648 cv
37.559 66.652 37.531 66.645 37.508 66.633 cv
37.48 66.621 37.461 66.598 37.445 66.562 cv
37.43 66.531 37.418 66.484 37.41 66.418 cv
37.402 66.359 37.398 66.277 37.402 66.176 cv
37.398 66.109 37.398 66.051 37.406 65.996 cv
37.406 65.945 37.418 65.898 37.434 65.855 cv
37.449 65.82 37.465 65.785 37.484 65.75 cv
37.5 65.723 37.531 65.684 37.574 65.637 cv
37.617 65.594 37.703 65.531 37.84 65.449 cv
37.969 65.367 38.133 65.289 38.328 65.207 cv
38.52 65.129 38.742 65.059 39 65.004 cv
39.25 64.949 39.523 64.922 39.82 64.922 cv
40.227 64.922 40.59 64.977 40.902 65.078 cv
41.215 65.187 41.473 65.336 41.684 65.523 cv
41.887 65.719 42.043 65.949 42.148 66.215 cv
42.25 66.484 42.301 66.777 42.305 67.102 cv
42.301 67.383 42.266 67.645 42.195 67.879 cv
42.121 68.121 42.012 68.332 41.871 68.516 cv
41.727 68.703 41.555 68.859 41.352 68.988 cv
41.145 69.121 40.906 69.215 40.637 69.262 cv
40.637 69.273 li
40.941 69.309 41.223 69.383 41.477 69.504 cv
41.73 69.625 41.949 69.777 42.133 69.961 cv
42.313 70.145 42.453 70.359 42.559 70.602 cv
42.66 70.848 42.711 71.109 42.715 71.387 cv
cp
f
46.004 73.176 mo
46.004 73.504 45.949 73.719 45.844 73.824 cv
45.734 73.93 45.539 73.98 45.258 73.984 cv
44.98 73.98 44.789 73.93 44.688 73.828 cv
44.578 73.723 44.527 73.512 44.531 73.195 cv
44.527 72.871 44.582 72.656 44.691 72.547 cv
44.797 72.441 44.992 72.387 45.277 72.387 cv
45.551 72.387 45.738 72.441 45.848 72.547 cv
45.949 72.652 46.004 72.863 46.004 73.176 cv
cp
f
53.543 65.559 mo
53.539 65.645 53.535 65.719 53.531 65.781 cv
53.523 65.852 53.516 65.914 53.504 65.973 cv
53.492 66.039 53.477 66.098 53.457 66.152 cv
53.434 66.211 53.41 66.273 53.387 66.332 cv
50.191 73.695 li
50.164 73.754 50.137 73.797 50.105 73.828 cv
50.07 73.863 50.027 73.891 49.973 73.91 cv
49.918 73.93 49.848 73.941 49.77 73.953 cv
49.684 73.957 49.586 73.961 49.469 73.965 cv
49.313 73.961 49.191 73.953 49.105 73.941 cv
49.02 73.926 48.957 73.91 48.918 73.879 cv
48.879 73.852 48.859 73.812 48.867 73.77 cv
48.867 73.727 48.883 73.676 48.914 73.613 cv
52.273 66.086 li
48.016 66.086 li
47.93 66.09 47.863 66.043 47.82 65.949 cv
47.777 65.859 47.758 65.73 47.758 65.566 cv
47.758 65.48 47.762 65.406 47.773 65.34 cv
47.785 65.277 47.801 65.223 47.824 65.18 cv
47.844 65.137 47.871 65.105 47.906 65.082 cv
47.938 65.062 47.977 65.051 48.016 65.051 cv
53.188 65.051 li
53.246 65.051 53.301 65.059 53.352 65.074 cv
53.398 65.09 53.434 65.117 53.461 65.156 cv
53.484 65.195 53.504 65.25 53.52 65.312 cv
53.531 65.379 53.539 65.461 53.543 65.559 cv
cp
f
60.488 71.07 mo
60.488 71.547 60.406 71.969 60.246 72.34 cv
60.086 72.711 59.859 73.023 59.57 73.277 cv
59.273 73.531 58.926 73.727 58.523 73.855 cv
58.117 73.988 57.668 74.051 57.176 74.051 cv
56.898 74.051 56.637 74.031 56.395 73.992 cv
56.145 73.953 55.926 73.906 55.738 73.852 cv
55.543 73.797 55.387 73.742 55.262 73.684 cv
55.137 73.633 55.059 73.59 55.027 73.555 cv
54.992 73.523 54.969 73.492 54.957 73.465 cv
54.941 73.437 54.926 73.406 54.918 73.363 cv
54.902 73.328 54.895 73.277 54.895 73.215 cv
54.887 73.156 54.887 73.086 54.887 73.004 cv
54.887 72.93 54.891 72.859 54.898 72.797 cv
54.906 72.734 54.918 72.684 54.938 72.645 cv
54.953 72.605 54.973 72.578 55 72.559 cv
55.023 72.543 55.055 72.535 55.086 72.531 cv
55.133 72.535 55.203 72.562 55.297 72.617 cv
55.391 72.676 55.52 72.738 55.684 72.805 cv
55.848 72.871 56.047 72.934 56.289 72.992 cv
56.523 73.051 56.809 73.078 57.145 73.078 cv
57.445 73.078 57.727 73.043 57.984 72.969 cv
58.238 72.898 58.461 72.785 58.648 72.629 cv
58.832 72.477 58.977 72.281 59.082 72.043 cv
59.188 71.809 59.238 71.52 59.242 71.18 cv
59.238 70.898 59.195 70.648 59.105 70.43 cv
59.016 70.211 58.879 70.031 58.695 69.887 cv
58.508 69.746 58.273 69.641 57.992 69.566 cv
57.707 69.496 57.367 69.457 56.98 69.457 cv
56.695 69.457 56.457 69.473 56.258 69.5 cv
56.055 69.531 55.867 69.547 55.695 69.543 cv
55.566 69.547 55.473 69.516 55.422 69.453 cv
55.363 69.395 55.336 69.281 55.34 69.109 cv
55.34 65.496 li
55.336 65.348 55.371 65.238 55.445 65.16 cv
55.512 65.09 55.613 65.051 55.75 65.051 cv
59.68 65.051 li
59.715 65.051 59.75 65.062 59.785 65.082 cv
59.816 65.105 59.844 65.137 59.871 65.176 cv
59.891 65.219 59.906 65.27 59.922 65.332 cv
59.93 65.398 59.938 65.477 59.941 65.559 cv
59.938 65.727 59.914 65.852 59.875 65.941 cv
59.828 66.035 59.77 66.082 59.691 66.078 cv
56.52 66.078 li
56.52 68.566 li
56.672 68.547 56.828 68.535 56.992 68.527 cv
57.148 68.523 57.336 68.52 57.551 68.52 cv
58.035 68.52 58.461 68.582 58.828 68.703 cv
59.191 68.824 59.496 68.996 59.746 69.215 cv
59.988 69.441 60.176 69.707 60.301 70.02 cv
60.426 70.336 60.488 70.687 60.488 71.07 cv
cp
f
29.32 20.879 mo
61.234 20.879 li
61.234 37.969 li
29.32 37.969 li
cp
0 0 0 0 cmyk
ef
35.684 33.734 mo
35.68 33.824 35.672 33.895 35.66 33.953 cv
35.645 34.016 35.625 34.066 35.605 34.098 cv
35.582 34.137 35.559 34.16 35.527 34.176 cv
35.496 34.191 35.465 34.199 35.438 34.199 cv
30.801 34.199 li
30.766 34.199 30.738 34.191 30.711 34.176 cv
30.684 34.16 30.656 34.137 30.633 34.098 cv
30.605 34.066 30.586 34.016 30.574 33.953 cv
30.559 33.895 30.551 33.824 30.555 33.734 cv
30.551 33.656 30.559 33.582 30.574 33.52 cv
30.586 33.461 30.602 33.414 30.625 33.375 cv
30.641 33.34 30.668 33.309 30.699 33.285 cv
30.73 33.266 30.762 33.258 30.801 33.254 cv
32.652 33.254 li
32.652 26.508 li
30.938 27.527 li
30.848 27.578 30.777 27.605 30.73 27.613 cv
30.676 27.621 30.633 27.613 30.602 27.582 cv
30.566 27.555 30.547 27.504 30.535 27.434 cv
30.523 27.367 30.516 27.281 30.52 27.172 cv
30.516 27.098 30.52 27.031 30.531 26.973 cv
30.535 26.922 30.547 26.875 30.563 26.836 cv
30.574 26.801 30.594 26.77 30.617 26.742 cv
30.641 26.715 30.672 26.687 30.719 26.66 cv
32.762 25.348 li
32.777 25.336 32.797 25.324 32.828 25.316 cv
32.852 25.309 32.887 25.301 32.934 25.289 cv
32.973 25.281 33.023 25.273 33.078 25.27 cv
33.133 25.27 33.199 25.27 33.285 25.266 cv
33.391 25.27 33.484 25.273 33.559 25.281 cv
33.629 25.289 33.684 25.305 33.73 25.32 cv
33.77 25.34 33.797 25.359 33.813 25.383 cv
33.82 25.41 33.828 25.434 33.832 25.457 cv
33.832 33.254 li
35.438 33.254 li
35.473 33.258 35.508 33.266 35.539 33.285 cv
35.57 33.309 35.594 33.34 35.617 33.375 cv
35.633 33.414 35.648 33.461 35.664 33.52 cv
35.672 33.582 35.68 33.656 35.684 33.734 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
42.742 31.348 mo
42.742 31.824 42.66 32.246 42.5 32.617 cv
42.34 32.988 42.113 33.301 41.824 33.555 cv
41.527 33.809 41.18 34.004 40.777 34.133 cv
40.371 34.266 39.922 34.328 39.43 34.328 cv
39.152 34.328 38.891 34.309 38.648 34.27 cv
38.398 34.23 38.18 34.184 37.992 34.129 cv
37.797 34.074 37.641 34.02 37.516 33.961 cv
37.391 33.91 37.313 33.867 37.281 33.832 cv
37.246 33.801 37.223 33.77 37.211 33.742 cv
37.195 33.715 37.18 33.684 37.172 33.641 cv
37.156 33.605 37.148 33.555 37.148 33.492 cv
37.141 33.434 37.141 33.363 37.141 33.281 cv
37.141 33.207 37.145 33.137 37.152 33.074 cv
37.16 33.012 37.172 32.961 37.191 32.922 cv
37.207 32.883 37.227 32.855 37.254 32.836 cv
37.277 32.82 37.309 32.812 37.34 32.809 cv
37.387 32.812 37.457 32.84 37.551 32.895 cv
37.645 32.953 37.773 33.016 37.938 33.082 cv
38.102 33.148 38.301 33.211 38.543 33.27 cv
38.777 33.328 39.063 33.355 39.398 33.355 cv
39.699 33.355 39.98 33.32 40.238 33.246 cv
40.492 33.176 40.715 33.062 40.902 32.906 cv
41.086 32.754 41.23 32.559 41.336 32.32 cv
41.441 32.086 41.492 31.797 41.496 31.457 cv
41.492 31.176 41.449 30.926 41.359 30.707 cv
41.27 30.488 41.133 30.309 40.949 30.164 cv
40.762 30.023 40.527 29.918 40.246 29.844 cv
39.961 29.773 39.621 29.734 39.234 29.734 cv
38.949 29.734 38.711 29.75 38.512 29.777 cv
38.309 29.809 38.121 29.824 37.949 29.82 cv
37.82 29.824 37.727 29.793 37.676 29.73 cv
37.617 29.672 37.59 29.559 37.594 29.387 cv
37.594 25.773 li
37.59 25.625 37.625 25.516 37.699 25.437 cv
37.766 25.367 37.867 25.328 38.004 25.328 cv
41.934 25.328 li
41.969 25.328 42.004 25.34 42.039 25.359 cv
42.07 25.383 42.098 25.414 42.125 25.453 cv
42.145 25.496 42.16 25.547 42.176 25.609 cv
42.184 25.676 42.191 25.754 42.195 25.836 cv
42.191 26.004 42.168 26.129 42.129 26.219 cv
42.082 26.312 42.023 26.359 41.945 26.355 cv
38.773 26.355 li
38.773 28.844 li
38.926 28.824 39.082 28.812 39.246 28.805 cv
39.402 28.801 39.59 28.797 39.805 28.797 cv
40.289 28.797 40.715 28.859 41.082 28.98 cv
41.445 29.102 41.75 29.273 42 29.492 cv
42.242 29.719 42.43 29.984 42.555 30.297 cv
42.68 30.613 42.742 30.965 42.742 31.348 cv
cp
f
46.004 33.453 mo
46.004 33.781 45.949 33.996 45.844 34.102 cv
45.734 34.207 45.539 34.258 45.258 34.262 cv
44.98 34.258 44.789 34.207 44.688 34.105 cv
44.578 34 44.527 33.789 44.531 33.473 cv
44.527 33.148 44.582 32.934 44.691 32.824 cv
44.797 32.719 44.992 32.664 45.277 32.664 cv
45.551 32.664 45.738 32.719 45.848 32.824 cv
45.949 32.93 46.004 33.141 46.004 33.453 cv
cp
f
53.707 29.742 mo
53.703 30.426 53.652 31.047 53.547 31.609 cv
53.438 32.172 53.258 32.656 53.012 33.059 cv
52.758 33.465 52.43 33.777 52.031 33.996 cv
51.625 34.219 51.133 34.328 50.547 34.328 cv
49.988 34.328 49.516 34.23 49.137 34.031 cv
48.754 33.836 48.449 33.543 48.215 33.156 cv
47.98 32.77 47.813 32.297 47.719 31.73 cv
47.617 31.168 47.57 30.52 47.57 29.785 cv
47.57 29.113 47.625 28.492 47.734 27.926 cv
47.844 27.363 48.02 26.879 48.27 26.473 cv
48.512 26.07 48.836 25.758 49.242 25.531 cv
49.641 25.312 50.137 25.199 50.727 25.199 cv
51.285 25.199 51.758 25.301 52.141 25.496 cv
52.523 25.699 52.828 25.992 53.063 26.375 cv
53.293 26.766 53.461 27.238 53.559 27.801 cv
53.656 28.363 53.703 29.012 53.707 29.742 cv
cp
52.5 29.824 mo
52.496 29.383 52.48 28.984 52.453 28.633 cv
52.418 28.281 52.371 27.973 52.313 27.703 cv
52.246 27.434 52.168 27.203 52.07 27.008 cv
51.973 26.816 51.855 26.656 51.719 26.527 cv
51.578 26.402 51.418 26.309 51.246 26.25 cv
51.066 26.195 50.871 26.168 50.656 26.164 cv
50.266 26.168 49.949 26.258 49.711 26.441 cv
49.465 26.625 49.273 26.879 49.137 27.195 cv
48.996 27.516 48.902 27.887 48.852 28.316 cv
48.801 28.746 48.777 29.211 48.777 29.703 cv
48.777 30.367 48.809 30.93 48.879 31.391 cv
48.945 31.859 49.055 32.238 49.207 32.527 cv
49.352 32.824 49.543 33.035 49.773 33.164 cv
50.004 33.301 50.285 33.367 50.617 33.363 cv
50.871 33.367 51.094 33.328 51.289 33.242 cv
51.48 33.164 51.648 33.043 51.789 32.887 cv
51.93 32.734 52.043 32.551 52.137 32.336 cv
52.223 32.121 52.297 31.883 52.355 31.621 cv
52.406 31.363 52.445 31.082 52.469 30.777 cv
52.488 30.473 52.496 30.156 52.5 29.824 cv
cp
f
60.824 29.742 mo
60.82 30.426 60.77 31.047 60.664 31.609 cv
60.555 32.172 60.375 32.656 60.129 33.059 cv
59.875 33.465 59.547 33.777 59.148 33.996 cv
58.742 34.219 58.25 34.328 57.664 34.328 cv
57.105 34.328 56.633 34.23 56.254 34.031 cv
55.871 33.836 55.566 33.543 55.332 33.156 cv
55.098 32.77 54.93 32.297 54.836 31.73 cv
54.734 31.168 54.688 30.52 54.688 29.785 cv
54.688 29.113 54.742 28.492 54.852 27.926 cv
54.961 27.363 55.137 26.879 55.387 26.473 cv
55.629 26.07 55.953 25.758 56.359 25.531 cv
56.758 25.312 57.254 25.199 57.844 25.199 cv
58.402 25.199 58.875 25.301 59.258 25.496 cv
59.641 25.699 59.945 25.992 60.18 26.375 cv
60.41 26.766 60.578 27.238 60.676 27.801 cv
60.773 28.363 60.82 29.012 60.824 29.742 cv
cp
59.617 29.824 mo
59.613 29.383 59.598 28.984 59.57 28.633 cv
59.535 28.281 59.488 27.973 59.43 27.703 cv
59.363 27.434 59.285 27.203 59.188 27.008 cv
59.09 26.816 58.973 26.656 58.836 26.527 cv
58.695 26.402 58.535 26.309 58.363 26.25 cv
58.184 26.195 57.988 26.168 57.773 26.164 cv
57.383 26.168 57.066 26.258 56.828 26.441 cv
56.582 26.625 56.391 26.879 56.254 27.195 cv
56.113 27.516 56.02 27.887 55.969 28.316 cv
55.918 28.746 55.895 29.211 55.895 29.703 cv
55.895 30.367 55.926 30.93 55.996 31.391 cv
56.063 31.859 56.172 32.238 56.324 32.527 cv
56.469 32.824 56.66 33.035 56.891 33.164 cv
57.121 33.301 57.402 33.367 57.734 33.363 cv
57.988 33.367 58.211 33.328 58.406 33.242 cv
58.598 33.164 58.766 33.043 58.906 32.887 cv
59.047 32.734 59.16 32.551 59.254 32.336 cv
59.34 32.121 59.414 31.883 59.473 31.621 cv
59.523 31.363 59.563 31.082 59.586 30.777 cv
59.605 30.473 59.613 30.156 59.617 29.824 cv
cp
f
77.055 528.566 mo
77.051 528.656 77.043 528.727 77.031 528.785 cv
77.016 528.848 76.996 528.898 76.977 528.93 cv
76.953 528.969 76.93 528.992 76.898 529.008 cv
76.867 529.023 76.836 529.031 76.809 529.031 cv
72.172 529.031 li
72.137 529.031 72.109 529.023 72.082 529.008 cv
72.055 528.992 72.027 528.969 72.004 528.93 cv
71.977 528.898 71.957 528.848 71.945 528.785 cv
71.93 528.727 71.922 528.656 71.926 528.566 cv
71.922 528.488 71.93 528.414 71.945 528.352 cv
71.957 528.293 71.973 528.246 71.996 528.207 cv
72.012 528.172 72.039 528.141 72.07 528.117 cv
72.102 528.098 72.133 528.09 72.172 528.086 cv
74.023 528.086 li
74.023 521.34 li
72.309 522.359 li
72.219 522.41 72.148 522.437 72.102 522.445 cv
72.047 522.453 72.004 522.445 71.973 522.414 cv
71.938 522.387 71.918 522.336 71.906 522.266 cv
71.895 522.199 71.887 522.113 71.891 522.004 cv
71.887 521.93 71.891 521.863 71.902 521.805 cv
71.906 521.754 71.918 521.707 71.934 521.668 cv
71.945 521.633 71.965 521.602 71.988 521.574 cv
72.012 521.547 72.043 521.52 72.09 521.492 cv
74.133 520.18 li
74.148 520.168 74.168 520.156 74.199 520.148 cv
74.223 520.141 74.258 520.133 74.305 520.121 cv
74.344 520.113 74.395 520.105 74.449 520.102 cv
74.504 520.102 74.57 520.102 74.656 520.098 cv
74.762 520.102 74.855 520.105 74.93 520.113 cv
75 520.121 75.055 520.137 75.102 520.152 cv
75.141 520.172 75.168 520.191 75.184 520.215 cv
75.191 520.242 75.199 520.266 75.203 520.289 cv
75.203 528.086 li
76.809 528.086 li
76.844 528.09 76.879 528.098 76.91 528.117 cv
76.941 528.141 76.965 528.172 76.988 528.207 cv
77.004 528.246 77.02 528.293 77.035 528.352 cv
77.043 528.414 77.051 528.488 77.055 528.566 cv
cp
f
151.555 528.523 mo
151.551 528.609 151.547 528.684 151.535 528.746 cv
151.523 528.812 151.508 528.867 151.488 528.906 cv
151.465 528.953 151.438 528.984 151.406 529 cv
151.371 529.023 151.332 529.031 151.293 529.031 cv
146.391 529.031 li
146.328 529.031 146.27 529.023 146.223 529.008 cv
146.172 528.992 146.133 528.969 146.098 528.93 cv
146.063 528.898 146.035 528.844 146.023 528.773 cv
146.004 528.703 145.996 528.617 146 528.516 cv
145.996 528.426 146 528.348 146.008 528.277 cv
146.012 528.211 146.027 528.152 146.055 528.098 cv
146.078 528.047 146.109 527.992 146.145 527.937 cv
146.18 527.887 146.223 527.832 146.281 527.77 cv
148.055 525.945 li
148.465 525.527 148.793 525.152 149.043 524.816 cv
149.289 524.488 149.48 524.184 149.613 523.906 cv
149.746 523.633 149.832 523.383 149.879 523.156 cv
149.918 522.934 149.941 522.723 149.941 522.527 cv
149.941 522.332 149.906 522.148 149.84 521.969 cv
149.773 521.797 149.68 521.641 149.555 521.504 cv
149.43 521.375 149.273 521.27 149.086 521.187 cv
148.898 521.113 148.68 521.074 148.434 521.07 cv
148.145 521.074 147.887 521.113 147.66 521.187 cv
147.43 521.27 147.23 521.355 147.059 521.441 cv
146.887 521.535 146.742 521.617 146.625 521.695 cv
146.508 521.773 146.422 521.812 146.371 521.812 cv
146.336 521.812 146.305 521.805 146.281 521.785 cv
146.25 521.77 146.23 521.738 146.215 521.695 cv
146.199 521.656 146.184 521.602 146.176 521.531 cv
146.164 521.465 146.16 521.383 146.164 521.285 cv
146.16 521.219 146.164 521.16 146.172 521.109 cv
146.176 521.059 146.184 521.016 146.195 520.977 cv
146.203 520.941 146.219 520.906 146.238 520.875 cv
146.258 520.844 146.293 520.805 146.352 520.754 cv
146.402 520.707 146.496 520.641 146.633 520.559 cv
146.766 520.477 146.938 520.398 147.141 520.316 cv
147.344 520.238 147.566 520.168 147.813 520.113 cv
148.055 520.059 148.313 520.031 148.586 520.031 cv
149.012 520.031 149.387 520.094 149.711 520.215 cv
150.031 520.336 150.297 520.5 150.512 520.711 cv
150.723 520.922 150.883 521.168 150.988 521.441 cv
151.094 521.723 151.148 522.02 151.148 522.332 cv
151.148 522.621 151.121 522.902 151.07 523.18 cv
151.02 523.465 150.914 523.77 150.754 524.094 cv
150.59 524.422 150.355 524.785 150.051 525.184 cv
149.742 525.586 149.336 526.047 148.832 526.562 cv
147.426 528.031 li
151.285 528.031 li
151.316 528.035 151.352 528.047 151.391 528.062 cv
151.422 528.086 151.453 528.117 151.48 528.156 cv
151.504 528.199 151.523 528.25 151.535 528.309 cv
151.547 528.375 151.551 528.445 151.555 528.523 cv
cp
f
226.48 526.508 mo
226.477 526.66 226.453 526.781 226.41 526.867 cv
226.363 526.957 226.301 527 226.219 526.996 cv
225.219 526.996 li
225.219 528.859 li
225.219 528.898 225.207 528.93 225.191 528.953 cv
225.168 528.98 225.137 529 225.094 529.02 cv
225.043 529.035 224.98 529.047 224.91 529.059 cv
224.832 529.066 224.738 529.07 224.621 529.074 cv
224.504 529.07 224.406 529.066 224.336 529.059 cv
224.258 529.047 224.199 529.035 224.156 529.02 cv
224.109 529 224.078 528.98 224.063 528.953 cv
224.043 528.93 224.035 528.898 224.039 528.859 cv
224.039 526.996 li
220.41 526.996 li
220.352 527 220.309 526.992 220.273 526.977 cv
220.238 526.965 220.203 526.937 220.176 526.898 cv
220.145 526.863 220.125 526.812 220.113 526.742 cv
220.102 526.676 220.098 526.586 220.098 526.473 cv
220.098 526.391 220.098 526.312 220.105 526.242 cv
220.105 526.172 220.117 526.109 220.133 526.055 cv
220.145 526 220.16 525.945 220.188 525.891 cv
220.207 525.836 220.234 525.781 220.27 525.719 cv
223.43 520.332 li
223.449 520.297 223.484 520.266 223.531 520.238 cv
223.574 520.211 223.629 520.187 223.703 520.168 cv
223.77 520.152 223.855 520.141 223.961 520.129 cv
224.063 520.125 224.184 520.121 224.324 520.117 cv
224.473 520.121 224.609 520.125 224.727 520.137 cv
224.84 520.148 224.93 520.164 225.004 520.18 cv
225.07 520.199 225.125 520.223 225.164 520.254 cv
225.199 520.285 225.219 520.32 225.219 520.359 cv
225.219 526.023 li
226.219 526.023 li
226.293 526.027 226.355 526.066 226.406 526.145 cv
226.453 526.227 226.477 526.348 226.48 526.508 cv
cp
224.039 521.156 mo
224.027 521.156 li
221.176 526.023 li
224.039 526.023 li
cp
f
300.871 526.16 mo
300.871 526.551 300.809 526.93 300.691 527.289 cv
300.566 527.656 300.383 527.973 300.141 528.246 cv
299.891 528.523 299.578 528.746 299.203 528.91 cv
298.82 529.078 298.375 529.16 297.859 529.16 cv
297.488 529.16 297.16 529.117 296.879 529.023 cv
296.594 528.937 296.348 528.805 296.137 528.633 cv
295.926 528.465 295.75 528.258 295.613 528.012 cv
295.473 527.766 295.359 527.484 295.277 527.168 cv
295.191 526.855 295.133 526.512 295.098 526.133 cv
295.059 525.762 295.039 525.359 295.043 524.926 cv
295.039 524.547 295.059 524.164 295.102 523.773 cv
295.141 523.391 295.215 523.016 295.32 522.648 cv
295.426 522.289 295.57 521.949 295.75 521.633 cv
295.93 521.316 296.156 521.039 296.43 520.805 cv
296.703 520.57 297.027 520.383 297.406 520.242 cv
297.785 520.105 298.227 520.039 298.73 520.035 cv
298.898 520.039 299.07 520.047 299.242 520.066 cv
299.414 520.09 299.574 520.121 299.723 520.152 cv
299.871 520.191 299.992 520.227 300.094 520.266 cv
300.191 520.305 300.258 520.34 300.293 520.363 cv
300.32 520.391 300.344 520.418 300.363 520.445 cv
300.379 520.477 300.395 520.508 300.402 520.543 cv
300.41 520.578 300.414 520.617 300.422 520.66 cv
300.422 520.703 300.426 520.758 300.43 520.82 cv
300.426 520.906 300.426 520.977 300.426 521.031 cv
300.422 521.094 300.41 521.141 300.398 521.176 cv
300.379 521.215 300.359 521.242 300.336 521.258 cv
300.309 521.277 300.277 521.285 300.238 521.285 cv
300.188 521.285 300.117 521.27 300.031 521.238 cv
299.941 521.207 299.836 521.172 299.715 521.129 cv
299.59 521.094 299.441 521.059 299.266 521.023 cv
299.09 520.996 298.887 520.98 298.656 520.977 cv
298.227 520.98 297.859 521.066 297.555 521.238 cv
297.25 521.41 297 521.645 296.805 521.937 cv
296.609 522.23 296.465 522.57 296.375 522.953 cv
296.277 523.344 296.223 523.746 296.215 524.164 cv
296.332 524.098 296.469 524.031 296.617 523.961 cv
296.766 523.895 296.926 523.832 297.102 523.773 cv
297.277 523.723 297.465 523.676 297.66 523.641 cv
297.855 523.609 298.066 523.594 298.293 523.59 cv
298.77 523.594 299.172 523.66 299.504 523.785 cv
299.832 523.918 300.098 524.098 300.305 524.328 cv
300.504 524.559 300.648 524.828 300.738 525.141 cv
300.824 525.453 300.871 525.793 300.871 526.16 cv
cp
299.676 526.27 mo
299.676 526.008 299.648 525.766 299.598 525.547 cv
299.543 525.332 299.453 525.148 299.332 524.992 cv
299.207 524.844 299.043 524.727 298.84 524.645 cv
298.629 524.562 298.375 524.52 298.078 524.52 cv
297.906 524.52 297.738 524.535 297.57 524.566 cv
297.398 524.598 297.234 524.641 297.078 524.687 cv
296.918 524.742 296.77 524.805 296.629 524.875 cv
296.484 524.949 296.352 525.023 296.234 525.102 cv
296.23 525.695 296.27 526.191 296.348 526.586 cv
296.422 526.984 296.531 527.301 296.676 527.539 cv
296.82 527.781 297 527.953 297.215 528.055 cv
297.43 528.16 297.68 528.211 297.969 528.207 cv
298.258 528.211 298.512 528.156 298.727 528.043 cv
298.941 527.937 299.117 527.789 299.262 527.602 cv
299.402 527.418 299.508 527.211 299.574 526.98 cv
299.641 526.75 299.676 526.516 299.676 526.27 cv
cp
f
375.367 526.754 mo
375.367 527.141 375.297 527.484 375.16 527.781 cv
375.023 528.086 374.828 528.336 374.57 528.539 cv
374.313 528.746 373.992 528.902 373.613 529.004 cv
373.23 529.109 372.797 529.16 372.313 529.16 cv
371.852 529.16 371.441 529.113 371.082 529.02 cv
370.719 528.926 370.414 528.785 370.164 528.594 cv
369.914 528.41 369.723 528.18 369.59 527.902 cv
369.457 527.629 369.391 527.316 369.391 526.961 cv
369.391 526.687 369.434 526.43 369.527 526.195 cv
369.613 525.961 369.746 525.746 369.922 525.551 cv
370.09 525.355 370.301 525.172 370.555 524.996 cv
370.805 524.828 371.09 524.664 371.406 524.508 cv
371.133 524.367 370.891 524.219 370.68 524.059 cv
370.469 523.902 370.289 523.73 370.145 523.543 cv
369.996 523.359 369.887 523.164 369.813 522.953 cv
369.734 522.746 369.695 522.516 369.699 522.266 cv
369.695 521.957 369.75 521.664 369.867 521.391 cv
369.977 521.121 370.148 520.887 370.375 520.684 cv
370.602 520.484 370.887 520.324 371.238 520.207 cv
371.582 520.09 371.992 520.031 372.461 520.031 cv
372.906 520.031 373.293 520.086 373.621 520.191 cv
373.949 520.301 374.219 520.445 374.43 520.629 cv
374.641 520.816 374.797 521.035 374.902 521.285 cv
375 521.535 375.051 521.805 375.055 522.094 cv
375.051 522.328 375.012 522.555 374.941 522.766 cv
374.863 522.984 374.754 523.187 374.605 523.375 cv
374.457 523.57 374.277 523.75 374.066 523.914 cv
373.855 524.086 373.613 524.242 373.34 524.383 cv
373.66 524.547 373.945 524.711 374.203 524.879 cv
374.453 525.047 374.668 525.227 374.844 525.422 cv
375.012 525.617 375.141 525.824 375.234 526.039 cv
375.32 526.258 375.367 526.496 375.367 526.754 cv
cp
373.887 522.203 mo
373.883 522.016 373.852 521.84 373.785 521.684 cv
373.719 521.527 373.621 521.395 373.496 521.285 cv
373.367 521.176 373.207 521.094 373.02 521.035 cv
372.824 520.98 372.609 520.953 372.371 520.949 cv
371.875 520.953 371.5 521.062 371.25 521.285 cv
370.992 521.512 370.867 521.82 370.871 522.203 cv
370.867 522.383 370.898 522.547 370.961 522.699 cv
371.023 522.855 371.117 523 371.25 523.137 cv
371.375 523.273 371.539 523.406 371.742 523.535 cv
371.938 523.668 372.176 523.805 372.453 523.945 cv
372.914 523.711 373.27 523.449 373.516 523.156 cv
373.762 522.871 373.883 522.555 373.887 522.203 cv
cp
374.176 526.879 mo
374.172 526.672 374.133 526.48 374.059 526.309 cv
373.977 526.141 373.859 525.98 373.703 525.828 cv
373.547 525.68 373.348 525.535 373.113 525.395 cv
372.875 525.258 372.605 525.113 372.297 524.961 cv
372.008 525.105 371.754 525.246 371.539 525.387 cv
371.32 525.527 371.141 525.676 371.004 525.824 cv
370.863 525.98 370.758 526.137 370.688 526.301 cv
370.613 526.469 370.578 526.652 370.582 526.852 cv
370.578 527.297 370.73 527.641 371.039 527.879 cv
371.34 528.125 371.793 528.246 372.398 528.242 cv
372.98 528.246 373.426 528.125 373.727 527.875 cv
374.023 527.633 374.172 527.301 374.176 526.879 cv
cp
f
446.176 528.566 mo
446.172 528.656 446.164 528.727 446.152 528.785 cv
446.137 528.848 446.117 528.898 446.098 528.93 cv
446.074 528.969 446.051 528.992 446.02 529.008 cv
445.988 529.023 445.957 529.031 445.93 529.031 cv
441.293 529.031 li
441.258 529.031 441.23 529.023 441.203 529.008 cv
441.176 528.992 441.148 528.969 441.125 528.93 cv
441.098 528.898 441.078 528.848 441.066 528.785 cv
441.051 528.727 441.043 528.656 441.047 528.566 cv
441.043 528.488 441.051 528.414 441.066 528.352 cv
441.078 528.293 441.094 528.246 441.117 528.207 cv
441.133 528.172 441.16 528.141 441.191 528.117 cv
441.223 528.098 441.254 528.09 441.293 528.086 cv
443.145 528.086 li
443.145 521.34 li
441.43 522.359 li
441.34 522.41 441.27 522.437 441.223 522.445 cv
441.168 522.453 441.125 522.445 441.094 522.414 cv
441.059 522.387 441.039 522.336 441.027 522.266 cv
441.016 522.199 441.008 522.113 441.012 522.004 cv
441.008 521.93 441.012 521.863 441.023 521.805 cv
441.027 521.754 441.039 521.707 441.055 521.668 cv
441.066 521.633 441.086 521.602 441.109 521.574 cv
441.133 521.547 441.164 521.52 441.211 521.492 cv
443.254 520.18 li
443.27 520.168 443.289 520.156 443.32 520.148 cv
443.344 520.141 443.379 520.133 443.426 520.121 cv
443.465 520.113 443.516 520.105 443.57 520.102 cv
443.625 520.102 443.691 520.102 443.777 520.098 cv
443.883 520.102 443.977 520.105 444.051 520.113 cv
444.121 520.121 444.176 520.137 444.223 520.152 cv
444.262 520.172 444.289 520.191 444.305 520.215 cv
444.313 520.242 444.32 520.266 444.324 520.289 cv
444.324 528.086 li
445.93 528.086 li
445.965 528.09 446 528.098 446.031 528.117 cv
446.063 528.141 446.086 528.172 446.109 528.207 cv
446.125 528.246 446.141 528.293 446.156 528.352 cv
446.164 528.414 446.172 528.488 446.176 528.566 cv
cp
f
453.527 524.574 mo
453.523 525.258 453.473 525.879 453.367 526.441 cv
453.258 527.004 453.078 527.488 452.832 527.891 cv
452.578 528.297 452.25 528.609 451.852 528.828 cv
451.445 529.051 450.953 529.16 450.367 529.16 cv
449.809 529.16 449.336 529.062 448.957 528.863 cv
448.574 528.668 448.27 528.375 448.035 527.988 cv
447.801 527.602 447.633 527.129 447.539 526.562 cv
447.438 526 447.391 525.352 447.391 524.617 cv
447.391 523.945 447.445 523.324 447.555 522.758 cv
447.664 522.195 447.84 521.711 448.09 521.305 cv
448.332 520.902 448.656 520.59 449.063 520.363 cv
449.461 520.145 449.957 520.031 450.547 520.031 cv
451.105 520.031 451.578 520.133 451.961 520.328 cv
452.344 520.531 452.648 520.824 452.883 521.207 cv
453.113 521.598 453.281 522.07 453.379 522.633 cv
453.477 523.195 453.523 523.844 453.527 524.574 cv
cp
452.32 524.656 mo
452.316 524.215 452.301 523.816 452.273 523.465 cv
452.238 523.113 452.191 522.805 452.133 522.535 cv
452.066 522.266 451.988 522.035 451.891 521.84 cv
451.793 521.648 451.676 521.488 451.539 521.359 cv
451.398 521.234 451.238 521.141 451.066 521.082 cv
450.887 521.027 450.691 521 450.477 520.996 cv
450.086 521 449.77 521.09 449.531 521.273 cv
449.285 521.457 449.094 521.711 448.957 522.027 cv
448.816 522.348 448.723 522.719 448.672 523.148 cv
448.621 523.578 448.598 524.043 448.598 524.535 cv
448.598 525.199 448.629 525.762 448.699 526.223 cv
448.766 526.691 448.875 527.07 449.027 527.359 cv
449.172 527.656 449.363 527.867 449.594 527.996 cv
449.824 528.133 450.105 528.199 450.438 528.195 cv
450.691 528.199 450.914 528.16 451.109 528.074 cv
451.301 527.996 451.469 527.875 451.609 527.719 cv
451.75 527.566 451.863 527.383 451.957 527.168 cv
452.043 526.953 452.117 526.715 452.176 526.453 cv
452.227 526.195 452.266 525.914 452.289 525.609 cv
452.309 525.305 452.316 524.988 452.32 524.656 cv
cp
f
520.727 528.566 mo
520.723 528.656 520.715 528.727 520.703 528.785 cv
520.688 528.848 520.668 528.898 520.648 528.93 cv
520.625 528.969 520.602 528.992 520.57 529.008 cv
520.539 529.023 520.508 529.031 520.48 529.031 cv
515.844 529.031 li
515.809 529.031 515.781 529.023 515.754 529.008 cv
515.727 528.992 515.699 528.969 515.676 528.93 cv
515.648 528.898 515.629 528.848 515.617 528.785 cv
515.602 528.727 515.594 528.656 515.598 528.566 cv
515.594 528.488 515.602 528.414 515.617 528.352 cv
515.629 528.293 515.645 528.246 515.668 528.207 cv
515.684 528.172 515.711 528.141 515.742 528.117 cv
515.773 528.098 515.805 528.09 515.844 528.086 cv
517.695 528.086 li
517.695 521.34 li
515.98 522.359 li
515.891 522.41 515.82 522.437 515.773 522.445 cv
515.719 522.453 515.676 522.445 515.645 522.414 cv
515.609 522.387 515.59 522.336 515.578 522.266 cv
515.566 522.199 515.559 522.113 515.563 522.004 cv
515.559 521.93 515.563 521.863 515.574 521.805 cv
515.578 521.754 515.59 521.707 515.605 521.668 cv
515.617 521.633 515.637 521.602 515.66 521.574 cv
515.684 521.547 515.715 521.52 515.762 521.492 cv
517.805 520.18 li
517.82 520.168 517.84 520.156 517.871 520.148 cv
517.895 520.141 517.93 520.133 517.977 520.121 cv
518.016 520.113 518.066 520.105 518.121 520.102 cv
518.176 520.102 518.242 520.102 518.328 520.098 cv
518.434 520.102 518.527 520.105 518.602 520.113 cv
518.672 520.121 518.727 520.137 518.773 520.152 cv
518.813 520.172 518.84 520.191 518.855 520.215 cv
518.863 520.242 518.871 520.266 518.875 520.289 cv
518.875 528.086 li
520.48 528.086 li
520.516 528.09 520.551 528.098 520.582 528.117 cv
520.613 528.141 520.637 528.172 520.66 528.207 cv
520.676 528.246 520.691 528.293 520.707 528.352 cv
520.715 528.414 520.723 528.488 520.727 528.566 cv
cp
f
527.785 528.523 mo
527.781 528.609 527.777 528.684 527.766 528.746 cv
527.754 528.812 527.738 528.867 527.719 528.906 cv
527.695 528.953 527.668 528.984 527.637 529 cv
527.602 529.023 527.563 529.031 527.523 529.031 cv
522.621 529.031 li
522.559 529.031 522.5 529.023 522.453 529.008 cv
522.402 528.992 522.363 528.969 522.328 528.93 cv
522.293 528.898 522.266 528.844 522.254 528.773 cv
522.234 528.703 522.227 528.617 522.23 528.516 cv
522.227 528.426 522.23 528.348 522.238 528.277 cv
522.242 528.211 522.258 528.152 522.285 528.098 cv
522.309 528.047 522.34 527.992 522.375 527.937 cv
522.41 527.887 522.453 527.832 522.512 527.77 cv
524.285 525.945 li
524.695 525.527 525.023 525.152 525.273 524.816 cv
525.52 524.488 525.711 524.184 525.844 523.906 cv
525.977 523.633 526.063 523.383 526.109 523.156 cv
526.148 522.934 526.172 522.723 526.172 522.527 cv
526.172 522.332 526.137 522.148 526.07 521.969 cv
526.004 521.797 525.91 521.641 525.785 521.504 cv
525.66 521.375 525.504 521.27 525.316 521.187 cv
525.129 521.113 524.91 521.074 524.664 521.07 cv
524.375 521.074 524.117 521.113 523.891 521.187 cv
523.66 521.27 523.461 521.355 523.289 521.441 cv
523.117 521.535 522.973 521.617 522.855 521.695 cv
522.738 521.773 522.652 521.812 522.602 521.812 cv
522.566 521.812 522.535 521.805 522.512 521.785 cv
522.48 521.77 522.461 521.738 522.445 521.695 cv
522.43 521.656 522.414 521.602 522.406 521.531 cv
522.395 521.465 522.391 521.383 522.395 521.285 cv
522.391 521.219 522.395 521.16 522.402 521.109 cv
522.406 521.059 522.414 521.016 522.426 520.977 cv
522.434 520.941 522.449 520.906 522.469 520.875 cv
522.488 520.844 522.523 520.805 522.582 520.754 cv
522.633 520.707 522.727 520.641 522.863 520.559 cv
522.996 520.477 523.168 520.398 523.371 520.316 cv
523.574 520.238 523.797 520.168 524.043 520.113 cv
524.285 520.059 524.543 520.031 524.816 520.031 cv
525.242 520.031 525.617 520.094 525.941 520.215 cv
526.262 520.336 526.527 520.5 526.742 520.711 cv
526.953 520.922 527.113 521.168 527.219 521.441 cv
527.324 521.723 527.379 522.02 527.379 522.332 cv
527.379 522.621 527.352 522.902 527.301 523.18 cv
527.25 523.465 527.145 523.77 526.984 524.094 cv
526.82 524.422 526.586 524.785 526.281 525.184 cv
525.973 525.586 525.566 526.047 525.063 526.562 cv
523.656 528.031 li
527.516 528.031 li
527.547 528.035 527.582 528.047 527.621 528.062 cv
527.652 528.086 527.684 528.117 527.711 528.156 cv
527.734 528.199 527.754 528.25 527.766 528.309 cv
527.777 528.375 527.781 528.445 527.785 528.523 cv
cp
f
595.266 528.566 mo
595.262 528.656 595.254 528.727 595.242 528.785 cv
595.227 528.848 595.207 528.898 595.188 528.93 cv
595.164 528.969 595.141 528.992 595.109 529.008 cv
595.078 529.023 595.047 529.031 595.02 529.031 cv
590.383 529.031 li
590.348 529.031 590.32 529.023 590.293 529.008 cv
590.266 528.992 590.238 528.969 590.215 528.93 cv
590.188 528.898 590.168 528.848 590.156 528.785 cv
590.141 528.727 590.133 528.656 590.137 528.566 cv
590.133 528.488 590.141 528.414 590.156 528.352 cv
590.168 528.293 590.184 528.246 590.207 528.207 cv
590.223 528.172 590.25 528.141 590.281 528.117 cv
590.313 528.098 590.344 528.09 590.383 528.086 cv
592.234 528.086 li
592.234 521.34 li
590.52 522.359 li
590.43 522.41 590.359 522.437 590.313 522.445 cv
590.258 522.453 590.215 522.445 590.184 522.414 cv
590.148 522.387 590.129 522.336 590.117 522.266 cv
590.105 522.199 590.098 522.113 590.102 522.004 cv
590.098 521.93 590.102 521.863 590.113 521.805 cv
590.117 521.754 590.129 521.707 590.145 521.668 cv
590.156 521.633 590.176 521.602 590.199 521.574 cv
590.223 521.547 590.254 521.52 590.301 521.492 cv
592.344 520.18 li
592.359 520.168 592.379 520.156 592.41 520.148 cv
592.434 520.141 592.469 520.133 592.516 520.121 cv
592.555 520.113 592.605 520.105 592.66 520.102 cv
592.715 520.102 592.781 520.102 592.867 520.098 cv
592.973 520.102 593.066 520.105 593.141 520.113 cv
593.211 520.121 593.266 520.137 593.313 520.152 cv
593.352 520.172 593.379 520.191 593.395 520.215 cv
593.402 520.242 593.41 520.266 593.414 520.289 cv
593.414 528.086 li
595.02 528.086 li
595.055 528.09 595.09 528.098 595.121 528.117 cv
595.152 528.141 595.176 528.172 595.199 528.207 cv
595.215 528.246 595.23 528.293 595.246 528.352 cv
595.254 528.414 595.262 528.488 595.266 528.566 cv
cp
f
602.699 526.508 mo
602.695 526.66 602.672 526.781 602.629 526.867 cv
602.582 526.957 602.52 527 602.438 526.996 cv
601.438 526.996 li
601.438 528.859 li
601.438 528.898 601.426 528.93 601.41 528.953 cv
601.387 528.98 601.355 529 601.313 529.02 cv
601.262 529.035 601.199 529.047 601.129 529.059 cv
601.051 529.066 600.957 529.07 600.84 529.074 cv
600.723 529.07 600.625 529.066 600.555 529.059 cv
600.477 529.047 600.418 529.035 600.375 529.02 cv
600.328 529 600.297 528.98 600.281 528.953 cv
600.262 528.93 600.254 528.898 600.258 528.859 cv
600.258 526.996 li
596.629 526.996 li
596.57 527 596.527 526.992 596.492 526.977 cv
596.457 526.965 596.422 526.937 596.395 526.898 cv
596.363 526.863 596.344 526.812 596.332 526.742 cv
596.32 526.676 596.316 526.586 596.316 526.473 cv
596.316 526.391 596.316 526.312 596.324 526.242 cv
596.324 526.172 596.336 526.109 596.352 526.055 cv
596.363 526 596.379 525.945 596.406 525.891 cv
596.426 525.836 596.453 525.781 596.488 525.719 cv
599.648 520.332 li
599.668 520.297 599.703 520.266 599.75 520.238 cv
599.793 520.211 599.848 520.187 599.922 520.168 cv
599.988 520.152 600.074 520.141 600.18 520.129 cv
600.281 520.125 600.402 520.121 600.543 520.117 cv
600.691 520.121 600.828 520.125 600.945 520.137 cv
601.059 520.148 601.148 520.164 601.223 520.18 cv
601.289 520.199 601.344 520.223 601.383 520.254 cv
601.418 520.285 601.438 520.32 601.438 520.359 cv
601.438 526.023 li
602.438 526.023 li
602.512 526.027 602.574 526.066 602.625 526.145 cv
602.672 526.227 602.695 526.348 602.699 526.508 cv
cp
600.258 521.156 mo
600.246 521.156 li
597.395 526.023 li
600.258 526.023 li
cp
f
669.785 528.566 mo
669.781 528.656 669.773 528.727 669.762 528.785 cv
669.746 528.848 669.727 528.898 669.707 528.93 cv
669.684 528.969 669.66 528.992 669.629 529.008 cv
669.598 529.023 669.566 529.031 669.539 529.031 cv
664.902 529.031 li
664.867 529.031 664.84 529.023 664.813 529.008 cv
664.785 528.992 664.758 528.969 664.734 528.93 cv
664.707 528.898 664.688 528.848 664.676 528.785 cv
664.66 528.727 664.652 528.656 664.656 528.566 cv
664.652 528.488 664.66 528.414 664.676 528.352 cv
664.688 528.293 664.703 528.246 664.727 528.207 cv
664.742 528.172 664.77 528.141 664.801 528.117 cv
664.832 528.098 664.863 528.09 664.902 528.086 cv
666.754 528.086 li
666.754 521.34 li
665.039 522.359 li
664.949 522.41 664.879 522.437 664.832 522.445 cv
664.777 522.453 664.734 522.445 664.703 522.414 cv
664.668 522.387 664.648 522.336 664.637 522.266 cv
664.625 522.199 664.617 522.113 664.621 522.004 cv
664.617 521.93 664.621 521.863 664.633 521.805 cv
664.637 521.754 664.648 521.707 664.664 521.668 cv
664.676 521.633 664.695 521.602 664.719 521.574 cv
664.742 521.547 664.773 521.52 664.82 521.492 cv
666.863 520.18 li
666.879 520.168 666.898 520.156 666.93 520.148 cv
666.953 520.141 666.988 520.133 667.035 520.121 cv
667.074 520.113 667.125 520.105 667.18 520.102 cv
667.234 520.102 667.301 520.102 667.387 520.098 cv
667.492 520.102 667.586 520.105 667.66 520.113 cv
667.73 520.121 667.785 520.137 667.832 520.152 cv
667.871 520.172 667.898 520.191 667.914 520.215 cv
667.922 520.242 667.93 520.266 667.934 520.289 cv
667.934 528.086 li
669.539 528.086 li
669.574 528.09 669.609 528.098 669.641 528.117 cv
669.672 528.141 669.695 528.172 669.719 528.207 cv
669.734 528.246 669.75 528.293 669.766 528.352 cv
669.773 528.414 669.781 528.488 669.785 528.566 cv
cp
f
677.074 526.16 mo
677.074 526.551 677.012 526.93 676.895 527.289 cv
676.77 527.656 676.586 527.973 676.344 528.246 cv
676.094 528.523 675.781 528.746 675.406 528.91 cv
675.023 529.078 674.578 529.16 674.063 529.16 cv
673.691 529.16 673.363 529.117 673.082 529.023 cv
672.797 528.937 672.551 528.805 672.34 528.633 cv
672.129 528.465 671.953 528.258 671.816 528.012 cv
671.676 527.766 671.563 527.484 671.48 527.168 cv
671.395 526.855 671.336 526.512 671.301 526.133 cv
671.262 525.762 671.242 525.359 671.246 524.926 cv
671.242 524.547 671.262 524.164 671.305 523.773 cv
671.344 523.391 671.418 523.016 671.523 522.648 cv
671.629 522.289 671.773 521.949 671.953 521.633 cv
672.133 521.316 672.359 521.039 672.633 520.805 cv
672.906 520.57 673.23 520.383 673.609 520.242 cv
673.988 520.105 674.43 520.039 674.934 520.035 cv
675.102 520.039 675.273 520.047 675.445 520.066 cv
675.617 520.09 675.777 520.121 675.926 520.152 cv
676.074 520.191 676.195 520.227 676.297 520.266 cv
676.395 520.305 676.461 520.34 676.496 520.363 cv
676.523 520.391 676.547 520.418 676.566 520.445 cv
676.582 520.477 676.598 520.508 676.605 520.543 cv
676.613 520.578 676.617 520.617 676.625 520.66 cv
676.625 520.703 676.629 520.758 676.633 520.82 cv
676.629 520.906 676.629 520.977 676.629 521.031 cv
676.625 521.094 676.613 521.141 676.602 521.176 cv
676.582 521.215 676.563 521.242 676.539 521.258 cv
676.512 521.277 676.48 521.285 676.441 521.285 cv
676.391 521.285 676.32 521.27 676.234 521.238 cv
676.145 521.207 676.039 521.172 675.918 521.129 cv
675.793 521.094 675.645 521.059 675.469 521.023 cv
675.293 520.996 675.09 520.98 674.859 520.977 cv
674.43 520.98 674.063 521.066 673.758 521.238 cv
673.453 521.41 673.203 521.645 673.008 521.937 cv
672.813 522.23 672.668 522.57 672.578 522.953 cv
672.48 523.344 672.426 523.746 672.418 524.164 cv
672.535 524.098 672.672 524.031 672.82 523.961 cv
672.969 523.895 673.129 523.832 673.305 523.773 cv
673.48 523.723 673.668 523.676 673.863 523.641 cv
674.059 523.609 674.27 523.594 674.496 523.59 cv
674.973 523.594 675.375 523.66 675.707 523.785 cv
676.035 523.918 676.301 524.098 676.508 524.328 cv
676.707 524.559 676.852 524.828 676.941 525.141 cv
677.027 525.453 677.074 525.793 677.074 526.16 cv
cp
675.879 526.27 mo
675.879 526.008 675.852 525.766 675.801 525.547 cv
675.746 525.332 675.656 525.148 675.535 524.992 cv
675.41 524.844 675.246 524.727 675.043 524.645 cv
674.832 524.562 674.578 524.52 674.281 524.52 cv
674.109 524.52 673.941 524.535 673.773 524.566 cv
673.602 524.598 673.438 524.641 673.281 524.687 cv
673.121 524.742 672.973 524.805 672.832 524.875 cv
672.688 524.949 672.555 525.023 672.438 525.102 cv
672.434 525.695 672.473 526.191 672.551 526.586 cv
672.625 526.984 672.734 527.301 672.879 527.539 cv
673.023 527.781 673.203 527.953 673.418 528.055 cv
673.633 528.16 673.883 528.211 674.172 528.207 cv
674.461 528.211 674.715 528.156 674.93 528.043 cv
675.145 527.937 675.32 527.789 675.465 527.602 cv
675.605 527.418 675.711 527.211 675.777 526.98 cv
675.844 526.75 675.879 526.516 675.879 526.27 cv
cp
f
16.461 373.277 mo
16.559 373.281 16.641 373.285 16.707 373.293 cv
16.781 373.305 16.84 373.324 16.883 373.348 cv
16.934 373.375 16.969 373.406 16.984 373.437 cv
17.008 373.477 17.016 373.512 17.016 373.551 cv
17.016 378.391 li
17.016 378.512 16.977 378.625 16.895 378.73 cv
16.816 378.84 16.676 378.895 16.469 378.891 cv
7.477 378.891 li
7.273 378.895 7.133 378.84 7.051 378.73 cv
6.973 378.625 6.934 378.512 6.93 378.391 cv
6.93 373.605 li
6.934 373.566 6.941 373.527 6.961 373.492 cv
6.984 373.461 7.02 373.434 7.063 373.41 cv
7.113 373.391 7.172 373.375 7.238 373.359 cv
7.313 373.348 7.398 373.34 7.5 373.34 cv
7.594 373.34 7.676 373.348 7.746 373.359 cv
7.816 373.375 7.875 373.391 7.918 373.41 cv
7.965 373.434 7.996 373.461 8.016 373.492 cv
8.039 373.527 8.051 373.566 8.047 373.605 cv
8.047 377.551 li
11.211 377.551 li
11.211 374.168 li
11.215 374.129 11.227 374.09 11.246 374.055 cv
11.273 374.023 11.305 373.996 11.344 373.969 cv
11.387 373.949 11.445 373.934 11.516 373.918 cv
11.59 373.91 11.676 373.902 11.77 373.902 cv
11.867 373.902 11.945 373.91 12.012 373.918 cv
12.082 373.934 12.137 373.949 12.176 373.969 cv
12.219 373.996 12.25 374.023 12.266 374.055 cv
12.285 374.09 12.293 374.129 12.293 374.168 cv
12.293 377.551 li
15.902 377.551 li
15.902 373.551 li
15.902 373.512 15.914 373.477 15.934 373.437 cv
15.957 373.406 15.988 373.375 16.031 373.348 cv
16.078 373.324 16.137 373.305 16.203 373.293 cv
16.273 373.285 16.359 373.281 16.461 373.277 cv
cp
f
16.82 365.211 mo
16.867 365.211 16.902 365.223 16.926 365.242 cv
16.957 365.266 16.98 365.301 17 365.344 cv
17.02 365.395 17.031 365.457 17.047 365.539 cv
17.055 365.621 17.063 365.727 17.063 365.848 cv
17.063 365.98 17.055 366.086 17.047 366.168 cv
17.031 366.254 17.02 366.32 17 366.363 cv
16.98 366.414 16.957 366.445 16.926 366.465 cv
16.902 366.488 16.867 366.5 16.82 366.496 cv
12.715 366.496 li
12.316 366.5 11.996 366.531 11.75 366.59 cv
11.508 366.656 11.297 366.746 11.117 366.863 cv
10.941 366.98 10.805 367.137 10.711 367.324 cv
10.617 367.52 10.57 367.738 10.57 367.984 cv
10.57 368.309 10.688 368.633 10.914 368.953 cv
11.148 369.277 11.48 369.613 11.918 369.965 cv
16.82 369.965 li
16.867 369.969 16.902 369.98 16.926 369.996 cv
16.957 370.02 16.98 370.051 17 370.098 cv
17.02 370.145 17.031 370.211 17.047 370.289 cv
17.055 370.375 17.063 370.48 17.063 370.609 cv
17.063 370.738 17.055 370.844 17.047 370.922 cv
17.031 371.008 17.02 371.074 17 371.121 cv
16.98 371.176 16.957 371.207 16.926 371.223 cv
16.902 371.242 16.867 371.254 16.82 371.25 cv
9.809 371.25 li
9.77 371.254 9.734 371.246 9.703 371.227 cv
9.676 371.215 9.652 371.184 9.625 371.133 cv
9.605 371.09 9.59 371.027 9.578 370.953 cv
9.574 370.883 9.57 370.789 9.566 370.664 cv
9.57 370.555 9.574 370.457 9.578 370.379 cv
9.59 370.305 9.605 370.246 9.625 370.203 cv
9.652 370.164 9.676 370.137 9.703 370.117 cv
9.734 370.102 9.77 370.094 9.809 370.09 cv
10.734 370.09 li
10.293 369.699 9.973 369.305 9.766 368.91 cv
9.563 368.52 9.457 368.121 9.457 367.719 cv
9.457 367.25 9.539 366.859 9.695 366.539 cv
9.859 366.223 10.07 365.961 10.332 365.762 cv
10.598 365.566 10.906 365.426 11.262 365.34 cv
11.617 365.254 12.047 365.211 12.543 365.211 cv
cp
f
13.012 356.887 mo
13.215 356.891 13.355 356.941 13.441 357.039 cv
13.527 357.145 13.57 357.262 13.57 357.387 cv
13.57 362.004 li
13.961 362.008 14.313 361.969 14.625 361.887 cv
14.938 361.812 15.207 361.68 15.426 361.496 cv
15.652 361.316 15.824 361.082 15.941 360.785 cv
16.066 360.496 16.125 360.137 16.121 359.711 cv
16.125 359.379 16.098 359.082 16.039 358.82 cv
15.988 358.559 15.926 358.332 15.855 358.141 cv
15.789 357.953 15.73 357.797 15.672 357.672 cv
15.621 357.551 15.594 357.457 15.59 357.395 cv
15.594 357.359 15.602 357.328 15.617 357.297 cv
15.637 357.27 15.664 357.246 15.699 357.227 cv
15.738 357.215 15.789 357.203 15.852 357.191 cv
15.918 357.187 15.996 357.184 16.09 357.18 cv
16.16 357.184 16.219 357.187 16.266 357.187 cv
16.313 357.195 16.355 357.199 16.395 357.207 cv
16.434 357.215 16.469 357.23 16.5 357.246 cv
16.531 357.27 16.563 357.293 16.59 357.316 cv
16.621 357.348 16.668 357.43 16.73 357.57 cv
16.797 357.711 16.859 357.895 16.922 358.117 cv
16.984 358.344 17.039 358.602 17.09 358.895 cv
17.137 359.187 17.16 359.5 17.164 359.832 cv
17.16 360.41 17.082 360.918 16.922 361.348 cv
16.762 361.785 16.523 362.148 16.207 362.441 cv
15.891 362.742 15.496 362.965 15.016 363.113 cv
14.539 363.262 13.98 363.336 13.344 363.336 cv
12.746 363.336 12.207 363.262 11.723 363.105 cv
11.246 362.953 10.836 362.727 10.5 362.43 cv
10.164 362.137 9.906 361.781 9.727 361.367 cv
9.547 360.953 9.457 360.488 9.457 359.973 cv
9.457 359.422 9.547 358.953 9.723 358.566 cv
9.902 358.18 10.141 357.863 10.438 357.609 cv
10.738 357.363 11.09 357.18 11.488 357.062 cv
11.895 356.949 12.324 356.891 12.777 356.887 cv
cp
12.629 358.18 mo
11.953 358.164 11.422 358.316 11.039 358.633 cv
10.656 358.949 10.465 359.418 10.461 360.035 cv
10.465 360.359 10.523 360.641 10.641 360.879 cv
10.762 361.121 10.922 361.32 11.117 361.48 cv
11.316 361.645 11.547 361.77 11.809 361.855 cv
12.07 361.945 12.344 361.996 12.629 362.004 cv
cp
f
10.266 350.82 mo
10.383 350.824 10.48 350.824 10.555 350.828 cv
10.637 350.836 10.699 350.848 10.738 350.859 cv
10.785 350.879 10.816 350.898 10.84 350.918 cv
10.863 350.945 10.875 350.977 10.875 351.016 cv
10.875 351.059 10.863 351.109 10.84 351.168 cv
10.816 351.23 10.793 351.301 10.77 351.371 cv
10.746 351.449 10.727 351.531 10.703 351.625 cv
10.688 351.719 10.676 351.82 10.672 351.93 cv
10.676 352.062 10.703 352.191 10.75 352.312 cv
10.805 352.437 10.891 352.566 11.008 352.703 cv
11.133 352.844 11.289 352.988 11.484 353.137 cv
11.68 353.289 11.922 353.457 12.207 353.637 cv
16.82 353.637 li
16.867 353.641 16.902 353.652 16.926 353.668 cv
16.957 353.691 16.98 353.723 17 353.77 cv
17.02 353.816 17.031 353.883 17.047 353.961 cv
17.055 354.047 17.063 354.152 17.063 354.281 cv
17.063 354.41 17.055 354.516 17.047 354.594 cv
17.031 354.68 17.02 354.746 17 354.793 cv
16.98 354.848 16.957 354.879 16.926 354.895 cv
16.902 354.914 16.867 354.926 16.82 354.922 cv
9.809 354.922 li
9.77 354.926 9.734 354.918 9.703 354.898 cv
9.676 354.887 9.652 354.855 9.625 354.805 cv
9.605 354.762 9.59 354.699 9.578 354.625 cv
9.574 354.555 9.57 354.461 9.566 354.336 cv
9.57 354.227 9.574 354.129 9.578 354.051 cv
9.59 353.977 9.605 353.918 9.625 353.875 cv
9.652 353.836 9.676 353.809 9.703 353.789 cv
9.734 353.773 9.77 353.766 9.809 353.762 cv
10.828 353.762 li
10.547 353.574 10.32 353.391 10.145 353.219 cv
9.969 353.051 9.828 352.891 9.727 352.738 cv
9.625 352.59 9.555 352.441 9.516 352.293 cv
9.477 352.145 9.457 351.996 9.457 351.844 cv
9.457 351.777 9.461 351.699 9.469 351.613 cv
9.477 351.527 9.492 351.437 9.512 351.344 cv
9.535 351.25 9.559 351.168 9.582 351.09 cv
9.609 351.02 9.637 350.965 9.66 350.93 cv
9.691 350.902 9.715 350.883 9.734 350.867 cv
9.762 350.859 9.793 350.848 9.824 350.84 cv
9.863 350.832 9.914 350.828 9.984 350.824 cv
10.055 350.824 10.148 350.824 10.266 350.82 cv
cp
f
10.125 343.781 mo
10.309 343.785 10.441 343.809 10.52 343.855 cv
10.602 343.906 10.641 343.969 10.641 344.043 cv
10.641 345.051 li
10.828 344.871 11.035 344.742 11.262 344.668 cv
11.488 344.598 11.723 344.562 11.965 344.559 cv
12.371 344.562 12.73 344.629 13.043 344.754 cv
13.355 344.887 13.621 345.07 13.832 345.312 cv
14.051 345.555 14.215 345.844 14.328 346.172 cv
14.445 346.508 14.504 346.875 14.5 347.277 cv
14.504 347.566 14.465 347.84 14.387 348.094 cv
14.313 348.355 14.219 348.551 14.102 348.687 cv
14.199 348.781 14.305 348.859 14.422 348.918 cv
14.543 348.98 14.68 349.012 14.832 349.008 cv
15.016 349.012 15.168 348.926 15.285 348.754 cv
15.41 348.586 15.473 348.363 15.48 348.082 cv
15.559 346.25 li
15.57 345.902 15.617 345.586 15.703 345.293 cv
15.789 345.004 15.914 344.75 16.07 344.535 cv
16.23 344.324 16.422 344.156 16.652 344.035 cv
16.887 343.918 17.156 343.859 17.461 343.855 cv
17.781 343.859 18.086 343.926 18.379 344.059 cv
18.668 344.195 18.922 344.402 19.145 344.68 cv
19.363 344.961 19.539 345.316 19.668 345.746 cv
19.793 346.176 19.855 346.684 19.859 347.27 cv
19.855 347.84 19.809 348.324 19.715 348.719 cv
19.617 349.117 19.484 349.441 19.32 349.695 cv
19.152 349.949 18.957 350.133 18.727 350.246 cv
18.492 350.363 18.238 350.422 17.973 350.418 cv
17.801 350.422 17.637 350.402 17.477 350.355 cv
17.313 350.316 17.16 350.254 17.016 350.168 cv
16.871 350.086 16.734 349.977 16.598 349.848 cv
16.469 349.723 16.336 349.578 16.207 349.406 cv
16.078 349.664 15.914 349.852 15.715 349.973 cv
15.52 350.094 15.309 350.152 15.074 350.152 cv
14.762 350.152 14.477 350.09 14.227 349.961 cv
13.977 349.832 13.754 349.672 13.555 349.477 cv
13.363 349.641 13.148 349.766 12.906 349.859 cv
12.668 349.953 12.375 350 12.027 350 cv
11.633 350 11.273 349.934 10.953 349.797 cv
10.637 349.664 10.371 349.477 10.152 349.234 cv
9.938 348.996 9.77 348.711 9.648 348.375 cv
9.535 348.043 9.477 347.676 9.473 347.277 cv
9.477 347.066 9.488 346.867 9.508 346.684 cv
9.535 346.5 9.566 346.328 9.605 346.164 cv
9.605 344.043 li
9.609 343.957 9.652 343.891 9.734 343.848 cv
9.824 343.805 9.953 343.785 10.125 343.781 cv
cp
11.973 345.789 mo
11.5 345.793 11.129 345.926 10.855 346.184 cv
10.59 346.449 10.453 346.82 10.453 347.301 cv
10.453 347.555 10.496 347.773 10.578 347.953 cv
10.664 348.141 10.777 348.293 10.922 348.414 cv
11.07 348.535 11.238 348.625 11.426 348.684 cv
11.613 348.746 11.813 348.777 12.02 348.773 cv
12.484 348.777 12.848 348.645 13.113 348.383 cv
13.379 348.121 13.512 347.754 13.508 347.277 cv
13.512 347.027 13.473 346.809 13.387 346.617 cv
13.309 346.434 13.195 346.277 13.055 346.152 cv
12.914 346.031 12.75 345.941 12.559 345.879 cv
12.375 345.824 12.18 345.793 11.973 345.789 cv
cp
17.531 345.145 mo
17.227 345.148 16.996 345.273 16.832 345.516 cv
16.672 345.766 16.582 346.098 16.57 346.516 cv
16.508 348.332 li
16.641 348.5 16.766 348.637 16.879 348.738 cv
16.996 348.848 17.105 348.93 17.215 348.992 cv
17.32 349.055 17.426 349.098 17.531 349.121 cv
17.633 349.145 17.738 349.156 17.848 349.156 cv
18.184 349.156 18.438 348.988 18.617 348.645 cv
18.789 348.305 18.879 347.824 18.879 347.207 cv
18.879 346.82 18.84 346.496 18.766 346.23 cv
18.688 345.973 18.586 345.762 18.465 345.598 cv
18.336 345.441 18.195 345.324 18.035 345.25 cv
17.875 345.184 17.707 345.148 17.531 345.145 cv
cp
f
17.016 338.93 mo
19.594 339.863 li
19.676 339.898 19.738 339.977 19.785 340.102 cv
19.828 340.23 19.852 340.426 19.852 340.684 cv
19.852 340.824 19.844 340.934 19.832 341.012 cv
19.816 341.098 19.793 341.16 19.766 341.199 cv
19.73 341.246 19.691 341.27 19.641 341.273 cv
19.586 341.281 19.523 341.27 19.453 341.234 cv
17.016 340.27 li
16.996 340.316 16.965 340.363 16.914 340.402 cv
16.871 340.449 16.82 340.477 16.766 340.488 cv
10.063 342.988 li
9.957 343.031 9.871 343.055 9.809 343.051 cv
9.746 343.055 9.699 343.031 9.66 342.988 cv
9.629 342.949 9.602 342.883 9.586 342.785 cv
9.574 342.695 9.57 342.57 9.566 342.414 cv
9.57 342.258 9.574 342.137 9.578 342.047 cv
9.59 341.961 9.602 341.891 9.621 341.836 cv
9.645 341.785 9.676 341.746 9.711 341.723 cv
9.754 341.699 9.809 341.676 9.871 341.648 cv
15.496 339.645 li
15.496 339.621 li
9.84 337.691 li
9.742 337.66 9.68 337.625 9.648 337.578 cv
9.625 337.539 9.602 337.473 9.586 337.379 cv
9.574 337.293 9.57 337.164 9.566 336.996 cv
9.57 336.852 9.574 336.73 9.586 336.637 cv
9.602 336.543 9.629 336.477 9.66 336.43 cv
9.699 336.391 9.746 336.367 9.809 336.363 cv
9.871 336.367 9.949 336.383 10.039 336.41 cv
cp
f
15.59 324.293 mo
15.676 324.293 15.746 324.297 15.809 324.301 cv
15.871 324.309 15.926 324.316 15.973 324.328 cv
16.02 324.344 16.063 324.363 16.098 324.379 cv
16.137 324.402 16.18 324.437 16.23 324.488 cv
16.281 324.543 16.359 324.652 16.465 324.816 cv
16.574 324.984 16.68 325.191 16.777 325.437 cv
16.883 325.684 16.965 325.965 17.035 326.285 cv
17.102 326.605 17.137 326.957 17.141 327.332 cv
17.137 327.992 17.031 328.582 16.813 329.109 cv
16.598 329.637 16.277 330.086 15.848 330.457 cv
15.426 330.828 14.898 331.113 14.27 331.312 cv
13.645 331.512 12.922 331.613 12.105 331.609 cv
11.27 331.613 10.527 331.504 9.871 331.289 cv
9.219 331.074 8.664 330.773 8.207 330.383 cv
7.754 329.996 7.406 329.531 7.168 328.984 cv
6.93 328.445 6.809 327.84 6.809 327.176 cv
6.809 326.887 6.836 326.605 6.891 326.328 cv
6.945 326.055 7.016 325.801 7.094 325.566 cv
7.18 325.336 7.273 325.129 7.383 324.941 cv
7.492 324.762 7.582 324.633 7.652 324.562 cv
7.723 324.492 7.777 324.449 7.813 324.426 cv
7.852 324.41 7.895 324.391 7.941 324.375 cv
7.992 324.363 8.051 324.355 8.117 324.344 cv
8.188 324.34 8.27 324.336 8.359 324.332 cv
8.465 324.336 8.551 324.34 8.621 324.348 cv
8.695 324.359 8.758 324.375 8.805 324.395 cv
8.859 324.418 8.895 324.441 8.914 324.469 cv
8.941 324.5 8.953 324.535 8.949 324.574 cv
8.953 324.648 8.902 324.754 8.797 324.883 cv
8.699 325.016 8.59 325.184 8.465 325.387 cv
8.348 325.598 8.234 325.848 8.129 326.141 cv
8.031 326.437 7.98 326.789 7.977 327.199 cv
7.98 327.652 8.07 328.062 8.246 328.43 cv
8.426 328.797 8.688 329.113 9.035 329.371 cv
9.387 329.637 9.813 329.836 10.313 329.977 cv
10.813 330.121 11.387 330.195 12.027 330.191 cv
12.672 330.195 13.238 330.125 13.727 329.984 cv
14.219 329.848 14.629 329.648 14.957 329.391 cv
15.289 329.133 15.535 328.816 15.703 328.441 cv
15.875 328.066 15.961 327.641 15.957 327.16 cv
15.961 326.762 15.91 326.41 15.809 326.109 cv
15.711 325.809 15.602 325.555 15.477 325.34 cv
15.355 325.133 15.246 324.957 15.145 324.82 cv
15.051 324.684 15 324.578 14.996 324.496 cv
15 324.465 15.008 324.434 15.02 324.402 cv
15.039 324.379 15.07 324.355 15.109 324.34 cv
15.156 324.324 15.215 324.312 15.293 324.305 cv
15.371 324.297 15.473 324.293 15.59 324.293 cv
cp
f
13.234 316.145 mo
13.813 316.148 14.34 316.223 14.816 316.371 cv
15.301 316.523 15.715 316.75 16.059 317.047 cv
16.41 317.348 16.68 317.723 16.871 318.168 cv
17.066 318.621 17.16 319.141 17.164 319.73 cv
17.16 320.309 17.078 320.812 16.906 321.238 cv
16.738 321.668 16.488 322.023 16.16 322.309 cv
15.832 322.598 15.438 322.812 14.969 322.949 cv
14.504 323.09 13.973 323.156 13.375 323.156 cv
12.809 323.156 12.281 323.086 11.801 322.937 cv
11.32 322.793 10.906 322.566 10.555 322.266 cv
10.207 321.969 9.938 321.598 9.746 321.148 cv
9.555 320.703 9.457 320.18 9.457 319.582 cv
9.457 319.004 9.543 318.504 9.715 318.074 cv
9.887 317.648 10.137 317.289 10.465 317.004 cv
10.793 316.719 11.191 316.504 11.656 316.359 cv
12.125 316.219 12.652 316.148 13.234 316.145 cv
cp
13.32 317.477 mo
12.945 317.48 12.586 317.516 12.246 317.582 cv
11.91 317.656 11.617 317.773 11.359 317.934 cv
11.109 318.098 10.906 318.316 10.754 318.594 cv
10.609 318.875 10.535 319.223 10.531 319.633 cv
10.535 320.02 10.602 320.348 10.734 320.621 cv
10.871 320.898 11.063 321.125 11.309 321.301 cv
11.555 321.48 11.848 321.613 12.184 321.695 cv
12.523 321.785 12.891 321.828 13.289 321.824 cv
13.676 321.828 14.039 321.793 14.375 321.719 cv
14.715 321.652 15.008 321.535 15.258 321.367 cv
15.512 321.203 15.715 320.98 15.859 320.703 cv
16.012 320.426 16.086 320.078 16.082 319.664 cv
16.086 319.289 16.016 318.961 15.879 318.68 cv
15.746 318.402 15.559 318.176 15.309 317.996 cv
15.066 317.82 14.773 317.691 14.438 317.605 cv
14.102 317.523 13.73 317.48 13.32 317.477 cv
cp
f
16.82 308.219 mo
16.867 308.219 16.902 308.23 16.926 308.25 cv
16.957 308.273 16.98 308.309 17 308.352 cv
17.02 308.402 17.031 308.465 17.047 308.547 cv
17.055 308.629 17.063 308.734 17.063 308.855 cv
17.063 308.988 17.055 309.094 17.047 309.176 cv
17.031 309.262 17.02 309.328 17 309.371 cv
16.98 309.422 16.957 309.453 16.926 309.473 cv
16.902 309.496 16.867 309.508 16.82 309.504 cv
12.715 309.504 li
12.316 309.508 11.996 309.539 11.75 309.598 cv
11.508 309.664 11.297 309.754 11.117 309.871 cv
10.941 309.988 10.805 310.145 10.711 310.332 cv
10.617 310.527 10.57 310.746 10.57 310.992 cv
10.57 311.316 10.688 311.641 10.914 311.961 cv
11.148 312.285 11.48 312.621 11.918 312.973 cv
16.82 312.973 li
16.867 312.977 16.902 312.988 16.926 313.004 cv
16.957 313.027 16.98 313.059 17 313.105 cv
17.02 313.152 17.031 313.219 17.047 313.297 cv
17.055 313.383 17.063 313.488 17.063 313.617 cv
17.063 313.746 17.055 313.852 17.047 313.93 cv
17.031 314.016 17.02 314.082 17 314.129 cv
16.98 314.184 16.957 314.215 16.926 314.23 cv
16.902 314.25 16.867 314.262 16.82 314.258 cv
9.809 314.258 li
9.77 314.262 9.734 314.254 9.703 314.234 cv
9.676 314.223 9.652 314.191 9.625 314.141 cv
9.605 314.098 9.59 314.035 9.578 313.961 cv
9.574 313.891 9.57 313.797 9.566 313.672 cv
9.57 313.562 9.574 313.465 9.578 313.387 cv
9.59 313.312 9.605 313.254 9.625 313.211 cv
9.652 313.172 9.676 313.145 9.703 313.125 cv
9.734 313.109 9.77 313.102 9.809 313.098 cv
10.734 313.098 li
10.293 312.707 9.973 312.312 9.766 311.918 cv
9.563 311.527 9.457 311.129 9.457 310.727 cv
9.457 310.258 9.539 309.867 9.695 309.547 cv
9.859 309.23 10.07 308.969 10.332 308.77 cv
10.598 308.574 10.906 308.434 11.262 308.348 cv
11.617 308.262 12.047 308.219 12.543 308.219 cv
cp
f
14.91 301.477 mo
15.273 301.48 15.594 301.547 15.871 301.676 cv
16.152 301.809 16.387 301.996 16.578 302.238 cv
16.773 302.484 16.918 302.777 17.016 303.113 cv
17.113 303.453 17.16 303.824 17.164 304.227 cv
17.16 304.48 17.141 304.719 17.105 304.941 cv
17.063 305.168 17.016 305.367 16.957 305.547 cv
16.898 305.727 16.836 305.879 16.77 306.004 cv
16.707 306.129 16.648 306.223 16.594 306.277 cv
16.543 306.336 16.473 306.375 16.375 306.398 cv
16.285 306.426 16.156 306.437 15.996 306.437 cv
15.898 306.437 15.816 306.434 15.746 306.422 cv
15.68 306.414 15.625 306.402 15.582 306.383 cv
15.543 306.371 15.512 306.348 15.492 306.32 cv
15.477 306.293 15.469 306.262 15.465 306.223 cv
15.469 306.168 15.504 306.082 15.57 305.969 cv
15.645 305.859 15.723 305.723 15.801 305.555 cv
15.887 305.395 15.961 305.203 16.031 304.977 cv
16.102 304.758 16.137 304.5 16.137 304.203 cv
16.137 303.988 16.113 303.789 16.066 303.609 cv
16.02 303.434 15.953 303.281 15.859 303.152 cv
15.773 303.023 15.656 302.922 15.512 302.852 cv
15.375 302.781 15.207 302.746 15.012 302.746 cv
14.816 302.746 14.652 302.797 14.516 302.898 cv
14.383 303 14.262 303.137 14.156 303.301 cv
14.055 303.469 13.965 303.652 13.879 303.859 cv
13.801 304.07 13.715 304.285 13.625 304.504 cv
13.539 304.723 13.438 304.937 13.324 305.148 cv
13.215 305.359 13.082 305.551 12.918 305.715 cv
12.762 305.887 12.566 306.02 12.34 306.117 cv
12.117 306.223 11.852 306.273 11.539 306.27 cv
11.266 306.273 11 306.219 10.746 306.109 cv
10.496 306.004 10.277 305.844 10.086 305.629 cv
9.898 305.418 9.746 305.152 9.629 304.832 cv
9.516 304.512 9.457 304.141 9.457 303.711 cv
9.457 303.527 9.473 303.34 9.504 303.152 cv
9.535 302.969 9.574 302.801 9.621 302.645 cv
9.668 302.496 9.719 302.367 9.773 302.258 cv
9.828 302.156 9.879 302.074 9.918 302.016 cv
9.965 301.965 10 301.93 10.027 301.906 cv
10.059 301.891 10.094 301.875 10.129 301.867 cv
10.172 301.859 10.219 301.852 10.273 301.844 cv
10.332 301.836 10.402 301.832 10.484 301.832 cv
10.574 301.832 10.652 301.836 10.715 301.844 cv
10.785 301.852 10.836 301.867 10.875 301.883 cv
10.918 301.906 10.949 301.926 10.965 301.949 cv
10.984 301.977 10.992 302.008 10.992 302.035 cv
10.992 302.086 10.965 302.152 10.906 302.238 cv
10.852 302.328 10.789 302.441 10.723 302.582 cv
10.66 302.723 10.602 302.891 10.539 303.078 cv
10.484 303.27 10.453 303.484 10.453 303.727 cv
10.453 303.949 10.48 304.141 10.527 304.305 cv
10.582 304.473 10.652 304.609 10.738 304.715 cv
10.832 304.82 10.938 304.902 11.063 304.953 cv
11.188 305.012 11.324 305.039 11.469 305.035 cv
11.672 305.039 11.84 304.988 11.977 304.883 cv
12.117 304.781 12.238 304.645 12.34 304.477 cv
12.445 304.312 12.539 304.121 12.621 303.906 cv
12.707 303.695 12.793 303.48 12.879 303.258 cv
12.969 303.039 13.07 302.82 13.176 302.602 cv
13.285 302.387 13.414 302.195 13.57 302.027 cv
13.727 301.863 13.914 301.73 14.133 301.629 cv
14.352 301.531 14.613 301.48 14.91 301.477 cv
cp
f
16.82 293.629 mo
16.867 293.633 16.902 293.641 16.926 293.656 cv
16.957 293.676 16.98 293.711 17 293.754 cv
17.02 293.801 17.031 293.859 17.047 293.934 cv
17.055 294.012 17.063 294.105 17.063 294.211 cv
17.063 294.336 17.055 294.434 17.047 294.504 cv
17.031 294.582 17.02 294.641 17 294.684 cv
16.98 294.73 16.957 294.762 16.926 294.773 cv
16.902 294.793 16.867 294.801 16.82 294.797 cv
15.895 294.797 li
16.34 295.199 16.66 295.594 16.859 295.98 cv
17.063 296.375 17.16 296.77 17.164 297.164 cv
17.16 297.637 17.086 298.031 16.93 298.348 cv
16.777 298.668 16.566 298.926 16.297 299.121 cv
16.031 299.324 15.719 299.465 15.359 299.547 cv
15.004 299.637 14.57 299.68 14.063 299.676 cv
9.809 299.676 li
9.77 299.68 9.734 299.672 9.703 299.648 cv
9.676 299.633 9.652 299.598 9.625 299.543 cv
9.605 299.496 9.59 299.426 9.578 299.34 cv
9.574 299.258 9.57 299.156 9.566 299.027 cv
9.57 298.906 9.574 298.801 9.578 298.715 cv
9.59 298.633 9.605 298.566 9.625 298.52 cv
9.652 298.473 9.676 298.437 9.703 298.414 cv
9.734 298.395 9.77 298.387 9.809 298.383 cv
13.891 298.383 li
14.305 298.387 14.633 298.355 14.879 298.293 cv
15.125 298.234 15.336 298.145 15.508 298.02 cv
15.688 297.902 15.82 297.746 15.914 297.555 cv
16.012 297.371 16.063 297.152 16.059 296.902 cv
16.063 296.582 15.945 296.262 15.715 295.937 cv
15.488 295.621 15.152 295.281 14.707 294.922 cv
9.809 294.922 li
9.77 294.922 9.734 294.914 9.703 294.895 cv
9.676 294.879 9.652 294.844 9.625 294.789 cv
9.605 294.738 9.59 294.672 9.578 294.59 cv
9.574 294.512 9.57 294.406 9.566 294.273 cv
9.57 294.152 9.574 294.047 9.578 293.961 cv
9.59 293.879 9.605 293.816 9.625 293.77 cv
9.652 293.727 9.676 293.691 9.703 293.664 cv
9.734 293.645 9.77 293.633 9.809 293.629 cv
cp
f
16.82 280.852 mo
16.867 280.855 16.902 280.863 16.926 280.883 cv
16.957 280.906 16.98 280.941 17 280.984 cv
17.02 281.035 17.031 281.102 17.047 281.18 cv
17.055 281.266 17.063 281.367 17.063 281.492 cv
17.063 281.625 17.055 281.734 17.047 281.812 cv
17.031 281.898 17.02 281.965 17 282.012 cv
16.98 282.066 16.957 282.102 16.926 282.117 cv
16.902 282.141 16.867 282.148 16.82 282.148 cv
12.559 282.148 li
12.266 282.148 11.996 282.176 11.75 282.227 cv
11.508 282.281 11.297 282.363 11.117 282.477 cv
10.941 282.59 10.805 282.734 10.711 282.91 cv
10.617 283.09 10.57 283.301 10.57 283.535 cv
10.57 283.832 10.688 284.129 10.914 284.426 cv
11.148 284.73 11.48 285.059 11.918 285.414 cv
16.82 285.414 li
16.867 285.418 16.902 285.43 16.926 285.445 cv
16.957 285.469 16.98 285.5 17 285.547 cv
17.02 285.598 17.031 285.664 17.047 285.746 cv
17.055 285.832 17.063 285.937 17.063 286.059 cv
17.063 286.18 17.055 286.281 17.047 286.367 cv
17.031 286.453 17.02 286.523 17 286.57 cv
16.98 286.625 16.957 286.656 16.926 286.672 cv
16.902 286.691 16.867 286.703 16.82 286.699 cv
12.559 286.699 li
12.266 286.703 11.996 286.73 11.75 286.785 cv
11.508 286.844 11.297 286.93 11.117 287.043 cv
10.941 287.156 10.805 287.301 10.711 287.473 cv
10.617 287.652 10.57 287.859 10.57 288.094 cv
10.57 288.395 10.688 288.691 10.914 288.992 cv
11.148 289.293 11.48 289.621 11.918 289.973 cv
16.82 289.973 li
16.867 289.977 16.902 289.988 16.926 290.004 cv
16.957 290.027 16.98 290.059 17 290.105 cv
17.02 290.152 17.031 290.219 17.047 290.297 cv
17.055 290.383 17.063 290.488 17.063 290.617 cv
17.063 290.746 17.055 290.852 17.047 290.93 cv
17.031 291.016 17.02 291.082 17 291.129 cv
16.98 291.184 16.957 291.215 16.926 291.23 cv
16.902 291.25 16.867 291.262 16.82 291.258 cv
9.809 291.258 li
9.77 291.262 9.734 291.254 9.703 291.234 cv
9.676 291.223 9.652 291.191 9.625 291.141 cv
9.605 291.098 9.59 291.035 9.578 290.961 cv
9.574 290.891 9.57 290.797 9.566 290.672 cv
9.57 290.562 9.574 290.465 9.578 290.387 cv
9.59 290.312 9.605 290.254 9.625 290.211 cv
9.652 290.172 9.676 290.145 9.703 290.125 cv
9.734 290.109 9.77 290.102 9.809 290.098 cv
10.734 290.098 li
10.293 289.707 9.973 289.324 9.766 288.949 cv
9.563 288.582 9.457 288.203 9.457 287.82 cv
9.457 287.531 9.492 287.273 9.559 287.039 cv
9.629 286.812 9.723 286.605 9.844 286.426 cv
9.965 286.25 10.109 286.102 10.277 285.973 cv
10.449 285.852 10.641 285.746 10.844 285.66 cv
10.594 285.43 10.379 285.207 10.199 284.996 cv
10.027 284.785 9.883 284.582 9.77 284.387 cv
9.664 284.191 9.586 284.004 9.531 283.82 cv
9.484 283.637 9.457 283.449 9.457 283.262 cv
9.457 282.809 9.539 282.43 9.695 282.125 cv
9.859 281.82 10.07 281.574 10.332 281.379 cv
10.598 281.191 10.906 281.055 11.262 280.973 cv
11.617 280.895 11.992 280.855 12.387 280.852 cv
cp
f
13.203 272.055 mo
13.82 272.059 14.371 272.125 14.859 272.254 cv
15.348 272.391 15.762 272.586 16.102 272.84 cv
16.441 273.098 16.703 273.414 16.887 273.793 cv
17.07 274.172 17.16 274.605 17.164 275.094 cv
17.16 275.305 17.141 275.5 17.102 275.672 cv
17.059 275.852 16.996 276.023 16.906 276.187 cv
16.82 276.359 16.707 276.527 16.57 276.691 cv
16.438 276.863 16.281 277.039 16.098 277.223 cv
19.602 277.223 li
19.641 277.227 19.68 277.238 19.711 277.254 cv
19.742 277.277 19.766 277.309 19.789 277.355 cv
19.805 277.402 19.82 277.469 19.836 277.547 cv
19.844 277.633 19.852 277.738 19.852 277.867 cv
19.852 277.996 19.844 278.102 19.836 278.18 cv
19.82 278.266 19.805 278.332 19.789 278.379 cv
19.766 278.434 19.742 278.465 19.711 278.48 cv
19.68 278.5 19.641 278.512 19.602 278.508 cv
9.809 278.508 li
9.762 278.512 9.727 278.504 9.695 278.484 cv
9.672 278.473 9.645 278.441 9.621 278.391 cv
9.602 278.348 9.59 278.285 9.578 278.211 cv
9.574 278.141 9.57 278.055 9.566 277.945 cv
9.57 277.84 9.574 277.75 9.578 277.676 cv
9.59 277.609 9.602 277.551 9.621 277.5 cv
9.645 277.457 9.672 277.422 9.695 277.402 cv
9.727 277.387 9.762 277.379 9.809 277.375 cv
10.75 277.375 li
10.535 277.168 10.344 276.965 10.184 276.762 cv
10.023 276.566 9.891 276.367 9.781 276.164 cv
9.676 275.969 9.594 275.762 9.539 275.551 cv
9.484 275.34 9.457 275.117 9.457 274.883 cv
9.457 274.375 9.559 273.941 9.754 273.582 cv
9.953 273.223 10.223 272.934 10.563 272.707 cv
10.91 272.484 11.309 272.316 11.762 272.211 cv
12.219 272.109 12.699 272.059 13.203 272.055 cv
cp
13.352 273.387 mo
13 273.391 12.652 273.418 12.313 273.469 cv
11.98 273.527 11.684 273.621 11.422 273.754 cv
11.164 273.891 10.957 274.07 10.797 274.289 cv
10.645 274.516 10.566 274.793 10.563 275.129 cv
10.566 275.297 10.59 275.461 10.637 275.621 cv
10.688 275.785 10.766 275.953 10.871 276.117 cv
10.98 276.289 11.121 276.461 11.293 276.641 cv
11.469 276.824 11.684 277.02 11.934 277.223 cv
14.723 277.223 li
15.16 276.867 15.488 276.531 15.715 276.211 cv
15.945 275.895 16.063 275.559 16.059 275.207 cv
16.063 274.883 15.984 274.605 15.824 274.371 cv
15.672 274.145 15.461 273.957 15.199 273.809 cv
14.941 273.668 14.652 273.559 14.328 273.488 cv
14.008 273.422 13.684 273.391 13.352 273.387 cv
cp
f
16.305 266.559 mo
16.461 266.559 16.578 266.57 16.664 266.59 cv
16.754 266.613 16.82 266.645 16.859 266.684 cv
16.902 266.727 16.941 266.789 16.977 266.871 cv
17.012 266.957 17.039 267.051 17.066 267.156 cv
17.086 267.266 17.105 267.379 17.125 267.496 cv
17.137 267.613 17.145 267.734 17.148 267.852 cv
17.145 268.219 17.098 268.531 17.004 268.789 cv
16.91 269.051 16.766 269.262 16.566 269.426 cv
16.375 269.594 16.129 269.715 15.828 269.789 cv
15.531 269.867 15.18 269.906 14.77 269.902 cv
10.672 269.902 li
10.672 270.883 li
10.676 270.961 10.633 271.023 10.547 271.07 cv
10.465 271.117 10.332 271.141 10.141 271.141 cv
10.047 271.141 9.965 271.137 9.895 271.121 cv
9.832 271.113 9.773 271.094 9.727 271.07 cv
9.684 271.051 9.652 271.023 9.633 270.988 cv
9.617 270.957 9.609 270.922 9.605 270.875 cv
9.605 269.902 li
7.938 269.902 li
7.906 269.906 7.871 269.895 7.836 269.875 cv
7.809 269.859 7.781 269.828 7.754 269.773 cv
7.734 269.727 7.719 269.66 7.703 269.574 cv
7.695 269.496 7.688 269.391 7.688 269.262 cv
7.688 269.133 7.695 269.027 7.703 268.945 cv
7.719 268.863 7.734 268.797 7.754 268.75 cv
7.781 268.703 7.809 268.672 7.836 268.648 cv
7.871 268.633 7.906 268.621 7.938 268.617 cv
9.605 268.617 li
9.605 266.816 li
9.609 266.777 9.617 266.742 9.633 266.707 cv
9.652 266.68 9.684 266.652 9.727 266.625 cv
9.773 266.605 9.832 266.59 9.895 266.574 cv
9.965 266.566 10.047 266.559 10.141 266.559 cv
10.332 266.559 10.465 266.582 10.547 266.629 cv
10.633 266.676 10.676 266.738 10.672 266.816 cv
10.672 268.617 li
14.586 268.617 li
15.07 268.621 15.434 268.551 15.68 268.402 cv
15.93 268.262 16.055 268.004 16.051 267.633 cv
16.055 267.52 16.043 267.414 16.016 267.316 cv
15.996 267.227 15.973 267.145 15.941 267.066 cv
15.918 266.996 15.891 266.934 15.867 266.879 cv
15.844 266.832 15.832 266.785 15.832 266.738 cv
15.832 266.715 15.84 266.687 15.852 266.664 cv
15.867 266.641 15.891 266.625 15.926 266.609 cv
15.965 266.602 16.016 266.59 16.074 266.574 cv
16.141 266.566 16.219 266.559 16.305 266.559 cv
cp
f
16.82 263.543 mo
16.867 263.547 16.902 263.559 16.926 263.574 cv
16.957 263.598 16.98 263.629 17 263.676 cv
17.02 263.723 17.031 263.789 17.047 263.867 cv
17.055 263.953 17.063 264.059 17.063 264.187 cv
17.063 264.316 17.055 264.422 17.047 264.5 cv
17.031 264.586 17.02 264.652 17 264.699 cv
16.98 264.754 16.957 264.785 16.926 264.801 cv
16.902 264.82 16.867 264.832 16.82 264.828 cv
9.809 264.828 li
9.773 264.832 9.742 264.82 9.707 264.801 cv
9.68 264.785 9.652 264.754 9.629 264.699 cv
9.609 264.652 9.594 264.586 9.582 264.5 cv
9.574 264.422 9.57 264.316 9.566 264.187 cv
9.57 264.059 9.574 263.953 9.582 263.867 cv
9.594 263.789 9.609 263.723 9.629 263.676 cv
9.652 263.629 9.68 263.598 9.707 263.574 cv
9.742 263.559 9.773 263.547 9.809 263.543 cv
cp
7.438 263.395 mo
7.742 263.395 7.949 263.453 8.055 263.566 cv
8.168 263.68 8.223 263.891 8.219 264.195 cv
8.223 264.5 8.168 264.707 8.059 264.816 cv
7.953 264.934 7.75 264.988 7.453 264.984 cv
7.152 264.988 6.949 264.93 6.84 264.812 cv
6.734 264.699 6.68 264.488 6.676 264.18 cv
6.68 263.879 6.734 263.676 6.836 263.562 cv
6.945 263.453 7.145 263.395 7.438 263.395 cv
cp
f
13.234 254.602 mo
13.813 254.605 14.34 254.68 14.816 254.828 cv
15.301 254.98 15.715 255.207 16.059 255.504 cv
16.41 255.805 16.68 256.18 16.871 256.625 cv
17.066 257.078 17.16 257.598 17.164 258.187 cv
17.16 258.766 17.078 259.27 16.906 259.695 cv
16.738 260.125 16.488 260.48 16.16 260.766 cv
15.832 261.055 15.438 261.27 14.969 261.406 cv
14.504 261.547 13.973 261.613 13.375 261.613 cv
12.809 261.613 12.281 261.543 11.801 261.395 cv
11.32 261.25 10.906 261.023 10.555 260.723 cv
10.207 260.426 9.938 260.055 9.746 259.605 cv
9.555 259.16 9.457 258.637 9.457 258.039 cv
9.457 257.461 9.543 256.961 9.715 256.531 cv
9.887 256.105 10.137 255.746 10.465 255.461 cv
10.793 255.176 11.191 254.961 11.656 254.816 cv
12.125 254.676 12.652 254.605 13.234 254.602 cv
cp
13.32 255.934 mo
12.945 255.937 12.586 255.973 12.246 256.039 cv
11.91 256.113 11.617 256.23 11.359 256.391 cv
11.109 256.555 10.906 256.773 10.754 257.051 cv
10.609 257.332 10.535 257.68 10.531 258.09 cv
10.535 258.477 10.602 258.805 10.734 259.078 cv
10.871 259.355 11.063 259.582 11.309 259.758 cv
11.555 259.937 11.848 260.07 12.184 260.152 cv
12.523 260.242 12.891 260.285 13.289 260.281 cv
13.676 260.285 14.039 260.25 14.375 260.176 cv
14.715 260.109 15.008 259.992 15.258 259.824 cv
15.512 259.66 15.715 259.437 15.859 259.16 cv
16.012 258.883 16.086 258.535 16.082 258.121 cv
16.086 257.746 16.016 257.418 15.879 257.137 cv
15.746 256.859 15.559 256.633 15.309 256.453 cv
15.066 256.277 14.773 256.148 14.438 256.062 cv
14.102 255.98 13.73 255.937 13.32 255.934 cv
cp
f
16.82 246.676 mo
16.867 246.676 16.902 246.687 16.926 246.707 cv
16.957 246.73 16.98 246.766 17 246.809 cv
17.02 246.859 17.031 246.922 17.047 247.004 cv
17.055 247.086 17.063 247.191 17.063 247.312 cv
17.063 247.445 17.055 247.551 17.047 247.633 cv
17.031 247.719 17.02 247.785 17 247.828 cv
16.98 247.879 16.957 247.91 16.926 247.93 cv
16.902 247.953 16.867 247.965 16.82 247.961 cv
12.715 247.961 li
12.316 247.965 11.996 247.996 11.75 248.055 cv
11.508 248.121 11.297 248.211 11.117 248.328 cv
10.941 248.445 10.805 248.602 10.711 248.789 cv
10.617 248.984 10.57 249.203 10.57 249.449 cv
10.57 249.773 10.688 250.098 10.914 250.418 cv
11.148 250.742 11.48 251.078 11.918 251.43 cv
16.82 251.43 li
16.867 251.434 16.902 251.445 16.926 251.461 cv
16.957 251.484 16.98 251.516 17 251.562 cv
17.02 251.609 17.031 251.676 17.047 251.754 cv
17.055 251.84 17.063 251.945 17.063 252.074 cv
17.063 252.203 17.055 252.309 17.047 252.387 cv
17.031 252.473 17.02 252.539 17 252.586 cv
16.98 252.641 16.957 252.672 16.926 252.687 cv
16.902 252.707 16.867 252.719 16.82 252.715 cv
9.809 252.715 li
9.77 252.719 9.734 252.711 9.703 252.691 cv
9.676 252.68 9.652 252.648 9.625 252.598 cv
9.605 252.555 9.59 252.492 9.578 252.418 cv
9.574 252.348 9.57 252.254 9.566 252.129 cv
9.57 252.02 9.574 251.922 9.578 251.844 cv
9.59 251.77 9.605 251.711 9.625 251.668 cv
9.652 251.629 9.676 251.602 9.703 251.582 cv
9.734 251.566 9.77 251.559 9.809 251.555 cv
10.734 251.555 li
10.293 251.164 9.973 250.77 9.766 250.375 cv
9.563 249.984 9.457 249.586 9.457 249.184 cv
9.457 248.715 9.539 248.324 9.695 248.004 cv
9.859 247.687 10.07 247.426 10.332 247.227 cv
10.598 247.031 10.906 246.891 11.262 246.805 cv
11.617 246.719 12.047 246.676 12.543 246.676 cv
cp
f
6.277 237.836 mo
7.324 238.332 8.395 238.699 9.492 238.941 cv
10.594 239.184 11.699 239.305 12.809 239.305 cv
13.926 239.305 15.035 239.184 16.129 238.934 cv
17.227 238.691 18.297 238.328 19.352 237.852 cv
19.41 237.828 19.465 237.816 19.512 237.809 cv
19.555 237.809 19.59 237.824 19.621 237.859 cv
19.648 237.898 19.668 237.953 19.684 238.027 cv
19.691 238.105 19.699 238.211 19.703 238.336 cv
19.699 238.434 19.695 238.512 19.695 238.578 cv
19.688 238.648 19.68 238.707 19.664 238.754 cv
19.648 238.805 19.629 238.848 19.609 238.875 cv
19.586 238.91 19.563 238.934 19.539 238.945 cv
19.008 239.227 18.473 239.473 17.93 239.684 cv
17.387 239.902 16.836 240.082 16.277 240.223 cv
15.715 240.371 15.148 240.48 14.574 240.551 cv
14 240.629 13.418 240.664 12.832 240.66 cv
12.246 240.664 11.668 240.625 11.094 240.539 cv
10.523 240.461 9.957 240.344 9.391 240.195 cv
8.828 240.047 8.273 239.867 7.727 239.656 cv
7.184 239.445 6.641 239.207 6.105 238.937 cv
6.086 238.934 6.07 238.918 6.051 238.895 cv
6.039 238.871 6.023 238.84 6.004 238.797 cv
5.992 238.758 5.98 238.699 5.969 238.625 cv
5.965 238.555 5.961 238.461 5.957 238.344 cv
5.961 238.227 5.969 238.133 5.98 238.055 cv
6 237.984 6.02 237.926 6.043 237.883 cv
6.07 237.844 6.105 237.82 6.145 237.812 cv
6.191 237.809 6.234 237.816 6.277 237.836 cv
cp
f
16.797 228.941 mo
16.844 228.945 16.879 228.953 16.91 228.969 cv
16.945 228.988 16.973 229.023 16.992 229.074 cv
17.012 229.129 17.027 229.199 17.043 229.285 cv
17.055 229.375 17.063 229.488 17.063 229.629 cv
17.063 229.809 17.055 229.957 17.039 230.07 cv
17.023 230.187 16.996 230.273 16.953 230.328 cv
16.914 230.387 16.867 230.434 16.813 230.469 cv
11.77 234.18 li
16.813 234.18 li
16.852 234.184 16.887 234.191 16.918 234.211 cv
16.953 234.234 16.98 234.273 16.996 234.32 cv
17.016 234.375 17.027 234.441 17.043 234.527 cv
17.055 234.613 17.063 234.723 17.063 234.848 cv
17.063 234.977 17.055 235.082 17.043 235.168 cv
17.027 235.258 17.016 235.328 16.996 235.379 cv
16.98 235.434 16.953 235.469 16.918 235.488 cv
16.887 235.512 16.852 235.523 16.813 235.52 cv
7.133 235.52 li
7.094 235.523 7.059 235.512 7.023 235.488 cv
6.996 235.469 6.969 235.434 6.949 235.379 cv
6.934 235.328 6.918 235.258 6.902 235.168 cv
6.891 235.082 6.887 234.977 6.883 234.848 cv
6.887 234.723 6.891 234.613 6.902 234.527 cv
6.918 234.441 6.934 234.375 6.949 234.32 cv
6.969 234.273 6.996 234.234 7.023 234.211 cv
7.059 234.191 7.094 234.184 7.133 234.18 cv
11.613 234.18 li
7.133 230.609 li
7.09 230.582 7.051 230.547 7.016 230.5 cv
6.988 230.461 6.965 230.41 6.941 230.348 cv
6.926 230.293 6.91 230.219 6.898 230.129 cv
6.891 230.047 6.887 229.937 6.883 229.801 cv
6.887 229.668 6.891 229.559 6.902 229.473 cv
6.918 229.391 6.938 229.324 6.953 229.273 cv
6.977 229.227 7 229.191 7.031 229.172 cv
7.063 229.156 7.098 229.148 7.133 229.145 cv
7.203 229.148 7.27 229.164 7.336 229.195 cv
7.406 229.23 7.5 229.297 7.617 229.387 cv
11.613 232.73 li
16.398 229.129 li
16.539 229.043 16.629 228.988 16.676 228.969 cv
16.727 228.953 16.77 228.945 16.797 228.941 cv
cp
f
16.719 217.852 mo
16.793 217.875 16.852 217.906 16.895 217.945 cv
16.941 217.988 16.977 218.047 16.996 218.117 cv
17.02 218.195 17.031 218.285 17.047 218.387 cv
17.055 218.496 17.063 218.625 17.063 218.777 cv
17.063 218.941 17.055 219.078 17.047 219.187 cv
17.031 219.301 17.02 219.395 16.996 219.465 cv
16.977 219.543 16.941 219.598 16.895 219.629 cv
16.852 219.668 16.793 219.695 16.719 219.715 cv
9.105 221.828 li
9.105 221.84 li
16.719 223.789 li
16.793 223.809 16.852 223.832 16.895 223.867 cv
16.941 223.906 16.977 223.961 16.996 224.023 cv
17.02 224.094 17.031 224.18 17.047 224.285 cv
17.055 224.395 17.063 224.531 17.063 224.695 cv
17.063 224.867 17.055 225.008 17.047 225.121 cv
17.031 225.238 17.02 225.332 16.996 225.402 cv
16.977 225.477 16.941 225.535 16.895 225.57 cv
16.852 225.613 16.793 225.641 16.719 225.652 cv
7.406 228.316 li
7.289 228.352 7.195 228.367 7.125 228.367 cv
7.059 228.371 7.008 228.352 6.969 228.305 cv
6.934 228.262 6.91 228.191 6.898 228.094 cv
6.891 227.996 6.887 227.863 6.883 227.695 cv
6.887 227.535 6.891 227.406 6.895 227.312 cv
6.906 227.219 6.918 227.148 6.938 227.098 cv
6.961 227.051 6.992 227.016 7.023 226.996 cv
7.063 226.98 7.109 226.969 7.164 226.953 cv
15.613 224.687 li
15.613 224.68 li
7.18 222.527 li
7.125 222.516 7.078 222.496 7.035 222.469 cv
7 222.449 6.969 222.41 6.945 222.355 cv
6.926 222.305 6.91 222.23 6.898 222.133 cv
6.891 222.039 6.887 221.914 6.883 221.758 cv
6.887 221.613 6.891 221.5 6.898 221.41 cv
6.91 221.328 6.926 221.258 6.945 221.203 cv
6.969 221.152 7 221.113 7.035 221.09 cv
7.078 221.066 7.125 221.047 7.18 221.031 cv
15.613 218.715 li
15.613 218.703 li
7.172 216.48 li
7.121 216.469 7.078 216.453 7.035 216.434 cv
7 216.422 6.969 216.391 6.945 216.336 cv
6.926 216.289 6.91 216.219 6.898 216.125 cv
6.891 216.039 6.887 215.918 6.883 215.762 cv
6.887 215.613 6.891 215.488 6.902 215.395 cv
6.918 215.305 6.945 215.238 6.977 215.195 cv
7.016 215.156 7.066 215.137 7.133 215.137 cv
7.203 215.141 7.297 215.156 7.414 215.18 cv
cp
f
16.82 207.414 mo
16.867 207.414 16.902 207.426 16.926 207.445 cv
16.957 207.469 16.98 207.504 17 207.547 cv
17.02 207.598 17.031 207.66 17.047 207.742 cv
17.055 207.824 17.063 207.93 17.063 208.051 cv
17.063 208.184 17.055 208.289 17.047 208.371 cv
17.031 208.457 17.02 208.523 17 208.566 cv
16.98 208.617 16.957 208.648 16.926 208.668 cv
16.902 208.691 16.867 208.703 16.82 208.699 cv
12.715 208.699 li
12.316 208.703 11.996 208.734 11.75 208.793 cv
11.508 208.859 11.297 208.949 11.117 209.066 cv
10.941 209.184 10.805 209.34 10.711 209.527 cv
10.617 209.723 10.57 209.941 10.57 210.187 cv
10.57 210.512 10.688 210.836 10.914 211.156 cv
11.148 211.48 11.48 211.816 11.918 212.168 cv
16.82 212.168 li
16.867 212.172 16.902 212.184 16.926 212.199 cv
16.957 212.223 16.98 212.254 17 212.301 cv
17.02 212.348 17.031 212.414 17.047 212.492 cv
17.055 212.578 17.063 212.684 17.063 212.812 cv
17.063 212.941 17.055 213.047 17.047 213.125 cv
17.031 213.211 17.02 213.277 17 213.324 cv
16.98 213.379 16.957 213.41 16.926 213.426 cv
16.902 213.445 16.867 213.457 16.82 213.453 cv
6.41 213.453 li
6.371 213.457 6.336 213.445 6.301 213.426 cv
6.273 213.41 6.246 213.379 6.223 213.324 cv
6.203 213.277 6.188 213.211 6.176 213.125 cv
6.168 213.047 6.164 212.941 6.16 212.812 cv
6.164 212.684 6.168 212.578 6.176 212.492 cv
6.188 212.414 6.203 212.348 6.223 212.301 cv
6.246 212.254 6.273 212.223 6.301 212.199 cv
6.336 212.184 6.371 212.172 6.41 212.168 cv
10.609 212.168 li
10.223 211.801 9.934 211.43 9.742 211.055 cv
9.555 210.684 9.457 210.305 9.457 209.922 cv
9.457 209.453 9.539 209.062 9.695 208.742 cv
9.859 208.426 10.07 208.164 10.332 207.965 cv
10.598 207.77 10.906 207.629 11.262 207.543 cv
11.617 207.457 12.047 207.414 12.551 207.414 cv
cp
f
18.895 204.957 mo
18.961 204.98 19.016 205.008 19.055 205.039 cv
19.094 205.078 19.121 205.121 19.145 205.168 cv
19.16 205.223 19.176 205.285 19.191 205.359 cv
19.199 205.437 19.207 205.527 19.207 205.633 cv
19.207 205.766 19.195 205.875 19.18 205.957 cv
19.156 206.047 19.133 206.113 19.102 206.156 cv
19.066 206.207 19.023 206.234 18.977 206.242 cv
18.926 206.254 18.867 206.246 18.801 206.211 cv
5.871 201.496 li
5.805 201.477 5.754 201.449 5.711 201.414 cv
5.676 201.383 5.645 201.344 5.617 201.289 cv
5.598 201.242 5.582 201.176 5.57 201.098 cv
5.566 201.02 5.563 200.926 5.559 200.816 cv
5.563 200.691 5.57 200.586 5.586 200.5 cv
5.605 200.418 5.629 200.355 5.66 200.305 cv
5.691 200.262 5.734 200.23 5.785 200.219 cv
5.84 200.211 5.898 200.219 5.965 200.242 cv
cp
f
16.484 192.945 mo
16.586 192.949 16.668 192.957 16.734 192.969 cv
16.805 192.988 16.859 193.008 16.898 193.031 cv
16.941 193.059 16.973 193.09 16.988 193.121 cv
17.008 193.156 17.016 193.191 17.016 193.223 cv
17.016 198.492 li
17.016 198.531 17.008 198.566 16.988 198.594 cv
16.973 198.629 16.941 198.66 16.898 198.684 cv
16.859 198.715 16.805 198.734 16.734 198.75 cv
16.668 198.766 16.586 198.773 16.484 198.773 cv
16.395 198.773 16.316 198.766 16.246 198.75 cv
16.184 198.734 16.125 198.715 16.078 198.691 cv
16.035 198.668 16.004 198.641 15.977 198.605 cv
15.957 198.574 15.945 198.535 15.941 198.492 cv
15.941 196.387 li
8.273 196.387 li
9.434 198.336 li
9.488 198.437 9.52 198.516 9.527 198.574 cv
9.539 198.637 9.527 198.687 9.492 198.719 cv
9.461 198.758 9.406 198.781 9.324 198.793 cv
9.25 198.809 9.152 198.816 9.027 198.812 cv
8.941 198.816 8.863 198.812 8.801 198.801 cv
8.738 198.797 8.688 198.785 8.645 198.766 cv
8.605 198.754 8.57 198.73 8.535 198.699 cv
8.508 198.672 8.477 198.633 8.445 198.586 cv
6.953 196.266 li
6.941 196.246 6.926 196.223 6.914 196.187 cv
6.906 196.16 6.898 196.121 6.887 196.07 cv
6.879 196.027 6.871 195.973 6.867 195.906 cv
6.867 195.848 6.867 195.77 6.863 195.672 cv
6.867 195.551 6.871 195.445 6.879 195.359 cv
6.887 195.277 6.902 195.211 6.918 195.164 cv
6.941 195.117 6.965 195.086 6.988 195.07 cv
7.02 195.055 7.047 195.047 7.078 195.047 cv
15.941 195.047 li
15.941 193.223 li
15.945 193.184 15.957 193.145 15.977 193.109 cv
16.004 193.074 16.035 193.043 16.078 193.02 cv
16.125 192.996 16.184 192.98 16.246 192.965 cv
16.316 192.957 16.395 192.949 16.484 192.945 cv
cp
f
11.949 184.59 mo
12.727 184.59 13.434 184.652 14.07 184.773 cv
14.711 184.898 15.262 185.102 15.719 185.383 cv
16.18 185.668 16.535 186.039 16.785 186.492 cv
17.039 186.953 17.16 187.516 17.164 188.184 cv
17.16 188.82 17.051 189.355 16.824 189.785 cv
16.602 190.223 16.27 190.57 15.828 190.832 cv
15.391 191.102 14.852 191.289 14.207 191.398 cv
13.566 191.508 12.828 191.562 11.996 191.562 cv
11.23 191.562 10.527 191.504 9.883 191.379 cv
9.242 191.258 8.691 191.055 8.23 190.77 cv
7.773 190.492 7.418 190.121 7.164 189.664 cv
6.914 189.207 6.785 188.648 6.785 187.98 cv
6.785 187.344 6.898 186.805 7.125 186.371 cv
7.352 185.937 7.684 185.59 8.121 185.324 cv
8.559 185.062 9.102 184.875 9.742 184.758 cv
10.387 184.648 11.121 184.59 11.949 184.59 cv
cp
12.043 185.961 mo
11.543 185.961 11.09 185.98 10.688 186.016 cv
10.289 186.055 9.938 186.109 9.629 186.176 cv
9.324 186.25 9.059 186.34 8.836 186.449 cv
8.617 186.562 8.438 186.695 8.293 186.852 cv
8.152 187.008 8.047 187.187 7.98 187.383 cv
7.918 187.586 7.887 187.809 7.883 188.059 cv
7.887 188.5 7.992 188.859 8.195 189.133 cv
8.406 189.41 8.691 189.629 9.051 189.785 cv
9.418 189.945 9.844 190.051 10.332 190.105 cv
10.82 190.164 11.344 190.191 11.902 190.191 cv
12.66 190.191 13.301 190.152 13.828 190.074 cv
14.355 189.996 14.785 189.875 15.117 189.707 cv
15.449 189.539 15.691 189.324 15.84 189.059 cv
15.992 188.801 16.066 188.48 16.066 188.105 cv
16.066 187.816 16.02 187.562 15.926 187.336 cv
15.832 187.117 15.699 186.926 15.523 186.77 cv
15.352 186.613 15.145 186.484 14.898 186.375 cv
14.656 186.273 14.383 186.187 14.086 186.125 cv
13.789 186.062 13.469 186.02 13.125 185.996 cv
12.781 185.973 12.422 185.961 12.043 185.961 cv
cp
f
9.582 181.102 mo
9.723 181.105 9.816 181.121 9.863 181.148 cv
9.918 181.184 9.941 181.23 9.941 181.285 cv
9.941 183.465 li
9.941 183.531 9.918 183.578 9.863 183.605 cv
9.813 183.641 9.719 183.656 9.582 183.652 cv
9.453 183.656 9.359 183.641 9.305 183.605 cv
9.254 183.578 9.227 183.531 9.227 183.465 cv
9.227 181.285 li
9.227 181.262 9.234 181.234 9.242 181.211 cv
9.258 181.187 9.277 181.168 9.305 181.152 cv
9.336 181.137 9.371 181.125 9.414 181.117 cv
9.461 181.109 9.52 181.105 9.582 181.102 cv
cp
f
10.285 176.004 mo
10.598 176.008 10.875 176.062 11.125 176.168 cv
11.375 176.277 11.59 176.43 11.762 176.629 cv
11.941 176.832 12.078 177.082 12.172 177.375 cv
12.266 177.672 12.309 178.004 12.313 178.375 cv
12.309 178.605 12.289 178.816 12.258 179.012 cv
12.219 179.207 12.18 179.383 12.129 179.535 cv
12.082 179.687 12.031 179.812 11.973 179.914 cv
11.922 180.016 11.883 180.082 11.855 180.105 cv
11.836 180.137 11.813 180.156 11.785 180.164 cv
11.762 180.18 11.73 180.191 11.695 180.199 cv
11.66 180.215 11.617 180.223 11.566 180.223 cv
11.516 180.23 11.453 180.23 11.379 180.23 cv
11.258 180.23 11.172 180.219 11.121 180.195 cv
11.074 180.172 11.051 180.137 11.047 180.09 cv
11.051 180.059 11.078 179.996 11.133 179.898 cv
11.191 179.809 11.25 179.687 11.313 179.535 cv
11.375 179.391 11.438 179.219 11.492 179.016 cv
11.551 178.82 11.578 178.598 11.574 178.355 cv
11.578 178.121 11.547 177.914 11.484 177.734 cv
11.426 177.555 11.344 177.406 11.234 177.285 cv
11.133 177.164 11.004 177.074 10.852 177.012 cv
10.707 176.957 10.547 176.926 10.367 176.922 cv
10.18 176.926 10.008 176.965 9.855 177.039 cv
9.703 177.117 9.57 177.23 9.457 177.375 cv
9.348 177.527 9.262 177.711 9.203 177.926 cv
9.145 178.145 9.117 178.391 9.113 178.664 cv
9.113 179.328 li
9.117 179.359 9.109 179.391 9.094 179.414 cv
9.082 179.445 9.063 179.469 9.035 179.484 cv
9.008 179.508 8.973 179.523 8.926 179.531 cv
8.883 179.547 8.82 179.551 8.746 179.551 cv
8.684 179.551 8.629 179.547 8.582 179.535 cv
8.539 179.527 8.504 179.512 8.477 179.492 cv
8.453 179.473 8.438 179.453 8.422 179.426 cv
8.414 179.402 8.406 179.371 8.402 179.34 cv
8.402 178.75 li
8.406 178.523 8.379 178.316 8.316 178.133 cv
8.262 177.953 8.176 177.801 8.059 177.672 cv
7.949 177.547 7.816 177.449 7.66 177.379 cv
7.508 177.312 7.332 177.277 7.141 177.277 cv
7.004 177.277 6.871 177.301 6.742 177.344 cv
6.617 177.391 6.508 177.457 6.41 177.547 cv
6.32 177.641 6.246 177.758 6.191 177.895 cv
6.137 178.039 6.109 178.203 6.109 178.383 cv
6.109 178.586 6.141 178.77 6.199 178.937 cv
6.262 179.105 6.328 179.254 6.395 179.387 cv
6.469 179.52 6.535 179.633 6.594 179.719 cv
6.656 179.809 6.684 179.867 6.684 179.898 cv
6.684 179.926 6.68 179.949 6.672 179.965 cv
6.664 179.988 6.648 180.004 6.617 180.012 cv
6.594 180.027 6.555 180.035 6.508 180.035 cv
6.461 180.043 6.398 180.043 6.32 180.043 cv
6.27 180.043 6.227 180.043 6.184 180.039 cv
6.148 180.039 6.113 180.031 6.082 180.02 cv
6.055 180.012 6.027 180 6 179.984 cv
5.977 179.969 5.949 179.945 5.914 179.914 cv
5.883 179.883 5.832 179.816 5.77 179.711 cv
5.707 179.613 5.648 179.488 5.586 179.34 cv
5.527 179.191 5.473 179.023 5.43 178.828 cv
5.391 178.641 5.371 178.43 5.367 178.203 cv
5.371 177.891 5.41 177.617 5.488 177.379 cv
5.57 177.145 5.684 176.949 5.828 176.789 cv
5.977 176.633 6.152 176.512 6.352 176.434 cv
6.559 176.355 6.785 176.316 7.027 176.316 cv
7.242 176.316 7.438 176.348 7.617 176.402 cv
7.801 176.461 7.961 176.539 8.102 176.645 cv
8.242 176.754 8.363 176.887 8.465 177.043 cv
8.566 177.199 8.637 177.379 8.668 177.582 cv
8.68 177.582 li
8.707 177.352 8.766 177.141 8.855 176.945 cv
8.949 176.754 9.063 176.59 9.203 176.449 cv
9.344 176.312 9.508 176.203 9.691 176.121 cv
9.879 176.047 10.078 176.008 10.285 176.004 cv
cp
f
12.832 171.574 mo
13.418 171.574 14 171.613 14.574 171.684 cv
15.148 171.762 15.715 171.871 16.277 172.012 cv
16.836 172.16 17.387 172.336 17.93 172.547 cv
18.473 172.758 19.008 173.004 19.539 173.281 cv
19.563 173.301 19.586 173.324 19.609 173.352 cv
19.629 173.387 19.648 173.426 19.664 173.473 cv
19.68 173.523 19.688 173.582 19.695 173.648 cv
19.695 173.719 19.699 173.801 19.703 173.891 cv
19.699 174.027 19.691 174.133 19.684 174.207 cv
19.668 174.285 19.648 174.34 19.621 174.371 cv
19.59 174.406 19.555 174.422 19.512 174.418 cv
19.465 174.418 19.41 174.402 19.352 174.375 cv
18.301 173.898 17.23 173.539 16.133 173.293 cv
15.035 173.051 13.926 172.93 12.809 172.926 cv
11.699 172.93 10.594 173.051 9.492 173.293 cv
8.395 173.539 7.324 173.906 6.277 174.391 cv
6.234 174.414 6.191 174.422 6.145 174.414 cv
6.105 174.414 6.07 174.391 6.043 174.344 cv
6.02 174.305 6 174.246 5.98 174.172 cv
5.969 174.102 5.961 174.004 5.957 173.883 cv
5.961 173.773 5.965 173.684 5.969 173.609 cv
5.98 173.539 5.992 173.48 6.004 173.434 cv
6.023 173.391 6.039 173.359 6.051 173.336 cv
6.07 173.32 6.086 173.305 6.105 173.289 cv
7.172 172.758 8.27 172.336 9.391 172.031 cv
10.52 171.727 11.664 171.574 12.832 171.574 cv
cp
f
310.211 546.355 mo
310.207 546.461 310.191 546.551 310.156 546.621 cv
310.121 546.699 310.074 546.758 310.02 546.801 cv
309.961 546.852 309.898 546.887 309.832 546.902 cv
309.758 546.926 309.688 546.934 309.625 546.934 cv
309.18 546.934 li
309.039 546.934 308.918 546.922 308.813 546.891 cv
308.707 546.867 308.609 546.812 308.516 546.734 cv
308.422 546.66 308.328 546.559 308.234 546.426 cv
308.141 546.297 308.039 546.133 307.934 545.93 cv
304.859 540.191 li
304.695 539.898 304.531 539.59 304.371 539.262 cv
304.203 538.941 304.051 538.625 303.914 538.316 cv
303.898 538.316 li
303.906 538.691 303.914 539.074 303.922 539.461 cv
303.926 539.852 303.926 540.238 303.93 540.621 cv
303.93 546.707 li
303.926 546.746 303.914 546.781 303.895 546.812 cv
303.871 546.848 303.836 546.875 303.785 546.891 cv
303.73 546.91 303.66 546.922 303.578 546.937 cv
303.492 546.949 303.387 546.957 303.258 546.957 cv
303.121 546.957 303.012 546.949 302.93 546.937 cv
302.844 546.922 302.777 546.91 302.73 546.891 cv
302.68 546.875 302.645 546.848 302.621 546.812 cv
302.598 546.781 302.586 546.746 302.59 546.707 cv
302.59 537.402 li
302.586 537.195 302.645 537.047 302.766 536.957 cv
302.883 536.871 303.012 536.828 303.152 536.824 cv
303.813 536.824 li
303.965 536.828 304.098 536.84 304.203 536.863 cv
304.305 536.891 304.398 536.934 304.484 536.992 cv
304.566 537.055 304.645 537.137 304.727 537.242 cv
304.801 537.352 304.883 537.488 304.969 537.645 cv
307.336 542.07 li
307.48 542.344 307.621 542.609 307.758 542.863 cv
307.891 543.121 308.02 543.375 308.148 543.621 cv
308.27 543.875 308.395 544.121 308.52 544.359 cv
308.641 544.602 308.762 544.844 308.887 545.086 cv
308.895 545.086 li
308.883 544.68 308.875 544.25 308.875 543.805 cv
308.867 543.359 308.867 542.934 308.871 542.523 cv
308.871 537.051 li
308.867 537.016 308.879 536.98 308.902 536.949 cv
308.926 536.918 308.961 536.891 309.016 536.867 cv
309.063 536.844 309.133 536.828 309.219 536.816 cv
309.305 536.809 309.414 536.805 309.555 536.801 cv
309.672 536.805 309.777 536.809 309.867 536.816 cv
309.953 536.828 310.02 536.844 310.07 536.867 cv
310.117 536.891 310.152 536.918 310.176 536.949 cv
310.195 536.98 310.207 537.016 310.211 537.051 cv
cp
f
318.758 546.715 mo
318.754 546.762 318.746 546.797 318.73 546.82 cv
318.711 546.852 318.676 546.875 318.633 546.895 cv
318.586 546.914 318.527 546.926 318.453 546.941 cv
318.375 546.949 318.281 546.957 318.176 546.957 cv
318.051 546.957 317.953 546.949 317.883 546.941 cv
317.805 546.926 317.746 546.914 317.703 546.895 cv
317.656 546.875 317.625 546.852 317.613 546.82 cv
317.594 546.797 317.586 546.762 317.59 546.715 cv
317.59 545.789 li
317.188 546.234 316.793 546.555 316.406 546.754 cv
316.012 546.957 315.617 547.055 315.223 547.059 cv
314.75 547.055 314.355 546.98 314.039 546.824 cv
313.719 546.672 313.461 546.461 313.266 546.191 cv
313.063 545.926 312.922 545.613 312.84 545.254 cv
312.75 544.898 312.707 544.465 312.711 543.957 cv
312.711 539.703 li
312.707 539.664 312.715 539.629 312.738 539.598 cv
312.754 539.57 312.789 539.547 312.844 539.52 cv
312.891 539.5 312.961 539.484 313.047 539.473 cv
313.129 539.469 313.23 539.465 313.359 539.461 cv
313.48 539.465 313.586 539.469 313.672 539.473 cv
313.754 539.484 313.82 539.5 313.867 539.52 cv
313.914 539.547 313.949 539.57 313.973 539.598 cv
313.992 539.629 314 539.664 314.004 539.703 cv
314.004 543.785 li
314 544.199 314.031 544.527 314.094 544.773 cv
314.152 545.02 314.242 545.23 314.367 545.402 cv
314.484 545.582 314.641 545.715 314.832 545.809 cv
315.016 545.906 315.234 545.957 315.484 545.953 cv
315.805 545.957 316.125 545.84 316.449 545.609 cv
316.766 545.383 317.105 545.047 317.465 544.602 cv
317.465 539.703 li
317.465 539.664 317.473 539.629 317.492 539.598 cv
317.508 539.57 317.543 539.547 317.598 539.52 cv
317.648 539.5 317.715 539.484 317.797 539.473 cv
317.875 539.469 317.98 539.465 318.113 539.461 cv
318.234 539.465 318.34 539.469 318.426 539.473 cv
318.508 539.484 318.57 539.5 318.617 539.52 cv
318.66 539.547 318.695 539.57 318.723 539.598 cv
318.742 539.629 318.754 539.664 318.758 539.703 cv
cp
f
331.535 546.715 mo
331.531 546.762 331.523 546.797 331.504 546.82 cv
331.48 546.852 331.445 546.875 331.402 546.895 cv
331.352 546.914 331.285 546.926 331.207 546.941 cv
331.121 546.949 331.02 546.957 330.895 546.957 cv
330.762 546.957 330.652 546.949 330.574 546.941 cv
330.488 546.926 330.422 546.914 330.375 546.895 cv
330.32 546.875 330.285 546.852 330.27 546.82 cv
330.246 546.797 330.238 546.762 330.238 546.715 cv
330.238 542.453 li
330.238 542.16 330.211 541.891 330.16 541.645 cv
330.105 541.402 330.023 541.191 329.91 541.012 cv
329.797 540.836 329.652 540.699 329.477 540.605 cv
329.297 540.512 329.086 540.465 328.852 540.465 cv
328.555 540.465 328.258 540.582 327.961 540.809 cv
327.656 541.043 327.328 541.375 326.973 541.812 cv
326.973 546.715 li
326.969 546.762 326.957 546.797 326.941 546.82 cv
326.918 546.852 326.887 546.875 326.84 546.895 cv
326.789 546.914 326.723 546.926 326.641 546.941 cv
326.555 546.949 326.449 546.957 326.328 546.957 cv
326.207 546.957 326.105 546.949 326.02 546.941 cv
325.934 546.926 325.863 546.914 325.816 546.895 cv
325.762 546.875 325.73 546.852 325.715 546.82 cv
325.695 546.797 325.684 546.762 325.688 546.715 cv
325.688 542.453 li
325.684 542.16 325.656 541.891 325.602 541.645 cv
325.543 541.402 325.457 541.191 325.344 541.012 cv
325.23 540.836 325.086 540.699 324.914 540.605 cv
324.734 540.512 324.527 540.465 324.293 540.465 cv
323.992 540.465 323.695 540.582 323.395 540.809 cv
323.094 541.043 322.766 541.375 322.414 541.812 cv
322.414 546.715 li
322.41 546.762 322.398 546.797 322.383 546.82 cv
322.359 546.852 322.328 546.875 322.281 546.895 cv
322.234 546.914 322.168 546.926 322.09 546.941 cv
322.004 546.949 321.898 546.957 321.77 546.957 cv
321.641 546.957 321.535 546.949 321.457 546.941 cv
321.371 546.926 321.305 546.914 321.258 546.895 cv
321.203 546.875 321.172 546.852 321.156 546.82 cv
321.137 546.797 321.125 546.762 321.129 546.715 cv
321.129 539.703 li
321.125 539.664 321.133 539.629 321.152 539.598 cv
321.164 539.57 321.195 539.547 321.246 539.52 cv
321.289 539.5 321.352 539.484 321.426 539.473 cv
321.496 539.469 321.59 539.465 321.715 539.461 cv
321.824 539.465 321.922 539.469 322 539.473 cv
322.074 539.484 322.133 539.5 322.176 539.52 cv
322.215 539.547 322.242 539.57 322.262 539.598 cv
322.277 539.629 322.285 539.664 322.289 539.703 cv
322.289 540.629 li
322.68 540.187 323.063 539.867 323.438 539.66 cv
323.805 539.457 324.184 539.352 324.566 539.352 cv
324.855 539.352 325.113 539.387 325.348 539.453 cv
325.574 539.523 325.781 539.617 325.961 539.738 cv
326.137 539.859 326.285 540.004 326.414 540.172 cv
326.535 540.344 326.641 540.535 326.727 540.738 cv
326.957 540.488 327.18 540.273 327.391 540.094 cv
327.602 539.922 327.805 539.777 328 539.664 cv
328.195 539.559 328.383 539.48 328.566 539.426 cv
328.75 539.379 328.938 539.352 329.125 539.352 cv
329.578 539.352 329.957 539.434 330.262 539.59 cv
330.566 539.754 330.813 539.965 331.008 540.227 cv
331.195 540.492 331.332 540.801 331.414 541.156 cv
331.492 541.512 331.531 541.887 331.535 542.281 cv
cp
f
340.336 543.113 mo
340.332 543.723 340.266 544.273 340.137 544.758 cv
340 545.246 339.805 545.66 339.551 546 cv
339.293 546.344 338.977 546.605 338.605 546.785 cv
338.23 546.969 337.805 547.055 337.32 547.059 cv
337.094 547.055 336.887 547.035 336.699 546.992 cv
336.512 546.945 336.324 546.875 336.145 546.777 cv
335.957 546.68 335.777 546.555 335.598 546.402 cv
335.414 546.254 335.223 546.074 335.023 545.859 cv
335.023 546.715 li
335.023 546.762 335.012 546.797 334.992 546.824 cv
334.969 546.859 334.934 546.883 334.891 546.898 cv
334.84 546.914 334.781 546.926 334.715 546.941 cv
334.641 546.949 334.551 546.957 334.445 546.957 cv
334.336 546.957 334.25 546.949 334.18 546.941 cv
334.105 546.926 334.043 546.914 334 546.898 cv
333.949 546.883 333.918 546.859 333.906 546.824 cv
333.887 546.797 333.879 546.762 333.883 546.715 cv
333.883 536.305 li
333.879 536.266 333.891 536.23 333.91 536.195 cv
333.926 536.168 333.957 536.141 334.012 536.117 cv
334.059 536.098 334.125 536.082 334.211 536.07 cv
334.289 536.062 334.395 536.059 334.523 536.055 cv
334.652 536.059 334.758 536.062 334.844 536.07 cv
334.922 536.082 334.988 536.098 335.035 536.117 cv
335.082 536.141 335.113 536.168 335.137 536.195 cv
335.152 536.23 335.164 536.266 335.168 536.305 cv
335.168 540.504 li
335.375 540.293 335.578 540.113 335.773 539.969 cv
335.969 539.824 336.156 539.707 336.344 539.613 cv
336.527 539.527 336.715 539.461 336.906 539.414 cv
337.09 539.375 337.289 539.352 337.5 539.352 cv
338.004 539.352 338.438 539.453 338.805 539.656 cv
339.164 539.859 339.457 540.133 339.684 540.469 cv
339.906 540.812 340.074 541.211 340.18 541.668 cv
340.281 542.125 340.332 542.605 340.336 543.113 cv
cp
339.004 543.262 mo
339 542.906 338.973 542.559 338.922 542.219 cv
338.863 541.883 338.77 541.586 338.633 541.324 cv
338.496 541.066 338.316 540.855 338.094 540.695 cv
337.867 540.539 337.586 540.461 337.254 540.457 cv
337.086 540.461 336.922 540.484 336.762 540.527 cv
336.598 540.578 336.434 540.656 336.266 540.762 cv
336.098 540.875 335.922 541.016 335.746 541.184 cv
335.563 541.359 335.371 541.574 335.168 541.828 cv
335.168 544.625 li
335.523 545.059 335.863 545.391 336.188 545.613 cv
336.512 545.844 336.848 545.957 337.199 545.953 cv
337.52 545.957 337.797 545.879 338.031 545.719 cv
338.258 545.566 338.445 545.359 338.59 545.098 cv
338.734 544.844 338.84 544.555 338.906 544.234 cv
338.969 543.918 339 543.594 339.004 543.262 cv
cp
f
348.246 542.906 mo
348.242 543.109 348.191 543.25 348.094 543.336 cv
347.988 543.422 347.871 543.465 347.746 543.465 cv
343.129 543.465 li
343.125 543.855 343.164 544.207 343.246 544.52 cv
343.32 544.832 343.453 545.102 343.637 545.32 cv
343.816 545.547 344.051 545.719 344.348 545.836 cv
344.637 545.961 344.996 546.02 345.422 546.016 cv
345.754 546.02 346.051 545.992 346.313 545.934 cv
346.574 545.883 346.801 545.82 346.992 545.75 cv
347.18 545.684 347.336 545.625 347.461 545.566 cv
347.582 545.516 347.676 545.488 347.738 545.484 cv
347.773 545.488 347.805 545.496 347.836 545.512 cv
347.863 545.531 347.887 545.559 347.906 545.594 cv
347.918 545.633 347.93 545.684 347.941 545.746 cv
347.945 545.812 347.949 545.891 347.953 545.984 cv
347.949 546.055 347.945 546.113 347.945 546.16 cv
347.938 546.207 347.934 546.25 347.926 546.289 cv
347.918 546.328 347.902 546.363 347.887 546.395 cv
347.863 546.426 347.84 546.457 347.816 546.484 cv
347.785 546.516 347.703 546.562 347.563 546.625 cv
347.422 546.691 347.238 546.754 347.016 546.816 cv
346.789 546.879 346.531 546.934 346.238 546.984 cv
345.945 547.031 345.633 547.055 345.301 547.059 cv
344.723 547.055 344.215 546.977 343.785 546.816 cv
343.348 546.656 342.984 546.418 342.691 546.102 cv
342.391 545.785 342.168 545.391 342.02 544.91 cv
341.871 544.434 341.797 543.875 341.797 543.238 cv
341.797 542.641 341.871 542.102 342.027 541.617 cv
342.18 541.141 342.406 540.73 342.703 540.395 cv
342.996 540.059 343.352 539.801 343.766 539.621 cv
344.18 539.441 344.645 539.352 345.16 539.352 cv
345.711 539.352 346.18 539.441 346.566 539.617 cv
346.953 539.797 347.27 540.035 347.523 540.332 cv
347.77 540.633 347.953 540.984 348.07 541.383 cv
348.184 541.789 348.242 542.219 348.246 542.672 cv
cp
346.953 542.523 mo
346.969 541.848 346.816 541.316 346.5 540.934 cv
346.184 540.551 345.715 540.359 345.098 540.355 cv
344.773 540.359 344.492 540.418 344.254 540.535 cv
344.012 540.656 343.813 540.816 343.652 541.012 cv
343.488 541.211 343.363 541.441 343.277 541.703 cv
343.188 541.965 343.137 542.238 343.129 542.523 cv
cp
f
354.313 540.16 mo
354.309 540.277 354.309 540.375 354.305 540.449 cv
354.297 540.531 354.285 540.594 354.273 540.633 cv
354.254 540.68 354.234 540.711 354.215 540.734 cv
354.188 540.758 354.156 540.77 354.117 540.77 cv
354.074 540.77 354.023 540.758 353.965 540.734 cv
353.902 540.711 353.832 540.687 353.762 540.664 cv
353.684 540.641 353.602 540.621 353.508 540.598 cv
353.414 540.582 353.313 540.57 353.203 540.566 cv
353.07 540.57 352.941 540.598 352.82 540.645 cv
352.695 540.699 352.566 540.785 352.43 540.902 cv
352.289 541.027 352.145 541.184 351.996 541.379 cv
351.844 541.574 351.676 541.816 351.496 542.102 cv
351.496 546.715 li
351.492 546.762 351.48 546.797 351.465 546.82 cv
351.441 546.852 351.41 546.875 351.363 546.895 cv
351.316 546.914 351.25 546.926 351.172 546.941 cv
351.086 546.949 350.98 546.957 350.852 546.957 cv
350.723 546.957 350.617 546.949 350.539 546.941 cv
350.453 546.926 350.387 546.914 350.34 546.895 cv
350.285 546.875 350.254 546.852 350.238 546.82 cv
350.219 546.797 350.207 546.762 350.211 546.715 cv
350.211 539.703 li
350.207 539.664 350.215 539.629 350.234 539.598 cv
350.246 539.57 350.277 539.547 350.328 539.52 cv
350.371 539.5 350.434 539.484 350.508 539.473 cv
350.578 539.469 350.672 539.465 350.797 539.461 cv
350.906 539.465 351.004 539.469 351.082 539.473 cv
351.156 539.484 351.215 539.5 351.258 539.52 cv
351.297 539.547 351.324 539.57 351.344 539.598 cv
351.359 539.629 351.367 539.664 351.371 539.703 cv
351.371 540.723 li
351.559 540.441 351.742 540.215 351.914 540.039 cv
352.082 539.863 352.242 539.723 352.395 539.621 cv
352.543 539.52 352.691 539.449 352.84 539.41 cv
352.988 539.371 353.137 539.352 353.289 539.352 cv
353.355 539.352 353.434 539.355 353.52 539.363 cv
353.605 539.371 353.695 539.387 353.789 539.406 cv
353.883 539.43 353.965 539.453 354.043 539.477 cv
354.113 539.504 354.168 539.531 354.203 539.555 cv
354.23 539.586 354.25 539.609 354.266 539.629 cv
354.273 539.656 354.285 539.687 354.293 539.719 cv
354.301 539.758 354.305 539.809 354.309 539.879 cv
354.309 539.949 354.309 540.043 354.313 540.16 cv
cp
f
366.07 543.129 mo
366.066 543.707 365.992 544.234 365.844 544.711 cv
365.691 545.195 365.465 545.609 365.168 545.953 cv
364.867 546.305 364.492 546.574 364.047 546.766 cv
363.594 546.961 363.074 547.055 362.484 547.059 cv
361.906 547.055 361.402 546.973 360.977 546.801 cv
360.547 546.633 360.191 546.383 359.906 546.055 cv
359.617 545.727 359.402 545.332 359.266 544.863 cv
359.125 544.398 359.059 543.867 359.059 543.27 cv
359.059 542.703 359.129 542.176 359.277 541.695 cv
359.422 541.215 359.648 540.801 359.949 540.449 cv
360.246 540.102 360.617 539.832 361.066 539.641 cv
361.512 539.449 362.035 539.352 362.633 539.352 cv
363.211 539.352 363.711 539.437 364.141 539.609 cv
364.566 539.781 364.926 540.031 365.211 540.359 cv
365.496 540.687 365.711 541.086 365.855 541.551 cv
365.996 542.02 366.066 542.547 366.07 543.129 cv
cp
364.738 543.215 mo
364.734 542.84 364.699 542.48 364.633 542.141 cv
364.559 541.805 364.441 541.512 364.281 541.254 cv
364.117 541.004 363.898 540.801 363.621 540.648 cv
363.34 540.504 362.992 540.43 362.582 540.426 cv
362.195 540.43 361.867 540.496 361.594 540.629 cv
361.316 540.766 361.09 540.957 360.914 541.203 cv
360.734 541.449 360.602 541.742 360.52 542.078 cv
360.43 542.418 360.387 542.785 360.391 543.184 cv
360.387 543.57 360.422 543.934 360.496 544.27 cv
360.563 544.609 360.68 544.902 360.848 545.152 cv
361.012 545.406 361.234 545.609 361.512 545.754 cv
361.789 545.906 362.137 545.98 362.551 545.977 cv
362.926 545.98 363.254 545.91 363.535 545.773 cv
363.813 545.641 364.039 545.453 364.219 545.203 cv
364.395 544.961 364.523 544.668 364.609 544.332 cv
364.691 543.996 364.734 543.625 364.738 543.215 cv
cp
f
371.801 536.816 mo
371.797 536.918 371.793 536.996 371.785 537.055 cv
371.773 537.117 371.762 537.168 371.75 537.199 cv
371.734 537.238 371.719 537.262 371.699 537.273 cv
371.676 537.289 371.648 537.297 371.621 537.293 cv
371.582 537.297 371.535 537.285 371.484 537.258 cv
371.426 537.238 371.359 537.211 371.285 537.18 cv
371.203 537.152 371.113 537.125 371.008 537.102 cv
370.898 537.078 370.773 537.066 370.641 537.066 cv
370.445 537.066 370.281 537.098 370.148 537.16 cv
370.008 537.223 369.898 537.32 369.82 537.453 cv
369.734 537.586 369.676 537.758 369.641 537.969 cv
369.602 538.18 369.582 538.437 369.586 538.734 cv
369.586 539.5 li
371.152 539.5 li
371.191 539.504 371.227 539.512 371.258 539.527 cv
371.285 539.547 371.313 539.578 371.336 539.621 cv
371.359 539.668 371.375 539.727 371.391 539.789 cv
371.398 539.859 371.406 539.941 371.41 540.035 cv
371.406 540.227 371.383 540.359 371.34 540.441 cv
371.289 540.527 371.227 540.57 371.152 540.566 cv
369.586 540.566 li
369.586 546.715 li
369.582 546.762 369.574 546.797 369.555 546.82 cv
369.531 546.852 369.496 546.875 369.449 546.895 cv
369.398 546.914 369.332 546.926 369.25 546.941 cv
369.164 546.949 369.059 546.957 368.941 546.957 cv
368.813 546.957 368.711 546.949 368.629 546.941 cv
368.543 546.926 368.477 546.914 368.43 546.895 cv
368.379 546.875 368.344 546.852 368.324 546.82 cv
368.301 546.797 368.289 546.762 368.293 546.715 cv
368.293 540.566 li
367.305 540.566 li
367.219 540.57 367.156 540.527 367.117 540.441 cv
367.074 540.359 367.051 540.227 367.055 540.035 cv
367.051 539.941 367.059 539.859 367.07 539.789 cv
367.078 539.727 367.094 539.668 367.117 539.621 cv
367.137 539.578 367.16 539.547 367.195 539.527 cv
367.223 539.512 367.262 539.504 367.305 539.5 cv
368.293 539.5 li
368.293 538.773 li
368.289 538.289 368.336 537.871 368.43 537.516 cv
368.52 537.168 368.656 536.879 368.844 536.656 cv
369.027 536.434 369.262 536.27 369.551 536.16 cv
369.832 536.055 370.168 536 370.555 536 cv
370.73 536 370.906 536.02 371.082 536.051 cv
371.25 536.09 371.383 536.125 371.48 536.16 cv
371.57 536.203 371.633 536.238 371.668 536.266 cv
371.695 536.301 371.723 536.34 371.746 536.387 cv
371.766 536.437 371.777 536.5 371.789 536.566 cv
371.793 536.641 371.797 536.723 371.801 536.816 cv
cp
f
382 544.082 mo
381.996 544.555 381.91 544.977 381.738 545.344 cv
381.563 545.719 381.32 546.031 381.012 546.285 cv
380.703 546.543 380.34 546.734 379.922 546.863 cv
379.5 546.992 379.051 547.055 378.57 547.059 cv
378.23 547.055 377.914 547.027 377.629 546.973 cv
377.34 546.914 377.086 546.848 376.859 546.762 cv
376.633 546.684 376.441 546.598 376.289 546.504 cv
376.133 546.418 376.027 546.34 375.969 546.277 cv
375.91 546.215 375.867 546.137 375.84 546.043 cv
375.809 545.949 375.793 545.82 375.797 545.656 cv
375.793 545.543 375.797 545.449 375.813 545.371 cv
375.82 545.297 375.836 545.234 375.859 545.187 cv
375.875 545.141 375.902 545.109 375.938 545.09 cv
375.965 545.074 376 545.066 376.043 545.062 cv
376.113 545.066 376.215 545.109 376.352 545.195 cv
376.48 545.285 376.652 545.383 376.863 545.484 cv
377.07 545.594 377.32 545.691 377.613 545.777 cv
377.906 545.871 378.246 545.914 378.633 545.914 cv
378.922 545.914 379.188 545.875 379.43 545.797 cv
379.668 545.719 379.875 545.609 380.055 545.465 cv
380.227 545.324 380.363 545.148 380.457 544.937 cv
380.551 544.73 380.598 544.496 380.598 544.23 cv
380.598 543.949 380.531 543.703 380.402 543.496 cv
380.27 543.297 380.098 543.121 379.887 542.965 cv
379.672 542.816 379.43 542.676 379.156 542.543 cv
378.883 542.418 378.602 542.285 378.32 542.152 cv
378.031 542.02 377.754 541.875 377.484 541.711 cv
377.215 541.555 376.973 541.363 376.762 541.145 cv
376.543 540.926 376.371 540.672 376.242 540.375 cv
376.105 540.086 376.039 539.734 376.043 539.32 cv
376.039 538.902 376.117 538.527 376.273 538.195 cv
376.426 537.867 376.637 537.59 376.914 537.363 cv
377.184 537.145 377.508 536.973 377.887 536.855 cv
378.262 536.738 378.672 536.68 379.109 536.68 cv
379.328 536.68 379.551 536.699 379.781 536.738 cv
380.004 536.777 380.215 536.828 380.418 536.891 cv
380.613 536.957 380.793 537.031 380.953 537.109 cv
381.105 537.191 381.207 537.258 381.262 537.305 cv
381.309 537.359 381.344 537.398 381.359 537.422 cv
381.375 537.453 381.387 537.488 381.398 537.531 cv
381.406 537.578 381.414 537.633 381.422 537.691 cv
381.426 537.758 381.43 537.836 381.43 537.934 cv
381.43 538.027 381.426 538.113 381.418 538.184 cv
381.41 538.262 381.398 538.32 381.383 538.367 cv
381.367 538.414 381.344 538.449 381.316 538.473 cv
381.285 538.496 381.254 538.508 381.219 538.508 cv
381.16 538.508 381.07 538.473 380.949 538.402 cv
380.824 538.332 380.672 538.25 380.5 538.156 cv
380.32 538.066 380.113 537.984 379.875 537.906 cv
379.629 537.832 379.359 537.793 379.063 537.793 cv
378.781 537.793 378.535 537.832 378.328 537.906 cv
378.117 537.984 377.945 538.086 377.813 538.207 cv
377.676 538.332 377.574 538.477 377.508 538.648 cv
377.441 538.82 377.41 539.004 377.41 539.195 cv
377.41 539.48 377.473 539.723 377.602 539.922 cv
377.73 540.125 377.902 540.305 378.121 540.457 cv
378.332 540.617 378.578 540.758 378.855 540.887 cv
379.129 541.02 379.41 541.152 379.699 541.281 cv
379.984 541.414 380.266 541.559 380.539 541.715 cv
380.813 541.875 381.059 542.062 381.277 542.277 cv
381.492 542.496 381.664 542.75 381.801 543.043 cv
381.93 543.336 381.996 543.684 382 544.082 cv
cp
f
389.766 546.715 mo
389.762 546.762 389.754 546.797 389.738 546.82 cv
389.719 546.852 389.684 546.875 389.641 546.895 cv
389.594 546.914 389.535 546.926 389.461 546.941 cv
389.383 546.949 389.289 546.957 389.184 546.957 cv
389.059 546.957 388.961 546.949 388.891 546.941 cv
388.813 546.926 388.754 546.914 388.711 546.895 cv
388.664 546.875 388.633 546.852 388.621 546.82 cv
388.602 546.797 388.594 546.762 388.598 546.715 cv
388.598 545.789 li
388.195 546.234 387.801 546.555 387.414 546.754 cv
387.02 546.957 386.625 547.055 386.23 547.059 cv
385.758 547.055 385.363 546.98 385.047 546.824 cv
384.727 546.672 384.469 546.461 384.273 546.191 cv
384.07 545.926 383.93 545.613 383.848 545.254 cv
383.758 544.898 383.715 544.465 383.719 543.957 cv
383.719 539.703 li
383.715 539.664 383.723 539.629 383.746 539.598 cv
383.762 539.57 383.797 539.547 383.852 539.52 cv
383.898 539.5 383.969 539.484 384.055 539.473 cv
384.137 539.469 384.238 539.465 384.367 539.461 cv
384.488 539.465 384.594 539.469 384.68 539.473 cv
384.762 539.484 384.828 539.5 384.875 539.52 cv
384.922 539.547 384.957 539.57 384.98 539.598 cv
385 539.629 385.008 539.664 385.012 539.703 cv
385.012 543.785 li
385.008 544.199 385.039 544.527 385.102 544.773 cv
385.16 545.02 385.25 545.23 385.375 545.402 cv
385.492 545.582 385.648 545.715 385.84 545.809 cv
386.023 545.906 386.242 545.957 386.492 545.953 cv
386.813 545.957 387.133 545.84 387.457 545.609 cv
387.773 545.383 388.113 545.047 388.473 544.602 cv
388.473 539.703 li
388.473 539.664 388.48 539.629 388.5 539.598 cv
388.516 539.57 388.551 539.547 388.605 539.52 cv
388.656 539.5 388.723 539.484 388.805 539.473 cv
388.883 539.469 388.988 539.465 389.121 539.461 cv
389.242 539.465 389.348 539.469 389.434 539.473 cv
389.516 539.484 389.578 539.5 389.625 539.52 cv
389.668 539.547 389.703 539.57 389.73 539.598 cv
389.75 539.629 389.762 539.664 389.766 539.703 cv
cp
f
398.621 543.113 mo
398.617 543.723 398.551 544.273 398.422 544.758 cv
398.285 545.246 398.09 545.66 397.836 546 cv
397.578 546.344 397.262 546.605 396.891 546.785 cv
396.516 546.969 396.09 547.055 395.605 547.059 cv
395.379 547.055 395.172 547.035 394.984 546.992 cv
394.797 546.945 394.609 546.875 394.43 546.777 cv
394.242 546.68 394.063 546.555 393.883 546.402 cv
393.699 546.254 393.508 546.074 393.309 545.859 cv
393.309 546.715 li
393.309 546.762 393.297 546.797 393.277 546.824 cv
393.254 546.859 393.219 546.883 393.176 546.898 cv
393.125 546.914 393.066 546.926 393 546.941 cv
392.926 546.949 392.836 546.957 392.73 546.957 cv
392.621 546.957 392.535 546.949 392.465 546.941 cv
392.391 546.926 392.328 546.914 392.285 546.898 cv
392.234 546.883 392.203 546.859 392.191 546.824 cv
392.172 546.797 392.164 546.762 392.168 546.715 cv
392.168 536.305 li
392.164 536.266 392.176 536.23 392.195 536.195 cv
392.211 536.168 392.242 536.141 392.297 536.117 cv
392.344 536.098 392.41 536.082 392.496 536.07 cv
392.574 536.062 392.68 536.059 392.809 536.055 cv
392.938 536.059 393.043 536.062 393.129 536.07 cv
393.207 536.082 393.273 536.098 393.32 536.117 cv
393.367 536.141 393.398 536.168 393.422 536.195 cv
393.438 536.23 393.449 536.266 393.453 536.305 cv
393.453 540.504 li
393.66 540.293 393.863 540.113 394.059 539.969 cv
394.254 539.824 394.441 539.707 394.629 539.613 cv
394.813 539.527 395 539.461 395.191 539.414 cv
395.375 539.375 395.574 539.352 395.785 539.352 cv
396.289 539.352 396.723 539.453 397.09 539.656 cv
397.449 539.859 397.742 540.133 397.969 540.469 cv
398.191 540.812 398.359 541.211 398.465 541.668 cv
398.566 542.125 398.617 542.605 398.621 543.113 cv
cp
397.289 543.262 mo
397.285 542.906 397.258 542.559 397.207 542.219 cv
397.148 541.883 397.055 541.586 396.918 541.324 cv
396.781 541.066 396.602 540.855 396.379 540.695 cv
396.152 540.539 395.871 540.461 395.539 540.457 cv
395.371 540.461 395.207 540.484 395.047 540.527 cv
394.883 540.578 394.719 540.656 394.551 540.762 cv
394.383 540.875 394.207 541.016 394.031 541.184 cv
393.848 541.359 393.656 541.574 393.453 541.828 cv
393.453 544.625 li
393.809 545.059 394.148 545.391 394.473 545.613 cv
394.797 545.844 395.133 545.957 395.484 545.953 cv
395.805 545.957 396.082 545.879 396.316 545.719 cv
396.543 545.566 396.73 545.359 396.875 545.098 cv
397.02 544.844 397.125 544.555 397.191 544.234 cv
397.254 543.918 397.285 543.594 397.289 543.262 cv
cp
f
403.758 542.977 mo
403.758 543.18 403.734 543.316 403.688 543.395 cv
403.641 543.473 403.57 543.512 403.484 543.512 cv
400.227 543.512 li
400.133 543.512 400.066 543.473 400.02 543.391 cv
399.973 543.312 399.949 543.176 399.949 542.977 cv
399.949 542.781 399.973 542.641 400.02 542.562 cv
400.066 542.484 400.133 542.445 400.227 542.445 cv
403.484 542.445 li
403.523 542.445 403.563 542.453 403.598 542.469 cv
403.629 542.484 403.656 542.516 403.684 542.559 cv
403.703 542.605 403.723 542.66 403.738 542.727 cv
403.75 542.797 403.758 542.883 403.758 542.977 cv
cp
f
407.008 546.707 mo
407.004 546.75 406.996 546.785 406.977 546.816 cv
406.953 546.848 406.914 546.875 406.867 546.891 cv
406.813 546.91 406.746 546.922 406.66 546.937 cv
406.574 546.949 406.465 546.957 406.34 546.957 cv
406.211 546.957 406.105 546.949 406.02 546.937 cv
405.93 546.922 405.859 546.91 405.809 546.891 cv
405.754 546.875 405.719 546.848 405.699 546.816 cv
405.676 546.785 405.664 546.75 405.668 546.707 cv
405.668 537.027 li
405.664 536.988 405.676 536.953 405.703 536.918 cv
405.723 536.891 405.762 536.863 405.82 536.844 cv
405.871 536.828 405.941 536.812 406.031 536.797 cv
406.113 536.785 406.215 536.781 406.34 536.777 cv
406.465 536.781 406.574 536.785 406.66 536.797 cv
406.746 536.812 406.813 536.828 406.867 536.844 cv
406.914 536.863 406.953 536.891 406.977 536.918 cv
406.996 536.953 407.004 536.988 407.008 537.027 cv
cp
f
419.996 546.715 mo
419.992 546.762 419.984 546.797 419.965 546.82 cv
419.941 546.852 419.906 546.875 419.863 546.895 cv
419.813 546.914 419.746 546.926 419.668 546.941 cv
419.582 546.949 419.48 546.957 419.355 546.957 cv
419.223 546.957 419.113 546.949 419.035 546.941 cv
418.949 546.926 418.883 546.914 418.836 546.895 cv
418.781 546.875 418.746 546.852 418.73 546.82 cv
418.707 546.797 418.699 546.762 418.699 546.715 cv
418.699 542.453 li
418.699 542.16 418.672 541.891 418.621 541.645 cv
418.566 541.402 418.484 541.191 418.371 541.012 cv
418.258 540.836 418.113 540.699 417.938 540.605 cv
417.758 540.512 417.547 540.465 417.313 540.465 cv
417.016 540.465 416.719 540.582 416.422 540.809 cv
416.117 541.043 415.789 541.375 415.434 541.812 cv
415.434 546.715 li
415.43 546.762 415.418 546.797 415.402 546.82 cv
415.379 546.852 415.348 546.875 415.301 546.895 cv
415.25 546.914 415.184 546.926 415.102 546.941 cv
415.016 546.949 414.91 546.957 414.789 546.957 cv
414.668 546.957 414.566 546.949 414.48 546.941 cv
414.395 546.926 414.324 546.914 414.277 546.895 cv
414.223 546.875 414.191 546.852 414.176 546.82 cv
414.156 546.797 414.145 546.762 414.148 546.715 cv
414.148 542.453 li
414.145 542.16 414.117 541.891 414.063 541.645 cv
414.004 541.402 413.918 541.191 413.805 541.012 cv
413.691 540.836 413.547 540.699 413.375 540.605 cv
413.195 540.512 412.988 540.465 412.754 540.465 cv
412.453 540.465 412.156 540.582 411.855 540.809 cv
411.555 541.043 411.227 541.375 410.875 541.812 cv
410.875 546.715 li
410.871 546.762 410.859 546.797 410.844 546.82 cv
410.82 546.852 410.789 546.875 410.742 546.895 cv
410.695 546.914 410.629 546.926 410.551 546.941 cv
410.465 546.949 410.359 546.957 410.23 546.957 cv
410.102 546.957 409.996 546.949 409.918 546.941 cv
409.832 546.926 409.766 546.914 409.719 546.895 cv
409.664 546.875 409.633 546.852 409.617 546.82 cv
409.598 546.797 409.586 546.762 409.59 546.715 cv
409.59 539.703 li
409.586 539.664 409.594 539.629 409.613 539.598 cv
409.625 539.57 409.656 539.547 409.707 539.52 cv
409.75 539.5 409.813 539.484 409.887 539.473 cv
409.957 539.469 410.051 539.465 410.176 539.461 cv
410.285 539.465 410.383 539.469 410.461 539.473 cv
410.535 539.484 410.594 539.5 410.637 539.52 cv
410.676 539.547 410.703 539.57 410.723 539.598 cv
410.738 539.629 410.746 539.664 410.75 539.703 cv
410.75 540.629 li
411.141 540.187 411.523 539.867 411.898 539.66 cv
412.266 539.457 412.645 539.352 413.027 539.352 cv
413.316 539.352 413.574 539.387 413.809 539.453 cv
414.035 539.523 414.242 539.617 414.422 539.738 cv
414.598 539.859 414.746 540.004 414.875 540.172 cv
414.996 540.344 415.102 540.535 415.188 540.738 cv
415.418 540.488 415.641 540.273 415.852 540.094 cv
416.063 539.922 416.266 539.777 416.461 539.664 cv
416.656 539.559 416.844 539.48 417.027 539.426 cv
417.211 539.379 417.398 539.352 417.586 539.352 cv
418.039 539.352 418.418 539.434 418.723 539.59 cv
419.027 539.754 419.273 539.965 419.469 540.227 cv
419.656 540.492 419.793 540.801 419.875 541.156 cv
419.953 541.512 419.992 541.887 419.996 542.281 cv
cp
f
427.629 546.723 mo
427.625 546.785 427.605 546.832 427.566 546.863 cv
427.523 546.895 427.465 546.918 427.395 546.934 cv
427.316 546.949 427.211 546.957 427.074 546.957 cv
426.938 546.957 426.828 546.949 426.75 546.934 cv
426.664 546.918 426.605 546.895 426.574 546.863 cv
426.535 546.832 426.52 546.785 426.523 546.723 cv
426.523 546.023 li
426.215 546.352 425.871 546.605 425.496 546.785 cv
425.117 546.969 424.719 547.055 424.301 547.059 cv
423.926 547.055 423.594 547.008 423.297 546.914 cv
423 546.816 422.746 546.68 422.535 546.496 cv
422.324 546.316 422.16 546.094 422.043 545.828 cv
421.926 545.566 421.867 545.266 421.871 544.922 cv
421.867 544.531 421.945 544.187 422.109 543.895 cv
422.266 543.605 422.5 543.363 422.805 543.172 cv
423.105 542.98 423.473 542.836 423.91 542.738 cv
424.344 542.645 424.836 542.598 425.383 542.594 cv
426.352 542.594 li
426.352 542.047 li
426.348 541.777 426.32 541.539 426.266 541.332 cv
426.207 541.125 426.113 540.953 425.988 540.812 cv
425.855 540.676 425.691 540.57 425.492 540.5 cv
425.285 540.43 425.035 540.395 424.746 540.395 cv
424.426 540.395 424.141 540.434 423.891 540.508 cv
423.633 540.586 423.414 540.668 423.227 540.758 cv
423.039 540.852 422.879 540.937 422.754 541.008 cv
422.621 541.086 422.527 541.121 422.469 541.121 cv
422.426 541.121 422.391 541.113 422.359 541.09 cv
422.328 541.074 422.301 541.043 422.277 540.996 cv
422.254 540.957 422.234 540.902 422.227 540.836 cv
422.211 540.773 422.207 540.703 422.211 540.621 cv
422.207 540.496 422.215 540.391 422.238 540.312 cv
422.254 540.238 422.301 540.168 422.371 540.098 cv
422.441 540.031 422.563 539.953 422.734 539.863 cv
422.906 539.773 423.102 539.691 423.324 539.613 cv
423.547 539.543 423.793 539.48 424.059 539.426 cv
424.324 539.379 424.59 539.352 424.863 539.352 cv
425.363 539.352 425.793 539.41 426.145 539.523 cv
426.496 539.641 426.781 539.809 427.004 540.027 cv
427.219 540.25 427.379 540.523 427.48 540.848 cv
427.578 541.18 427.625 541.562 427.629 541.992 cv
cp
426.352 543.52 mo
425.25 543.52 li
424.895 543.523 424.59 543.555 424.332 543.609 cv
424.07 543.672 423.855 543.758 423.684 543.875 cv
423.512 543.992 423.387 544.133 423.309 544.297 cv
423.227 544.461 423.184 544.648 423.188 544.859 cv
423.184 545.227 423.301 545.52 423.531 545.73 cv
423.762 545.949 424.086 546.055 424.504 546.055 cv
424.84 546.055 425.152 545.969 425.441 545.797 cv
425.73 545.625 426.031 545.363 426.352 545.008 cv
cp
f
435.848 540.02 mo
435.844 540.203 435.82 540.336 435.773 540.414 cv
435.723 540.496 435.66 540.535 435.586 540.535 cv
434.578 540.535 li
434.758 540.723 434.887 540.93 434.961 541.156 cv
435.031 541.383 435.066 541.617 435.07 541.859 cv
435.066 542.266 435 542.625 434.875 542.937 cv
434.742 543.25 434.559 543.516 434.316 543.727 cv
434.074 543.945 433.785 544.109 433.457 544.223 cv
433.121 544.34 432.754 544.398 432.352 544.395 cv
432.063 544.398 431.789 544.359 431.535 544.281 cv
431.273 544.207 431.078 544.113 430.941 543.996 cv
430.848 544.094 430.77 544.199 430.711 544.316 cv
430.648 544.437 430.617 544.574 430.621 544.727 cv
430.617 544.91 430.703 545.062 430.875 545.18 cv
431.043 545.305 431.266 545.367 431.547 545.375 cv
433.379 545.453 li
433.727 545.465 434.043 545.512 434.336 545.598 cv
434.625 545.684 434.879 545.809 435.094 545.965 cv
435.305 546.125 435.473 546.316 435.594 546.547 cv
435.711 546.781 435.77 547.051 435.773 547.355 cv
435.77 547.676 435.703 547.98 435.57 548.273 cv
435.434 548.562 435.227 548.816 434.949 549.039 cv
434.668 549.258 434.313 549.434 433.883 549.562 cv
433.453 549.687 432.945 549.75 432.359 549.754 cv
431.789 549.75 431.305 549.703 430.91 549.609 cv
430.512 549.512 430.188 549.379 429.934 549.215 cv
429.68 549.047 429.496 548.852 429.383 548.621 cv
429.266 548.387 429.207 548.133 429.211 547.867 cv
429.207 547.695 429.227 547.531 429.273 547.371 cv
429.313 547.207 429.375 547.055 429.461 546.91 cv
429.543 546.766 429.652 546.629 429.781 546.492 cv
429.906 546.363 430.051 546.23 430.223 546.102 cv
429.965 545.973 429.777 545.809 429.656 545.609 cv
429.535 545.414 429.477 545.203 429.477 544.969 cv
429.477 544.656 429.539 544.371 429.668 544.121 cv
429.797 543.871 429.957 543.648 430.152 543.449 cv
429.988 543.258 429.863 543.043 429.77 542.801 cv
429.676 542.562 429.629 542.27 429.629 541.922 cv
429.629 541.527 429.695 541.168 429.832 540.848 cv
429.965 540.531 430.152 540.266 430.395 540.047 cv
430.633 539.832 430.918 539.664 431.254 539.543 cv
431.586 539.43 431.953 539.371 432.352 539.367 cv
432.563 539.371 432.762 539.383 432.945 539.402 cv
433.129 539.43 433.301 539.461 433.465 539.5 cv
435.586 539.5 li
435.672 539.504 435.738 539.547 435.781 539.629 cv
435.824 539.719 435.844 539.848 435.848 540.02 cv
cp
433.84 541.867 mo
433.836 541.395 433.703 541.023 433.445 540.75 cv
433.18 540.484 432.809 540.348 432.328 540.348 cv
432.074 540.348 431.855 540.391 431.676 540.473 cv
431.488 540.559 431.336 540.672 431.215 540.816 cv
431.094 540.965 431.004 541.133 430.945 541.32 cv
430.883 541.508 430.852 541.707 430.855 541.914 cv
430.852 542.379 430.984 542.742 431.246 543.008 cv
431.508 543.273 431.875 543.406 432.352 543.402 cv
432.602 543.406 432.82 543.367 433.012 543.281 cv
433.195 543.203 433.352 543.09 433.477 542.949 cv
433.598 542.809 433.688 542.645 433.75 542.453 cv
433.805 542.27 433.836 542.074 433.84 541.867 cv
cp
434.484 547.426 mo
434.48 547.121 434.355 546.891 434.113 546.727 cv
433.863 546.566 433.531 546.477 433.113 546.465 cv
431.297 546.402 li
431.129 546.535 430.992 546.66 430.891 546.773 cv
430.781 546.891 430.699 547 430.637 547.109 cv
430.574 547.215 430.531 547.32 430.508 547.426 cv
430.484 547.527 430.473 547.633 430.473 547.742 cv
430.473 548.078 430.641 548.332 430.984 548.512 cv
431.324 548.684 431.805 548.773 432.422 548.773 cv
432.809 548.773 433.133 548.734 433.398 548.66 cv
433.656 548.582 433.867 548.48 434.031 548.359 cv
434.188 548.23 434.305 548.09 434.379 547.93 cv
434.445 547.77 434.48 547.602 434.484 547.426 cv
cp
f
443.41 542.906 mo
443.406 543.109 443.355 543.25 443.258 543.336 cv
443.152 543.422 443.035 543.465 442.91 543.465 cv
438.293 543.465 li
438.289 543.855 438.328 544.207 438.41 544.52 cv
438.484 544.832 438.617 545.102 438.801 545.32 cv
438.98 545.547 439.215 545.719 439.512 545.836 cv
439.801 545.961 440.16 546.02 440.586 546.016 cv
440.918 546.02 441.215 545.992 441.477 545.934 cv
441.738 545.883 441.965 545.82 442.156 545.75 cv
442.344 545.684 442.5 545.625 442.625 545.566 cv
442.746 545.516 442.84 545.488 442.902 545.484 cv
442.938 545.488 442.969 545.496 443 545.512 cv
443.027 545.531 443.051 545.559 443.07 545.594 cv
443.082 545.633 443.094 545.684 443.105 545.746 cv
443.109 545.812 443.113 545.891 443.117 545.984 cv
443.113 546.055 443.109 546.113 443.109 546.16 cv
443.102 546.207 443.098 546.25 443.09 546.289 cv
443.082 546.328 443.066 546.363 443.051 546.395 cv
443.027 546.426 443.004 546.457 442.98 546.484 cv
442.949 546.516 442.867 546.562 442.727 546.625 cv
442.586 546.691 442.402 546.754 442.18 546.816 cv
441.953 546.879 441.695 546.934 441.402 546.984 cv
441.109 547.031 440.797 547.055 440.465 547.059 cv
439.887 547.055 439.379 546.977 438.949 546.816 cv
438.512 546.656 438.148 546.418 437.855 546.102 cv
437.555 545.785 437.332 545.391 437.184 544.91 cv
437.035 544.434 436.961 543.875 436.961 543.238 cv
436.961 542.641 437.035 542.102 437.191 541.617 cv
437.344 541.141 437.57 540.73 437.867 540.395 cv
438.16 540.059 438.516 539.801 438.93 539.621 cv
439.344 539.441 439.809 539.352 440.324 539.352 cv
440.875 539.352 441.344 539.441 441.73 539.617 cv
442.117 539.797 442.434 540.035 442.688 540.332 cv
442.934 540.633 443.117 540.984 443.234 541.383 cv
443.348 541.789 443.406 542.219 443.41 542.672 cv
cp
442.117 542.523 mo
442.133 541.848 441.98 541.316 441.664 540.934 cv
441.348 540.551 440.879 540.359 440.262 540.355 cv
439.938 540.359 439.656 540.418 439.418 540.535 cv
439.176 540.656 438.977 540.816 438.816 541.012 cv
438.652 541.211 438.527 541.441 438.441 541.703 cv
438.352 541.965 438.301 542.238 438.293 542.523 cv
cp
f
449.777 544.805 mo
449.773 545.168 449.707 545.488 449.578 545.766 cv
449.445 546.047 449.258 546.281 449.016 546.473 cv
448.77 546.668 448.477 546.812 448.141 546.91 cv
447.801 547.008 447.43 547.055 447.027 547.059 cv
446.773 547.055 446.535 547.035 446.313 547 cv
446.086 546.957 445.887 546.91 445.707 546.852 cv
445.527 546.793 445.375 546.73 445.25 546.664 cv
445.125 546.602 445.031 546.543 444.977 546.488 cv
444.918 546.437 444.879 546.367 444.855 546.27 cv
444.828 546.18 444.816 546.051 444.816 545.891 cv
444.816 545.793 444.82 545.711 444.832 545.641 cv
444.84 545.574 444.852 545.52 444.871 545.477 cv
444.883 545.437 444.906 545.406 444.934 545.387 cv
444.961 545.371 444.992 545.363 445.031 545.359 cv
445.086 545.363 445.172 545.398 445.285 545.465 cv
445.395 545.539 445.531 545.617 445.699 545.695 cv
445.859 545.781 446.051 545.855 446.277 545.926 cv
446.496 545.996 446.754 546.031 447.051 546.031 cv
447.266 546.031 447.465 546.008 447.645 545.961 cv
447.82 545.914 447.973 545.848 448.102 545.754 cv
448.23 545.668 448.332 545.551 448.402 545.406 cv
448.473 545.27 448.508 545.102 448.508 544.906 cv
448.508 544.711 448.457 544.547 448.355 544.41 cv
448.254 544.277 448.117 544.156 447.953 544.051 cv
447.785 543.949 447.602 543.859 447.395 543.773 cv
447.184 543.695 446.969 543.609 446.75 543.52 cv
446.531 543.434 446.316 543.332 446.105 543.219 cv
445.895 543.109 445.703 542.977 445.539 542.812 cv
445.367 542.656 445.234 542.461 445.137 542.234 cv
445.031 542.012 444.98 541.746 444.984 541.434 cv
444.98 541.16 445.035 540.895 445.145 540.641 cv
445.25 540.391 445.41 540.172 445.625 539.98 cv
445.836 539.793 446.102 539.641 446.422 539.523 cv
446.742 539.41 447.113 539.352 447.543 539.352 cv
447.727 539.352 447.914 539.367 448.102 539.398 cv
448.285 539.43 448.453 539.469 448.609 539.516 cv
448.758 539.562 448.887 539.613 448.996 539.668 cv
449.098 539.723 449.18 539.773 449.238 539.812 cv
449.289 539.859 449.324 539.895 449.348 539.922 cv
449.363 539.953 449.379 539.988 449.387 540.023 cv
449.395 540.066 449.402 540.113 449.41 540.168 cv
449.418 540.227 449.422 540.297 449.422 540.379 cv
449.422 540.469 449.418 540.547 449.41 540.609 cv
449.402 540.68 449.387 540.73 449.371 540.77 cv
449.348 540.812 449.328 540.844 449.305 540.859 cv
449.277 540.879 449.246 540.887 449.219 540.887 cv
449.168 540.887 449.102 540.859 449.016 540.801 cv
448.926 540.746 448.813 540.684 448.672 540.617 cv
448.531 540.555 448.363 540.496 448.176 540.434 cv
447.984 540.379 447.77 540.348 447.527 540.348 cv
447.305 540.348 447.113 540.375 446.949 540.422 cv
446.781 540.477 446.645 540.547 446.539 540.633 cv
446.434 540.727 446.352 540.832 446.301 540.957 cv
446.242 541.082 446.215 541.219 446.219 541.363 cv
446.215 541.566 446.266 541.734 446.371 541.871 cv
446.473 542.012 446.609 542.133 446.777 542.234 cv
446.941 542.34 447.133 542.434 447.348 542.516 cv
447.559 542.602 447.773 542.687 447.996 542.773 cv
448.215 542.863 448.434 542.965 448.652 543.07 cv
448.867 543.18 449.059 543.309 449.227 543.465 cv
449.391 543.621 449.523 543.809 449.625 544.027 cv
449.723 544.246 449.773 544.508 449.777 544.805 cv
cp
f
234.043 16.379 mo
234.039 16.531 234.035 16.656 234.023 16.754 cv
234.008 16.859 233.988 16.941 233.965 17 cv
233.941 17.066 233.91 17.113 233.871 17.137 cv
233.832 17.168 233.789 17.18 233.742 17.18 cv
228.676 17.18 li
228.5 17.18 228.355 17.129 228.242 17.027 cv
228.121 16.926 228.063 16.762 228.066 16.531 cv
228.066 7.742 li
228.063 7.51599 228.121 7.35199 228.242 7.24597 cv
228.355 7.14801 228.5 7.09802 228.676 7.09399 cv
233.711 7.09399 li
233.754 7.09802 233.797 7.10901 233.836 7.133 cv
233.871 7.15997 233.902 7.20697 233.93 7.27002 cv
233.953 7.34003 233.969 7.422 233.984 7.52002 cv
233.992 7.625 234 7.75403 234.004 7.90601 cv
234 8.05499 233.992 8.17999 233.984 8.27698 cv
233.969 8.383 233.953 8.46503 233.93 8.52301 cv
233.902 8.586 233.871 8.62903 233.836 8.65601 cv
233.797 8.68701 233.754 8.703 233.711 8.69897 cv
230.109 8.69897 li
230.109 11.164 li
233.156 11.164 li
233.203 11.168 233.246 11.184 233.285 11.207 cv
233.324 11.238 233.355 11.281 233.383 11.34 cv
233.406 11.402 233.426 11.484 233.441 11.582 cv
233.453 11.684 233.461 11.805 233.461 11.949 cv
233.461 12.102 233.453 12.227 233.441 12.324 cv
233.426 12.426 233.406 12.504 233.383 12.562 cv
233.355 12.625 233.324 12.668 233.285 12.691 cv
233.246 12.719 233.203 12.734 233.156 12.73 cv
230.109 12.73 li
230.109 15.574 li
233.742 15.574 li
233.789 15.574 233.832 15.59 233.871 15.617 cv
233.91 15.648 233.941 15.695 233.965 15.754 cv
233.988 15.82 234.008 15.902 234.023 16 cv
234.035 16.105 234.039 16.23 234.043 16.379 cv
cp
f
242.379 16.914 mo
242.375 16.969 242.359 17.012 242.332 17.051 cv
242.297 17.09 242.246 17.125 242.176 17.148 cv
242.102 17.176 242 17.191 241.875 17.207 cv
241.746 17.219 241.59 17.227 241.406 17.227 cv
241.211 17.227 241.051 17.219 240.926 17.207 cv
240.797 17.191 240.695 17.176 240.625 17.148 cv
240.547 17.125 240.496 17.09 240.469 17.051 cv
240.434 17.012 240.418 16.969 240.422 16.914 cv
240.422 12.949 li
240.418 12.613 240.395 12.348 240.348 12.152 cv
240.297 11.961 240.223 11.797 240.133 11.66 cv
240.039 11.523 239.922 11.418 239.773 11.34 cv
239.625 11.266 239.449 11.227 239.254 11.227 cv
239 11.227 238.75 11.32 238.496 11.5 cv
238.242 11.684 237.977 11.945 237.703 12.293 cv
237.703 16.914 li
237.699 16.969 237.684 17.012 237.656 17.051 cv
237.621 17.09 237.566 17.125 237.496 17.148 cv
237.418 17.176 237.32 17.191 237.195 17.207 cv
237.07 17.219 236.91 17.227 236.723 17.227 cv
236.527 17.227 236.371 17.219 236.246 17.207 cv
236.121 17.191 236.02 17.176 235.945 17.148 cv
235.867 17.125 235.813 17.09 235.785 17.051 cv
235.75 17.012 235.734 16.969 235.738 16.914 cv
235.738 9.96503 li
235.734 9.91803 235.75 9.87097 235.777 9.828 cv
235.801 9.79303 235.848 9.76202 235.918 9.72998 cv
235.984 9.70697 236.07 9.68701 236.18 9.672 cv
236.285 9.664 236.418 9.65601 236.582 9.65198 cv
236.746 9.65601 236.883 9.664 236.992 9.672 cv
237.098 9.68701 237.184 9.70697 237.246 9.72998 cv
237.305 9.76202 237.348 9.79303 237.375 9.828 cv
237.398 9.87097 237.41 9.91803 237.414 9.96503 cv
237.414 10.766 li
237.797 10.355 238.188 10.043 238.586 9.83197 cv
238.98 9.625 239.398 9.52301 239.832 9.52002 cv
240.301 9.52301 240.699 9.60199 241.027 9.75403 cv
241.352 9.914 241.613 10.125 241.813 10.391 cv
242.012 10.66 242.156 10.973 242.246 11.328 cv
242.332 11.687 242.375 12.117 242.379 12.621 cv
cp
f
250.73 13.238 mo
250.727 13.477 250.676 13.652 250.57 13.766 cv
250.461 13.883 250.313 13.941 250.133 13.937 cv
245.898 13.937 li
245.895 14.238 245.93 14.508 246.004 14.746 cv
246.07 14.988 246.184 15.191 246.34 15.359 cv
246.492 15.531 246.688 15.66 246.93 15.746 cv
247.168 15.836 247.457 15.879 247.801 15.879 cv
248.141 15.879 248.441 15.855 248.703 15.805 cv
248.961 15.758 249.188 15.703 249.379 15.641 cv
249.566 15.582 249.723 15.527 249.852 15.477 cv
249.973 15.43 250.074 15.406 250.156 15.402 cv
250.199 15.406 250.238 15.414 250.273 15.43 cv
250.301 15.449 250.328 15.48 250.348 15.527 cv
250.367 15.574 250.379 15.641 250.391 15.727 cv
250.395 15.812 250.398 15.922 250.402 16.051 cv
250.398 16.168 250.398 16.266 250.395 16.344 cv
250.387 16.426 250.379 16.492 250.371 16.547 cv
250.359 16.605 250.344 16.656 250.324 16.691 cv
250.305 16.734 250.277 16.77 250.246 16.805 cv
250.211 16.844 250.117 16.895 249.969 16.953 cv
249.813 17.02 249.621 17.082 249.391 17.137 cv
249.152 17.199 248.883 17.246 248.586 17.293 cv
248.281 17.332 247.961 17.355 247.621 17.359 cv
247 17.355 246.457 17.281 245.996 17.125 cv
245.527 16.973 245.141 16.734 244.832 16.418 cv
244.516 16.102 244.281 15.703 244.133 15.219 cv
243.977 14.738 243.902 14.172 243.906 13.516 cv
243.902 12.902 243.98 12.344 244.145 11.848 cv
244.301 11.352 244.535 10.934 244.848 10.586 cv
245.152 10.242 245.527 9.97699 245.965 9.79303 cv
246.402 9.61298 246.895 9.52301 247.449 9.52002 cv
248.027 9.52301 248.527 9.60901 248.941 9.77698 cv
249.355 9.953 249.691 10.191 249.957 10.492 cv
250.219 10.797 250.414 11.156 250.543 11.57 cv
250.664 11.988 250.727 12.437 250.73 12.926 cv
cp
248.828 12.676 mo
248.84 12.125 248.73 11.691 248.496 11.379 cv
248.262 11.066 247.895 10.91 247.402 10.906 cv
247.152 10.91 246.938 10.957 246.754 11.047 cv
246.566 11.145 246.414 11.27 246.293 11.426 cv
246.168 11.586 246.074 11.773 246.012 11.988 cv
245.945 12.203 245.906 12.434 245.898 12.676 cv
cp
f
256.805 10.609 mo
256.805 10.801 256.797 10.953 256.789 11.07 cv
256.773 11.191 256.758 11.285 256.742 11.352 cv
256.719 11.422 256.691 11.469 256.66 11.492 cv
256.621 11.52 256.578 11.531 256.531 11.531 cv
256.484 11.531 256.438 11.523 256.391 11.504 cv
256.336 11.488 256.277 11.469 256.215 11.445 cv
256.145 11.426 256.074 11.406 256 11.387 cv
255.918 11.371 255.832 11.363 255.742 11.359 cv
255.629 11.363 255.52 11.383 255.414 11.426 cv
255.305 11.473 255.191 11.543 255.078 11.633 cv
254.957 11.727 254.836 11.852 254.711 12.004 cv
254.582 12.164 254.445 12.355 254.301 12.582 cv
254.301 16.914 li
254.297 16.969 254.281 17.012 254.254 17.051 cv
254.219 17.09 254.164 17.125 254.094 17.148 cv
254.016 17.176 253.918 17.191 253.793 17.207 cv
253.668 17.219 253.508 17.227 253.32 17.227 cv
253.125 17.227 252.969 17.219 252.844 17.207 cv
252.719 17.191 252.617 17.176 252.543 17.148 cv
252.465 17.125 252.41 17.09 252.383 17.051 cv
252.348 17.012 252.332 16.969 252.336 16.914 cv
252.336 9.96503 li
252.332 9.91803 252.348 9.87097 252.375 9.828 cv
252.398 9.79303 252.445 9.76202 252.516 9.72998 cv
252.582 9.70697 252.668 9.68701 252.777 9.672 cv
252.883 9.664 253.016 9.65601 253.18 9.65198 cv
253.344 9.65601 253.48 9.664 253.59 9.672 cv
253.695 9.68701 253.781 9.70697 253.844 9.72998 cv
253.902 9.76202 253.945 9.79303 253.973 9.828 cv
253.996 9.87097 254.008 9.91803 254.012 9.96503 cv
254.012 10.828 li
254.191 10.57 254.363 10.359 254.527 10.187 cv
254.684 10.023 254.84 9.88702 254.988 9.78497 cv
255.133 9.68701 255.277 9.62097 255.422 9.578 cv
255.566 9.54303 255.711 9.52301 255.859 9.52002 cv
255.926 9.52301 256 9.52698 256.078 9.53101 cv
256.156 9.54303 256.234 9.55499 256.32 9.57001 cv
256.398 9.59003 256.473 9.60901 256.539 9.633 cv
256.598 9.65601 256.645 9.68402 256.676 9.70697 cv
256.703 9.73798 256.723 9.76599 256.738 9.79303 cv
256.75 9.828 256.762 9.87097 256.773 9.922 cv
256.781 9.97998 256.789 10.062 256.797 10.168 cv
256.801 10.277 256.805 10.426 256.805 10.609 cv
cp
f
263.98 10.445 mo
263.977 10.699 263.949 10.883 263.895 11 cv
263.836 11.121 263.766 11.18 263.688 11.18 cv
262.867 11.18 li
262.98 11.305 263.063 11.449 263.113 11.605 cv
263.16 11.766 263.184 11.93 263.188 12.098 cv
263.184 12.508 263.117 12.867 262.984 13.18 cv
262.848 13.496 262.652 13.762 262.402 13.973 cv
262.148 14.191 261.848 14.355 261.492 14.465 cv
261.133 14.582 260.734 14.637 260.305 14.633 cv
260.078 14.637 259.867 14.609 259.664 14.551 cv
259.461 14.5 259.305 14.437 259.195 14.359 cv
259.133 14.43 259.074 14.508 259.027 14.602 cv
258.977 14.695 258.953 14.801 258.957 14.91 cv
258.953 15.066 259.02 15.187 259.152 15.281 cv
259.281 15.379 259.469 15.434 259.711 15.441 cv
261.402 15.504 li
261.797 15.52 262.148 15.578 262.457 15.672 cv
262.766 15.773 263.027 15.906 263.238 16.078 cv
263.449 16.254 263.609 16.465 263.719 16.707 cv
263.828 16.953 263.883 17.227 263.887 17.539 cv
263.883 17.875 263.809 18.199 263.66 18.508 cv
263.512 18.809 263.285 19.07 262.984 19.297 cv
262.68 19.516 262.301 19.695 261.848 19.828 cv
261.391 19.957 260.859 20.02 260.258 20.023 cv
259.66 20.02 259.156 19.973 258.738 19.883 cv
258.32 19.785 257.977 19.656 257.711 19.492 cv
257.441 19.324 257.246 19.125 257.129 18.898 cv
257.004 18.664 256.945 18.41 256.945 18.137 cv
256.945 17.965 256.965 17.805 257.012 17.648 cv
257.051 17.492 257.117 17.34 257.207 17.199 cv
257.289 17.055 257.395 16.922 257.52 16.789 cv
257.645 16.66 257.785 16.535 257.949 16.414 cv
257.723 16.301 257.551 16.141 257.43 15.93 cv
257.309 15.727 257.25 15.5 257.25 15.254 cv
257.25 14.953 257.316 14.676 257.457 14.418 cv
257.594 14.168 257.777 13.937 258.004 13.734 cv
257.82 13.555 257.676 13.34 257.566 13.082 cv
257.457 12.832 257.402 12.512 257.406 12.129 cv
257.402 11.727 257.473 11.367 257.617 11.043 cv
257.758 10.727 257.957 10.457 258.215 10.234 cv
258.469 10.016 258.773 9.84399 259.125 9.72699 cv
259.477 9.60901 259.867 9.55103 260.297 9.55103 cv
260.516 9.55103 260.723 9.56598 260.922 9.59003 cv
261.121 9.62097 261.309 9.65601 261.48 9.69897 cv
263.688 9.69897 li
263.77 9.703 263.84 9.76202 263.898 9.87097 cv
263.949 9.98798 263.977 10.18 263.98 10.445 cv
cp
261.465 12.09 mo
261.461 11.719 261.359 11.43 261.152 11.219 cv
260.941 11.016 260.648 10.91 260.273 10.906 cv
260.078 10.91 259.906 10.941 259.766 11.004 cv
259.617 11.07 259.496 11.16 259.402 11.27 cv
259.301 11.383 259.23 11.512 259.188 11.66 cv
259.137 11.809 259.113 11.965 259.117 12.121 cv
259.113 12.48 259.219 12.758 259.43 12.961 cv
259.637 13.168 259.926 13.273 260.297 13.27 cv
260.492 13.273 260.66 13.242 260.809 13.176 cv
260.949 13.117 261.07 13.031 261.172 12.918 cv
261.266 12.812 261.34 12.684 261.391 12.539 cv
261.438 12.398 261.461 12.25 261.465 12.09 cv
cp
261.926 17.641 mo
261.926 17.402 261.832 17.227 261.645 17.102 cv
261.457 16.98 261.199 16.91 260.871 16.898 cv
259.477 16.859 li
259.34 16.961 259.23 17.055 259.152 17.145 cv
259.07 17.234 259.008 17.32 258.961 17.406 cv
258.91 17.488 258.875 17.57 258.863 17.648 cv
258.844 17.727 258.836 17.805 258.84 17.891 cv
258.836 18.145 258.969 18.344 259.23 18.48 cv
259.492 18.613 259.863 18.68 260.344 18.684 cv
260.637 18.68 260.883 18.648 261.09 18.594 cv
261.289 18.531 261.453 18.453 261.582 18.355 cv
261.703 18.254 261.793 18.145 261.848 18.023 cv
261.898 17.902 261.926 17.773 261.926 17.641 cv
cp
f
269.313 17.18 mo
268.469 19.641 li
268.418 19.77 268.293 19.863 268.086 19.922 cv
267.879 19.977 267.574 20.004 267.176 20.008 cv
266.965 20.004 266.797 19.996 266.676 19.98 cv
266.551 19.961 266.461 19.93 266.398 19.891 cv
266.336 19.848 266.301 19.797 266.297 19.734 cv
266.289 19.672 266.305 19.598 266.344 19.512 cv
267.27 17.18 li
267.199 17.148 267.137 17.102 267.086 17.035 cv
267.027 16.973 266.988 16.902 266.965 16.828 cv
264.574 10.437 li
264.504 10.258 264.469 10.121 264.473 10.023 cv
264.469 9.92999 264.5 9.85199 264.566 9.797 cv
264.625 9.742 264.73 9.70697 264.879 9.68402 cv
265.023 9.66803 265.219 9.65601 265.469 9.65198 cv
265.688 9.65601 265.867 9.65997 266 9.664 cv
266.129 9.67603 266.23 9.69501 266.305 9.72302 cv
266.375 9.758 266.43 9.80499 266.469 9.867 cv
266.504 9.93402 266.539 10.027 266.578 10.145 cv
268.211 14.797 li
268.234 14.797 li
269.734 10.051 li
269.758 9.91803 269.797 9.828 269.852 9.78101 cv
269.898 9.73798 269.98 9.70697 270.098 9.68402 cv
270.207 9.66803 270.41 9.65601 270.699 9.65198 cv
270.922 9.65601 271.105 9.66803 271.254 9.68402 cv
271.398 9.70697 271.508 9.74597 271.582 9.80103 cv
271.648 9.86298 271.684 9.93701 271.688 10.031 cv
271.684 10.125 271.664 10.238 271.625 10.367 cv
cp
f
283.754 15.652 mo
283.754 15.785 283.75 15.895 283.742 15.984 cv
283.734 16.078 283.723 16.156 283.707 16.219 cv
283.691 16.285 283.668 16.344 283.645 16.387 cv
283.613 16.434 283.574 16.484 283.52 16.543 cv
283.461 16.605 283.348 16.684 283.188 16.773 cv
283.02 16.871 282.82 16.961 282.586 17.043 cv
282.348 17.133 282.078 17.199 281.777 17.258 cv
281.469 17.312 281.141 17.344 280.793 17.344 cv
280.098 17.344 279.473 17.238 278.918 17.023 cv
278.359 16.812 277.887 16.496 277.5 16.07 cv
277.109 15.648 276.813 15.117 276.605 14.484 cv
276.398 13.852 276.293 13.113 276.297 12.27 cv
276.293 11.414 276.406 10.656 276.637 9.98798 cv
276.863 9.32397 277.184 8.76599 277.594 8.31201 cv
278.004 7.86298 278.496 7.52002 279.07 7.28497 cv
279.645 7.05499 280.277 6.93701 280.973 6.93402 cv
281.246 6.93701 281.516 6.961 281.781 7.00403 cv
282.039 7.05103 282.281 7.10901 282.5 7.18402 cv
282.719 7.26202 282.918 7.35199 283.098 7.44501 cv
283.273 7.547 283.395 7.62903 283.469 7.69897 cv
283.535 7.77002 283.586 7.828 283.613 7.875 cv
283.637 7.922 283.656 7.98401 283.676 8.05499 cv
283.688 8.133 283.699 8.21899 283.711 8.31201 cv
283.715 8.414 283.719 8.53497 283.723 8.67603 cv
283.719 8.836 283.715 8.96899 283.707 9.07397 cv
283.695 9.18701 283.676 9.27301 283.652 9.34003 cv
283.625 9.40997 283.594 9.461 283.559 9.48798 cv
283.52 9.52301 283.477 9.539 283.434 9.53497 cv
283.352 9.539 283.254 9.492 283.137 9.39801 cv
283.016 9.30902 282.859 9.20697 282.672 9.09399 cv
282.48 8.98401 282.258 8.883 281.996 8.789 cv
281.73 8.69897 281.418 8.65601 281.059 8.65198 cv
280.656 8.65601 280.297 8.73798 279.984 8.89801 cv
279.668 9.06598 279.402 9.30103 279.184 9.60199 cv
278.961 9.90997 278.793 10.277 278.68 10.707 cv
278.563 11.141 278.504 11.625 278.508 12.16 cv
278.504 12.758 278.566 13.273 278.691 13.703 cv
278.813 14.141 278.984 14.496 279.215 14.773 cv
279.438 15.055 279.711 15.262 280.031 15.398 cv
280.348 15.539 280.707 15.609 281.113 15.605 cv
281.473 15.609 281.789 15.566 282.055 15.477 cv
282.32 15.395 282.547 15.301 282.734 15.191 cv
282.922 15.09 283.078 14.996 283.203 14.914 cv
283.324 14.832 283.418 14.789 283.488 14.789 cv
283.539 14.789 283.582 14.801 283.613 14.82 cv
283.645 14.84 283.668 14.879 283.691 14.941 cv
283.707 15.004 283.723 15.094 283.738 15.203 cv
283.746 15.32 283.754 15.469 283.754 15.652 cv
cp
f
292.133 13.367 mo
292.129 13.965 292.051 14.508 291.898 14.992 cv
291.738 15.484 291.504 15.902 291.188 16.254 cv
290.871 16.605 290.473 16.879 289.996 17.07 cv
289.516 17.262 288.957 17.355 288.32 17.359 cv
287.699 17.355 287.16 17.273 286.707 17.102 cv
286.246 16.934 285.867 16.684 285.57 16.355 cv
285.266 16.031 285.043 15.629 284.898 15.148 cv
284.754 14.672 284.684 14.125 284.684 13.508 cv
284.684 12.918 284.762 12.379 284.918 11.887 cv
285.074 11.398 285.313 10.977 285.633 10.625 cv
285.949 10.277 286.344 10.004 286.82 9.80902 cv
287.293 9.617 287.852 9.52301 288.492 9.52002 cv
289.117 9.52301 289.656 9.60498 290.113 9.77301 cv
290.57 9.94501 290.949 10.195 291.246 10.52 cv
291.543 10.848 291.766 11.25 291.914 11.727 cv
292.059 12.207 292.129 12.754 292.133 13.367 cv
cp
290.113 13.445 mo
290.109 13.109 290.082 12.793 290.031 12.5 cv
289.973 12.215 289.879 11.965 289.754 11.75 cv
289.621 11.539 289.449 11.371 289.238 11.25 cv
289.02 11.133 288.75 11.074 288.422 11.07 cv
288.133 11.074 287.879 11.129 287.66 11.23 cv
287.441 11.34 287.262 11.496 287.121 11.699 cv
286.98 11.906 286.875 12.152 286.805 12.437 cv
286.734 12.73 286.699 13.059 286.699 13.422 cv
286.699 13.77 286.727 14.086 286.785 14.371 cv
286.84 14.664 286.934 14.914 287.063 15.125 cv
287.188 15.34 287.359 15.504 287.582 15.617 cv
287.797 15.738 288.066 15.797 288.391 15.793 cv
288.684 15.797 288.941 15.742 289.164 15.633 cv
289.379 15.527 289.559 15.375 289.699 15.168 cv
289.84 14.969 289.941 14.723 290.012 14.434 cv
290.074 14.148 290.109 13.82 290.113 13.445 cv
cp
f
300.332 16.914 mo
300.328 16.969 300.313 17.012 300.285 17.051 cv
300.25 17.09 300.199 17.125 300.129 17.148 cv
300.055 17.176 299.953 17.191 299.828 17.207 cv
299.699 17.219 299.543 17.227 299.359 17.227 cv
299.164 17.227 299.004 17.219 298.879 17.207 cv
298.75 17.191 298.648 17.176 298.578 17.148 cv
298.5 17.125 298.449 17.09 298.422 17.051 cv
298.387 17.012 298.371 16.969 298.375 16.914 cv
298.375 12.949 li
298.371 12.613 298.348 12.348 298.301 12.152 cv
298.25 11.961 298.176 11.797 298.086 11.66 cv
297.992 11.523 297.875 11.418 297.727 11.34 cv
297.578 11.266 297.402 11.227 297.207 11.227 cv
296.953 11.227 296.703 11.32 296.449 11.5 cv
296.195 11.684 295.93 11.945 295.656 12.293 cv
295.656 16.914 li
295.652 16.969 295.637 17.012 295.609 17.051 cv
295.574 17.09 295.52 17.125 295.449 17.148 cv
295.371 17.176 295.273 17.191 295.148 17.207 cv
295.023 17.219 294.863 17.227 294.676 17.227 cv
294.48 17.227 294.324 17.219 294.199 17.207 cv
294.074 17.191 293.973 17.176 293.898 17.148 cv
293.82 17.125 293.766 17.09 293.738 17.051 cv
293.703 17.012 293.688 16.969 293.691 16.914 cv
293.691 9.96503 li
293.688 9.91803 293.703 9.87097 293.73 9.828 cv
293.754 9.79303 293.801 9.76202 293.871 9.72998 cv
293.938 9.70697 294.023 9.68701 294.133 9.672 cv
294.238 9.664 294.371 9.65601 294.535 9.65198 cv
294.699 9.65601 294.836 9.664 294.945 9.672 cv
295.051 9.68701 295.137 9.70697 295.199 9.72998 cv
295.258 9.76202 295.301 9.79303 295.328 9.828 cv
295.352 9.87097 295.363 9.91803 295.367 9.96503 cv
295.367 10.766 li
295.75 10.355 296.141 10.043 296.539 9.83197 cv
296.934 9.625 297.352 9.52301 297.785 9.52002 cv
298.254 9.52301 298.652 9.60199 298.98 9.75403 cv
299.305 9.914 299.566 10.125 299.766 10.391 cv
299.965 10.66 300.109 10.973 300.199 11.328 cv
300.285 11.687 300.328 12.117 300.332 12.621 cv
cp
f
307.156 14.949 mo
307.152 15.348 307.078 15.695 306.934 15.996 cv
306.785 16.297 306.578 16.551 306.309 16.75 cv
306.035 16.957 305.715 17.105 305.348 17.207 cv
304.98 17.305 304.578 17.355 304.148 17.359 cv
303.883 17.355 303.637 17.336 303.402 17.301 cv
303.168 17.258 302.957 17.211 302.77 17.152 cv
302.582 17.094 302.426 17.031 302.301 16.969 cv
302.176 16.906 302.082 16.848 302.027 16.793 cv
301.969 16.738 301.926 16.656 301.898 16.539 cv
301.863 16.426 301.848 16.25 301.852 16.02 cv
301.848 15.871 301.855 15.75 301.867 15.656 cv
301.875 15.566 301.891 15.496 301.914 15.437 cv
301.934 15.387 301.957 15.348 301.992 15.328 cv
302.02 15.312 302.059 15.305 302.105 15.301 cv
302.16 15.305 302.246 15.336 302.359 15.398 cv
302.469 15.465 302.605 15.539 302.777 15.613 cv
302.941 15.695 303.137 15.766 303.355 15.832 cv
303.574 15.902 303.824 15.937 304.109 15.934 cv
304.285 15.937 304.441 15.918 304.582 15.879 cv
304.715 15.844 304.836 15.793 304.941 15.723 cv
305.039 15.656 305.113 15.57 305.168 15.465 cv
305.215 15.363 305.242 15.242 305.246 15.105 cv
305.242 14.949 305.195 14.816 305.102 14.707 cv
305.008 14.598 304.879 14.5 304.723 14.414 cv
304.559 14.332 304.379 14.254 304.184 14.18 cv
303.98 14.109 303.777 14.031 303.566 13.937 cv
303.355 13.852 303.148 13.75 302.953 13.633 cv
302.75 13.523 302.57 13.383 302.414 13.215 cv
302.25 13.051 302.125 12.852 302.031 12.613 cv
301.938 12.383 301.891 12.102 301.891 11.77 cv
301.891 11.441 301.953 11.137 302.082 10.855 cv
302.211 10.582 302.398 10.344 302.645 10.145 cv
302.887 9.94897 303.184 9.797 303.535 9.68402 cv
303.883 9.578 304.277 9.52301 304.719 9.52002 cv
304.934 9.52301 305.145 9.539 305.352 9.56598 cv
305.555 9.60199 305.742 9.64099 305.91 9.68402 cv
306.074 9.73401 306.215 9.78497 306.332 9.836 cv
306.445 9.89502 306.527 9.94098 306.578 9.97699 cv
306.625 10.02 306.66 10.059 306.684 10.094 cv
306.703 10.137 306.715 10.184 306.727 10.234 cv
306.734 10.289 306.746 10.355 306.754 10.434 cv
306.762 10.52 306.766 10.617 306.766 10.734 cv
306.766 10.875 306.762 10.992 306.754 11.078 cv
306.746 11.172 306.73 11.242 306.715 11.289 cv
306.695 11.344 306.672 11.379 306.645 11.395 cv
306.609 11.418 306.574 11.426 306.535 11.422 cv
306.484 11.426 306.41 11.398 306.316 11.34 cv
306.215 11.289 306.094 11.23 305.945 11.164 cv
305.797 11.105 305.625 11.047 305.43 10.988 cv
305.234 10.937 305.012 10.91 304.766 10.906 cv
304.586 10.91 304.434 10.93 304.305 10.961 cv
304.172 11 304.063 11.051 303.984 11.117 cv
303.898 11.187 303.836 11.266 303.797 11.355 cv
303.75 11.449 303.73 11.547 303.734 11.648 cv
303.73 11.809 303.781 11.945 303.883 12.051 cv
303.98 12.164 304.109 12.258 304.273 12.34 cv
304.434 12.426 304.617 12.504 304.824 12.574 cv
305.027 12.648 305.234 12.73 305.445 12.812 cv
305.652 12.902 305.859 13 306.07 13.113 cv
306.273 13.227 306.457 13.367 306.617 13.531 cv
306.777 13.699 306.906 13.898 307.008 14.129 cv
307.102 14.363 307.152 14.637 307.156 14.949 cv
cp
f
315.223 16.914 mo
315.219 16.969 315.207 17.012 315.184 17.051 cv
315.156 17.09 315.109 17.125 315.047 17.148 cv
314.98 17.176 314.895 17.191 314.789 17.207 cv
314.684 17.219 314.551 17.227 314.391 17.227 cv
314.215 17.227 314.074 17.219 313.973 17.207 cv
313.863 17.191 313.781 17.176 313.719 17.148 cv
313.656 17.125 313.609 17.09 313.586 17.051 cv
313.555 17.012 313.543 16.969 313.547 16.914 cv
313.547 16.113 li
313.16 16.527 312.77 16.84 312.375 17.047 cv
311.973 17.254 311.563 17.355 311.141 17.359 cv
310.66 17.355 310.258 17.281 309.934 17.125 cv
309.609 16.973 309.348 16.758 309.148 16.488 cv
308.945 16.219 308.801 15.906 308.719 15.547 cv
308.629 15.191 308.586 14.75 308.59 14.219 cv
308.59 9.96503 li
308.586 9.91803 308.602 9.87097 308.633 9.828 cv
308.66 9.79303 308.711 9.76202 308.789 9.72998 cv
308.863 9.70697 308.965 9.68701 309.094 9.672 cv
309.219 9.664 309.375 9.65601 309.566 9.65198 cv
309.754 9.65601 309.914 9.664 310.039 9.672 cv
310.164 9.68701 310.262 9.70697 310.34 9.72998 cv
310.41 9.76202 310.465 9.79303 310.5 9.828 cv
310.527 9.87097 310.543 9.91803 310.547 9.96503 cv
310.547 13.891 li
310.543 14.258 310.566 14.535 310.617 14.727 cv
310.66 14.918 310.73 15.082 310.832 15.219 cv
310.926 15.359 311.051 15.465 311.199 15.539 cv
311.348 15.617 311.52 15.656 311.715 15.652 cv
311.965 15.656 312.215 15.566 312.469 15.379 cv
312.719 15.199 312.988 14.934 313.273 14.586 cv
313.273 9.96503 li
313.273 9.91803 313.285 9.87097 313.316 9.828 cv
313.34 9.79303 313.395 9.76202 313.473 9.72998 cv
313.547 9.70697 313.645 9.68701 313.773 9.672 cv
313.895 9.664 314.055 9.65601 314.25 9.65198 cv
314.441 9.65601 314.598 9.664 314.723 9.672 cv
314.844 9.68701 314.945 9.70697 315.02 9.72998 cv
315.09 9.76202 315.141 9.79303 315.176 9.828 cv
315.203 9.87097 315.219 9.91803 315.223 9.96503 cv
cp
f
328.16 16.914 mo
328.156 16.969 328.141 17.012 328.113 17.051 cv
328.078 17.09 328.027 17.125 327.957 17.148 cv
327.883 17.176 327.781 17.191 327.66 17.207 cv
327.535 17.219 327.379 17.227 327.188 17.227 cv
326.988 17.227 326.828 17.219 326.703 17.207 cv
326.578 17.191 326.477 17.176 326.402 17.148 cv
326.324 17.125 326.273 17.09 326.246 17.051 cv
326.219 17.012 326.203 16.969 326.207 16.914 cv
326.207 12.793 li
326.203 12.562 326.184 12.348 326.141 12.152 cv
326.094 11.961 326.023 11.797 325.938 11.66 cv
325.844 11.523 325.73 11.418 325.594 11.34 cv
325.453 11.266 325.289 11.227 325.098 11.227 cv
324.863 11.227 324.625 11.32 324.387 11.5 cv
324.148 11.684 323.891 11.945 323.609 12.293 cv
323.609 16.914 li
323.609 16.969 323.594 17.012 323.563 17.051 cv
323.531 17.09 323.477 17.125 323.402 17.148 cv
323.324 17.176 323.223 17.191 323.102 17.207 cv
322.977 17.219 322.824 17.227 322.637 17.227 cv
322.441 17.227 322.281 17.219 322.16 17.207 cv
322.031 17.191 321.93 17.176 321.859 17.148 cv
321.781 17.125 321.73 17.09 321.699 17.051 cv
321.668 17.012 321.652 16.969 321.652 16.914 cv
321.652 12.793 li
321.652 12.562 321.629 12.348 321.586 12.152 cv
321.543 11.961 321.477 11.797 321.391 11.66 cv
321.297 11.523 321.184 11.418 321.047 11.34 cv
320.902 11.266 320.738 11.227 320.555 11.227 cv
320.313 11.227 320.074 11.32 319.836 11.5 cv
319.598 11.684 319.34 11.945 319.066 12.293 cv
319.066 16.914 li
319.063 16.969 319.047 17.012 319.02 17.051 cv
318.984 17.09 318.93 17.125 318.859 17.148 cv
318.781 17.176 318.684 17.191 318.559 17.207 cv
318.434 17.219 318.273 17.227 318.086 17.227 cv
317.891 17.227 317.734 17.219 317.609 17.207 cv
317.484 17.191 317.383 17.176 317.309 17.148 cv
317.23 17.125 317.176 17.09 317.148 17.051 cv
317.113 17.012 317.098 16.969 317.102 16.914 cv
317.102 9.96503 li
317.098 9.91803 317.113 9.87097 317.141 9.828 cv
317.164 9.79303 317.211 9.76202 317.281 9.72998 cv
317.348 9.70697 317.434 9.68701 317.543 9.672 cv
317.648 9.664 317.781 9.65601 317.945 9.65198 cv
318.109 9.65601 318.246 9.664 318.355 9.672 cv
318.461 9.68701 318.547 9.70697 318.609 9.72998 cv
318.668 9.76202 318.711 9.79303 318.738 9.828 cv
318.762 9.87097 318.773 9.91803 318.777 9.96503 cv
318.777 10.766 li
319.16 10.355 319.543 10.043 319.926 9.83197 cv
320.305 9.625 320.707 9.52301 321.125 9.52002 cv
321.41 9.52301 321.664 9.55103 321.895 9.60901 cv
322.121 9.672 322.328 9.758 322.508 9.867 cv
322.688 9.97998 322.84 10.117 322.969 10.27 cv
323.098 10.426 323.207 10.598 323.297 10.789 cv
323.504 10.566 323.707 10.375 323.91 10.215 cv
324.105 10.055 324.305 9.922 324.5 9.82001 cv
324.695 9.71899 324.891 9.64502 325.086 9.59399 cv
325.281 9.547 325.48 9.52301 325.684 9.52002 cv
326.145 9.52301 326.531 9.60199 326.852 9.75403 cv
327.164 9.914 327.422 10.125 327.617 10.391 cv
327.813 10.66 327.949 10.973 328.035 11.328 cv
328.113 11.687 328.156 12.066 328.16 12.465 cv
cp
f
337.078 13.336 mo
337.078 13.957 337.012 14.516 336.879 15.012 cv
336.746 15.508 336.551 15.93 336.297 16.277 cv
336.043 16.625 335.727 16.895 335.348 17.078 cv
334.965 17.266 334.531 17.355 334.047 17.359 cv
333.84 17.355 333.652 17.336 333.488 17.301 cv
333.316 17.258 333.152 17.199 332.996 17.121 cv
332.836 17.043 332.68 16.945 332.527 16.82 cv
332.367 16.703 332.207 16.562 332.043 16.398 cv
332.043 19.672 li
332.039 19.719 332.023 19.766 331.996 19.812 cv
331.961 19.852 331.906 19.887 331.836 19.918 cv
331.758 19.941 331.66 19.965 331.535 19.984 cv
331.41 19.996 331.25 20.004 331.063 20.008 cv
330.867 20.004 330.711 19.996 330.586 19.984 cv
330.461 19.965 330.359 19.941 330.285 19.918 cv
330.207 19.887 330.152 19.852 330.125 19.812 cv
330.09 19.766 330.074 19.719 330.078 19.672 cv
330.078 9.96503 li
330.074 9.91803 330.09 9.87097 330.117 9.828 cv
330.141 9.79303 330.184 9.76202 330.254 9.72998 cv
330.316 9.70697 330.402 9.68701 330.512 9.672 cv
330.613 9.664 330.75 9.65601 330.914 9.65198 cv
331.07 9.65601 331.199 9.664 331.305 9.672 cv
331.41 9.68701 331.496 9.70697 331.563 9.72998 cv
331.625 9.76202 331.672 9.79303 331.699 9.828 cv
331.723 9.87097 331.734 9.91803 331.738 9.96503 cv
331.738 10.781 li
331.938 10.574 332.137 10.395 332.336 10.234 cv
332.527 10.078 332.727 9.94501 332.93 9.836 cv
333.133 9.73401 333.34 9.65198 333.559 9.59802 cv
333.77 9.547 334 9.52301 334.25 9.52002 cv
334.754 9.52301 335.188 9.62097 335.551 9.82001 cv
335.906 10.023 336.199 10.301 336.426 10.645 cv
336.648 10.996 336.813 11.398 336.922 11.859 cv
337.023 12.32 337.078 12.812 337.078 13.336 cv
cp
335.035 13.477 mo
335.031 13.184 335.012 12.902 334.969 12.625 cv
334.922 12.355 334.844 12.113 334.742 11.898 cv
334.633 11.687 334.492 11.516 334.32 11.387 cv
334.145 11.262 333.93 11.199 333.672 11.195 cv
333.539 11.199 333.41 11.219 333.285 11.254 cv
333.156 11.297 333.027 11.359 332.895 11.445 cv
332.762 11.535 332.625 11.648 332.488 11.789 cv
332.344 11.93 332.195 12.105 332.043 12.309 cv
332.043 14.602 li
332.316 14.949 332.578 15.219 332.828 15.406 cv
333.074 15.598 333.336 15.691 333.609 15.691 cv
333.863 15.691 334.078 15.629 334.262 15.496 cv
334.438 15.371 334.586 15.199 334.699 14.988 cv
334.813 14.777 334.895 14.539 334.953 14.273 cv
335.004 14.008 335.031 13.742 335.035 13.477 cv
cp
f
342.574 16.23 mo
342.574 16.457 342.559 16.633 342.531 16.754 cv
342.5 16.879 342.461 16.965 342.418 17.012 cv
342.367 17.062 342.301 17.105 342.211 17.145 cv
342.117 17.184 342.008 17.215 341.891 17.246 cv
341.766 17.27 341.633 17.293 341.492 17.312 cv
341.348 17.324 341.207 17.332 341.063 17.336 cv
340.672 17.332 340.332 17.281 340.047 17.187 cv
339.762 17.086 339.527 16.937 339.34 16.73 cv
339.152 16.527 339.012 16.27 338.926 15.957 cv
338.832 15.648 338.789 15.277 338.793 14.848 cv
338.793 11.289 li
337.961 11.289 li
337.859 11.293 337.785 11.23 337.734 11.105 cv
337.68 10.984 337.652 10.781 337.656 10.492 cv
337.652 10.344 337.66 10.215 337.676 10.113 cv
337.688 10.012 337.707 9.92999 337.734 9.867 cv
337.758 9.80902 337.789 9.76599 337.832 9.73798 cv
337.867 9.71503 337.914 9.703 337.969 9.69897 cv
338.793 9.69897 li
338.793 8.14801 li
338.789 8.10199 338.805 8.05499 338.836 8.008 cv
338.863 7.96899 338.914 7.93402 338.992 7.90198 cv
339.066 7.87903 339.168 7.85498 339.297 7.84003 cv
339.422 7.828 339.578 7.82397 339.77 7.82001 cv
339.957 7.82397 340.117 7.828 340.246 7.84003 cv
340.371 7.85498 340.473 7.87903 340.547 7.90198 cv
340.617 7.93402 340.668 7.96899 340.703 8.008 cv
340.73 8.05499 340.746 8.10199 340.75 8.14801 cv
340.75 9.69897 li
342.262 9.69897 li
342.313 9.703 342.359 9.71503 342.398 9.73798 cv
342.438 9.76599 342.469 9.80902 342.496 9.867 cv
342.52 9.92999 342.539 10.012 342.555 10.113 cv
342.566 10.215 342.574 10.344 342.574 10.492 cv
342.574 10.781 342.547 10.984 342.496 11.105 cv
342.441 11.23 342.367 11.293 342.27 11.289 cv
340.75 11.289 li
340.75 14.555 li
340.746 14.934 340.805 15.219 340.93 15.406 cv
341.047 15.598 341.262 15.691 341.566 15.691 cv
341.668 15.691 341.762 15.684 341.848 15.664 cv
341.93 15.648 342.004 15.629 342.07 15.602 cv
342.133 15.582 342.188 15.559 342.234 15.539 cv
342.277 15.523 342.316 15.516 342.355 15.512 cv
342.383 15.516 342.414 15.523 342.445 15.539 cv
342.473 15.559 342.492 15.598 342.512 15.648 cv
342.523 15.707 342.539 15.781 342.555 15.871 cv
342.566 15.969 342.574 16.086 342.574 16.23 cv
cp
f
345.961 16.914 mo
345.957 16.969 345.941 17.012 345.914 17.051 cv
345.879 17.09 345.824 17.125 345.754 17.148 cv
345.676 17.176 345.578 17.191 345.453 17.207 cv
345.328 17.219 345.168 17.227 344.98 17.227 cv
344.785 17.227 344.629 17.219 344.504 17.207 cv
344.379 17.191 344.277 17.176 344.203 17.148 cv
344.125 17.125 344.07 17.09 344.043 17.051 cv
344.008 17.012 343.992 16.969 343.996 16.914 cv
343.996 9.97998 li
343.992 9.92999 344.008 9.883 344.043 9.84399 cv
344.07 9.80499 344.125 9.77301 344.203 9.742 cv
344.277 9.71899 344.379 9.69501 344.504 9.67603 cv
344.629 9.664 344.785 9.65601 344.98 9.65198 cv
345.168 9.65601 345.328 9.664 345.453 9.67603 cv
345.578 9.69501 345.676 9.71899 345.754 9.742 cv
345.824 9.77301 345.879 9.80499 345.914 9.84399 cv
345.941 9.883 345.957 9.92999 345.961 9.97998 cv
cp
346.109 7.60901 mo
346.109 8.008 346.027 8.28101 345.867 8.42999 cv
345.703 8.58197 345.406 8.65601 344.973 8.65198 cv
344.527 8.65601 344.227 8.58197 344.078 8.43701 cv
343.922 8.29303 343.848 8.03101 343.848 7.64801 cv
343.848 7.25403 343.926 6.97998 344.086 6.828 cv
344.242 6.67603 344.543 6.59802 344.988 6.59802 cv
345.422 6.59802 345.719 6.672 345.875 6.82001 cv
346.031 6.96899 346.109 7.23401 346.109 7.60901 cv
cp
f
354.953 13.367 mo
354.949 13.965 354.871 14.508 354.719 14.992 cv
354.559 15.484 354.324 15.902 354.008 16.254 cv
353.691 16.605 353.293 16.879 352.816 17.07 cv
352.336 17.262 351.777 17.355 351.141 17.359 cv
350.52 17.355 349.98 17.273 349.527 17.102 cv
349.066 16.934 348.688 16.684 348.391 16.355 cv
348.086 16.031 347.863 15.629 347.719 15.148 cv
347.574 14.672 347.504 14.125 347.504 13.508 cv
347.504 12.918 347.582 12.379 347.738 11.887 cv
347.895 11.398 348.133 10.977 348.453 10.625 cv
348.77 10.277 349.164 10.004 349.641 9.80902 cv
350.113 9.617 350.672 9.52301 351.313 9.52002 cv
351.938 9.52301 352.477 9.60498 352.934 9.77301 cv
353.391 9.94501 353.77 10.195 354.066 10.52 cv
354.363 10.848 354.586 11.25 354.734 11.727 cv
354.879 12.207 354.949 12.754 354.953 13.367 cv
cp
352.934 13.445 mo
352.93 13.109 352.902 12.793 352.852 12.5 cv
352.793 12.215 352.699 11.965 352.574 11.75 cv
352.441 11.539 352.27 11.371 352.059 11.25 cv
351.84 11.133 351.57 11.074 351.242 11.07 cv
350.953 11.074 350.699 11.129 350.48 11.23 cv
350.262 11.34 350.082 11.496 349.941 11.699 cv
349.801 11.906 349.695 12.152 349.625 12.437 cv
349.555 12.73 349.52 13.059 349.52 13.422 cv
349.52 13.77 349.547 14.086 349.605 14.371 cv
349.66 14.664 349.754 14.914 349.883 15.125 cv
350.008 15.34 350.18 15.504 350.402 15.617 cv
350.617 15.738 350.887 15.797 351.211 15.793 cv
351.504 15.797 351.762 15.742 351.984 15.633 cv
352.199 15.527 352.379 15.375 352.52 15.168 cv
352.66 14.969 352.762 14.723 352.832 14.434 cv
352.895 14.148 352.93 13.82 352.934 13.445 cv
cp
f
363.195 16.914 mo
363.191 16.969 363.176 17.012 363.148 17.051 cv
363.113 17.09 363.063 17.125 362.992 17.148 cv
362.918 17.176 362.816 17.191 362.691 17.207 cv
362.563 17.219 362.406 17.227 362.223 17.227 cv
362.027 17.227 361.867 17.219 361.742 17.207 cv
361.613 17.191 361.512 17.176 361.441 17.148 cv
361.363 17.125 361.313 17.09 361.285 17.051 cv
361.25 17.012 361.234 16.969 361.238 16.914 cv
361.238 12.949 li
361.234 12.613 361.211 12.348 361.164 12.152 cv
361.113 11.961 361.039 11.797 360.949 11.66 cv
360.855 11.523 360.738 11.418 360.59 11.34 cv
360.441 11.266 360.266 11.227 360.07 11.227 cv
359.816 11.227 359.566 11.32 359.313 11.5 cv
359.059 11.684 358.793 11.945 358.52 12.293 cv
358.52 16.914 li
358.516 16.969 358.5 17.012 358.473 17.051 cv
358.438 17.09 358.383 17.125 358.313 17.148 cv
358.234 17.176 358.137 17.191 358.012 17.207 cv
357.887 17.219 357.727 17.227 357.539 17.227 cv
357.344 17.227 357.188 17.219 357.063 17.207 cv
356.938 17.191 356.836 17.176 356.762 17.148 cv
356.684 17.125 356.629 17.09 356.602 17.051 cv
356.566 17.012 356.551 16.969 356.555 16.914 cv
356.555 9.96503 li
356.551 9.91803 356.566 9.87097 356.594 9.828 cv
356.617 9.79303 356.664 9.76202 356.734 9.72998 cv
356.801 9.70697 356.887 9.68701 356.996 9.672 cv
357.102 9.664 357.234 9.65601 357.398 9.65198 cv
357.563 9.65601 357.699 9.664 357.809 9.672 cv
357.914 9.68701 358 9.70697 358.063 9.72998 cv
358.121 9.76202 358.164 9.79303 358.191 9.828 cv
358.215 9.87097 358.227 9.91803 358.23 9.96503 cv
358.23 10.766 li
358.613 10.355 359.004 10.043 359.402 9.83197 cv
359.797 9.625 360.215 9.52301 360.648 9.52002 cv
361.117 9.52301 361.516 9.60199 361.844 9.75403 cv
362.168 9.914 362.43 10.125 362.629 10.391 cv
362.828 10.66 362.973 10.973 363.063 11.328 cv
363.148 11.687 363.191 12.117 363.195 12.621 cv
cp
f
372.535 13.262 mo
372.531 13.562 372.504 13.773 372.449 13.891 cv
372.391 14.016 372.301 14.074 372.176 14.07 cv
368.934 14.07 li
368.805 14.074 368.711 14.012 368.656 13.887 cv
368.594 13.766 368.566 13.559 368.57 13.262 cv
368.566 12.973 368.594 12.766 368.656 12.645 cv
368.711 12.527 368.805 12.469 368.934 12.465 cv
372.176 12.465 li
372.238 12.469 372.289 12.48 372.336 12.504 cv
372.375 12.531 372.414 12.578 372.449 12.637 cv
372.477 12.703 372.5 12.785 372.516 12.887 cv
372.527 12.992 372.531 13.117 372.535 13.262 cv
cp
f
385.207 16.914 mo
385.207 16.977 385.195 17.023 385.176 17.059 cv
385.156 17.102 385.109 17.133 385.031 17.156 cv
384.953 17.18 384.836 17.195 384.688 17.211 cv
384.531 17.219 384.328 17.227 384.07 17.227 cv
383.852 17.227 383.676 17.219 383.547 17.211 cv
383.418 17.195 383.316 17.18 383.242 17.152 cv
383.164 17.125 383.109 17.09 383.082 17.043 cv
383.047 17.004 383.023 16.949 383.004 16.883 cv
382.098 14.633 li
381.988 14.379 381.883 14.152 381.781 13.953 cv
381.672 13.758 381.559 13.594 381.434 13.461 cv
381.305 13.332 381.156 13.23 380.992 13.16 cv
380.824 13.094 380.633 13.062 380.418 13.059 cv
379.777 13.059 li
379.777 16.898 li
379.773 16.953 379.758 17 379.727 17.039 cv
379.691 17.082 379.637 17.117 379.559 17.141 cv
379.48 17.168 379.375 17.187 379.246 17.203 cv
379.113 17.219 378.949 17.227 378.75 17.227 cv
378.551 17.227 378.383 17.219 378.254 17.203 cv
378.117 17.187 378.012 17.168 377.938 17.141 cv
377.855 17.117 377.801 17.082 377.773 17.039 cv
377.738 17 377.723 16.953 377.727 16.898 cv
377.727 7.742 li
377.723 7.51599 377.781 7.35199 377.902 7.24597 cv
378.016 7.14801 378.16 7.09802 378.336 7.09399 cv
380.945 7.09399 li
381.207 7.09802 381.426 7.10199 381.602 7.10901 cv
381.77 7.12097 381.926 7.133 382.07 7.14801 cv
382.473 7.20697 382.836 7.30902 383.16 7.44501 cv
383.484 7.59003 383.762 7.77301 383.988 7.99597 cv
384.215 8.22699 384.387 8.492 384.508 8.80103 cv
384.625 9.10901 384.684 9.46503 384.688 9.86298 cv
384.684 10.203 384.641 10.512 384.559 10.785 cv
384.469 11.066 384.344 11.312 384.18 11.531 cv
384.012 11.75 383.805 11.941 383.563 12.098 cv
383.316 12.262 383.039 12.391 382.73 12.488 cv
382.879 12.562 383.023 12.652 383.156 12.754 cv
383.289 12.863 383.41 12.988 383.527 13.133 cv
383.641 13.281 383.754 13.449 383.859 13.637 cv
383.961 13.828 384.063 14.043 384.164 14.281 cv
385.016 16.27 li
385.09 16.469 385.141 16.609 385.168 16.699 cv
385.191 16.793 385.207 16.867 385.207 16.914 cv
cp
382.566 10.074 mo
382.563 9.742 382.488 9.461 382.34 9.22998 cv
382.188 9.00403 381.941 8.84399 381.602 8.74597 cv
381.496 8.72302 381.379 8.69897 381.246 8.68402 cv
381.113 8.66803 380.93 8.65997 380.695 8.65997 cv
379.777 8.65997 li
379.777 11.523 li
380.82 11.523 li
381.109 11.527 381.367 11.492 381.586 11.418 cv
381.805 11.352 381.984 11.25 382.129 11.121 cv
382.273 10.996 382.383 10.844 382.457 10.664 cv
382.527 10.488 382.563 10.293 382.566 10.074 cv
cp
f
392.793 13.238 mo
392.789 13.477 392.738 13.652 392.633 13.766 cv
392.523 13.883 392.375 13.941 392.195 13.937 cv
387.961 13.937 li
387.957 14.238 387.992 14.508 388.066 14.746 cv
388.133 14.988 388.246 15.191 388.402 15.359 cv
388.555 15.531 388.75 15.66 388.992 15.746 cv
389.23 15.836 389.52 15.879 389.863 15.879 cv
390.203 15.879 390.504 15.855 390.766 15.805 cv
391.023 15.758 391.25 15.703 391.441 15.641 cv
391.629 15.582 391.785 15.527 391.914 15.477 cv
392.035 15.43 392.137 15.406 392.219 15.402 cv
392.262 15.406 392.301 15.414 392.336 15.43 cv
392.363 15.449 392.391 15.48 392.41 15.527 cv
392.43 15.574 392.441 15.641 392.453 15.727 cv
392.457 15.812 392.461 15.922 392.465 16.051 cv
392.461 16.168 392.461 16.266 392.457 16.344 cv
392.449 16.426 392.441 16.492 392.434 16.547 cv
392.422 16.605 392.406 16.656 392.387 16.691 cv
392.367 16.734 392.34 16.77 392.309 16.805 cv
392.273 16.844 392.18 16.895 392.031 16.953 cv
391.875 17.02 391.684 17.082 391.453 17.137 cv
391.215 17.199 390.945 17.246 390.648 17.293 cv
390.344 17.332 390.023 17.355 389.684 17.359 cv
389.063 17.355 388.52 17.281 388.059 17.125 cv
387.59 16.973 387.203 16.734 386.895 16.418 cv
386.578 16.102 386.344 15.703 386.195 15.219 cv
386.039 14.738 385.965 14.172 385.969 13.516 cv
385.965 12.902 386.043 12.344 386.207 11.848 cv
386.363 11.352 386.598 10.934 386.91 10.586 cv
387.215 10.242 387.59 9.97699 388.027 9.79303 cv
388.465 9.61298 388.957 9.52301 389.512 9.52002 cv
390.09 9.52301 390.59 9.60901 391.004 9.77698 cv
391.418 9.953 391.754 10.191 392.02 10.492 cv
392.281 10.797 392.477 11.156 392.605 11.57 cv
392.727 11.988 392.789 12.437 392.793 12.926 cv
cp
390.891 12.676 mo
390.902 12.125 390.793 11.691 390.559 11.379 cv
390.324 11.066 389.957 10.91 389.465 10.906 cv
389.215 10.91 389 10.957 388.816 11.047 cv
388.629 11.145 388.477 11.27 388.355 11.426 cv
388.23 11.586 388.137 11.773 388.074 11.988 cv
388.008 12.203 387.969 12.434 387.961 12.676 cv
cp
f
405.457 16.914 mo
405.453 16.969 405.438 17.012 405.41 17.051 cv
405.375 17.09 405.324 17.125 405.254 17.148 cv
405.18 17.176 405.078 17.191 404.957 17.207 cv
404.832 17.219 404.676 17.227 404.484 17.227 cv
404.285 17.227 404.125 17.219 404 17.207 cv
403.875 17.191 403.773 17.176 403.699 17.148 cv
403.621 17.125 403.57 17.09 403.543 17.051 cv
403.516 17.012 403.5 16.969 403.504 16.914 cv
403.504 12.793 li
403.5 12.562 403.48 12.348 403.438 12.152 cv
403.391 11.961 403.32 11.797 403.234 11.66 cv
403.141 11.523 403.027 11.418 402.891 11.34 cv
402.75 11.266 402.586 11.227 402.395 11.227 cv
402.16 11.227 401.922 11.32 401.684 11.5 cv
401.445 11.684 401.188 11.945 400.906 12.293 cv
400.906 16.914 li
400.906 16.969 400.891 17.012 400.859 17.051 cv
400.828 17.09 400.773 17.125 400.699 17.148 cv
400.621 17.176 400.52 17.191 400.398 17.207 cv
400.273 17.219 400.121 17.227 399.934 17.227 cv
399.738 17.227 399.578 17.219 399.457 17.207 cv
399.328 17.191 399.227 17.176 399.156 17.148 cv
399.078 17.125 399.027 17.09 398.996 17.051 cv
398.965 17.012 398.949 16.969 398.949 16.914 cv
398.949 12.793 li
398.949 12.562 398.926 12.348 398.883 12.152 cv
398.84 11.961 398.773 11.797 398.688 11.66 cv
398.594 11.523 398.48 11.418 398.344 11.34 cv
398.199 11.266 398.035 11.227 397.852 11.227 cv
397.609 11.227 397.371 11.32 397.133 11.5 cv
396.895 11.684 396.637 11.945 396.363 12.293 cv
396.363 16.914 li
396.359 16.969 396.344 17.012 396.316 17.051 cv
396.281 17.09 396.227 17.125 396.156 17.148 cv
396.078 17.176 395.98 17.191 395.855 17.207 cv
395.73 17.219 395.57 17.227 395.383 17.227 cv
395.188 17.227 395.031 17.219 394.906 17.207 cv
394.781 17.191 394.68 17.176 394.605 17.148 cv
394.527 17.125 394.473 17.09 394.445 17.051 cv
394.41 17.012 394.395 16.969 394.398 16.914 cv
394.398 9.96503 li
394.395 9.91803 394.41 9.87097 394.438 9.828 cv
394.461 9.79303 394.508 9.76202 394.578 9.72998 cv
394.645 9.70697 394.73 9.68701 394.84 9.672 cv
394.945 9.664 395.078 9.65601 395.242 9.65198 cv
395.406 9.65601 395.543 9.664 395.652 9.672 cv
395.758 9.68701 395.844 9.70697 395.906 9.72998 cv
395.965 9.76202 396.008 9.79303 396.035 9.828 cv
396.059 9.87097 396.07 9.91803 396.074 9.96503 cv
396.074 10.766 li
396.457 10.355 396.84 10.043 397.223 9.83197 cv
397.602 9.625 398.004 9.52301 398.422 9.52002 cv
398.707 9.52301 398.961 9.55103 399.191 9.60901 cv
399.418 9.672 399.625 9.758 399.805 9.867 cv
399.984 9.97998 400.137 10.117 400.266 10.27 cv
400.395 10.426 400.504 10.598 400.594 10.789 cv
400.801 10.566 401.004 10.375 401.207 10.215 cv
401.402 10.055 401.602 9.922 401.797 9.82001 cv
401.992 9.71899 402.188 9.64502 402.383 9.59399 cv
402.578 9.547 402.777 9.52301 402.98 9.52002 cv
403.441 9.52301 403.828 9.60199 404.148 9.75403 cv
404.461 9.914 404.719 10.125 404.914 10.391 cv
405.109 10.66 405.246 10.973 405.332 11.328 cv
405.41 11.687 405.453 12.066 405.457 12.465 cv
cp
f
414.406 13.367 mo
414.402 13.965 414.324 14.508 414.172 14.992 cv
414.012 15.484 413.777 15.902 413.461 16.254 cv
413.145 16.605 412.746 16.879 412.27 17.07 cv
411.789 17.262 411.23 17.355 410.594 17.359 cv
409.973 17.355 409.434 17.273 408.98 17.102 cv
408.52 16.934 408.141 16.684 407.844 16.355 cv
407.539 16.031 407.316 15.629 407.172 15.148 cv
407.027 14.672 406.957 14.125 406.957 13.508 cv
406.957 12.918 407.035 12.379 407.191 11.887 cv
407.348 11.398 407.586 10.977 407.906 10.625 cv
408.223 10.277 408.617 10.004 409.094 9.80902 cv
409.566 9.617 410.125 9.52301 410.766 9.52002 cv
411.391 9.52301 411.93 9.60498 412.387 9.77301 cv
412.844 9.94501 413.223 10.195 413.52 10.52 cv
413.816 10.848 414.039 11.25 414.188 11.727 cv
414.332 12.207 414.402 12.754 414.406 13.367 cv
cp
412.387 13.445 mo
412.383 13.109 412.355 12.793 412.305 12.5 cv
412.246 12.215 412.152 11.965 412.027 11.75 cv
411.895 11.539 411.723 11.371 411.512 11.25 cv
411.293 11.133 411.023 11.074 410.695 11.07 cv
410.406 11.074 410.152 11.129 409.934 11.23 cv
409.715 11.34 409.535 11.496 409.395 11.699 cv
409.254 11.906 409.148 12.152 409.078 12.437 cv
409.008 12.73 408.973 13.059 408.973 13.422 cv
408.973 13.77 409 14.086 409.059 14.371 cv
409.113 14.664 409.207 14.914 409.336 15.125 cv
409.461 15.34 409.633 15.504 409.855 15.617 cv
410.07 15.738 410.34 15.797 410.664 15.793 cv
410.957 15.797 411.215 15.742 411.438 15.633 cv
411.652 15.527 411.832 15.375 411.973 15.168 cv
412.113 14.969 412.215 14.723 412.285 14.434 cv
412.348 14.148 412.383 13.82 412.387 13.445 cv
cp
f
420.113 16.23 mo
420.113 16.457 420.098 16.633 420.07 16.754 cv
420.039 16.879 420 16.965 419.957 17.012 cv
419.906 17.062 419.84 17.105 419.75 17.145 cv
419.656 17.184 419.547 17.215 419.43 17.246 cv
419.305 17.27 419.172 17.293 419.031 17.312 cv
418.887 17.324 418.746 17.332 418.602 17.336 cv
418.211 17.332 417.871 17.281 417.586 17.187 cv
417.301 17.086 417.066 16.937 416.879 16.73 cv
416.691 16.527 416.551 16.27 416.465 15.957 cv
416.371 15.648 416.328 15.277 416.332 14.848 cv
416.332 11.289 li
415.5 11.289 li
415.398 11.293 415.324 11.23 415.273 11.105 cv
415.219 10.984 415.191 10.781 415.195 10.492 cv
415.191 10.344 415.199 10.215 415.215 10.113 cv
415.227 10.012 415.246 9.92999 415.273 9.867 cv
415.297 9.80902 415.328 9.76599 415.371 9.73798 cv
415.406 9.71503 415.453 9.703 415.508 9.69897 cv
416.332 9.69897 li
416.332 8.14801 li
416.328 8.10199 416.344 8.05499 416.375 8.008 cv
416.402 7.96899 416.453 7.93402 416.531 7.90198 cv
416.605 7.87903 416.707 7.85498 416.836 7.84003 cv
416.961 7.828 417.117 7.82397 417.309 7.82001 cv
417.496 7.82397 417.656 7.828 417.785 7.84003 cv
417.91 7.85498 418.012 7.87903 418.086 7.90198 cv
418.156 7.93402 418.207 7.96899 418.242 8.008 cv
418.27 8.05499 418.285 8.10199 418.289 8.14801 cv
418.289 9.69897 li
419.801 9.69897 li
419.852 9.703 419.898 9.71503 419.938 9.73798 cv
419.977 9.76599 420.008 9.80902 420.035 9.867 cv
420.059 9.92999 420.078 10.012 420.094 10.113 cv
420.105 10.215 420.113 10.344 420.113 10.492 cv
420.113 10.781 420.086 10.984 420.035 11.105 cv
419.98 11.23 419.906 11.293 419.809 11.289 cv
418.289 11.289 li
418.289 14.555 li
418.285 14.934 418.344 15.219 418.469 15.406 cv
418.586 15.598 418.801 15.691 419.105 15.691 cv
419.207 15.691 419.301 15.684 419.387 15.664 cv
419.469 15.648 419.543 15.629 419.609 15.602 cv
419.672 15.582 419.727 15.559 419.773 15.539 cv
419.816 15.523 419.855 15.516 419.895 15.512 cv
419.922 15.516 419.953 15.523 419.984 15.539 cv
420.012 15.559 420.031 15.598 420.051 15.648 cv
420.063 15.707 420.078 15.781 420.094 15.871 cv
420.105 15.969 420.113 16.086 420.113 16.23 cv
cp
f
427.699 13.238 mo
427.695 13.477 427.645 13.652 427.539 13.766 cv
427.43 13.883 427.281 13.941 427.102 13.937 cv
422.867 13.937 li
422.863 14.238 422.898 14.508 422.973 14.746 cv
423.039 14.988 423.152 15.191 423.309 15.359 cv
423.461 15.531 423.656 15.66 423.898 15.746 cv
424.137 15.836 424.426 15.879 424.77 15.879 cv
425.109 15.879 425.41 15.855 425.672 15.805 cv
425.93 15.758 426.156 15.703 426.348 15.641 cv
426.535 15.582 426.691 15.527 426.82 15.477 cv
426.941 15.43 427.043 15.406 427.125 15.402 cv
427.168 15.406 427.207 15.414 427.242 15.43 cv
427.27 15.449 427.297 15.48 427.316 15.527 cv
427.336 15.574 427.348 15.641 427.359 15.727 cv
427.363 15.812 427.367 15.922 427.371 16.051 cv
427.367 16.168 427.367 16.266 427.363 16.344 cv
427.355 16.426 427.348 16.492 427.34 16.547 cv
427.328 16.605 427.313 16.656 427.293 16.691 cv
427.273 16.734 427.246 16.77 427.215 16.805 cv
427.18 16.844 427.086 16.895 426.938 16.953 cv
426.781 17.02 426.59 17.082 426.359 17.137 cv
426.121 17.199 425.852 17.246 425.555 17.293 cv
425.25 17.332 424.93 17.355 424.59 17.359 cv
423.969 17.355 423.426 17.281 422.965 17.125 cv
422.496 16.973 422.109 16.734 421.801 16.418 cv
421.484 16.102 421.25 15.703 421.102 15.219 cv
420.945 14.738 420.871 14.172 420.875 13.516 cv
420.871 12.902 420.949 12.344 421.113 11.848 cv
421.27 11.352 421.504 10.934 421.816 10.586 cv
422.121 10.242 422.496 9.97699 422.934 9.79303 cv
423.371 9.61298 423.863 9.52301 424.418 9.52002 cv
424.996 9.52301 425.496 9.60901 425.91 9.77698 cv
426.324 9.953 426.66 10.191 426.926 10.492 cv
427.188 10.797 427.383 11.156 427.512 11.57 cv
427.633 11.988 427.695 12.437 427.699 12.926 cv
cp
425.797 12.676 mo
425.809 12.125 425.699 11.691 425.465 11.379 cv
425.23 11.066 424.863 10.91 424.371 10.906 cv
424.121 10.91 423.906 10.957 423.723 11.047 cv
423.535 11.145 423.383 11.27 423.262 11.426 cv
423.137 11.586 423.043 11.773 422.98 11.988 cv
422.914 12.203 422.875 12.434 422.867 12.676 cv
cp
f
445.008 16.898 mo
445.004 16.953 444.992 17 444.965 17.039 cv
444.934 17.082 444.879 17.117 444.809 17.141 cv
444.73 17.168 444.633 17.187 444.508 17.203 cv
444.383 17.219 444.223 17.227 444.031 17.227 cv
443.844 17.227 443.688 17.219 443.566 17.203 cv
443.438 17.187 443.34 17.168 443.27 17.141 cv
443.195 17.117 443.145 17.082 443.113 17.039 cv
443.082 17 443.066 16.953 443.066 16.898 cv
443.066 8.69098 li
443.051 8.69098 li
440.129 16.891 li
440.105 16.961 440.07 17.016 440.027 17.059 cv
439.977 17.105 439.914 17.141 439.836 17.164 cv
439.754 17.191 439.652 17.207 439.527 17.215 cv
439.402 17.223 439.25 17.227 439.078 17.227 cv
438.898 17.227 438.75 17.219 438.625 17.207 cv
438.5 17.191 438.395 17.172 438.316 17.145 cv
438.23 17.117 438.168 17.082 438.125 17.039 cv
438.074 17 438.043 16.953 438.031 16.891 cv
435.211 8.69098 li
435.195 8.69098 li
435.195 16.898 li
435.191 16.953 435.176 17 435.152 17.039 cv
435.121 17.082 435.07 17.117 434.992 17.141 cv
434.914 17.168 434.813 17.187 434.691 17.203 cv
434.566 17.219 434.41 17.227 434.223 17.227 cv
434.031 17.227 433.875 17.219 433.754 17.203 cv
433.625 17.187 433.523 17.168 433.453 17.141 cv
433.375 17.117 433.324 17.082 433.297 17.039 cv
433.266 17 433.25 16.953 433.254 16.898 cv
433.254 7.914 li
433.25 7.65198 433.32 7.44897 433.465 7.30499 cv
433.602 7.16803 433.789 7.09802 434.027 7.09399 cv
435.367 7.09399 li
435.605 7.09802 435.809 7.117 435.98 7.15198 cv
436.148 7.19501 436.297 7.258 436.426 7.34802 cv
436.547 7.44098 436.652 7.56201 436.738 7.70697 cv
436.82 7.85901 436.891 8.04303 436.957 8.258 cv
439.141 14.266 li
439.172 14.266 li
441.43 8.27301 li
441.496 8.05499 441.57 7.87097 441.652 7.71899 cv
441.73 7.57001 441.824 7.44897 441.934 7.35199 cv
442.039 7.26202 442.164 7.19501 442.309 7.15198 cv
442.453 7.117 442.621 7.09802 442.816 7.09399 cv
444.195 7.09399 li
444.332 7.09802 444.453 7.11298 444.559 7.14801 cv
444.656 7.18701 444.738 7.242 444.809 7.30902 cv
444.871 7.383 444.922 7.46899 444.957 7.56598 cv
444.988 7.672 445.004 7.789 445.008 7.914 cv
cp
f
454.117 13.367 mo
454.113 13.965 454.035 14.508 453.883 14.992 cv
453.723 15.484 453.488 15.902 453.172 16.254 cv
452.855 16.605 452.457 16.879 451.98 17.07 cv
451.5 17.262 450.941 17.355 450.305 17.359 cv
449.684 17.355 449.145 17.273 448.691 17.102 cv
448.23 16.934 447.852 16.684 447.555 16.355 cv
447.25 16.031 447.027 15.629 446.883 15.148 cv
446.738 14.672 446.668 14.125 446.668 13.508 cv
446.668 12.918 446.746 12.379 446.902 11.887 cv
447.059 11.398 447.297 10.977 447.617 10.625 cv
447.934 10.277 448.328 10.004 448.805 9.80902 cv
449.277 9.617 449.836 9.52301 450.477 9.52002 cv
451.102 9.52301 451.641 9.60498 452.098 9.77301 cv
452.555 9.94501 452.934 10.195 453.23 10.52 cv
453.527 10.848 453.75 11.25 453.898 11.727 cv
454.043 12.207 454.113 12.754 454.117 13.367 cv
cp
452.098 13.445 mo
452.094 13.109 452.066 12.793 452.016 12.5 cv
451.957 12.215 451.863 11.965 451.738 11.75 cv
451.605 11.539 451.434 11.371 451.223 11.25 cv
451.004 11.133 450.734 11.074 450.406 11.07 cv
450.117 11.074 449.863 11.129 449.645 11.23 cv
449.426 11.34 449.246 11.496 449.105 11.699 cv
448.965 11.906 448.859 12.152 448.789 12.437 cv
448.719 12.73 448.684 13.059 448.684 13.422 cv
448.684 13.77 448.711 14.086 448.77 14.371 cv
448.824 14.664 448.918 14.914 449.047 15.125 cv
449.172 15.34 449.344 15.504 449.566 15.617 cv
449.781 15.738 450.051 15.797 450.375 15.793 cv
450.668 15.797 450.926 15.742 451.148 15.633 cv
451.363 15.527 451.543 15.375 451.684 15.168 cv
451.824 14.969 451.926 14.723 451.996 14.434 cv
452.059 14.148 452.094 13.82 452.098 13.445 cv
cp
f
462.266 16.914 mo
462.262 16.977 462.25 17.023 462.227 17.059 cv
462.199 17.102 462.152 17.133 462.094 17.156 cv
462.027 17.18 461.945 17.195 461.84 17.211 cv
461.734 17.219 461.602 17.227 461.449 17.227 cv
461.277 17.227 461.145 17.219 461.043 17.211 cv
460.938 17.195 460.852 17.18 460.789 17.156 cv
460.723 17.133 460.676 17.102 460.648 17.059 cv
460.617 17.023 460.602 16.977 460.605 16.914 cv
460.605 16.145 li
460.246 16.531 459.871 16.828 459.48 17.039 cv
459.082 17.25 458.648 17.355 458.176 17.359 cv
457.641 17.355 457.191 17.254 456.828 17.051 cv
456.461 16.848 456.164 16.574 455.934 16.223 cv
455.699 15.879 455.531 15.473 455.43 15.004 cv
455.328 14.543 455.277 14.051 455.277 13.531 cv
455.277 12.918 455.34 12.363 455.473 11.867 cv
455.602 11.375 455.797 10.953 456.055 10.605 cv
456.309 10.258 456.625 9.992 457.004 9.80103 cv
457.383 9.617 457.82 9.52301 458.316 9.52002 cv
458.703 9.52301 459.055 9.60199 459.375 9.758 cv
459.688 9.91803 460.004 10.148 460.316 10.453 cv
460.316 6.69098 li
460.316 6.64099 460.328 6.59399 460.359 6.55103 cv
460.383 6.51202 460.438 6.47699 460.516 6.44501 cv
460.59 6.41803 460.688 6.39801 460.816 6.37903 cv
460.938 6.367 461.098 6.35901 461.293 6.35498 cv
461.484 6.35901 461.641 6.367 461.766 6.37903 cv
461.887 6.39801 461.988 6.41803 462.063 6.44501 cv
462.133 6.47699 462.184 6.51202 462.219 6.55103 cv
462.246 6.59399 462.262 6.64099 462.266 6.69098 cv
cp
460.316 12.27 mo
460.035 11.918 459.766 11.648 459.512 11.461 cv
459.25 11.273 458.98 11.18 458.703 11.18 cv
458.449 11.18 458.23 11.246 458.047 11.371 cv
457.859 11.504 457.711 11.672 457.602 11.883 cv
457.488 12.094 457.406 12.332 457.352 12.594 cv
457.297 12.859 457.27 13.129 457.27 13.398 cv
457.27 13.695 457.293 13.977 457.34 14.25 cv
457.387 14.527 457.461 14.773 457.57 14.988 cv
457.672 15.203 457.816 15.375 457.996 15.504 cv
458.172 15.637 458.395 15.703 458.664 15.699 cv
458.797 15.703 458.926 15.684 459.059 15.641 cv
459.184 15.605 459.316 15.543 459.449 15.449 cv
459.582 15.363 459.719 15.246 459.859 15.102 cv
460 14.961 460.152 14.785 460.316 14.578 cv
cp
f
470.664 13.238 mo
470.66 13.477 470.609 13.652 470.504 13.766 cv
470.395 13.883 470.246 13.941 470.066 13.937 cv
465.832 13.937 li
465.828 14.238 465.863 14.508 465.938 14.746 cv
466.004 14.988 466.117 15.191 466.273 15.359 cv
466.426 15.531 466.621 15.66 466.863 15.746 cv
467.102 15.836 467.391 15.879 467.734 15.879 cv
468.074 15.879 468.375 15.855 468.637 15.805 cv
468.895 15.758 469.121 15.703 469.313 15.641 cv
469.5 15.582 469.656 15.527 469.785 15.477 cv
469.906 15.43 470.008 15.406 470.09 15.402 cv
470.133 15.406 470.172 15.414 470.207 15.43 cv
470.234 15.449 470.262 15.48 470.281 15.527 cv
470.301 15.574 470.313 15.641 470.324 15.727 cv
470.328 15.812 470.332 15.922 470.336 16.051 cv
470.332 16.168 470.332 16.266 470.328 16.344 cv
470.32 16.426 470.313 16.492 470.305 16.547 cv
470.293 16.605 470.277 16.656 470.258 16.691 cv
470.238 16.734 470.211 16.77 470.18 16.805 cv
470.145 16.844 470.051 16.895 469.902 16.953 cv
469.746 17.02 469.555 17.082 469.324 17.137 cv
469.086 17.199 468.816 17.246 468.52 17.293 cv
468.215 17.332 467.895 17.355 467.555 17.359 cv
466.934 17.355 466.391 17.281 465.93 17.125 cv
465.461 16.973 465.074 16.734 464.766 16.418 cv
464.449 16.102 464.215 15.703 464.066 15.219 cv
463.91 14.738 463.836 14.172 463.84 13.516 cv
463.836 12.902 463.914 12.344 464.078 11.848 cv
464.234 11.352 464.469 10.934 464.781 10.586 cv
465.086 10.242 465.461 9.97699 465.898 9.79303 cv
466.336 9.61298 466.828 9.52301 467.383 9.52002 cv
467.961 9.52301 468.461 9.60901 468.875 9.77698 cv
469.289 9.953 469.625 10.191 469.891 10.492 cv
470.152 10.797 470.348 11.156 470.477 11.57 cv
470.598 11.988 470.66 12.437 470.664 12.926 cv
cp
468.762 12.676 mo
468.773 12.125 468.664 11.691 468.43 11.379 cv
468.195 11.066 467.828 10.91 467.336 10.906 cv
467.086 10.91 466.871 10.957 466.688 11.047 cv
466.5 11.145 466.348 11.27 466.227 11.426 cv
466.102 11.586 466.008 11.773 465.945 11.988 cv
465.879 12.203 465.84 12.434 465.832 12.676 cv
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
