%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FirstScenario-PreparationTimesOfImages-RemoteMode.pdf
%%Creator: Adobe Acrobat 15.23.0
%%For: mehra
%%CreationDate: 12/8/2018, 12:54:22 PM
%%BoundingBox: 0 0 691 559
%%HiResBoundingBox: 0 0 690.9601 558.8400
%%CropBox: 0 0 690.9601 558.8400
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -558.84 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 558.84 li
690.96 558.84 li
690.96 0 li
cp
clp
gsave
0 558.84 mo
691 558.84 li
691 -.160034 li
0 -.160034 li
cp
clp
0 -6.10352e-5 mo
690.961 -6.10352e-5 li
690.961 558.84 li
0 558.84 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
48.602 494.281 mo
674.039 494.281 li
48.602 453.602 mo
674.039 453.602 li
48.602 412.801 mo
674.039 412.801 li
48.602 372.121 mo
674.039 372.121 li
48.602 331.441 mo
674.039 331.441 li
48.602 290.762 mo
674.039 290.762 li
48.602 250.078 mo
674.039 250.078 li
48.602 209.398 mo
674.039 209.398 li
48.602 168.719 mo
674.039 168.719 li
48.602 128.039 mo
674.039 128.039 li
48.602 87.238 mo
674.039 87.238 li
48.602 46.559 mo
674.039 46.559 li
.140414 .108034 .108034 0 cmyk
@
48.602 473.879 mo
674.039 473.879 li
48.602 433.199 mo
674.039 433.199 li
48.602 392.52 mo
674.039 392.52 li
48.602 351.84 mo
674.039 351.84 li
48.602 311.16 mo
674.039 311.16 li
48.602 270.359 mo
674.039 270.359 li
48.602 229.68 mo
674.039 229.68 li
48.602 189 mo
674.039 189 li
48.602 148.32 mo
674.039 148.32 li
48.602 107.641 mo
674.039 107.641 li
48.602 66.961 mo
674.039 66.961 li
48.602 26.2809 mo
674.039 26.2809 li
.246403 .201175 .450446 .000885023 cmyk
@
58.801 26.2809 mo
58.801 514.559 li
78.961 26.2809 mo
78.961 514.559 li
99.121 26.2809 mo
99.121 514.559 li
119.281 26.2809 mo
119.281 514.559 li
139.441 26.2809 mo
139.441 514.559 li
159.602 26.2809 mo
159.602 514.559 li
179.762 26.2809 mo
179.762 514.559 li
199.922 26.2809 mo
199.922 514.559 li
220.078 26.2809 mo
220.078 514.559 li
240.359 26.2809 mo
240.359 514.559 li
260.52 26.2809 mo
260.52 514.559 li
280.68 26.2809 mo
280.68 514.559 li
300.84 26.2809 mo
300.84 514.559 li
321 26.2809 mo
321 514.559 li
341.16 26.2809 mo
341.16 514.559 li
361.32 26.2809 mo
361.32 514.559 li
381.48 26.2809 mo
381.48 514.559 li
401.641 26.2809 mo
401.641 514.559 li
421.922 26.2809 mo
421.922 514.559 li
442.078 26.2809 mo
442.078 514.559 li
462.238 26.2809 mo
462.238 514.559 li
482.398 26.2809 mo
482.398 514.559 li
502.559 26.2809 mo
502.559 514.559 li
522.719 26.2809 mo
522.719 514.559 li
542.879 26.2809 mo
542.879 514.559 li
563.039 26.2809 mo
563.039 514.559 li
583.199 26.2809 mo
583.199 514.559 li
603.48 26.2809 mo
603.48 514.559 li
623.641 26.2809 mo
623.641 514.559 li
643.801 26.2809 mo
643.801 514.559 li
663.961 26.2809 mo
663.961 514.559 li
.131685 .102663 .236637 0 cmyk
@
48.602 26.2809 mo
48.602 514.559 li
68.879 26.2809 mo
68.879 514.559 li
89.039 26.2809 mo
89.039 514.559 li
109.199 26.2809 mo
109.199 514.559 li
129.359 26.2809 mo
129.359 514.559 li
149.52 26.2809 mo
149.52 514.559 li
169.68 26.2809 mo
169.68 514.559 li
189.84 26.2809 mo
189.84 514.559 li
210 26.2809 mo
210 514.559 li
230.16 26.2809 mo
230.16 514.559 li
250.441 26.2809 mo
250.441 514.559 li
270.602 26.2809 mo
270.602 514.559 li
290.762 26.2809 mo
290.762 514.559 li
310.922 26.2809 mo
310.922 514.559 li
331.078 26.2809 mo
331.078 514.559 li
351.238 26.2809 mo
351.238 514.559 li
371.398 26.2809 mo
371.398 514.559 li
391.559 26.2809 mo
391.559 514.559 li
411.84 26.2809 mo
411.84 514.559 li
432 26.2809 mo
432 514.559 li
452.16 26.2809 mo
452.16 514.559 li
472.32 26.2809 mo
472.32 514.559 li
492.48 26.2809 mo
492.48 514.559 li
512.641 26.2809 mo
512.641 514.559 li
532.801 26.2809 mo
532.801 514.559 li
552.961 26.2809 mo
552.961 514.559 li
573.121 26.2809 mo
573.121 514.559 li
593.398 26.2809 mo
593.398 514.559 li
613.559 26.2809 mo
613.559 514.559 li
633.719 26.2809 mo
633.719 514.559 li
653.879 26.2809 mo
653.879 514.559 li
674.039 26.2809 mo
674.039 514.559 li
.246403 .201175 .450446 .000885023 cmyk
@
31.441 506.641 mo
37.558 506.641 li
37.558 521.282 li
31.441 521.282 li
cp
0 0 0 0 cmyk
ef
31.441 465.961 mo
37.558 465.961 li
37.558 480.602 li
31.441 480.602 li
cp
ef
31.441 425.16 mo
37.558 425.16 li
37.558 439.801 li
31.441 439.801 li
cp
ef
25.32 384.481 mo
37.558 384.481 li
37.558 399.122 li
25.32 399.122 li
cp
ef
25.32 343.801 mo
37.558 343.801 li
37.558 358.442 li
25.32 358.442 li
cp
ef
25.32 303.121 mo
37.558 303.121 li
37.558 317.762 li
25.32 317.762 li
cp
ef
25.32 262.441 mo
37.558 262.441 li
37.558 277.078 li
25.32 277.078 li
cp
ef
25.32 221.762 mo
37.558 221.762 li
37.558 236.399 li
25.32 236.399 li
cp
ef
25.32 181.078 mo
37.558 181.078 li
37.558 195.719 li
25.32 195.719 li
cp
ef
25.32 140.398 mo
37.558 140.398 li
37.558 155.039 li
25.32 155.039 li
cp
ef
25.32 99.602 mo
37.558 99.602 li
37.558 114.36 li
25.32 114.36 li
cp
ef
25.32 58.922 mo
37.558 58.922 li
37.558 73.559 li
25.32 73.559 li
cp
ef
25.32 18.238 mo
37.558 18.238 li
37.558 32.879 li
25.32 32.879 li
cp
ef
.96 lw
48.602 514.559 mo
674.039 514.559 li
.367803 .29575 .300999 .00198367 cmyk
@
48.602 514.559 mo
48.602 518.398 li
68.879 514.559 mo
68.879 518.398 li
89.039 514.559 mo
89.039 518.398 li
109.199 514.559 mo
109.199 518.398 li
129.359 514.559 mo
129.359 518.398 li
149.52 514.559 mo
149.52 518.398 li
169.68 514.559 mo
169.68 518.398 li
189.84 514.559 mo
189.84 518.398 li
210 514.559 mo
210 518.398 li
230.16 514.559 mo
230.16 518.398 li
250.441 514.559 mo
250.441 518.398 li
270.602 514.559 mo
270.602 518.398 li
290.762 514.559 mo
290.762 518.398 li
310.922 514.559 mo
310.922 518.398 li
331.078 514.559 mo
331.078 518.398 li
351.238 514.559 mo
351.238 518.398 li
371.398 514.559 mo
371.398 518.398 li
391.559 514.559 mo
391.559 518.398 li
411.84 514.559 mo
411.84 518.398 li
432 514.559 mo
432 518.398 li
452.16 514.559 mo
452.16 518.398 li
472.32 514.559 mo
472.32 518.398 li
492.48 514.559 mo
492.48 518.398 li
512.641 514.559 mo
512.641 518.398 li
532.801 514.559 mo
532.801 518.398 li
552.961 514.559 mo
552.961 518.398 li
573.121 514.559 mo
573.121 518.398 li
593.398 514.559 mo
593.398 518.398 li
613.559 514.559 mo
613.559 518.398 li
633.719 514.559 mo
633.719 518.398 li
653.879 514.559 mo
653.879 518.398 li
674.039 514.559 mo
674.039 518.398 li
@
gsave
48.602 26.16 mo
674.641 26.16 li
674.641 515.281 li
48.602 515.281 li
cp
clp
1 lc
48.602 442.68 mo
68.879 442.68 li
89.039 457.32 li
109.199 442.078 li
129.359 441.84 li
149.52 442.68 li
169.68 442.559 li
189.84 442.68 li
210 442.68 li
230.16 442.441 li
270.602 442.441 li
310.922 442.199 li
331.078 442.199 li
351.238 442.441 li
371.398 442.199 li
411.84 442.199 li
452.16 442.441 li
472.32 442.199 li
492.48 442.32 li
512.641 442.199 li
532.801 441.602 li
552.961 442.199 li
633.719 442.199 li
653.879 442.32 li
674.039 442.199 li
.719875 .440223 .0276493 0 cmyk
@
grestore
1 lw
43.531 437.59 mo
53.488 437.59 li
53.488 447.551 li
43.531 447.551 li
cp
.719875 .440223 .0276493 0 cmyk
@
63.691 437.469 mo
73.648 437.469 li
73.648 447.43 li
63.691 447.43 li
cp
@
83.852 452.231 mo
93.809 452.231 li
93.809 462.192 li
83.852 462.192 li
cp
@
104.012 436.988 mo
113.969 436.988 li
113.969 446.949 li
104.012 446.949 li
cp
@
124.172 436.629 mo
134.129 436.629 li
134.129 446.59 li
124.172 446.59 li
cp
@
144.449 437.469 mo
154.41 437.469 li
154.41 447.43 li
144.449 447.43 li
cp
@
164.609 437.469 mo
174.57 437.469 li
174.57 447.43 li
164.609 447.43 li
cp
@
184.77 437.469 mo
194.731 437.469 li
194.731 447.43 li
184.77 447.43 li
cp
@
204.93 437.469 mo
214.891 437.469 li
214.891 447.43 li
204.93 447.43 li
cp
@
225.09 437.352 mo
235.051 437.352 li
235.051 447.309 li
225.09 447.309 li
cp
@
245.25 437.352 mo
255.211 437.352 li
255.211 447.309 li
245.25 447.309 li
cp
@
265.41 437.231 mo
275.371 437.231 li
275.371 447.192 li
265.41 447.192 li
cp
@
285.57 437.231 mo
295.531 437.231 li
295.531 447.192 li
285.57 447.192 li
cp
@
305.73 437.109 mo
315.691 437.109 li
315.691 447.07 li
305.73 447.07 li
cp
@
326.012 437.109 mo
335.969 437.109 li
335.969 447.07 li
326.012 447.07 li
cp
@
346.172 437.352 mo
356.129 437.352 li
356.129 447.309 li
346.172 447.309 li
cp
@
366.328 437.109 mo
376.289 437.109 li
376.289 447.07 li
366.328 447.07 li
cp
@
386.488 437.109 mo
396.449 437.109 li
396.449 447.07 li
386.488 447.07 li
cp
@
406.648 436.988 mo
416.609 436.988 li
416.609 446.949 li
406.648 446.949 li
cp
@
426.809 437.109 mo
436.77 437.109 li
436.77 447.07 li
426.809 447.07 li
cp
@
446.969 437.231 mo
456.93 437.231 li
456.93 447.192 li
446.969 447.192 li
cp
@
467.129 436.988 mo
477.09 436.988 li
477.09 446.949 li
467.129 446.949 li
cp
@
487.289 437.231 mo
497.25 437.231 li
497.25 447.192 li
487.289 447.192 li
cp
@
507.57 436.988 mo
517.531 436.988 li
517.531 446.949 li
507.57 446.949 li
cp
@
527.73 436.512 mo
537.691 436.512 li
537.691 446.469 li
527.73 446.469 li
cp
@
547.891 437.109 mo
557.852 437.109 li
557.852 447.07 li
547.891 447.07 li
cp
@
568.051 436.988 mo
578.012 436.988 li
578.012 446.949 li
568.051 446.949 li
cp
@
588.211 436.988 mo
598.172 436.988 li
598.172 446.949 li
588.211 446.949 li
cp
@
608.371 437.109 mo
618.328 437.109 li
618.328 447.07 li
608.371 447.07 li
cp
@
628.531 437.109 mo
638.488 437.109 li
638.488 447.07 li
628.531 447.07 li
cp
@
648.691 437.109 mo
658.648 437.109 li
658.648 447.07 li
648.691 447.07 li
cp
@
668.852 436.988 mo
678.809 436.988 li
678.809 446.949 li
668.852 446.949 li
cp
@
gsave
48.602 26.16 mo
674.641 26.16 li
674.641 515.281 li
48.602 515.281 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
48.602 440.039 mo
68.879 443.641 li
89.039 444 li
129.359 444 li
149.52 444.121 li
169.68 443.879 li
189.84 444 li
210 444 li
230.16 442.922 li
250.441 442.801 li
270.602 442.32 li
290.762 442.441 li
310.922 442.078 li
331.078 443.16 li
371.398 443.879 li
391.559 442.801 li
411.84 441.961 li
432 441.961 li
452.16 442.078 li
472.32 442.199 li
492.48 442.199 li
512.641 441.961 li
532.801 442.199 li
552.961 442.801 li
573.121 441.359 li
593.398 441.961 li
613.559 442.199 li
653.879 442.199 li
674.039 442.32 li
@
grestore
43.531 434.949 mo
53.488 434.949 li
53.488 444.91 li
43.531 444.91 li
cp
@
63.691 438.551 mo
73.648 438.551 li
73.648 448.512 li
63.691 448.512 li
cp
@
83.852 438.91 mo
93.809 438.91 li
93.809 448.871 li
83.852 448.871 li
cp
@
104.012 438.91 mo
113.969 438.91 li
113.969 448.871 li
104.012 448.871 li
cp
@
124.172 438.91 mo
134.129 438.91 li
134.129 448.871 li
124.172 448.871 li
cp
@
144.449 439.031 mo
154.41 439.031 li
154.41 448.988 li
144.449 448.988 li
cp
@
164.609 438.789 mo
174.57 438.789 li
174.57 448.75 li
164.609 448.75 li
cp
@
184.77 438.91 mo
194.731 438.91 li
194.731 448.871 li
184.77 448.871 li
cp
@
204.93 438.789 mo
214.891 438.789 li
214.891 448.75 li
204.93 448.75 li
cp
@
225.09 437.828 mo
235.051 437.828 li
235.051 447.789 li
225.09 447.789 li
cp
@
245.25 437.711 mo
255.211 437.711 li
255.211 447.672 li
245.25 447.672 li
cp
@
265.41 437.231 mo
275.371 437.231 li
275.371 447.192 li
265.41 447.192 li
cp
@
285.57 437.231 mo
295.531 437.231 li
295.531 447.192 li
285.57 447.192 li
cp
@
305.73 436.871 mo
315.691 436.871 li
315.691 446.828 li
305.73 446.828 li
cp
@
326.012 437.949 mo
335.969 437.949 li
335.969 447.91 li
326.012 447.91 li
cp
@
346.172 438.309 mo
356.129 438.309 li
356.129 448.27 li
346.172 448.27 li
cp
@
366.328 438.672 mo
376.289 438.672 li
376.289 448.629 li
366.328 448.629 li
cp
@
386.488 437.59 mo
396.449 437.59 li
396.449 447.551 li
386.488 447.551 li
cp
@
406.648 436.75 mo
416.609 436.75 li
416.609 446.711 li
406.648 446.711 li
cp
@
426.809 436.871 mo
436.77 436.871 li
436.77 446.828 li
426.809 446.828 li
cp
@
446.969 436.988 mo
456.93 436.988 li
456.93 446.949 li
446.969 446.949 li
cp
@
467.129 436.988 mo
477.09 436.988 li
477.09 446.949 li
467.129 446.949 li
cp
@
487.289 436.988 mo
497.25 436.988 li
497.25 446.949 li
487.289 446.949 li
cp
@
507.57 436.871 mo
517.531 436.871 li
517.531 446.828 li
507.57 446.828 li
cp
@
527.73 436.988 mo
537.691 436.988 li
537.691 446.949 li
527.73 446.949 li
cp
@
547.891 437.711 mo
557.852 437.711 li
557.852 447.672 li
547.891 447.672 li
cp
@
568.051 436.148 mo
578.012 436.148 li
578.012 446.109 li
568.051 446.109 li
cp
@
588.211 436.871 mo
598.172 436.871 li
598.172 446.828 li
588.211 446.828 li
cp
@
608.371 437.109 mo
618.328 437.109 li
618.328 447.07 li
608.371 447.07 li
cp
@
628.531 436.988 mo
638.488 436.988 li
638.488 446.949 li
628.531 446.949 li
cp
@
648.691 437.109 mo
658.648 437.109 li
658.648 447.07 li
648.691 447.07 li
cp
@
668.852 437.109 mo
678.809 437.109 li
678.809 447.07 li
668.852 447.07 li
cp
@
gsave
48.602 26.16 mo
674.641 26.16 li
674.641 515.281 li
48.602 515.281 li
cp
clp
.96 lw
1 lc
48.602 442.922 mo
68.879 401.641 li
89.039 399.602 li
109.199 400.078 li
129.359 400.078 li
149.52 400.199 li
169.68 399.961 li
210 399.961 li
230.16 442.32 li
250.441 442.199 li
270.602 442.078 li
310.922 442.078 li
331.078 442.199 li
351.238 442.199 li
371.398 442.32 li
391.559 442.32 li
411.84 442.199 li
432 442.199 li
452.16 442.078 li
472.32 442.32 li
492.48 442.199 li
532.801 442.199 li
552.961 442.078 li
573.121 442.32 li
593.398 442.32 li
613.559 442.078 li
633.719 442.199 li
653.879 442.199 li
674.039 442.559 li
0 .990631 1 .000396735 cmyk
@
grestore
43.531 437.828 mo
53.488 437.828 li
53.488 447.789 li
43.531 447.789 li
cp
0 .990631 1 .000396735 cmyk
@
63.691 396.43 mo
73.648 396.43 li
73.648 406.391 li
63.691 406.391 li
cp
@
83.852 394.512 mo
93.809 394.512 li
93.809 404.469 li
83.852 404.469 li
cp
@
104.012 394.988 mo
113.969 394.988 li
113.969 404.949 li
104.012 404.949 li
cp
@
124.172 394.988 mo
134.129 394.988 li
134.129 404.949 li
124.172 404.949 li
cp
@
144.449 395.109 mo
154.41 395.109 li
154.41 405.07 li
144.449 405.07 li
cp
@
164.609 394.75 mo
174.57 394.75 li
174.57 404.711 li
164.609 404.711 li
cp
@
184.77 394.871 mo
194.731 394.871 li
194.731 404.828 li
184.77 404.828 li
cp
@
204.93 394.75 mo
214.891 394.75 li
214.891 404.711 li
204.93 404.711 li
cp
@
225.09 437.109 mo
235.051 437.109 li
235.051 447.07 li
225.09 447.07 li
cp
@
245.25 436.988 mo
255.211 436.988 li
255.211 446.949 li
245.25 446.949 li
cp
@
265.41 436.871 mo
275.371 436.871 li
275.371 446.828 li
265.41 446.828 li
cp
@
285.57 436.988 mo
295.531 436.988 li
295.531 446.949 li
285.57 446.949 li
cp
@
305.73 436.871 mo
315.691 436.871 li
315.691 446.828 li
305.73 446.828 li
cp
@
326.012 436.988 mo
335.969 436.988 li
335.969 446.949 li
326.012 446.949 li
cp
@
346.172 437.109 mo
356.129 437.109 li
356.129 447.07 li
346.172 447.07 li
cp
@
366.328 437.109 mo
376.289 437.109 li
376.289 447.07 li
366.328 447.07 li
cp
@
386.488 437.231 mo
396.449 437.231 li
396.449 447.192 li
386.488 447.192 li
cp
@
406.648 436.988 mo
416.609 436.988 li
416.609 446.949 li
406.648 446.949 li
cp
@
426.809 436.988 mo
436.77 436.988 li
436.77 446.949 li
426.809 446.949 li
cp
@
446.969 436.871 mo
456.93 436.871 li
456.93 446.828 li
446.969 446.828 li
cp
@
467.129 437.231 mo
477.09 437.231 li
477.09 447.192 li
467.129 447.192 li
cp
@
487.289 437.109 mo
497.25 437.109 li
497.25 447.07 li
487.289 447.07 li
cp
@
507.57 436.988 mo
517.531 436.988 li
517.531 446.949 li
507.57 446.949 li
cp
@
527.73 437.109 mo
537.691 437.109 li
537.691 447.07 li
527.73 447.07 li
cp
@
547.891 436.988 mo
557.852 436.988 li
557.852 446.949 li
547.891 446.949 li
cp
@
568.051 437.109 mo
578.012 437.109 li
578.012 447.07 li
568.051 447.07 li
cp
@
588.211 437.109 mo
598.172 437.109 li
598.172 447.07 li
588.211 447.07 li
cp
@
608.371 436.988 mo
618.328 436.988 li
618.328 446.949 li
608.371 446.949 li
cp
@
628.531 436.988 mo
638.488 436.988 li
638.488 446.949 li
628.531 446.949 li
cp
@
648.691 436.988 mo
658.648 436.988 li
658.648 446.949 li
648.691 446.949 li
cp
@
668.852 437.352 mo
678.809 437.352 li
678.809 447.309 li
668.852 447.309 li
cp
@
gsave
48.602 26.16 mo
674.641 26.16 li
674.641 515.281 li
48.602 515.281 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
48.602 490.559 mo
68.879 496.441 li
129.359 496.441 li
149.52 495.84 li
169.68 496.441 li
189.84 496.441 li
210 496.559 li
230.16 496.559 li
250.441 496.32 li
270.602 496.32 li
290.762 494.641 li
310.922 494.641 li
331.078 496.441 li
351.238 496.199 li
371.398 493.559 li
391.559 493.078 li
411.84 496.441 li
452.16 496.441 li
472.32 496.559 li
492.48 496.441 li
512.641 496.441 li
532.801 495.48 li
552.961 496.441 li
573.121 496.441 li
593.398 495.238 li
613.559 496.559 li
633.719 496.441 li
653.879 496.441 li
674.039 493.801 li
@
grestore
43.531 485.352 mo
53.488 485.352 li
53.488 495.309 li
43.531 495.309 li
cp
@
63.691 491.231 mo
73.648 491.231 li
73.648 501.192 li
63.691 501.192 li
cp
@
83.852 491.352 mo
93.809 491.352 li
93.809 501.309 li
83.852 501.309 li
cp
@
104.012 491.231 mo
113.969 491.231 li
113.969 501.192 li
104.012 501.192 li
cp
@
124.172 491.352 mo
134.129 491.352 li
134.129 501.309 li
124.172 501.309 li
cp
@
144.449 490.629 mo
154.41 490.629 li
154.41 500.59 li
144.449 500.59 li
cp
@
164.609 491.352 mo
174.57 491.352 li
174.57 501.309 li
164.609 501.309 li
cp
@
184.77 491.352 mo
194.731 491.352 li
194.731 501.309 li
184.77 501.309 li
cp
@
204.93 491.469 mo
214.891 491.469 li
214.891 501.43 li
204.93 501.43 li
cp
@
225.09 491.352 mo
235.051 491.352 li
235.051 501.309 li
225.09 501.309 li
cp
@
245.25 491.231 mo
255.211 491.231 li
255.211 501.192 li
245.25 501.192 li
cp
@
265.41 491.109 mo
275.371 491.109 li
275.371 501.07 li
265.41 501.07 li
cp
@
285.57 489.43 mo
295.531 489.43 li
295.531 499.391 li
285.57 499.391 li
cp
@
305.73 489.43 mo
315.691 489.43 li
315.691 499.391 li
305.73 499.391 li
cp
@
326.012 491.231 mo
335.969 491.231 li
335.969 501.192 li
326.012 501.192 li
cp
@
346.172 491.109 mo
356.129 491.109 li
356.129 501.07 li
346.172 501.07 li
cp
@
366.328 488.469 mo
376.289 488.469 li
376.289 498.43 li
366.328 498.43 li
cp
@
386.488 487.871 mo
396.449 487.871 li
396.449 497.828 li
386.488 497.828 li
cp
@
406.648 491.352 mo
416.609 491.352 li
416.609 501.309 li
406.648 501.309 li
cp
@
426.809 491.352 mo
436.77 491.352 li
436.77 501.309 li
426.809 501.309 li
cp
@
446.969 491.352 mo
456.93 491.352 li
456.93 501.309 li
446.969 501.309 li
cp
@
467.129 491.352 mo
477.09 491.352 li
477.09 501.309 li
467.129 501.309 li
cp
@
487.289 491.352 mo
497.25 491.352 li
497.25 501.309 li
487.289 501.309 li
cp
@
507.57 491.352 mo
517.531 491.352 li
517.531 501.309 li
507.57 501.309 li
cp
@
527.73 490.27 mo
537.691 490.27 li
537.691 500.231 li
527.73 500.231 li
cp
@
547.891 491.352 mo
557.852 491.352 li
557.852 501.309 li
547.891 501.309 li
cp
@
568.051 491.352 mo
578.012 491.352 li
578.012 501.309 li
568.051 501.309 li
cp
@
588.211 490.148 mo
598.172 490.148 li
598.172 500.109 li
588.211 500.109 li
cp
@
608.371 491.352 mo
618.328 491.352 li
618.328 501.309 li
608.371 501.309 li
cp
@
628.531 491.352 mo
638.488 491.352 li
638.488 501.309 li
628.531 501.309 li
cp
@
648.691 491.352 mo
658.648 491.352 li
658.648 501.309 li
648.691 501.309 li
cp
@
668.852 488.59 mo
678.809 488.59 li
678.809 498.551 li
668.852 498.551 li
cp
@
31.41 506.547 mo
37.488 506.547 li
37.488 521.195 li
31.41 521.195 li
cp
0 0 0 0 cmyk
ef
37.086 514.23 mo
37.082 514.812 37.035 515.344 36.949 515.824 cv
36.855 516.309 36.703 516.723 36.492 517.066 cv
36.273 517.41 35.996 517.68 35.656 517.867 cv
35.309 518.055 34.887 518.145 34.387 518.148 cv
33.91 518.145 33.508 518.062 33.184 517.895 cv
32.855 517.727 32.594 517.477 32.395 517.145 cv
32.191 516.816 32.047 516.41 31.969 515.926 cv
31.883 515.445 31.844 514.891 31.844 514.266 cv
31.844 513.687 31.891 513.16 31.984 512.676 cv
32.078 512.199 32.23 511.785 32.441 511.434 cv
32.652 511.09 32.93 510.82 33.273 510.629 cv
33.617 510.441 34.039 510.348 34.539 510.344 cv
35.016 510.348 35.418 510.434 35.746 510.602 cv
36.074 510.773 36.336 511.023 36.535 511.352 cv
36.734 511.684 36.875 512.09 36.961 512.57 cv
37.039 513.055 37.082 513.605 37.086 514.23 cv
cp
36.055 514.301 mo
36.051 513.926 36.039 513.586 36.016 513.281 cv
35.988 512.98 35.945 512.715 35.895 512.484 cv
35.84 512.258 35.773 512.062 35.688 511.891 cv
35.602 511.727 35.5 511.59 35.387 511.48 cv
35.266 511.379 35.133 511.301 34.984 511.246 cv
34.836 511.199 34.668 511.172 34.48 511.172 cv
34.148 511.172 33.879 511.25 33.672 511.406 cv
33.461 511.562 33.297 511.777 33.18 512.051 cv
33.063 512.324 32.98 512.645 32.938 513.012 cv
32.895 513.379 32.875 513.773 32.875 514.195 cv
32.875 514.766 32.902 515.25 32.961 515.641 cv
33.02 516.039 33.113 516.359 33.238 516.609 cv
33.363 516.859 33.523 517.043 33.727 517.156 cv
33.922 517.27 34.164 517.324 34.445 517.324 cv
34.664 517.324 34.855 517.289 35.023 517.219 cv
35.188 517.148 35.328 517.051 35.449 516.918 cv
35.566 516.789 35.668 516.629 35.746 516.445 cv
35.824 516.266 35.887 516.062 35.934 515.836 cv
35.98 515.613 36.012 515.375 36.027 515.113 cv
36.043 514.855 36.051 514.582 36.055 514.301 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
31.41 465.852 mo
37.488 465.852 li
37.488 480.5 li
31.41 480.5 li
cp
0 0 0 0 cmyk
ef
37.156 475.184 mo
37.152 475.316 37.133 475.418 37.098 475.488 cv
37.055 475.562 37 475.602 36.938 475.598 cv
36.078 475.598 li
36.078 477.191 li
36.074 477.227 36.066 477.254 36.055 477.273 cv
36.035 477.297 36.008 477.312 35.969 477.328 cv
35.93 477.344 35.875 477.355 35.813 477.363 cv
35.746 477.371 35.664 477.375 35.566 477.375 cv
35.465 477.375 35.387 477.371 35.324 477.363 cv
35.262 477.355 35.211 477.344 35.172 477.328 cv
35.133 477.312 35.105 477.297 35.09 477.273 cv
35.074 477.254 35.066 477.227 35.07 477.191 cv
35.07 475.598 li
31.969 475.598 li
31.922 475.602 31.887 475.594 31.855 475.582 cv
31.824 475.574 31.793 475.555 31.77 475.52 cv
31.738 475.492 31.723 475.445 31.715 475.383 cv
31.707 475.324 31.703 475.25 31.703 475.152 cv
31.703 475.082 31.703 475.016 31.707 474.957 cv
31.711 474.898 31.719 474.844 31.73 474.797 cv
31.742 474.75 31.758 474.703 31.777 474.656 cv
31.797 474.609 31.82 474.562 31.848 474.512 cv
34.551 469.902 li
34.57 469.875 34.598 469.848 34.637 469.82 cv
34.672 469.801 34.723 469.781 34.785 469.762 cv
34.844 469.75 34.914 469.738 35.004 469.73 cv
35.09 469.727 35.195 469.723 35.316 469.723 cv
35.445 469.723 35.559 469.73 35.656 469.738 cv
35.754 469.754 35.832 469.766 35.895 469.777 cv
35.949 469.797 35.996 469.816 36.031 469.84 cv
36.059 469.863 36.074 469.895 36.078 469.926 cv
36.078 474.77 li
36.938 474.77 li
37 474.773 37.055 474.809 37.094 474.871 cv
37.133 474.941 37.152 475.043 37.156 475.184 cv
cp
35.07 470.605 mo
35.063 470.605 li
32.625 474.77 li
35.07 474.77 li
cp
.629114 .553033 .543389 .289647 cmyk
f
31.41 425.16 mo
37.488 425.16 li
37.488 439.808 li
31.41 439.808 li
cp
0 0 0 0 cmyk
ef
37.012 434.684 mo
37.012 435.012 36.953 435.305 36.836 435.559 cv
36.719 435.816 36.547 436.031 36.328 436.207 cv
36.105 436.387 35.836 436.52 35.512 436.605 cv
35.184 436.691 34.813 436.734 34.398 436.738 cv
34.008 436.734 33.656 436.695 33.348 436.617 cv
33.039 436.539 32.777 436.418 32.563 436.254 cv
32.348 436.094 32.184 435.898 32.07 435.66 cv
31.957 435.43 31.902 435.16 31.902 434.859 cv
31.902 434.625 31.941 434.406 32.02 434.203 cv
32.098 434.004 32.207 433.82 32.355 433.652 cv
32.5 433.488 32.684 433.332 32.898 433.184 cv
33.109 433.035 33.352 432.895 33.625 432.762 cv
33.391 432.645 33.184 432.52 33.004 432.379 cv
32.824 432.246 32.672 432.098 32.547 431.937 cv
32.422 431.781 32.324 431.613 32.262 431.43 cv
32.191 431.254 32.16 431.059 32.164 430.848 cv
32.16 430.586 32.207 430.336 32.309 430.102 cv
32.402 429.867 32.547 429.664 32.742 429.492 cv
32.93 429.32 33.176 429.187 33.48 429.086 cv
33.777 428.988 34.129 428.937 34.527 428.934 cv
34.91 428.937 35.238 428.984 35.52 429.074 cv
35.793 429.168 36.023 429.293 36.211 429.449 cv
36.391 429.609 36.527 429.793 36.613 430.008 cv
36.699 430.227 36.742 430.457 36.742 430.699 cv
36.742 430.898 36.707 431.09 36.645 431.273 cv
36.574 431.461 36.48 431.637 36.359 431.797 cv
36.23 431.965 36.078 432.117 35.898 432.258 cv
35.719 432.398 35.512 432.531 35.277 432.656 cv
35.555 432.797 35.801 432.937 36.02 433.078 cv
36.234 433.223 36.414 433.379 36.563 433.543 cv
36.703 433.711 36.816 433.887 36.895 434.07 cv
36.973 434.258 37.012 434.461 37.012 434.684 cv
cp
35.746 430.793 mo
35.746 430.629 35.715 430.48 35.66 430.348 cv
35.602 430.215 35.52 430.102 35.414 430.008 cv
35.301 429.914 35.164 429.844 35.004 429.797 cv
34.84 429.75 34.656 429.727 34.453 429.723 cv
34.027 429.727 33.707 429.82 33.492 430.008 cv
33.273 430.199 33.168 430.461 33.168 430.793 cv
33.168 430.945 33.191 431.09 33.246 431.219 cv
33.297 431.352 33.379 431.473 33.492 431.59 cv
33.602 431.707 33.742 431.824 33.914 431.934 cv
34.082 432.047 34.285 432.16 34.523 432.281 cv
34.914 432.078 35.219 431.855 35.43 431.609 cv
35.641 431.363 35.746 431.09 35.746 430.793 cv
cp
35.992 434.789 mo
35.992 434.609 35.957 434.449 35.891 434.301 cv
35.824 434.16 35.723 434.023 35.59 433.891 cv
35.453 433.766 35.285 433.641 35.086 433.52 cv
34.883 433.402 34.652 433.277 34.387 433.148 cv
34.137 433.273 33.918 433.395 33.738 433.512 cv
33.551 433.633 33.398 433.758 33.281 433.887 cv
33.156 434.02 33.066 434.156 33.012 434.297 cv
32.949 434.437 32.922 434.594 32.922 434.766 cv
32.922 435.145 33.051 435.437 33.313 435.645 cv
33.57 435.855 33.957 435.961 34.477 435.957 cv
34.973 435.961 35.352 435.855 35.609 435.645 cv
35.863 435.434 35.992 435.148 35.992 434.789 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
25.332 384.461 mo
37.492 384.461 li
37.492 399.109 li
25.332 399.109 li
cp
0 0 0 0 cmyk
ef
30.773 395.531 mo
30.77 395.605 30.766 395.668 30.758 395.719 cv
30.746 395.773 30.73 395.816 30.711 395.844 cv
30.688 395.879 30.664 395.902 30.641 395.91 cv
30.617 395.926 30.59 395.93 30.563 395.93 cv
26.602 395.93 li
26.574 395.93 26.551 395.926 26.527 395.91 cv
26.504 395.902 26.48 395.879 26.461 395.844 cv
26.438 395.816 26.422 395.773 26.41 395.719 cv
26.395 395.668 26.387 395.605 26.391 395.531 cv
26.387 395.461 26.395 395.402 26.41 395.352 cv
26.422 395.301 26.434 395.258 26.453 395.223 cv
26.469 395.191 26.492 395.168 26.516 395.148 cv
26.539 395.133 26.566 395.121 26.602 395.121 cv
28.188 395.121 li
28.188 389.355 li
26.719 390.227 li
26.645 390.273 26.586 390.297 26.543 390.301 cv
26.496 390.312 26.461 390.305 26.434 390.273 cv
26.402 390.25 26.383 390.207 26.375 390.148 cv
26.367 390.09 26.363 390.016 26.363 389.922 cv
26.363 389.859 26.363 389.801 26.371 389.754 cv
26.375 389.707 26.387 389.668 26.398 389.637 cv
26.406 389.605 26.422 389.578 26.445 389.555 cv
26.469 389.531 26.496 389.508 26.531 389.484 cv
28.281 388.367 li
28.293 388.355 28.313 388.344 28.34 388.336 cv
28.359 388.328 28.391 388.32 28.426 388.312 cv
28.457 388.305 28.496 388.301 28.547 388.301 cv
28.59 388.301 28.648 388.301 28.727 388.297 cv
28.816 388.301 28.895 388.305 28.961 388.309 cv
29.02 388.32 29.07 388.332 29.105 388.34 cv
29.137 388.355 29.16 388.371 29.176 388.391 cv
29.188 388.414 29.191 388.437 29.195 388.461 cv
29.195 395.121 li
30.563 395.121 li
30.59 395.121 30.621 395.133 30.652 395.148 cv
30.68 395.168 30.699 395.191 30.719 395.223 cv
30.734 395.258 30.75 395.301 30.758 395.352 cv
30.766 395.402 30.77 395.461 30.773 395.531 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.879 395.496 mo
36.879 395.566 36.871 395.629 36.863 395.684 cv
36.848 395.738 36.836 395.785 36.82 395.82 cv
36.805 395.859 36.781 395.887 36.75 395.902 cv
36.719 395.922 36.688 395.93 36.656 395.93 cv
32.465 395.93 li
32.41 395.93 32.363 395.926 32.324 395.91 cv
32.281 395.902 32.246 395.879 32.219 395.844 cv
32.188 395.816 32.164 395.77 32.152 395.707 cv
32.137 395.648 32.133 395.578 32.133 395.492 cv
32.133 395.418 32.133 395.348 32.141 395.285 cv
32.145 395.227 32.16 395.176 32.18 395.129 cv
32.199 395.086 32.223 395.043 32.254 394.996 cv
32.281 394.957 32.32 394.906 32.375 394.852 cv
33.891 393.293 li
34.238 392.934 34.516 392.613 34.73 392.328 cv
34.941 392.043 35.105 391.781 35.223 391.547 cv
35.332 391.312 35.41 391.102 35.449 390.91 cv
35.484 390.719 35.5 390.539 35.504 390.367 cv
35.5 390.203 35.473 390.043 35.418 389.891 cv
35.359 389.742 35.277 389.609 35.172 389.496 cv
35.063 389.387 34.93 389.297 34.77 389.227 cv
34.605 389.16 34.418 389.129 34.215 389.125 cv
33.965 389.129 33.746 389.16 33.551 389.227 cv
33.355 389.297 33.184 389.371 33.035 389.445 cv
32.887 389.527 32.762 389.598 32.668 389.66 cv
32.566 389.727 32.496 389.762 32.449 389.758 cv
32.418 389.762 32.391 389.754 32.371 389.734 cv
32.348 389.723 32.328 389.695 32.316 389.66 cv
32.301 389.629 32.293 389.582 32.285 389.52 cv
32.277 389.461 32.273 389.391 32.273 389.309 cv
32.273 389.25 32.273 389.199 32.277 389.156 cv
32.281 389.117 32.289 389.082 32.301 389.047 cv
32.309 389.02 32.32 388.988 32.34 388.957 cv
32.352 388.93 32.383 388.898 32.434 388.855 cv
32.477 388.816 32.559 388.758 32.676 388.687 cv
32.789 388.617 32.934 388.551 33.109 388.48 cv
33.281 388.414 33.473 388.355 33.684 388.305 cv
33.891 388.262 34.109 388.238 34.34 388.234 cv
34.707 388.238 35.027 388.289 35.305 388.391 cv
35.578 388.496 35.809 388.637 35.988 388.816 cv
36.168 388.996 36.305 389.207 36.398 389.445 cv
36.488 389.684 36.531 389.937 36.535 390.203 cv
36.531 390.453 36.512 390.695 36.469 390.93 cv
36.422 391.172 36.328 391.43 36.195 391.707 cv
36.055 391.988 35.855 392.301 35.594 392.641 cv
35.332 392.984 34.984 393.375 34.551 393.82 cv
33.352 395.074 li
36.652 395.074 li
36.68 395.074 36.711 395.086 36.742 395.102 cv
36.77 395.121 36.793 395.145 36.816 395.18 cv
36.832 395.219 36.848 395.266 36.863 395.312 cv
36.871 395.367 36.879 395.426 36.879 395.496 cv
cp
f
25.332 343.77 mo
37.492 343.77 li
37.492 358.422 li
25.332 358.422 li
cp
0 0 0 0 cmyk
ef
30.773 354.82 mo
30.77 354.895 30.766 354.957 30.758 355.008 cv
30.746 355.062 30.73 355.105 30.711 355.133 cv
30.688 355.168 30.664 355.191 30.641 355.199 cv
30.617 355.215 30.59 355.219 30.563 355.219 cv
26.602 355.219 li
26.574 355.219 26.551 355.215 26.527 355.199 cv
26.504 355.191 26.48 355.168 26.461 355.133 cv
26.438 355.105 26.422 355.062 26.41 355.008 cv
26.395 354.957 26.387 354.895 26.391 354.82 cv
26.387 354.75 26.395 354.691 26.41 354.641 cv
26.422 354.59 26.434 354.547 26.453 354.512 cv
26.469 354.48 26.492 354.457 26.516 354.437 cv
26.539 354.422 26.566 354.41 26.602 354.41 cv
28.188 354.41 li
28.188 348.645 li
26.719 349.516 li
26.645 349.562 26.586 349.586 26.543 349.59 cv
26.496 349.602 26.461 349.594 26.434 349.562 cv
26.402 349.539 26.383 349.496 26.375 349.437 cv
26.367 349.379 26.363 349.305 26.363 349.211 cv
26.363 349.148 26.363 349.09 26.371 349.043 cv
26.375 348.996 26.387 348.957 26.398 348.926 cv
26.406 348.895 26.422 348.867 26.445 348.844 cv
26.469 348.82 26.496 348.797 26.531 348.773 cv
28.281 347.656 li
28.293 347.645 28.313 347.633 28.34 347.625 cv
28.359 347.617 28.391 347.609 28.426 347.602 cv
28.457 347.594 28.496 347.59 28.547 347.59 cv
28.59 347.59 28.648 347.59 28.727 347.586 cv
28.816 347.59 28.895 347.594 28.961 347.598 cv
29.02 347.609 29.07 347.621 29.105 347.629 cv
29.137 347.645 29.16 347.66 29.176 347.68 cv
29.188 347.703 29.191 347.727 29.195 347.75 cv
29.195 354.41 li
30.563 354.41 li
30.59 354.41 30.621 354.422 30.652 354.437 cv
30.68 354.457 30.699 354.48 30.719 354.512 cv
30.734 354.547 30.75 354.59 30.758 354.641 cv
30.766 354.691 30.77 354.75 30.773 354.82 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.074 352.766 mo
37.07 353.098 37.02 353.418 36.922 353.73 cv
36.816 354.043 36.66 354.316 36.453 354.551 cv
36.238 354.785 35.973 354.977 35.648 355.117 cv
35.32 355.258 34.938 355.324 34.5 355.328 cv
34.184 355.324 33.902 355.289 33.664 355.211 cv
33.418 355.137 33.207 355.023 33.031 354.879 cv
32.848 354.738 32.699 354.562 32.582 354.348 cv
32.461 354.141 32.363 353.898 32.293 353.625 cv
32.215 353.355 32.164 353.062 32.137 352.738 cv
32.102 352.422 32.086 352.078 32.09 351.711 cv
32.086 351.387 32.105 351.059 32.145 350.727 cv
32.18 350.395 32.242 350.074 32.332 349.766 cv
32.418 349.457 32.539 349.168 32.695 348.895 cv
32.852 348.625 33.043 348.387 33.277 348.184 cv
33.508 347.984 33.789 347.824 34.113 347.707 cv
34.434 347.59 34.809 347.531 35.246 347.531 cv
35.387 347.531 35.535 347.543 35.684 347.559 cv
35.832 347.582 35.969 347.605 36.094 347.629 cv
36.219 347.66 36.324 347.691 36.41 347.727 cv
36.496 347.762 36.551 347.789 36.578 347.812 cv
36.605 347.836 36.625 347.859 36.641 347.883 cv
36.648 347.906 36.66 347.934 36.672 347.965 cv
36.676 347.996 36.684 348.031 36.691 348.062 cv
36.695 348.102 36.695 348.145 36.699 348.199 cv
36.695 348.27 36.695 348.332 36.695 348.383 cv
36.691 348.434 36.684 348.473 36.672 348.504 cv
36.656 348.535 36.637 348.559 36.617 348.574 cv
36.594 348.59 36.566 348.598 36.535 348.598 cv
36.488 348.598 36.43 348.586 36.355 348.559 cv
36.281 348.531 36.191 348.5 36.086 348.465 cv
35.98 348.434 35.852 348.402 35.703 348.375 cv
35.551 348.352 35.379 348.34 35.18 348.336 cv
34.816 348.34 34.504 348.414 34.242 348.559 cv
33.977 348.711 33.762 348.91 33.598 349.156 cv
33.434 349.41 33.309 349.699 33.23 350.027 cv
33.148 350.355 33.105 350.699 33.094 351.059 cv
33.195 351 33.309 350.941 33.438 350.883 cv
33.563 350.828 33.699 350.777 33.852 350.727 cv
34 350.684 34.16 350.645 34.328 350.613 cv
34.496 350.582 34.676 350.566 34.871 350.566 cv
35.277 350.566 35.625 350.625 35.906 350.734 cv
36.188 350.848 36.414 351 36.586 351.195 cv
36.758 351.395 36.883 351.629 36.961 351.895 cv
37.035 352.168 37.07 352.457 37.074 352.766 cv
cp
36.051 352.859 mo
36.047 352.633 36.023 352.426 35.984 352.238 cv
35.938 352.055 35.863 351.898 35.758 351.77 cv
35.652 351.641 35.512 351.539 35.336 351.469 cv
35.16 351.398 34.945 351.363 34.688 351.363 cv
34.543 351.363 34.398 351.379 34.254 351.402 cv
34.105 351.43 33.965 351.465 33.832 351.508 cv
33.699 351.555 33.57 351.605 33.445 351.668 cv
33.32 351.73 33.207 351.797 33.113 351.859 cv
33.109 352.367 33.141 352.789 33.207 353.129 cv
33.27 353.469 33.363 353.742 33.488 353.945 cv
33.609 354.152 33.766 354.297 33.949 354.383 cv
34.129 354.473 34.344 354.516 34.594 354.516 cv
34.844 354.516 35.059 354.469 35.242 354.375 cv
35.426 354.281 35.578 354.156 35.699 353.996 cv
35.82 353.84 35.91 353.664 35.965 353.465 cv
36.02 353.27 36.047 353.066 36.051 352.859 cv
cp
f
25.332 303.07 mo
37.492 303.07 li
37.492 317.718 li
25.332 317.718 li
cp
0 0 0 0 cmyk
ef
30.77 314.105 mo
30.77 314.176 30.762 314.238 30.754 314.293 cv
30.738 314.348 30.727 314.395 30.711 314.43 cv
30.695 314.469 30.672 314.496 30.641 314.512 cv
30.609 314.531 30.578 314.539 30.547 314.539 cv
26.348 314.539 li
26.289 314.539 26.242 314.535 26.203 314.52 cv
26.16 314.508 26.125 314.484 26.098 314.449 cv
26.066 314.422 26.043 314.375 26.031 314.316 cv
26.016 314.258 26.012 314.187 26.012 314.098 cv
26.012 314.023 26.012 313.953 26.02 313.895 cv
26.023 313.836 26.039 313.785 26.059 313.738 cv
26.078 313.695 26.102 313.652 26.137 313.605 cv
26.164 313.562 26.203 313.512 26.254 313.457 cv
27.773 311.898 li
28.121 311.539 28.402 311.215 28.617 310.93 cv
28.824 310.645 28.988 310.387 29.105 310.148 cv
29.223 309.918 29.297 309.703 29.336 309.508 cv
29.367 309.316 29.387 309.137 29.391 308.969 cv
29.387 308.801 29.359 308.641 29.305 308.488 cv
29.246 308.34 29.164 308.207 29.059 308.094 cv
28.949 307.98 28.813 307.891 28.656 307.824 cv
28.492 307.758 28.309 307.727 28.098 307.723 cv
27.852 307.727 27.629 307.758 27.434 307.824 cv
27.234 307.891 27.063 307.965 26.918 308.039 cv
26.77 308.121 26.648 308.191 26.551 308.258 cv
26.449 308.324 26.375 308.359 26.328 308.355 cv
26.301 308.359 26.273 308.352 26.254 308.332 cv
26.227 308.32 26.211 308.293 26.199 308.258 cv
26.184 308.223 26.172 308.176 26.164 308.117 cv
26.156 308.059 26.152 307.988 26.152 307.906 cv
26.152 307.848 26.152 307.797 26.156 307.754 cv
26.16 307.711 26.168 307.676 26.18 307.641 cv
26.188 307.613 26.199 307.582 26.219 307.555 cv
26.23 307.527 26.262 307.492 26.313 307.449 cv
26.355 307.41 26.438 307.355 26.555 307.281 cv
26.668 307.215 26.813 307.145 26.988 307.074 cv
27.16 307.008 27.352 306.953 27.563 306.902 cv
27.77 306.859 27.992 306.836 28.227 306.832 cv
28.594 306.836 28.914 306.887 29.191 306.988 cv
29.465 307.094 29.695 307.234 29.879 307.41 cv
30.059 307.594 30.191 307.805 30.285 308.039 cv
30.371 308.281 30.418 308.535 30.422 308.805 cv
30.418 309.051 30.395 309.293 30.355 309.531 cv
30.309 309.773 30.219 310.035 30.082 310.312 cv
29.941 310.594 29.742 310.902 29.48 311.246 cv
29.219 311.59 28.871 311.984 28.438 312.426 cv
27.234 313.684 li
30.539 313.684 li
30.566 313.684 30.598 313.695 30.629 313.711 cv
30.66 313.73 30.684 313.754 30.707 313.789 cv
30.723 313.824 30.738 313.871 30.754 313.922 cv
30.762 313.977 30.77 314.035 30.77 314.105 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.141 310.723 mo
37.137 311.309 37.09 311.84 37.004 312.32 cv
36.91 312.805 36.758 313.219 36.547 313.562 cv
36.328 313.91 36.051 314.18 35.707 314.367 cv
35.363 314.559 34.938 314.648 34.438 314.652 cv
33.953 314.648 33.551 314.566 33.227 314.398 cv
32.898 314.227 32.637 313.977 32.438 313.645 cv
32.238 313.316 32.094 312.91 32.012 312.426 cv
31.926 311.945 31.887 311.391 31.887 310.758 cv
31.887 310.184 31.934 309.652 32.027 309.164 cv
32.121 308.684 32.273 308.266 32.484 307.918 cv
32.695 307.574 32.973 307.309 33.32 307.117 cv
33.66 306.93 34.082 306.836 34.59 306.832 cv
35.066 306.836 35.469 306.918 35.797 307.086 cv
36.121 307.258 36.387 307.508 36.59 307.836 cv
36.789 308.168 36.93 308.578 37.016 309.059 cv
37.094 309.547 37.137 310.102 37.141 310.723 cv
cp
36.109 310.793 mo
36.105 310.418 36.09 310.078 36.066 309.773 cv
36.035 309.477 35.996 309.207 35.945 308.973 cv
35.891 308.742 35.824 308.547 35.742 308.379 cv
35.656 308.215 35.555 308.078 35.438 307.969 cv
35.32 307.863 35.184 307.781 35.035 307.73 cv
34.883 307.684 34.715 307.66 34.531 307.656 cv
34.195 307.66 33.926 307.738 33.719 307.895 cv
33.508 308.051 33.344 308.266 33.227 308.539 cv
33.105 308.812 33.023 309.137 32.984 309.504 cv
32.938 309.875 32.918 310.27 32.922 310.687 cv
32.918 311.258 32.945 311.738 33.008 312.137 cv
33.063 312.535 33.156 312.859 33.289 313.105 cv
33.414 313.359 33.578 313.543 33.773 313.652 cv
33.969 313.77 34.207 313.824 34.496 313.824 cv
34.711 313.824 34.902 313.789 35.07 313.719 cv
35.234 313.648 35.379 313.551 35.5 313.418 cv
35.617 313.289 35.715 313.129 35.797 312.945 cv
35.871 312.762 35.934 312.559 35.984 312.332 cv
36.027 312.109 36.063 311.867 36.082 311.605 cv
36.098 311.348 36.105 311.078 36.109 310.793 cv
cp
f
25.332 262.379 mo
37.492 262.379 li
37.492 277.031 li
25.332 277.031 li
cp
0 0 0 0 cmyk
ef
30.758 273.406 mo
30.758 273.477 30.75 273.539 30.742 273.594 cv
30.727 273.648 30.715 273.695 30.699 273.73 cv
30.684 273.77 30.66 273.797 30.629 273.812 cv
30.598 273.832 30.566 273.84 30.535 273.84 cv
26.344 273.84 li
26.289 273.84 26.242 273.836 26.203 273.82 cv
26.16 273.812 26.125 273.789 26.098 273.754 cv
26.066 273.727 26.043 273.68 26.031 273.617 cv
26.016 273.559 26.012 273.488 26.012 273.402 cv
26.012 273.328 26.012 273.258 26.02 273.195 cv
26.023 273.137 26.039 273.086 26.059 273.039 cv
26.078 272.996 26.102 272.953 26.133 272.906 cv
26.16 272.867 26.199 272.816 26.254 272.762 cv
27.77 271.203 li
28.117 270.844 28.395 270.523 28.609 270.238 cv
28.82 269.953 28.984 269.691 29.102 269.457 cv
29.211 269.223 29.289 269.012 29.328 268.82 cv
29.363 268.629 29.379 268.449 29.383 268.277 cv
29.379 268.113 29.352 267.953 29.297 267.801 cv
29.238 267.652 29.156 267.52 29.051 267.406 cv
28.941 267.297 28.809 267.207 28.648 267.137 cv
28.484 267.07 28.297 267.039 28.094 267.035 cv
27.844 267.039 27.625 267.07 27.43 267.137 cv
27.234 267.207 27.063 267.281 26.914 267.355 cv
26.766 267.437 26.641 267.508 26.547 267.57 cv
26.445 267.637 26.375 267.672 26.328 267.668 cv
26.297 267.672 26.27 267.664 26.25 267.645 cv
26.227 267.633 26.207 267.605 26.195 267.57 cv
26.18 267.539 26.172 267.492 26.164 267.43 cv
26.156 267.371 26.152 267.301 26.152 267.219 cv
26.152 267.16 26.152 267.109 26.156 267.066 cv
26.16 267.027 26.168 266.992 26.18 266.957 cv
26.188 266.93 26.199 266.898 26.219 266.867 cv
26.23 266.84 26.262 266.809 26.313 266.766 cv
26.355 266.727 26.438 266.668 26.555 266.598 cv
26.668 266.527 26.813 266.461 26.988 266.391 cv
27.16 266.324 27.352 266.266 27.563 266.215 cv
27.77 266.172 27.988 266.148 28.219 266.145 cv
28.586 266.148 28.906 266.199 29.184 266.301 cv
29.457 266.406 29.688 266.547 29.867 266.727 cv
30.047 266.906 30.184 267.117 30.277 267.355 cv
30.367 267.594 30.41 267.848 30.414 268.113 cv
30.41 268.363 30.391 268.605 30.348 268.84 cv
30.301 269.082 30.207 269.34 30.074 269.617 cv
29.934 269.898 29.734 270.211 29.473 270.551 cv
29.211 270.895 28.863 271.285 28.43 271.73 cv
27.23 272.984 li
30.531 272.984 li
30.559 272.984 30.59 272.996 30.621 273.012 cv
30.648 273.031 30.672 273.055 30.695 273.09 cv
30.711 273.129 30.727 273.176 30.742 273.223 cv
30.75 273.277 30.758 273.336 30.758 273.406 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.199 271.684 mo
37.195 271.816 37.176 271.918 37.141 271.988 cv
37.098 272.062 37.043 272.102 36.98 272.098 cv
36.121 272.098 li
36.121 273.691 li
36.117 273.727 36.109 273.754 36.098 273.773 cv
36.078 273.797 36.051 273.812 36.012 273.828 cv
35.973 273.844 35.918 273.855 35.855 273.863 cv
35.789 273.871 35.707 273.875 35.609 273.875 cv
35.508 273.875 35.43 273.871 35.367 273.863 cv
35.305 273.855 35.254 273.844 35.215 273.828 cv
35.176 273.812 35.148 273.797 35.133 273.773 cv
35.117 273.754 35.109 273.727 35.113 273.691 cv
35.113 272.098 li
32.012 272.098 li
31.965 272.102 31.93 272.094 31.898 272.082 cv
31.867 272.074 31.836 272.055 31.813 272.02 cv
31.781 271.992 31.766 271.945 31.758 271.883 cv
31.75 271.824 31.746 271.75 31.746 271.652 cv
31.746 271.582 31.746 271.516 31.75 271.457 cv
31.754 271.398 31.762 271.344 31.773 271.297 cv
31.785 271.25 31.801 271.203 31.82 271.156 cv
31.84 271.109 31.863 271.062 31.891 271.012 cv
34.594 266.402 li
34.613 266.375 34.641 266.348 34.68 266.32 cv
34.715 266.301 34.766 266.281 34.828 266.262 cv
34.887 266.25 34.957 266.238 35.047 266.23 cv
35.133 266.227 35.238 266.223 35.359 266.223 cv
35.488 266.223 35.602 266.23 35.699 266.238 cv
35.797 266.254 35.875 266.266 35.938 266.277 cv
35.992 266.297 36.039 266.316 36.074 266.34 cv
36.102 266.363 36.117 266.395 36.121 266.426 cv
36.121 271.27 li
36.98 271.27 li
37.043 271.273 37.098 271.309 37.137 271.371 cv
37.176 271.441 37.195 271.543 37.199 271.684 cv
cp
35.113 267.105 mo
35.105 267.105 li
32.668 271.27 li
35.113 271.27 li
cp
f
25.332 221.691 mo
37.492 221.691 li
37.492 236.339 li
25.332 236.339 li
cp
0 0 0 0 cmyk
ef
30.758 232.707 mo
30.758 232.777 30.75 232.84 30.742 232.895 cv
30.727 232.949 30.715 232.996 30.699 233.031 cv
30.684 233.07 30.66 233.098 30.629 233.113 cv
30.598 233.133 30.566 233.141 30.535 233.141 cv
26.344 233.141 li
26.289 233.141 26.242 233.137 26.203 233.121 cv
26.16 233.113 26.125 233.09 26.098 233.055 cv
26.066 233.027 26.043 232.98 26.031 232.918 cv
26.016 232.859 26.012 232.789 26.012 232.703 cv
26.012 232.629 26.012 232.559 26.02 232.496 cv
26.023 232.437 26.039 232.387 26.059 232.34 cv
26.078 232.297 26.102 232.254 26.133 232.207 cv
26.16 232.168 26.199 232.117 26.254 232.062 cv
27.77 230.504 li
28.117 230.145 28.395 229.824 28.609 229.539 cv
28.82 229.254 28.984 228.992 29.102 228.758 cv
29.211 228.523 29.289 228.312 29.328 228.121 cv
29.363 227.93 29.379 227.75 29.383 227.578 cv
29.379 227.414 29.352 227.254 29.297 227.102 cv
29.238 226.953 29.156 226.82 29.051 226.707 cv
28.941 226.598 28.809 226.508 28.648 226.437 cv
28.484 226.371 28.297 226.34 28.094 226.336 cv
27.844 226.34 27.625 226.371 27.43 226.437 cv
27.234 226.508 27.063 226.582 26.914 226.656 cv
26.766 226.738 26.641 226.809 26.547 226.871 cv
26.445 226.937 26.375 226.973 26.328 226.969 cv
26.297 226.973 26.27 226.965 26.25 226.945 cv
26.227 226.934 26.207 226.906 26.195 226.871 cv
26.18 226.84 26.172 226.793 26.164 226.73 cv
26.156 226.672 26.152 226.602 26.152 226.52 cv
26.152 226.461 26.152 226.41 26.156 226.367 cv
26.16 226.328 26.168 226.293 26.18 226.258 cv
26.188 226.23 26.199 226.199 26.219 226.168 cv
26.23 226.141 26.262 226.109 26.313 226.066 cv
26.355 226.027 26.438 225.969 26.555 225.898 cv
26.668 225.828 26.813 225.762 26.988 225.691 cv
27.16 225.625 27.352 225.566 27.563 225.516 cv
27.77 225.473 27.988 225.449 28.219 225.445 cv
28.586 225.449 28.906 225.5 29.184 225.602 cv
29.457 225.707 29.688 225.848 29.867 226.027 cv
30.047 226.207 30.184 226.418 30.277 226.656 cv
30.367 226.895 30.41 227.148 30.414 227.414 cv
30.41 227.664 30.391 227.906 30.348 228.141 cv
30.301 228.383 30.207 228.641 30.074 228.918 cv
29.934 229.199 29.734 229.512 29.473 229.852 cv
29.211 230.195 28.863 230.586 28.43 231.031 cv
27.23 232.285 li
30.531 232.285 li
30.559 232.285 30.59 232.297 30.621 232.312 cv
30.648 232.332 30.672 232.355 30.695 232.391 cv
30.711 232.43 30.727 232.477 30.742 232.523 cv
30.75 232.578 30.758 232.637 30.758 232.707 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.055 231.195 mo
37.055 231.523 36.996 231.816 36.879 232.07 cv
36.762 232.328 36.59 232.543 36.371 232.719 cv
36.148 232.898 35.879 233.031 35.555 233.117 cv
35.227 233.203 34.855 233.246 34.441 233.25 cv
34.051 233.246 33.699 233.207 33.391 233.129 cv
33.082 233.051 32.82 232.93 32.605 232.766 cv
32.391 232.605 32.227 232.41 32.113 232.172 cv
32 231.941 31.945 231.672 31.945 231.371 cv
31.945 231.137 31.984 230.918 32.063 230.715 cv
32.141 230.516 32.25 230.332 32.398 230.164 cv
32.543 230 32.727 229.844 32.941 229.695 cv
33.152 229.547 33.395 229.406 33.668 229.273 cv
33.434 229.156 33.227 229.031 33.047 228.891 cv
32.867 228.758 32.715 228.609 32.59 228.449 cv
32.465 228.293 32.367 228.125 32.305 227.941 cv
32.234 227.766 32.203 227.57 32.207 227.359 cv
32.203 227.098 32.25 226.848 32.352 226.613 cv
32.445 226.379 32.59 226.176 32.785 226.004 cv
32.973 225.832 33.219 225.699 33.523 225.598 cv
33.82 225.5 34.172 225.449 34.57 225.445 cv
34.953 225.449 35.281 225.496 35.563 225.586 cv
35.836 225.68 36.066 225.805 36.254 225.961 cv
36.434 226.121 36.57 226.305 36.656 226.52 cv
36.742 226.738 36.785 226.969 36.785 227.211 cv
36.785 227.41 36.75 227.602 36.688 227.785 cv
36.617 227.973 36.523 228.148 36.402 228.309 cv
36.273 228.477 36.121 228.629 35.941 228.77 cv
35.762 228.91 35.555 229.043 35.32 229.168 cv
35.598 229.309 35.844 229.449 36.063 229.59 cv
36.277 229.734 36.457 229.891 36.605 230.055 cv
36.746 230.223 36.859 230.398 36.938 230.582 cv
37.016 230.77 37.055 230.973 37.055 231.195 cv
cp
35.789 227.305 mo
35.789 227.141 35.758 226.992 35.703 226.859 cv
35.645 226.727 35.563 226.613 35.457 226.52 cv
35.344 226.426 35.207 226.355 35.047 226.309 cv
34.883 226.262 34.699 226.238 34.496 226.234 cv
34.07 226.238 33.75 226.332 33.535 226.52 cv
33.316 226.711 33.211 226.973 33.211 227.305 cv
33.211 227.457 33.234 227.602 33.289 227.73 cv
33.34 227.863 33.422 227.984 33.535 228.102 cv
33.645 228.219 33.785 228.336 33.957 228.445 cv
34.125 228.559 34.328 228.672 34.566 228.793 cv
34.957 228.59 35.262 228.367 35.473 228.121 cv
35.684 227.875 35.789 227.602 35.789 227.305 cv
cp
36.035 231.301 mo
36.035 231.121 36 230.961 35.934 230.812 cv
35.867 230.672 35.766 230.535 35.633 230.402 cv
35.496 230.277 35.328 230.152 35.129 230.031 cv
34.926 229.914 34.695 229.789 34.43 229.66 cv
34.18 229.785 33.961 229.906 33.781 230.023 cv
33.594 230.145 33.441 230.27 33.324 230.398 cv
33.199 230.531 33.109 230.668 33.055 230.809 cv
32.992 230.949 32.965 231.105 32.965 231.277 cv
32.965 231.656 33.094 231.949 33.355 232.156 cv
33.613 232.367 34 232.473 34.52 232.469 cv
35.016 232.473 35.395 232.367 35.652 232.156 cv
35.906 231.945 36.035 231.66 36.035 231.301 cv
cp
f
25.332 180.988 mo
37.492 180.988 li
37.492 195.64 li
25.332 195.64 li
cp
0 0 0 0 cmyk
ef
30.699 190.262 mo
30.699 190.609 30.637 190.926 30.516 191.203 cv
30.395 191.484 30.223 191.723 29.996 191.922 cv
29.77 192.121 29.488 192.273 29.156 192.379 cv
28.824 192.484 28.449 192.535 28.031 192.539 cv
27.777 192.535 27.539 192.516 27.32 192.477 cv
27.098 192.437 26.902 192.391 26.734 192.336 cv
26.559 192.281 26.418 192.223 26.305 192.16 cv
26.188 192.098 26.113 192.055 26.09 192.027 cv
26.059 192 26.039 191.973 26.023 191.945 cv
26.008 191.918 25.992 191.883 25.98 191.844 cv
25.969 191.805 25.961 191.758 25.953 191.703 cv
25.945 191.648 25.941 191.578 25.945 191.492 cv
25.941 191.352 25.957 191.254 25.988 191.199 cv
26.016 191.145 26.055 191.117 26.109 191.117 cv
26.145 191.117 26.215 191.148 26.32 191.211 cv
26.426 191.273 26.563 191.344 26.73 191.414 cv
26.895 191.492 27.09 191.559 27.313 191.617 cv
27.535 191.684 27.781 191.715 28.059 191.711 cv
28.316 191.715 28.551 191.68 28.754 191.609 cv
28.953 191.543 29.121 191.449 29.258 191.328 cv
29.395 191.211 29.496 191.07 29.566 190.898 cv
29.633 190.734 29.668 190.551 29.668 190.355 cv
29.668 190.141 29.621 189.949 29.535 189.773 cv
29.445 189.605 29.32 189.457 29.156 189.328 cv
28.988 189.207 28.781 189.109 28.539 189.043 cv
28.289 188.98 28.012 188.949 27.707 188.945 cv
26.965 188.945 li
26.93 188.949 26.898 188.941 26.867 188.926 cv
26.836 188.91 26.809 188.887 26.789 188.855 cv
26.766 188.824 26.746 188.785 26.734 188.734 cv
26.719 188.684 26.715 188.617 26.715 188.531 cv
26.715 188.461 26.719 188.398 26.73 188.348 cv
26.742 188.301 26.758 188.262 26.781 188.23 cv
26.797 188.203 26.824 188.184 26.855 188.168 cv
26.883 188.16 26.914 188.152 26.949 188.148 cv
27.609 188.148 li
27.867 188.152 28.098 188.117 28.305 188.047 cv
28.508 187.98 28.684 187.887 28.824 187.758 cv
28.965 187.637 29.074 187.488 29.152 187.312 cv
29.23 187.141 29.27 186.945 29.27 186.727 cv
29.27 186.574 29.242 186.426 29.191 186.281 cv
29.141 186.141 29.066 186.016 28.965 185.91 cv
28.863 185.805 28.73 185.723 28.574 185.66 cv
28.41 185.605 28.23 185.574 28.027 185.57 cv
27.801 185.574 27.59 185.609 27.402 185.672 cv
27.207 185.742 27.039 185.812 26.895 185.891 cv
26.742 185.969 26.621 186.043 26.527 186.109 cv
26.43 186.18 26.359 186.215 26.32 186.211 cv
26.293 186.215 26.27 186.211 26.25 186.199 cv
26.227 186.191 26.207 186.172 26.195 186.141 cv
26.18 186.113 26.172 186.07 26.164 186.016 cv
26.156 185.965 26.152 185.895 26.156 185.809 cv
26.152 185.75 26.156 185.699 26.164 185.652 cv
26.168 185.609 26.176 185.57 26.188 185.535 cv
26.195 185.504 26.207 185.473 26.227 185.445 cv
26.238 185.422 26.266 185.391 26.305 185.352 cv
26.344 185.312 26.418 185.258 26.531 185.187 cv
26.645 185.117 26.785 185.051 26.953 184.98 cv
27.117 184.914 27.309 184.855 27.527 184.805 cv
27.742 184.762 27.977 184.738 28.227 184.734 cv
28.578 184.738 28.887 184.781 29.152 184.871 cv
29.418 184.965 29.637 185.094 29.816 185.254 cv
29.992 185.422 30.125 185.617 30.215 185.844 cv
30.301 186.07 30.348 186.324 30.348 186.602 cv
30.348 186.84 30.316 187.062 30.254 187.266 cv
30.191 187.473 30.098 187.652 29.977 187.809 cv
29.855 187.969 29.707 188.105 29.531 188.215 cv
29.355 188.332 29.152 188.406 28.922 188.445 cv
28.922 188.457 li
29.184 188.488 29.422 188.555 29.641 188.656 cv
29.855 188.758 30.043 188.887 30.203 189.043 cv
30.355 189.199 30.477 189.383 30.566 189.594 cv
30.652 189.805 30.699 190.027 30.699 190.262 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.879 191.996 mo
36.879 192.066 36.871 192.129 36.863 192.184 cv
36.848 192.238 36.836 192.285 36.82 192.32 cv
36.805 192.359 36.781 192.387 36.75 192.402 cv
36.719 192.422 36.688 192.43 36.656 192.43 cv
32.465 192.43 li
32.41 192.43 32.363 192.426 32.324 192.41 cv
32.281 192.402 32.246 192.379 32.219 192.344 cv
32.188 192.316 32.164 192.27 32.152 192.207 cv
32.137 192.148 32.133 192.078 32.133 191.992 cv
32.133 191.918 32.133 191.848 32.141 191.785 cv
32.145 191.727 32.16 191.676 32.18 191.629 cv
32.199 191.586 32.223 191.543 32.254 191.496 cv
32.281 191.457 32.32 191.406 32.375 191.352 cv
33.891 189.793 li
34.238 189.434 34.516 189.113 34.73 188.828 cv
34.941 188.543 35.105 188.281 35.223 188.047 cv
35.332 187.812 35.41 187.602 35.449 187.41 cv
35.484 187.219 35.5 187.039 35.504 186.867 cv
35.5 186.703 35.473 186.543 35.418 186.391 cv
35.359 186.242 35.277 186.109 35.172 185.996 cv
35.063 185.887 34.93 185.797 34.77 185.727 cv
34.605 185.66 34.418 185.629 34.215 185.625 cv
33.965 185.629 33.746 185.66 33.551 185.727 cv
33.355 185.797 33.184 185.871 33.035 185.945 cv
32.887 186.027 32.762 186.098 32.668 186.16 cv
32.566 186.227 32.496 186.262 32.449 186.258 cv
32.418 186.262 32.391 186.254 32.371 186.234 cv
32.348 186.223 32.328 186.195 32.316 186.16 cv
32.301 186.129 32.293 186.082 32.285 186.02 cv
32.277 185.961 32.273 185.891 32.273 185.809 cv
32.273 185.75 32.273 185.699 32.277 185.656 cv
32.281 185.617 32.289 185.582 32.301 185.547 cv
32.309 185.52 32.32 185.488 32.34 185.457 cv
32.352 185.43 32.383 185.398 32.434 185.355 cv
32.477 185.316 32.559 185.258 32.676 185.187 cv
32.789 185.117 32.934 185.051 33.109 184.98 cv
33.281 184.914 33.473 184.855 33.684 184.805 cv
33.891 184.762 34.109 184.738 34.34 184.734 cv
34.707 184.738 35.027 184.789 35.305 184.891 cv
35.578 184.996 35.809 185.137 35.988 185.316 cv
36.168 185.496 36.305 185.707 36.398 185.945 cv
36.488 186.184 36.531 186.437 36.535 186.703 cv
36.531 186.953 36.512 187.195 36.469 187.43 cv
36.422 187.672 36.328 187.93 36.195 188.207 cv
36.055 188.488 35.855 188.801 35.594 189.141 cv
35.332 189.484 34.984 189.875 34.551 190.32 cv
33.352 191.574 li
36.652 191.574 li
36.68 191.574 36.711 191.586 36.742 191.602 cv
36.77 191.621 36.793 191.645 36.816 191.68 cv
36.832 191.719 36.848 191.766 36.863 191.812 cv
36.871 191.867 36.879 191.926 36.879 191.996 cv
cp
f
25.332 140.301 mo
37.492 140.301 li
37.492 154.949 li
25.332 154.949 li
cp
0 0 0 0 cmyk
ef
30.699 149.562 mo
30.699 149.91 30.637 150.227 30.516 150.504 cv
30.395 150.785 30.223 151.023 29.996 151.223 cv
29.77 151.422 29.488 151.574 29.156 151.68 cv
28.824 151.785 28.449 151.836 28.031 151.84 cv
27.777 151.836 27.539 151.816 27.32 151.777 cv
27.098 151.738 26.902 151.691 26.734 151.637 cv
26.559 151.582 26.418 151.523 26.305 151.461 cv
26.188 151.398 26.113 151.355 26.09 151.328 cv
26.059 151.301 26.039 151.273 26.023 151.246 cv
26.008 151.219 25.992 151.184 25.98 151.145 cv
25.969 151.105 25.961 151.059 25.953 151.004 cv
25.945 150.949 25.941 150.879 25.945 150.793 cv
25.941 150.652 25.957 150.555 25.988 150.5 cv
26.016 150.445 26.055 150.418 26.109 150.418 cv
26.145 150.418 26.215 150.449 26.32 150.512 cv
26.426 150.574 26.563 150.645 26.73 150.715 cv
26.895 150.793 27.09 150.859 27.313 150.918 cv
27.535 150.984 27.781 151.016 28.059 151.012 cv
28.316 151.016 28.551 150.98 28.754 150.91 cv
28.953 150.844 29.121 150.75 29.258 150.629 cv
29.395 150.512 29.496 150.371 29.566 150.199 cv
29.633 150.035 29.668 149.852 29.668 149.656 cv
29.668 149.441 29.621 149.25 29.535 149.074 cv
29.445 148.906 29.32 148.758 29.156 148.629 cv
28.988 148.508 28.781 148.41 28.539 148.344 cv
28.289 148.281 28.012 148.25 27.707 148.246 cv
26.965 148.246 li
26.93 148.25 26.898 148.242 26.867 148.227 cv
26.836 148.211 26.809 148.187 26.789 148.156 cv
26.766 148.125 26.746 148.086 26.734 148.035 cv
26.719 147.984 26.715 147.918 26.715 147.832 cv
26.715 147.762 26.719 147.699 26.73 147.648 cv
26.742 147.602 26.758 147.562 26.781 147.531 cv
26.797 147.504 26.824 147.484 26.855 147.469 cv
26.883 147.461 26.914 147.453 26.949 147.449 cv
27.609 147.449 li
27.867 147.453 28.098 147.418 28.305 147.348 cv
28.508 147.281 28.684 147.187 28.824 147.059 cv
28.965 146.937 29.074 146.789 29.152 146.613 cv
29.23 146.441 29.27 146.246 29.27 146.027 cv
29.27 145.875 29.242 145.727 29.191 145.582 cv
29.141 145.441 29.066 145.316 28.965 145.211 cv
28.863 145.105 28.73 145.023 28.574 144.961 cv
28.41 144.906 28.23 144.875 28.027 144.871 cv
27.801 144.875 27.59 144.91 27.402 144.973 cv
27.207 145.043 27.039 145.113 26.895 145.191 cv
26.742 145.27 26.621 145.344 26.527 145.41 cv
26.43 145.48 26.359 145.516 26.32 145.512 cv
26.293 145.516 26.27 145.512 26.25 145.5 cv
26.227 145.492 26.207 145.473 26.195 145.441 cv
26.18 145.414 26.172 145.371 26.164 145.316 cv
26.156 145.266 26.152 145.195 26.156 145.109 cv
26.152 145.051 26.156 145 26.164 144.953 cv
26.168 144.91 26.176 144.871 26.188 144.836 cv
26.195 144.805 26.207 144.773 26.227 144.746 cv
26.238 144.723 26.266 144.691 26.305 144.652 cv
26.344 144.613 26.418 144.559 26.531 144.488 cv
26.645 144.418 26.785 144.352 26.953 144.281 cv
27.117 144.215 27.309 144.156 27.527 144.105 cv
27.742 144.062 27.977 144.039 28.227 144.035 cv
28.578 144.039 28.887 144.082 29.152 144.172 cv
29.418 144.266 29.637 144.395 29.816 144.555 cv
29.992 144.723 30.125 144.918 30.215 145.145 cv
30.301 145.371 30.348 145.625 30.348 145.902 cv
30.348 146.141 30.316 146.363 30.254 146.566 cv
30.191 146.773 30.098 146.953 29.977 147.109 cv
29.855 147.27 29.707 147.406 29.531 147.516 cv
29.355 147.633 29.152 147.707 28.922 147.746 cv
28.922 147.758 li
29.184 147.789 29.422 147.855 29.641 147.957 cv
29.855 148.059 30.043 148.187 30.203 148.344 cv
30.355 148.5 30.477 148.684 30.566 148.895 cv
30.652 149.105 30.699 149.328 30.699 149.562 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.074 149.277 mo
37.07 149.609 37.02 149.93 36.922 150.242 cv
36.816 150.555 36.66 150.828 36.453 151.062 cv
36.238 151.297 35.973 151.488 35.648 151.629 cv
35.32 151.77 34.938 151.836 34.5 151.84 cv
34.184 151.836 33.902 151.801 33.664 151.723 cv
33.418 151.648 33.207 151.535 33.031 151.391 cv
32.848 151.25 32.699 151.074 32.582 150.859 cv
32.461 150.652 32.363 150.41 32.293 150.137 cv
32.215 149.867 32.164 149.574 32.137 149.25 cv
32.102 148.934 32.086 148.59 32.09 148.223 cv
32.086 147.898 32.105 147.57 32.145 147.238 cv
32.18 146.906 32.242 146.586 32.332 146.277 cv
32.418 145.969 32.539 145.68 32.695 145.406 cv
32.852 145.137 33.043 144.898 33.277 144.695 cv
33.508 144.496 33.789 144.336 34.113 144.219 cv
34.434 144.102 34.809 144.043 35.246 144.043 cv
35.387 144.043 35.535 144.055 35.684 144.07 cv
35.832 144.094 35.969 144.117 36.094 144.141 cv
36.219 144.172 36.324 144.203 36.41 144.238 cv
36.496 144.273 36.551 144.301 36.578 144.324 cv
36.605 144.348 36.625 144.371 36.641 144.395 cv
36.648 144.418 36.66 144.445 36.672 144.477 cv
36.676 144.508 36.684 144.543 36.691 144.574 cv
36.695 144.613 36.695 144.656 36.699 144.711 cv
36.695 144.781 36.695 144.844 36.695 144.895 cv
36.691 144.945 36.684 144.984 36.672 145.016 cv
36.656 145.047 36.637 145.07 36.617 145.086 cv
36.594 145.102 36.566 145.109 36.535 145.109 cv
36.488 145.109 36.43 145.098 36.355 145.07 cv
36.281 145.043 36.191 145.012 36.086 144.977 cv
35.98 144.945 35.852 144.914 35.703 144.887 cv
35.551 144.863 35.379 144.852 35.18 144.848 cv
34.816 144.852 34.504 144.926 34.242 145.07 cv
33.977 145.223 33.762 145.422 33.598 145.668 cv
33.434 145.922 33.309 146.211 33.23 146.539 cv
33.148 146.867 33.105 147.211 33.094 147.57 cv
33.195 147.512 33.309 147.453 33.438 147.395 cv
33.563 147.34 33.699 147.289 33.852 147.238 cv
34 147.195 34.16 147.156 34.328 147.125 cv
34.496 147.094 34.676 147.078 34.871 147.078 cv
35.277 147.078 35.625 147.137 35.906 147.246 cv
36.188 147.359 36.414 147.512 36.586 147.707 cv
36.758 147.906 36.883 148.141 36.961 148.406 cv
37.035 148.68 37.07 148.969 37.074 149.277 cv
cp
36.051 149.371 mo
36.047 149.145 36.023 148.937 35.984 148.75 cv
35.938 148.566 35.863 148.41 35.758 148.281 cv
35.652 148.152 35.512 148.051 35.336 147.98 cv
35.16 147.91 34.945 147.875 34.688 147.875 cv
34.543 147.875 34.398 147.891 34.254 147.914 cv
34.105 147.941 33.965 147.977 33.832 148.02 cv
33.699 148.066 33.57 148.117 33.445 148.18 cv
33.32 148.242 33.207 148.309 33.113 148.371 cv
33.109 148.879 33.141 149.301 33.207 149.641 cv
33.27 149.98 33.363 150.254 33.488 150.457 cv
33.609 150.664 33.766 150.809 33.949 150.895 cv
34.129 150.984 34.344 151.027 34.594 151.027 cv
34.844 151.027 35.059 150.98 35.242 150.887 cv
35.426 150.793 35.578 150.668 35.699 150.508 cv
35.82 150.352 35.91 150.176 35.965 149.977 cv
36.02 149.781 36.047 149.578 36.051 149.371 cv
cp
f
25.332 99.602 mo
37.492 99.602 li
37.492 114.25 li
25.332 114.25 li
cp
0 0 0 0 cmyk
ef
31.078 108.863 mo
31.074 108.996 31.055 109.098 31.02 109.168 cv
30.977 109.242 30.922 109.281 30.859 109.277 cv
30 109.277 li
30 110.871 li
29.996 110.906 29.988 110.934 29.977 110.953 cv
29.957 110.977 29.93 110.992 29.891 111.008 cv
29.852 111.023 29.797 111.035 29.734 111.043 cv
29.668 111.051 29.586 111.055 29.488 111.055 cv
29.387 111.055 29.309 111.051 29.246 111.043 cv
29.184 111.035 29.133 111.023 29.094 111.008 cv
29.055 110.992 29.027 110.977 29.012 110.953 cv
28.996 110.934 28.988 110.906 28.992 110.871 cv
28.992 109.277 li
25.891 109.277 li
25.844 109.281 25.809 109.273 25.777 109.262 cv
25.746 109.254 25.715 109.234 25.691 109.199 cv
25.66 109.172 25.645 109.125 25.637 109.062 cv
25.629 109.004 25.625 108.93 25.625 108.832 cv
25.625 108.762 25.625 108.695 25.629 108.637 cv
25.633 108.578 25.641 108.523 25.652 108.477 cv
25.664 108.43 25.68 108.383 25.699 108.336 cv
25.719 108.289 25.742 108.242 25.77 108.191 cv
28.473 103.582 li
28.492 103.555 28.52 103.527 28.559 103.5 cv
28.594 103.48 28.645 103.461 28.707 103.441 cv
28.766 103.43 28.836 103.418 28.926 103.41 cv
29.012 103.406 29.117 103.402 29.238 103.402 cv
29.367 103.402 29.48 103.41 29.578 103.418 cv
29.676 103.434 29.754 103.445 29.816 103.457 cv
29.871 103.477 29.918 103.496 29.953 103.52 cv
29.98 103.543 29.996 103.574 30 103.605 cv
30 108.449 li
30.859 108.449 li
30.922 108.453 30.977 108.488 31.016 108.551 cv
31.055 108.621 31.074 108.723 31.078 108.863 cv
cp
28.992 104.285 mo
28.984 104.285 li
26.547 108.449 li
28.992 108.449 li
cp
.629114 .553033 .543389 .289647 cmyk
f
37.129 107.211 mo
37.125 107.793 37.078 108.324 36.992 108.805 cv
36.898 109.289 36.746 109.703 36.535 110.047 cv
36.316 110.391 36.039 110.66 35.699 110.848 cv
35.352 111.035 34.93 111.125 34.43 111.129 cv
33.953 111.125 33.551 111.043 33.227 110.875 cv
32.898 110.707 32.637 110.457 32.438 110.125 cv
32.234 109.797 32.09 109.391 32.012 108.906 cv
31.926 108.426 31.887 107.871 31.887 107.246 cv
31.887 106.668 31.934 106.141 32.027 105.656 cv
32.121 105.18 32.273 104.766 32.484 104.414 cv
32.695 104.07 32.973 103.801 33.316 103.609 cv
33.66 103.422 34.082 103.328 34.582 103.324 cv
35.059 103.328 35.461 103.414 35.789 103.582 cv
36.117 103.754 36.379 104.004 36.578 104.332 cv
36.777 104.664 36.918 105.07 37.004 105.551 cv
37.082 106.035 37.125 106.586 37.129 107.211 cv
cp
36.098 107.281 mo
36.094 106.906 36.082 106.566 36.059 106.262 cv
36.031 105.961 35.988 105.695 35.938 105.465 cv
35.883 105.238 35.816 105.043 35.73 104.871 cv
35.645 104.707 35.543 104.57 35.43 104.461 cv
35.309 104.359 35.176 104.281 35.027 104.227 cv
34.879 104.18 34.711 104.152 34.523 104.152 cv
34.191 104.152 33.922 104.23 33.715 104.387 cv
33.504 104.543 33.34 104.758 33.223 105.031 cv
33.105 105.305 33.023 105.625 32.98 105.992 cv
32.938 106.359 32.918 106.754 32.918 107.176 cv
32.918 107.746 32.945 108.23 33.004 108.621 cv
33.063 109.02 33.156 109.34 33.281 109.59 cv
33.406 109.84 33.566 110.023 33.77 110.137 cv
33.965 110.25 34.207 110.305 34.488 110.305 cv
34.707 110.305 34.898 110.27 35.066 110.199 cv
35.23 110.129 35.371 110.031 35.492 109.898 cv
35.609 109.77 35.711 109.609 35.789 109.426 cv
35.867 109.246 35.93 109.043 35.977 108.816 cv
36.023 108.594 36.055 108.355 36.07 108.094 cv
36.086 107.836 36.094 107.562 36.098 107.281 cv
cp
f
25.332 58.91 mo
37.492 58.91 li
37.492 73.558 li
25.332 73.558 li
cp
0 0 0 0 cmyk
ef
31.078 68.164 mo
31.074 68.297 31.055 68.398 31.02 68.469 cv
30.977 68.543 30.922 68.582 30.859 68.578 cv
30 68.578 li
30 70.172 li
29.996 70.207 29.988 70.234 29.977 70.254 cv
29.957 70.277 29.93 70.293 29.891 70.309 cv
29.852 70.324 29.797 70.336 29.734 70.344 cv
29.668 70.352 29.586 70.355 29.488 70.355 cv
29.387 70.355 29.309 70.352 29.246 70.344 cv
29.184 70.336 29.133 70.324 29.094 70.309 cv
29.055 70.293 29.027 70.277 29.012 70.254 cv
28.996 70.234 28.988 70.207 28.992 70.172 cv
28.992 68.578 li
25.891 68.578 li
25.844 68.582 25.809 68.574 25.777 68.562 cv
25.746 68.555 25.715 68.535 25.691 68.5 cv
25.66 68.473 25.645 68.426 25.637 68.363 cv
25.629 68.305 25.625 68.23 25.625 68.133 cv
25.625 68.062 25.625 67.996 25.629 67.937 cv
25.633 67.879 25.641 67.824 25.652 67.777 cv
25.664 67.73 25.68 67.684 25.699 67.637 cv
25.719 67.59 25.742 67.543 25.77 67.492 cv
28.473 62.883 li
28.492 62.855 28.52 62.828 28.559 62.801 cv
28.594 62.781 28.645 62.762 28.707 62.742 cv
28.766 62.73 28.836 62.719 28.926 62.711 cv
29.012 62.707 29.117 62.703 29.238 62.703 cv
29.367 62.703 29.48 62.711 29.578 62.719 cv
29.676 62.734 29.754 62.746 29.816 62.758 cv
29.871 62.777 29.918 62.797 29.953 62.82 cv
29.98 62.844 29.996 62.875 30 62.906 cv
30 67.75 li
30.859 67.75 li
30.922 67.754 30.977 67.789 31.016 67.852 cv
31.055 67.922 31.074 68.023 31.078 68.164 cv
cp
28.992 63.586 mo
28.984 63.586 li
26.547 67.75 li
28.992 67.75 li
cp
.629114 .553033 .543389 .289647 cmyk
f
37.199 68.164 mo
37.195 68.297 37.176 68.398 37.141 68.469 cv
37.098 68.543 37.043 68.582 36.98 68.578 cv
36.121 68.578 li
36.121 70.172 li
36.117 70.207 36.109 70.234 36.098 70.254 cv
36.078 70.277 36.051 70.293 36.012 70.309 cv
35.973 70.324 35.918 70.336 35.855 70.344 cv
35.789 70.352 35.707 70.355 35.609 70.355 cv
35.508 70.355 35.43 70.352 35.367 70.344 cv
35.305 70.336 35.254 70.324 35.215 70.309 cv
35.176 70.293 35.148 70.277 35.133 70.254 cv
35.117 70.234 35.109 70.207 35.113 70.172 cv
35.113 68.578 li
32.012 68.578 li
31.965 68.582 31.93 68.574 31.898 68.562 cv
31.867 68.555 31.836 68.535 31.813 68.5 cv
31.781 68.473 31.766 68.426 31.758 68.363 cv
31.75 68.305 31.746 68.23 31.746 68.133 cv
31.746 68.062 31.746 67.996 31.75 67.937 cv
31.754 67.879 31.762 67.824 31.773 67.777 cv
31.785 67.73 31.801 67.684 31.82 67.637 cv
31.84 67.59 31.863 67.543 31.891 67.492 cv
34.594 62.883 li
34.613 62.855 34.641 62.828 34.68 62.801 cv
34.715 62.781 34.766 62.762 34.828 62.742 cv
34.887 62.73 34.957 62.719 35.047 62.711 cv
35.133 62.707 35.238 62.703 35.359 62.703 cv
35.488 62.703 35.602 62.711 35.699 62.719 cv
35.797 62.734 35.875 62.746 35.938 62.758 cv
35.992 62.777 36.039 62.797 36.074 62.82 cv
36.102 62.844 36.117 62.875 36.121 62.906 cv
36.121 67.75 li
36.98 67.75 li
37.043 67.754 37.098 67.789 37.137 67.852 cv
37.176 67.922 37.195 68.023 37.199 68.164 cv
cp
35.113 63.586 mo
35.105 63.586 li
32.668 67.75 li
35.113 67.75 li
cp
f
25.332 18.219 mo
37.492 18.219 li
37.492 32.871 li
25.332 32.871 li
cp
0 0 0 0 cmyk
ef
31.078 27.465 mo
31.074 27.598 31.055 27.699 31.02 27.77 cv
30.977 27.844 30.922 27.883 30.859 27.879 cv
30 27.879 li
30 29.473 li
29.996 29.508 29.988 29.535 29.977 29.555 cv
29.957 29.578 29.93 29.594 29.891 29.609 cv
29.852 29.625 29.797 29.637 29.734 29.645 cv
29.668 29.652 29.586 29.656 29.488 29.656 cv
29.387 29.656 29.309 29.652 29.246 29.645 cv
29.184 29.637 29.133 29.625 29.094 29.609 cv
29.055 29.594 29.027 29.578 29.012 29.555 cv
28.996 29.535 28.988 29.508 28.992 29.473 cv
28.992 27.879 li
25.891 27.879 li
25.844 27.883 25.809 27.875 25.777 27.863 cv
25.746 27.855 25.715 27.836 25.691 27.801 cv
25.66 27.773 25.645 27.727 25.637 27.664 cv
25.629 27.605 25.625 27.531 25.625 27.434 cv
25.625 27.363 25.625 27.297 25.629 27.238 cv
25.633 27.18 25.641 27.125 25.652 27.078 cv
25.664 27.031 25.68 26.984 25.699 26.937 cv
25.719 26.891 25.742 26.844 25.77 26.793 cv
28.473 22.184 li
28.492 22.156 28.52 22.129 28.559 22.102 cv
28.594 22.082 28.645 22.062 28.707 22.043 cv
28.766 22.031 28.836 22.02 28.926 22.012 cv
29.012 22.008 29.117 22.004 29.238 22.004 cv
29.367 22.004 29.48 22.012 29.578 22.02 cv
29.676 22.035 29.754 22.047 29.816 22.059 cv
29.871 22.078 29.918 22.098 29.953 22.121 cv
29.98 22.145 29.996 22.176 30 22.207 cv
30 27.051 li
30.859 27.051 li
30.922 27.055 30.977 27.09 31.016 27.152 cv
31.055 27.223 31.074 27.324 31.078 27.465 cv
cp
28.992 22.887 mo
28.984 22.887 li
26.547 27.051 li
28.992 27.051 li
cp
.629114 .553033 .543389 .289647 cmyk
f
37.055 27.676 mo
37.055 28.004 36.996 28.297 36.879 28.551 cv
36.762 28.809 36.59 29.023 36.371 29.199 cv
36.148 29.379 35.879 29.512 35.555 29.598 cv
35.227 29.684 34.855 29.727 34.441 29.73 cv
34.051 29.727 33.699 29.687 33.391 29.609 cv
33.082 29.531 32.82 29.41 32.605 29.246 cv
32.391 29.086 32.227 28.891 32.113 28.652 cv
32 28.422 31.945 28.152 31.945 27.852 cv
31.945 27.617 31.984 27.398 32.063 27.195 cv
32.141 26.996 32.25 26.812 32.398 26.645 cv
32.543 26.48 32.727 26.324 32.941 26.176 cv
33.152 26.027 33.395 25.887 33.668 25.754 cv
33.434 25.637 33.227 25.512 33.047 25.371 cv
32.867 25.238 32.715 25.09 32.59 24.93 cv
32.465 24.773 32.367 24.605 32.305 24.422 cv
32.234 24.246 32.203 24.051 32.207 23.84 cv
32.203 23.578 32.25 23.328 32.352 23.094 cv
32.445 22.859 32.59 22.656 32.785 22.484 cv
32.973 22.312 33.219 22.18 33.523 22.078 cv
33.82 21.98 34.172 21.93 34.57 21.926 cv
34.953 21.93 35.281 21.977 35.563 22.066 cv
35.836 22.16 36.066 22.285 36.254 22.441 cv
36.434 22.602 36.57 22.785 36.656 23 cv
36.742 23.219 36.785 23.449 36.785 23.691 cv
36.785 23.891 36.75 24.082 36.688 24.266 cv
36.617 24.453 36.523 24.629 36.402 24.789 cv
36.273 24.957 36.121 25.109 35.941 25.25 cv
35.762 25.391 35.555 25.523 35.32 25.648 cv
35.598 25.789 35.844 25.93 36.063 26.07 cv
36.277 26.215 36.457 26.371 36.605 26.535 cv
36.746 26.703 36.859 26.879 36.938 27.062 cv
37.016 27.25 37.055 27.453 37.055 27.676 cv
cp
35.789 23.785 mo
35.789 23.621 35.758 23.473 35.703 23.34 cv
35.645 23.207 35.563 23.094 35.457 23 cv
35.344 22.906 35.207 22.836 35.047 22.789 cv
34.883 22.742 34.699 22.719 34.496 22.715 cv
34.07 22.719 33.75 22.812 33.535 23 cv
33.316 23.191 33.211 23.453 33.211 23.785 cv
33.211 23.937 33.234 24.082 33.289 24.211 cv
33.34 24.344 33.422 24.465 33.535 24.582 cv
33.645 24.699 33.785 24.816 33.957 24.926 cv
34.125 25.039 34.328 25.152 34.566 25.273 cv
34.957 25.07 35.262 24.848 35.473 24.602 cv
35.684 24.355 35.789 24.082 35.789 23.785 cv
cp
36.035 27.781 mo
36.035 27.602 36 27.441 35.934 27.293 cv
35.867 27.152 35.766 27.016 35.633 26.883 cv
35.496 26.758 35.328 26.633 35.129 26.512 cv
34.926 26.395 34.695 26.27 34.43 26.141 cv
34.18 26.266 33.961 26.387 33.781 26.504 cv
33.594 26.625 33.441 26.75 33.324 26.879 cv
33.199 27.012 33.109 27.148 33.055 27.289 cv
32.992 27.43 32.965 27.586 32.965 27.758 cv
32.965 28.137 33.094 28.43 33.355 28.637 cv
33.613 28.848 34 28.953 34.52 28.949 cv
35.016 28.953 35.395 28.848 35.652 28.637 cv
35.906 28.426 36.035 28.141 36.035 27.781 cv
cp
f
51.031 533.242 mo
51.027 533.316 51.023 533.379 51.016 533.43 cv
51.004 533.484 50.988 533.527 50.969 533.555 cv
50.945 533.59 50.922 533.613 50.898 533.621 cv
50.875 533.637 50.848 533.641 50.82 533.641 cv
46.859 533.641 li
46.832 533.641 46.809 533.637 46.785 533.621 cv
46.762 533.613 46.738 533.59 46.719 533.555 cv
46.695 533.527 46.68 533.484 46.668 533.43 cv
46.652 533.379 46.645 533.316 46.648 533.242 cv
46.645 533.172 46.652 533.113 46.668 533.062 cv
46.68 533.012 46.691 532.969 46.711 532.934 cv
46.727 532.902 46.75 532.879 46.773 532.859 cv
46.797 532.844 46.824 532.832 46.859 532.832 cv
48.445 532.832 li
48.445 527.066 li
46.977 527.937 li
46.902 527.984 46.844 528.008 46.801 528.012 cv
46.754 528.023 46.719 528.016 46.691 527.984 cv
46.66 527.961 46.641 527.918 46.633 527.859 cv
46.625 527.801 46.621 527.727 46.621 527.633 cv
46.621 527.57 46.621 527.512 46.629 527.465 cv
46.633 527.418 46.645 527.379 46.656 527.348 cv
46.664 527.316 46.68 527.289 46.703 527.266 cv
46.727 527.242 46.754 527.219 46.789 527.195 cv
48.539 526.078 li
48.551 526.066 48.57 526.055 48.598 526.047 cv
48.617 526.039 48.648 526.031 48.684 526.023 cv
48.715 526.016 48.754 526.012 48.805 526.012 cv
48.848 526.012 48.906 526.012 48.984 526.008 cv
49.074 526.012 49.152 526.016 49.219 526.02 cv
49.277 526.031 49.328 526.043 49.363 526.051 cv
49.395 526.066 49.418 526.082 49.434 526.102 cv
49.445 526.125 49.449 526.148 49.453 526.172 cv
49.453 532.832 li
50.82 532.832 li
50.848 532.832 50.879 532.844 50.91 532.859 cv
50.938 532.879 50.957 532.902 50.977 532.934 cv
50.992 532.969 51.008 533.012 51.016 533.062 cv
51.023 533.113 51.027 533.172 51.031 533.242 cv
cp
f
71.195 533.207 mo
71.195 533.277 71.188 533.34 71.18 533.395 cv
71.164 533.449 71.152 533.496 71.137 533.531 cv
71.121 533.57 71.098 533.598 71.066 533.613 cv
71.035 533.633 71.004 533.641 70.973 533.641 cv
66.781 533.641 li
66.727 533.641 66.68 533.637 66.641 533.621 cv
66.598 533.613 66.563 533.59 66.535 533.555 cv
66.504 533.527 66.48 533.48 66.469 533.418 cv
66.453 533.359 66.449 533.289 66.449 533.203 cv
66.449 533.129 66.449 533.059 66.457 532.996 cv
66.461 532.937 66.477 532.887 66.496 532.84 cv
66.516 532.797 66.539 532.754 66.57 532.707 cv
66.598 532.668 66.637 532.617 66.691 532.562 cv
68.207 531.004 li
68.555 530.645 68.832 530.324 69.047 530.039 cv
69.258 529.754 69.422 529.492 69.539 529.258 cv
69.648 529.023 69.727 528.812 69.766 528.621 cv
69.801 528.43 69.816 528.25 69.82 528.078 cv
69.816 527.914 69.789 527.754 69.734 527.602 cv
69.676 527.453 69.594 527.32 69.488 527.207 cv
69.379 527.098 69.246 527.008 69.086 526.937 cv
68.922 526.871 68.734 526.84 68.531 526.836 cv
68.281 526.84 68.063 526.871 67.867 526.937 cv
67.672 527.008 67.5 527.082 67.352 527.156 cv
67.203 527.238 67.078 527.309 66.984 527.371 cv
66.883 527.437 66.813 527.473 66.766 527.469 cv
66.734 527.473 66.707 527.465 66.688 527.445 cv
66.664 527.434 66.645 527.406 66.633 527.371 cv
66.617 527.34 66.609 527.293 66.602 527.23 cv
66.594 527.172 66.59 527.102 66.59 527.02 cv
66.59 526.961 66.59 526.91 66.594 526.867 cv
66.598 526.828 66.605 526.793 66.617 526.758 cv
66.625 526.73 66.637 526.699 66.656 526.668 cv
66.668 526.641 66.699 526.609 66.75 526.566 cv
66.793 526.527 66.875 526.469 66.992 526.398 cv
67.105 526.328 67.25 526.262 67.426 526.191 cv
67.598 526.125 67.789 526.066 68 526.016 cv
68.207 525.973 68.426 525.949 68.656 525.945 cv
69.023 525.949 69.344 526 69.621 526.102 cv
69.895 526.207 70.125 526.348 70.305 526.527 cv
70.484 526.707 70.621 526.918 70.715 527.156 cv
70.805 527.395 70.848 527.648 70.852 527.914 cv
70.848 528.164 70.828 528.406 70.785 528.641 cv
70.738 528.883 70.645 529.141 70.512 529.418 cv
70.371 529.699 70.172 530.012 69.91 530.352 cv
69.648 530.695 69.301 531.086 68.867 531.531 cv
67.668 532.785 li
70.969 532.785 li
70.996 532.785 71.027 532.797 71.059 532.812 cv
71.086 532.832 71.109 532.855 71.133 532.891 cv
71.148 532.93 71.164 532.977 71.18 533.023 cv
71.188 533.078 71.195 533.137 71.195 533.207 cv
cp
f
91.297 531.473 mo
91.297 531.82 91.234 532.137 91.113 532.414 cv
90.992 532.695 90.82 532.934 90.594 533.133 cv
90.367 533.332 90.086 533.484 89.754 533.59 cv
89.422 533.695 89.047 533.746 88.629 533.75 cv
88.375 533.746 88.137 533.727 87.918 533.687 cv
87.695 533.648 87.5 533.602 87.332 533.547 cv
87.156 533.492 87.016 533.434 86.902 533.371 cv
86.785 533.309 86.711 533.266 86.688 533.238 cv
86.656 533.211 86.637 533.184 86.621 533.156 cv
86.605 533.129 86.59 533.094 86.578 533.055 cv
86.566 533.016 86.559 532.969 86.551 532.914 cv
86.543 532.859 86.539 532.789 86.543 532.703 cv
86.539 532.562 86.555 532.465 86.586 532.41 cv
86.613 532.355 86.652 532.328 86.707 532.328 cv
86.742 532.328 86.813 532.359 86.918 532.422 cv
87.023 532.484 87.16 532.555 87.328 532.625 cv
87.492 532.703 87.688 532.77 87.91 532.828 cv
88.133 532.895 88.379 532.926 88.656 532.922 cv
88.914 532.926 89.148 532.891 89.352 532.82 cv
89.551 532.754 89.719 532.66 89.855 532.539 cv
89.992 532.422 90.094 532.281 90.164 532.109 cv
90.23 531.945 90.266 531.762 90.266 531.566 cv
90.266 531.352 90.219 531.16 90.133 530.984 cv
90.043 530.816 89.918 530.668 89.754 530.539 cv
89.586 530.418 89.379 530.32 89.137 530.254 cv
88.887 530.191 88.609 530.16 88.305 530.156 cv
87.563 530.156 li
87.527 530.16 87.496 530.152 87.465 530.137 cv
87.434 530.121 87.406 530.098 87.387 530.066 cv
87.363 530.035 87.344 529.996 87.332 529.945 cv
87.316 529.895 87.313 529.828 87.313 529.742 cv
87.313 529.672 87.316 529.609 87.328 529.559 cv
87.34 529.512 87.355 529.473 87.379 529.441 cv
87.395 529.414 87.422 529.395 87.453 529.379 cv
87.48 529.371 87.512 529.363 87.547 529.359 cv
88.207 529.359 li
88.465 529.363 88.695 529.328 88.902 529.258 cv
89.105 529.191 89.281 529.098 89.422 528.969 cv
89.563 528.848 89.672 528.699 89.75 528.523 cv
89.828 528.352 89.867 528.156 89.867 527.937 cv
89.867 527.785 89.84 527.637 89.789 527.492 cv
89.738 527.352 89.664 527.227 89.563 527.121 cv
89.461 527.016 89.328 526.934 89.172 526.871 cv
89.008 526.816 88.828 526.785 88.625 526.781 cv
88.398 526.785 88.188 526.82 88 526.883 cv
87.805 526.953 87.637 527.023 87.492 527.102 cv
87.34 527.18 87.219 527.254 87.125 527.32 cv
87.027 527.391 86.957 527.426 86.918 527.422 cv
86.891 527.426 86.867 527.422 86.848 527.41 cv
86.824 527.402 86.805 527.383 86.793 527.352 cv
86.777 527.324 86.77 527.281 86.762 527.227 cv
86.754 527.176 86.75 527.105 86.754 527.02 cv
86.75 526.961 86.754 526.91 86.762 526.863 cv
86.766 526.82 86.773 526.781 86.785 526.746 cv
86.793 526.715 86.805 526.684 86.824 526.656 cv
86.836 526.633 86.863 526.602 86.902 526.562 cv
86.941 526.523 87.016 526.469 87.129 526.398 cv
87.242 526.328 87.383 526.262 87.551 526.191 cv
87.715 526.125 87.906 526.066 88.125 526.016 cv
88.34 525.973 88.574 525.949 88.824 525.945 cv
89.176 525.949 89.484 525.992 89.75 526.082 cv
90.016 526.176 90.234 526.305 90.414 526.465 cv
90.59 526.633 90.723 526.828 90.813 527.055 cv
90.898 527.281 90.945 527.535 90.945 527.812 cv
90.945 528.051 90.914 528.273 90.852 528.477 cv
90.789 528.684 90.695 528.863 90.574 529.02 cv
90.453 529.18 90.305 529.316 90.129 529.426 cv
89.953 529.543 89.75 529.617 89.52 529.656 cv
89.52 529.668 li
89.781 529.699 90.02 529.766 90.238 529.867 cv
90.453 529.969 90.641 530.098 90.801 530.254 cv
90.953 530.41 91.074 530.594 91.164 530.805 cv
91.25 531.016 91.297 531.238 91.297 531.473 cv
cp
f
111.863 531.484 mo
111.859 531.617 111.84 531.719 111.805 531.789 cv
111.762 531.863 111.707 531.902 111.645 531.898 cv
110.785 531.898 li
110.785 533.492 li
110.781 533.527 110.773 533.555 110.762 533.574 cv
110.742 533.598 110.715 533.613 110.676 533.629 cv
110.637 533.645 110.582 533.656 110.52 533.664 cv
110.453 533.672 110.371 533.676 110.273 533.676 cv
110.172 533.676 110.094 533.672 110.031 533.664 cv
109.969 533.656 109.918 533.645 109.879 533.629 cv
109.84 533.613 109.813 533.598 109.797 533.574 cv
109.781 533.555 109.773 533.527 109.777 533.492 cv
109.777 531.898 li
106.676 531.898 li
106.629 531.902 106.594 531.895 106.563 531.883 cv
106.531 531.875 106.5 531.855 106.477 531.82 cv
106.445 531.793 106.43 531.746 106.422 531.684 cv
106.414 531.625 106.41 531.551 106.41 531.453 cv
106.41 531.383 106.41 531.316 106.414 531.258 cv
106.418 531.199 106.426 531.145 106.438 531.098 cv
106.449 531.051 106.465 531.004 106.484 530.957 cv
106.504 530.91 106.527 530.863 106.555 530.812 cv
109.258 526.203 li
109.277 526.176 109.305 526.148 109.344 526.121 cv
109.379 526.102 109.43 526.082 109.492 526.062 cv
109.551 526.051 109.621 526.039 109.711 526.031 cv
109.797 526.027 109.902 526.023 110.023 526.023 cv
110.152 526.023 110.266 526.031 110.363 526.039 cv
110.461 526.055 110.539 526.066 110.602 526.078 cv
110.656 526.098 110.703 526.117 110.738 526.141 cv
110.766 526.164 110.781 526.195 110.785 526.227 cv
110.785 531.07 li
111.645 531.07 li
111.707 531.074 111.762 531.109 111.801 531.172 cv
111.84 531.242 111.859 531.344 111.863 531.484 cv
cp
109.777 526.906 mo
109.77 526.906 li
107.332 531.07 li
109.777 531.07 li
cp
f
131.688 531.203 mo
131.688 531.609 131.617 531.973 131.48 532.289 cv
131.344 532.605 131.152 532.871 130.902 533.09 cv
130.652 533.309 130.352 533.473 130.008 533.582 cv
129.656 533.691 129.273 533.746 128.855 533.75 cv
128.617 533.746 128.395 533.73 128.188 533.699 cv
127.973 533.668 127.785 533.629 127.625 533.582 cv
127.457 533.535 127.324 533.488 127.223 533.437 cv
127.117 533.395 127.047 533.355 127.02 533.324 cv
126.988 533.297 126.969 533.273 126.957 533.246 cv
126.945 533.227 126.934 533.199 126.926 533.164 cv
126.91 533.133 126.906 533.09 126.906 533.039 cv
126.902 532.988 126.898 532.926 126.902 532.855 cv
126.898 532.793 126.902 532.734 126.91 532.68 cv
126.914 532.625 126.926 532.582 126.941 532.551 cv
126.957 532.52 126.973 532.496 126.996 532.477 cv
127.012 532.465 127.039 532.457 127.07 532.453 cv
127.109 532.457 127.168 532.48 127.25 532.527 cv
127.332 532.574 127.441 532.629 127.582 532.684 cv
127.719 532.742 127.891 532.793 128.098 532.844 cv
128.301 532.898 128.547 532.926 128.828 532.922 cv
129.09 532.926 129.328 532.895 129.551 532.828 cv
129.766 532.77 129.953 532.672 130.113 532.535 cv
130.27 532.406 130.395 532.238 130.484 532.035 cv
130.574 531.832 130.621 531.586 130.621 531.297 cv
130.621 531.055 130.582 530.844 130.508 530.656 cv
130.43 530.473 130.313 530.316 130.156 530.191 cv
129.996 530.07 129.797 529.98 129.555 529.918 cv
129.313 529.863 129.023 529.832 128.688 529.828 cv
128.449 529.832 128.242 529.844 128.074 529.863 cv
127.898 529.891 127.738 529.902 127.59 529.898 cv
127.477 529.902 127.398 529.875 127.355 529.82 cv
127.305 529.77 127.281 529.672 127.285 529.527 cv
127.285 526.437 li
127.281 526.312 127.313 526.215 127.375 526.152 cv
127.438 526.09 127.523 526.059 127.637 526.059 cv
130.996 526.059 li
131.027 526.059 131.055 526.07 131.086 526.086 cv
131.109 526.105 131.137 526.129 131.16 526.164 cv
131.18 526.203 131.191 526.25 131.203 526.301 cv
131.211 526.359 131.219 526.422 131.219 526.492 cv
131.219 526.633 131.199 526.742 131.16 526.82 cv
131.121 526.898 131.066 526.937 131.004 526.937 cv
128.293 526.937 li
128.293 529.062 li
128.422 529.047 128.559 529.035 128.699 529.031 cv
128.836 529.027 128.992 529.023 129.176 529.023 cv
129.59 529.023 129.957 529.078 130.27 529.18 cv
130.582 529.289 130.84 529.434 131.051 529.621 cv
131.258 529.809 131.418 530.039 131.527 530.309 cv
131.633 530.578 131.688 530.875 131.688 531.203 cv
cp
f
152.078 531.187 mo
152.074 531.52 152.023 531.84 151.926 532.152 cv
151.82 532.465 151.664 532.738 151.457 532.973 cv
151.242 533.207 150.977 533.398 150.652 533.539 cv
150.324 533.68 149.941 533.746 149.504 533.75 cv
149.188 533.746 148.906 533.711 148.668 533.633 cv
148.422 533.559 148.211 533.445 148.035 533.301 cv
147.852 533.16 147.703 532.984 147.586 532.77 cv
147.465 532.562 147.367 532.32 147.297 532.047 cv
147.219 531.777 147.168 531.484 147.141 531.16 cv
147.105 530.844 147.09 530.5 147.094 530.133 cv
147.09 529.809 147.109 529.48 147.148 529.148 cv
147.184 528.816 147.246 528.496 147.336 528.187 cv
147.422 527.879 147.543 527.59 147.699 527.316 cv
147.855 527.047 148.047 526.809 148.281 526.605 cv
148.512 526.406 148.793 526.246 149.117 526.129 cv
149.438 526.012 149.813 525.953 150.25 525.953 cv
150.391 525.953 150.539 525.965 150.688 525.98 cv
150.836 526.004 150.973 526.027 151.098 526.051 cv
151.223 526.082 151.328 526.113 151.414 526.148 cv
151.5 526.184 151.555 526.211 151.582 526.234 cv
151.609 526.258 151.629 526.281 151.645 526.305 cv
151.652 526.328 151.664 526.355 151.676 526.387 cv
151.68 526.418 151.688 526.453 151.695 526.484 cv
151.699 526.523 151.699 526.566 151.703 526.621 cv
151.699 526.691 151.699 526.754 151.699 526.805 cv
151.695 526.855 151.688 526.895 151.676 526.926 cv
151.66 526.957 151.641 526.98 151.621 526.996 cv
151.598 527.012 151.57 527.02 151.539 527.02 cv
151.492 527.02 151.434 527.008 151.359 526.98 cv
151.285 526.953 151.195 526.922 151.09 526.887 cv
150.984 526.855 150.855 526.824 150.707 526.797 cv
150.555 526.773 150.383 526.762 150.184 526.758 cv
149.82 526.762 149.508 526.836 149.246 526.98 cv
148.98 527.133 148.766 527.332 148.602 527.578 cv
148.438 527.832 148.313 528.121 148.234 528.449 cv
148.152 528.777 148.109 529.121 148.098 529.48 cv
148.199 529.422 148.313 529.363 148.441 529.305 cv
148.566 529.25 148.703 529.199 148.855 529.148 cv
149.004 529.105 149.164 529.066 149.332 529.035 cv
149.5 529.004 149.68 528.988 149.875 528.988 cv
150.281 528.988 150.629 529.047 150.91 529.156 cv
151.191 529.27 151.418 529.422 151.59 529.617 cv
151.762 529.816 151.887 530.051 151.965 530.316 cv
152.039 530.59 152.074 530.879 152.078 531.187 cv
cp
151.055 531.281 mo
151.051 531.055 151.027 530.848 150.988 530.66 cv
150.941 530.477 150.867 530.32 150.762 530.191 cv
150.656 530.062 150.516 529.961 150.34 529.891 cv
150.164 529.82 149.949 529.785 149.691 529.785 cv
149.547 529.785 149.402 529.801 149.258 529.824 cv
149.109 529.852 148.969 529.887 148.836 529.93 cv
148.703 529.977 148.574 530.027 148.449 530.09 cv
148.324 530.152 148.211 530.219 148.117 530.281 cv
148.113 530.789 148.145 531.211 148.211 531.551 cv
148.273 531.891 148.367 532.164 148.492 532.367 cv
148.613 532.574 148.77 532.719 148.953 532.805 cv
149.133 532.895 149.348 532.937 149.598 532.937 cv
149.848 532.937 150.063 532.891 150.246 532.797 cv
150.43 532.703 150.582 532.578 150.703 532.418 cv
150.824 532.262 150.914 532.086 150.969 531.887 cv
151.023 531.691 151.051 531.488 151.055 531.281 cv
cp
f
172.184 526.492 mo
172.18 526.562 172.176 526.629 172.176 526.684 cv
172.168 526.742 172.16 526.797 172.152 526.848 cv
172.137 526.902 172.125 526.953 172.109 527 cv
172.094 527.051 172.074 527.102 172.051 527.156 cv
169.32 533.445 li
169.301 533.496 169.273 533.535 169.246 533.562 cv
169.215 533.594 169.18 533.617 169.133 533.633 cv
169.086 533.648 169.027 533.656 168.961 533.664 cv
168.887 533.672 168.801 533.676 168.707 533.676 cv
168.566 533.676 168.465 533.668 168.395 533.656 cv
168.32 533.645 168.266 533.629 168.234 533.602 cv
168.199 533.578 168.184 533.547 168.188 533.508 cv
168.191 533.473 168.207 533.43 168.23 533.375 cv
171.102 526.945 li
167.465 526.945 li
167.387 526.949 167.332 526.91 167.293 526.828 cv
167.254 526.754 167.234 526.645 167.238 526.5 cv
167.234 526.426 167.238 526.359 167.254 526.305 cv
167.262 526.25 167.277 526.207 167.297 526.168 cv
167.316 526.133 167.34 526.105 167.367 526.086 cv
167.395 526.07 167.426 526.059 167.465 526.059 cv
171.879 526.059 li
171.934 526.059 171.98 526.066 172.023 526.078 cv
172.063 526.09 172.094 526.113 172.117 526.148 cv
172.137 526.184 172.156 526.227 172.168 526.281 cv
172.176 526.336 172.18 526.406 172.184 526.492 cv
cp
f
192.43 531.695 mo
192.43 532.023 192.371 532.316 192.254 532.57 cv
192.137 532.828 191.965 533.043 191.746 533.219 cv
191.523 533.398 191.254 533.531 190.93 533.617 cv
190.602 533.703 190.23 533.746 189.816 533.75 cv
189.426 533.746 189.074 533.707 188.766 533.629 cv
188.457 533.551 188.195 533.43 187.98 533.266 cv
187.766 533.105 187.602 532.91 187.488 532.672 cv
187.375 532.441 187.32 532.172 187.32 531.871 cv
187.32 531.637 187.359 531.418 187.438 531.215 cv
187.516 531.016 187.625 530.832 187.773 530.664 cv
187.918 530.5 188.102 530.344 188.316 530.195 cv
188.527 530.047 188.77 529.906 189.043 529.773 cv
188.809 529.656 188.602 529.531 188.422 529.391 cv
188.242 529.258 188.09 529.109 187.965 528.949 cv
187.84 528.793 187.742 528.625 187.68 528.441 cv
187.609 528.266 187.578 528.07 187.582 527.859 cv
187.578 527.598 187.625 527.348 187.727 527.113 cv
187.82 526.879 187.965 526.676 188.16 526.504 cv
188.348 526.332 188.594 526.199 188.898 526.098 cv
189.195 526 189.547 525.949 189.945 525.945 cv
190.328 525.949 190.656 525.996 190.938 526.086 cv
191.211 526.18 191.441 526.305 191.629 526.461 cv
191.809 526.621 191.945 526.805 192.031 527.02 cv
192.117 527.238 192.16 527.469 192.16 527.711 cv
192.16 527.91 192.125 528.102 192.063 528.285 cv
191.992 528.473 191.898 528.648 191.777 528.809 cv
191.648 528.977 191.496 529.129 191.316 529.27 cv
191.137 529.41 190.93 529.543 190.695 529.668 cv
190.973 529.809 191.219 529.949 191.438 530.09 cv
191.652 530.234 191.832 530.391 191.98 530.555 cv
192.121 530.723 192.234 530.898 192.313 531.082 cv
192.391 531.27 192.43 531.473 192.43 531.695 cv
cp
191.164 527.805 mo
191.164 527.641 191.133 527.492 191.078 527.359 cv
191.02 527.227 190.938 527.113 190.832 527.02 cv
190.719 526.926 190.582 526.855 190.422 526.809 cv
190.258 526.762 190.074 526.738 189.871 526.734 cv
189.445 526.738 189.125 526.832 188.91 527.02 cv
188.691 527.211 188.586 527.473 188.586 527.805 cv
188.586 527.957 188.609 528.102 188.664 528.23 cv
188.715 528.363 188.797 528.484 188.91 528.602 cv
189.02 528.719 189.16 528.836 189.332 528.945 cv
189.5 529.059 189.703 529.172 189.941 529.293 cv
190.332 529.09 190.637 528.867 190.848 528.621 cv
191.059 528.375 191.164 528.102 191.164 527.805 cv
cp
191.41 531.801 mo
191.41 531.621 191.375 531.461 191.309 531.312 cv
191.242 531.172 191.141 531.035 191.008 530.902 cv
190.871 530.777 190.703 530.652 190.504 530.531 cv
190.301 530.414 190.07 530.289 189.805 530.16 cv
189.555 530.285 189.336 530.406 189.156 530.523 cv
188.969 530.645 188.816 530.77 188.699 530.898 cv
188.574 531.031 188.484 531.168 188.43 531.309 cv
188.367 531.449 188.34 531.605 188.34 531.777 cv
188.34 532.156 188.469 532.449 188.73 532.656 cv
188.988 532.867 189.375 532.973 189.895 532.969 cv
190.391 532.973 190.77 532.867 191.027 532.656 cv
191.281 532.445 191.41 532.16 191.41 531.801 cv
cp
f
212.473 529.551 mo
212.473 529.879 212.453 530.211 212.414 530.547 cv
212.375 530.883 212.309 531.207 212.215 531.52 cv
212.121 531.832 211.992 532.125 211.836 532.391 cv
211.676 532.664 211.477 532.898 211.238 533.102 cv
210.996 533.305 210.711 533.465 210.383 533.578 cv
210.051 533.691 209.668 533.746 209.234 533.75 cv
209.063 533.746 208.898 533.734 208.742 533.719 cv
208.582 533.695 208.441 533.672 208.316 533.641 cv
208.188 533.609 208.082 533.578 207.996 533.543 cv
207.91 533.508 207.848 533.473 207.809 533.437 cv
207.77 533.402 207.738 533.355 207.723 533.293 cv
207.699 533.238 207.691 533.156 207.695 533.047 cv
207.691 532.969 207.695 532.898 207.703 532.844 cv
207.711 532.793 207.719 532.754 207.73 532.727 cv
207.742 532.703 207.758 532.687 207.781 532.672 cv
207.797 532.664 207.824 532.656 207.859 532.656 cv
207.902 532.656 207.965 532.672 208.043 532.699 cv
208.121 532.73 208.219 532.762 208.336 532.797 cv
208.453 532.836 208.594 532.871 208.758 532.895 cv
208.918 532.926 209.098 532.937 209.297 532.937 cv
209.676 532.937 210 532.867 210.273 532.719 cv
210.543 532.578 210.766 532.379 210.938 532.129 cv
211.109 531.883 211.238 531.598 211.324 531.273 cv
211.41 530.953 211.457 530.613 211.465 530.25 cv
211.258 530.371 211.008 530.477 210.723 530.57 cv
210.43 530.664 210.098 530.711 209.727 530.711 cv
209.301 530.711 208.945 530.656 208.66 530.539 cv
208.371 530.43 208.141 530.27 207.969 530.066 cv
207.793 529.867 207.668 529.633 207.594 529.355 cv
207.516 529.086 207.48 528.785 207.48 528.461 cv
207.48 528.125 207.527 527.809 207.625 527.504 cv
207.723 527.203 207.875 526.934 208.082 526.703 cv
208.289 526.477 208.555 526.293 208.875 526.152 cv
209.195 526.016 209.578 525.949 210.023 525.945 cv
210.34 525.949 210.617 525.988 210.863 526.066 cv
211.105 526.148 211.32 526.266 211.5 526.414 cv
211.68 526.57 211.832 526.75 211.957 526.961 cv
212.082 527.172 212.18 527.414 212.258 527.684 cv
212.332 527.953 212.387 528.246 212.422 528.559 cv
212.453 528.879 212.473 529.207 212.473 529.551 cv
cp
211.445 529.437 mo
211.441 528.941 211.41 528.52 211.348 528.176 cv
211.281 527.836 211.184 527.559 211.055 527.348 cv
210.922 527.137 210.762 526.984 210.578 526.891 cv
210.387 526.797 210.172 526.75 209.93 526.75 cv
209.672 526.75 209.453 526.797 209.277 526.887 cv
209.094 526.98 208.945 527.105 208.836 527.258 cv
208.719 527.414 208.637 527.586 208.582 527.781 cv
208.527 527.977 208.5 528.18 208.5 528.383 cv
208.5 528.617 208.523 528.828 208.574 529.02 cv
208.621 529.211 208.699 529.371 208.813 529.504 cv
208.918 529.637 209.063 529.742 209.238 529.812 cv
209.41 529.891 209.625 529.926 209.891 529.922 cv
210.18 529.926 210.465 529.883 210.738 529.789 cv
211.012 529.703 211.246 529.586 211.445 529.437 cv
cp
f
229.57 533.242 mo
229.566 533.316 229.563 533.379 229.555 533.43 cv
229.543 533.484 229.527 533.527 229.508 533.555 cv
229.484 533.59 229.461 533.613 229.438 533.621 cv
229.414 533.637 229.387 533.641 229.359 533.641 cv
225.398 533.641 li
225.371 533.641 225.348 533.637 225.324 533.621 cv
225.301 533.613 225.277 533.59 225.258 533.555 cv
225.234 533.527 225.219 533.484 225.207 533.43 cv
225.191 533.379 225.184 533.316 225.188 533.242 cv
225.184 533.172 225.191 533.113 225.207 533.062 cv
225.219 533.012 225.23 532.969 225.25 532.934 cv
225.266 532.902 225.289 532.879 225.313 532.859 cv
225.336 532.844 225.363 532.832 225.398 532.832 cv
226.984 532.832 li
226.984 527.066 li
225.516 527.937 li
225.441 527.984 225.383 528.008 225.34 528.012 cv
225.293 528.023 225.258 528.016 225.23 527.984 cv
225.199 527.961 225.18 527.918 225.172 527.859 cv
225.164 527.801 225.16 527.727 225.16 527.633 cv
225.16 527.57 225.16 527.512 225.168 527.465 cv
225.172 527.418 225.184 527.379 225.195 527.348 cv
225.203 527.316 225.219 527.289 225.242 527.266 cv
225.266 527.242 225.293 527.219 225.328 527.195 cv
227.078 526.078 li
227.09 526.066 227.109 526.055 227.137 526.047 cv
227.156 526.039 227.188 526.031 227.223 526.023 cv
227.254 526.016 227.293 526.012 227.344 526.012 cv
227.387 526.012 227.445 526.012 227.523 526.008 cv
227.613 526.012 227.691 526.016 227.758 526.02 cv
227.816 526.031 227.867 526.043 227.902 526.051 cv
227.934 526.066 227.957 526.082 227.973 526.102 cv
227.984 526.125 227.988 526.148 227.992 526.172 cv
227.992 532.832 li
229.359 532.832 li
229.387 532.832 229.418 532.844 229.449 532.859 cv
229.477 532.879 229.496 532.902 229.516 532.934 cv
229.531 532.969 229.547 533.012 229.555 533.062 cv
229.563 533.113 229.566 533.172 229.57 533.242 cv
cp
f
235.926 529.832 mo
235.922 530.414 235.875 530.945 235.789 531.426 cv
235.695 531.91 235.543 532.324 235.332 532.668 cv
235.113 533.012 234.836 533.281 234.496 533.469 cv
234.148 533.656 233.727 533.746 233.227 533.75 cv
232.75 533.746 232.348 533.664 232.023 533.496 cv
231.695 533.328 231.434 533.078 231.234 532.746 cv
231.031 532.418 230.887 532.012 230.809 531.527 cv
230.723 531.047 230.684 530.492 230.684 529.867 cv
230.684 529.289 230.73 528.762 230.824 528.277 cv
230.918 527.801 231.07 527.387 231.281 527.035 cv
231.492 526.691 231.77 526.422 232.113 526.23 cv
232.457 526.043 232.879 525.949 233.379 525.945 cv
233.855 525.949 234.258 526.035 234.586 526.203 cv
234.914 526.375 235.176 526.625 235.375 526.953 cv
235.574 527.285 235.715 527.691 235.801 528.172 cv
235.879 528.656 235.922 529.207 235.926 529.832 cv
cp
234.895 529.902 mo
234.891 529.527 234.879 529.187 234.855 528.883 cv
234.828 528.582 234.785 528.316 234.734 528.086 cv
234.68 527.859 234.613 527.664 234.527 527.492 cv
234.441 527.328 234.34 527.191 234.227 527.082 cv
234.105 526.98 233.973 526.902 233.824 526.848 cv
233.676 526.801 233.508 526.773 233.32 526.773 cv
232.988 526.773 232.719 526.852 232.512 527.008 cv
232.301 527.164 232.137 527.379 232.02 527.652 cv
231.902 527.926 231.82 528.246 231.777 528.613 cv
231.734 528.98 231.715 529.375 231.715 529.797 cv
231.715 530.367 231.742 530.852 231.801 531.242 cv
231.859 531.641 231.953 531.961 232.078 532.211 cv
232.203 532.461 232.363 532.645 232.566 532.758 cv
232.762 532.871 233.004 532.926 233.285 532.926 cv
233.504 532.926 233.695 532.891 233.863 532.82 cv
234.027 532.75 234.168 532.652 234.289 532.52 cv
234.406 532.391 234.508 532.23 234.586 532.047 cv
234.664 531.867 234.727 531.664 234.773 531.437 cv
234.82 531.215 234.852 530.977 234.867 530.715 cv
234.883 530.457 234.891 530.184 234.895 529.902 cv
cp
f
249.75 533.242 mo
249.746 533.316 249.742 533.379 249.734 533.43 cv
249.723 533.484 249.707 533.527 249.688 533.555 cv
249.664 533.59 249.641 533.613 249.617 533.621 cv
249.594 533.637 249.566 533.641 249.539 533.641 cv
245.578 533.641 li
245.551 533.641 245.527 533.637 245.504 533.621 cv
245.48 533.613 245.457 533.59 245.438 533.555 cv
245.414 533.527 245.398 533.484 245.387 533.43 cv
245.371 533.379 245.363 533.316 245.367 533.242 cv
245.363 533.172 245.371 533.113 245.387 533.062 cv
245.398 533.012 245.41 532.969 245.43 532.934 cv
245.445 532.902 245.469 532.879 245.492 532.859 cv
245.516 532.844 245.543 532.832 245.578 532.832 cv
247.164 532.832 li
247.164 527.066 li
245.695 527.937 li
245.621 527.984 245.563 528.008 245.52 528.012 cv
245.473 528.023 245.438 528.016 245.41 527.984 cv
245.379 527.961 245.359 527.918 245.352 527.859 cv
245.344 527.801 245.34 527.727 245.34 527.633 cv
245.34 527.57 245.34 527.512 245.348 527.465 cv
245.352 527.418 245.363 527.379 245.375 527.348 cv
245.383 527.316 245.398 527.289 245.422 527.266 cv
245.445 527.242 245.473 527.219 245.508 527.195 cv
247.258 526.078 li
247.27 526.066 247.289 526.055 247.316 526.047 cv
247.336 526.039 247.367 526.031 247.402 526.023 cv
247.434 526.016 247.473 526.012 247.523 526.012 cv
247.566 526.012 247.625 526.012 247.703 526.008 cv
247.793 526.012 247.871 526.016 247.938 526.02 cv
247.996 526.031 248.047 526.043 248.082 526.051 cv
248.113 526.066 248.137 526.082 248.152 526.102 cv
248.164 526.125 248.168 526.148 248.172 526.172 cv
248.172 532.832 li
249.539 532.832 li
249.566 532.832 249.598 532.844 249.629 532.859 cv
249.656 532.879 249.676 532.902 249.695 532.934 cv
249.711 532.969 249.727 533.012 249.734 533.062 cv
249.742 533.113 249.746 533.172 249.75 533.242 cv
cp
f
255.871 533.242 mo
255.867 533.316 255.863 533.379 255.855 533.43 cv
255.844 533.484 255.828 533.527 255.809 533.555 cv
255.785 533.59 255.762 533.613 255.738 533.621 cv
255.715 533.637 255.688 533.641 255.66 533.641 cv
251.699 533.641 li
251.672 533.641 251.648 533.637 251.625 533.621 cv
251.602 533.613 251.578 533.59 251.559 533.555 cv
251.535 533.527 251.52 533.484 251.508 533.43 cv
251.492 533.379 251.484 533.316 251.488 533.242 cv
251.484 533.172 251.492 533.113 251.508 533.062 cv
251.52 533.012 251.531 532.969 251.551 532.934 cv
251.566 532.902 251.59 532.879 251.613 532.859 cv
251.637 532.844 251.664 532.832 251.699 532.832 cv
253.285 532.832 li
253.285 527.066 li
251.816 527.937 li
251.742 527.984 251.684 528.008 251.641 528.012 cv
251.594 528.023 251.559 528.016 251.531 527.984 cv
251.5 527.961 251.48 527.918 251.473 527.859 cv
251.465 527.801 251.461 527.727 251.461 527.633 cv
251.461 527.57 251.461 527.512 251.469 527.465 cv
251.473 527.418 251.484 527.379 251.496 527.348 cv
251.504 527.316 251.52 527.289 251.543 527.266 cv
251.566 527.242 251.594 527.219 251.629 527.195 cv
253.379 526.078 li
253.391 526.066 253.41 526.055 253.438 526.047 cv
253.457 526.039 253.488 526.031 253.523 526.023 cv
253.555 526.016 253.594 526.012 253.645 526.012 cv
253.688 526.012 253.746 526.012 253.824 526.008 cv
253.914 526.012 253.992 526.016 254.059 526.02 cv
254.117 526.031 254.168 526.043 254.203 526.051 cv
254.234 526.066 254.258 526.082 254.273 526.102 cv
254.285 526.125 254.289 526.148 254.293 526.172 cv
254.293 532.832 li
255.66 532.832 li
255.688 532.832 255.719 532.844 255.75 532.859 cv
255.777 532.879 255.797 532.902 255.816 532.934 cv
255.832 532.969 255.848 533.012 255.855 533.062 cv
255.863 533.113 255.867 533.172 255.871 533.242 cv
cp
f
269.93 533.242 mo
269.926 533.316 269.922 533.379 269.914 533.43 cv
269.902 533.484 269.887 533.527 269.867 533.555 cv
269.844 533.59 269.82 533.613 269.797 533.621 cv
269.773 533.637 269.746 533.641 269.719 533.641 cv
265.758 533.641 li
265.73 533.641 265.707 533.637 265.684 533.621 cv
265.66 533.613 265.637 533.59 265.617 533.555 cv
265.594 533.527 265.578 533.484 265.566 533.43 cv
265.551 533.379 265.543 533.316 265.547 533.242 cv
265.543 533.172 265.551 533.113 265.566 533.062 cv
265.578 533.012 265.59 532.969 265.609 532.934 cv
265.625 532.902 265.648 532.879 265.672 532.859 cv
265.695 532.844 265.723 532.832 265.758 532.832 cv
267.344 532.832 li
267.344 527.066 li
265.875 527.937 li
265.801 527.984 265.742 528.008 265.699 528.012 cv
265.652 528.023 265.617 528.016 265.59 527.984 cv
265.559 527.961 265.539 527.918 265.531 527.859 cv
265.523 527.801 265.52 527.727 265.52 527.633 cv
265.52 527.57 265.52 527.512 265.527 527.465 cv
265.531 527.418 265.543 527.379 265.555 527.348 cv
265.563 527.316 265.578 527.289 265.602 527.266 cv
265.625 527.242 265.652 527.219 265.688 527.195 cv
267.438 526.078 li
267.449 526.066 267.469 526.055 267.496 526.047 cv
267.516 526.039 267.547 526.031 267.582 526.023 cv
267.613 526.016 267.652 526.012 267.703 526.012 cv
267.746 526.012 267.805 526.012 267.883 526.008 cv
267.973 526.012 268.051 526.016 268.117 526.02 cv
268.176 526.031 268.227 526.043 268.262 526.051 cv
268.293 526.066 268.316 526.082 268.332 526.102 cv
268.344 526.125 268.348 526.148 268.352 526.172 cv
268.352 532.832 li
269.719 532.832 li
269.746 532.832 269.777 532.844 269.809 532.859 cv
269.836 532.879 269.855 532.902 269.875 532.934 cv
269.891 532.969 269.906 533.012 269.914 533.062 cv
269.922 533.113 269.926 533.172 269.93 533.242 cv
cp
f
276.035 533.207 mo
276.035 533.277 276.027 533.34 276.02 533.395 cv
276.004 533.449 275.992 533.496 275.977 533.531 cv
275.961 533.57 275.938 533.598 275.906 533.613 cv
275.875 533.633 275.844 533.641 275.813 533.641 cv
271.621 533.641 li
271.566 533.641 271.52 533.637 271.48 533.621 cv
271.438 533.613 271.402 533.59 271.375 533.555 cv
271.344 533.527 271.32 533.48 271.309 533.418 cv
271.293 533.359 271.289 533.289 271.289 533.203 cv
271.289 533.129 271.289 533.059 271.297 532.996 cv
271.301 532.937 271.316 532.887 271.336 532.84 cv
271.355 532.797 271.379 532.754 271.41 532.707 cv
271.438 532.668 271.477 532.617 271.531 532.562 cv
273.047 531.004 li
273.395 530.645 273.672 530.324 273.887 530.039 cv
274.098 529.754 274.262 529.492 274.379 529.258 cv
274.488 529.023 274.566 528.812 274.605 528.621 cv
274.641 528.43 274.656 528.25 274.66 528.078 cv
274.656 527.914 274.629 527.754 274.574 527.602 cv
274.516 527.453 274.434 527.32 274.328 527.207 cv
274.219 527.098 274.086 527.008 273.926 526.937 cv
273.762 526.871 273.574 526.84 273.371 526.836 cv
273.121 526.84 272.902 526.871 272.707 526.937 cv
272.512 527.008 272.34 527.082 272.191 527.156 cv
272.043 527.238 271.918 527.309 271.824 527.371 cv
271.723 527.437 271.652 527.473 271.605 527.469 cv
271.574 527.473 271.547 527.465 271.527 527.445 cv
271.504 527.434 271.484 527.406 271.473 527.371 cv
271.457 527.34 271.449 527.293 271.441 527.23 cv
271.434 527.172 271.43 527.102 271.43 527.02 cv
271.43 526.961 271.43 526.91 271.434 526.867 cv
271.438 526.828 271.445 526.793 271.457 526.758 cv
271.465 526.73 271.477 526.699 271.496 526.668 cv
271.508 526.641 271.539 526.609 271.59 526.566 cv
271.633 526.527 271.715 526.469 271.832 526.398 cv
271.945 526.328 272.09 526.262 272.266 526.191 cv
272.438 526.125 272.629 526.066 272.84 526.016 cv
273.047 525.973 273.266 525.949 273.496 525.945 cv
273.863 525.949 274.184 526 274.461 526.102 cv
274.734 526.207 274.965 526.348 275.145 526.527 cv
275.324 526.707 275.461 526.918 275.555 527.156 cv
275.645 527.395 275.688 527.648 275.691 527.914 cv
275.688 528.164 275.668 528.406 275.625 528.641 cv
275.578 528.883 275.484 529.141 275.352 529.418 cv
275.211 529.699 275.012 530.012 274.75 530.352 cv
274.488 530.695 274.141 531.086 273.707 531.531 cv
272.508 532.785 li
275.809 532.785 li
275.836 532.785 275.867 532.797 275.898 532.812 cv
275.926 532.832 275.949 532.855 275.973 532.891 cv
275.988 532.93 276.004 532.977 276.02 533.023 cv
276.027 533.078 276.035 533.137 276.035 533.207 cv
cp
f
290.09 533.242 mo
290.086 533.316 290.082 533.379 290.074 533.43 cv
290.063 533.484 290.047 533.527 290.027 533.555 cv
290.004 533.59 289.98 533.613 289.957 533.621 cv
289.934 533.637 289.906 533.641 289.879 533.641 cv
285.918 533.641 li
285.891 533.641 285.867 533.637 285.844 533.621 cv
285.82 533.613 285.797 533.59 285.777 533.555 cv
285.754 533.527 285.738 533.484 285.727 533.43 cv
285.711 533.379 285.703 533.316 285.707 533.242 cv
285.703 533.172 285.711 533.113 285.727 533.062 cv
285.738 533.012 285.75 532.969 285.77 532.934 cv
285.785 532.902 285.809 532.879 285.832 532.859 cv
285.855 532.844 285.883 532.832 285.918 532.832 cv
287.504 532.832 li
287.504 527.066 li
286.035 527.937 li
285.961 527.984 285.902 528.008 285.859 528.012 cv
285.813 528.023 285.777 528.016 285.75 527.984 cv
285.719 527.961 285.699 527.918 285.691 527.859 cv
285.684 527.801 285.68 527.727 285.68 527.633 cv
285.68 527.57 285.68 527.512 285.688 527.465 cv
285.691 527.418 285.703 527.379 285.715 527.348 cv
285.723 527.316 285.738 527.289 285.762 527.266 cv
285.785 527.242 285.813 527.219 285.848 527.195 cv
287.598 526.078 li
287.609 526.066 287.629 526.055 287.656 526.047 cv
287.676 526.039 287.707 526.031 287.742 526.023 cv
287.773 526.016 287.813 526.012 287.863 526.012 cv
287.906 526.012 287.965 526.012 288.043 526.008 cv
288.133 526.012 288.211 526.016 288.277 526.02 cv
288.336 526.031 288.387 526.043 288.422 526.051 cv
288.453 526.066 288.477 526.082 288.492 526.102 cv
288.504 526.125 288.508 526.148 288.512 526.172 cv
288.512 532.832 li
289.879 532.832 li
289.906 532.832 289.938 532.844 289.969 532.859 cv
289.996 532.879 290.016 532.902 290.035 532.934 cv
290.051 532.969 290.066 533.012 290.074 533.062 cv
290.082 533.113 290.086 533.172 290.09 533.242 cv
cp
f
296.137 531.473 mo
296.137 531.82 296.074 532.137 295.953 532.414 cv
295.832 532.695 295.66 532.934 295.434 533.133 cv
295.207 533.332 294.926 533.484 294.594 533.59 cv
294.262 533.695 293.887 533.746 293.469 533.75 cv
293.215 533.746 292.977 533.727 292.758 533.687 cv
292.535 533.648 292.34 533.602 292.172 533.547 cv
291.996 533.492 291.855 533.434 291.742 533.371 cv
291.625 533.309 291.551 533.266 291.527 533.238 cv
291.496 533.211 291.477 533.184 291.461 533.156 cv
291.445 533.129 291.43 533.094 291.418 533.055 cv
291.406 533.016 291.398 532.969 291.391 532.914 cv
291.383 532.859 291.379 532.789 291.383 532.703 cv
291.379 532.562 291.395 532.465 291.426 532.41 cv
291.453 532.355 291.492 532.328 291.547 532.328 cv
291.582 532.328 291.652 532.359 291.758 532.422 cv
291.863 532.484 292 532.555 292.168 532.625 cv
292.332 532.703 292.527 532.77 292.75 532.828 cv
292.973 532.895 293.219 532.926 293.496 532.922 cv
293.754 532.926 293.988 532.891 294.191 532.82 cv
294.391 532.754 294.559 532.66 294.695 532.539 cv
294.832 532.422 294.934 532.281 295.004 532.109 cv
295.07 531.945 295.105 531.762 295.105 531.566 cv
295.105 531.352 295.059 531.16 294.973 530.984 cv
294.883 530.816 294.758 530.668 294.594 530.539 cv
294.426 530.418 294.219 530.32 293.977 530.254 cv
293.727 530.191 293.449 530.16 293.145 530.156 cv
292.402 530.156 li
292.367 530.16 292.336 530.152 292.305 530.137 cv
292.273 530.121 292.246 530.098 292.227 530.066 cv
292.203 530.035 292.184 529.996 292.172 529.945 cv
292.156 529.895 292.152 529.828 292.152 529.742 cv
292.152 529.672 292.156 529.609 292.168 529.559 cv
292.18 529.512 292.195 529.473 292.219 529.441 cv
292.234 529.414 292.262 529.395 292.293 529.379 cv
292.32 529.371 292.352 529.363 292.387 529.359 cv
293.047 529.359 li
293.305 529.363 293.535 529.328 293.742 529.258 cv
293.945 529.191 294.121 529.098 294.262 528.969 cv
294.402 528.848 294.512 528.699 294.59 528.523 cv
294.668 528.352 294.707 528.156 294.707 527.937 cv
294.707 527.785 294.68 527.637 294.629 527.492 cv
294.578 527.352 294.504 527.227 294.402 527.121 cv
294.301 527.016 294.168 526.934 294.012 526.871 cv
293.848 526.816 293.668 526.785 293.465 526.781 cv
293.238 526.785 293.027 526.82 292.84 526.883 cv
292.645 526.953 292.477 527.023 292.332 527.102 cv
292.18 527.18 292.059 527.254 291.965 527.32 cv
291.867 527.391 291.797 527.426 291.758 527.422 cv
291.73 527.426 291.707 527.422 291.688 527.41 cv
291.664 527.402 291.645 527.383 291.633 527.352 cv
291.617 527.324 291.609 527.281 291.602 527.227 cv
291.594 527.176 291.59 527.105 291.594 527.02 cv
291.59 526.961 291.594 526.91 291.602 526.863 cv
291.605 526.82 291.613 526.781 291.625 526.746 cv
291.633 526.715 291.645 526.684 291.664 526.656 cv
291.676 526.633 291.703 526.602 291.742 526.562 cv
291.781 526.523 291.855 526.469 291.969 526.398 cv
292.082 526.328 292.223 526.262 292.391 526.191 cv
292.555 526.125 292.746 526.066 292.965 526.016 cv
293.18 525.973 293.414 525.949 293.664 525.945 cv
294.016 525.949 294.324 525.992 294.59 526.082 cv
294.855 526.176 295.074 526.305 295.254 526.465 cv
295.43 526.633 295.563 526.828 295.652 527.055 cv
295.738 527.281 295.785 527.535 295.785 527.812 cv
295.785 528.051 295.754 528.273 295.691 528.477 cv
295.629 528.684 295.535 528.863 295.414 529.02 cv
295.293 529.18 295.145 529.316 294.969 529.426 cv
294.793 529.543 294.59 529.617 294.359 529.656 cv
294.359 529.668 li
294.621 529.699 294.859 529.766 295.078 529.867 cv
295.293 529.969 295.48 530.098 295.641 530.254 cv
295.793 530.41 295.914 530.594 296.004 530.805 cv
296.09 531.016 296.137 531.238 296.137 531.473 cv
cp
f
310.281 533.242 mo
310.277 533.316 310.273 533.379 310.266 533.43 cv
310.254 533.484 310.238 533.527 310.219 533.555 cv
310.195 533.59 310.172 533.613 310.148 533.621 cv
310.125 533.637 310.098 533.641 310.07 533.641 cv
306.109 533.641 li
306.082 533.641 306.059 533.637 306.035 533.621 cv
306.012 533.613 305.988 533.59 305.969 533.555 cv
305.945 533.527 305.93 533.484 305.918 533.43 cv
305.902 533.379 305.895 533.316 305.898 533.242 cv
305.895 533.172 305.902 533.113 305.918 533.062 cv
305.93 533.012 305.941 532.969 305.961 532.934 cv
305.977 532.902 306 532.879 306.023 532.859 cv
306.047 532.844 306.074 532.832 306.109 532.832 cv
307.695 532.832 li
307.695 527.066 li
306.227 527.937 li
306.152 527.984 306.094 528.008 306.051 528.012 cv
306.004 528.023 305.969 528.016 305.941 527.984 cv
305.91 527.961 305.891 527.918 305.883 527.859 cv
305.875 527.801 305.871 527.727 305.871 527.633 cv
305.871 527.57 305.871 527.512 305.879 527.465 cv
305.883 527.418 305.895 527.379 305.906 527.348 cv
305.914 527.316 305.93 527.289 305.953 527.266 cv
305.977 527.242 306.004 527.219 306.039 527.195 cv
307.789 526.078 li
307.801 526.066 307.82 526.055 307.848 526.047 cv
307.867 526.039 307.898 526.031 307.934 526.023 cv
307.965 526.016 308.004 526.012 308.055 526.012 cv
308.098 526.012 308.156 526.012 308.234 526.008 cv
308.324 526.012 308.402 526.016 308.469 526.02 cv
308.527 526.031 308.578 526.043 308.613 526.051 cv
308.645 526.066 308.668 526.082 308.684 526.102 cv
308.695 526.125 308.699 526.148 308.703 526.172 cv
308.703 532.832 li
310.07 532.832 li
310.098 532.832 310.129 532.844 310.16 532.859 cv
310.188 532.879 310.207 532.902 310.227 532.934 cv
310.242 532.969 310.258 533.012 310.266 533.062 cv
310.273 533.113 310.277 533.172 310.281 533.242 cv
cp
f
316.703 531.484 mo
316.699 531.617 316.68 531.719 316.645 531.789 cv
316.602 531.863 316.547 531.902 316.484 531.898 cv
315.625 531.898 li
315.625 533.492 li
315.621 533.527 315.613 533.555 315.602 533.574 cv
315.582 533.598 315.555 533.613 315.516 533.629 cv
315.477 533.645 315.422 533.656 315.359 533.664 cv
315.293 533.672 315.211 533.676 315.113 533.676 cv
315.012 533.676 314.934 533.672 314.871 533.664 cv
314.809 533.656 314.758 533.645 314.719 533.629 cv
314.68 533.613 314.652 533.598 314.637 533.574 cv
314.621 533.555 314.613 533.527 314.617 533.492 cv
314.617 531.898 li
311.516 531.898 li
311.469 531.902 311.434 531.895 311.402 531.883 cv
311.371 531.875 311.34 531.855 311.316 531.82 cv
311.285 531.793 311.27 531.746 311.262 531.684 cv
311.254 531.625 311.25 531.551 311.25 531.453 cv
311.25 531.383 311.25 531.316 311.254 531.258 cv
311.258 531.199 311.266 531.145 311.277 531.098 cv
311.289 531.051 311.305 531.004 311.324 530.957 cv
311.344 530.91 311.367 530.863 311.395 530.812 cv
314.098 526.203 li
314.117 526.176 314.145 526.148 314.184 526.121 cv
314.219 526.102 314.27 526.082 314.332 526.062 cv
314.391 526.051 314.461 526.039 314.551 526.031 cv
314.637 526.027 314.742 526.023 314.863 526.023 cv
314.992 526.023 315.105 526.031 315.203 526.039 cv
315.301 526.055 315.379 526.066 315.441 526.078 cv
315.496 526.098 315.543 526.117 315.578 526.141 cv
315.605 526.164 315.621 526.195 315.625 526.227 cv
315.625 531.07 li
316.484 531.07 li
316.547 531.074 316.602 531.109 316.641 531.172 cv
316.68 531.242 316.699 531.344 316.703 531.484 cv
cp
314.617 526.906 mo
314.609 526.906 li
312.172 531.07 li
314.617 531.07 li
cp
f
330.461 533.242 mo
330.457 533.316 330.453 533.379 330.445 533.43 cv
330.434 533.484 330.418 533.527 330.398 533.555 cv
330.375 533.59 330.352 533.613 330.328 533.621 cv
330.305 533.637 330.277 533.641 330.25 533.641 cv
326.289 533.641 li
326.262 533.641 326.238 533.637 326.215 533.621 cv
326.191 533.613 326.168 533.59 326.148 533.555 cv
326.125 533.527 326.109 533.484 326.098 533.43 cv
326.082 533.379 326.074 533.316 326.078 533.242 cv
326.074 533.172 326.082 533.113 326.098 533.062 cv
326.109 533.012 326.121 532.969 326.141 532.934 cv
326.156 532.902 326.18 532.879 326.203 532.859 cv
326.227 532.844 326.254 532.832 326.289 532.832 cv
327.875 532.832 li
327.875 527.066 li
326.406 527.937 li
326.332 527.984 326.273 528.008 326.23 528.012 cv
326.184 528.023 326.148 528.016 326.121 527.984 cv
326.09 527.961 326.07 527.918 326.063 527.859 cv
326.055 527.801 326.051 527.727 326.051 527.633 cv
326.051 527.57 326.051 527.512 326.059 527.465 cv
326.063 527.418 326.074 527.379 326.086 527.348 cv
326.094 527.316 326.109 527.289 326.133 527.266 cv
326.156 527.242 326.184 527.219 326.219 527.195 cv
327.969 526.078 li
327.98 526.066 328 526.055 328.027 526.047 cv
328.047 526.039 328.078 526.031 328.113 526.023 cv
328.145 526.016 328.184 526.012 328.234 526.012 cv
328.277 526.012 328.336 526.012 328.414 526.008 cv
328.504 526.012 328.582 526.016 328.648 526.02 cv
328.707 526.031 328.758 526.043 328.793 526.051 cv
328.824 526.066 328.848 526.082 328.863 526.102 cv
328.875 526.125 328.879 526.148 328.883 526.172 cv
328.883 532.832 li
330.25 532.832 li
330.277 532.832 330.309 532.844 330.34 532.859 cv
330.367 532.879 330.387 532.902 330.406 532.934 cv
330.422 532.969 330.438 533.012 330.445 533.062 cv
330.453 533.113 330.457 533.172 330.461 533.242 cv
cp
f
336.527 531.203 mo
336.527 531.609 336.457 531.973 336.32 532.289 cv
336.184 532.605 335.992 532.871 335.742 533.09 cv
335.492 533.309 335.191 533.473 334.848 533.582 cv
334.496 533.691 334.113 533.746 333.695 533.75 cv
333.457 533.746 333.234 533.73 333.027 533.699 cv
332.813 533.668 332.625 533.629 332.465 533.582 cv
332.297 533.535 332.164 533.488 332.063 533.437 cv
331.957 533.395 331.887 533.355 331.859 533.324 cv
331.828 533.297 331.809 533.273 331.797 533.246 cv
331.785 533.227 331.773 533.199 331.766 533.164 cv
331.75 533.133 331.746 533.09 331.746 533.039 cv
331.742 532.988 331.738 532.926 331.742 532.855 cv
331.738 532.793 331.742 532.734 331.75 532.68 cv
331.754 532.625 331.766 532.582 331.781 532.551 cv
331.797 532.52 331.813 532.496 331.836 532.477 cv
331.852 532.465 331.879 532.457 331.91 532.453 cv
331.949 532.457 332.008 532.48 332.09 532.527 cv
332.172 532.574 332.281 532.629 332.422 532.684 cv
332.559 532.742 332.73 532.793 332.938 532.844 cv
333.141 532.898 333.387 532.926 333.668 532.922 cv
333.93 532.926 334.168 532.895 334.391 532.828 cv
334.605 532.77 334.793 532.672 334.953 532.535 cv
335.109 532.406 335.234 532.238 335.324 532.035 cv
335.414 531.832 335.461 531.586 335.461 531.297 cv
335.461 531.055 335.422 530.844 335.348 530.656 cv
335.27 530.473 335.152 530.316 334.996 530.191 cv
334.836 530.07 334.637 529.98 334.395 529.918 cv
334.152 529.863 333.863 529.832 333.527 529.828 cv
333.289 529.832 333.082 529.844 332.914 529.863 cv
332.738 529.891 332.578 529.902 332.43 529.898 cv
332.316 529.902 332.238 529.875 332.195 529.82 cv
332.145 529.77 332.121 529.672 332.125 529.527 cv
332.125 526.437 li
332.121 526.312 332.152 526.215 332.215 526.152 cv
332.277 526.09 332.363 526.059 332.477 526.059 cv
335.836 526.059 li
335.867 526.059 335.895 526.07 335.926 526.086 cv
335.949 526.105 335.977 526.129 336 526.164 cv
336.02 526.203 336.031 526.25 336.043 526.301 cv
336.051 526.359 336.059 526.422 336.059 526.492 cv
336.059 526.633 336.039 526.742 336 526.82 cv
335.961 526.898 335.906 526.937 335.844 526.937 cv
333.133 526.937 li
333.133 529.062 li
333.262 529.047 333.398 529.035 333.539 529.031 cv
333.676 529.027 333.832 529.023 334.016 529.023 cv
334.43 529.023 334.797 529.078 335.109 529.18 cv
335.422 529.289 335.68 529.434 335.891 529.621 cv
336.098 529.809 336.258 530.039 336.367 530.309 cv
336.473 530.578 336.527 530.875 336.527 531.203 cv
cp
f
350.648 533.242 mo
350.645 533.316 350.641 533.379 350.633 533.43 cv
350.621 533.484 350.605 533.527 350.586 533.555 cv
350.563 533.59 350.539 533.613 350.516 533.621 cv
350.492 533.637 350.465 533.641 350.438 533.641 cv
346.477 533.641 li
346.449 533.641 346.426 533.637 346.402 533.621 cv
346.379 533.613 346.355 533.59 346.336 533.555 cv
346.313 533.527 346.297 533.484 346.285 533.43 cv
346.27 533.379 346.262 533.316 346.266 533.242 cv
346.262 533.172 346.27 533.113 346.285 533.062 cv
346.297 533.012 346.309 532.969 346.328 532.934 cv
346.344 532.902 346.367 532.879 346.391 532.859 cv
346.414 532.844 346.441 532.832 346.477 532.832 cv
348.063 532.832 li
348.063 527.066 li
346.594 527.937 li
346.52 527.984 346.461 528.008 346.418 528.012 cv
346.371 528.023 346.336 528.016 346.309 527.984 cv
346.277 527.961 346.258 527.918 346.25 527.859 cv
346.242 527.801 346.238 527.727 346.238 527.633 cv
346.238 527.57 346.238 527.512 346.246 527.465 cv
346.25 527.418 346.262 527.379 346.273 527.348 cv
346.281 527.316 346.297 527.289 346.32 527.266 cv
346.344 527.242 346.371 527.219 346.406 527.195 cv
348.156 526.078 li
348.168 526.066 348.188 526.055 348.215 526.047 cv
348.234 526.039 348.266 526.031 348.301 526.023 cv
348.332 526.016 348.371 526.012 348.422 526.012 cv
348.465 526.012 348.523 526.012 348.602 526.008 cv
348.691 526.012 348.77 526.016 348.836 526.02 cv
348.895 526.031 348.945 526.043 348.98 526.051 cv
349.012 526.066 349.035 526.082 349.051 526.102 cv
349.063 526.125 349.066 526.148 349.07 526.172 cv
349.07 532.832 li
350.438 532.832 li
350.465 532.832 350.496 532.844 350.527 532.859 cv
350.555 532.879 350.574 532.902 350.594 532.934 cv
350.609 532.969 350.625 533.012 350.633 533.062 cv
350.641 533.113 350.645 533.172 350.648 533.242 cv
cp
f
356.949 531.187 mo
356.945 531.52 356.895 531.84 356.797 532.152 cv
356.691 532.465 356.535 532.738 356.328 532.973 cv
356.113 533.207 355.848 533.398 355.523 533.539 cv
355.195 533.68 354.813 533.746 354.375 533.75 cv
354.059 533.746 353.777 533.711 353.539 533.633 cv
353.293 533.559 353.082 533.445 352.906 533.301 cv
352.723 533.16 352.574 532.984 352.457 532.77 cv
352.336 532.562 352.238 532.32 352.168 532.047 cv
352.09 531.777 352.039 531.484 352.012 531.16 cv
351.977 530.844 351.961 530.5 351.965 530.133 cv
351.961 529.809 351.98 529.48 352.02 529.148 cv
352.055 528.816 352.117 528.496 352.207 528.187 cv
352.293 527.879 352.414 527.59 352.57 527.316 cv
352.727 527.047 352.918 526.809 353.152 526.605 cv
353.383 526.406 353.664 526.246 353.988 526.129 cv
354.309 526.012 354.684 525.953 355.121 525.953 cv
355.262 525.953 355.41 525.965 355.559 525.98 cv
355.707 526.004 355.844 526.027 355.969 526.051 cv
356.094 526.082 356.199 526.113 356.285 526.148 cv
356.371 526.184 356.426 526.211 356.453 526.234 cv
356.48 526.258 356.5 526.281 356.516 526.305 cv
356.523 526.328 356.535 526.355 356.547 526.387 cv
356.551 526.418 356.559 526.453 356.566 526.484 cv
356.57 526.523 356.57 526.566 356.574 526.621 cv
356.57 526.691 356.57 526.754 356.57 526.805 cv
356.566 526.855 356.559 526.895 356.547 526.926 cv
356.531 526.957 356.512 526.98 356.492 526.996 cv
356.469 527.012 356.441 527.02 356.41 527.02 cv
356.363 527.02 356.305 527.008 356.23 526.98 cv
356.156 526.953 356.066 526.922 355.961 526.887 cv
355.855 526.855 355.727 526.824 355.578 526.797 cv
355.426 526.773 355.254 526.762 355.055 526.758 cv
354.691 526.762 354.379 526.836 354.117 526.98 cv
353.852 527.133 353.637 527.332 353.473 527.578 cv
353.309 527.832 353.184 528.121 353.105 528.449 cv
353.023 528.777 352.98 529.121 352.969 529.48 cv
353.07 529.422 353.184 529.363 353.313 529.305 cv
353.438 529.25 353.574 529.199 353.727 529.148 cv
353.875 529.105 354.035 529.066 354.203 529.035 cv
354.371 529.004 354.551 528.988 354.746 528.988 cv
355.152 528.988 355.5 529.047 355.781 529.156 cv
356.063 529.27 356.289 529.422 356.461 529.617 cv
356.633 529.816 356.758 530.051 356.836 530.316 cv
356.91 530.59 356.945 530.879 356.949 531.187 cv
cp
355.926 531.281 mo
355.922 531.055 355.898 530.848 355.859 530.66 cv
355.813 530.477 355.738 530.32 355.633 530.191 cv
355.527 530.062 355.387 529.961 355.211 529.891 cv
355.035 529.82 354.82 529.785 354.563 529.785 cv
354.418 529.785 354.273 529.801 354.129 529.824 cv
353.98 529.852 353.84 529.887 353.707 529.93 cv
353.574 529.977 353.445 530.027 353.32 530.09 cv
353.195 530.152 353.082 530.219 352.988 530.281 cv
352.984 530.789 353.016 531.211 353.082 531.551 cv
353.145 531.891 353.238 532.164 353.363 532.367 cv
353.484 532.574 353.641 532.719 353.824 532.805 cv
354.004 532.895 354.219 532.937 354.469 532.937 cv
354.719 532.937 354.934 532.891 355.117 532.797 cv
355.301 532.703 355.453 532.578 355.574 532.418 cv
355.695 532.262 355.785 532.086 355.84 531.887 cv
355.895 531.691 355.922 531.488 355.926 531.281 cv
cp
f
370.809 533.242 mo
370.805 533.316 370.801 533.379 370.793 533.43 cv
370.781 533.484 370.766 533.527 370.746 533.555 cv
370.723 533.59 370.699 533.613 370.676 533.621 cv
370.652 533.637 370.625 533.641 370.598 533.641 cv
366.637 533.641 li
366.609 533.641 366.586 533.637 366.563 533.621 cv
366.539 533.613 366.516 533.59 366.496 533.555 cv
366.473 533.527 366.457 533.484 366.445 533.43 cv
366.43 533.379 366.422 533.316 366.426 533.242 cv
366.422 533.172 366.43 533.113 366.445 533.062 cv
366.457 533.012 366.469 532.969 366.488 532.934 cv
366.504 532.902 366.527 532.879 366.551 532.859 cv
366.574 532.844 366.602 532.832 366.637 532.832 cv
368.223 532.832 li
368.223 527.066 li
366.754 527.937 li
366.68 527.984 366.621 528.008 366.578 528.012 cv
366.531 528.023 366.496 528.016 366.469 527.984 cv
366.438 527.961 366.418 527.918 366.41 527.859 cv
366.402 527.801 366.398 527.727 366.398 527.633 cv
366.398 527.57 366.398 527.512 366.406 527.465 cv
366.41 527.418 366.422 527.379 366.434 527.348 cv
366.441 527.316 366.457 527.289 366.48 527.266 cv
366.504 527.242 366.531 527.219 366.566 527.195 cv
368.316 526.078 li
368.328 526.066 368.348 526.055 368.375 526.047 cv
368.395 526.039 368.426 526.031 368.461 526.023 cv
368.492 526.016 368.531 526.012 368.582 526.012 cv
368.625 526.012 368.684 526.012 368.762 526.008 cv
368.852 526.012 368.93 526.016 368.996 526.02 cv
369.055 526.031 369.105 526.043 369.141 526.051 cv
369.172 526.066 369.195 526.082 369.211 526.102 cv
369.223 526.125 369.227 526.148 369.23 526.172 cv
369.23 532.832 li
370.598 532.832 li
370.625 532.832 370.656 532.844 370.688 532.859 cv
370.715 532.879 370.734 532.902 370.754 532.934 cv
370.77 532.969 370.785 533.012 370.793 533.062 cv
370.801 533.113 370.805 533.172 370.809 533.242 cv
cp
f
377.023 526.492 mo
377.02 526.562 377.016 526.629 377.016 526.684 cv
377.008 526.742 377 526.797 376.992 526.848 cv
376.977 526.902 376.965 526.953 376.949 527 cv
376.934 527.051 376.914 527.102 376.891 527.156 cv
374.16 533.445 li
374.141 533.496 374.113 533.535 374.086 533.562 cv
374.055 533.594 374.02 533.617 373.973 533.633 cv
373.926 533.648 373.867 533.656 373.801 533.664 cv
373.727 533.672 373.641 533.676 373.547 533.676 cv
373.406 533.676 373.305 533.668 373.234 533.656 cv
373.16 533.645 373.105 533.629 373.074 533.602 cv
373.039 533.578 373.023 533.547 373.027 533.508 cv
373.031 533.473 373.047 533.43 373.07 533.375 cv
375.941 526.945 li
372.305 526.945 li
372.227 526.949 372.172 526.91 372.133 526.828 cv
372.094 526.754 372.074 526.645 372.078 526.5 cv
372.074 526.426 372.078 526.359 372.094 526.305 cv
372.102 526.25 372.117 526.207 372.137 526.168 cv
372.156 526.133 372.18 526.105 372.207 526.086 cv
372.234 526.07 372.266 526.059 372.305 526.059 cv
376.719 526.059 li
376.773 526.059 376.82 526.066 376.863 526.078 cv
376.902 526.09 376.934 526.113 376.957 526.148 cv
376.977 526.184 376.996 526.227 377.008 526.281 cv
377.016 526.336 377.02 526.406 377.023 526.492 cv
cp
f
390.988 533.242 mo
390.984 533.316 390.98 533.379 390.973 533.43 cv
390.961 533.484 390.945 533.527 390.926 533.555 cv
390.902 533.59 390.879 533.613 390.855 533.621 cv
390.832 533.637 390.805 533.641 390.777 533.641 cv
386.816 533.641 li
386.789 533.641 386.766 533.637 386.742 533.621 cv
386.719 533.613 386.695 533.59 386.676 533.555 cv
386.652 533.527 386.637 533.484 386.625 533.43 cv
386.609 533.379 386.602 533.316 386.605 533.242 cv
386.602 533.172 386.609 533.113 386.625 533.062 cv
386.637 533.012 386.648 532.969 386.668 532.934 cv
386.684 532.902 386.707 532.879 386.73 532.859 cv
386.754 532.844 386.781 532.832 386.816 532.832 cv
388.402 532.832 li
388.402 527.066 li
386.934 527.937 li
386.859 527.984 386.801 528.008 386.758 528.012 cv
386.711 528.023 386.676 528.016 386.648 527.984 cv
386.617 527.961 386.598 527.918 386.59 527.859 cv
386.582 527.801 386.578 527.727 386.578 527.633 cv
386.578 527.57 386.578 527.512 386.586 527.465 cv
386.59 527.418 386.602 527.379 386.613 527.348 cv
386.621 527.316 386.637 527.289 386.66 527.266 cv
386.684 527.242 386.711 527.219 386.746 527.195 cv
388.496 526.078 li
388.508 526.066 388.527 526.055 388.555 526.047 cv
388.574 526.039 388.605 526.031 388.641 526.023 cv
388.672 526.016 388.711 526.012 388.762 526.012 cv
388.805 526.012 388.863 526.012 388.941 526.008 cv
389.031 526.012 389.109 526.016 389.176 526.02 cv
389.234 526.031 389.285 526.043 389.32 526.051 cv
389.352 526.066 389.375 526.082 389.391 526.102 cv
389.402 526.125 389.406 526.148 389.41 526.172 cv
389.41 532.832 li
390.777 532.832 li
390.805 532.832 390.836 532.844 390.867 532.859 cv
390.895 532.879 390.914 532.902 390.934 532.934 cv
390.949 532.969 390.965 533.012 390.973 533.062 cv
390.98 533.113 390.984 533.172 390.988 533.242 cv
cp
f
397.27 531.695 mo
397.27 532.023 397.211 532.316 397.094 532.57 cv
396.977 532.828 396.805 533.043 396.586 533.219 cv
396.363 533.398 396.094 533.531 395.77 533.617 cv
395.441 533.703 395.07 533.746 394.656 533.75 cv
394.266 533.746 393.914 533.707 393.605 533.629 cv
393.297 533.551 393.035 533.43 392.82 533.266 cv
392.605 533.105 392.441 532.91 392.328 532.672 cv
392.215 532.441 392.16 532.172 392.16 531.871 cv
392.16 531.637 392.199 531.418 392.277 531.215 cv
392.355 531.016 392.465 530.832 392.613 530.664 cv
392.758 530.5 392.941 530.344 393.156 530.195 cv
393.367 530.047 393.609 529.906 393.883 529.773 cv
393.648 529.656 393.441 529.531 393.262 529.391 cv
393.082 529.258 392.93 529.109 392.805 528.949 cv
392.68 528.793 392.582 528.625 392.52 528.441 cv
392.449 528.266 392.418 528.07 392.422 527.859 cv
392.418 527.598 392.465 527.348 392.566 527.113 cv
392.66 526.879 392.805 526.676 393 526.504 cv
393.188 526.332 393.434 526.199 393.738 526.098 cv
394.035 526 394.387 525.949 394.785 525.945 cv
395.168 525.949 395.496 525.996 395.777 526.086 cv
396.051 526.18 396.281 526.305 396.469 526.461 cv
396.648 526.621 396.785 526.805 396.871 527.02 cv
396.957 527.238 397 527.469 397 527.711 cv
397 527.91 396.965 528.102 396.902 528.285 cv
396.832 528.473 396.738 528.648 396.617 528.809 cv
396.488 528.977 396.336 529.129 396.156 529.27 cv
395.977 529.41 395.77 529.543 395.535 529.668 cv
395.813 529.809 396.059 529.949 396.277 530.09 cv
396.492 530.234 396.672 530.391 396.82 530.555 cv
396.961 530.723 397.074 530.898 397.152 531.082 cv
397.23 531.27 397.27 531.473 397.27 531.695 cv
cp
396.004 527.805 mo
396.004 527.641 395.973 527.492 395.918 527.359 cv
395.859 527.227 395.777 527.113 395.672 527.02 cv
395.559 526.926 395.422 526.855 395.262 526.809 cv
395.098 526.762 394.914 526.738 394.711 526.734 cv
394.285 526.738 393.965 526.832 393.75 527.02 cv
393.531 527.211 393.426 527.473 393.426 527.805 cv
393.426 527.957 393.449 528.102 393.504 528.23 cv
393.555 528.363 393.637 528.484 393.75 528.602 cv
393.859 528.719 394 528.836 394.172 528.945 cv
394.34 529.059 394.543 529.172 394.781 529.293 cv
395.172 529.09 395.477 528.867 395.688 528.621 cv
395.898 528.375 396.004 528.102 396.004 527.805 cv
cp
396.25 531.801 mo
396.25 531.621 396.215 531.461 396.148 531.312 cv
396.082 531.172 395.98 531.035 395.848 530.902 cv
395.711 530.777 395.543 530.652 395.344 530.531 cv
395.141 530.414 394.91 530.289 394.645 530.16 cv
394.395 530.285 394.176 530.406 393.996 530.523 cv
393.809 530.645 393.656 530.77 393.539 530.898 cv
393.414 531.031 393.324 531.168 393.27 531.309 cv
393.207 531.449 393.18 531.605 393.18 531.777 cv
393.18 532.156 393.309 532.449 393.57 532.656 cv
393.828 532.867 394.215 532.973 394.734 532.969 cv
395.23 532.973 395.609 532.867 395.867 532.656 cv
396.121 532.445 396.25 532.16 396.25 531.801 cv
cp
f
411.168 533.242 mo
411.164 533.316 411.16 533.379 411.152 533.43 cv
411.141 533.484 411.125 533.527 411.105 533.555 cv
411.082 533.59 411.059 533.613 411.035 533.621 cv
411.012 533.637 410.984 533.641 410.957 533.641 cv
406.996 533.641 li
406.969 533.641 406.945 533.637 406.922 533.621 cv
406.898 533.613 406.875 533.59 406.855 533.555 cv
406.832 533.527 406.816 533.484 406.805 533.43 cv
406.789 533.379 406.781 533.316 406.785 533.242 cv
406.781 533.172 406.789 533.113 406.805 533.062 cv
406.816 533.012 406.828 532.969 406.848 532.934 cv
406.863 532.902 406.887 532.879 406.91 532.859 cv
406.934 532.844 406.961 532.832 406.996 532.832 cv
408.582 532.832 li
408.582 527.066 li
407.113 527.937 li
407.039 527.984 406.98 528.008 406.938 528.012 cv
406.891 528.023 406.855 528.016 406.828 527.984 cv
406.797 527.961 406.777 527.918 406.77 527.859 cv
406.762 527.801 406.758 527.727 406.758 527.633 cv
406.758 527.57 406.758 527.512 406.766 527.465 cv
406.77 527.418 406.781 527.379 406.793 527.348 cv
406.801 527.316 406.816 527.289 406.84 527.266 cv
406.863 527.242 406.891 527.219 406.926 527.195 cv
408.676 526.078 li
408.688 526.066 408.707 526.055 408.734 526.047 cv
408.754 526.039 408.785 526.031 408.82 526.023 cv
408.852 526.016 408.891 526.012 408.941 526.012 cv
408.984 526.012 409.043 526.012 409.121 526.008 cv
409.211 526.012 409.289 526.016 409.355 526.02 cv
409.414 526.031 409.465 526.043 409.5 526.051 cv
409.531 526.066 409.555 526.082 409.57 526.102 cv
409.582 526.125 409.586 526.148 409.59 526.172 cv
409.59 532.832 li
410.957 532.832 li
410.984 532.832 411.016 532.844 411.047 532.859 cv
411.074 532.879 411.094 532.902 411.113 532.934 cv
411.129 532.969 411.145 533.012 411.152 533.062 cv
411.16 533.113 411.164 533.172 411.168 533.242 cv
cp
f
417.332 529.551 mo
417.332 529.879 417.313 530.211 417.273 530.547 cv
417.234 530.883 417.168 531.207 417.074 531.52 cv
416.98 531.832 416.852 532.125 416.695 532.391 cv
416.535 532.664 416.336 532.898 416.098 533.102 cv
415.855 533.305 415.57 533.465 415.242 533.578 cv
414.91 533.691 414.527 533.746 414.094 533.75 cv
413.922 533.746 413.758 533.734 413.602 533.719 cv
413.441 533.695 413.301 533.672 413.176 533.641 cv
413.047 533.609 412.941 533.578 412.855 533.543 cv
412.77 533.508 412.707 533.473 412.668 533.437 cv
412.629 533.402 412.598 533.355 412.582 533.293 cv
412.559 533.238 412.551 533.156 412.555 533.047 cv
412.551 532.969 412.555 532.898 412.563 532.844 cv
412.57 532.793 412.578 532.754 412.59 532.727 cv
412.602 532.703 412.617 532.687 412.641 532.672 cv
412.656 532.664 412.684 532.656 412.719 532.656 cv
412.762 532.656 412.824 532.672 412.902 532.699 cv
412.98 532.73 413.078 532.762 413.195 532.797 cv
413.313 532.836 413.453 532.871 413.617 532.895 cv
413.777 532.926 413.957 532.937 414.156 532.937 cv
414.535 532.937 414.859 532.867 415.133 532.719 cv
415.402 532.578 415.625 532.379 415.797 532.129 cv
415.969 531.883 416.098 531.598 416.184 531.273 cv
416.27 530.953 416.316 530.613 416.324 530.25 cv
416.117 530.371 415.867 530.477 415.582 530.57 cv
415.289 530.664 414.957 530.711 414.586 530.711 cv
414.16 530.711 413.805 530.656 413.52 530.539 cv
413.23 530.43 413 530.27 412.828 530.066 cv
412.652 529.867 412.527 529.633 412.453 529.355 cv
412.375 529.086 412.34 528.785 412.34 528.461 cv
412.34 528.125 412.387 527.809 412.484 527.504 cv
412.582 527.203 412.734 526.934 412.941 526.703 cv
413.148 526.477 413.414 526.293 413.734 526.152 cv
414.055 526.016 414.438 525.949 414.883 525.945 cv
415.199 525.949 415.477 525.988 415.723 526.066 cv
415.965 526.148 416.18 526.266 416.359 526.414 cv
416.539 526.57 416.691 526.75 416.816 526.961 cv
416.941 527.172 417.039 527.414 417.117 527.684 cv
417.191 527.953 417.246 528.246 417.281 528.559 cv
417.313 528.879 417.332 529.207 417.332 529.551 cv
cp
416.305 529.437 mo
416.301 528.941 416.27 528.52 416.207 528.176 cv
416.141 527.836 416.043 527.559 415.914 527.348 cv
415.781 527.137 415.621 526.984 415.438 526.891 cv
415.246 526.797 415.031 526.75 414.789 526.75 cv
414.531 526.75 414.313 526.797 414.137 526.887 cv
413.953 526.98 413.805 527.105 413.695 527.258 cv
413.578 527.414 413.496 527.586 413.441 527.781 cv
413.387 527.977 413.359 528.18 413.359 528.383 cv
413.359 528.617 413.383 528.828 413.434 529.02 cv
413.48 529.211 413.559 529.371 413.672 529.504 cv
413.777 529.637 413.922 529.742 414.098 529.812 cv
414.27 529.891 414.484 529.926 414.75 529.922 cv
415.039 529.926 415.324 529.883 415.598 529.789 cv
415.871 529.703 416.105 529.586 416.305 529.437 cv
cp
f
431.313 533.207 mo
431.313 533.277 431.305 533.34 431.297 533.395 cv
431.281 533.449 431.27 533.496 431.254 533.531 cv
431.238 533.57 431.215 533.598 431.184 533.613 cv
431.152 533.633 431.121 533.641 431.09 533.641 cv
426.898 533.641 li
426.844 533.641 426.797 533.637 426.758 533.621 cv
426.715 533.613 426.68 533.59 426.652 533.555 cv
426.621 533.527 426.598 533.48 426.586 533.418 cv
426.57 533.359 426.566 533.289 426.566 533.203 cv
426.566 533.129 426.566 533.059 426.574 532.996 cv
426.578 532.937 426.594 532.887 426.613 532.84 cv
426.633 532.797 426.656 532.754 426.688 532.707 cv
426.715 532.668 426.754 532.617 426.809 532.562 cv
428.324 531.004 li
428.672 530.645 428.949 530.324 429.164 530.039 cv
429.375 529.754 429.539 529.492 429.656 529.258 cv
429.766 529.023 429.844 528.812 429.883 528.621 cv
429.918 528.43 429.934 528.25 429.938 528.078 cv
429.934 527.914 429.906 527.754 429.852 527.602 cv
429.793 527.453 429.711 527.32 429.605 527.207 cv
429.496 527.098 429.363 527.008 429.203 526.937 cv
429.039 526.871 428.852 526.84 428.648 526.836 cv
428.398 526.84 428.18 526.871 427.984 526.937 cv
427.789 527.008 427.617 527.082 427.469 527.156 cv
427.32 527.238 427.195 527.309 427.102 527.371 cv
427 527.437 426.93 527.473 426.883 527.469 cv
426.852 527.473 426.824 527.465 426.805 527.445 cv
426.781 527.434 426.762 527.406 426.75 527.371 cv
426.734 527.34 426.727 527.293 426.719 527.23 cv
426.711 527.172 426.707 527.102 426.707 527.02 cv
426.707 526.961 426.707 526.91 426.711 526.867 cv
426.715 526.828 426.723 526.793 426.734 526.758 cv
426.742 526.73 426.754 526.699 426.773 526.668 cv
426.785 526.641 426.816 526.609 426.867 526.566 cv
426.91 526.527 426.992 526.469 427.109 526.398 cv
427.223 526.328 427.367 526.262 427.543 526.191 cv
427.715 526.125 427.906 526.066 428.117 526.016 cv
428.324 525.973 428.543 525.949 428.773 525.945 cv
429.141 525.949 429.461 526 429.738 526.102 cv
430.012 526.207 430.242 526.348 430.422 526.527 cv
430.602 526.707 430.738 526.918 430.832 527.156 cv
430.922 527.395 430.965 527.648 430.969 527.914 cv
430.965 528.164 430.945 528.406 430.902 528.641 cv
430.855 528.883 430.762 529.141 430.629 529.418 cv
430.488 529.699 430.289 530.012 430.027 530.352 cv
429.766 530.695 429.418 531.086 428.984 531.531 cv
427.785 532.785 li
431.086 532.785 li
431.113 532.785 431.145 532.797 431.176 532.812 cv
431.203 532.832 431.227 532.855 431.25 532.891 cv
431.266 532.93 431.281 532.977 431.297 533.023 cv
431.305 533.078 431.313 533.137 431.313 533.207 cv
cp
f
437.684 529.832 mo
437.68 530.414 437.633 530.945 437.547 531.426 cv
437.453 531.91 437.301 532.324 437.09 532.668 cv
436.871 533.012 436.594 533.281 436.254 533.469 cv
435.906 533.656 435.484 533.746 434.984 533.75 cv
434.508 533.746 434.105 533.664 433.781 533.496 cv
433.453 533.328 433.191 533.078 432.992 532.746 cv
432.789 532.418 432.645 532.012 432.566 531.527 cv
432.48 531.047 432.441 530.492 432.441 529.867 cv
432.441 529.289 432.488 528.762 432.582 528.277 cv
432.676 527.801 432.828 527.387 433.039 527.035 cv
433.25 526.691 433.527 526.422 433.871 526.23 cv
434.215 526.043 434.637 525.949 435.137 525.945 cv
435.613 525.949 436.016 526.035 436.344 526.203 cv
436.672 526.375 436.934 526.625 437.133 526.953 cv
437.332 527.285 437.473 527.691 437.559 528.172 cv
437.637 528.656 437.68 529.207 437.684 529.832 cv
cp
436.652 529.902 mo
436.648 529.527 436.637 529.187 436.613 528.883 cv
436.586 528.582 436.543 528.316 436.492 528.086 cv
436.438 527.859 436.371 527.664 436.285 527.492 cv
436.199 527.328 436.098 527.191 435.984 527.082 cv
435.863 526.98 435.73 526.902 435.582 526.848 cv
435.434 526.801 435.266 526.773 435.078 526.773 cv
434.746 526.773 434.477 526.852 434.27 527.008 cv
434.059 527.164 433.895 527.379 433.777 527.652 cv
433.66 527.926 433.578 528.246 433.535 528.613 cv
433.492 528.98 433.473 529.375 433.473 529.797 cv
433.473 530.367 433.5 530.852 433.559 531.242 cv
433.617 531.641 433.711 531.961 433.836 532.211 cv
433.961 532.461 434.121 532.645 434.324 532.758 cv
434.52 532.871 434.762 532.926 435.043 532.926 cv
435.262 532.926 435.453 532.891 435.621 532.82 cv
435.785 532.75 435.926 532.652 436.047 532.52 cv
436.164 532.391 436.266 532.23 436.344 532.047 cv
436.422 531.867 436.484 531.664 436.531 531.437 cv
436.578 531.215 436.609 530.977 436.625 530.715 cv
436.641 530.457 436.648 530.184 436.652 529.902 cv
cp
f
451.504 533.207 mo
451.504 533.277 451.496 533.34 451.488 533.395 cv
451.473 533.449 451.461 533.496 451.445 533.531 cv
451.43 533.57 451.406 533.598 451.375 533.613 cv
451.344 533.633 451.313 533.641 451.281 533.641 cv
447.09 533.641 li
447.035 533.641 446.988 533.637 446.949 533.621 cv
446.906 533.613 446.871 533.59 446.844 533.555 cv
446.813 533.527 446.789 533.48 446.777 533.418 cv
446.762 533.359 446.758 533.289 446.758 533.203 cv
446.758 533.129 446.758 533.059 446.766 532.996 cv
446.77 532.937 446.785 532.887 446.805 532.84 cv
446.824 532.797 446.848 532.754 446.879 532.707 cv
446.906 532.668 446.945 532.617 447 532.562 cv
448.516 531.004 li
448.863 530.645 449.141 530.324 449.355 530.039 cv
449.566 529.754 449.73 529.492 449.848 529.258 cv
449.957 529.023 450.035 528.812 450.074 528.621 cv
450.109 528.43 450.125 528.25 450.129 528.078 cv
450.125 527.914 450.098 527.754 450.043 527.602 cv
449.984 527.453 449.902 527.32 449.797 527.207 cv
449.688 527.098 449.555 527.008 449.395 526.937 cv
449.23 526.871 449.043 526.84 448.84 526.836 cv
448.59 526.84 448.371 526.871 448.176 526.937 cv
447.98 527.008 447.809 527.082 447.66 527.156 cv
447.512 527.238 447.387 527.309 447.293 527.371 cv
447.191 527.437 447.121 527.473 447.074 527.469 cv
447.043 527.473 447.016 527.465 446.996 527.445 cv
446.973 527.434 446.953 527.406 446.941 527.371 cv
446.926 527.34 446.918 527.293 446.91 527.23 cv
446.902 527.172 446.898 527.102 446.898 527.02 cv
446.898 526.961 446.898 526.91 446.902 526.867 cv
446.906 526.828 446.914 526.793 446.926 526.758 cv
446.934 526.73 446.945 526.699 446.965 526.668 cv
446.977 526.641 447.008 526.609 447.059 526.566 cv
447.102 526.527 447.184 526.469 447.301 526.398 cv
447.414 526.328 447.559 526.262 447.734 526.191 cv
447.906 526.125 448.098 526.066 448.309 526.016 cv
448.516 525.973 448.734 525.949 448.965 525.945 cv
449.332 525.949 449.652 526 449.93 526.102 cv
450.203 526.207 450.434 526.348 450.613 526.527 cv
450.793 526.707 450.93 526.918 451.023 527.156 cv
451.113 527.395 451.156 527.648 451.16 527.914 cv
451.156 528.164 451.137 528.406 451.094 528.641 cv
451.047 528.883 450.953 529.141 450.82 529.418 cv
450.68 529.699 450.48 530.012 450.219 530.352 cv
449.957 530.695 449.609 531.086 449.176 531.531 cv
447.977 532.785 li
451.277 532.785 li
451.305 532.785 451.336 532.797 451.367 532.812 cv
451.395 532.832 451.418 532.855 451.441 532.891 cv
451.457 532.93 451.473 532.977 451.488 533.023 cv
451.496 533.078 451.504 533.137 451.504 533.207 cv
cp
f
457.641 533.242 mo
457.637 533.316 457.633 533.379 457.625 533.43 cv
457.613 533.484 457.598 533.527 457.578 533.555 cv
457.555 533.59 457.531 533.613 457.508 533.621 cv
457.484 533.637 457.457 533.641 457.43 533.641 cv
453.469 533.641 li
453.441 533.641 453.418 533.637 453.395 533.621 cv
453.371 533.613 453.348 533.59 453.328 533.555 cv
453.305 533.527 453.289 533.484 453.277 533.43 cv
453.262 533.379 453.254 533.316 453.258 533.242 cv
453.254 533.172 453.262 533.113 453.277 533.062 cv
453.289 533.012 453.301 532.969 453.32 532.934 cv
453.336 532.902 453.359 532.879 453.383 532.859 cv
453.406 532.844 453.434 532.832 453.469 532.832 cv
455.055 532.832 li
455.055 527.066 li
453.586 527.937 li
453.512 527.984 453.453 528.008 453.41 528.012 cv
453.363 528.023 453.328 528.016 453.301 527.984 cv
453.27 527.961 453.25 527.918 453.242 527.859 cv
453.234 527.801 453.23 527.727 453.23 527.633 cv
453.23 527.57 453.23 527.512 453.238 527.465 cv
453.242 527.418 453.254 527.379 453.266 527.348 cv
453.273 527.316 453.289 527.289 453.313 527.266 cv
453.336 527.242 453.363 527.219 453.398 527.195 cv
455.148 526.078 li
455.16 526.066 455.18 526.055 455.207 526.047 cv
455.227 526.039 455.258 526.031 455.293 526.023 cv
455.324 526.016 455.363 526.012 455.414 526.012 cv
455.457 526.012 455.516 526.012 455.594 526.008 cv
455.684 526.012 455.762 526.016 455.828 526.02 cv
455.887 526.031 455.938 526.043 455.973 526.051 cv
456.004 526.066 456.027 526.082 456.043 526.102 cv
456.055 526.125 456.059 526.148 456.063 526.172 cv
456.063 532.832 li
457.43 532.832 li
457.457 532.832 457.488 532.844 457.52 532.859 cv
457.547 532.879 457.566 532.902 457.586 532.934 cv
457.602 532.969 457.617 533.012 457.625 533.062 cv
457.633 533.113 457.637 533.172 457.641 533.242 cv
cp
f
471.684 533.207 mo
471.684 533.277 471.676 533.34 471.668 533.395 cv
471.652 533.449 471.641 533.496 471.625 533.531 cv
471.609 533.57 471.586 533.598 471.555 533.613 cv
471.523 533.633 471.492 533.641 471.461 533.641 cv
467.27 533.641 li
467.215 533.641 467.168 533.637 467.129 533.621 cv
467.086 533.613 467.051 533.59 467.023 533.555 cv
466.992 533.527 466.969 533.48 466.957 533.418 cv
466.941 533.359 466.938 533.289 466.938 533.203 cv
466.938 533.129 466.938 533.059 466.945 532.996 cv
466.949 532.937 466.965 532.887 466.984 532.84 cv
467.004 532.797 467.027 532.754 467.059 532.707 cv
467.086 532.668 467.125 532.617 467.18 532.562 cv
468.695 531.004 li
469.043 530.645 469.32 530.324 469.535 530.039 cv
469.746 529.754 469.91 529.492 470.027 529.258 cv
470.137 529.023 470.215 528.812 470.254 528.621 cv
470.289 528.43 470.305 528.25 470.309 528.078 cv
470.305 527.914 470.277 527.754 470.223 527.602 cv
470.164 527.453 470.082 527.32 469.977 527.207 cv
469.867 527.098 469.734 527.008 469.574 526.937 cv
469.41 526.871 469.223 526.84 469.02 526.836 cv
468.77 526.84 468.551 526.871 468.355 526.937 cv
468.16 527.008 467.988 527.082 467.84 527.156 cv
467.691 527.238 467.566 527.309 467.473 527.371 cv
467.371 527.437 467.301 527.473 467.254 527.469 cv
467.223 527.473 467.195 527.465 467.176 527.445 cv
467.152 527.434 467.133 527.406 467.121 527.371 cv
467.105 527.34 467.098 527.293 467.09 527.23 cv
467.082 527.172 467.078 527.102 467.078 527.02 cv
467.078 526.961 467.078 526.91 467.082 526.867 cv
467.086 526.828 467.094 526.793 467.105 526.758 cv
467.113 526.73 467.125 526.699 467.145 526.668 cv
467.156 526.641 467.188 526.609 467.238 526.566 cv
467.281 526.527 467.363 526.469 467.48 526.398 cv
467.594 526.328 467.738 526.262 467.914 526.191 cv
468.086 526.125 468.277 526.066 468.488 526.016 cv
468.695 525.973 468.914 525.949 469.145 525.945 cv
469.512 525.949 469.832 526 470.109 526.102 cv
470.383 526.207 470.613 526.348 470.793 526.527 cv
470.973 526.707 471.109 526.918 471.203 527.156 cv
471.293 527.395 471.336 527.648 471.34 527.914 cv
471.336 528.164 471.316 528.406 471.273 528.641 cv
471.227 528.883 471.133 529.141 471 529.418 cv
470.859 529.699 470.66 530.012 470.398 530.352 cv
470.137 530.695 469.789 531.086 469.355 531.531 cv
468.156 532.785 li
471.457 532.785 li
471.484 532.785 471.516 532.797 471.547 532.812 cv
471.574 532.832 471.598 532.855 471.621 532.891 cv
471.637 532.93 471.652 532.977 471.668 533.023 cv
471.676 533.078 471.684 533.137 471.684 533.207 cv
cp
f
477.805 533.207 mo
477.805 533.277 477.797 533.34 477.789 533.395 cv
477.773 533.449 477.762 533.496 477.746 533.531 cv
477.73 533.57 477.707 533.598 477.676 533.613 cv
477.645 533.633 477.613 533.641 477.582 533.641 cv
473.391 533.641 li
473.336 533.641 473.289 533.637 473.25 533.621 cv
473.207 533.613 473.172 533.59 473.145 533.555 cv
473.113 533.527 473.09 533.48 473.078 533.418 cv
473.063 533.359 473.059 533.289 473.059 533.203 cv
473.059 533.129 473.059 533.059 473.066 532.996 cv
473.07 532.937 473.086 532.887 473.105 532.84 cv
473.125 532.797 473.148 532.754 473.18 532.707 cv
473.207 532.668 473.246 532.617 473.301 532.562 cv
474.816 531.004 li
475.164 530.645 475.441 530.324 475.656 530.039 cv
475.867 529.754 476.031 529.492 476.148 529.258 cv
476.258 529.023 476.336 528.812 476.375 528.621 cv
476.41 528.43 476.426 528.25 476.43 528.078 cv
476.426 527.914 476.398 527.754 476.344 527.602 cv
476.285 527.453 476.203 527.32 476.098 527.207 cv
475.988 527.098 475.855 527.008 475.695 526.937 cv
475.531 526.871 475.344 526.84 475.141 526.836 cv
474.891 526.84 474.672 526.871 474.477 526.937 cv
474.281 527.008 474.109 527.082 473.961 527.156 cv
473.813 527.238 473.688 527.309 473.594 527.371 cv
473.492 527.437 473.422 527.473 473.375 527.469 cv
473.344 527.473 473.316 527.465 473.297 527.445 cv
473.273 527.434 473.254 527.406 473.242 527.371 cv
473.227 527.34 473.219 527.293 473.211 527.23 cv
473.203 527.172 473.199 527.102 473.199 527.02 cv
473.199 526.961 473.199 526.91 473.203 526.867 cv
473.207 526.828 473.215 526.793 473.227 526.758 cv
473.234 526.73 473.246 526.699 473.266 526.668 cv
473.277 526.641 473.309 526.609 473.359 526.566 cv
473.402 526.527 473.484 526.469 473.602 526.398 cv
473.715 526.328 473.859 526.262 474.035 526.191 cv
474.207 526.125 474.398 526.066 474.609 526.016 cv
474.816 525.973 475.035 525.949 475.266 525.945 cv
475.633 525.949 475.953 526 476.23 526.102 cv
476.504 526.207 476.734 526.348 476.914 526.527 cv
477.094 526.707 477.23 526.918 477.324 527.156 cv
477.414 527.395 477.457 527.648 477.461 527.914 cv
477.457 528.164 477.438 528.406 477.395 528.641 cv
477.348 528.883 477.254 529.141 477.121 529.418 cv
476.98 529.699 476.781 530.012 476.52 530.352 cv
476.258 530.695 475.91 531.086 475.477 531.531 cv
474.277 532.785 li
477.578 532.785 li
477.605 532.785 477.637 532.797 477.668 532.812 cv
477.695 532.832 477.719 532.855 477.742 532.891 cv
477.758 532.93 477.773 532.977 477.789 533.023 cv
477.797 533.078 477.805 533.137 477.805 533.207 cv
cp
f
491.844 533.207 mo
491.844 533.277 491.836 533.34 491.828 533.395 cv
491.813 533.449 491.801 533.496 491.785 533.531 cv
491.77 533.57 491.746 533.598 491.715 533.613 cv
491.684 533.633 491.652 533.641 491.621 533.641 cv
487.43 533.641 li
487.375 533.641 487.328 533.637 487.289 533.621 cv
487.246 533.613 487.211 533.59 487.184 533.555 cv
487.152 533.527 487.129 533.48 487.117 533.418 cv
487.102 533.359 487.098 533.289 487.098 533.203 cv
487.098 533.129 487.098 533.059 487.105 532.996 cv
487.109 532.937 487.125 532.887 487.145 532.84 cv
487.164 532.797 487.188 532.754 487.219 532.707 cv
487.246 532.668 487.285 532.617 487.34 532.562 cv
488.855 531.004 li
489.203 530.645 489.48 530.324 489.695 530.039 cv
489.906 529.754 490.07 529.492 490.188 529.258 cv
490.297 529.023 490.375 528.812 490.414 528.621 cv
490.449 528.43 490.465 528.25 490.469 528.078 cv
490.465 527.914 490.438 527.754 490.383 527.602 cv
490.324 527.453 490.242 527.32 490.137 527.207 cv
490.027 527.098 489.895 527.008 489.734 526.937 cv
489.57 526.871 489.383 526.84 489.18 526.836 cv
488.93 526.84 488.711 526.871 488.516 526.937 cv
488.32 527.008 488.148 527.082 488 527.156 cv
487.852 527.238 487.727 527.309 487.633 527.371 cv
487.531 527.437 487.461 527.473 487.414 527.469 cv
487.383 527.473 487.355 527.465 487.336 527.445 cv
487.313 527.434 487.293 527.406 487.281 527.371 cv
487.266 527.34 487.258 527.293 487.25 527.23 cv
487.242 527.172 487.238 527.102 487.238 527.02 cv
487.238 526.961 487.238 526.91 487.242 526.867 cv
487.246 526.828 487.254 526.793 487.266 526.758 cv
487.273 526.73 487.285 526.699 487.305 526.668 cv
487.316 526.641 487.348 526.609 487.398 526.566 cv
487.441 526.527 487.523 526.469 487.641 526.398 cv
487.754 526.328 487.898 526.262 488.074 526.191 cv
488.246 526.125 488.438 526.066 488.648 526.016 cv
488.855 525.973 489.074 525.949 489.305 525.945 cv
489.672 525.949 489.992 526 490.27 526.102 cv
490.543 526.207 490.773 526.348 490.953 526.527 cv
491.133 526.707 491.27 526.918 491.363 527.156 cv
491.453 527.395 491.496 527.648 491.5 527.914 cv
491.496 528.164 491.477 528.406 491.434 528.641 cv
491.387 528.883 491.293 529.141 491.16 529.418 cv
491.02 529.699 490.82 530.012 490.559 530.352 cv
490.297 530.695 489.949 531.086 489.516 531.531 cv
488.316 532.785 li
491.617 532.785 li
491.645 532.785 491.676 532.797 491.707 532.812 cv
491.734 532.832 491.758 532.855 491.781 532.891 cv
491.797 532.93 491.813 532.977 491.828 533.023 cv
491.836 533.078 491.844 533.137 491.844 533.207 cv
cp
f
497.906 531.473 mo
497.906 531.82 497.844 532.137 497.723 532.414 cv
497.602 532.695 497.43 532.934 497.203 533.133 cv
496.977 533.332 496.695 533.484 496.363 533.59 cv
496.031 533.695 495.656 533.746 495.238 533.75 cv
494.984 533.746 494.746 533.727 494.527 533.687 cv
494.305 533.648 494.109 533.602 493.941 533.547 cv
493.766 533.492 493.625 533.434 493.512 533.371 cv
493.395 533.309 493.32 533.266 493.297 533.238 cv
493.266 533.211 493.246 533.184 493.23 533.156 cv
493.215 533.129 493.199 533.094 493.188 533.055 cv
493.176 533.016 493.168 532.969 493.16 532.914 cv
493.152 532.859 493.148 532.789 493.152 532.703 cv
493.148 532.562 493.164 532.465 493.195 532.41 cv
493.223 532.355 493.262 532.328 493.316 532.328 cv
493.352 532.328 493.422 532.359 493.527 532.422 cv
493.633 532.484 493.77 532.555 493.938 532.625 cv
494.102 532.703 494.297 532.77 494.52 532.828 cv
494.742 532.895 494.988 532.926 495.266 532.922 cv
495.523 532.926 495.758 532.891 495.961 532.82 cv
496.16 532.754 496.328 532.66 496.465 532.539 cv
496.602 532.422 496.703 532.281 496.773 532.109 cv
496.84 531.945 496.875 531.762 496.875 531.566 cv
496.875 531.352 496.828 531.16 496.742 530.984 cv
496.652 530.816 496.527 530.668 496.363 530.539 cv
496.195 530.418 495.988 530.32 495.746 530.254 cv
495.496 530.191 495.219 530.16 494.914 530.156 cv
494.172 530.156 li
494.137 530.16 494.105 530.152 494.074 530.137 cv
494.043 530.121 494.016 530.098 493.996 530.066 cv
493.973 530.035 493.953 529.996 493.941 529.945 cv
493.926 529.895 493.922 529.828 493.922 529.742 cv
493.922 529.672 493.926 529.609 493.938 529.559 cv
493.949 529.512 493.965 529.473 493.988 529.441 cv
494.004 529.414 494.031 529.395 494.063 529.379 cv
494.09 529.371 494.121 529.363 494.156 529.359 cv
494.816 529.359 li
495.074 529.363 495.305 529.328 495.512 529.258 cv
495.715 529.191 495.891 529.098 496.031 528.969 cv
496.172 528.848 496.281 528.699 496.359 528.523 cv
496.438 528.352 496.477 528.156 496.477 527.937 cv
496.477 527.785 496.449 527.637 496.398 527.492 cv
496.348 527.352 496.273 527.227 496.172 527.121 cv
496.07 527.016 495.938 526.934 495.781 526.871 cv
495.617 526.816 495.438 526.785 495.234 526.781 cv
495.008 526.785 494.797 526.82 494.609 526.883 cv
494.414 526.953 494.246 527.023 494.102 527.102 cv
493.949 527.18 493.828 527.254 493.734 527.32 cv
493.637 527.391 493.566 527.426 493.527 527.422 cv
493.5 527.426 493.477 527.422 493.457 527.41 cv
493.434 527.402 493.414 527.383 493.402 527.352 cv
493.387 527.324 493.379 527.281 493.371 527.227 cv
493.363 527.176 493.359 527.105 493.363 527.02 cv
493.359 526.961 493.363 526.91 493.371 526.863 cv
493.375 526.82 493.383 526.781 493.395 526.746 cv
493.402 526.715 493.414 526.684 493.434 526.656 cv
493.445 526.633 493.473 526.602 493.512 526.562 cv
493.551 526.523 493.625 526.469 493.738 526.398 cv
493.852 526.328 493.992 526.262 494.16 526.191 cv
494.324 526.125 494.516 526.066 494.734 526.016 cv
494.949 525.973 495.184 525.949 495.434 525.945 cv
495.785 525.949 496.094 525.992 496.359 526.082 cv
496.625 526.176 496.844 526.305 497.023 526.465 cv
497.199 526.633 497.332 526.828 497.422 527.055 cv
497.508 527.281 497.555 527.535 497.555 527.812 cv
497.555 528.051 497.523 528.273 497.461 528.477 cv
497.398 528.684 497.305 528.863 497.184 529.02 cv
497.063 529.18 496.914 529.316 496.738 529.426 cv
496.563 529.543 496.359 529.617 496.129 529.656 cv
496.129 529.668 li
496.391 529.699 496.629 529.766 496.848 529.867 cv
497.063 529.969 497.25 530.098 497.41 530.254 cv
497.563 530.41 497.684 530.594 497.773 530.805 cv
497.859 531.016 497.906 531.238 497.906 531.473 cv
cp
f
512.035 533.207 mo
512.035 533.277 512.027 533.34 512.02 533.395 cv
512.004 533.449 511.992 533.496 511.977 533.531 cv
511.961 533.57 511.938 533.598 511.906 533.613 cv
511.875 533.633 511.844 533.641 511.813 533.641 cv
507.621 533.641 li
507.566 533.641 507.52 533.637 507.48 533.621 cv
507.438 533.613 507.402 533.59 507.375 533.555 cv
507.344 533.527 507.32 533.48 507.309 533.418 cv
507.293 533.359 507.289 533.289 507.289 533.203 cv
507.289 533.129 507.289 533.059 507.297 532.996 cv
507.301 532.937 507.316 532.887 507.336 532.84 cv
507.355 532.797 507.379 532.754 507.41 532.707 cv
507.438 532.668 507.477 532.617 507.531 532.562 cv
509.047 531.004 li
509.395 530.645 509.672 530.324 509.887 530.039 cv
510.098 529.754 510.262 529.492 510.379 529.258 cv
510.488 529.023 510.566 528.812 510.605 528.621 cv
510.641 528.43 510.656 528.25 510.66 528.078 cv
510.656 527.914 510.629 527.754 510.574 527.602 cv
510.516 527.453 510.434 527.32 510.328 527.207 cv
510.219 527.098 510.086 527.008 509.926 526.937 cv
509.762 526.871 509.574 526.84 509.371 526.836 cv
509.121 526.84 508.902 526.871 508.707 526.937 cv
508.512 527.008 508.34 527.082 508.191 527.156 cv
508.043 527.238 507.918 527.309 507.824 527.371 cv
507.723 527.437 507.652 527.473 507.605 527.469 cv
507.574 527.473 507.547 527.465 507.527 527.445 cv
507.504 527.434 507.484 527.406 507.473 527.371 cv
507.457 527.34 507.449 527.293 507.441 527.23 cv
507.434 527.172 507.43 527.102 507.43 527.02 cv
507.43 526.961 507.43 526.91 507.434 526.867 cv
507.438 526.828 507.445 526.793 507.457 526.758 cv
507.465 526.73 507.477 526.699 507.496 526.668 cv
507.508 526.641 507.539 526.609 507.59 526.566 cv
507.633 526.527 507.715 526.469 507.832 526.398 cv
507.945 526.328 508.09 526.262 508.266 526.191 cv
508.438 526.125 508.629 526.066 508.84 526.016 cv
509.047 525.973 509.266 525.949 509.496 525.945 cv
509.863 525.949 510.184 526 510.461 526.102 cv
510.734 526.207 510.965 526.348 511.145 526.527 cv
511.324 526.707 511.461 526.918 511.555 527.156 cv
511.645 527.395 511.688 527.648 511.691 527.914 cv
511.688 528.164 511.668 528.406 511.625 528.641 cv
511.578 528.883 511.484 529.141 511.352 529.418 cv
511.211 529.699 511.012 530.012 510.75 530.352 cv
510.488 530.695 510.141 531.086 509.707 531.531 cv
508.508 532.785 li
511.809 532.785 li
511.836 532.785 511.867 532.797 511.898 532.812 cv
511.926 532.832 511.949 532.855 511.973 532.891 cv
511.988 532.93 512.004 532.977 512.02 533.023 cv
512.027 533.078 512.035 533.137 512.035 533.207 cv
cp
f
518.473 531.484 mo
518.469 531.617 518.449 531.719 518.414 531.789 cv
518.371 531.863 518.316 531.902 518.254 531.898 cv
517.395 531.898 li
517.395 533.492 li
517.391 533.527 517.383 533.555 517.371 533.574 cv
517.352 533.598 517.324 533.613 517.285 533.629 cv
517.246 533.645 517.191 533.656 517.129 533.664 cv
517.063 533.672 516.98 533.676 516.883 533.676 cv
516.781 533.676 516.703 533.672 516.641 533.664 cv
516.578 533.656 516.527 533.645 516.488 533.629 cv
516.449 533.613 516.422 533.598 516.406 533.574 cv
516.391 533.555 516.383 533.527 516.387 533.492 cv
516.387 531.898 li
513.285 531.898 li
513.238 531.902 513.203 531.895 513.172 531.883 cv
513.141 531.875 513.109 531.855 513.086 531.82 cv
513.055 531.793 513.039 531.746 513.031 531.684 cv
513.023 531.625 513.02 531.551 513.02 531.453 cv
513.02 531.383 513.02 531.316 513.023 531.258 cv
513.027 531.199 513.035 531.145 513.047 531.098 cv
513.059 531.051 513.074 531.004 513.094 530.957 cv
513.113 530.91 513.137 530.863 513.164 530.812 cv
515.867 526.203 li
515.887 526.176 515.914 526.148 515.953 526.121 cv
515.988 526.102 516.039 526.082 516.102 526.062 cv
516.16 526.051 516.23 526.039 516.32 526.031 cv
516.406 526.027 516.512 526.023 516.633 526.023 cv
516.762 526.023 516.875 526.031 516.973 526.039 cv
517.07 526.055 517.148 526.066 517.211 526.078 cv
517.266 526.098 517.313 526.117 517.348 526.141 cv
517.375 526.164 517.391 526.195 517.395 526.227 cv
517.395 531.07 li
518.254 531.07 li
518.316 531.074 518.371 531.109 518.41 531.172 cv
518.449 531.242 518.469 531.344 518.473 531.484 cv
cp
516.387 526.906 mo
516.379 526.906 li
513.941 531.07 li
516.387 531.07 li
cp
f
532.215 533.207 mo
532.215 533.277 532.207 533.34 532.199 533.395 cv
532.184 533.449 532.172 533.496 532.156 533.531 cv
532.141 533.57 532.117 533.598 532.086 533.613 cv
532.055 533.633 532.023 533.641 531.992 533.641 cv
527.801 533.641 li
527.746 533.641 527.699 533.637 527.66 533.621 cv
527.617 533.613 527.582 533.59 527.555 533.555 cv
527.523 533.527 527.5 533.48 527.488 533.418 cv
527.473 533.359 527.469 533.289 527.469 533.203 cv
527.469 533.129 527.469 533.059 527.477 532.996 cv
527.48 532.937 527.496 532.887 527.516 532.84 cv
527.535 532.797 527.559 532.754 527.59 532.707 cv
527.617 532.668 527.656 532.617 527.711 532.562 cv
529.227 531.004 li
529.574 530.645 529.852 530.324 530.066 530.039 cv
530.277 529.754 530.441 529.492 530.559 529.258 cv
530.668 529.023 530.746 528.812 530.785 528.621 cv
530.82 528.43 530.836 528.25 530.84 528.078 cv
530.836 527.914 530.809 527.754 530.754 527.602 cv
530.695 527.453 530.613 527.32 530.508 527.207 cv
530.398 527.098 530.266 527.008 530.105 526.937 cv
529.941 526.871 529.754 526.84 529.551 526.836 cv
529.301 526.84 529.082 526.871 528.887 526.937 cv
528.691 527.008 528.52 527.082 528.371 527.156 cv
528.223 527.238 528.098 527.309 528.004 527.371 cv
527.902 527.437 527.832 527.473 527.785 527.469 cv
527.754 527.473 527.727 527.465 527.707 527.445 cv
527.684 527.434 527.664 527.406 527.652 527.371 cv
527.637 527.34 527.629 527.293 527.621 527.23 cv
527.613 527.172 527.609 527.102 527.609 527.02 cv
527.609 526.961 527.609 526.91 527.613 526.867 cv
527.617 526.828 527.625 526.793 527.637 526.758 cv
527.645 526.73 527.656 526.699 527.676 526.668 cv
527.688 526.641 527.719 526.609 527.77 526.566 cv
527.813 526.527 527.895 526.469 528.012 526.398 cv
528.125 526.328 528.27 526.262 528.445 526.191 cv
528.617 526.125 528.809 526.066 529.02 526.016 cv
529.227 525.973 529.445 525.949 529.676 525.945 cv
530.043 525.949 530.363 526 530.641 526.102 cv
530.914 526.207 531.145 526.348 531.324 526.527 cv
531.504 526.707 531.641 526.918 531.734 527.156 cv
531.824 527.395 531.867 527.648 531.871 527.914 cv
531.867 528.164 531.848 528.406 531.805 528.641 cv
531.758 528.883 531.664 529.141 531.531 529.418 cv
531.391 529.699 531.191 530.012 530.93 530.352 cv
530.668 530.695 530.32 531.086 529.887 531.531 cv
528.688 532.785 li
531.988 532.785 li
532.016 532.785 532.047 532.797 532.078 532.812 cv
532.105 532.832 532.129 532.855 532.152 532.891 cv
532.168 532.93 532.184 532.977 532.199 533.023 cv
532.207 533.078 532.215 533.137 532.215 533.207 cv
cp
f
538.301 531.203 mo
538.301 531.609 538.23 531.973 538.094 532.289 cv
537.957 532.605 537.766 532.871 537.516 533.09 cv
537.266 533.309 536.965 533.473 536.621 533.582 cv
536.27 533.691 535.887 533.746 535.469 533.75 cv
535.23 533.746 535.008 533.73 534.801 533.699 cv
534.586 533.668 534.398 533.629 534.238 533.582 cv
534.07 533.535 533.938 533.488 533.836 533.437 cv
533.73 533.395 533.66 533.355 533.633 533.324 cv
533.602 533.297 533.582 533.273 533.57 533.246 cv
533.559 533.227 533.547 533.199 533.539 533.164 cv
533.523 533.133 533.52 533.09 533.52 533.039 cv
533.516 532.988 533.512 532.926 533.516 532.855 cv
533.512 532.793 533.516 532.734 533.523 532.68 cv
533.527 532.625 533.539 532.582 533.555 532.551 cv
533.57 532.52 533.586 532.496 533.609 532.477 cv
533.625 532.465 533.652 532.457 533.684 532.453 cv
533.723 532.457 533.781 532.48 533.863 532.527 cv
533.945 532.574 534.055 532.629 534.195 532.684 cv
534.332 532.742 534.504 532.793 534.711 532.844 cv
534.914 532.898 535.16 532.926 535.441 532.922 cv
535.703 532.926 535.941 532.895 536.164 532.828 cv
536.379 532.77 536.566 532.672 536.727 532.535 cv
536.883 532.406 537.008 532.238 537.098 532.035 cv
537.188 531.832 537.234 531.586 537.234 531.297 cv
537.234 531.055 537.195 530.844 537.121 530.656 cv
537.043 530.473 536.926 530.316 536.77 530.191 cv
536.609 530.07 536.41 529.98 536.168 529.918 cv
535.926 529.863 535.637 529.832 535.301 529.828 cv
535.063 529.832 534.855 529.844 534.688 529.863 cv
534.512 529.891 534.352 529.902 534.203 529.898 cv
534.09 529.902 534.012 529.875 533.969 529.82 cv
533.918 529.77 533.895 529.672 533.898 529.527 cv
533.898 526.437 li
533.895 526.312 533.926 526.215 533.988 526.152 cv
534.051 526.09 534.137 526.059 534.25 526.059 cv
537.609 526.059 li
537.641 526.059 537.668 526.07 537.699 526.086 cv
537.723 526.105 537.75 526.129 537.773 526.164 cv
537.793 526.203 537.805 526.25 537.816 526.301 cv
537.824 526.359 537.832 526.422 537.832 526.492 cv
537.832 526.633 537.813 526.742 537.773 526.82 cv
537.734 526.898 537.68 526.937 537.617 526.937 cv
534.906 526.937 li
534.906 529.062 li
535.035 529.047 535.172 529.035 535.313 529.031 cv
535.449 529.027 535.605 529.023 535.789 529.023 cv
536.203 529.023 536.57 529.078 536.883 529.18 cv
537.195 529.289 537.453 529.434 537.664 529.621 cv
537.871 529.809 538.031 530.039 538.141 530.309 cv
538.246 530.578 538.301 530.875 538.301 531.203 cv
cp
f
552.375 533.207 mo
552.375 533.277 552.367 533.34 552.359 533.395 cv
552.344 533.449 552.332 533.496 552.316 533.531 cv
552.301 533.57 552.277 533.598 552.246 533.613 cv
552.215 533.633 552.184 533.641 552.152 533.641 cv
547.961 533.641 li
547.906 533.641 547.859 533.637 547.82 533.621 cv
547.777 533.613 547.742 533.59 547.715 533.555 cv
547.684 533.527 547.66 533.48 547.648 533.418 cv
547.633 533.359 547.629 533.289 547.629 533.203 cv
547.629 533.129 547.629 533.059 547.637 532.996 cv
547.641 532.937 547.656 532.887 547.676 532.84 cv
547.695 532.797 547.719 532.754 547.75 532.707 cv
547.777 532.668 547.816 532.617 547.871 532.562 cv
549.387 531.004 li
549.734 530.645 550.012 530.324 550.227 530.039 cv
550.438 529.754 550.602 529.492 550.719 529.258 cv
550.828 529.023 550.906 528.812 550.945 528.621 cv
550.98 528.43 550.996 528.25 551 528.078 cv
550.996 527.914 550.969 527.754 550.914 527.602 cv
550.855 527.453 550.773 527.32 550.668 527.207 cv
550.559 527.098 550.426 527.008 550.266 526.937 cv
550.102 526.871 549.914 526.84 549.711 526.836 cv
549.461 526.84 549.242 526.871 549.047 526.937 cv
548.852 527.008 548.68 527.082 548.531 527.156 cv
548.383 527.238 548.258 527.309 548.164 527.371 cv
548.063 527.437 547.992 527.473 547.945 527.469 cv
547.914 527.473 547.887 527.465 547.867 527.445 cv
547.844 527.434 547.824 527.406 547.813 527.371 cv
547.797 527.34 547.789 527.293 547.781 527.23 cv
547.773 527.172 547.77 527.102 547.77 527.02 cv
547.77 526.961 547.77 526.91 547.773 526.867 cv
547.777 526.828 547.785 526.793 547.797 526.758 cv
547.805 526.73 547.816 526.699 547.836 526.668 cv
547.848 526.641 547.879 526.609 547.93 526.566 cv
547.973 526.527 548.055 526.469 548.172 526.398 cv
548.285 526.328 548.43 526.262 548.605 526.191 cv
548.777 526.125 548.969 526.066 549.18 526.016 cv
549.387 525.973 549.605 525.949 549.836 525.945 cv
550.203 525.949 550.523 526 550.801 526.102 cv
551.074 526.207 551.305 526.348 551.484 526.527 cv
551.664 526.707 551.801 526.918 551.895 527.156 cv
551.984 527.395 552.027 527.648 552.031 527.914 cv
552.027 528.164 552.008 528.406 551.965 528.641 cv
551.918 528.883 551.824 529.141 551.691 529.418 cv
551.551 529.699 551.352 530.012 551.09 530.352 cv
550.828 530.695 550.48 531.086 550.047 531.531 cv
548.848 532.785 li
552.148 532.785 li
552.176 532.785 552.207 532.797 552.238 532.812 cv
552.266 532.832 552.289 532.855 552.313 532.891 cv
552.328 532.93 552.344 532.977 552.359 533.023 cv
552.367 533.078 552.375 533.137 552.375 533.207 cv
cp
f
558.688 531.187 mo
558.684 531.52 558.633 531.84 558.535 532.152 cv
558.43 532.465 558.273 532.738 558.066 532.973 cv
557.852 533.207 557.586 533.398 557.262 533.539 cv
556.934 533.68 556.551 533.746 556.113 533.75 cv
555.797 533.746 555.516 533.711 555.277 533.633 cv
555.031 533.559 554.82 533.445 554.645 533.301 cv
554.461 533.16 554.313 532.984 554.195 532.77 cv
554.074 532.562 553.977 532.32 553.906 532.047 cv
553.828 531.777 553.777 531.484 553.75 531.16 cv
553.715 530.844 553.699 530.5 553.703 530.133 cv
553.699 529.809 553.719 529.48 553.758 529.148 cv
553.793 528.816 553.855 528.496 553.945 528.187 cv
554.031 527.879 554.152 527.59 554.309 527.316 cv
554.465 527.047 554.656 526.809 554.891 526.605 cv
555.121 526.406 555.402 526.246 555.727 526.129 cv
556.047 526.012 556.422 525.953 556.859 525.953 cv
557 525.953 557.148 525.965 557.297 525.98 cv
557.445 526.004 557.582 526.027 557.707 526.051 cv
557.832 526.082 557.938 526.113 558.023 526.148 cv
558.109 526.184 558.164 526.211 558.191 526.234 cv
558.219 526.258 558.238 526.281 558.254 526.305 cv
558.262 526.328 558.273 526.355 558.285 526.387 cv
558.289 526.418 558.297 526.453 558.305 526.484 cv
558.309 526.523 558.309 526.566 558.313 526.621 cv
558.309 526.691 558.309 526.754 558.309 526.805 cv
558.305 526.855 558.297 526.895 558.285 526.926 cv
558.27 526.957 558.25 526.98 558.23 526.996 cv
558.207 527.012 558.18 527.02 558.148 527.02 cv
558.102 527.02 558.043 527.008 557.969 526.98 cv
557.895 526.953 557.805 526.922 557.699 526.887 cv
557.594 526.855 557.465 526.824 557.316 526.797 cv
557.164 526.773 556.992 526.762 556.793 526.758 cv
556.43 526.762 556.117 526.836 555.855 526.98 cv
555.59 527.133 555.375 527.332 555.211 527.578 cv
555.047 527.832 554.922 528.121 554.844 528.449 cv
554.762 528.777 554.719 529.121 554.707 529.48 cv
554.809 529.422 554.922 529.363 555.051 529.305 cv
555.176 529.25 555.313 529.199 555.465 529.148 cv
555.613 529.105 555.773 529.066 555.941 529.035 cv
556.109 529.004 556.289 528.988 556.484 528.988 cv
556.891 528.988 557.238 529.047 557.52 529.156 cv
557.801 529.27 558.027 529.422 558.199 529.617 cv
558.371 529.816 558.496 530.051 558.574 530.316 cv
558.648 530.59 558.684 530.879 558.688 531.187 cv
cp
557.664 531.281 mo
557.66 531.055 557.637 530.848 557.598 530.66 cv
557.551 530.477 557.477 530.32 557.371 530.191 cv
557.266 530.062 557.125 529.961 556.949 529.891 cv
556.773 529.82 556.559 529.785 556.301 529.785 cv
556.156 529.785 556.012 529.801 555.867 529.824 cv
555.719 529.852 555.578 529.887 555.445 529.93 cv
555.313 529.977 555.184 530.027 555.059 530.09 cv
554.934 530.152 554.82 530.219 554.727 530.281 cv
554.723 530.789 554.754 531.211 554.82 531.551 cv
554.883 531.891 554.977 532.164 555.102 532.367 cv
555.223 532.574 555.379 532.719 555.563 532.805 cv
555.742 532.895 555.957 532.937 556.207 532.937 cv
556.457 532.937 556.672 532.891 556.855 532.797 cv
557.039 532.703 557.191 532.578 557.313 532.418 cv
557.434 532.262 557.523 532.086 557.578 531.887 cv
557.633 531.691 557.66 531.488 557.664 531.281 cv
cp
f
572.555 533.207 mo
572.555 533.277 572.547 533.34 572.539 533.395 cv
572.523 533.449 572.512 533.496 572.496 533.531 cv
572.48 533.57 572.457 533.598 572.426 533.613 cv
572.395 533.633 572.363 533.641 572.332 533.641 cv
568.141 533.641 li
568.086 533.641 568.039 533.637 568 533.621 cv
567.957 533.613 567.922 533.59 567.895 533.555 cv
567.863 533.527 567.84 533.48 567.828 533.418 cv
567.813 533.359 567.809 533.289 567.809 533.203 cv
567.809 533.129 567.809 533.059 567.816 532.996 cv
567.82 532.937 567.836 532.887 567.855 532.84 cv
567.875 532.797 567.898 532.754 567.93 532.707 cv
567.957 532.668 567.996 532.617 568.051 532.562 cv
569.566 531.004 li
569.914 530.645 570.191 530.324 570.406 530.039 cv
570.617 529.754 570.781 529.492 570.898 529.258 cv
571.008 529.023 571.086 528.812 571.125 528.621 cv
571.16 528.43 571.176 528.25 571.18 528.078 cv
571.176 527.914 571.148 527.754 571.094 527.602 cv
571.035 527.453 570.953 527.32 570.848 527.207 cv
570.738 527.098 570.605 527.008 570.445 526.937 cv
570.281 526.871 570.094 526.84 569.891 526.836 cv
569.641 526.84 569.422 526.871 569.227 526.937 cv
569.031 527.008 568.859 527.082 568.711 527.156 cv
568.563 527.238 568.438 527.309 568.344 527.371 cv
568.242 527.437 568.172 527.473 568.125 527.469 cv
568.094 527.473 568.066 527.465 568.047 527.445 cv
568.023 527.434 568.004 527.406 567.992 527.371 cv
567.977 527.34 567.969 527.293 567.961 527.23 cv
567.953 527.172 567.949 527.102 567.949 527.02 cv
567.949 526.961 567.949 526.91 567.953 526.867 cv
567.957 526.828 567.965 526.793 567.977 526.758 cv
567.984 526.73 567.996 526.699 568.016 526.668 cv
568.027 526.641 568.059 526.609 568.109 526.566 cv
568.152 526.527 568.234 526.469 568.352 526.398 cv
568.465 526.328 568.609 526.262 568.785 526.191 cv
568.957 526.125 569.148 526.066 569.359 526.016 cv
569.566 525.973 569.785 525.949 570.016 525.945 cv
570.383 525.949 570.703 526 570.98 526.102 cv
571.254 526.207 571.484 526.348 571.664 526.527 cv
571.844 526.707 571.98 526.918 572.074 527.156 cv
572.164 527.395 572.207 527.648 572.211 527.914 cv
572.207 528.164 572.188 528.406 572.145 528.641 cv
572.098 528.883 572.004 529.141 571.871 529.418 cv
571.73 529.699 571.531 530.012 571.27 530.352 cv
571.008 530.695 570.66 531.086 570.227 531.531 cv
569.027 532.785 li
572.328 532.785 li
572.355 532.785 572.387 532.797 572.418 532.812 cv
572.445 532.832 572.469 532.855 572.492 532.891 cv
572.508 532.93 572.523 532.977 572.539 533.023 cv
572.547 533.078 572.555 533.137 572.555 533.207 cv
cp
f
578.785 526.492 mo
578.781 526.562 578.777 526.629 578.777 526.684 cv
578.77 526.742 578.762 526.797 578.754 526.848 cv
578.738 526.902 578.727 526.953 578.711 527 cv
578.695 527.051 578.676 527.102 578.652 527.156 cv
575.922 533.445 li
575.902 533.496 575.875 533.535 575.848 533.562 cv
575.816 533.594 575.781 533.617 575.734 533.633 cv
575.688 533.648 575.629 533.656 575.563 533.664 cv
575.488 533.672 575.402 533.676 575.309 533.676 cv
575.168 533.676 575.066 533.668 574.996 533.656 cv
574.922 533.645 574.867 533.629 574.836 533.602 cv
574.801 533.578 574.785 533.547 574.789 533.508 cv
574.793 533.473 574.809 533.43 574.832 533.375 cv
577.703 526.945 li
574.066 526.945 li
573.988 526.949 573.934 526.91 573.895 526.828 cv
573.855 526.754 573.836 526.645 573.84 526.5 cv
573.836 526.426 573.84 526.359 573.855 526.305 cv
573.863 526.25 573.879 526.207 573.898 526.168 cv
573.918 526.133 573.941 526.105 573.969 526.086 cv
573.996 526.07 574.027 526.059 574.066 526.059 cv
578.48 526.059 li
578.535 526.059 578.582 526.066 578.625 526.078 cv
578.664 526.09 578.695 526.113 578.719 526.148 cv
578.738 526.184 578.758 526.227 578.77 526.281 cv
578.777 526.336 578.781 526.406 578.785 526.492 cv
cp
f
592.742 533.207 mo
592.742 533.277 592.734 533.34 592.727 533.395 cv
592.711 533.449 592.699 533.496 592.684 533.531 cv
592.668 533.57 592.645 533.598 592.613 533.613 cv
592.582 533.633 592.551 533.641 592.52 533.641 cv
588.328 533.641 li
588.273 533.641 588.227 533.637 588.188 533.621 cv
588.145 533.613 588.109 533.59 588.082 533.555 cv
588.051 533.527 588.027 533.48 588.016 533.418 cv
588 533.359 587.996 533.289 587.996 533.203 cv
587.996 533.129 587.996 533.059 588.004 532.996 cv
588.008 532.937 588.023 532.887 588.043 532.84 cv
588.063 532.797 588.086 532.754 588.117 532.707 cv
588.145 532.668 588.184 532.617 588.238 532.562 cv
589.754 531.004 li
590.102 530.645 590.379 530.324 590.594 530.039 cv
590.805 529.754 590.969 529.492 591.086 529.258 cv
591.195 529.023 591.273 528.812 591.313 528.621 cv
591.348 528.43 591.363 528.25 591.367 528.078 cv
591.363 527.914 591.336 527.754 591.281 527.602 cv
591.223 527.453 591.141 527.32 591.035 527.207 cv
590.926 527.098 590.793 527.008 590.633 526.937 cv
590.469 526.871 590.281 526.84 590.078 526.836 cv
589.828 526.84 589.609 526.871 589.414 526.937 cv
589.219 527.008 589.047 527.082 588.898 527.156 cv
588.75 527.238 588.625 527.309 588.531 527.371 cv
588.43 527.437 588.359 527.473 588.313 527.469 cv
588.281 527.473 588.254 527.465 588.234 527.445 cv
588.211 527.434 588.191 527.406 588.18 527.371 cv
588.164 527.34 588.156 527.293 588.148 527.23 cv
588.141 527.172 588.137 527.102 588.137 527.02 cv
588.137 526.961 588.137 526.91 588.141 526.867 cv
588.145 526.828 588.152 526.793 588.164 526.758 cv
588.172 526.73 588.184 526.699 588.203 526.668 cv
588.215 526.641 588.246 526.609 588.297 526.566 cv
588.34 526.527 588.422 526.469 588.539 526.398 cv
588.652 526.328 588.797 526.262 588.973 526.191 cv
589.145 526.125 589.336 526.066 589.547 526.016 cv
589.754 525.973 589.973 525.949 590.203 525.945 cv
590.57 525.949 590.891 526 591.168 526.102 cv
591.441 526.207 591.672 526.348 591.852 526.527 cv
592.031 526.707 592.168 526.918 592.262 527.156 cv
592.352 527.395 592.395 527.648 592.398 527.914 cv
592.395 528.164 592.375 528.406 592.332 528.641 cv
592.285 528.883 592.191 529.141 592.059 529.418 cv
591.918 529.699 591.719 530.012 591.457 530.352 cv
591.195 530.695 590.848 531.086 590.414 531.531 cv
589.215 532.785 li
592.516 532.785 li
592.543 532.785 592.574 532.797 592.605 532.812 cv
592.633 532.832 592.656 532.855 592.68 532.891 cv
592.695 532.93 592.711 532.977 592.727 533.023 cv
592.734 533.078 592.742 533.137 592.742 533.207 cv
cp
f
599.039 531.695 mo
599.039 532.023 598.98 532.316 598.863 532.57 cv
598.746 532.828 598.574 533.043 598.355 533.219 cv
598.133 533.398 597.863 533.531 597.539 533.617 cv
597.211 533.703 596.84 533.746 596.426 533.75 cv
596.035 533.746 595.684 533.707 595.375 533.629 cv
595.066 533.551 594.805 533.43 594.59 533.266 cv
594.375 533.105 594.211 532.91 594.098 532.672 cv
593.984 532.441 593.93 532.172 593.93 531.871 cv
593.93 531.637 593.969 531.418 594.047 531.215 cv
594.125 531.016 594.234 530.832 594.383 530.664 cv
594.527 530.5 594.711 530.344 594.926 530.195 cv
595.137 530.047 595.379 529.906 595.652 529.773 cv
595.418 529.656 595.211 529.531 595.031 529.391 cv
594.852 529.258 594.699 529.109 594.574 528.949 cv
594.449 528.793 594.352 528.625 594.289 528.441 cv
594.219 528.266 594.188 528.07 594.191 527.859 cv
594.188 527.598 594.234 527.348 594.336 527.113 cv
594.43 526.879 594.574 526.676 594.77 526.504 cv
594.957 526.332 595.203 526.199 595.508 526.098 cv
595.805 526 596.156 525.949 596.555 525.945 cv
596.938 525.949 597.266 525.996 597.547 526.086 cv
597.82 526.18 598.051 526.305 598.238 526.461 cv
598.418 526.621 598.555 526.805 598.641 527.02 cv
598.727 527.238 598.77 527.469 598.77 527.711 cv
598.77 527.91 598.734 528.102 598.672 528.285 cv
598.602 528.473 598.508 528.648 598.387 528.809 cv
598.258 528.977 598.105 529.129 597.926 529.27 cv
597.746 529.41 597.539 529.543 597.305 529.668 cv
597.582 529.809 597.828 529.949 598.047 530.09 cv
598.262 530.234 598.441 530.391 598.59 530.555 cv
598.73 530.723 598.844 530.898 598.922 531.082 cv
599 531.27 599.039 531.473 599.039 531.695 cv
cp
597.773 527.805 mo
597.773 527.641 597.742 527.492 597.688 527.359 cv
597.629 527.227 597.547 527.113 597.441 527.02 cv
597.328 526.926 597.191 526.855 597.031 526.809 cv
596.867 526.762 596.684 526.738 596.48 526.734 cv
596.055 526.738 595.734 526.832 595.52 527.02 cv
595.301 527.211 595.195 527.473 595.195 527.805 cv
595.195 527.957 595.219 528.102 595.273 528.23 cv
595.324 528.363 595.406 528.484 595.52 528.602 cv
595.629 528.719 595.77 528.836 595.941 528.945 cv
596.109 529.059 596.313 529.172 596.551 529.293 cv
596.941 529.09 597.246 528.867 597.457 528.621 cv
597.668 528.375 597.773 528.102 597.773 527.805 cv
cp
598.02 531.801 mo
598.02 531.621 597.984 531.461 597.918 531.312 cv
597.852 531.172 597.75 531.035 597.617 530.902 cv
597.48 530.777 597.313 530.652 597.113 530.531 cv
596.91 530.414 596.68 530.289 596.414 530.16 cv
596.164 530.285 595.945 530.406 595.766 530.523 cv
595.578 530.645 595.426 530.77 595.309 530.898 cv
595.184 531.031 595.094 531.168 595.039 531.309 cv
594.977 531.449 594.949 531.605 594.949 531.777 cv
594.949 532.156 595.078 532.449 595.34 532.656 cv
595.598 532.867 595.984 532.973 596.504 532.969 cv
597 532.973 597.379 532.867 597.637 532.656 cv
597.891 532.445 598.02 532.16 598.02 531.801 cv
cp
f
612.902 533.207 mo
612.902 533.277 612.895 533.34 612.887 533.395 cv
612.871 533.449 612.859 533.496 612.844 533.531 cv
612.828 533.57 612.805 533.598 612.773 533.613 cv
612.742 533.633 612.711 533.641 612.68 533.641 cv
608.488 533.641 li
608.434 533.641 608.387 533.637 608.348 533.621 cv
608.305 533.613 608.27 533.59 608.242 533.555 cv
608.211 533.527 608.188 533.48 608.176 533.418 cv
608.16 533.359 608.156 533.289 608.156 533.203 cv
608.156 533.129 608.156 533.059 608.164 532.996 cv
608.168 532.937 608.184 532.887 608.203 532.84 cv
608.223 532.797 608.246 532.754 608.277 532.707 cv
608.305 532.668 608.344 532.617 608.398 532.562 cv
609.914 531.004 li
610.262 530.645 610.539 530.324 610.754 530.039 cv
610.965 529.754 611.129 529.492 611.246 529.258 cv
611.355 529.023 611.434 528.812 611.473 528.621 cv
611.508 528.43 611.523 528.25 611.527 528.078 cv
611.523 527.914 611.496 527.754 611.441 527.602 cv
611.383 527.453 611.301 527.32 611.195 527.207 cv
611.086 527.098 610.953 527.008 610.793 526.937 cv
610.629 526.871 610.441 526.84 610.238 526.836 cv
609.988 526.84 609.77 526.871 609.574 526.937 cv
609.379 527.008 609.207 527.082 609.059 527.156 cv
608.91 527.238 608.785 527.309 608.691 527.371 cv
608.59 527.437 608.52 527.473 608.473 527.469 cv
608.441 527.473 608.414 527.465 608.395 527.445 cv
608.371 527.434 608.352 527.406 608.34 527.371 cv
608.324 527.34 608.316 527.293 608.309 527.23 cv
608.301 527.172 608.297 527.102 608.297 527.02 cv
608.297 526.961 608.297 526.91 608.301 526.867 cv
608.305 526.828 608.313 526.793 608.324 526.758 cv
608.332 526.73 608.344 526.699 608.363 526.668 cv
608.375 526.641 608.406 526.609 608.457 526.566 cv
608.5 526.527 608.582 526.469 608.699 526.398 cv
608.813 526.328 608.957 526.262 609.133 526.191 cv
609.305 526.125 609.496 526.066 609.707 526.016 cv
609.914 525.973 610.133 525.949 610.363 525.945 cv
610.73 525.949 611.051 526 611.328 526.102 cv
611.602 526.207 611.832 526.348 612.012 526.527 cv
612.191 526.707 612.328 526.918 612.422 527.156 cv
612.512 527.395 612.555 527.648 612.559 527.914 cv
612.555 528.164 612.535 528.406 612.492 528.641 cv
612.445 528.883 612.352 529.141 612.219 529.418 cv
612.078 529.699 611.879 530.012 611.617 530.352 cv
611.355 530.695 611.008 531.086 610.574 531.531 cv
609.375 532.785 li
612.676 532.785 li
612.703 532.785 612.734 532.797 612.766 532.812 cv
612.793 532.832 612.816 532.855 612.84 532.891 cv
612.855 532.93 612.871 532.977 612.887 533.023 cv
612.895 533.078 612.902 533.137 612.902 533.207 cv
cp
f
619.082 529.551 mo
619.082 529.879 619.063 530.211 619.023 530.547 cv
618.984 530.883 618.918 531.207 618.824 531.52 cv
618.73 531.832 618.602 532.125 618.445 532.391 cv
618.285 532.664 618.086 532.898 617.848 533.102 cv
617.605 533.305 617.32 533.465 616.992 533.578 cv
616.66 533.691 616.277 533.746 615.844 533.75 cv
615.672 533.746 615.508 533.734 615.352 533.719 cv
615.191 533.695 615.051 533.672 614.926 533.641 cv
614.797 533.609 614.691 533.578 614.605 533.543 cv
614.52 533.508 614.457 533.473 614.418 533.437 cv
614.379 533.402 614.348 533.355 614.332 533.293 cv
614.309 533.238 614.301 533.156 614.305 533.047 cv
614.301 532.969 614.305 532.898 614.313 532.844 cv
614.32 532.793 614.328 532.754 614.34 532.727 cv
614.352 532.703 614.367 532.687 614.391 532.672 cv
614.406 532.664 614.434 532.656 614.469 532.656 cv
614.512 532.656 614.574 532.672 614.652 532.699 cv
614.73 532.73 614.828 532.762 614.945 532.797 cv
615.063 532.836 615.203 532.871 615.367 532.895 cv
615.527 532.926 615.707 532.937 615.906 532.937 cv
616.285 532.937 616.609 532.867 616.883 532.719 cv
617.152 532.578 617.375 532.379 617.547 532.129 cv
617.719 531.883 617.848 531.598 617.934 531.273 cv
618.02 530.953 618.066 530.613 618.074 530.25 cv
617.867 530.371 617.617 530.477 617.332 530.57 cv
617.039 530.664 616.707 530.711 616.336 530.711 cv
615.91 530.711 615.555 530.656 615.27 530.539 cv
614.98 530.43 614.75 530.27 614.578 530.066 cv
614.402 529.867 614.277 529.633 614.203 529.355 cv
614.125 529.086 614.09 528.785 614.09 528.461 cv
614.09 528.125 614.137 527.809 614.234 527.504 cv
614.332 527.203 614.484 526.934 614.691 526.703 cv
614.898 526.477 615.164 526.293 615.484 526.152 cv
615.805 526.016 616.188 525.949 616.633 525.945 cv
616.949 525.949 617.227 525.988 617.473 526.066 cv
617.715 526.148 617.93 526.266 618.109 526.414 cv
618.289 526.57 618.441 526.75 618.566 526.961 cv
618.691 527.172 618.789 527.414 618.867 527.684 cv
618.941 527.953 618.996 528.246 619.031 528.559 cv
619.063 528.879 619.082 529.207 619.082 529.551 cv
cp
618.055 529.437 mo
618.051 528.941 618.02 528.52 617.957 528.176 cv
617.891 527.836 617.793 527.559 617.664 527.348 cv
617.531 527.137 617.371 526.984 617.188 526.891 cv
616.996 526.797 616.781 526.75 616.539 526.75 cv
616.281 526.75 616.063 526.797 615.887 526.887 cv
615.703 526.98 615.555 527.105 615.445 527.258 cv
615.328 527.414 615.246 527.586 615.191 527.781 cv
615.137 527.977 615.109 528.18 615.109 528.383 cv
615.109 528.617 615.133 528.828 615.184 529.02 cv
615.23 529.211 615.309 529.371 615.422 529.504 cv
615.527 529.637 615.672 529.742 615.848 529.812 cv
616.02 529.891 616.234 529.926 616.5 529.922 cv
616.789 529.926 617.074 529.883 617.348 529.789 cv
617.621 529.703 617.855 529.586 618.055 529.437 cv
cp
f
633.027 531.473 mo
633.027 531.82 632.965 532.137 632.844 532.414 cv
632.723 532.695 632.551 532.934 632.324 533.133 cv
632.098 533.332 631.816 533.484 631.484 533.59 cv
631.152 533.695 630.777 533.746 630.359 533.75 cv
630.105 533.746 629.867 533.727 629.648 533.687 cv
629.426 533.648 629.23 533.602 629.063 533.547 cv
628.887 533.492 628.746 533.434 628.633 533.371 cv
628.516 533.309 628.441 533.266 628.418 533.238 cv
628.387 533.211 628.367 533.184 628.352 533.156 cv
628.336 533.129 628.32 533.094 628.309 533.055 cv
628.297 533.016 628.289 532.969 628.281 532.914 cv
628.273 532.859 628.27 532.789 628.273 532.703 cv
628.27 532.562 628.285 532.465 628.316 532.41 cv
628.344 532.355 628.383 532.328 628.438 532.328 cv
628.473 532.328 628.543 532.359 628.648 532.422 cv
628.754 532.484 628.891 532.555 629.059 532.625 cv
629.223 532.703 629.418 532.77 629.641 532.828 cv
629.863 532.895 630.109 532.926 630.387 532.922 cv
630.645 532.926 630.879 532.891 631.082 532.82 cv
631.281 532.754 631.449 532.66 631.586 532.539 cv
631.723 532.422 631.824 532.281 631.895 532.109 cv
631.961 531.945 631.996 531.762 631.996 531.566 cv
631.996 531.352 631.949 531.16 631.863 530.984 cv
631.773 530.816 631.648 530.668 631.484 530.539 cv
631.316 530.418 631.109 530.32 630.867 530.254 cv
630.617 530.191 630.34 530.16 630.035 530.156 cv
629.293 530.156 li
629.258 530.16 629.227 530.152 629.195 530.137 cv
629.164 530.121 629.137 530.098 629.117 530.066 cv
629.094 530.035 629.074 529.996 629.063 529.945 cv
629.047 529.895 629.043 529.828 629.043 529.742 cv
629.043 529.672 629.047 529.609 629.059 529.559 cv
629.07 529.512 629.086 529.473 629.109 529.441 cv
629.125 529.414 629.152 529.395 629.184 529.379 cv
629.211 529.371 629.242 529.363 629.277 529.359 cv
629.938 529.359 li
630.195 529.363 630.426 529.328 630.633 529.258 cv
630.836 529.191 631.012 529.098 631.152 528.969 cv
631.293 528.848 631.402 528.699 631.48 528.523 cv
631.559 528.352 631.598 528.156 631.598 527.937 cv
631.598 527.785 631.57 527.637 631.52 527.492 cv
631.469 527.352 631.395 527.227 631.293 527.121 cv
631.191 527.016 631.059 526.934 630.902 526.871 cv
630.738 526.816 630.559 526.785 630.355 526.781 cv
630.129 526.785 629.918 526.82 629.73 526.883 cv
629.535 526.953 629.367 527.023 629.223 527.102 cv
629.07 527.18 628.949 527.254 628.855 527.32 cv
628.758 527.391 628.688 527.426 628.648 527.422 cv
628.621 527.426 628.598 527.422 628.578 527.41 cv
628.555 527.402 628.535 527.383 628.523 527.352 cv
628.508 527.324 628.5 527.281 628.492 527.227 cv
628.484 527.176 628.48 527.105 628.484 527.02 cv
628.48 526.961 628.484 526.91 628.492 526.863 cv
628.496 526.82 628.504 526.781 628.516 526.746 cv
628.523 526.715 628.535 526.684 628.555 526.656 cv
628.566 526.633 628.594 526.602 628.633 526.562 cv
628.672 526.523 628.746 526.469 628.859 526.398 cv
628.973 526.328 629.113 526.262 629.281 526.191 cv
629.445 526.125 629.637 526.066 629.855 526.016 cv
630.07 525.973 630.305 525.949 630.555 525.945 cv
630.906 525.949 631.215 525.992 631.48 526.082 cv
631.746 526.176 631.965 526.305 632.145 526.465 cv
632.32 526.633 632.453 526.828 632.543 527.055 cv
632.629 527.281 632.676 527.535 632.676 527.812 cv
632.676 528.051 632.645 528.273 632.582 528.477 cv
632.52 528.684 632.426 528.863 632.305 529.02 cv
632.184 529.18 632.035 529.316 631.859 529.426 cv
631.684 529.543 631.48 529.617 631.25 529.656 cv
631.25 529.668 li
631.512 529.699 631.75 529.766 631.969 529.867 cv
632.184 529.969 632.371 530.098 632.531 530.254 cv
632.684 530.41 632.805 530.594 632.895 530.805 cv
632.98 531.016 633.027 531.238 633.027 531.473 cv
cp
f
639.453 529.832 mo
639.449 530.414 639.402 530.945 639.316 531.426 cv
639.223 531.91 639.07 532.324 638.859 532.668 cv
638.641 533.012 638.363 533.281 638.023 533.469 cv
637.676 533.656 637.254 533.746 636.754 533.75 cv
636.277 533.746 635.875 533.664 635.551 533.496 cv
635.223 533.328 634.961 533.078 634.762 532.746 cv
634.559 532.418 634.414 532.012 634.336 531.527 cv
634.25 531.047 634.211 530.492 634.211 529.867 cv
634.211 529.289 634.258 528.762 634.352 528.277 cv
634.445 527.801 634.598 527.387 634.809 527.035 cv
635.02 526.691 635.297 526.422 635.641 526.23 cv
635.984 526.043 636.406 525.949 636.906 525.945 cv
637.383 525.949 637.785 526.035 638.113 526.203 cv
638.441 526.375 638.703 526.625 638.902 526.953 cv
639.102 527.285 639.242 527.691 639.328 528.172 cv
639.406 528.656 639.449 529.207 639.453 529.832 cv
cp
638.422 529.902 mo
638.418 529.527 638.406 529.187 638.383 528.883 cv
638.355 528.582 638.313 528.316 638.262 528.086 cv
638.207 527.859 638.141 527.664 638.055 527.492 cv
637.969 527.328 637.867 527.191 637.754 527.082 cv
637.633 526.98 637.5 526.902 637.352 526.848 cv
637.203 526.801 637.035 526.773 636.848 526.773 cv
636.516 526.773 636.246 526.852 636.039 527.008 cv
635.828 527.164 635.664 527.379 635.547 527.652 cv
635.43 527.926 635.348 528.246 635.305 528.613 cv
635.262 528.98 635.242 529.375 635.242 529.797 cv
635.242 530.367 635.27 530.852 635.328 531.242 cv
635.387 531.641 635.48 531.961 635.605 532.211 cv
635.73 532.461 635.891 532.645 636.094 532.758 cv
636.289 532.871 636.531 532.926 636.813 532.926 cv
637.031 532.926 637.223 532.891 637.391 532.82 cv
637.555 532.75 637.695 532.652 637.816 532.52 cv
637.934 532.391 638.035 532.23 638.113 532.047 cv
638.191 531.867 638.254 531.664 638.301 531.437 cv
638.348 531.215 638.379 530.977 638.395 530.715 cv
638.41 530.457 638.418 530.184 638.422 529.902 cv
cp
f
653.215 531.473 mo
653.215 531.82 653.152 532.137 653.031 532.414 cv
652.91 532.695 652.738 532.934 652.512 533.133 cv
652.285 533.332 652.004 533.484 651.672 533.59 cv
651.34 533.695 650.965 533.746 650.547 533.75 cv
650.293 533.746 650.055 533.727 649.836 533.687 cv
649.613 533.648 649.418 533.602 649.25 533.547 cv
649.074 533.492 648.934 533.434 648.82 533.371 cv
648.703 533.309 648.629 533.266 648.605 533.238 cv
648.574 533.211 648.555 533.184 648.539 533.156 cv
648.523 533.129 648.508 533.094 648.496 533.055 cv
648.484 533.016 648.477 532.969 648.469 532.914 cv
648.461 532.859 648.457 532.789 648.461 532.703 cv
648.457 532.562 648.473 532.465 648.504 532.41 cv
648.531 532.355 648.57 532.328 648.625 532.328 cv
648.66 532.328 648.73 532.359 648.836 532.422 cv
648.941 532.484 649.078 532.555 649.246 532.625 cv
649.41 532.703 649.605 532.77 649.828 532.828 cv
650.051 532.895 650.297 532.926 650.574 532.922 cv
650.832 532.926 651.066 532.891 651.27 532.82 cv
651.469 532.754 651.637 532.66 651.773 532.539 cv
651.91 532.422 652.012 532.281 652.082 532.109 cv
652.148 531.945 652.184 531.762 652.184 531.566 cv
652.184 531.352 652.137 531.16 652.051 530.984 cv
651.961 530.816 651.836 530.668 651.672 530.539 cv
651.504 530.418 651.297 530.32 651.055 530.254 cv
650.805 530.191 650.527 530.16 650.223 530.156 cv
649.48 530.156 li
649.445 530.16 649.414 530.152 649.383 530.137 cv
649.352 530.121 649.324 530.098 649.305 530.066 cv
649.281 530.035 649.262 529.996 649.25 529.945 cv
649.234 529.895 649.23 529.828 649.23 529.742 cv
649.23 529.672 649.234 529.609 649.246 529.559 cv
649.258 529.512 649.273 529.473 649.297 529.441 cv
649.313 529.414 649.34 529.395 649.371 529.379 cv
649.398 529.371 649.43 529.363 649.465 529.359 cv
650.125 529.359 li
650.383 529.363 650.613 529.328 650.82 529.258 cv
651.023 529.191 651.199 529.098 651.34 528.969 cv
651.48 528.848 651.59 528.699 651.668 528.523 cv
651.746 528.352 651.785 528.156 651.785 527.937 cv
651.785 527.785 651.758 527.637 651.707 527.492 cv
651.656 527.352 651.582 527.227 651.48 527.121 cv
651.379 527.016 651.246 526.934 651.09 526.871 cv
650.926 526.816 650.746 526.785 650.543 526.781 cv
650.316 526.785 650.105 526.82 649.918 526.883 cv
649.723 526.953 649.555 527.023 649.41 527.102 cv
649.258 527.18 649.137 527.254 649.043 527.32 cv
648.945 527.391 648.875 527.426 648.836 527.422 cv
648.809 527.426 648.785 527.422 648.766 527.41 cv
648.742 527.402 648.723 527.383 648.711 527.352 cv
648.695 527.324 648.688 527.281 648.68 527.227 cv
648.672 527.176 648.668 527.105 648.672 527.02 cv
648.668 526.961 648.672 526.91 648.68 526.863 cv
648.684 526.82 648.691 526.781 648.703 526.746 cv
648.711 526.715 648.723 526.684 648.742 526.656 cv
648.754 526.633 648.781 526.602 648.82 526.562 cv
648.859 526.523 648.934 526.469 649.047 526.398 cv
649.16 526.328 649.301 526.262 649.469 526.191 cv
649.633 526.125 649.824 526.066 650.043 526.016 cv
650.258 525.973 650.492 525.949 650.742 525.945 cv
651.094 525.949 651.402 525.992 651.668 526.082 cv
651.934 526.176 652.152 526.305 652.332 526.465 cv
652.508 526.633 652.641 526.828 652.73 527.055 cv
652.816 527.281 652.863 527.535 652.863 527.812 cv
652.863 528.051 652.832 528.273 652.77 528.477 cv
652.707 528.684 652.613 528.863 652.492 529.02 cv
652.371 529.18 652.223 529.316 652.047 529.426 cv
651.871 529.543 651.668 529.617 651.438 529.656 cv
651.438 529.668 li
651.699 529.699 651.938 529.766 652.156 529.867 cv
652.371 529.969 652.559 530.098 652.719 530.254 cv
652.871 530.41 652.992 530.594 653.082 530.805 cv
653.168 531.016 653.215 531.238 653.215 531.473 cv
cp
f
659.41 533.242 mo
659.406 533.316 659.402 533.379 659.395 533.43 cv
659.383 533.484 659.367 533.527 659.348 533.555 cv
659.324 533.59 659.301 533.613 659.277 533.621 cv
659.254 533.637 659.227 533.641 659.199 533.641 cv
655.238 533.641 li
655.211 533.641 655.188 533.637 655.164 533.621 cv
655.141 533.613 655.117 533.59 655.098 533.555 cv
655.074 533.527 655.059 533.484 655.047 533.43 cv
655.031 533.379 655.023 533.316 655.027 533.242 cv
655.023 533.172 655.031 533.113 655.047 533.062 cv
655.059 533.012 655.07 532.969 655.09 532.934 cv
655.105 532.902 655.129 532.879 655.152 532.859 cv
655.176 532.844 655.203 532.832 655.238 532.832 cv
656.824 532.832 li
656.824 527.066 li
655.355 527.937 li
655.281 527.984 655.223 528.008 655.18 528.012 cv
655.133 528.023 655.098 528.016 655.07 527.984 cv
655.039 527.961 655.02 527.918 655.012 527.859 cv
655.004 527.801 655 527.727 655 527.633 cv
655 527.57 655 527.512 655.008 527.465 cv
655.012 527.418 655.023 527.379 655.035 527.348 cv
655.043 527.316 655.059 527.289 655.082 527.266 cv
655.105 527.242 655.133 527.219 655.168 527.195 cv
656.918 526.078 li
656.93 526.066 656.949 526.055 656.977 526.047 cv
656.996 526.039 657.027 526.031 657.063 526.023 cv
657.094 526.016 657.133 526.012 657.184 526.012 cv
657.227 526.012 657.285 526.012 657.363 526.008 cv
657.453 526.012 657.531 526.016 657.598 526.02 cv
657.656 526.031 657.707 526.043 657.742 526.051 cv
657.773 526.066 657.797 526.082 657.813 526.102 cv
657.824 526.125 657.828 526.148 657.832 526.172 cv
657.832 532.832 li
659.199 532.832 li
659.227 532.832 659.258 532.844 659.289 532.859 cv
659.316 532.879 659.336 532.902 659.355 532.934 cv
659.371 532.969 659.387 533.012 659.395 533.062 cv
659.402 533.113 659.406 533.172 659.41 533.242 cv
cp
f
673.375 531.473 mo
673.375 531.82 673.313 532.137 673.191 532.414 cv
673.07 532.695 672.898 532.934 672.672 533.133 cv
672.445 533.332 672.164 533.484 671.832 533.59 cv
671.5 533.695 671.125 533.746 670.707 533.75 cv
670.453 533.746 670.215 533.727 669.996 533.687 cv
669.773 533.648 669.578 533.602 669.41 533.547 cv
669.234 533.492 669.094 533.434 668.98 533.371 cv
668.863 533.309 668.789 533.266 668.766 533.238 cv
668.734 533.211 668.715 533.184 668.699 533.156 cv
668.684 533.129 668.668 533.094 668.656 533.055 cv
668.645 533.016 668.637 532.969 668.629 532.914 cv
668.621 532.859 668.617 532.789 668.621 532.703 cv
668.617 532.562 668.633 532.465 668.664 532.41 cv
668.691 532.355 668.73 532.328 668.785 532.328 cv
668.82 532.328 668.891 532.359 668.996 532.422 cv
669.102 532.484 669.238 532.555 669.406 532.625 cv
669.57 532.703 669.766 532.77 669.988 532.828 cv
670.211 532.895 670.457 532.926 670.734 532.922 cv
670.992 532.926 671.227 532.891 671.43 532.82 cv
671.629 532.754 671.797 532.66 671.934 532.539 cv
672.07 532.422 672.172 532.281 672.242 532.109 cv
672.309 531.945 672.344 531.762 672.344 531.566 cv
672.344 531.352 672.297 531.16 672.211 530.984 cv
672.121 530.816 671.996 530.668 671.832 530.539 cv
671.664 530.418 671.457 530.32 671.215 530.254 cv
670.965 530.191 670.688 530.16 670.383 530.156 cv
669.641 530.156 li
669.605 530.16 669.574 530.152 669.543 530.137 cv
669.512 530.121 669.484 530.098 669.465 530.066 cv
669.441 530.035 669.422 529.996 669.41 529.945 cv
669.395 529.895 669.391 529.828 669.391 529.742 cv
669.391 529.672 669.395 529.609 669.406 529.559 cv
669.418 529.512 669.434 529.473 669.457 529.441 cv
669.473 529.414 669.5 529.395 669.531 529.379 cv
669.559 529.371 669.59 529.363 669.625 529.359 cv
670.285 529.359 li
670.543 529.363 670.773 529.328 670.98 529.258 cv
671.184 529.191 671.359 529.098 671.5 528.969 cv
671.641 528.848 671.75 528.699 671.828 528.523 cv
671.906 528.352 671.945 528.156 671.945 527.937 cv
671.945 527.785 671.918 527.637 671.867 527.492 cv
671.816 527.352 671.742 527.227 671.641 527.121 cv
671.539 527.016 671.406 526.934 671.25 526.871 cv
671.086 526.816 670.906 526.785 670.703 526.781 cv
670.477 526.785 670.266 526.82 670.078 526.883 cv
669.883 526.953 669.715 527.023 669.57 527.102 cv
669.418 527.18 669.297 527.254 669.203 527.32 cv
669.105 527.391 669.035 527.426 668.996 527.422 cv
668.969 527.426 668.945 527.422 668.926 527.41 cv
668.902 527.402 668.883 527.383 668.871 527.352 cv
668.855 527.324 668.848 527.281 668.84 527.227 cv
668.832 527.176 668.828 527.105 668.832 527.02 cv
668.828 526.961 668.832 526.91 668.84 526.863 cv
668.844 526.82 668.852 526.781 668.863 526.746 cv
668.871 526.715 668.883 526.684 668.902 526.656 cv
668.914 526.633 668.941 526.602 668.98 526.562 cv
669.02 526.523 669.094 526.469 669.207 526.398 cv
669.32 526.328 669.461 526.262 669.629 526.191 cv
669.793 526.125 669.984 526.066 670.203 526.016 cv
670.418 525.973 670.652 525.949 670.902 525.945 cv
671.254 525.949 671.563 525.992 671.828 526.082 cv
672.094 526.176 672.313 526.305 672.492 526.465 cv
672.668 526.633 672.801 526.828 672.891 527.055 cv
672.977 527.281 673.023 527.535 673.023 527.812 cv
673.023 528.051 672.992 528.273 672.93 528.477 cv
672.867 528.684 672.773 528.863 672.652 529.02 cv
672.531 529.18 672.383 529.316 672.207 529.426 cv
672.031 529.543 671.828 529.617 671.598 529.656 cv
671.598 529.668 li
671.859 529.699 672.098 529.766 672.316 529.867 cv
672.531 529.969 672.719 530.098 672.879 530.254 cv
673.031 530.41 673.152 530.594 673.242 530.805 cv
673.328 531.016 673.375 531.238 673.375 531.473 cv
cp
f
679.555 533.207 mo
679.555 533.277 679.547 533.34 679.539 533.395 cv
679.523 533.449 679.512 533.496 679.496 533.531 cv
679.48 533.57 679.457 533.598 679.426 533.613 cv
679.395 533.633 679.363 533.641 679.332 533.641 cv
675.141 533.641 li
675.086 533.641 675.039 533.637 675 533.621 cv
674.957 533.613 674.922 533.59 674.895 533.555 cv
674.863 533.527 674.84 533.48 674.828 533.418 cv
674.813 533.359 674.809 533.289 674.809 533.203 cv
674.809 533.129 674.809 533.059 674.816 532.996 cv
674.82 532.937 674.836 532.887 674.855 532.84 cv
674.875 532.797 674.898 532.754 674.93 532.707 cv
674.957 532.668 674.996 532.617 675.051 532.562 cv
676.566 531.004 li
676.914 530.645 677.191 530.324 677.406 530.039 cv
677.617 529.754 677.781 529.492 677.898 529.258 cv
678.008 529.023 678.086 528.812 678.125 528.621 cv
678.16 528.43 678.176 528.25 678.18 528.078 cv
678.176 527.914 678.148 527.754 678.094 527.602 cv
678.035 527.453 677.953 527.32 677.848 527.207 cv
677.738 527.098 677.605 527.008 677.445 526.937 cv
677.281 526.871 677.094 526.84 676.891 526.836 cv
676.641 526.84 676.422 526.871 676.227 526.937 cv
676.031 527.008 675.859 527.082 675.711 527.156 cv
675.563 527.238 675.438 527.309 675.344 527.371 cv
675.242 527.437 675.172 527.473 675.125 527.469 cv
675.094 527.473 675.066 527.465 675.047 527.445 cv
675.023 527.434 675.004 527.406 674.992 527.371 cv
674.977 527.34 674.969 527.293 674.961 527.23 cv
674.953 527.172 674.949 527.102 674.949 527.02 cv
674.949 526.961 674.949 526.91 674.953 526.867 cv
674.957 526.828 674.965 526.793 674.977 526.758 cv
674.984 526.73 674.996 526.699 675.016 526.668 cv
675.027 526.641 675.059 526.609 675.109 526.566 cv
675.152 526.527 675.234 526.469 675.352 526.398 cv
675.465 526.328 675.609 526.262 675.785 526.191 cv
675.957 526.125 676.148 526.066 676.359 526.016 cv
676.566 525.973 676.785 525.949 677.016 525.945 cv
677.383 525.949 677.703 526 677.98 526.102 cv
678.254 526.207 678.484 526.348 678.664 526.527 cv
678.844 526.707 678.98 526.918 679.074 527.156 cv
679.164 527.395 679.207 527.648 679.211 527.914 cv
679.207 528.164 679.188 528.406 679.145 528.641 cv
679.098 528.883 679.004 529.141 678.871 529.418 cv
678.73 529.699 678.531 530.012 678.27 530.352 cv
678.008 530.695 677.66 531.086 677.227 531.531 cv
676.027 532.785 li
679.328 532.785 li
679.355 532.785 679.387 532.797 679.418 532.812 cv
679.445 532.832 679.469 532.855 679.492 532.891 cv
679.508 532.93 679.523 532.977 679.539 533.023 cv
679.547 533.078 679.555 533.137 679.555 533.207 cv
cp
f
7.652 320.68 mo
7.754 320.684 7.84 320.687 7.91 320.695 cv
7.984 320.707 8.043 320.723 8.086 320.746 cv
8.133 320.77 8.164 320.801 8.184 320.832 cv
8.207 320.871 8.219 320.906 8.215 320.945 cv
8.215 323.781 li
16.957 323.781 li
17 323.781 17.035 323.793 17.066 323.812 cv
17.098 323.836 17.125 323.871 17.141 323.922 cv
17.16 323.977 17.172 324.047 17.188 324.129 cv
17.199 324.219 17.207 324.324 17.207 324.449 cv
17.207 324.574 17.199 324.684 17.188 324.77 cv
17.172 324.863 17.16 324.934 17.141 324.98 cv
17.125 325.035 17.098 325.07 17.066 325.09 cv
17.035 325.113 17 325.125 16.957 325.121 cv
8.215 325.121 li
8.215 327.957 li
8.219 328.004 8.207 328.039 8.184 328.07 cv
8.164 328.105 8.133 328.133 8.086 328.152 cv
8.043 328.176 7.984 328.195 7.91 328.203 cv
7.84 328.219 7.754 328.223 7.652 328.223 cv
7.555 328.223 7.469 328.219 7.391 328.203 cv
7.32 328.195 7.258 328.176 7.207 328.152 cv
7.164 328.133 7.129 328.105 7.105 328.07 cv
7.086 328.039 7.078 328.004 7.074 327.957 cv
7.074 320.945 li
7.078 320.906 7.086 320.871 7.105 320.832 cv
7.129 320.801 7.164 320.77 7.207 320.746 cv
7.258 320.723 7.32 320.707 7.391 320.695 cv
7.469 320.687 7.555 320.684 7.652 320.68 cv
cp
f
16.965 318.09 mo
17.012 318.094 17.047 318.105 17.07 318.121 cv
17.102 318.145 17.125 318.176 17.145 318.223 cv
17.164 318.27 17.176 318.336 17.191 318.414 cv
17.199 318.5 17.207 318.605 17.207 318.734 cv
17.207 318.863 17.199 318.969 17.191 319.047 cv
17.176 319.133 17.164 319.199 17.145 319.246 cv
17.125 319.301 17.102 319.332 17.07 319.348 cv
17.047 319.367 17.012 319.379 16.965 319.375 cv
9.953 319.375 li
9.918 319.379 9.887 319.367 9.852 319.348 cv
9.824 319.332 9.797 319.301 9.773 319.246 cv
9.754 319.199 9.738 319.133 9.727 319.047 cv
9.719 318.969 9.715 318.863 9.711 318.734 cv
9.715 318.605 9.719 318.5 9.727 318.414 cv
9.738 318.336 9.754 318.27 9.773 318.223 cv
9.797 318.176 9.824 318.145 9.852 318.121 cv
9.887 318.105 9.918 318.094 9.953 318.09 cv
cp
7.582 317.941 mo
7.887 317.941 8.094 318 8.199 318.113 cv
8.313 318.227 8.367 318.437 8.363 318.742 cv
8.367 319.047 8.313 319.254 8.203 319.363 cv
8.098 319.48 7.895 319.535 7.598 319.531 cv
7.297 319.535 7.094 319.477 6.984 319.359 cv
6.879 319.246 6.824 319.035 6.82 318.727 cv
6.824 318.426 6.879 318.223 6.98 318.109 cv
7.09 318 7.289 317.941 7.582 317.941 cv
cp
f
16.965 305.234 mo
17.012 305.238 17.047 305.246 17.07 305.266 cv
17.102 305.289 17.125 305.324 17.145 305.367 cv
17.164 305.418 17.176 305.484 17.191 305.562 cv
17.199 305.648 17.207 305.75 17.207 305.875 cv
17.207 306.008 17.199 306.117 17.191 306.195 cv
17.176 306.281 17.164 306.348 17.145 306.395 cv
17.125 306.449 17.102 306.484 17.07 306.5 cv
17.047 306.523 17.012 306.531 16.965 306.531 cv
12.703 306.531 li
12.41 306.531 12.141 306.559 11.895 306.609 cv
11.652 306.664 11.441 306.746 11.262 306.859 cv
11.086 306.973 10.949 307.117 10.855 307.293 cv
10.762 307.473 10.715 307.684 10.715 307.918 cv
10.715 308.215 10.832 308.512 11.059 308.809 cv
11.293 309.113 11.625 309.441 12.063 309.797 cv
16.965 309.797 li
17.012 309.801 17.047 309.812 17.07 309.828 cv
17.102 309.852 17.125 309.883 17.145 309.93 cv
17.164 309.98 17.176 310.047 17.191 310.129 cv
17.199 310.215 17.207 310.32 17.207 310.441 cv
17.207 310.562 17.199 310.664 17.191 310.75 cv
17.176 310.836 17.164 310.906 17.145 310.953 cv
17.125 311.008 17.102 311.039 17.07 311.055 cv
17.047 311.074 17.012 311.086 16.965 311.082 cv
12.703 311.082 li
12.41 311.086 12.141 311.113 11.895 311.168 cv
11.652 311.227 11.441 311.312 11.262 311.426 cv
11.086 311.539 10.949 311.684 10.855 311.855 cv
10.762 312.035 10.715 312.242 10.715 312.477 cv
10.715 312.777 10.832 313.074 11.059 313.375 cv
11.293 313.676 11.625 314.004 12.063 314.355 cv
16.965 314.355 li
17.012 314.359 17.047 314.371 17.07 314.387 cv
17.102 314.41 17.125 314.441 17.145 314.488 cv
17.164 314.535 17.176 314.602 17.191 314.68 cv
17.199 314.766 17.207 314.871 17.207 315 cv
17.207 315.129 17.199 315.234 17.191 315.312 cv
17.176 315.398 17.164 315.465 17.145 315.512 cv
17.125 315.566 17.102 315.598 17.07 315.613 cv
17.047 315.633 17.012 315.645 16.965 315.641 cv
9.953 315.641 li
9.914 315.645 9.879 315.637 9.848 315.617 cv
9.82 315.605 9.797 315.574 9.77 315.523 cv
9.75 315.48 9.734 315.418 9.723 315.344 cv
9.719 315.273 9.715 315.18 9.711 315.055 cv
9.715 314.945 9.719 314.848 9.723 314.77 cv
9.734 314.695 9.75 314.637 9.77 314.594 cv
9.797 314.555 9.82 314.527 9.848 314.508 cv
9.879 314.492 9.914 314.484 9.953 314.48 cv
10.879 314.48 li
10.438 314.09 10.117 313.707 9.91 313.332 cv
9.707 312.965 9.602 312.586 9.602 312.203 cv
9.602 311.914 9.637 311.656 9.703 311.422 cv
9.773 311.195 9.867 310.988 9.988 310.809 cv
10.109 310.633 10.254 310.484 10.422 310.355 cv
10.594 310.234 10.785 310.129 10.988 310.043 cv
10.738 309.812 10.523 309.59 10.344 309.379 cv
10.172 309.168 10.027 308.965 9.914 308.77 cv
9.809 308.574 9.73 308.387 9.676 308.203 cv
9.629 308.02 9.602 307.832 9.602 307.645 cv
9.602 307.191 9.684 306.812 9.84 306.508 cv
10.004 306.203 10.215 305.957 10.477 305.762 cv
10.742 305.574 11.051 305.437 11.406 305.355 cv
11.762 305.277 12.137 305.238 12.531 305.234 cv
cp
f
13.156 296.906 mo
13.359 296.91 13.5 296.961 13.586 297.059 cv
13.672 297.164 13.715 297.281 13.715 297.406 cv
13.715 302.023 li
14.105 302.027 14.457 301.988 14.77 301.906 cv
15.082 301.832 15.352 301.699 15.57 301.516 cv
15.797 301.336 15.969 301.102 16.086 300.805 cv
16.211 300.516 16.27 300.156 16.266 299.73 cv
16.27 299.398 16.242 299.102 16.184 298.84 cv
16.133 298.578 16.07 298.352 16 298.16 cv
15.934 297.973 15.875 297.816 15.816 297.691 cv
15.766 297.57 15.738 297.477 15.734 297.414 cv
15.738 297.379 15.746 297.348 15.762 297.316 cv
15.781 297.289 15.809 297.266 15.844 297.246 cv
15.883 297.234 15.934 297.223 15.996 297.211 cv
16.063 297.207 16.141 297.203 16.234 297.199 cv
16.305 297.203 16.363 297.207 16.41 297.207 cv
16.457 297.215 16.5 297.219 16.539 297.227 cv
16.578 297.234 16.613 297.25 16.645 297.266 cv
16.676 297.289 16.707 297.312 16.734 297.336 cv
16.766 297.367 16.813 297.449 16.875 297.59 cv
16.941 297.73 17.004 297.914 17.066 298.137 cv
17.129 298.363 17.184 298.621 17.234 298.914 cv
17.281 299.207 17.305 299.52 17.309 299.852 cv
17.305 300.43 17.227 300.937 17.066 301.367 cv
16.906 301.805 16.668 302.168 16.352 302.461 cv
16.035 302.762 15.641 302.984 15.16 303.133 cv
14.684 303.281 14.125 303.355 13.488 303.355 cv
12.891 303.355 12.352 303.281 11.867 303.125 cv
11.391 302.973 10.98 302.746 10.645 302.449 cv
10.309 302.156 10.051 301.801 9.871 301.387 cv
9.691 300.973 9.602 300.508 9.602 299.992 cv
9.602 299.441 9.691 298.973 9.867 298.586 cv
10.047 298.199 10.285 297.883 10.582 297.629 cv
10.883 297.383 11.234 297.199 11.633 297.082 cv
12.039 296.969 12.469 296.91 12.922 296.906 cv
cp
12.773 298.199 mo
12.098 298.184 11.566 298.336 11.184 298.652 cv
10.801 298.969 10.609 299.437 10.605 300.055 cv
10.609 300.379 10.668 300.66 10.785 300.898 cv
10.906 301.141 11.066 301.34 11.262 301.5 cv
11.461 301.664 11.691 301.789 11.953 301.875 cv
12.215 301.965 12.488 302.016 12.773 302.023 cv
cp
f
6.422 288.73 mo
7.469 289.227 8.539 289.594 9.637 289.836 cv
10.738 290.078 11.844 290.199 12.953 290.199 cv
14.07 290.199 15.18 290.078 16.273 289.828 cv
17.371 289.586 18.441 289.223 19.496 288.746 cv
19.555 288.723 19.609 288.711 19.656 288.703 cv
19.699 288.703 19.734 288.719 19.766 288.754 cv
19.793 288.793 19.813 288.848 19.828 288.922 cv
19.836 289 19.844 289.105 19.848 289.23 cv
19.844 289.328 19.84 289.406 19.84 289.473 cv
19.832 289.543 19.824 289.602 19.809 289.648 cv
19.793 289.699 19.773 289.742 19.754 289.77 cv
19.73 289.805 19.707 289.828 19.684 289.84 cv
19.152 290.121 18.617 290.367 18.074 290.578 cv
17.531 290.797 16.98 290.977 16.422 291.117 cv
15.859 291.266 15.293 291.375 14.719 291.445 cv
14.145 291.523 13.563 291.559 12.977 291.555 cv
12.391 291.559 11.813 291.52 11.238 291.434 cv
10.668 291.355 10.102 291.238 9.535 291.09 cv
8.973 290.941 8.418 290.762 7.871 290.551 cv
7.328 290.34 6.785 290.102 6.25 289.832 cv
6.23 289.828 6.215 289.812 6.195 289.789 cv
6.184 289.766 6.168 289.734 6.148 289.691 cv
6.137 289.652 6.125 289.594 6.113 289.52 cv
6.109 289.449 6.105 289.355 6.102 289.238 cv
6.105 289.121 6.113 289.027 6.125 288.949 cv
6.145 288.879 6.164 288.82 6.188 288.777 cv
6.215 288.738 6.25 288.715 6.289 288.707 cv
6.336 288.703 6.379 288.711 6.422 288.73 cv
cp
f
14.332 280.996 mo
14.805 281 15.227 281.086 15.594 281.258 cv
15.969 281.434 16.281 281.676 16.535 281.984 cv
16.793 282.293 16.984 282.656 17.113 283.074 cv
17.242 283.496 17.305 283.945 17.309 284.426 cv
17.305 284.766 17.277 285.082 17.223 285.367 cv
17.164 285.656 17.098 285.91 17.012 286.137 cv
16.934 286.363 16.848 286.555 16.754 286.707 cv
16.668 286.863 16.59 286.969 16.527 287.027 cv
16.465 287.086 16.387 287.129 16.293 287.156 cv
16.199 287.187 16.07 287.203 15.906 287.199 cv
15.793 287.203 15.699 287.199 15.621 287.184 cv
15.547 287.176 15.484 287.16 15.438 287.137 cv
15.391 287.121 15.359 287.094 15.34 287.059 cv
15.324 287.031 15.316 286.996 15.313 286.953 cv
15.316 286.883 15.359 286.781 15.445 286.645 cv
15.535 286.516 15.633 286.344 15.734 286.133 cv
15.844 285.926 15.941 285.676 16.027 285.383 cv
16.121 285.09 16.164 284.75 16.164 284.363 cv
16.164 284.074 16.125 283.809 16.047 283.566 cv
15.969 283.328 15.859 283.121 15.715 282.941 cv
15.574 282.77 15.398 282.633 15.188 282.539 cv
14.98 282.445 14.746 282.398 14.48 282.398 cv
14.199 282.398 13.953 282.465 13.746 282.594 cv
13.547 282.727 13.371 282.898 13.215 283.109 cv
13.066 283.324 12.926 283.566 12.793 283.84 cv
12.668 284.113 12.535 284.395 12.402 284.676 cv
12.27 284.965 12.125 285.242 11.961 285.512 cv
11.805 285.781 11.613 286.023 11.395 286.234 cv
11.176 286.453 10.922 286.625 10.625 286.754 cv
10.336 286.891 9.984 286.957 9.57 286.953 cv
9.152 286.957 8.777 286.879 8.445 286.723 cv
8.117 286.57 7.84 286.359 7.613 286.082 cv
7.395 285.812 7.223 285.488 7.105 285.109 cv
6.988 284.734 6.93 284.324 6.93 283.887 cv
6.93 283.668 6.949 283.445 6.988 283.215 cv
7.027 282.992 7.078 282.781 7.141 282.578 cv
7.207 282.383 7.281 282.203 7.359 282.043 cv
7.441 281.891 7.508 281.789 7.555 281.734 cv
7.609 281.687 7.648 281.652 7.672 281.637 cv
7.703 281.621 7.738 281.609 7.781 281.598 cv
7.828 281.59 7.883 281.582 7.941 281.574 cv
8.008 281.57 8.086 281.566 8.184 281.566 cv
8.277 281.566 8.363 281.57 8.434 281.578 cv
8.512 281.586 8.57 281.598 8.617 281.613 cv
8.664 281.629 8.699 281.652 8.723 281.68 cv
8.746 281.711 8.758 281.742 8.758 281.777 cv
8.758 281.836 8.723 281.926 8.652 282.047 cv
8.582 282.172 8.5 282.324 8.406 282.496 cv
8.316 282.676 8.234 282.883 8.156 283.121 cv
8.082 283.367 8.043 283.637 8.043 283.934 cv
8.043 284.215 8.082 284.461 8.156 284.668 cv
8.234 284.879 8.336 285.051 8.457 285.184 cv
8.582 285.32 8.727 285.422 8.898 285.488 cv
9.07 285.555 9.254 285.586 9.445 285.586 cv
9.73 285.586 9.973 285.523 10.172 285.395 cv
10.375 285.266 10.555 285.094 10.707 284.875 cv
10.867 284.664 11.008 284.418 11.137 284.141 cv
11.27 283.867 11.402 283.586 11.531 283.297 cv
11.664 283.012 11.809 282.73 11.965 282.457 cv
12.125 282.184 12.313 281.937 12.527 281.719 cv
12.746 281.504 13 281.332 13.293 281.195 cv
13.586 281.066 13.934 281 14.332 280.996 cv
cp
f
13.156 273.301 mo
13.359 273.305 13.5 273.355 13.586 273.453 cv
13.672 273.559 13.715 273.676 13.715 273.801 cv
13.715 278.418 li
14.105 278.422 14.457 278.383 14.77 278.301 cv
15.082 278.227 15.352 278.094 15.57 277.91 cv
15.797 277.73 15.969 277.496 16.086 277.199 cv
16.211 276.91 16.27 276.551 16.266 276.125 cv
16.27 275.793 16.242 275.496 16.184 275.234 cv
16.133 274.973 16.07 274.746 16 274.555 cv
15.934 274.367 15.875 274.211 15.816 274.086 cv
15.766 273.965 15.738 273.871 15.734 273.809 cv
15.738 273.773 15.746 273.742 15.762 273.711 cv
15.781 273.684 15.809 273.66 15.844 273.641 cv
15.883 273.629 15.934 273.617 15.996 273.605 cv
16.063 273.602 16.141 273.598 16.234 273.594 cv
16.305 273.598 16.363 273.602 16.41 273.602 cv
16.457 273.609 16.5 273.613 16.539 273.621 cv
16.578 273.629 16.613 273.645 16.645 273.66 cv
16.676 273.684 16.707 273.707 16.734 273.73 cv
16.766 273.762 16.813 273.844 16.875 273.984 cv
16.941 274.125 17.004 274.309 17.066 274.531 cv
17.129 274.758 17.184 275.016 17.234 275.309 cv
17.281 275.602 17.305 275.914 17.309 276.246 cv
17.305 276.824 17.227 277.332 17.066 277.762 cv
16.906 278.199 16.668 278.562 16.352 278.855 cv
16.035 279.156 15.641 279.379 15.16 279.527 cv
14.684 279.676 14.125 279.75 13.488 279.75 cv
12.891 279.75 12.352 279.676 11.867 279.52 cv
11.391 279.367 10.98 279.141 10.645 278.844 cv
10.309 278.551 10.051 278.195 9.871 277.781 cv
9.691 277.367 9.602 276.902 9.602 276.387 cv
9.602 275.836 9.691 275.367 9.867 274.98 cv
10.047 274.594 10.285 274.277 10.582 274.023 cv
10.883 273.777 11.234 273.594 11.633 273.477 cv
12.039 273.363 12.469 273.305 12.922 273.301 cv
cp
12.773 274.594 mo
12.098 274.578 11.566 274.73 11.184 275.047 cv
10.801 275.363 10.609 275.832 10.605 276.449 cv
10.609 276.773 10.668 277.055 10.785 277.293 cv
10.906 277.535 11.066 277.734 11.262 277.895 cv
11.461 278.059 11.691 278.184 11.953 278.27 cv
12.215 278.359 12.488 278.41 12.773 278.418 cv
cp
f
15.898 266.293 mo
15.992 266.293 16.066 266.297 16.129 266.301 cv
16.195 266.309 16.25 266.316 16.293 266.328 cv
16.34 266.344 16.379 266.359 16.41 266.375 cv
16.441 266.395 16.492 266.437 16.555 266.5 cv
16.625 266.566 16.703 266.676 16.797 266.832 cv
16.895 266.988 16.98 267.164 17.055 267.359 cv
17.129 267.555 17.188 267.766 17.238 267.992 cv
17.281 268.223 17.305 268.461 17.309 268.699 cv
17.305 269.207 17.227 269.652 17.059 270.043 cv
16.895 270.434 16.652 270.762 16.332 271.02 cv
16.016 271.285 15.621 271.484 15.156 271.621 cv
14.691 271.758 14.156 271.824 13.543 271.824 cv
12.855 271.824 12.262 271.742 11.766 271.574 cv
11.27 271.406 10.863 271.176 10.547 270.879 cv
10.23 270.59 9.996 270.242 9.84 269.844 cv
9.691 269.445 9.613 269.016 9.609 268.555 cv
9.613 268.332 9.633 268.117 9.672 267.902 cv
9.715 267.695 9.77 267.5 9.836 267.324 cv
9.906 267.148 9.984 266.992 10.07 266.852 cv
10.156 266.715 10.23 266.613 10.293 266.551 cv
10.355 266.488 10.406 266.445 10.441 266.422 cv
10.48 266.398 10.523 266.379 10.57 266.363 cv
10.621 266.348 10.676 266.34 10.738 266.332 cv
10.801 266.332 10.879 266.328 10.973 266.324 cv
11.176 266.328 11.32 266.352 11.398 266.395 cv
11.484 266.445 11.523 266.504 11.52 266.566 cv
11.523 266.648 11.48 266.738 11.391 266.836 cv
11.309 266.941 11.215 267.07 11.105 267.223 cv
11.004 267.379 10.906 267.566 10.82 267.785 cv
10.734 268.012 10.691 268.273 10.691 268.57 cv
10.691 269.191 10.93 269.664 11.406 269.992 cv
11.883 270.324 12.574 270.488 13.473 270.484 cv
13.93 270.488 14.324 270.445 14.664 270.355 cv
15.004 270.273 15.289 270.148 15.516 269.98 cv
15.746 269.816 15.918 269.613 16.027 269.367 cv
16.145 269.129 16.199 268.852 16.195 268.539 cv
16.199 268.246 16.152 267.984 16.055 267.758 cv
15.965 267.535 15.863 267.344 15.746 267.18 cv
15.637 267.02 15.535 266.883 15.441 266.766 cv
15.355 266.656 15.309 266.566 15.305 266.504 cv
15.309 266.469 15.32 266.437 15.336 266.41 cv
15.359 266.387 15.395 266.367 15.441 266.344 cv
15.496 266.328 15.559 266.312 15.629 266.305 cv
15.707 266.297 15.797 266.293 15.898 266.293 cv
cp
f
13.379 258.238 mo
13.957 258.242 14.484 258.316 14.961 258.465 cv
15.445 258.617 15.859 258.844 16.203 259.141 cv
16.555 259.441 16.824 259.816 17.016 260.262 cv
17.211 260.715 17.305 261.234 17.309 261.824 cv
17.305 262.402 17.223 262.906 17.051 263.332 cv
16.883 263.762 16.633 264.117 16.305 264.402 cv
15.977 264.691 15.582 264.906 15.113 265.043 cv
14.648 265.184 14.117 265.25 13.52 265.25 cv
12.953 265.25 12.426 265.18 11.945 265.031 cv
11.465 264.887 11.051 264.66 10.699 264.359 cv
10.352 264.062 10.082 263.691 9.891 263.242 cv
9.699 262.797 9.602 262.273 9.602 261.676 cv
9.602 261.098 9.688 260.598 9.859 260.168 cv
10.031 259.742 10.281 259.383 10.609 259.098 cv
10.938 258.812 11.336 258.598 11.801 258.453 cv
12.27 258.312 12.797 258.242 13.379 258.238 cv
cp
13.465 259.57 mo
13.09 259.574 12.73 259.609 12.391 259.676 cv
12.055 259.75 11.762 259.867 11.504 260.027 cv
11.254 260.191 11.051 260.41 10.898 260.687 cv
10.754 260.969 10.68 261.316 10.676 261.727 cv
10.68 262.113 10.746 262.441 10.879 262.715 cv
11.016 262.992 11.207 263.219 11.453 263.395 cv
11.699 263.574 11.992 263.707 12.328 263.789 cv
12.668 263.879 13.035 263.922 13.434 263.918 cv
13.82 263.922 14.184 263.887 14.52 263.812 cv
14.859 263.746 15.152 263.629 15.402 263.461 cv
15.656 263.297 15.859 263.074 16.004 262.797 cv
16.156 262.52 16.23 262.172 16.227 261.758 cv
16.23 261.383 16.16 261.055 16.023 260.773 cv
15.891 260.496 15.703 260.27 15.453 260.09 cv
15.211 259.914 14.918 259.785 14.582 259.699 cv
14.246 259.617 13.875 259.574 13.465 259.57 cv
cp
f
16.965 250.312 mo
17.012 250.312 17.047 250.324 17.07 250.344 cv
17.102 250.367 17.125 250.402 17.145 250.445 cv
17.164 250.496 17.176 250.559 17.191 250.641 cv
17.199 250.723 17.207 250.828 17.207 250.949 cv
17.207 251.082 17.199 251.187 17.191 251.27 cv
17.176 251.355 17.164 251.422 17.145 251.465 cv
17.125 251.516 17.102 251.547 17.07 251.566 cv
17.047 251.59 17.012 251.602 16.965 251.598 cv
12.859 251.598 li
12.461 251.602 12.141 251.633 11.895 251.691 cv
11.652 251.758 11.441 251.848 11.262 251.965 cv
11.086 252.082 10.949 252.238 10.855 252.426 cv
10.762 252.621 10.715 252.84 10.715 253.086 cv
10.715 253.41 10.832 253.734 11.059 254.055 cv
11.293 254.379 11.625 254.715 12.063 255.066 cv
16.965 255.066 li
17.012 255.07 17.047 255.082 17.07 255.098 cv
17.102 255.121 17.125 255.152 17.145 255.199 cv
17.164 255.246 17.176 255.312 17.191 255.391 cv
17.199 255.477 17.207 255.582 17.207 255.711 cv
17.207 255.84 17.199 255.945 17.191 256.023 cv
17.176 256.109 17.164 256.176 17.145 256.223 cv
17.125 256.277 17.102 256.309 17.07 256.324 cv
17.047 256.344 17.012 256.355 16.965 256.352 cv
9.953 256.352 li
9.914 256.355 9.879 256.348 9.848 256.328 cv
9.82 256.316 9.797 256.285 9.77 256.234 cv
9.75 256.191 9.734 256.129 9.723 256.055 cv
9.719 255.984 9.715 255.891 9.711 255.766 cv
9.715 255.656 9.719 255.559 9.723 255.48 cv
9.734 255.406 9.75 255.348 9.77 255.305 cv
9.797 255.266 9.82 255.238 9.848 255.219 cv
9.879 255.203 9.914 255.195 9.953 255.191 cv
10.879 255.191 li
10.438 254.801 10.117 254.406 9.91 254.012 cv
9.707 253.621 9.602 253.223 9.602 252.82 cv
9.602 252.352 9.684 251.961 9.84 251.641 cv
10.004 251.324 10.215 251.062 10.477 250.863 cv
10.742 250.668 11.051 250.527 11.406 250.441 cv
11.762 250.355 12.191 250.312 12.688 250.312 cv
cp
f
16.965 241.965 mo
17.012 241.969 17.047 241.977 17.074 241.992 cv
17.109 242.012 17.133 242.043 17.148 242.086 cv
17.164 242.129 17.176 242.187 17.191 242.258 cv
17.199 242.332 17.207 242.422 17.207 242.523 cv
17.207 242.637 17.199 242.727 17.191 242.797 cv
17.176 242.871 17.164 242.93 17.148 242.977 cv
17.133 243.023 17.109 243.059 17.074 243.078 cv
17.047 243.102 17.012 243.113 16.965 243.109 cv
16.039 243.109 li
16.441 243.484 16.75 243.867 16.973 244.262 cv
17.195 244.66 17.305 245.094 17.309 245.562 cv
17.305 246.082 17.207 246.523 17.008 246.883 cv
16.809 247.25 16.539 247.543 16.199 247.766 cv
15.859 247.996 15.461 248.16 15 248.262 cv
14.543 248.363 14.059 248.414 13.543 248.414 cv
12.945 248.414 12.402 248.352 11.914 248.223 cv
11.43 248.094 11.012 247.902 10.668 247.645 cv
10.324 247.395 10.063 247.078 9.879 246.699 cv
9.695 246.324 9.602 245.887 9.602 245.391 cv
9.602 244.984 9.691 244.609 9.871 244.266 cv
10.051 243.926 10.316 243.59 10.66 243.258 cv
6.586 243.258 li
6.551 243.258 6.516 243.25 6.48 243.23 cv
6.449 243.215 6.422 243.18 6.402 243.125 cv
6.387 243.074 6.371 243.008 6.355 242.926 cv
6.344 242.848 6.34 242.746 6.336 242.617 cv
6.34 242.492 6.344 242.383 6.355 242.297 cv
6.371 242.215 6.387 242.152 6.402 242.105 cv
6.422 242.062 6.449 242.027 6.48 242 cv
6.516 241.98 6.551 241.969 6.586 241.965 cv
cp
12.031 243.258 mo
11.605 243.605 11.277 243.941 11.047 244.266 cv
10.824 244.594 10.711 244.934 10.707 245.281 cv
10.711 245.613 10.789 245.891 10.941 246.117 cv
11.102 246.348 11.305 246.535 11.559 246.676 cv
11.813 246.82 12.102 246.922 12.422 246.984 cv
12.746 247.051 13.074 247.086 13.402 247.082 cv
13.762 247.086 14.105 247.059 14.441 247 cv
14.777 246.949 15.078 246.855 15.34 246.719 cv
15.605 246.586 15.816 246.406 15.973 246.18 cv
16.133 245.961 16.211 245.68 16.211 245.336 cv
16.211 245.172 16.188 245.008 16.141 244.844 cv
16.094 244.687 16.016 244.523 15.906 244.355 cv
15.797 244.191 15.656 244.02 15.48 243.836 cv
15.309 243.656 15.094 243.461 14.836 243.258 cv
cp
f
15.055 235.191 mo
15.418 235.195 15.738 235.262 16.016 235.391 cv
16.297 235.523 16.531 235.711 16.723 235.953 cv
16.918 236.199 17.063 236.492 17.16 236.828 cv
17.258 237.168 17.305 237.539 17.309 237.941 cv
17.305 238.195 17.285 238.434 17.25 238.656 cv
17.207 238.883 17.16 239.082 17.102 239.262 cv
17.043 239.441 16.98 239.594 16.914 239.719 cv
16.852 239.844 16.793 239.937 16.738 239.992 cv
16.688 240.051 16.617 240.09 16.52 240.113 cv
16.43 240.141 16.301 240.152 16.141 240.152 cv
16.043 240.152 15.961 240.148 15.891 240.137 cv
15.824 240.129 15.77 240.117 15.727 240.098 cv
15.688 240.086 15.656 240.062 15.637 240.035 cv
15.621 240.008 15.613 239.977 15.609 239.937 cv
15.613 239.883 15.648 239.797 15.715 239.684 cv
15.789 239.574 15.867 239.437 15.945 239.27 cv
16.031 239.109 16.105 238.918 16.176 238.691 cv
16.246 238.473 16.281 238.215 16.281 237.918 cv
16.281 237.703 16.258 237.504 16.211 237.324 cv
16.164 237.148 16.098 236.996 16.004 236.867 cv
15.918 236.738 15.801 236.637 15.656 236.566 cv
15.52 236.496 15.352 236.461 15.156 236.461 cv
14.961 236.461 14.797 236.512 14.66 236.613 cv
14.527 236.715 14.406 236.852 14.301 237.016 cv
14.199 237.184 14.109 237.367 14.023 237.574 cv
13.945 237.785 13.859 238 13.77 238.219 cv
13.684 238.437 13.582 238.652 13.469 238.863 cv
13.359 239.074 13.227 239.266 13.063 239.43 cv
12.906 239.602 12.711 239.734 12.484 239.832 cv
12.262 239.937 11.996 239.988 11.684 239.984 cv
11.41 239.988 11.145 239.934 10.891 239.824 cv
10.641 239.719 10.422 239.559 10.23 239.344 cv
10.043 239.133 9.891 238.867 9.773 238.547 cv
9.66 238.227 9.602 237.855 9.602 237.426 cv
9.602 237.242 9.617 237.055 9.648 236.867 cv
9.68 236.684 9.719 236.516 9.766 236.359 cv
9.813 236.211 9.863 236.082 9.918 235.973 cv
9.973 235.871 10.023 235.789 10.063 235.73 cv
10.109 235.68 10.145 235.645 10.172 235.621 cv
10.203 235.605 10.238 235.59 10.273 235.582 cv
10.316 235.574 10.363 235.566 10.418 235.559 cv
10.477 235.551 10.547 235.547 10.629 235.547 cv
10.719 235.547 10.797 235.551 10.859 235.559 cv
10.93 235.566 10.98 235.582 11.02 235.598 cv
11.063 235.621 11.094 235.641 11.109 235.664 cv
11.129 235.691 11.137 235.723 11.137 235.75 cv
11.137 235.801 11.109 235.867 11.051 235.953 cv
10.996 236.043 10.934 236.156 10.867 236.297 cv
10.805 236.437 10.746 236.605 10.684 236.793 cv
10.629 236.984 10.598 237.199 10.598 237.441 cv
10.598 237.664 10.625 237.855 10.672 238.02 cv
10.727 238.187 10.797 238.324 10.883 238.43 cv
10.977 238.535 11.082 238.617 11.207 238.668 cv
11.332 238.727 11.469 238.754 11.613 238.75 cv
11.816 238.754 11.984 238.703 12.121 238.598 cv
12.262 238.496 12.383 238.359 12.484 238.191 cv
12.59 238.027 12.684 237.836 12.766 237.621 cv
12.852 237.41 12.938 237.195 13.023 236.973 cv
13.113 236.754 13.215 236.535 13.32 236.316 cv
13.43 236.102 13.559 235.91 13.715 235.742 cv
13.871 235.578 14.059 235.445 14.277 235.344 cv
14.496 235.246 14.758 235.195 15.055 235.191 cv
cp
f
12.977 230.746 mo
13.563 230.746 14.145 230.785 14.719 230.855 cv
15.293 230.934 15.859 231.043 16.422 231.184 cv
16.98 231.332 17.531 231.508 18.074 231.719 cv
18.617 231.93 19.152 232.176 19.684 232.453 cv
19.707 232.473 19.73 232.496 19.754 232.523 cv
19.773 232.559 19.793 232.598 19.809 232.645 cv
19.824 232.695 19.832 232.754 19.84 232.82 cv
19.84 232.891 19.844 232.973 19.848 233.062 cv
19.844 233.199 19.836 233.305 19.828 233.379 cv
19.813 233.457 19.793 233.512 19.766 233.543 cv
19.734 233.578 19.699 233.594 19.656 233.59 cv
19.609 233.59 19.555 233.574 19.496 233.547 cv
18.445 233.07 17.375 232.711 16.277 232.465 cv
15.18 232.223 14.07 232.102 12.953 232.098 cv
11.844 232.102 10.738 232.223 9.637 232.465 cv
8.539 232.711 7.469 233.078 6.422 233.562 cv
6.379 233.586 6.336 233.594 6.289 233.586 cv
6.25 233.586 6.215 233.562 6.188 233.516 cv
6.164 233.477 6.145 233.418 6.125 233.344 cv
6.113 233.273 6.105 233.176 6.102 233.055 cv
6.105 232.945 6.109 232.855 6.113 232.781 cv
6.125 232.711 6.137 232.652 6.148 232.605 cv
6.168 232.562 6.184 232.531 6.195 232.508 cv
6.215 232.492 6.23 232.477 6.25 232.461 cv
7.316 231.93 8.414 231.508 9.535 231.203 cv
10.664 230.898 11.809 230.746 12.977 230.746 cv
cp
f
312.949 552.852 mo
312.945 552.895 312.938 552.93 312.918 552.961 cv
312.895 552.992 312.855 553.02 312.809 553.035 cv
312.754 553.055 312.688 553.066 312.602 553.082 cv
312.516 553.094 312.406 553.102 312.281 553.102 cv
312.152 553.102 312.047 553.094 311.961 553.082 cv
311.871 553.066 311.801 553.055 311.75 553.035 cv
311.695 553.02 311.66 552.992 311.641 552.961 cv
311.617 552.93 311.605 552.895 311.609 552.852 cv
311.609 543.172 li
311.605 543.133 311.617 543.098 311.645 543.062 cv
311.664 543.035 311.703 543.008 311.762 542.988 cv
311.813 542.973 311.883 542.957 311.973 542.941 cv
312.055 542.93 312.156 542.926 312.281 542.922 cv
312.406 542.926 312.516 542.93 312.602 542.941 cv
312.688 542.957 312.754 542.973 312.809 542.988 cv
312.855 543.008 312.895 543.035 312.918 543.062 cv
312.938 543.098 312.945 543.133 312.949 543.172 cv
cp
f
325.938 552.859 mo
325.934 552.906 325.926 552.941 325.906 552.965 cv
325.883 552.996 325.848 553.02 325.805 553.039 cv
325.754 553.059 325.688 553.07 325.609 553.086 cv
325.523 553.094 325.422 553.102 325.297 553.102 cv
325.164 553.102 325.055 553.094 324.977 553.086 cv
324.891 553.07 324.824 553.059 324.777 553.039 cv
324.723 553.02 324.688 552.996 324.672 552.965 cv
324.648 552.941 324.641 552.906 324.641 552.859 cv
324.641 548.598 li
324.641 548.305 324.613 548.035 324.563 547.789 cv
324.508 547.547 324.426 547.336 324.313 547.156 cv
324.199 546.98 324.055 546.844 323.879 546.75 cv
323.699 546.656 323.488 546.609 323.254 546.609 cv
322.957 546.609 322.66 546.727 322.363 546.953 cv
322.059 547.187 321.73 547.52 321.375 547.957 cv
321.375 552.859 li
321.371 552.906 321.359 552.941 321.344 552.965 cv
321.32 552.996 321.289 553.02 321.242 553.039 cv
321.191 553.059 321.125 553.07 321.043 553.086 cv
320.957 553.094 320.852 553.102 320.73 553.102 cv
320.609 553.102 320.508 553.094 320.422 553.086 cv
320.336 553.07 320.266 553.059 320.219 553.039 cv
320.164 553.02 320.133 552.996 320.117 552.965 cv
320.098 552.941 320.086 552.906 320.09 552.859 cv
320.09 548.598 li
320.086 548.305 320.059 548.035 320.004 547.789 cv
319.945 547.547 319.859 547.336 319.746 547.156 cv
319.633 546.98 319.488 546.844 319.316 546.75 cv
319.137 546.656 318.93 546.609 318.695 546.609 cv
318.395 546.609 318.098 546.727 317.797 546.953 cv
317.496 547.187 317.168 547.52 316.816 547.957 cv
316.816 552.859 li
316.813 552.906 316.801 552.941 316.785 552.965 cv
316.762 552.996 316.73 553.02 316.684 553.039 cv
316.637 553.059 316.57 553.07 316.492 553.086 cv
316.406 553.094 316.301 553.102 316.172 553.102 cv
316.043 553.102 315.938 553.094 315.859 553.086 cv
315.773 553.07 315.707 553.059 315.66 553.039 cv
315.605 553.02 315.574 552.996 315.559 552.965 cv
315.539 552.941 315.527 552.906 315.531 552.859 cv
315.531 545.848 li
315.527 545.809 315.535 545.773 315.555 545.742 cv
315.566 545.715 315.598 545.691 315.648 545.664 cv
315.691 545.645 315.754 545.629 315.828 545.617 cv
315.898 545.613 315.992 545.609 316.117 545.605 cv
316.227 545.609 316.324 545.613 316.402 545.617 cv
316.477 545.629 316.535 545.645 316.578 545.664 cv
316.617 545.691 316.645 545.715 316.664 545.742 cv
316.68 545.773 316.688 545.809 316.691 545.848 cv
316.691 546.773 li
317.082 546.332 317.465 546.012 317.84 545.805 cv
318.207 545.602 318.586 545.496 318.969 545.496 cv
319.258 545.496 319.516 545.531 319.75 545.598 cv
319.977 545.668 320.184 545.762 320.363 545.883 cv
320.539 546.004 320.688 546.148 320.816 546.316 cv
320.938 546.488 321.043 546.68 321.129 546.883 cv
321.359 546.633 321.582 546.418 321.793 546.238 cv
322.004 546.066 322.207 545.922 322.402 545.809 cv
322.598 545.703 322.785 545.625 322.969 545.57 cv
323.152 545.523 323.34 545.496 323.527 545.496 cv
323.98 545.496 324.359 545.578 324.664 545.734 cv
324.969 545.898 325.215 546.109 325.41 546.371 cv
325.598 546.637 325.734 546.945 325.816 547.301 cv
325.895 547.656 325.934 548.031 325.938 548.426 cv
cp
f
333.57 552.867 mo
333.566 552.93 333.547 552.977 333.508 553.008 cv
333.465 553.039 333.406 553.062 333.336 553.078 cv
333.258 553.094 333.152 553.102 333.016 553.102 cv
332.879 553.102 332.77 553.094 332.691 553.078 cv
332.605 553.062 332.547 553.039 332.516 553.008 cv
332.477 552.977 332.461 552.93 332.465 552.867 cv
332.465 552.168 li
332.156 552.496 331.813 552.75 331.438 552.93 cv
331.059 553.113 330.66 553.199 330.242 553.203 cv
329.867 553.199 329.535 553.152 329.238 553.059 cv
328.941 552.961 328.688 552.824 328.477 552.641 cv
328.266 552.461 328.102 552.238 327.984 551.973 cv
327.867 551.711 327.809 551.41 327.813 551.066 cv
327.809 550.676 327.887 550.332 328.051 550.039 cv
328.207 549.75 328.441 549.508 328.746 549.316 cv
329.047 549.125 329.414 548.98 329.852 548.883 cv
330.285 548.789 330.777 548.742 331.324 548.738 cv
332.293 548.738 li
332.293 548.191 li
332.289 547.922 332.262 547.684 332.207 547.477 cv
332.148 547.27 332.055 547.098 331.93 546.957 cv
331.797 546.82 331.633 546.715 331.434 546.645 cv
331.227 546.574 330.977 546.539 330.688 546.539 cv
330.367 546.539 330.082 546.578 329.832 546.652 cv
329.574 546.73 329.355 546.812 329.168 546.902 cv
328.98 546.996 328.82 547.082 328.695 547.152 cv
328.563 547.23 328.469 547.266 328.41 547.266 cv
328.367 547.266 328.332 547.258 328.301 547.234 cv
328.27 547.219 328.242 547.187 328.219 547.141 cv
328.195 547.102 328.176 547.047 328.168 546.98 cv
328.152 546.918 328.148 546.848 328.152 546.766 cv
328.148 546.641 328.156 546.535 328.18 546.457 cv
328.195 546.383 328.242 546.312 328.313 546.242 cv
328.383 546.176 328.504 546.098 328.676 546.008 cv
328.848 545.918 329.043 545.836 329.266 545.758 cv
329.488 545.687 329.734 545.625 330 545.57 cv
330.266 545.523 330.531 545.496 330.805 545.496 cv
331.305 545.496 331.734 545.555 332.086 545.668 cv
332.438 545.785 332.723 545.953 332.945 546.172 cv
333.16 546.395 333.32 546.668 333.422 546.992 cv
333.52 547.324 333.566 547.707 333.57 548.137 cv
cp
332.293 549.664 mo
331.191 549.664 li
330.836 549.668 330.531 549.699 330.273 549.754 cv
330.012 549.816 329.797 549.902 329.625 550.02 cv
329.453 550.137 329.328 550.277 329.25 550.441 cv
329.168 550.605 329.125 550.793 329.129 551.004 cv
329.125 551.371 329.242 551.664 329.473 551.875 cv
329.703 552.094 330.027 552.199 330.445 552.199 cv
330.781 552.199 331.094 552.113 331.383 551.941 cv
331.672 551.77 331.973 551.508 332.293 551.152 cv
cp
f
341.789 546.164 mo
341.785 546.348 341.762 546.48 341.715 546.559 cv
341.664 546.641 341.602 546.68 341.527 546.68 cv
340.52 546.68 li
340.699 546.867 340.828 547.074 340.902 547.301 cv
340.973 547.527 341.008 547.762 341.012 548.004 cv
341.008 548.41 340.941 548.77 340.816 549.082 cv
340.684 549.395 340.5 549.66 340.258 549.871 cv
340.016 550.09 339.727 550.254 339.398 550.367 cv
339.063 550.484 338.695 550.543 338.293 550.539 cv
338.004 550.543 337.73 550.504 337.477 550.426 cv
337.215 550.352 337.02 550.258 336.883 550.141 cv
336.789 550.238 336.711 550.344 336.652 550.461 cv
336.59 550.582 336.559 550.719 336.563 550.871 cv
336.559 551.055 336.645 551.207 336.816 551.324 cv
336.984 551.449 337.207 551.512 337.488 551.52 cv
339.32 551.598 li
339.668 551.609 339.984 551.656 340.277 551.742 cv
340.566 551.828 340.82 551.953 341.035 552.109 cv
341.246 552.27 341.414 552.461 341.535 552.691 cv
341.652 552.926 341.711 553.195 341.715 553.5 cv
341.711 553.82 341.645 554.125 341.512 554.418 cv
341.375 554.707 341.168 554.961 340.891 555.184 cv
340.609 555.402 340.254 555.578 339.824 555.707 cv
339.395 555.832 338.887 555.895 338.301 555.898 cv
337.73 555.895 337.246 555.848 336.852 555.754 cv
336.453 555.656 336.129 555.523 335.875 555.359 cv
335.621 555.191 335.438 554.996 335.324 554.766 cv
335.207 554.531 335.148 554.277 335.152 554.012 cv
335.148 553.84 335.168 553.676 335.215 553.516 cv
335.254 553.352 335.316 553.199 335.402 553.055 cv
335.484 552.91 335.594 552.773 335.723 552.637 cv
335.848 552.508 335.992 552.375 336.164 552.246 cv
335.906 552.117 335.719 551.953 335.598 551.754 cv
335.477 551.559 335.418 551.348 335.418 551.113 cv
335.418 550.801 335.48 550.516 335.609 550.266 cv
335.738 550.016 335.898 549.793 336.094 549.594 cv
335.93 549.402 335.805 549.187 335.711 548.945 cv
335.617 548.707 335.57 548.414 335.57 548.066 cv
335.57 547.672 335.637 547.312 335.773 546.992 cv
335.906 546.676 336.094 546.41 336.336 546.191 cv
336.574 545.977 336.859 545.809 337.195 545.687 cv
337.527 545.574 337.895 545.516 338.293 545.512 cv
338.504 545.516 338.703 545.527 338.887 545.547 cv
339.07 545.574 339.242 545.605 339.406 545.645 cv
341.527 545.645 li
341.613 545.648 341.68 545.691 341.723 545.773 cv
341.766 545.863 341.785 545.992 341.789 546.164 cv
cp
339.781 548.012 mo
339.777 547.539 339.645 547.168 339.387 546.895 cv
339.121 546.629 338.75 546.492 338.27 546.492 cv
338.016 546.492 337.797 546.535 337.617 546.617 cv
337.43 546.703 337.277 546.816 337.156 546.961 cv
337.035 547.109 336.945 547.277 336.887 547.465 cv
336.824 547.652 336.793 547.852 336.797 548.059 cv
336.793 548.523 336.926 548.887 337.188 549.152 cv
337.449 549.418 337.816 549.551 338.293 549.547 cv
338.543 549.551 338.762 549.512 338.953 549.426 cv
339.137 549.348 339.293 549.234 339.418 549.094 cv
339.539 548.953 339.629 548.789 339.691 548.598 cv
339.746 548.414 339.777 548.219 339.781 548.012 cv
cp
340.426 553.57 mo
340.422 553.266 340.297 553.035 340.055 552.871 cv
339.805 552.711 339.473 552.621 339.055 552.609 cv
337.238 552.547 li
337.07 552.68 336.934 552.805 336.832 552.918 cv
336.723 553.035 336.641 553.145 336.578 553.254 cv
336.516 553.359 336.473 553.465 336.449 553.57 cv
336.426 553.672 336.414 553.777 336.414 553.887 cv
336.414 554.223 336.582 554.477 336.926 554.656 cv
337.266 554.828 337.746 554.918 338.363 554.918 cv
338.75 554.918 339.074 554.879 339.34 554.805 cv
339.598 554.727 339.809 554.625 339.973 554.504 cv
340.129 554.375 340.246 554.234 340.32 554.074 cv
340.387 553.914 340.422 553.746 340.426 553.57 cv
cp
f
349.352 549.051 mo
349.348 549.254 349.297 549.395 349.199 549.48 cv
349.094 549.566 348.977 549.609 348.852 549.609 cv
344.234 549.609 li
344.23 550 344.27 550.352 344.352 550.664 cv
344.426 550.977 344.559 551.246 344.742 551.465 cv
344.922 551.691 345.156 551.863 345.453 551.98 cv
345.742 552.105 346.102 552.164 346.527 552.16 cv
346.859 552.164 347.156 552.137 347.418 552.078 cv
347.68 552.027 347.906 551.965 348.098 551.895 cv
348.285 551.828 348.441 551.77 348.566 551.711 cv
348.688 551.66 348.781 551.633 348.844 551.629 cv
348.879 551.633 348.91 551.641 348.941 551.656 cv
348.969 551.676 348.992 551.703 349.012 551.738 cv
349.023 551.777 349.035 551.828 349.047 551.891 cv
349.051 551.957 349.055 552.035 349.059 552.129 cv
349.055 552.199 349.051 552.258 349.051 552.305 cv
349.043 552.352 349.039 552.395 349.031 552.434 cv
349.023 552.473 349.008 552.508 348.992 552.539 cv
348.969 552.57 348.945 552.602 348.922 552.629 cv
348.891 552.66 348.809 552.707 348.668 552.77 cv
348.527 552.836 348.344 552.898 348.121 552.961 cv
347.895 553.023 347.637 553.078 347.344 553.129 cv
347.051 553.176 346.738 553.199 346.406 553.203 cv
345.828 553.199 345.32 553.121 344.891 552.961 cv
344.453 552.801 344.09 552.562 343.797 552.246 cv
343.496 551.93 343.273 551.535 343.125 551.055 cv
342.977 550.578 342.902 550.02 342.902 549.383 cv
342.902 548.785 342.977 548.246 343.133 547.762 cv
343.285 547.285 343.512 546.875 343.809 546.539 cv
344.102 546.203 344.457 545.945 344.871 545.766 cv
345.285 545.586 345.75 545.496 346.266 545.496 cv
346.816 545.496 347.285 545.586 347.672 545.762 cv
348.059 545.941 348.375 546.18 348.629 546.477 cv
348.875 546.777 349.059 547.129 349.176 547.527 cv
349.289 547.934 349.348 548.363 349.352 548.816 cv
cp
348.059 548.668 mo
348.074 547.992 347.922 547.461 347.605 547.078 cv
347.289 546.695 346.82 546.504 346.203 546.5 cv
345.879 546.504 345.598 546.562 345.359 546.68 cv
345.117 546.801 344.918 546.961 344.758 547.156 cv
344.594 547.355 344.469 547.586 344.383 547.848 cv
344.293 548.109 344.242 548.383 344.234 548.668 cv
cp
f
356.41 552.852 mo
356.406 552.895 356.398 552.93 356.379 552.961 cv
356.355 552.992 356.316 553.02 356.27 553.035 cv
356.215 553.055 356.148 553.066 356.063 553.082 cv
355.977 553.094 355.867 553.102 355.742 553.102 cv
355.613 553.102 355.508 553.094 355.422 553.082 cv
355.332 553.066 355.262 553.055 355.211 553.035 cv
355.156 553.02 355.121 552.992 355.102 552.961 cv
355.078 552.93 355.066 552.895 355.07 552.852 cv
355.07 543.172 li
355.066 543.133 355.078 543.098 355.105 543.062 cv
355.125 543.035 355.164 543.008 355.223 542.988 cv
355.273 542.973 355.344 542.957 355.434 542.941 cv
355.516 542.93 355.617 542.926 355.742 542.922 cv
355.867 542.926 355.977 542.93 356.063 542.941 cv
356.148 542.957 356.215 542.973 356.27 542.988 cv
356.316 543.008 356.355 543.035 356.379 543.062 cv
356.398 543.098 356.406 543.133 356.41 543.172 cv
cp
f
364.98 552.859 mo
364.98 552.906 364.969 552.941 364.949 552.965 cv
364.926 552.996 364.891 553.02 364.848 553.039 cv
364.797 553.059 364.734 553.07 364.652 553.086 cv
364.57 553.094 364.465 553.102 364.344 553.102 cv
364.211 553.102 364.105 553.094 364.023 553.086 cv
363.938 553.07 363.871 553.059 363.828 553.039 cv
363.777 553.02 363.746 552.996 363.727 552.965 cv
363.703 552.941 363.691 552.906 363.695 552.859 cv
363.695 548.754 li
363.691 548.355 363.66 548.035 363.602 547.789 cv
363.535 547.547 363.445 547.336 363.328 547.156 cv
363.211 546.98 363.055 546.844 362.867 546.75 cv
362.672 546.656 362.453 546.609 362.207 546.609 cv
361.883 546.609 361.559 546.727 361.238 546.953 cv
360.914 547.187 360.578 547.52 360.227 547.957 cv
360.227 552.859 li
360.223 552.906 360.211 552.941 360.195 552.965 cv
360.172 552.996 360.141 553.02 360.094 553.039 cv
360.047 553.059 359.98 553.07 359.902 553.086 cv
359.816 553.094 359.711 553.102 359.582 553.102 cv
359.453 553.102 359.348 553.094 359.27 553.086 cv
359.184 553.07 359.117 553.059 359.07 553.039 cv
359.016 553.02 358.984 552.996 358.969 552.965 cv
358.949 552.941 358.938 552.906 358.941 552.859 cv
358.941 545.848 li
358.938 545.809 358.945 545.773 358.965 545.742 cv
358.977 545.715 359.008 545.691 359.059 545.664 cv
359.102 545.645 359.164 545.629 359.238 545.617 cv
359.309 545.613 359.402 545.609 359.527 545.605 cv
359.637 545.609 359.734 545.613 359.813 545.617 cv
359.887 545.629 359.945 545.645 359.988 545.664 cv
360.027 545.691 360.055 545.715 360.074 545.742 cv
360.09 545.773 360.098 545.809 360.102 545.848 cv
360.102 546.773 li
360.492 546.332 360.887 546.012 361.281 545.805 cv
361.672 545.602 362.07 545.496 362.473 545.496 cv
362.941 545.496 363.332 545.578 363.652 545.734 cv
363.969 545.898 364.23 546.109 364.43 546.371 cv
364.625 546.637 364.766 546.945 364.852 547.301 cv
364.938 547.656 364.98 548.086 364.98 548.582 cv
cp
f
373.328 552.859 mo
373.324 552.906 373.316 552.941 373.301 552.969 cv
373.281 553.004 373.25 553.027 373.207 553.043 cv
373.164 553.059 373.105 553.07 373.035 553.086 cv
372.961 553.094 372.871 553.102 372.77 553.102 cv
372.656 553.102 372.566 553.094 372.496 553.086 cv
372.422 553.07 372.363 553.059 372.316 553.043 cv
372.27 553.027 372.234 553.004 372.215 552.969 cv
372.191 552.941 372.18 552.906 372.184 552.859 cv
372.184 551.934 li
371.809 552.336 371.426 552.645 371.031 552.867 cv
370.633 553.09 370.199 553.199 369.73 553.203 cv
369.211 553.199 368.77 553.102 368.41 552.902 cv
368.043 552.703 367.75 552.434 367.527 552.094 cv
367.297 551.754 367.133 551.355 367.031 550.895 cv
366.93 550.437 366.879 549.953 366.879 549.437 cv
366.879 548.84 366.941 548.297 367.07 547.809 cv
367.199 547.324 367.391 546.906 367.648 546.562 cv
367.898 546.219 368.215 545.957 368.594 545.773 cv
368.969 545.59 369.406 545.496 369.902 545.496 cv
370.309 545.496 370.684 545.586 371.027 545.766 cv
371.367 545.945 371.703 546.211 372.035 546.555 cv
372.035 542.48 li
372.035 542.445 372.043 542.41 372.063 542.375 cv
372.078 542.344 372.113 542.316 372.168 542.297 cv
372.219 542.281 372.285 542.266 372.367 542.25 cv
372.445 542.238 372.547 542.234 372.676 542.23 cv
372.801 542.234 372.91 542.238 372.996 542.25 cv
373.078 542.266 373.141 542.281 373.188 542.297 cv
373.23 542.316 373.266 542.344 373.293 542.375 cv
373.313 542.41 373.324 542.445 373.328 542.48 cv
cp
372.035 547.926 mo
371.688 547.5 371.352 547.172 371.027 546.941 cv
370.699 546.719 370.359 546.605 370.012 546.602 cv
369.68 546.605 369.402 546.684 369.176 546.836 cv
368.945 546.996 368.758 547.199 368.617 547.453 cv
368.473 547.707 368.371 547.996 368.309 548.316 cv
368.242 548.641 368.207 548.969 368.211 549.297 cv
368.207 549.656 368.234 550 368.293 550.336 cv
368.344 550.672 368.438 550.973 368.574 551.234 cv
368.707 551.5 368.887 551.711 369.113 551.867 cv
369.332 552.027 369.613 552.105 369.957 552.105 cv
370.121 552.105 370.285 552.082 370.449 552.035 cv
370.605 551.988 370.77 551.91 370.938 551.801 cv
371.102 551.691 371.273 551.551 371.457 551.375 cv
371.637 551.203 371.832 550.988 372.035 550.73 cv
cp
f
381.734 549.051 mo
381.73 549.254 381.68 549.395 381.582 549.48 cv
381.477 549.566 381.359 549.609 381.234 549.609 cv
376.617 549.609 li
376.613 550 376.652 550.352 376.734 550.664 cv
376.809 550.977 376.941 551.246 377.125 551.465 cv
377.305 551.691 377.539 551.863 377.836 551.98 cv
378.125 552.105 378.484 552.164 378.91 552.16 cv
379.242 552.164 379.539 552.137 379.801 552.078 cv
380.063 552.027 380.289 551.965 380.48 551.895 cv
380.668 551.828 380.824 551.77 380.949 551.711 cv
381.07 551.66 381.164 551.633 381.227 551.629 cv
381.262 551.633 381.293 551.641 381.324 551.656 cv
381.352 551.676 381.375 551.703 381.395 551.738 cv
381.406 551.777 381.418 551.828 381.43 551.891 cv
381.434 551.957 381.438 552.035 381.441 552.129 cv
381.438 552.199 381.434 552.258 381.434 552.305 cv
381.426 552.352 381.422 552.395 381.414 552.434 cv
381.406 552.473 381.391 552.508 381.375 552.539 cv
381.352 552.57 381.328 552.602 381.305 552.629 cv
381.273 552.66 381.191 552.707 381.051 552.77 cv
380.91 552.836 380.727 552.898 380.504 552.961 cv
380.277 553.023 380.02 553.078 379.727 553.129 cv
379.434 553.176 379.121 553.199 378.789 553.203 cv
378.211 553.199 377.703 553.121 377.273 552.961 cv
376.836 552.801 376.473 552.562 376.18 552.246 cv
375.879 551.93 375.656 551.535 375.508 551.055 cv
375.359 550.578 375.285 550.02 375.285 549.383 cv
375.285 548.785 375.359 548.246 375.516 547.762 cv
375.668 547.285 375.895 546.875 376.191 546.539 cv
376.484 546.203 376.84 545.945 377.254 545.766 cv
377.668 545.586 378.133 545.496 378.648 545.496 cv
379.199 545.496 379.668 545.586 380.055 545.762 cv
380.441 545.941 380.758 546.18 381.012 546.477 cv
381.258 546.777 381.441 547.129 381.559 547.527 cv
381.672 547.934 381.73 548.363 381.734 548.816 cv
cp
380.441 548.668 mo
380.457 547.992 380.305 547.461 379.988 547.078 cv
379.672 546.695 379.203 546.504 378.586 546.5 cv
378.262 546.504 377.98 546.562 377.742 546.68 cv
377.5 546.801 377.301 546.961 377.141 547.156 cv
376.977 547.355 376.852 547.586 376.766 547.848 cv
376.676 548.109 376.625 548.383 376.617 548.668 cv
cp
f
388.742 552.711 mo
388.781 552.785 388.801 552.848 388.805 552.895 cv
388.801 552.949 388.777 552.988 388.73 553.016 cv
388.68 553.047 388.605 553.066 388.504 553.082 cv
388.402 553.094 388.27 553.102 388.109 553.102 cv
387.949 553.102 387.824 553.098 387.738 553.09 cv
387.645 553.082 387.574 553.07 387.523 553.051 cv
387.465 553.035 387.422 553.012 387.398 552.98 cv
387.367 552.953 387.344 552.922 387.324 552.883 cv
385.641 550.102 li
383.965 552.883 li
383.941 552.922 383.918 552.953 383.891 552.98 cv
383.859 553.012 383.816 553.035 383.766 553.051 cv
383.707 553.07 383.637 553.082 383.551 553.09 cv
383.461 553.098 383.344 553.102 383.199 553.102 cv
383.047 553.102 382.926 553.094 382.832 553.082 cv
382.734 553.066 382.664 553.047 382.621 553.016 cv
382.574 552.988 382.551 552.949 382.559 552.895 cv
382.559 552.848 382.586 552.785 382.633 552.711 cv
384.813 549.289 li
382.75 545.996 li
382.707 545.926 382.684 545.863 382.684 545.812 cv
382.68 545.766 382.703 545.727 382.754 545.687 cv
382.801 545.656 382.875 545.633 382.977 545.621 cv
383.074 545.613 383.207 545.609 383.379 545.605 cv
383.527 545.609 383.648 545.613 383.742 545.617 cv
383.828 545.629 383.902 545.641 383.957 545.652 cv
384.008 545.672 384.047 545.691 384.074 545.715 cv
384.098 545.742 384.121 545.773 384.145 545.809 cv
385.742 548.418 li
387.363 545.809 li
387.379 545.781 387.402 545.754 387.434 545.723 cv
387.457 545.699 387.492 545.676 387.539 545.656 cv
387.578 545.641 387.641 545.629 387.723 545.617 cv
387.801 545.613 387.91 545.609 388.055 545.605 cv
388.203 545.609 388.328 545.613 388.426 545.621 cv
388.52 545.633 388.59 545.652 388.641 545.68 cv
388.684 545.711 388.707 545.75 388.703 545.801 cv
388.695 545.855 388.668 545.922 388.625 545.996 cv
386.574 549.25 li
cp
f
208.785 9.67999 mo
208.785 10.246 208.695 10.75 208.52 11.184 cv
208.34 11.621 208.082 11.988 207.746 12.285 cv
207.406 12.59 206.992 12.816 206.504 12.969 cv
206.012 13.125 205.434 13.203 204.77 13.199 cv
203.93 13.199 li
203.93 16.418 li
203.926 16.473 203.91 16.52 203.879 16.559 cv
203.844 16.602 203.789 16.637 203.711 16.66 cv
203.633 16.687 203.527 16.707 203.398 16.723 cv
203.266 16.738 203.102 16.746 202.902 16.746 cv
202.703 16.746 202.535 16.738 202.406 16.723 cv
202.27 16.707 202.164 16.687 202.09 16.66 cv
202.008 16.637 201.953 16.602 201.926 16.559 cv
201.891 16.52 201.875 16.473 201.879 16.418 cv
201.879 7.34802 li
201.875 7.10498 201.941 6.922 202.07 6.797 cv
202.195 6.67603 202.363 6.617 202.574 6.61298 cv
204.949 6.61298 li
205.184 6.617 205.414 6.625 205.633 6.64099 cv
205.848 6.65997 206.105 6.69897 206.406 6.758 cv
206.707 6.82001 207.012 6.92999 207.324 7.09003 cv
207.633 7.25403 207.895 7.461 208.113 7.703 cv
208.328 7.953 208.496 8.242 208.613 8.57001 cv
208.727 8.90198 208.785 9.27002 208.785 9.67999 cv
cp
206.641 9.82397 mo
206.641 9.47699 206.578 9.18402 206.453 8.953 cv
206.328 8.72699 206.172 8.55902 205.992 8.44501 cv
205.809 8.34003 205.621 8.27002 205.422 8.23798 cv
205.219 8.211 205.012 8.19897 204.801 8.19501 cv
203.93 8.19501 li
203.93 11.617 li
204.848 11.617 li
205.176 11.621 205.449 11.574 205.672 11.484 cv
205.891 11.398 206.07 11.277 206.211 11.117 cv
206.348 10.961 206.453 10.77 206.531 10.547 cv
206.602 10.328 206.641 10.09 206.641 9.82397 cv
cp
f
214.719 10.129 mo
214.719 10.32 214.711 10.473 214.703 10.59 cv
214.688 10.711 214.672 10.805 214.656 10.871 cv
214.633 10.941 214.605 10.988 214.574 11.012 cv
214.535 11.039 214.492 11.051 214.445 11.051 cv
214.398 11.051 214.352 11.043 214.305 11.023 cv
214.25 11.008 214.191 10.988 214.129 10.965 cv
214.059 10.945 213.988 10.926 213.914 10.906 cv
213.832 10.891 213.746 10.883 213.656 10.879 cv
213.543 10.883 213.434 10.902 213.328 10.945 cv
213.219 10.992 213.105 11.062 212.992 11.152 cv
212.871 11.246 212.75 11.371 212.625 11.523 cv
212.496 11.684 212.359 11.875 212.215 12.102 cv
212.215 16.434 li
212.211 16.488 212.195 16.531 212.168 16.57 cv
212.133 16.609 212.078 16.645 212.008 16.668 cv
211.93 16.695 211.832 16.711 211.707 16.727 cv
211.582 16.738 211.422 16.746 211.234 16.746 cv
211.039 16.746 210.883 16.738 210.758 16.727 cv
210.633 16.711 210.531 16.695 210.457 16.668 cv
210.379 16.645 210.324 16.609 210.297 16.57 cv
210.262 16.531 210.246 16.488 210.25 16.434 cv
210.25 9.48401 li
210.246 9.43701 210.262 9.39099 210.289 9.34802 cv
210.313 9.31201 210.359 9.28101 210.43 9.25 cv
210.496 9.22699 210.582 9.20697 210.691 9.19098 cv
210.797 9.18402 210.93 9.17603 211.094 9.172 cv
211.258 9.17603 211.395 9.18402 211.504 9.19098 cv
211.609 9.20697 211.695 9.22699 211.758 9.25 cv
211.816 9.28101 211.859 9.31201 211.887 9.34802 cv
211.91 9.39099 211.922 9.43701 211.926 9.48401 cv
211.926 10.348 li
212.105 10.09 212.277 9.87903 212.441 9.70697 cv
212.598 9.54303 212.754 9.40601 212.902 9.30499 cv
213.047 9.20697 213.191 9.14099 213.336 9.09802 cv
213.48 9.06201 213.625 9.04303 213.773 9.039 cv
213.84 9.04303 213.914 9.047 213.992 9.05103 cv
214.07 9.06201 214.148 9.07397 214.234 9.09003 cv
214.313 9.10901 214.387 9.12903 214.453 9.15198 cv
214.512 9.17603 214.559 9.203 214.59 9.22699 cv
214.617 9.258 214.637 9.28497 214.652 9.31201 cv
214.664 9.34802 214.676 9.39099 214.688 9.44098 cv
214.695 9.5 214.703 9.58197 214.711 9.68701 cv
214.715 9.797 214.719 9.94501 214.719 10.129 cv
cp
f
222.227 12.758 mo
222.223 12.996 222.172 13.172 222.066 13.285 cv
221.957 13.402 221.809 13.461 221.629 13.457 cv
217.395 13.457 li
217.391 13.758 217.426 14.027 217.5 14.266 cv
217.566 14.508 217.68 14.711 217.836 14.879 cv
217.988 15.051 218.184 15.18 218.426 15.266 cv
218.664 15.355 218.953 15.398 219.297 15.398 cv
219.637 15.398 219.938 15.375 220.199 15.324 cv
220.457 15.277 220.684 15.223 220.875 15.16 cv
221.063 15.102 221.219 15.047 221.348 14.996 cv
221.469 14.949 221.57 14.926 221.652 14.922 cv
221.695 14.926 221.734 14.934 221.77 14.949 cv
221.797 14.969 221.824 15 221.844 15.047 cv
221.863 15.094 221.875 15.16 221.887 15.246 cv
221.891 15.332 221.895 15.441 221.898 15.57 cv
221.895 15.687 221.895 15.785 221.891 15.863 cv
221.883 15.945 221.875 16.012 221.867 16.066 cv
221.855 16.125 221.84 16.176 221.82 16.211 cv
221.801 16.254 221.773 16.289 221.742 16.324 cv
221.707 16.363 221.613 16.414 221.465 16.473 cv
221.309 16.539 221.117 16.602 220.887 16.656 cv
220.648 16.719 220.379 16.766 220.082 16.812 cv
219.777 16.852 219.457 16.875 219.117 16.879 cv
218.496 16.875 217.953 16.801 217.492 16.645 cv
217.023 16.492 216.637 16.254 216.328 15.937 cv
216.012 15.621 215.777 15.223 215.629 14.738 cv
215.473 14.258 215.398 13.691 215.402 13.035 cv
215.398 12.422 215.477 11.863 215.641 11.367 cv
215.797 10.871 216.031 10.453 216.344 10.105 cv
216.648 9.76202 217.023 9.49597 217.461 9.31201 cv
217.898 9.133 218.391 9.04303 218.945 9.039 cv
219.523 9.04303 220.023 9.12903 220.438 9.297 cv
220.852 9.47302 221.188 9.711 221.453 10.012 cv
221.715 10.316 221.91 10.676 222.039 11.09 cv
222.16 11.508 222.223 11.957 222.227 12.445 cv
cp
220.324 12.195 mo
220.336 11.645 220.227 11.211 219.992 10.898 cv
219.758 10.586 219.391 10.43 218.898 10.426 cv
218.648 10.43 218.434 10.477 218.25 10.566 cv
218.063 10.664 217.91 10.789 217.789 10.945 cv
217.664 11.105 217.57 11.293 217.508 11.508 cv
217.441 11.723 217.402 11.953 217.395 12.195 cv
cp
f
230.832 12.855 mo
230.832 13.477 230.766 14.035 230.633 14.531 cv
230.5 15.027 230.305 15.449 230.051 15.797 cv
229.797 16.145 229.48 16.414 229.102 16.598 cv
228.719 16.785 228.285 16.875 227.801 16.879 cv
227.594 16.875 227.406 16.855 227.242 16.82 cv
227.07 16.777 226.906 16.719 226.75 16.641 cv
226.59 16.562 226.434 16.465 226.281 16.34 cv
226.121 16.223 225.961 16.082 225.797 15.918 cv
225.797 19.191 li
225.793 19.238 225.777 19.285 225.75 19.332 cv
225.715 19.371 225.66 19.406 225.59 19.437 cv
225.512 19.461 225.414 19.484 225.289 19.504 cv
225.164 19.516 225.004 19.523 224.816 19.527 cv
224.621 19.523 224.465 19.516 224.34 19.504 cv
224.215 19.484 224.113 19.461 224.039 19.437 cv
223.961 19.406 223.906 19.371 223.879 19.332 cv
223.844 19.285 223.828 19.238 223.832 19.191 cv
223.832 9.48401 li
223.828 9.43701 223.844 9.39099 223.871 9.34802 cv
223.895 9.31201 223.938 9.28101 224.008 9.25 cv
224.07 9.22699 224.156 9.20697 224.266 9.19098 cv
224.367 9.18402 224.504 9.17603 224.668 9.172 cv
224.824 9.17603 224.953 9.18402 225.059 9.19098 cv
225.164 9.20697 225.25 9.22699 225.316 9.25 cv
225.379 9.28101 225.426 9.31201 225.453 9.34802 cv
225.477 9.39099 225.488 9.43701 225.492 9.48401 cv
225.492 10.301 li
225.691 10.094 225.891 9.914 226.09 9.75403 cv
226.281 9.59802 226.48 9.46503 226.684 9.35498 cv
226.887 9.25403 227.094 9.172 227.313 9.117 cv
227.523 9.06598 227.754 9.04303 228.004 9.039 cv
228.508 9.04303 228.941 9.14099 229.305 9.34003 cv
229.66 9.54303 229.953 9.82001 230.18 10.164 cv
230.402 10.516 230.566 10.918 230.676 11.379 cv
230.777 11.84 230.832 12.332 230.832 12.855 cv
cp
228.789 12.996 mo
228.785 12.703 228.766 12.422 228.723 12.145 cv
228.676 11.875 228.598 11.633 228.496 11.418 cv
228.387 11.207 228.246 11.035 228.074 10.906 cv
227.898 10.781 227.684 10.719 227.426 10.715 cv
227.293 10.719 227.164 10.738 227.039 10.773 cv
226.91 10.816 226.781 10.879 226.648 10.965 cv
226.516 11.055 226.379 11.168 226.242 11.309 cv
226.098 11.449 225.949 11.625 225.797 11.828 cv
225.797 14.121 li
226.07 14.469 226.332 14.738 226.582 14.926 cv
226.828 15.117 227.09 15.211 227.363 15.211 cv
227.617 15.211 227.832 15.148 228.016 15.016 cv
228.191 14.891 228.34 14.719 228.453 14.508 cv
228.566 14.297 228.648 14.059 228.707 13.793 cv
228.758 13.527 228.785 13.262 228.789 12.996 cv
cp
f
238.328 16.457 mo
238.324 16.535 238.297 16.59 238.25 16.629 cv
238.195 16.672 238.113 16.699 238.004 16.719 cv
237.887 16.734 237.723 16.746 237.508 16.746 cv
237.27 16.746 237.098 16.734 236.996 16.719 cv
236.887 16.699 236.813 16.672 236.773 16.629 cv
236.727 16.59 236.707 16.535 236.707 16.457 cv
236.707 15.906 li
236.418 16.215 236.09 16.453 235.727 16.621 cv
235.359 16.793 234.953 16.875 234.508 16.879 cv
234.137 16.875 233.797 16.828 233.488 16.734 cv
233.18 16.641 232.914 16.5 232.688 16.305 cv
232.461 16.117 232.285 15.883 232.16 15.602 cv
232.035 15.324 231.973 14.996 231.977 14.617 cv
231.973 14.219 232.051 13.867 232.211 13.562 cv
232.367 13.266 232.605 13.02 232.922 12.824 cv
233.234 12.633 233.625 12.488 234.094 12.391 cv
234.563 12.301 235.105 12.254 235.723 12.25 cv
236.402 12.25 li
236.402 11.828 li
236.402 11.613 236.379 11.422 236.336 11.258 cv
236.289 11.098 236.215 10.961 236.117 10.848 cv
236.012 10.742 235.879 10.66 235.711 10.605 cv
235.539 10.555 235.328 10.531 235.086 10.527 cv
234.754 10.531 234.461 10.566 234.207 10.637 cv
233.945 10.711 233.719 10.793 233.523 10.879 cv
233.324 10.973 233.16 11.051 233.031 11.121 cv
232.895 11.195 232.785 11.234 232.707 11.23 cv
232.645 11.234 232.594 11.215 232.555 11.176 cv
232.508 11.141 232.473 11.09 232.445 11.02 cv
232.414 10.957 232.391 10.871 232.379 10.77 cv
232.359 10.672 232.352 10.562 232.355 10.441 cv
232.352 10.281 232.367 10.156 232.395 10.059 cv
232.418 9.96899 232.465 9.883 232.543 9.80499 cv
232.613 9.72998 232.742 9.64801 232.926 9.55902 cv
233.105 9.46899 233.316 9.383 233.563 9.30499 cv
233.805 9.22699 234.074 9.164 234.363 9.11298 cv
234.652 9.06598 234.949 9.04303 235.258 9.039 cv
235.801 9.04303 236.266 9.09399 236.652 9.19897 cv
237.039 9.30902 237.359 9.47302 237.609 9.69098 cv
237.859 9.90997 238.039 10.195 238.156 10.543 cv
238.266 10.895 238.324 11.309 238.328 11.781 cv
cp
236.402 13.48 mo
235.652 13.48 li
235.336 13.484 235.066 13.508 234.844 13.551 cv
234.617 13.602 234.434 13.672 234.297 13.762 cv
234.152 13.859 234.051 13.973 233.988 14.102 cv
233.922 14.238 233.887 14.387 233.891 14.555 cv
233.887 14.848 233.98 15.078 234.168 15.242 cv
234.352 15.41 234.609 15.492 234.938 15.492 cv
235.211 15.492 235.461 15.422 235.695 15.281 cv
235.922 15.141 236.16 14.937 236.402 14.664 cv
cp
f
244.758 10.129 mo
244.758 10.32 244.75 10.473 244.742 10.59 cv
244.727 10.711 244.711 10.805 244.695 10.871 cv
244.672 10.941 244.645 10.988 244.613 11.012 cv
244.574 11.039 244.531 11.051 244.484 11.051 cv
244.438 11.051 244.391 11.043 244.344 11.023 cv
244.289 11.008 244.23 10.988 244.168 10.965 cv
244.098 10.945 244.027 10.926 243.953 10.906 cv
243.871 10.891 243.785 10.883 243.695 10.879 cv
243.582 10.883 243.473 10.902 243.367 10.945 cv
243.258 10.992 243.145 11.062 243.031 11.152 cv
242.91 11.246 242.789 11.371 242.664 11.523 cv
242.535 11.684 242.398 11.875 242.254 12.102 cv
242.254 16.434 li
242.25 16.488 242.234 16.531 242.207 16.57 cv
242.172 16.609 242.117 16.645 242.047 16.668 cv
241.969 16.695 241.871 16.711 241.746 16.727 cv
241.621 16.738 241.461 16.746 241.273 16.746 cv
241.078 16.746 240.922 16.738 240.797 16.727 cv
240.672 16.711 240.57 16.695 240.496 16.668 cv
240.418 16.645 240.363 16.609 240.336 16.57 cv
240.301 16.531 240.285 16.488 240.289 16.434 cv
240.289 9.48401 li
240.285 9.43701 240.301 9.39099 240.328 9.34802 cv
240.352 9.31201 240.398 9.28101 240.469 9.25 cv
240.535 9.22699 240.621 9.20697 240.73 9.19098 cv
240.836 9.18402 240.969 9.17603 241.133 9.172 cv
241.297 9.17603 241.434 9.18402 241.543 9.19098 cv
241.648 9.20697 241.734 9.22699 241.797 9.25 cv
241.855 9.28101 241.898 9.31201 241.926 9.34802 cv
241.949 9.39099 241.961 9.43701 241.965 9.48401 cv
241.965 10.348 li
242.145 10.09 242.316 9.87903 242.48 9.70697 cv
242.637 9.54303 242.793 9.40601 242.941 9.30499 cv
243.086 9.20697 243.23 9.14099 243.375 9.09802 cv
243.52 9.06201 243.664 9.04303 243.813 9.039 cv
243.879 9.04303 243.953 9.047 244.031 9.05103 cv
244.109 9.06201 244.188 9.07397 244.273 9.09003 cv
244.352 9.10901 244.426 9.12903 244.492 9.15198 cv
244.551 9.17603 244.598 9.203 244.629 9.22699 cv
244.656 9.258 244.676 9.28497 244.691 9.31201 cv
244.703 9.34802 244.715 9.39099 244.727 9.44098 cv
244.734 9.5 244.742 9.58197 244.75 9.68701 cv
244.754 9.797 244.758 9.94501 244.758 10.129 cv
cp
f
251.496 16.457 mo
251.492 16.535 251.465 16.59 251.418 16.629 cv
251.363 16.672 251.281 16.699 251.172 16.719 cv
251.055 16.734 250.891 16.746 250.676 16.746 cv
250.438 16.746 250.266 16.734 250.164 16.719 cv
250.055 16.699 249.98 16.672 249.941 16.629 cv
249.895 16.59 249.875 16.535 249.875 16.457 cv
249.875 15.906 li
249.586 16.215 249.258 16.453 248.895 16.621 cv
248.527 16.793 248.121 16.875 247.676 16.879 cv
247.305 16.875 246.965 16.828 246.656 16.734 cv
246.348 16.641 246.082 16.5 245.855 16.305 cv
245.629 16.117 245.453 15.883 245.328 15.602 cv
245.203 15.324 245.141 14.996 245.145 14.617 cv
245.141 14.219 245.219 13.867 245.379 13.562 cv
245.535 13.266 245.773 13.02 246.09 12.824 cv
246.402 12.633 246.793 12.488 247.262 12.391 cv
247.73 12.301 248.273 12.254 248.891 12.25 cv
249.57 12.25 li
249.57 11.828 li
249.57 11.613 249.547 11.422 249.504 11.258 cv
249.457 11.098 249.383 10.961 249.285 10.848 cv
249.18 10.742 249.047 10.66 248.879 10.605 cv
248.707 10.555 248.496 10.531 248.254 10.527 cv
247.922 10.531 247.629 10.566 247.375 10.637 cv
247.113 10.711 246.887 10.793 246.691 10.879 cv
246.492 10.973 246.328 11.051 246.199 11.121 cv
246.063 11.195 245.953 11.234 245.875 11.23 cv
245.813 11.234 245.762 11.215 245.723 11.176 cv
245.676 11.141 245.641 11.09 245.613 11.02 cv
245.582 10.957 245.559 10.871 245.547 10.77 cv
245.527 10.672 245.52 10.562 245.523 10.441 cv
245.52 10.281 245.535 10.156 245.563 10.059 cv
245.586 9.96899 245.633 9.883 245.711 9.80499 cv
245.781 9.72998 245.91 9.64801 246.094 9.55902 cv
246.273 9.46899 246.484 9.383 246.73 9.30499 cv
246.973 9.22699 247.242 9.164 247.531 9.11298 cv
247.82 9.06598 248.117 9.04303 248.426 9.039 cv
248.969 9.04303 249.434 9.09399 249.82 9.19897 cv
250.207 9.30902 250.527 9.47302 250.777 9.69098 cv
251.027 9.90997 251.207 10.195 251.324 10.543 cv
251.434 10.895 251.492 11.309 251.496 11.781 cv
cp
249.57 13.48 mo
248.82 13.48 li
248.504 13.484 248.234 13.508 248.012 13.551 cv
247.785 13.602 247.602 13.672 247.465 13.762 cv
247.32 13.859 247.219 13.973 247.156 14.102 cv
247.09 14.238 247.055 14.387 247.059 14.555 cv
247.055 14.848 247.148 15.078 247.336 15.242 cv
247.52 15.41 247.777 15.492 248.105 15.492 cv
248.379 15.492 248.629 15.422 248.863 15.281 cv
249.09 15.141 249.328 14.937 249.57 14.664 cv
cp
f
257.492 15.75 mo
257.492 15.977 257.477 16.152 257.449 16.273 cv
257.418 16.398 257.379 16.484 257.336 16.531 cv
257.285 16.582 257.219 16.625 257.129 16.664 cv
257.035 16.703 256.926 16.734 256.809 16.766 cv
256.684 16.789 256.551 16.812 256.41 16.832 cv
256.266 16.844 256.125 16.852 255.98 16.855 cv
255.59 16.852 255.25 16.801 254.965 16.707 cv
254.68 16.605 254.445 16.457 254.258 16.25 cv
254.07 16.047 253.93 15.789 253.844 15.477 cv
253.75 15.168 253.707 14.797 253.711 14.367 cv
253.711 10.809 li
252.879 10.809 li
252.777 10.812 252.703 10.75 252.652 10.625 cv
252.598 10.504 252.57 10.301 252.574 10.012 cv
252.57 9.86298 252.578 9.73401 252.594 9.633 cv
252.605 9.53101 252.625 9.44897 252.652 9.38702 cv
252.676 9.328 252.707 9.28497 252.75 9.258 cv
252.785 9.23401 252.832 9.22302 252.887 9.21899 cv
253.711 9.21899 li
253.711 7.66803 li
253.707 7.62097 253.723 7.57397 253.754 7.52698 cv
253.781 7.48798 253.832 7.453 253.91 7.422 cv
253.984 7.39801 254.086 7.375 254.215 7.35901 cv
254.34 7.34802 254.496 7.34399 254.688 7.34003 cv
254.875 7.34399 255.035 7.34802 255.164 7.35901 cv
255.289 7.375 255.391 7.39801 255.465 7.422 cv
255.535 7.453 255.586 7.48798 255.621 7.52698 cv
255.648 7.57397 255.664 7.62097 255.668 7.66803 cv
255.668 9.21899 li
257.18 9.21899 li
257.23 9.22302 257.277 9.23401 257.316 9.258 cv
257.355 9.28497 257.387 9.328 257.414 9.38702 cv
257.438 9.44897 257.457 9.53101 257.473 9.633 cv
257.484 9.73401 257.492 9.86298 257.492 10.012 cv
257.492 10.301 257.465 10.504 257.414 10.625 cv
257.359 10.75 257.285 10.812 257.188 10.809 cv
255.668 10.809 li
255.668 14.074 li
255.664 14.453 255.723 14.738 255.848 14.926 cv
255.965 15.117 256.18 15.211 256.484 15.211 cv
256.586 15.211 256.68 15.203 256.766 15.184 cv
256.848 15.168 256.922 15.148 256.988 15.121 cv
257.051 15.102 257.105 15.078 257.152 15.059 cv
257.195 15.043 257.234 15.035 257.273 15.031 cv
257.301 15.035 257.332 15.043 257.363 15.059 cv
257.391 15.078 257.41 15.117 257.43 15.168 cv
257.441 15.227 257.457 15.301 257.473 15.391 cv
257.484 15.488 257.492 15.605 257.492 15.75 cv
cp
f
260.879 16.434 mo
260.875 16.488 260.859 16.531 260.832 16.57 cv
260.797 16.609 260.742 16.645 260.672 16.668 cv
260.594 16.695 260.496 16.711 260.371 16.727 cv
260.246 16.738 260.086 16.746 259.898 16.746 cv
259.703 16.746 259.547 16.738 259.422 16.727 cv
259.297 16.711 259.195 16.695 259.121 16.668 cv
259.043 16.645 258.988 16.609 258.961 16.57 cv
258.926 16.531 258.91 16.488 258.914 16.434 cv
258.914 9.5 li
258.91 9.44897 258.926 9.40198 258.961 9.36298 cv
258.988 9.32397 259.043 9.29303 259.121 9.26202 cv
259.195 9.23798 259.297 9.21503 259.422 9.19501 cv
259.547 9.18402 259.703 9.17603 259.898 9.172 cv
260.086 9.17603 260.246 9.18402 260.371 9.19501 cv
260.496 9.21503 260.594 9.23798 260.672 9.26202 cv
260.742 9.29303 260.797 9.32397 260.832 9.36298 cv
260.859 9.40198 260.875 9.44897 260.879 9.5 cv
cp
261.027 7.12903 mo
261.027 7.52698 260.945 7.80103 260.785 7.94897 cv
260.621 8.10199 260.324 8.17603 259.891 8.172 cv
259.445 8.17603 259.145 8.10199 258.996 7.95697 cv
258.84 7.81201 258.766 7.55103 258.766 7.16803 cv
258.766 6.77301 258.844 6.5 259.004 6.34802 cv
259.16 6.19501 259.461 6.117 259.906 6.117 cv
260.34 6.117 260.637 6.19098 260.793 6.34003 cv
260.949 6.48798 261.027 6.75403 261.027 7.12903 cv
cp
f
269.871 12.887 mo
269.867 13.484 269.789 14.027 269.637 14.512 cv
269.477 15.004 269.242 15.422 268.926 15.773 cv
268.609 16.125 268.211 16.398 267.734 16.59 cv
267.254 16.781 266.695 16.875 266.059 16.879 cv
265.438 16.875 264.898 16.793 264.445 16.621 cv
263.984 16.453 263.605 16.203 263.309 15.875 cv
263.004 15.551 262.781 15.148 262.637 14.668 cv
262.492 14.191 262.422 13.645 262.422 13.027 cv
262.422 12.437 262.5 11.898 262.656 11.406 cv
262.813 10.918 263.051 10.496 263.371 10.145 cv
263.688 9.797 264.082 9.52301 264.559 9.328 cv
265.031 9.13702 265.59 9.04303 266.23 9.039 cv
266.855 9.04303 267.395 9.125 267.852 9.29303 cv
268.309 9.46503 268.688 9.71503 268.984 10.039 cv
269.281 10.367 269.504 10.77 269.652 11.246 cv
269.797 11.727 269.867 12.273 269.871 12.887 cv
cp
267.852 12.965 mo
267.848 12.629 267.82 12.312 267.77 12.02 cv
267.711 11.734 267.617 11.484 267.492 11.27 cv
267.359 11.059 267.188 10.891 266.977 10.77 cv
266.758 10.652 266.488 10.594 266.16 10.59 cv
265.871 10.594 265.617 10.648 265.398 10.75 cv
265.18 10.859 265 11.016 264.859 11.219 cv
264.719 11.426 264.613 11.672 264.543 11.957 cv
264.473 12.25 264.438 12.578 264.438 12.941 cv
264.438 13.289 264.465 13.605 264.523 13.891 cv
264.578 14.184 264.672 14.434 264.801 14.645 cv
264.926 14.859 265.098 15.023 265.32 15.137 cv
265.535 15.258 265.805 15.316 266.129 15.312 cv
266.422 15.316 266.68 15.262 266.902 15.152 cv
267.117 15.047 267.297 14.895 267.438 14.687 cv
267.578 14.488 267.68 14.242 267.75 13.953 cv
267.813 13.668 267.848 13.34 267.852 12.965 cv
cp
f
278.113 16.434 mo
278.109 16.488 278.094 16.531 278.066 16.57 cv
278.031 16.609 277.98 16.645 277.91 16.668 cv
277.836 16.695 277.734 16.711 277.609 16.727 cv
277.48 16.738 277.324 16.746 277.141 16.746 cv
276.945 16.746 276.785 16.738 276.66 16.727 cv
276.531 16.711 276.43 16.695 276.359 16.668 cv
276.281 16.645 276.23 16.609 276.203 16.57 cv
276.168 16.531 276.152 16.488 276.156 16.434 cv
276.156 12.469 li
276.152 12.133 276.129 11.867 276.082 11.672 cv
276.031 11.48 275.957 11.316 275.867 11.18 cv
275.773 11.043 275.656 10.937 275.508 10.859 cv
275.359 10.785 275.184 10.746 274.988 10.746 cv
274.734 10.746 274.484 10.84 274.23 11.02 cv
273.977 11.203 273.711 11.465 273.438 11.812 cv
273.438 16.434 li
273.434 16.488 273.418 16.531 273.391 16.57 cv
273.355 16.609 273.301 16.645 273.23 16.668 cv
273.152 16.695 273.055 16.711 272.93 16.727 cv
272.805 16.738 272.645 16.746 272.457 16.746 cv
272.262 16.746 272.105 16.738 271.98 16.727 cv
271.855 16.711 271.754 16.695 271.68 16.668 cv
271.602 16.645 271.547 16.609 271.52 16.57 cv
271.484 16.531 271.469 16.488 271.473 16.434 cv
271.473 9.48401 li
271.469 9.43701 271.484 9.39099 271.512 9.34802 cv
271.535 9.31201 271.582 9.28101 271.652 9.25 cv
271.719 9.22699 271.805 9.20697 271.914 9.19098 cv
272.02 9.18402 272.152 9.17603 272.316 9.172 cv
272.48 9.17603 272.617 9.18402 272.727 9.19098 cv
272.832 9.20697 272.918 9.22699 272.98 9.25 cv
273.039 9.28101 273.082 9.31201 273.109 9.34802 cv
273.133 9.39099 273.145 9.43701 273.148 9.48401 cv
273.148 10.285 li
273.531 9.875 273.922 9.56201 274.32 9.35199 cv
274.715 9.14502 275.133 9.04303 275.566 9.039 cv
276.035 9.04303 276.434 9.12097 276.762 9.27301 cv
277.086 9.43402 277.348 9.64502 277.547 9.90997 cv
277.746 10.18 277.891 10.492 277.98 10.848 cv
278.066 11.207 278.109 11.637 278.113 12.141 cv
cp
f
290.527 7.45697 mo
290.523 7.61298 290.516 7.742 290.508 7.84399 cv
290.492 7.953 290.473 8.039 290.449 8.10199 cv
290.418 8.16803 290.387 8.21503 290.352 8.242 cv
290.309 8.27698 290.266 8.29303 290.223 8.289 cv
287.699 8.289 li
287.699 16.418 li
287.699 16.473 287.68 16.52 287.648 16.559 cv
287.609 16.602 287.555 16.637 287.48 16.66 cv
287.398 16.687 287.293 16.707 287.164 16.723 cv
287.027 16.738 286.863 16.746 286.668 16.746 cv
286.473 16.746 286.309 16.738 286.176 16.723 cv
286.043 16.707 285.938 16.687 285.859 16.66 cv
285.781 16.637 285.723 16.602 285.691 16.559 cv
285.652 16.52 285.637 16.473 285.641 16.418 cv
285.641 8.289 li
283.117 8.289 li
283.063 8.29303 283.016 8.27698 282.984 8.242 cv
282.945 8.21503 282.914 8.16803 282.891 8.10199 cv
282.859 8.039 282.84 7.953 282.832 7.84399 cv
282.816 7.742 282.813 7.61298 282.813 7.45697 cv
282.813 7.30499 282.816 7.172 282.832 7.05902 cv
282.84 6.953 282.859 6.86298 282.891 6.797 cv
282.914 6.73401 282.945 6.68701 282.984 6.65601 cv
283.016 6.62903 283.063 6.617 283.117 6.61298 cv
290.223 6.61298 li
290.266 6.617 290.309 6.62903 290.352 6.65601 cv
290.387 6.68701 290.418 6.73401 290.449 6.797 cv
290.473 6.86298 290.492 6.953 290.508 7.05902 cv
290.516 7.172 290.523 7.30499 290.527 7.45697 cv
cp
f
293.563 16.434 mo
293.559 16.488 293.543 16.531 293.516 16.57 cv
293.48 16.609 293.426 16.645 293.355 16.668 cv
293.277 16.695 293.18 16.711 293.055 16.727 cv
292.93 16.738 292.77 16.746 292.582 16.746 cv
292.387 16.746 292.23 16.738 292.105 16.727 cv
291.98 16.711 291.879 16.695 291.805 16.668 cv
291.727 16.645 291.672 16.609 291.645 16.57 cv
291.609 16.531 291.594 16.488 291.598 16.434 cv
291.598 9.5 li
291.594 9.44897 291.609 9.40198 291.645 9.36298 cv
291.672 9.32397 291.727 9.29303 291.805 9.26202 cv
291.879 9.23798 291.98 9.21503 292.105 9.19501 cv
292.23 9.18402 292.387 9.17603 292.582 9.172 cv
292.77 9.17603 292.93 9.18402 293.055 9.19501 cv
293.18 9.21503 293.277 9.23798 293.355 9.26202 cv
293.426 9.29303 293.48 9.32397 293.516 9.36298 cv
293.543 9.40198 293.559 9.44897 293.563 9.5 cv
cp
293.711 7.12903 mo
293.711 7.52698 293.629 7.80103 293.469 7.94897 cv
293.305 8.10199 293.008 8.17603 292.574 8.172 cv
292.129 8.17603 291.828 8.10199 291.68 7.95697 cv
291.523 7.81201 291.449 7.55103 291.449 7.16803 cv
291.449 6.77301 291.527 6.5 291.688 6.34802 cv
291.844 6.19501 292.145 6.117 292.59 6.117 cv
293.023 6.117 293.32 6.19098 293.477 6.34003 cv
293.633 6.48798 293.711 6.75403 293.711 7.12903 cv
cp
f
306.617 16.434 mo
306.613 16.488 306.598 16.531 306.57 16.57 cv
306.535 16.609 306.484 16.645 306.414 16.668 cv
306.34 16.695 306.238 16.711 306.117 16.727 cv
305.992 16.738 305.836 16.746 305.645 16.746 cv
305.445 16.746 305.285 16.738 305.16 16.727 cv
305.035 16.711 304.934 16.695 304.859 16.668 cv
304.781 16.645 304.73 16.609 304.703 16.57 cv
304.676 16.531 304.66 16.488 304.664 16.434 cv
304.664 12.312 li
304.66 12.082 304.641 11.867 304.598 11.672 cv
304.551 11.48 304.48 11.316 304.395 11.18 cv
304.301 11.043 304.188 10.937 304.051 10.859 cv
303.91 10.785 303.746 10.746 303.555 10.746 cv
303.32 10.746 303.082 10.84 302.844 11.02 cv
302.605 11.203 302.348 11.465 302.066 11.812 cv
302.066 16.434 li
302.066 16.488 302.051 16.531 302.02 16.57 cv
301.988 16.609 301.934 16.645 301.859 16.668 cv
301.781 16.695 301.68 16.711 301.559 16.727 cv
301.434 16.738 301.281 16.746 301.094 16.746 cv
300.898 16.746 300.738 16.738 300.617 16.727 cv
300.488 16.711 300.387 16.695 300.316 16.668 cv
300.238 16.645 300.188 16.609 300.156 16.57 cv
300.125 16.531 300.109 16.488 300.109 16.434 cv
300.109 12.312 li
300.109 12.082 300.086 11.867 300.043 11.672 cv
300 11.48 299.934 11.316 299.848 11.18 cv
299.754 11.043 299.641 10.937 299.504 10.859 cv
299.359 10.785 299.195 10.746 299.012 10.746 cv
298.77 10.746 298.531 10.84 298.293 11.02 cv
298.055 11.203 297.797 11.465 297.523 11.812 cv
297.523 16.434 li
297.52 16.488 297.504 16.531 297.477 16.57 cv
297.441 16.609 297.387 16.645 297.316 16.668 cv
297.238 16.695 297.141 16.711 297.016 16.727 cv
296.891 16.738 296.73 16.746 296.543 16.746 cv
296.348 16.746 296.191 16.738 296.066 16.727 cv
295.941 16.711 295.84 16.695 295.766 16.668 cv
295.688 16.645 295.633 16.609 295.605 16.57 cv
295.57 16.531 295.555 16.488 295.559 16.434 cv
295.559 9.48401 li
295.555 9.43701 295.57 9.39099 295.598 9.34802 cv
295.621 9.31201 295.668 9.28101 295.738 9.25 cv
295.805 9.22699 295.891 9.20697 296 9.19098 cv
296.105 9.18402 296.238 9.17603 296.402 9.172 cv
296.566 9.17603 296.703 9.18402 296.813 9.19098 cv
296.918 9.20697 297.004 9.22699 297.066 9.25 cv
297.125 9.28101 297.168 9.31201 297.195 9.34802 cv
297.219 9.39099 297.23 9.43701 297.234 9.48401 cv
297.234 10.285 li
297.617 9.875 298 9.56201 298.383 9.35199 cv
298.762 9.14502 299.164 9.04303 299.582 9.039 cv
299.867 9.04303 300.121 9.07001 300.352 9.12903 cv
300.578 9.19098 300.785 9.27698 300.965 9.38702 cv
301.145 9.5 301.297 9.63702 301.426 9.789 cv
301.555 9.94501 301.664 10.117 301.754 10.309 cv
301.961 10.086 302.164 9.89502 302.367 9.73401 cv
302.563 9.57397 302.762 9.44098 302.957 9.34003 cv
303.152 9.23798 303.348 9.164 303.543 9.11298 cv
303.738 9.06598 303.938 9.04303 304.141 9.039 cv
304.602 9.04303 304.988 9.12097 305.309 9.27301 cv
305.621 9.43402 305.879 9.64502 306.074 9.90997 cv
306.27 10.18 306.406 10.492 306.492 10.848 cv
306.57 11.207 306.613 11.586 306.617 11.984 cv
cp
f
314.953 12.758 mo
314.949 12.996 314.898 13.172 314.793 13.285 cv
314.684 13.402 314.535 13.461 314.355 13.457 cv
310.121 13.457 li
310.117 13.758 310.152 14.027 310.227 14.266 cv
310.293 14.508 310.406 14.711 310.563 14.879 cv
310.715 15.051 310.91 15.18 311.152 15.266 cv
311.391 15.355 311.68 15.398 312.023 15.398 cv
312.363 15.398 312.664 15.375 312.926 15.324 cv
313.184 15.277 313.41 15.223 313.602 15.16 cv
313.789 15.102 313.945 15.047 314.074 14.996 cv
314.195 14.949 314.297 14.926 314.379 14.922 cv
314.422 14.926 314.461 14.934 314.496 14.949 cv
314.523 14.969 314.551 15 314.57 15.047 cv
314.59 15.094 314.602 15.16 314.613 15.246 cv
314.617 15.332 314.621 15.441 314.625 15.57 cv
314.621 15.687 314.621 15.785 314.617 15.863 cv
314.609 15.945 314.602 16.012 314.594 16.066 cv
314.582 16.125 314.566 16.176 314.547 16.211 cv
314.527 16.254 314.5 16.289 314.469 16.324 cv
314.434 16.363 314.34 16.414 314.191 16.473 cv
314.035 16.539 313.844 16.602 313.613 16.656 cv
313.375 16.719 313.105 16.766 312.809 16.812 cv
312.504 16.852 312.184 16.875 311.844 16.879 cv
311.223 16.875 310.68 16.801 310.219 16.645 cv
309.75 16.492 309.363 16.254 309.055 15.937 cv
308.738 15.621 308.504 15.223 308.355 14.738 cv
308.199 14.258 308.125 13.691 308.129 13.035 cv
308.125 12.422 308.203 11.863 308.367 11.367 cv
308.523 10.871 308.758 10.453 309.07 10.105 cv
309.375 9.76202 309.75 9.49597 310.188 9.31201 cv
310.625 9.133 311.117 9.04303 311.672 9.039 cv
312.25 9.04303 312.75 9.12903 313.164 9.297 cv
313.578 9.47302 313.914 9.711 314.18 10.012 cv
314.441 10.316 314.637 10.676 314.766 11.09 cv
314.887 11.508 314.949 11.957 314.953 12.445 cv
cp
313.051 12.195 mo
313.063 11.645 312.953 11.211 312.719 10.898 cv
312.484 10.586 312.117 10.43 311.625 10.426 cv
311.375 10.43 311.16 10.477 310.977 10.566 cv
310.789 10.664 310.637 10.789 310.516 10.945 cv
310.391 11.105 310.297 11.293 310.234 11.508 cv
310.168 11.723 310.129 11.953 310.121 12.195 cv
cp
f
321.457 14.469 mo
321.453 14.867 321.379 15.215 321.234 15.516 cv
321.086 15.816 320.879 16.07 320.609 16.27 cv
320.336 16.477 320.016 16.625 319.648 16.727 cv
319.281 16.824 318.879 16.875 318.449 16.879 cv
318.184 16.875 317.938 16.855 317.703 16.82 cv
317.469 16.777 317.258 16.73 317.07 16.672 cv
316.883 16.613 316.727 16.551 316.602 16.488 cv
316.477 16.426 316.383 16.367 316.328 16.312 cv
316.27 16.258 316.227 16.176 316.199 16.059 cv
316.164 15.945 316.148 15.77 316.152 15.539 cv
316.148 15.391 316.156 15.27 316.168 15.176 cv
316.176 15.086 316.191 15.016 316.215 14.957 cv
316.234 14.906 316.258 14.867 316.293 14.848 cv
316.32 14.832 316.359 14.824 316.406 14.82 cv
316.461 14.824 316.547 14.855 316.66 14.918 cv
316.77 14.984 316.906 15.059 317.078 15.133 cv
317.242 15.215 317.438 15.285 317.656 15.352 cv
317.875 15.422 318.125 15.457 318.41 15.453 cv
318.586 15.457 318.742 15.437 318.883 15.398 cv
319.016 15.363 319.137 15.312 319.242 15.242 cv
319.34 15.176 319.414 15.09 319.469 14.984 cv
319.516 14.883 319.543 14.762 319.547 14.625 cv
319.543 14.469 319.496 14.336 319.402 14.227 cv
319.309 14.117 319.18 14.02 319.023 13.934 cv
318.859 13.852 318.68 13.773 318.484 13.699 cv
318.281 13.629 318.078 13.551 317.867 13.457 cv
317.656 13.371 317.449 13.27 317.254 13.152 cv
317.051 13.043 316.871 12.902 316.715 12.734 cv
316.551 12.57 316.426 12.371 316.332 12.133 cv
316.238 11.902 316.191 11.621 316.191 11.289 cv
316.191 10.961 316.254 10.656 316.383 10.375 cv
316.512 10.102 316.699 9.86298 316.945 9.664 cv
317.188 9.46899 317.484 9.31598 317.836 9.203 cv
318.184 9.09802 318.578 9.04303 319.02 9.039 cv
319.234 9.04303 319.445 9.05902 319.652 9.086 cv
319.855 9.12097 320.043 9.15997 320.211 9.203 cv
320.375 9.25403 320.516 9.30499 320.633 9.35498 cv
320.746 9.414 320.828 9.461 320.879 9.49597 cv
320.926 9.539 320.961 9.578 320.984 9.61298 cv
321.004 9.65601 321.016 9.703 321.027 9.75403 cv
321.035 9.80902 321.047 9.875 321.055 9.953 cv
321.063 10.039 321.066 10.137 321.066 10.254 cv
321.066 10.395 321.063 10.512 321.055 10.598 cv
321.047 10.691 321.031 10.762 321.016 10.809 cv
320.996 10.863 320.973 10.898 320.945 10.914 cv
320.91 10.937 320.875 10.945 320.836 10.941 cv
320.785 10.945 320.711 10.918 320.617 10.859 cv
320.516 10.809 320.395 10.75 320.246 10.684 cv
320.098 10.625 319.926 10.566 319.73 10.508 cv
319.535 10.457 319.313 10.43 319.066 10.426 cv
318.887 10.43 318.734 10.449 318.605 10.48 cv
318.473 10.52 318.363 10.57 318.285 10.637 cv
318.199 10.707 318.137 10.785 318.098 10.875 cv
318.051 10.969 318.031 11.066 318.035 11.168 cv
318.031 11.328 318.082 11.465 318.184 11.57 cv
318.281 11.684 318.41 11.777 318.574 11.859 cv
318.734 11.945 318.918 12.023 319.125 12.094 cv
319.328 12.168 319.535 12.25 319.746 12.332 cv
319.953 12.422 320.16 12.52 320.371 12.633 cv
320.574 12.746 320.758 12.887 320.918 13.051 cv
321.078 13.219 321.207 13.418 321.309 13.648 cv
321.402 13.883 321.453 14.156 321.457 14.469 cv
cp
f
333.566 12.887 mo
333.563 13.484 333.484 14.027 333.332 14.512 cv
333.172 15.004 332.938 15.422 332.621 15.773 cv
332.305 16.125 331.906 16.398 331.43 16.59 cv
330.949 16.781 330.391 16.875 329.754 16.879 cv
329.133 16.875 328.594 16.793 328.141 16.621 cv
327.68 16.453 327.301 16.203 327.004 15.875 cv
326.699 15.551 326.477 15.148 326.332 14.668 cv
326.188 14.191 326.117 13.645 326.117 13.027 cv
326.117 12.437 326.195 11.898 326.352 11.406 cv
326.508 10.918 326.746 10.496 327.066 10.145 cv
327.383 9.797 327.777 9.52301 328.254 9.328 cv
328.727 9.13702 329.285 9.04303 329.926 9.039 cv
330.551 9.04303 331.09 9.125 331.547 9.29303 cv
332.004 9.46503 332.383 9.71503 332.68 10.039 cv
332.977 10.367 333.199 10.77 333.348 11.246 cv
333.492 11.727 333.563 12.273 333.566 12.887 cv
cp
331.547 12.965 mo
331.543 12.629 331.516 12.312 331.465 12.02 cv
331.406 11.734 331.313 11.484 331.188 11.27 cv
331.055 11.059 330.883 10.891 330.672 10.77 cv
330.453 10.652 330.184 10.594 329.855 10.59 cv
329.566 10.594 329.313 10.648 329.094 10.75 cv
328.875 10.859 328.695 11.016 328.555 11.219 cv
328.414 11.426 328.309 11.672 328.238 11.957 cv
328.168 12.25 328.133 12.578 328.133 12.941 cv
328.133 13.289 328.16 13.605 328.219 13.891 cv
328.273 14.184 328.367 14.434 328.496 14.645 cv
328.621 14.859 328.793 15.023 329.016 15.137 cv
329.23 15.258 329.5 15.316 329.824 15.312 cv
330.117 15.316 330.375 15.262 330.598 15.152 cv
330.813 15.047 330.992 14.895 331.133 14.687 cv
331.273 14.488 331.375 14.242 331.445 13.953 cv
331.508 13.668 331.543 13.34 331.547 12.965 cv
cp
f
339.316 6.83197 mo
339.313 6.98401 339.309 7.10498 339.301 7.19501 cv
339.289 7.289 339.273 7.35901 339.254 7.40601 cv
339.23 7.45697 339.207 7.492 339.184 7.508 cv
339.156 7.52698 339.129 7.53497 339.098 7.53497 cv
339.059 7.53497 339.016 7.52698 338.977 7.508 cv
338.93 7.492 338.875 7.47302 338.813 7.44897 cv
338.742 7.42999 338.668 7.40997 338.582 7.39099 cv
338.492 7.375 338.387 7.367 338.27 7.36298 cv
338.125 7.367 338.004 7.38702 337.906 7.42999 cv
337.805 7.47699 337.723 7.547 337.656 7.64099 cv
337.586 7.73798 337.535 7.86298 337.508 8.01599 cv
337.473 8.16803 337.457 8.35498 337.461 8.578 cv
337.461 9.21899 li
338.73 9.21899 li
338.773 9.22302 338.816 9.23401 338.859 9.258 cv
338.895 9.28497 338.93 9.328 338.957 9.38702 cv
338.98 9.44897 339 9.53101 339.016 9.633 cv
339.027 9.73401 339.031 9.86298 339.035 10.012 cv
339.031 10.301 339.008 10.504 338.957 10.625 cv
338.902 10.75 338.824 10.812 338.73 10.809 cv
337.461 10.809 li
337.461 16.434 li
337.457 16.488 337.441 16.531 337.414 16.57 cv
337.379 16.609 337.328 16.645 337.258 16.668 cv
337.184 16.695 337.082 16.711 336.953 16.727 cv
336.82 16.738 336.66 16.746 336.477 16.746 cv
336.289 16.746 336.133 16.738 336.008 16.727 cv
335.879 16.711 335.777 16.695 335.703 16.668 cv
335.625 16.645 335.574 16.609 335.547 16.57 cv
335.516 16.531 335.5 16.488 335.504 16.434 cv
335.504 10.809 li
334.633 10.809 li
334.531 10.812 334.457 10.75 334.41 10.625 cv
334.359 10.504 334.332 10.301 334.336 10.012 cv
334.332 9.86298 334.34 9.73401 334.355 9.633 cv
334.367 9.53101 334.387 9.44897 334.41 9.38702 cv
334.434 9.328 334.465 9.28497 334.504 9.258 cv
334.543 9.23401 334.586 9.22302 334.641 9.21899 cv
335.504 9.21899 li
335.504 8.633 li
335.5 8.164 335.547 7.75 335.645 7.39099 cv
335.734 7.03497 335.883 6.73798 336.086 6.50403 cv
336.285 6.27002 336.539 6.09399 336.848 5.96899 cv
337.156 5.85199 337.52 5.789 337.945 5.789 cv
338.141 5.789 338.332 5.80902 338.52 5.84003 cv
338.699 5.87903 338.844 5.914 338.949 5.94897 cv
339.051 5.992 339.121 6.02698 339.16 6.05902 cv
339.195 6.09399 339.227 6.14502 339.25 6.20697 cv
339.273 6.27301 339.289 6.35498 339.301 6.45697 cv
339.309 6.55902 339.313 6.68402 339.316 6.83197 cv
cp
f
345.949 16.418 mo
345.945 16.473 345.93 16.52 345.898 16.559 cv
345.863 16.602 345.805 16.637 345.73 16.66 cv
345.648 16.687 345.547 16.707 345.418 16.723 cv
345.285 16.738 345.117 16.746 344.922 16.746 cv
344.719 16.746 344.555 16.738 344.426 16.723 cv
344.289 16.707 344.184 16.687 344.109 16.66 cv
344.027 16.637 343.973 16.602 343.941 16.559 cv
343.906 16.52 343.887 16.473 343.891 16.418 cv
343.891 6.89502 li
343.887 6.84802 343.906 6.80103 343.941 6.75403 cv
343.973 6.71503 344.027 6.67999 344.113 6.65198 cv
344.191 6.62903 344.297 6.60901 344.43 6.59003 cv
344.555 6.578 344.719 6.57001 344.922 6.56598 cv
345.117 6.57001 345.285 6.578 345.418 6.59003 cv
345.547 6.60901 345.648 6.62903 345.73 6.65198 cv
345.805 6.67999 345.863 6.71503 345.898 6.75403 cv
345.93 6.80103 345.945 6.84802 345.949 6.89502 cv
cp
f
359.094 16.434 mo
359.09 16.488 359.074 16.531 359.047 16.57 cv
359.012 16.609 358.961 16.645 358.891 16.668 cv
358.816 16.695 358.715 16.711 358.594 16.727 cv
358.469 16.738 358.313 16.746 358.121 16.746 cv
357.922 16.746 357.762 16.738 357.637 16.727 cv
357.512 16.711 357.41 16.695 357.336 16.668 cv
357.258 16.645 357.207 16.609 357.18 16.57 cv
357.152 16.531 357.137 16.488 357.141 16.434 cv
357.141 12.312 li
357.137 12.082 357.117 11.867 357.074 11.672 cv
357.027 11.48 356.957 11.316 356.871 11.18 cv
356.777 11.043 356.664 10.937 356.527 10.859 cv
356.387 10.785 356.223 10.746 356.031 10.746 cv
355.797 10.746 355.559 10.84 355.32 11.02 cv
355.082 11.203 354.824 11.465 354.543 11.812 cv
354.543 16.434 li
354.543 16.488 354.527 16.531 354.496 16.57 cv
354.465 16.609 354.41 16.645 354.336 16.668 cv
354.258 16.695 354.156 16.711 354.035 16.727 cv
353.91 16.738 353.758 16.746 353.57 16.746 cv
353.375 16.746 353.215 16.738 353.094 16.727 cv
352.965 16.711 352.863 16.695 352.793 16.668 cv
352.715 16.645 352.664 16.609 352.633 16.57 cv
352.602 16.531 352.586 16.488 352.586 16.434 cv
352.586 12.312 li
352.586 12.082 352.563 11.867 352.52 11.672 cv
352.477 11.48 352.41 11.316 352.324 11.18 cv
352.23 11.043 352.117 10.937 351.98 10.859 cv
351.836 10.785 351.672 10.746 351.488 10.746 cv
351.246 10.746 351.008 10.84 350.77 11.02 cv
350.531 11.203 350.273 11.465 350 11.812 cv
350 16.434 li
349.996 16.488 349.98 16.531 349.953 16.57 cv
349.918 16.609 349.863 16.645 349.793 16.668 cv
349.715 16.695 349.617 16.711 349.492 16.727 cv
349.367 16.738 349.207 16.746 349.02 16.746 cv
348.824 16.746 348.668 16.738 348.543 16.727 cv
348.418 16.711 348.316 16.695 348.242 16.668 cv
348.164 16.645 348.109 16.609 348.082 16.57 cv
348.047 16.531 348.031 16.488 348.035 16.434 cv
348.035 9.48401 li
348.031 9.43701 348.047 9.39099 348.074 9.34802 cv
348.098 9.31201 348.145 9.28101 348.215 9.25 cv
348.281 9.22699 348.367 9.20697 348.477 9.19098 cv
348.582 9.18402 348.715 9.17603 348.879 9.172 cv
349.043 9.17603 349.18 9.18402 349.289 9.19098 cv
349.395 9.20697 349.48 9.22699 349.543 9.25 cv
349.602 9.28101 349.645 9.31201 349.672 9.34802 cv
349.695 9.39099 349.707 9.43701 349.711 9.48401 cv
349.711 10.285 li
350.094 9.875 350.477 9.56201 350.859 9.35199 cv
351.238 9.14502 351.641 9.04303 352.059 9.039 cv
352.344 9.04303 352.598 9.07001 352.828 9.12903 cv
353.055 9.19098 353.262 9.27698 353.441 9.38702 cv
353.621 9.5 353.773 9.63702 353.902 9.789 cv
354.031 9.94501 354.141 10.117 354.23 10.309 cv
354.438 10.086 354.641 9.89502 354.844 9.73401 cv
355.039 9.57397 355.238 9.44098 355.434 9.34003 cv
355.629 9.23798 355.824 9.164 356.02 9.11298 cv
356.215 9.06598 356.414 9.04303 356.617 9.039 cv
357.078 9.04303 357.465 9.12097 357.785 9.27301 cv
358.098 9.43402 358.355 9.64502 358.551 9.90997 cv
358.746 10.18 358.883 10.492 358.969 10.848 cv
359.047 11.207 359.09 11.586 359.094 11.984 cv
cp
f
366.887 16.457 mo
366.883 16.535 366.855 16.59 366.809 16.629 cv
366.754 16.672 366.672 16.699 366.563 16.719 cv
366.445 16.734 366.281 16.746 366.066 16.746 cv
365.828 16.746 365.656 16.734 365.555 16.719 cv
365.445 16.699 365.371 16.672 365.332 16.629 cv
365.285 16.59 365.266 16.535 365.266 16.457 cv
365.266 15.906 li
364.977 16.215 364.648 16.453 364.285 16.621 cv
363.918 16.793 363.512 16.875 363.066 16.879 cv
362.695 16.875 362.355 16.828 362.047 16.734 cv
361.738 16.641 361.473 16.5 361.246 16.305 cv
361.02 16.117 360.844 15.883 360.719 15.602 cv
360.594 15.324 360.531 14.996 360.535 14.617 cv
360.531 14.219 360.609 13.867 360.77 13.562 cv
360.926 13.266 361.164 13.02 361.48 12.824 cv
361.793 12.633 362.184 12.488 362.652 12.391 cv
363.121 12.301 363.664 12.254 364.281 12.25 cv
364.961 12.25 li
364.961 11.828 li
364.961 11.613 364.938 11.422 364.895 11.258 cv
364.848 11.098 364.773 10.961 364.676 10.848 cv
364.57 10.742 364.438 10.66 364.27 10.605 cv
364.098 10.555 363.887 10.531 363.645 10.527 cv
363.313 10.531 363.02 10.566 362.766 10.637 cv
362.504 10.711 362.277 10.793 362.082 10.879 cv
361.883 10.973 361.719 11.051 361.59 11.121 cv
361.453 11.195 361.344 11.234 361.266 11.23 cv
361.203 11.234 361.152 11.215 361.113 11.176 cv
361.066 11.141 361.031 11.09 361.004 11.02 cv
360.973 10.957 360.949 10.871 360.938 10.77 cv
360.918 10.672 360.91 10.562 360.914 10.441 cv
360.91 10.281 360.926 10.156 360.953 10.059 cv
360.977 9.96899 361.023 9.883 361.102 9.80499 cv
361.172 9.72998 361.301 9.64801 361.484 9.55902 cv
361.664 9.46899 361.875 9.383 362.121 9.30499 cv
362.363 9.22699 362.633 9.164 362.922 9.11298 cv
363.211 9.06598 363.508 9.04303 363.816 9.039 cv
364.359 9.04303 364.824 9.09399 365.211 9.19897 cv
365.598 9.30902 365.918 9.47302 366.168 9.69098 cv
366.418 9.90997 366.598 10.195 366.715 10.543 cv
366.824 10.895 366.883 11.309 366.887 11.781 cv
cp
364.961 13.48 mo
364.211 13.48 li
363.895 13.484 363.625 13.508 363.402 13.551 cv
363.176 13.602 362.992 13.672 362.855 13.762 cv
362.711 13.859 362.609 13.973 362.547 14.102 cv
362.48 14.238 362.445 14.387 362.449 14.555 cv
362.445 14.848 362.539 15.078 362.727 15.242 cv
362.91 15.41 363.168 15.492 363.496 15.492 cv
363.77 15.492 364.02 15.422 364.254 15.281 cv
364.48 15.141 364.719 14.937 364.961 14.664 cv
cp
f
375.113 9.96503 mo
375.109 10.219 375.082 10.402 375.027 10.52 cv
374.969 10.641 374.898 10.699 374.82 10.699 cv
374 10.699 li
374.113 10.824 374.195 10.969 374.246 11.125 cv
374.293 11.285 374.316 11.449 374.32 11.617 cv
374.316 12.027 374.25 12.387 374.117 12.699 cv
373.98 13.016 373.785 13.281 373.535 13.492 cv
373.281 13.711 372.98 13.875 372.625 13.984 cv
372.266 14.102 371.867 14.156 371.438 14.152 cv
371.211 14.156 371 14.129 370.797 14.07 cv
370.594 14.02 370.438 13.957 370.328 13.879 cv
370.266 13.949 370.207 14.027 370.16 14.121 cv
370.109 14.215 370.086 14.32 370.09 14.43 cv
370.086 14.586 370.152 14.707 370.285 14.801 cv
370.414 14.898 370.602 14.953 370.844 14.961 cv
372.535 15.023 li
372.93 15.039 373.281 15.098 373.59 15.191 cv
373.898 15.293 374.16 15.426 374.371 15.598 cv
374.582 15.773 374.742 15.984 374.852 16.227 cv
374.961 16.473 375.016 16.746 375.02 17.059 cv
375.016 17.395 374.941 17.719 374.793 18.027 cv
374.645 18.328 374.418 18.59 374.117 18.816 cv
373.813 19.035 373.434 19.215 372.98 19.348 cv
372.523 19.477 371.992 19.539 371.391 19.543 cv
370.793 19.539 370.289 19.492 369.871 19.402 cv
369.453 19.305 369.109 19.176 368.844 19.012 cv
368.574 18.844 368.379 18.645 368.262 18.418 cv
368.137 18.184 368.078 17.93 368.078 17.656 cv
368.078 17.484 368.098 17.324 368.145 17.168 cv
368.184 17.012 368.25 16.859 368.34 16.719 cv
368.422 16.574 368.527 16.441 368.652 16.309 cv
368.777 16.18 368.918 16.055 369.082 15.934 cv
368.855 15.82 368.684 15.66 368.563 15.449 cv
368.441 15.246 368.383 15.02 368.383 14.773 cv
368.383 14.473 368.449 14.195 368.59 13.937 cv
368.727 13.687 368.91 13.457 369.137 13.254 cv
368.953 13.074 368.809 12.859 368.699 12.602 cv
368.59 12.352 368.535 12.031 368.539 11.648 cv
368.535 11.246 368.605 10.887 368.75 10.562 cv
368.891 10.246 369.09 9.97699 369.348 9.75403 cv
369.602 9.53497 369.906 9.36298 370.258 9.24597 cv
370.609 9.12903 371 9.07001 371.43 9.07001 cv
371.648 9.07001 371.855 9.086 372.055 9.10901 cv
372.254 9.14099 372.441 9.17603 372.613 9.21899 cv
374.82 9.21899 li
374.902 9.22302 374.973 9.28101 375.031 9.39099 cv
375.082 9.508 375.109 9.69897 375.113 9.96503 cv
cp
372.598 11.609 mo
372.594 11.238 372.492 10.949 372.285 10.738 cv
372.074 10.535 371.781 10.43 371.406 10.426 cv
371.211 10.43 371.039 10.461 370.898 10.523 cv
370.75 10.59 370.629 10.68 370.535 10.789 cv
370.434 10.902 370.363 11.031 370.32 11.18 cv
370.27 11.328 370.246 11.484 370.25 11.641 cv
370.246 12 370.352 12.277 370.563 12.48 cv
370.77 12.687 371.059 12.793 371.43 12.789 cv
371.625 12.793 371.793 12.762 371.941 12.695 cv
372.082 12.637 372.203 12.551 372.305 12.437 cv
372.398 12.332 372.473 12.203 372.523 12.059 cv
372.57 11.918 372.594 11.77 372.598 11.609 cv
cp
373.059 17.16 mo
373.059 16.922 372.965 16.746 372.777 16.621 cv
372.59 16.5 372.332 16.43 372.004 16.418 cv
370.609 16.379 li
370.473 16.48 370.363 16.574 370.285 16.664 cv
370.203 16.754 370.141 16.84 370.094 16.926 cv
370.043 17.008 370.008 17.09 369.996 17.168 cv
369.977 17.246 369.969 17.324 369.973 17.41 cv
369.969 17.664 370.102 17.863 370.363 18 cv
370.625 18.133 370.996 18.199 371.477 18.203 cv
371.77 18.199 372.016 18.168 372.223 18.113 cv
372.422 18.051 372.586 17.973 372.715 17.875 cv
372.836 17.773 372.926 17.664 372.98 17.543 cv
373.031 17.422 373.059 17.293 373.059 17.16 cv
cp
f
382.738 12.758 mo
382.734 12.996 382.684 13.172 382.578 13.285 cv
382.469 13.402 382.32 13.461 382.141 13.457 cv
377.906 13.457 li
377.902 13.758 377.938 14.027 378.012 14.266 cv
378.078 14.508 378.191 14.711 378.348 14.879 cv
378.5 15.051 378.695 15.18 378.938 15.266 cv
379.176 15.355 379.465 15.398 379.809 15.398 cv
380.148 15.398 380.449 15.375 380.711 15.324 cv
380.969 15.277 381.195 15.223 381.387 15.16 cv
381.574 15.102 381.73 15.047 381.859 14.996 cv
381.98 14.949 382.082 14.926 382.164 14.922 cv
382.207 14.926 382.246 14.934 382.281 14.949 cv
382.309 14.969 382.336 15 382.355 15.047 cv
382.375 15.094 382.387 15.16 382.398 15.246 cv
382.402 15.332 382.406 15.441 382.41 15.57 cv
382.406 15.687 382.406 15.785 382.402 15.863 cv
382.395 15.945 382.387 16.012 382.379 16.066 cv
382.367 16.125 382.352 16.176 382.332 16.211 cv
382.313 16.254 382.285 16.289 382.254 16.324 cv
382.219 16.363 382.125 16.414 381.977 16.473 cv
381.82 16.539 381.629 16.602 381.398 16.656 cv
381.16 16.719 380.891 16.766 380.594 16.812 cv
380.289 16.852 379.969 16.875 379.629 16.879 cv
379.008 16.875 378.465 16.801 378.004 16.645 cv
377.535 16.492 377.148 16.254 376.84 15.937 cv
376.523 15.621 376.289 15.223 376.141 14.738 cv
375.984 14.258 375.91 13.691 375.914 13.035 cv
375.91 12.422 375.988 11.863 376.152 11.367 cv
376.309 10.871 376.543 10.453 376.855 10.105 cv
377.16 9.76202 377.535 9.49597 377.973 9.31201 cv
378.41 9.133 378.902 9.04303 379.457 9.039 cv
380.035 9.04303 380.535 9.12903 380.949 9.297 cv
381.363 9.47302 381.699 9.711 381.965 10.012 cv
382.227 10.316 382.422 10.676 382.551 11.09 cv
382.672 11.508 382.734 11.957 382.738 12.445 cv
cp
380.836 12.195 mo
380.848 11.645 380.738 11.211 380.504 10.898 cv
380.27 10.586 379.902 10.43 379.41 10.426 cv
379.16 10.43 378.945 10.477 378.762 10.566 cv
378.574 10.664 378.422 10.789 378.301 10.945 cv
378.176 11.105 378.082 11.293 378.02 11.508 cv
377.953 11.723 377.914 11.953 377.906 12.195 cv
cp
f
389.238 14.469 mo
389.234 14.867 389.16 15.215 389.016 15.516 cv
388.867 15.816 388.66 16.07 388.391 16.27 cv
388.117 16.477 387.797 16.625 387.43 16.727 cv
387.063 16.824 386.66 16.875 386.23 16.879 cv
385.965 16.875 385.719 16.855 385.484 16.82 cv
385.25 16.777 385.039 16.73 384.852 16.672 cv
384.664 16.613 384.508 16.551 384.383 16.488 cv
384.258 16.426 384.164 16.367 384.109 16.312 cv
384.051 16.258 384.008 16.176 383.98 16.059 cv
383.945 15.945 383.93 15.77 383.934 15.539 cv
383.93 15.391 383.938 15.27 383.949 15.176 cv
383.957 15.086 383.973 15.016 383.996 14.957 cv
384.016 14.906 384.039 14.867 384.074 14.848 cv
384.102 14.832 384.141 14.824 384.188 14.82 cv
384.242 14.824 384.328 14.855 384.441 14.918 cv
384.551 14.984 384.688 15.059 384.859 15.133 cv
385.023 15.215 385.219 15.285 385.438 15.352 cv
385.656 15.422 385.906 15.457 386.191 15.453 cv
386.367 15.457 386.523 15.437 386.664 15.398 cv
386.797 15.363 386.918 15.312 387.023 15.242 cv
387.121 15.176 387.195 15.09 387.25 14.984 cv
387.297 14.883 387.324 14.762 387.328 14.625 cv
387.324 14.469 387.277 14.336 387.184 14.227 cv
387.09 14.117 386.961 14.02 386.805 13.934 cv
386.641 13.852 386.461 13.773 386.266 13.699 cv
386.063 13.629 385.859 13.551 385.648 13.457 cv
385.438 13.371 385.23 13.27 385.035 13.152 cv
384.832 13.043 384.652 12.902 384.496 12.734 cv
384.332 12.57 384.207 12.371 384.113 12.133 cv
384.02 11.902 383.973 11.621 383.973 11.289 cv
383.973 10.961 384.035 10.656 384.164 10.375 cv
384.293 10.102 384.48 9.86298 384.727 9.664 cv
384.969 9.46899 385.266 9.31598 385.617 9.203 cv
385.965 9.09802 386.359 9.04303 386.801 9.039 cv
387.016 9.04303 387.227 9.05902 387.434 9.086 cv
387.637 9.12097 387.824 9.15997 387.992 9.203 cv
388.156 9.25403 388.297 9.30499 388.414 9.35498 cv
388.527 9.414 388.609 9.461 388.66 9.49597 cv
388.707 9.539 388.742 9.578 388.766 9.61298 cv
388.785 9.65601 388.797 9.703 388.809 9.75403 cv
388.816 9.80902 388.828 9.875 388.836 9.953 cv
388.844 10.039 388.848 10.137 388.848 10.254 cv
388.848 10.395 388.844 10.512 388.836 10.598 cv
388.828 10.691 388.813 10.762 388.797 10.809 cv
388.777 10.863 388.754 10.898 388.727 10.914 cv
388.691 10.937 388.656 10.945 388.617 10.941 cv
388.566 10.945 388.492 10.918 388.398 10.859 cv
388.297 10.809 388.176 10.75 388.027 10.684 cv
387.879 10.625 387.707 10.566 387.512 10.508 cv
387.316 10.457 387.094 10.43 386.848 10.426 cv
386.668 10.43 386.516 10.449 386.387 10.48 cv
386.254 10.52 386.145 10.57 386.066 10.637 cv
385.98 10.707 385.918 10.785 385.879 10.875 cv
385.832 10.969 385.813 11.066 385.816 11.168 cv
385.813 11.328 385.863 11.465 385.965 11.57 cv
386.063 11.684 386.191 11.777 386.355 11.859 cv
386.516 11.945 386.699 12.023 386.906 12.094 cv
387.109 12.168 387.316 12.25 387.527 12.332 cv
387.734 12.422 387.941 12.52 388.152 12.633 cv
388.355 12.746 388.539 12.887 388.699 13.051 cv
388.859 13.219 388.988 13.418 389.09 13.648 cv
389.184 13.883 389.234 14.156 389.238 14.469 cv
cp
f
398.074 12.781 mo
398.07 13.082 398.043 13.293 397.988 13.41 cv
397.93 13.535 397.84 13.594 397.715 13.59 cv
394.473 13.59 li
394.344 13.594 394.25 13.531 394.195 13.406 cv
394.133 13.285 394.105 13.078 394.109 12.781 cv
394.105 12.492 394.133 12.285 394.195 12.164 cv
394.25 12.047 394.344 11.988 394.473 11.984 cv
397.715 11.984 li
397.777 11.988 397.828 12 397.875 12.023 cv
397.914 12.051 397.953 12.098 397.988 12.156 cv
398.016 12.223 398.039 12.305 398.055 12.406 cv
398.066 12.512 398.07 12.637 398.074 12.781 cv
cp
f
410.629 16.434 mo
410.629 16.496 410.617 16.543 410.598 16.578 cv
410.578 16.621 410.531 16.652 410.453 16.676 cv
410.375 16.699 410.258 16.715 410.109 16.73 cv
409.953 16.738 409.75 16.746 409.492 16.746 cv
409.273 16.746 409.098 16.738 408.969 16.73 cv
408.84 16.715 408.738 16.699 408.664 16.672 cv
408.586 16.645 408.531 16.609 408.504 16.562 cv
408.469 16.523 408.445 16.469 408.426 16.402 cv
407.52 14.152 li
407.41 13.898 407.305 13.672 407.203 13.473 cv
407.094 13.277 406.98 13.113 406.855 12.98 cv
406.727 12.852 406.578 12.75 406.414 12.68 cv
406.246 12.613 406.055 12.582 405.84 12.578 cv
405.199 12.578 li
405.199 16.418 li
405.195 16.473 405.18 16.52 405.148 16.559 cv
405.113 16.602 405.059 16.637 404.98 16.66 cv
404.902 16.687 404.797 16.707 404.668 16.723 cv
404.535 16.738 404.371 16.746 404.172 16.746 cv
403.973 16.746 403.805 16.738 403.676 16.723 cv
403.539 16.707 403.434 16.687 403.359 16.66 cv
403.277 16.637 403.223 16.602 403.195 16.559 cv
403.16 16.52 403.145 16.473 403.148 16.418 cv
403.148 7.26202 li
403.145 7.03497 403.203 6.87097 403.324 6.76599 cv
403.438 6.66803 403.582 6.617 403.758 6.61298 cv
406.367 6.61298 li
406.629 6.617 406.848 6.62097 407.023 6.62903 cv
407.191 6.64099 407.348 6.65198 407.492 6.66803 cv
407.895 6.72699 408.258 6.828 408.582 6.96503 cv
408.906 7.10901 409.184 7.29303 409.41 7.51599 cv
409.637 7.74597 409.809 8.01202 409.93 8.32001 cv
410.047 8.62903 410.105 8.98401 410.109 9.383 cv
410.105 9.72302 410.063 10.031 409.98 10.305 cv
409.891 10.586 409.766 10.832 409.602 11.051 cv
409.434 11.27 409.227 11.461 408.984 11.617 cv
408.738 11.781 408.461 11.91 408.152 12.008 cv
408.301 12.082 408.445 12.172 408.578 12.273 cv
408.711 12.383 408.832 12.508 408.949 12.652 cv
409.063 12.801 409.176 12.969 409.281 13.156 cv
409.383 13.348 409.484 13.562 409.586 13.801 cv
410.438 15.789 li
410.512 15.988 410.563 16.129 410.59 16.219 cv
410.613 16.312 410.629 16.387 410.629 16.434 cv
cp
407.988 9.59399 mo
407.984 9.26202 407.91 8.97998 407.762 8.75 cv
407.609 8.52301 407.363 8.36298 407.023 8.26599 cv
406.918 8.242 406.801 8.21899 406.668 8.203 cv
406.535 8.18701 406.352 8.17999 406.117 8.17999 cv
405.199 8.17999 li
405.199 11.043 li
406.242 11.043 li
406.531 11.047 406.789 11.012 407.008 10.937 cv
407.227 10.871 407.406 10.77 407.551 10.641 cv
407.695 10.516 407.805 10.363 407.879 10.184 cv
407.949 10.008 407.984 9.81201 407.988 9.59399 cv
cp
f
418.215 12.758 mo
418.211 12.996 418.16 13.172 418.055 13.285 cv
417.945 13.402 417.797 13.461 417.617 13.457 cv
413.383 13.457 li
413.379 13.758 413.414 14.027 413.488 14.266 cv
413.555 14.508 413.668 14.711 413.824 14.879 cv
413.977 15.051 414.172 15.18 414.414 15.266 cv
414.652 15.355 414.941 15.398 415.285 15.398 cv
415.625 15.398 415.926 15.375 416.188 15.324 cv
416.445 15.277 416.672 15.223 416.863 15.16 cv
417.051 15.102 417.207 15.047 417.336 14.996 cv
417.457 14.949 417.559 14.926 417.641 14.922 cv
417.684 14.926 417.723 14.934 417.758 14.949 cv
417.785 14.969 417.813 15 417.832 15.047 cv
417.852 15.094 417.863 15.16 417.875 15.246 cv
417.879 15.332 417.883 15.441 417.887 15.57 cv
417.883 15.687 417.883 15.785 417.879 15.863 cv
417.871 15.945 417.863 16.012 417.855 16.066 cv
417.844 16.125 417.828 16.176 417.809 16.211 cv
417.789 16.254 417.762 16.289 417.73 16.324 cv
417.695 16.363 417.602 16.414 417.453 16.473 cv
417.297 16.539 417.105 16.602 416.875 16.656 cv
416.637 16.719 416.367 16.766 416.07 16.812 cv
415.766 16.852 415.445 16.875 415.105 16.879 cv
414.484 16.875 413.941 16.801 413.48 16.645 cv
413.012 16.492 412.625 16.254 412.316 15.937 cv
412 15.621 411.766 15.223 411.617 14.738 cv
411.461 14.258 411.387 13.691 411.391 13.035 cv
411.387 12.422 411.465 11.863 411.629 11.367 cv
411.785 10.871 412.02 10.453 412.332 10.105 cv
412.637 9.76202 413.012 9.49597 413.449 9.31201 cv
413.887 9.133 414.379 9.04303 414.934 9.039 cv
415.512 9.04303 416.012 9.12903 416.426 9.297 cv
416.84 9.47302 417.176 9.711 417.441 10.012 cv
417.703 10.316 417.898 10.676 418.027 11.09 cv
418.148 11.508 418.211 11.957 418.215 12.445 cv
cp
416.313 12.195 mo
416.324 11.645 416.215 11.211 415.98 10.898 cv
415.746 10.586 415.379 10.43 414.887 10.426 cv
414.637 10.43 414.422 10.477 414.238 10.566 cv
414.051 10.664 413.898 10.789 413.777 10.945 cv
413.652 11.105 413.559 11.293 413.496 11.508 cv
413.43 11.723 413.391 11.953 413.383 12.195 cv
cp
f
430.879 16.434 mo
430.875 16.488 430.859 16.531 430.832 16.57 cv
430.797 16.609 430.746 16.645 430.676 16.668 cv
430.602 16.695 430.5 16.711 430.379 16.727 cv
430.254 16.738 430.098 16.746 429.906 16.746 cv
429.707 16.746 429.547 16.738 429.422 16.727 cv
429.297 16.711 429.195 16.695 429.121 16.668 cv
429.043 16.645 428.992 16.609 428.965 16.57 cv
428.938 16.531 428.922 16.488 428.926 16.434 cv
428.926 12.312 li
428.922 12.082 428.902 11.867 428.859 11.672 cv
428.813 11.48 428.742 11.316 428.656 11.18 cv
428.563 11.043 428.449 10.937 428.313 10.859 cv
428.172 10.785 428.008 10.746 427.816 10.746 cv
427.582 10.746 427.344 10.84 427.105 11.02 cv
426.867 11.203 426.609 11.465 426.328 11.812 cv
426.328 16.434 li
426.328 16.488 426.313 16.531 426.281 16.57 cv
426.25 16.609 426.195 16.645 426.121 16.668 cv
426.043 16.695 425.941 16.711 425.82 16.727 cv
425.695 16.738 425.543 16.746 425.355 16.746 cv
425.16 16.746 425 16.738 424.879 16.727 cv
424.75 16.711 424.648 16.695 424.578 16.668 cv
424.5 16.645 424.449 16.609 424.418 16.57 cv
424.387 16.531 424.371 16.488 424.371 16.434 cv
424.371 12.312 li
424.371 12.082 424.348 11.867 424.305 11.672 cv
424.262 11.48 424.195 11.316 424.109 11.18 cv
424.016 11.043 423.902 10.937 423.766 10.859 cv
423.621 10.785 423.457 10.746 423.273 10.746 cv
423.031 10.746 422.793 10.84 422.555 11.02 cv
422.316 11.203 422.059 11.465 421.785 11.812 cv
421.785 16.434 li
421.781 16.488 421.766 16.531 421.738 16.57 cv
421.703 16.609 421.648 16.645 421.578 16.668 cv
421.5 16.695 421.402 16.711 421.277 16.727 cv
421.152 16.738 420.992 16.746 420.805 16.746 cv
420.609 16.746 420.453 16.738 420.328 16.727 cv
420.203 16.711 420.102 16.695 420.027 16.668 cv
419.949 16.645 419.895 16.609 419.867 16.57 cv
419.832 16.531 419.816 16.488 419.82 16.434 cv
419.82 9.48401 li
419.816 9.43701 419.832 9.39099 419.859 9.34802 cv
419.883 9.31201 419.93 9.28101 420 9.25 cv
420.066 9.22699 420.152 9.20697 420.262 9.19098 cv
420.367 9.18402 420.5 9.17603 420.664 9.172 cv
420.828 9.17603 420.965 9.18402 421.074 9.19098 cv
421.18 9.20697 421.266 9.22699 421.328 9.25 cv
421.387 9.28101 421.43 9.31201 421.457 9.34802 cv
421.48 9.39099 421.492 9.43701 421.496 9.48401 cv
421.496 10.285 li
421.879 9.875 422.262 9.56201 422.645 9.35199 cv
423.023 9.14502 423.426 9.04303 423.844 9.039 cv
424.129 9.04303 424.383 9.07001 424.613 9.12903 cv
424.84 9.19098 425.047 9.27698 425.227 9.38702 cv
425.406 9.5 425.559 9.63702 425.688 9.789 cv
425.816 9.94501 425.926 10.117 426.016 10.309 cv
426.223 10.086 426.426 9.89502 426.629 9.73401 cv
426.824 9.57397 427.023 9.44098 427.219 9.34003 cv
427.414 9.23798 427.609 9.164 427.805 9.11298 cv
428 9.06598 428.199 9.04303 428.402 9.039 cv
428.863 9.04303 429.25 9.12097 429.57 9.27301 cv
429.883 9.43402 430.141 9.64502 430.336 9.90997 cv
430.531 10.18 430.668 10.492 430.754 10.848 cv
430.832 11.207 430.875 11.586 430.879 11.984 cv
cp
f
439.828 12.887 mo
439.824 13.484 439.746 14.027 439.594 14.512 cv
439.434 15.004 439.199 15.422 438.883 15.773 cv
438.566 16.125 438.168 16.398 437.691 16.59 cv
437.211 16.781 436.652 16.875 436.016 16.879 cv
435.395 16.875 434.855 16.793 434.402 16.621 cv
433.941 16.453 433.563 16.203 433.266 15.875 cv
432.961 15.551 432.738 15.148 432.594 14.668 cv
432.449 14.191 432.379 13.645 432.379 13.027 cv
432.379 12.437 432.457 11.898 432.613 11.406 cv
432.77 10.918 433.008 10.496 433.328 10.145 cv
433.645 9.797 434.039 9.52301 434.516 9.328 cv
434.988 9.13702 435.547 9.04303 436.188 9.039 cv
436.813 9.04303 437.352 9.125 437.809 9.29303 cv
438.266 9.46503 438.645 9.71503 438.941 10.039 cv
439.238 10.367 439.461 10.77 439.609 11.246 cv
439.754 11.727 439.824 12.273 439.828 12.887 cv
cp
437.809 12.965 mo
437.805 12.629 437.777 12.312 437.727 12.02 cv
437.668 11.734 437.574 11.484 437.449 11.27 cv
437.316 11.059 437.145 10.891 436.934 10.77 cv
436.715 10.652 436.445 10.594 436.117 10.59 cv
435.828 10.594 435.574 10.648 435.355 10.75 cv
435.137 10.859 434.957 11.016 434.816 11.219 cv
434.676 11.426 434.57 11.672 434.5 11.957 cv
434.43 12.25 434.395 12.578 434.395 12.941 cv
434.395 13.289 434.422 13.605 434.48 13.891 cv
434.535 14.184 434.629 14.434 434.758 14.645 cv
434.883 14.859 435.055 15.023 435.277 15.137 cv
435.492 15.258 435.762 15.316 436.086 15.312 cv
436.379 15.316 436.637 15.262 436.859 15.152 cv
437.074 15.047 437.254 14.895 437.395 14.687 cv
437.535 14.488 437.637 14.242 437.707 13.953 cv
437.77 13.668 437.805 13.34 437.809 12.965 cv
cp
f
445.531 15.75 mo
445.531 15.977 445.516 16.152 445.488 16.273 cv
445.457 16.398 445.418 16.484 445.375 16.531 cv
445.324 16.582 445.258 16.625 445.168 16.664 cv
445.074 16.703 444.965 16.734 444.848 16.766 cv
444.723 16.789 444.59 16.812 444.449 16.832 cv
444.305 16.844 444.164 16.852 444.02 16.855 cv
443.629 16.852 443.289 16.801 443.004 16.707 cv
442.719 16.605 442.484 16.457 442.297 16.25 cv
442.109 16.047 441.969 15.789 441.883 15.477 cv
441.789 15.168 441.746 14.797 441.75 14.367 cv
441.75 10.809 li
440.918 10.809 li
440.816 10.812 440.742 10.75 440.691 10.625 cv
440.637 10.504 440.609 10.301 440.613 10.012 cv
440.609 9.86298 440.617 9.73401 440.633 9.633 cv
440.645 9.53101 440.664 9.44897 440.691 9.38702 cv
440.715 9.328 440.746 9.28497 440.789 9.258 cv
440.824 9.23401 440.871 9.22302 440.926 9.21899 cv
441.75 9.21899 li
441.75 7.66803 li
441.746 7.62097 441.762 7.57397 441.793 7.52698 cv
441.82 7.48798 441.871 7.453 441.949 7.422 cv
442.023 7.39801 442.125 7.375 442.254 7.35901 cv
442.379 7.34802 442.535 7.34399 442.727 7.34003 cv
442.914 7.34399 443.074 7.34802 443.203 7.35901 cv
443.328 7.375 443.43 7.39801 443.504 7.422 cv
443.574 7.453 443.625 7.48798 443.66 7.52698 cv
443.688 7.57397 443.703 7.62097 443.707 7.66803 cv
443.707 9.21899 li
445.219 9.21899 li
445.27 9.22302 445.316 9.23401 445.355 9.258 cv
445.395 9.28497 445.426 9.328 445.453 9.38702 cv
445.477 9.44897 445.496 9.53101 445.512 9.633 cv
445.523 9.73401 445.531 9.86298 445.531 10.012 cv
445.531 10.301 445.504 10.504 445.453 10.625 cv
445.398 10.75 445.324 10.812 445.227 10.809 cv
443.707 10.809 li
443.707 14.074 li
443.703 14.453 443.762 14.738 443.887 14.926 cv
444.004 15.117 444.219 15.211 444.523 15.211 cv
444.625 15.211 444.719 15.203 444.805 15.184 cv
444.887 15.168 444.961 15.148 445.027 15.121 cv
445.09 15.102 445.145 15.078 445.191 15.059 cv
445.234 15.043 445.273 15.035 445.313 15.031 cv
445.34 15.035 445.371 15.043 445.402 15.059 cv
445.43 15.078 445.449 15.117 445.469 15.168 cv
445.48 15.227 445.496 15.301 445.512 15.391 cv
445.523 15.488 445.531 15.605 445.531 15.75 cv
cp
f
453.117 12.758 mo
453.113 12.996 453.063 13.172 452.957 13.285 cv
452.848 13.402 452.699 13.461 452.52 13.457 cv
448.285 13.457 li
448.281 13.758 448.316 14.027 448.391 14.266 cv
448.457 14.508 448.57 14.711 448.727 14.879 cv
448.879 15.051 449.074 15.18 449.316 15.266 cv
449.555 15.355 449.844 15.398 450.188 15.398 cv
450.527 15.398 450.828 15.375 451.09 15.324 cv
451.348 15.277 451.574 15.223 451.766 15.16 cv
451.953 15.102 452.109 15.047 452.238 14.996 cv
452.359 14.949 452.461 14.926 452.543 14.922 cv
452.586 14.926 452.625 14.934 452.66 14.949 cv
452.688 14.969 452.715 15 452.734 15.047 cv
452.754 15.094 452.766 15.16 452.777 15.246 cv
452.781 15.332 452.785 15.441 452.789 15.57 cv
452.785 15.687 452.785 15.785 452.781 15.863 cv
452.773 15.945 452.766 16.012 452.758 16.066 cv
452.746 16.125 452.73 16.176 452.711 16.211 cv
452.691 16.254 452.664 16.289 452.633 16.324 cv
452.598 16.363 452.504 16.414 452.355 16.473 cv
452.199 16.539 452.008 16.602 451.777 16.656 cv
451.539 16.719 451.27 16.766 450.973 16.812 cv
450.668 16.852 450.348 16.875 450.008 16.879 cv
449.387 16.875 448.844 16.801 448.383 16.645 cv
447.914 16.492 447.527 16.254 447.219 15.937 cv
446.902 15.621 446.668 15.223 446.52 14.738 cv
446.363 14.258 446.289 13.691 446.293 13.035 cv
446.289 12.422 446.367 11.863 446.531 11.367 cv
446.688 10.871 446.922 10.453 447.234 10.105 cv
447.539 9.76202 447.914 9.49597 448.352 9.31201 cv
448.789 9.133 449.281 9.04303 449.836 9.039 cv
450.414 9.04303 450.914 9.12903 451.328 9.297 cv
451.742 9.47302 452.078 9.711 452.344 10.012 cv
452.605 10.316 452.801 10.676 452.93 11.09 cv
453.051 11.508 453.113 11.957 453.117 12.445 cv
cp
451.215 12.195 mo
451.227 11.645 451.117 11.211 450.883 10.898 cv
450.648 10.586 450.281 10.43 449.789 10.426 cv
449.539 10.43 449.324 10.477 449.141 10.566 cv
448.953 10.664 448.801 10.789 448.68 10.945 cv
448.555 11.105 448.461 11.293 448.398 11.508 cv
448.332 11.723 448.293 11.953 448.285 12.195 cv
cp
f
470.426 16.418 mo
470.422 16.473 470.41 16.52 470.383 16.559 cv
470.352 16.602 470.297 16.637 470.227 16.66 cv
470.148 16.687 470.051 16.707 469.926 16.723 cv
469.801 16.738 469.641 16.746 469.449 16.746 cv
469.262 16.746 469.105 16.738 468.984 16.723 cv
468.855 16.707 468.758 16.687 468.688 16.66 cv
468.613 16.637 468.563 16.602 468.531 16.559 cv
468.5 16.52 468.484 16.473 468.484 16.418 cv
468.484 8.211 li
468.469 8.211 li
465.547 16.41 li
465.523 16.48 465.488 16.535 465.445 16.578 cv
465.395 16.625 465.332 16.66 465.254 16.684 cv
465.172 16.711 465.07 16.727 464.945 16.734 cv
464.82 16.742 464.668 16.746 464.496 16.746 cv
464.316 16.746 464.168 16.738 464.043 16.727 cv
463.918 16.711 463.813 16.691 463.734 16.664 cv
463.648 16.637 463.586 16.602 463.543 16.559 cv
463.492 16.52 463.461 16.473 463.449 16.41 cv
460.629 8.211 li
460.613 8.211 li
460.613 16.418 li
460.609 16.473 460.594 16.52 460.57 16.559 cv
460.539 16.602 460.488 16.637 460.41 16.66 cv
460.332 16.687 460.23 16.707 460.109 16.723 cv
459.984 16.738 459.828 16.746 459.641 16.746 cv
459.449 16.746 459.293 16.738 459.172 16.723 cv
459.043 16.707 458.941 16.687 458.871 16.66 cv
458.793 16.637 458.742 16.602 458.715 16.559 cv
458.684 16.52 458.668 16.473 458.672 16.418 cv
458.672 7.43402 li
458.668 7.172 458.738 6.96899 458.883 6.82397 cv
459.02 6.68701 459.207 6.617 459.445 6.61298 cv
460.785 6.61298 li
461.023 6.617 461.227 6.63702 461.398 6.672 cv
461.566 6.71503 461.715 6.77698 461.844 6.867 cv
461.965 6.961 462.07 7.08197 462.156 7.22699 cv
462.238 7.37903 462.309 7.56201 462.375 7.77698 cv
464.559 13.785 li
464.59 13.785 li
466.848 7.79303 li
466.914 7.57397 466.988 7.39099 467.07 7.23798 cv
467.148 7.09003 467.242 6.96899 467.352 6.87097 cv
467.457 6.78101 467.582 6.71503 467.727 6.672 cv
467.871 6.63702 468.039 6.617 468.234 6.61298 cv
469.613 6.61298 li
469.75 6.617 469.871 6.633 469.977 6.66803 cv
470.074 6.70697 470.156 6.76202 470.227 6.828 cv
470.289 6.90198 470.34 6.98798 470.375 7.086 cv
470.406 7.19098 470.422 7.30902 470.426 7.43402 cv
cp
f
479.535 12.887 mo
479.531 13.484 479.453 14.027 479.301 14.512 cv
479.141 15.004 478.906 15.422 478.59 15.773 cv
478.273 16.125 477.875 16.398 477.398 16.59 cv
476.918 16.781 476.359 16.875 475.723 16.879 cv
475.102 16.875 474.563 16.793 474.109 16.621 cv
473.648 16.453 473.27 16.203 472.973 15.875 cv
472.668 15.551 472.445 15.148 472.301 14.668 cv
472.156 14.191 472.086 13.645 472.086 13.027 cv
472.086 12.437 472.164 11.898 472.32 11.406 cv
472.477 10.918 472.715 10.496 473.035 10.145 cv
473.352 9.797 473.746 9.52301 474.223 9.328 cv
474.695 9.13702 475.254 9.04303 475.895 9.039 cv
476.52 9.04303 477.059 9.125 477.516 9.29303 cv
477.973 9.46503 478.352 9.71503 478.648 10.039 cv
478.945 10.367 479.168 10.77 479.316 11.246 cv
479.461 11.727 479.531 12.273 479.535 12.887 cv
cp
477.516 12.965 mo
477.512 12.629 477.484 12.312 477.434 12.02 cv
477.375 11.734 477.281 11.484 477.156 11.27 cv
477.023 11.059 476.852 10.891 476.641 10.77 cv
476.422 10.652 476.152 10.594 475.824 10.59 cv
475.535 10.594 475.281 10.648 475.063 10.75 cv
474.844 10.859 474.664 11.016 474.523 11.219 cv
474.383 11.426 474.277 11.672 474.207 11.957 cv
474.137 12.25 474.102 12.578 474.102 12.941 cv
474.102 13.289 474.129 13.605 474.188 13.891 cv
474.242 14.184 474.336 14.434 474.465 14.645 cv
474.59 14.859 474.762 15.023 474.984 15.137 cv
475.199 15.258 475.469 15.316 475.793 15.312 cv
476.086 15.316 476.344 15.262 476.566 15.152 cv
476.781 15.047 476.961 14.895 477.102 14.687 cv
477.242 14.488 477.344 14.242 477.414 13.953 cv
477.477 13.668 477.512 13.34 477.516 12.965 cv
cp
f
487.684 16.434 mo
487.68 16.496 487.668 16.543 487.645 16.578 cv
487.617 16.621 487.57 16.652 487.512 16.676 cv
487.445 16.699 487.363 16.715 487.258 16.73 cv
487.152 16.738 487.02 16.746 486.867 16.746 cv
486.695 16.746 486.563 16.738 486.461 16.73 cv
486.355 16.715 486.27 16.699 486.207 16.676 cv
486.141 16.652 486.094 16.621 486.066 16.578 cv
486.035 16.543 486.02 16.496 486.023 16.434 cv
486.023 15.664 li
485.664 16.051 485.289 16.348 484.898 16.559 cv
484.5 16.77 484.066 16.875 483.594 16.879 cv
483.059 16.875 482.609 16.773 482.246 16.57 cv
481.879 16.367 481.582 16.094 481.352 15.742 cv
481.117 15.398 480.949 14.992 480.848 14.523 cv
480.746 14.062 480.695 13.57 480.695 13.051 cv
480.695 12.437 480.758 11.883 480.891 11.387 cv
481.02 10.895 481.215 10.473 481.473 10.125 cv
481.727 9.77698 482.043 9.51202 482.422 9.32001 cv
482.801 9.13702 483.238 9.04303 483.734 9.039 cv
484.121 9.04303 484.473 9.12097 484.793 9.27698 cv
485.105 9.43701 485.422 9.66803 485.734 9.97302 cv
485.734 6.211 li
485.734 6.15997 485.746 6.11298 485.777 6.07001 cv
485.801 6.03101 485.855 5.99597 485.934 5.96503 cv
486.008 5.93701 486.105 5.91803 486.234 5.89801 cv
486.355 5.88702 486.516 5.87903 486.711 5.875 cv
486.902 5.87903 487.059 5.88702 487.184 5.89801 cv
487.305 5.91803 487.406 5.93701 487.48 5.96503 cv
487.551 5.99597 487.602 6.03101 487.637 6.07001 cv
487.664 6.11298 487.68 6.15997 487.684 6.211 cv
cp
485.734 11.789 mo
485.453 11.437 485.184 11.168 484.93 10.98 cv
484.668 10.793 484.398 10.699 484.121 10.699 cv
483.867 10.699 483.648 10.766 483.465 10.891 cv
483.277 11.023 483.129 11.191 483.02 11.402 cv
482.906 11.613 482.824 11.852 482.77 12.113 cv
482.715 12.379 482.688 12.648 482.688 12.918 cv
482.688 13.215 482.711 13.496 482.758 13.77 cv
482.805 14.047 482.879 14.293 482.988 14.508 cv
483.09 14.723 483.234 14.895 483.414 15.023 cv
483.59 15.156 483.813 15.223 484.082 15.219 cv
484.215 15.223 484.344 15.203 484.477 15.16 cv
484.602 15.125 484.734 15.062 484.867 14.969 cv
485 14.883 485.137 14.766 485.277 14.621 cv
485.418 14.48 485.57 14.305 485.734 14.098 cv
cp
f
496.082 12.758 mo
496.078 12.996 496.027 13.172 495.922 13.285 cv
495.813 13.402 495.664 13.461 495.484 13.457 cv
491.25 13.457 li
491.246 13.758 491.281 14.027 491.355 14.266 cv
491.422 14.508 491.535 14.711 491.691 14.879 cv
491.844 15.051 492.039 15.18 492.281 15.266 cv
492.52 15.355 492.809 15.398 493.152 15.398 cv
493.492 15.398 493.793 15.375 494.055 15.324 cv
494.313 15.277 494.539 15.223 494.73 15.16 cv
494.918 15.102 495.074 15.047 495.203 14.996 cv
495.324 14.949 495.426 14.926 495.508 14.922 cv
495.551 14.926 495.59 14.934 495.625 14.949 cv
495.652 14.969 495.68 15 495.699 15.047 cv
495.719 15.094 495.73 15.16 495.742 15.246 cv
495.746 15.332 495.75 15.441 495.754 15.57 cv
495.75 15.687 495.75 15.785 495.746 15.863 cv
495.738 15.945 495.73 16.012 495.723 16.066 cv
495.711 16.125 495.695 16.176 495.676 16.211 cv
495.656 16.254 495.629 16.289 495.598 16.324 cv
495.563 16.363 495.469 16.414 495.32 16.473 cv
495.164 16.539 494.973 16.602 494.742 16.656 cv
494.504 16.719 494.234 16.766 493.938 16.812 cv
493.633 16.852 493.313 16.875 492.973 16.879 cv
492.352 16.875 491.809 16.801 491.348 16.645 cv
490.879 16.492 490.492 16.254 490.184 15.937 cv
489.867 15.621 489.633 15.223 489.484 14.738 cv
489.328 14.258 489.254 13.691 489.258 13.035 cv
489.254 12.422 489.332 11.863 489.496 11.367 cv
489.652 10.871 489.887 10.453 490.199 10.105 cv
490.504 9.76202 490.879 9.49597 491.316 9.31201 cv
491.754 9.133 492.246 9.04303 492.801 9.039 cv
493.379 9.04303 493.879 9.12903 494.293 9.297 cv
494.707 9.47302 495.043 9.711 495.309 10.012 cv
495.57 10.316 495.766 10.676 495.895 11.09 cv
496.016 11.508 496.078 11.957 496.082 12.445 cv
cp
494.18 12.195 mo
494.191 11.645 494.082 11.211 493.848 10.898 cv
493.613 10.586 493.246 10.43 492.754 10.426 cv
492.504 10.43 492.289 10.477 492.105 10.566 cv
491.918 10.664 491.766 10.789 491.645 10.945 cv
491.52 11.105 491.426 11.293 491.363 11.508 cv
491.297 11.723 491.258 11.953 491.25 12.195 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
