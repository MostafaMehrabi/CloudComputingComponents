%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FirstScenario-PreparationTimesOfImages-RemoteMode.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 3:59:17 p.m.
%%BoundingBox: 0 0 698 559
%%HiResBoundingBox: 0 0 697.1501 558.8000
%%CropBox: 0 0 697.1501 558.8000
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -558.8 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 558.8 li
697.15 558.8 li
697.15 0 li
cp
clp
gsave
0 558.8 mo
698 558.8 li
698 -.200012 li
0 -.200012 li
cp
clp
0 0 mo
697.148 0 li
697.148 558.801 li
0 558.801 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.18 486.559 mo
680.09 486.559 li
59.18 446.539 mo
680.09 446.539 li
59.18 406.52 mo
680.09 406.52 li
59.18 366.5 mo
680.09 366.5 li
59.18 326.48 mo
680.09 326.48 li
59.18 286.461 mo
680.09 286.461 li
59.18 246.379 mo
680.09 246.379 li
59.18 206.359 mo
680.09 206.359 li
59.18 166.34 mo
680.09 166.34 li
59.18 126.32 mo
680.09 126.32 li
59.18 86.301 mo
680.09 86.301 li
59.18 46.281 mo
680.09 46.281 li
.135805 .104005 .108583 0 cmyk
@
59.18 466.578 mo
680.09 466.578 li
59.18 426.5 mo
680.09 426.5 li
59.18 386.48 mo
680.09 386.48 li
59.18 346.461 mo
680.09 346.461 li
59.18 306.441 mo
680.09 306.441 li
59.18 266.422 mo
680.09 266.422 li
59.18 226.398 mo
680.09 226.398 li
59.18 186.379 mo
680.09 186.379 li
59.18 146.359 mo
680.09 146.359 li
59.18 106.281 mo
680.09 106.281 li
59.18 66.262 mo
680.09 66.262 li
59.18 26.25 mo
680.09 26.25 li
.245457 .199985 .446387 0 cmyk
@
69.211 26.25 mo
69.211 506.582 li
89.25 26.25 mo
89.25 506.582 li
109.23 26.25 mo
109.23 506.582 li
129.27 26.25 mo
129.27 506.582 li
149.309 26.25 mo
149.309 506.582 li
169.352 26.25 mo
169.352 506.582 li
189.391 26.25 mo
189.391 506.582 li
209.43 26.25 mo
209.43 506.582 li
229.41 26.25 mo
229.41 506.582 li
249.449 26.25 mo
249.449 506.582 li
269.488 26.25 mo
269.488 506.582 li
289.531 26.25 mo
289.531 506.582 li
309.57 26.25 mo
309.57 506.582 li
329.551 26.25 mo
329.551 506.582 li
349.59 26.25 mo
349.59 506.582 li
369.629 26.25 mo
369.629 506.582 li
389.672 26.25 mo
389.672 506.582 li
409.711 26.25 mo
409.711 506.582 li
429.75 26.25 mo
429.75 506.582 li
449.73 26.25 mo
449.73 506.582 li
469.77 26.25 mo
469.77 506.582 li
489.809 26.25 mo
489.809 506.582 li
509.852 26.25 mo
509.852 506.582 li
529.891 26.25 mo
529.891 506.582 li
549.871 26.25 mo
549.871 506.582 li
569.91 26.25 mo
569.91 506.582 li
589.949 26.25 mo
589.949 506.582 li
609.988 26.25 mo
609.988 506.582 li
630.031 26.25 mo
630.031 506.582 li
650.07 26.25 mo
650.07 506.582 li
670.051 26.25 mo
670.051 506.582 li
.129366 .100191 .235538 0 cmyk
@
59.18 26.25 mo
59.18 506.582 li
79.23 26.25 mo
79.23 506.582 li
99.211 26.25 mo
99.211 506.582 li
119.25 26.25 mo
119.25 506.582 li
139.289 26.25 mo
139.289 506.582 li
159.328 26.25 mo
159.328 506.582 li
179.371 26.25 mo
179.371 506.582 li
199.41 26.25 mo
199.41 506.582 li
219.391 26.25 mo
219.391 506.582 li
239.43 26.25 mo
239.43 506.582 li
259.469 26.25 mo
259.469 506.582 li
279.512 26.25 mo
279.512 506.582 li
299.551 26.25 mo
299.551 506.582 li
319.59 26.25 mo
319.59 506.582 li
339.57 26.25 mo
339.57 506.582 li
359.609 26.25 mo
359.609 506.582 li
379.648 26.25 mo
379.648 506.582 li
399.691 26.25 mo
399.691 506.582 li
419.73 26.25 mo
419.73 506.582 li
439.711 26.25 mo
439.711 506.582 li
459.75 26.25 mo
459.75 506.582 li
479.789 26.25 mo
479.789 506.582 li
499.828 26.25 mo
499.828 506.582 li
519.871 26.25 mo
519.871 506.582 li
539.91 26.25 mo
539.91 506.582 li
559.891 26.25 mo
559.891 506.582 li
579.93 26.25 mo
579.93 506.582 li
599.969 26.25 mo
599.969 506.582 li
620.012 26.25 mo
620.012 506.582 li
640.051 26.25 mo
640.051 506.582 li
660.031 26.25 mo
660.031 506.582 li
680.09 26.25 mo
680.09 506.582 li
.245457 .199985 .446387 0 cmyk
@
39.102 497.266 mo
46.196 497.266 li
46.196 514.356 li
39.102 514.356 li
cp
0 0 0 0 cmyk
ef
39.102 457.238 mo
46.196 457.238 li
46.196 474.328 li
39.102 474.328 li
cp
ef
39.102 417.211 mo
46.196 417.211 li
46.196 434.301 li
39.102 434.301 li
cp
ef
32.004 377.18 mo
46.192 377.18 li
46.192 394.27 li
32.004 394.27 li
cp
ef
32.004 337.148 mo
46.192 337.148 li
46.192 354.238 li
32.004 354.238 li
cp
ef
32.004 297.129 mo
46.192 297.129 li
46.192 314.219 li
32.004 314.219 li
cp
ef
32.004 257.102 mo
46.192 257.102 li
46.192 274.192 li
32.004 274.192 li
cp
ef
32.004 217.07 mo
46.192 217.07 li
46.192 234.16 li
32.004 234.16 li
cp
ef
32.004 177.051 mo
46.192 177.051 li
46.192 194.141 li
32.004 194.141 li
cp
ef
32.004 137.02 mo
46.192 137.02 li
46.192 154.11 li
32.004 154.11 li
cp
ef
32.004 96.988 mo
46.192 96.988 li
46.192 114.078 li
32.004 114.078 li
cp
ef
32.004 56.961 mo
46.192 56.961 li
46.192 74.051 li
32.004 74.051 li
cp
ef
32.004 16.941 mo
46.192 16.941 li
46.192 34.031 li
32.004 34.031 li
cp
ef
1 lw
59.18 506.582 mo
680.09 506.582 li
.369879 .299321 .304356 .000976577 cmyk
@
59.18 506.582 mo
59.18 511.027 li
79.23 506.582 mo
79.23 511.027 li
99.211 506.582 mo
99.211 511.027 li
119.25 506.582 mo
119.25 511.027 li
139.289 506.582 mo
139.289 511.027 li
159.328 506.582 mo
159.328 511.027 li
179.371 506.582 mo
179.371 511.027 li
199.41 506.582 mo
199.41 511.027 li
219.391 506.582 mo
219.391 511.027 li
239.43 506.582 mo
239.43 511.027 li
259.469 506.582 mo
259.469 511.027 li
279.512 506.582 mo
279.512 511.027 li
299.551 506.582 mo
299.551 511.027 li
319.59 506.582 mo
319.59 511.027 li
339.57 506.582 mo
339.57 511.027 li
359.609 506.582 mo
359.609 511.027 li
379.648 506.582 mo
379.648 511.027 li
399.691 506.582 mo
399.691 511.027 li
419.73 506.582 mo
419.73 511.027 li
439.711 506.582 mo
439.711 511.027 li
459.75 506.582 mo
459.75 511.027 li
479.789 506.582 mo
479.789 511.027 li
499.828 506.582 mo
499.828 511.027 li
519.871 506.582 mo
519.871 511.027 li
539.91 506.582 mo
539.91 511.027 li
559.891 506.582 mo
559.891 511.027 li
579.93 506.582 mo
579.93 511.027 li
599.969 506.582 mo
599.969 511.027 li
620.012 506.582 mo
620.012 511.027 li
640.051 506.582 mo
640.051 511.027 li
660.031 506.582 mo
660.031 511.027 li
680.09 506.582 mo
680.09 511.027 li
@
gsave
59.129 26.238 mo
680.789 26.238 li
680.789 507.32 li
59.129 507.32 li
cp
clp
1 lc
59.18 435.922 mo
79.23 435.859 li
99.211 450.281 li
119.25 435.262 li
139.289 435.02 li
159.328 435.801 li
179.371 435.738 li
199.41 435.859 li
219.391 435.859 li
239.43 435.68 li
259.469 435.68 li
279.512 435.621 li
299.551 435.559 li
319.59 435.441 li
339.57 435.441 li
359.609 435.68 li
379.648 435.441 li
399.691 435.441 li
419.73 435.32 li
439.711 435.5 li
459.75 435.559 li
479.789 435.32 li
499.828 435.559 li
519.871 435.379 li
539.91 434.84 li
559.891 435.441 li
579.93 435.32 li
599.969 435.379 li
620.012 435.441 li
640.051 435.379 li
660.031 435.5 li
680.09 435.379 li
.721279 .438239 .0234379 0 cmyk
@
grestore
1.02 lw
54.148 430.891 mo
64.109 430.891 li
64.109 440.852 li
54.148 440.852 li
cp
.721279 .438239 .0234379 0 cmyk
@
74.191 430.828 mo
84.148 430.828 li
84.148 440.789 li
74.191 440.789 li
cp
@
94.23 445.289 mo
104.191 445.289 li
104.191 455.25 li
94.23 455.25 li
cp
@
114.27 430.289 mo
124.231 430.289 li
124.231 440.25 li
114.27 440.25 li
cp
@
134.309 429.988 mo
144.27 429.988 li
144.27 439.949 li
134.309 439.949 li
cp
@
154.289 430.828 mo
164.25 430.828 li
164.25 440.789 li
154.289 440.789 li
cp
@
174.328 430.77 mo
184.289 430.77 li
184.289 440.731 li
174.328 440.731 li
cp
@
194.371 430.828 mo
204.328 430.828 li
204.328 440.789 li
194.371 440.789 li
cp
@
214.41 430.828 mo
224.371 430.828 li
224.371 440.789 li
214.41 440.789 li
cp
@
234.449 430.648 mo
244.41 430.648 li
244.41 440.609 li
234.449 440.609 li
cp
@
254.488 430.648 mo
264.449 430.648 li
264.449 440.609 li
254.488 440.609 li
cp
@
274.469 430.59 mo
284.43 430.59 li
284.43 440.551 li
274.469 440.551 li
cp
@
294.512 430.531 mo
304.469 430.531 li
304.469 440.488 li
294.512 440.488 li
cp
@
314.551 430.469 mo
324.512 430.469 li
324.512 440.43 li
314.551 440.43 li
cp
@
334.59 430.41 mo
344.551 430.41 li
344.551 440.371 li
334.59 440.371 li
cp
@
354.629 430.648 mo
364.59 430.648 li
364.59 440.609 li
354.629 440.609 li
cp
@
374.609 430.469 mo
384.57 430.469 li
384.57 440.43 li
374.609 440.43 li
cp
@
394.648 430.41 mo
404.609 430.41 li
404.609 440.371 li
394.648 440.371 li
cp
@
414.691 430.352 mo
424.648 430.352 li
424.648 440.309 li
414.691 440.309 li
cp
@
434.73 430.469 mo
444.691 430.469 li
444.691 440.43 li
434.73 440.43 li
cp
@
454.77 430.59 mo
464.731 430.59 li
464.731 440.551 li
454.77 440.551 li
cp
@
474.809 430.352 mo
484.77 430.352 li
484.77 440.309 li
474.809 440.309 li
cp
@
494.789 430.531 mo
504.75 430.531 li
504.75 440.488 li
494.789 440.488 li
cp
@
514.828 430.352 mo
524.789 430.352 li
524.789 440.309 li
514.828 440.309 li
cp
@
534.871 429.871 mo
544.828 429.871 li
544.828 439.828 li
534.871 439.828 li
cp
@
554.91 430.41 mo
564.871 430.41 li
564.871 440.371 li
554.91 440.371 li
cp
@
574.949 430.352 mo
584.91 430.352 li
584.91 440.309 li
574.949 440.309 li
cp
@
594.988 430.352 mo
604.949 430.352 li
604.949 440.309 li
594.988 440.309 li
cp
@
614.969 430.41 mo
624.93 430.41 li
624.93 440.371 li
614.969 440.371 li
cp
@
635.012 430.41 mo
644.969 430.41 li
644.969 440.371 li
635.012 440.371 li
cp
@
655.051 430.469 mo
665.012 430.469 li
665.012 440.43 li
655.051 440.43 li
cp
@
675.09 430.352 mo
685.051 430.352 li
685.051 440.309 li
675.09 440.309 li
cp
@
gsave
59.129 26.238 mo
680.789 26.238 li
680.789 507.32 li
59.129 507.32 li
cp
clp
1 lw
1 lc
[3 4 ] 0 dsh
59.18 433.27 mo
79.23 436.82 li
99.211 437.18 li
119.25 437.238 li
139.289 437.238 li
159.328 437.289 li
179.371 437.059 li
199.41 437.18 li
219.391 437.121 li
239.43 436.16 li
259.469 435.98 li
279.512 435.5 li
299.551 435.621 li
319.59 435.262 li
339.57 436.281 li
359.609 436.699 li
379.648 437 li
399.691 435.922 li
419.73 435.141 li
439.711 435.141 li
459.75 435.32 li
499.828 435.32 li
519.871 435.141 li
539.91 435.379 li
559.891 435.98 li
579.93 434.539 li
599.969 435.199 li
620.012 435.441 li
640.051 435.32 li
660.031 435.441 li
680.09 435.441 li
@
grestore
54.148 428.25 mo
64.109 428.25 li
64.109 438.211 li
54.148 438.211 li
cp
@
74.191 431.852 mo
84.148 431.852 li
84.148 441.809 li
74.191 441.809 li
cp
@
94.23 432.148 mo
104.191 432.148 li
104.191 442.109 li
94.23 442.109 li
cp
@
114.27 432.211 mo
124.231 432.211 li
124.231 442.172 li
114.27 442.172 li
cp
@
134.309 432.211 mo
144.27 432.211 li
144.27 442.172 li
134.309 442.172 li
cp
@
154.289 432.27 mo
164.25 432.27 li
164.25 442.231 li
154.289 442.231 li
cp
@
174.328 432.09 mo
184.289 432.09 li
184.289 442.051 li
174.328 442.051 li
cp
@
194.371 432.148 mo
204.328 432.148 li
204.328 442.109 li
194.371 442.109 li
cp
@
214.41 432.148 mo
224.371 432.148 li
224.371 442.109 li
214.41 442.109 li
cp
@
234.449 431.129 mo
244.41 431.129 li
244.41 441.09 li
234.449 441.09 li
cp
@
254.488 431.012 mo
264.449 431.012 li
264.449 440.969 li
254.488 440.969 li
cp
@
274.469 430.531 mo
284.43 430.531 li
284.43 440.488 li
274.469 440.488 li
cp
@
294.512 430.59 mo
304.469 430.59 li
304.469 440.551 li
294.512 440.551 li
cp
@
314.551 430.23 mo
324.512 430.23 li
324.512 440.191 li
314.551 440.191 li
cp
@
334.59 431.309 mo
344.551 431.309 li
344.551 441.27 li
334.59 441.27 li
cp
@
354.629 431.672 mo
364.59 431.672 li
364.59 441.629 li
354.629 441.629 li
cp
@
374.609 432.031 mo
384.57 432.031 li
384.57 441.988 li
374.609 441.988 li
cp
@
394.648 430.949 mo
404.609 430.949 li
404.609 440.91 li
394.648 440.91 li
cp
@
414.691 430.109 mo
424.648 430.109 li
424.648 440.07 li
414.691 440.07 li
cp
@
434.73 430.172 mo
444.691 430.172 li
444.691 440.129 li
434.73 440.129 li
cp
@
454.77 430.352 mo
464.731 430.352 li
464.731 440.309 li
454.77 440.309 li
cp
@
474.809 430.352 mo
484.77 430.352 li
484.77 440.309 li
474.809 440.309 li
cp
@
494.789 430.352 mo
504.75 430.352 li
504.75 440.309 li
494.789 440.309 li
cp
@
514.828 430.172 mo
524.789 430.172 li
524.789 440.129 li
514.828 440.129 li
cp
@
534.871 430.352 mo
544.828 430.352 li
544.828 440.309 li
534.871 440.309 li
cp
@
554.91 431.012 mo
564.871 431.012 li
564.871 440.969 li
554.91 440.969 li
cp
@
574.949 429.512 mo
584.91 429.512 li
584.91 439.469 li
574.949 439.469 li
cp
@
594.988 430.23 mo
604.949 430.23 li
604.949 440.191 li
594.988 440.191 li
cp
@
614.969 430.469 mo
624.93 430.469 li
624.93 440.43 li
614.969 440.43 li
cp
@
635.012 430.352 mo
644.969 430.352 li
644.969 440.309 li
635.012 440.309 li
cp
@
655.051 430.469 mo
665.012 430.469 li
665.012 440.43 li
655.051 440.43 li
cp
@
675.09 430.469 mo
685.051 430.469 li
685.051 440.43 li
675.09 440.43 li
cp
@
gsave
59.129 26.238 mo
680.789 26.238 li
680.789 507.32 li
59.129 507.32 li
cp
clp
1 lw
1 lc
59.18 436.141 mo
79.23 395.48 li
99.211 393.48 li
119.25 393.98 li
139.289 393.98 li
159.328 394.102 li
179.371 393.801 li
199.41 393.859 li
219.391 393.859 li
239.43 435.5 li
259.469 435.32 li
279.512 435.262 li
299.551 435.32 li
319.59 435.262 li
339.57 435.32 li
359.609 435.441 li
379.648 435.5 li
399.691 435.559 li
419.73 435.379 li
439.711 435.32 li
459.75 435.262 li
479.789 435.559 li
499.828 435.441 li
519.871 435.32 li
539.91 435.379 li
559.891 435.32 li
579.93 435.441 li
599.969 435.441 li
620.012 435.32 li
640.051 435.379 li
660.031 435.32 li
680.09 435.68 li
0 .993988 1 0 cmyk
@
grestore
54.148 431.129 mo
64.109 431.129 li
64.109 441.09 li
54.148 441.09 li
cp
0 .993988 1 0 cmyk
@
74.191 390.512 mo
84.148 390.512 li
84.148 400.469 li
74.191 400.469 li
cp
@
94.23 388.469 mo
104.191 388.469 li
104.191 398.43 li
94.23 398.43 li
cp
@
114.27 389.012 mo
124.231 389.012 li
124.231 398.969 li
114.27 398.969 li
cp
@
134.309 389.012 mo
144.27 389.012 li
144.27 398.969 li
134.309 398.969 li
cp
@
154.289 389.07 mo
164.25 389.07 li
164.25 399.031 li
154.289 399.031 li
cp
@
174.328 388.828 mo
184.289 388.828 li
184.289 398.789 li
174.328 398.789 li
cp
@
194.371 388.891 mo
204.328 388.891 li
204.328 398.852 li
194.371 398.852 li
cp
@
214.41 388.828 mo
224.371 388.828 li
224.371 398.789 li
214.41 398.789 li
cp
@
234.449 430.469 mo
244.41 430.469 li
244.41 440.43 li
234.449 440.43 li
cp
@
254.488 430.352 mo
264.449 430.352 li
264.449 440.309 li
254.488 440.309 li
cp
@
274.469 430.289 mo
284.43 430.289 li
284.43 440.25 li
274.469 440.25 li
cp
@
294.512 430.352 mo
304.469 430.352 li
304.469 440.309 li
294.512 440.309 li
cp
@
314.551 430.289 mo
324.512 430.289 li
324.512 440.25 li
314.551 440.25 li
cp
@
334.59 430.352 mo
344.551 430.352 li
344.551 440.309 li
334.59 440.309 li
cp
@
354.629 430.41 mo
364.59 430.41 li
364.59 440.371 li
354.629 440.371 li
cp
@
374.609 430.469 mo
384.57 430.469 li
384.57 440.43 li
374.609 440.43 li
cp
@
394.648 430.531 mo
404.609 430.531 li
404.609 440.488 li
394.648 440.488 li
cp
@
414.691 430.352 mo
424.648 430.352 li
424.648 440.309 li
414.691 440.309 li
cp
@
434.73 430.352 mo
444.691 430.352 li
444.691 440.309 li
434.73 440.309 li
cp
@
454.77 430.289 mo
464.731 430.289 li
464.731 440.25 li
454.77 440.25 li
cp
@
474.809 430.531 mo
484.77 430.531 li
484.77 440.488 li
474.809 440.488 li
cp
@
494.789 430.469 mo
504.75 430.469 li
504.75 440.43 li
494.789 440.43 li
cp
@
514.828 430.352 mo
524.789 430.352 li
524.789 440.309 li
514.828 440.309 li
cp
@
534.871 430.41 mo
544.828 430.41 li
544.828 440.371 li
534.871 440.371 li
cp
@
554.91 430.289 mo
564.871 430.289 li
564.871 440.25 li
554.91 440.25 li
cp
@
574.949 430.469 mo
584.91 430.469 li
584.91 440.43 li
574.949 440.43 li
cp
@
594.988 430.469 mo
604.949 430.469 li
604.949 440.43 li
594.988 440.43 li
cp
@
614.969 430.289 mo
624.93 430.289 li
624.93 440.25 li
614.969 440.25 li
cp
@
635.012 430.352 mo
644.969 430.352 li
644.969 440.309 li
635.012 440.309 li
cp
@
655.051 430.352 mo
665.012 430.352 li
665.012 440.309 li
655.051 440.309 li
cp
@
675.09 430.711 mo
685.051 430.711 li
685.051 440.672 li
675.09 440.672 li
cp
@
gsave
59.129 26.238 mo
680.789 26.238 li
680.789 507.32 li
59.129 507.32 li
cp
clp
1 lw
1 lc
[3 4 ] 0 dsh
59.18 482.898 mo
79.23 488.719 li
99.211 488.781 li
119.25 488.66 li
139.289 488.781 li
159.328 488.121 li
179.371 488.719 li
199.41 488.781 li
219.391 488.871 li
239.43 488.84 li
259.469 488.66 li
279.512 488.602 li
299.551 486.98 li
319.59 486.922 li
339.57 488.719 li
359.609 488.539 li
379.648 485.898 li
399.691 485.422 li
419.73 488.781 li
439.711 488.719 li
459.75 488.719 li
479.789 488.84 li
499.828 488.781 li
519.871 488.719 li
539.91 487.762 li
559.891 488.781 li
579.93 488.719 li
599.969 487.578 li
620.012 488.781 li
660.031 488.781 li
680.09 486.141 li
@
grestore
54.148 477.871 mo
64.109 477.871 li
64.109 487.828 li
54.148 487.828 li
cp
@
74.191 483.75 mo
84.148 483.75 li
84.148 493.711 li
74.191 493.711 li
cp
@
94.23 483.809 mo
104.191 483.809 li
104.191 493.77 li
94.23 493.77 li
cp
@
114.27 483.691 mo
124.231 483.691 li
124.231 493.648 li
114.27 493.648 li
cp
@
134.309 483.75 mo
144.27 483.75 li
144.27 493.711 li
134.309 493.711 li
cp
@
154.289 483.09 mo
164.25 483.09 li
164.25 493.051 li
154.289 493.051 li
cp
@
174.328 483.75 mo
184.289 483.75 li
184.289 493.711 li
174.328 493.711 li
cp
@
194.371 483.75 mo
204.328 483.75 li
204.328 493.711 li
194.371 493.711 li
cp
@
214.41 483.871 mo
224.371 483.871 li
224.371 493.828 li
214.41 493.828 li
cp
@
234.449 483.809 mo
244.41 483.809 li
244.41 493.77 li
234.449 493.77 li
cp
@
254.488 483.691 mo
264.449 483.691 li
264.449 493.648 li
254.488 493.648 li
cp
@
274.469 483.629 mo
284.43 483.629 li
284.43 493.59 li
274.469 493.59 li
cp
@
294.512 481.949 mo
304.469 481.949 li
304.469 491.91 li
294.512 491.91 li
cp
@
314.551 481.891 mo
324.512 481.891 li
324.512 491.852 li
314.551 491.852 li
cp
@
334.59 483.691 mo
344.551 483.691 li
344.551 493.648 li
334.59 493.648 li
cp
@
354.629 483.512 mo
364.59 483.512 li
364.59 493.469 li
354.629 493.469 li
cp
@
374.609 480.93 mo
384.57 480.93 li
384.57 490.891 li
374.609 490.891 li
cp
@
394.648 480.391 mo
404.609 480.391 li
404.609 490.352 li
394.648 490.352 li
cp
@
414.691 483.75 mo
424.648 483.75 li
424.648 493.711 li
414.691 493.711 li
cp
@
434.73 483.75 mo
444.691 483.75 li
444.691 493.711 li
434.73 493.711 li
cp
@
454.77 483.75 mo
464.731 483.75 li
464.731 493.711 li
454.77 493.711 li
cp
@
474.809 483.871 mo
484.77 483.871 li
484.77 493.828 li
474.809 493.828 li
cp
@
494.789 483.809 mo
504.75 483.809 li
504.75 493.77 li
494.789 493.77 li
cp
@
514.828 483.75 mo
524.789 483.75 li
524.789 493.711 li
514.828 493.711 li
cp
@
534.871 482.73 mo
544.828 482.73 li
544.828 492.691 li
534.871 492.691 li
cp
@
554.91 483.809 mo
564.871 483.809 li
564.871 493.77 li
554.91 493.77 li
cp
@
574.949 483.75 mo
584.91 483.75 li
584.91 493.711 li
574.949 493.711 li
cp
@
594.988 482.551 mo
604.949 482.551 li
604.949 492.512 li
594.988 492.512 li
cp
@
614.969 483.809 mo
624.93 483.809 li
624.93 493.77 li
614.969 493.77 li
cp
@
635.012 483.809 mo
644.969 483.809 li
644.969 493.77 li
635.012 493.77 li
cp
@
655.051 483.75 mo
665.012 483.75 li
665.012 493.711 li
655.051 493.711 li
cp
@
675.09 481.109 mo
685.051 481.109 li
685.051 491.07 li
675.09 491.07 li
cp
@
39.102 497.266 mo
46.196 497.266 li
46.196 514.356 li
39.102 514.356 li
cp
0 0 0 0 cmyk
ef
45.719 506.195 mo
45.719 506.879 45.664 507.5 45.559 508.059 cv
45.449 508.621 45.27 509.102 45.023 509.504 cv
44.773 509.91 44.449 510.223 44.051 510.441 cv
43.645 510.66 43.152 510.77 42.57 510.77 cv
42.012 510.77 41.543 510.672 41.164 510.473 cv
40.781 510.277 40.473 509.984 40.242 509.598 cv
40.008 509.215 39.844 508.742 39.746 508.176 cv
39.648 507.617 39.602 506.973 39.602 506.238 cv
39.602 505.566 39.656 504.945 39.766 504.383 cv
39.875 503.82 40.051 503.34 40.297 502.934 cv
40.543 502.535 40.867 502.223 41.27 501.996 cv
41.668 501.777 42.16 501.664 42.746 501.664 cv
43.305 501.664 43.773 501.766 44.156 501.961 cv
44.531 502.164 44.84 502.453 45.074 502.836 cv
45.309 503.223 45.473 503.699 45.57 504.258 cv
45.668 504.824 45.719 505.469 45.719 506.195 cv
cp
44.516 506.281 mo
44.512 505.84 44.496 505.445 44.469 505.09 cv
44.434 504.742 44.387 504.43 44.328 504.16 cv
44.262 503.895 44.18 503.664 44.086 503.469 cv
43.984 503.273 43.867 503.113 43.734 502.988 cv
43.594 502.863 43.441 502.773 43.27 502.715 cv
43.094 502.66 42.895 502.633 42.68 502.629 cv
42.289 502.633 41.977 502.723 41.734 502.902 cv
41.492 503.086 41.301 503.336 41.16 503.656 cv
41.02 503.977 40.926 504.352 40.879 504.777 cv
40.828 505.207 40.801 505.668 40.805 506.156 cv
40.801 506.82 40.836 507.383 40.906 507.844 cv
40.973 508.309 41.082 508.684 41.23 508.973 cv
41.379 509.266 41.566 509.477 41.797 509.609 cv
42.027 509.742 42.309 509.809 42.637 509.805 cv
42.891 509.809 43.113 509.77 43.309 509.684 cv
43.5 509.605 43.668 509.488 43.809 509.332 cv
43.945 509.184 44.059 509 44.152 508.781 cv
44.242 508.57 44.316 508.332 44.371 508.07 cv
44.426 507.812 44.461 507.531 44.484 507.227 cv
44.5 506.926 44.512 506.609 44.516 506.281 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
39.102 457.238 mo
46.196 457.238 li
46.196 474.328 li
39.102 474.328 li
cp
0 0 0 0 cmyk
ef
45.793 468.109 mo
45.789 468.262 45.766 468.379 45.723 468.465 cv
45.676 468.551 45.613 468.594 45.531 468.594 cv
44.535 468.594 li
44.535 470.449 li
44.535 470.488 44.523 470.52 44.508 470.543 cv
44.484 470.574 44.453 470.594 44.41 470.609 cv
44.359 470.625 44.297 470.637 44.227 470.645 cv
44.148 470.652 44.055 470.656 43.938 470.66 cv
43.824 470.656 43.73 470.652 43.656 470.645 cv
43.578 470.637 43.516 470.625 43.477 470.609 cv
43.43 470.594 43.402 470.574 43.387 470.543 cv
43.371 470.52 43.363 470.488 43.363 470.449 cv
43.363 468.594 li
39.75 468.594 li
39.691 468.594 39.648 468.59 39.613 468.574 cv
39.574 468.566 39.539 468.539 39.516 468.5 cv
39.484 468.465 39.465 468.414 39.453 468.344 cv
39.441 468.277 39.438 468.187 39.438 468.074 cv
39.438 467.992 39.438 467.914 39.441 467.844 cv
39.445 467.777 39.453 467.715 39.469 467.656 cv
39.48 467.602 39.5 467.547 39.523 467.492 cv
39.543 467.441 39.57 467.387 39.605 467.324 cv
42.754 461.957 li
42.777 461.922 42.809 461.891 42.855 461.863 cv
42.895 461.836 42.953 461.812 43.023 461.793 cv
43.094 461.777 43.18 461.766 43.281 461.758 cv
43.383 461.754 43.504 461.75 43.645 461.746 cv
43.797 461.75 43.93 461.758 44.043 461.766 cv
44.156 461.781 44.246 461.793 44.32 461.809 cv
44.387 461.828 44.441 461.855 44.48 461.883 cv
44.516 461.914 44.535 461.945 44.535 461.984 cv
44.535 467.625 li
45.531 467.625 li
45.609 467.629 45.672 467.668 45.719 467.746 cv
45.766 467.828 45.789 467.949 45.793 468.109 cv
cp
43.363 462.777 mo
43.348 462.777 li
40.508 467.625 li
43.363 467.625 li
cp
.629236 .549432 .540154 .282963 cmyk
f
39.102 417.211 mo
46.196 417.211 li
46.196 434.301 li
39.102 434.301 li
cp
0 0 0 0 cmyk
ef
45.621 428.312 mo
45.617 428.699 45.551 429.039 45.414 429.336 cv
45.277 429.633 45.078 429.887 44.824 430.09 cv
44.566 430.297 44.25 430.449 43.875 430.551 cv
43.492 430.656 43.063 430.707 42.578 430.707 cv
42.121 430.707 41.711 430.66 41.355 430.566 cv
40.992 430.473 40.688 430.332 40.441 430.145 cv
40.188 429.957 39.996 429.727 39.867 429.453 cv
39.73 429.18 39.664 428.867 39.668 428.516 cv
39.664 428.242 39.711 427.988 39.805 427.754 cv
39.895 427.52 40.023 427.305 40.195 427.109 cv
40.363 426.914 40.574 426.734 40.828 426.562 cv
41.074 426.395 41.359 426.23 41.676 426.074 cv
41.402 425.934 41.16 425.785 40.949 425.625 cv
40.738 425.473 40.559 425.301 40.418 425.113 cv
40.27 424.93 40.16 424.734 40.09 424.523 cv
40.012 424.32 39.977 424.09 39.977 423.84 cv
39.977 423.531 40.031 423.242 40.145 422.969 cv
40.254 422.699 40.422 422.465 40.648 422.266 cv
40.871 422.066 41.156 421.91 41.508 421.793 cv
41.852 421.68 42.258 421.621 42.727 421.617 cv
43.168 421.621 43.555 421.672 43.883 421.777 cv
44.207 421.887 44.477 422.035 44.688 422.215 cv
44.898 422.402 45.055 422.617 45.156 422.863 cv
45.258 423.117 45.309 423.387 45.309 423.672 cv
45.309 423.906 45.27 424.129 45.195 424.34 cv
45.117 424.555 45.008 424.758 44.863 424.949 cv
44.715 425.141 44.535 425.32 44.328 425.484 cv
44.113 425.652 43.871 425.805 43.602 425.949 cv
43.922 426.109 44.211 426.273 44.465 426.441 cv
44.715 426.613 44.926 426.797 45.098 426.984 cv
45.27 427.18 45.398 427.383 45.488 427.598 cv
45.574 427.816 45.617 428.055 45.621 428.312 cv
cp
44.148 423.777 mo
44.148 423.59 44.113 423.418 44.047 423.262 cv
43.98 423.109 43.883 422.977 43.758 422.863 cv
43.625 422.758 43.469 422.676 43.281 422.617 cv
43.094 422.562 42.879 422.535 42.637 422.531 cv
42.145 422.535 41.773 422.645 41.523 422.867 cv
41.27 423.09 41.141 423.395 41.145 423.777 cv
41.141 423.961 41.172 424.129 41.234 424.277 cv
41.293 424.434 41.391 424.578 41.523 424.711 cv
41.652 424.852 41.816 424.984 42.016 425.109 cv
42.211 425.242 42.445 425.375 42.719 425.512 cv
43.18 425.277 43.531 425.016 43.777 424.727 cv
44.023 424.441 44.148 424.125 44.148 423.777 cv
cp
44.434 428.434 mo
44.43 428.227 44.391 428.039 44.316 427.867 cv
44.238 427.699 44.121 427.539 43.965 427.387 cv
43.805 427.242 43.609 427.098 43.379 426.957 cv
43.141 426.82 42.867 426.676 42.563 426.523 cv
42.273 426.664 42.023 426.809 41.809 426.949 cv
41.59 427.094 41.414 427.238 41.277 427.387 cv
41.137 427.539 41.031 427.695 40.961 427.859 cv
40.891 428.023 40.855 428.207 40.855 428.406 cv
40.855 428.852 41.004 429.195 41.309 429.434 cv
41.609 429.676 42.063 429.793 42.664 429.793 cv
43.246 429.793 43.688 429.672 43.984 429.43 cv
44.281 429.187 44.43 428.855 44.434 428.434 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
32.004 377.18 mo
46.192 377.18 li
46.192 394.27 li
32.004 394.27 li
cp
0 0 0 0 cmyk
ef
38.34 390.094 mo
38.34 390.184 38.332 390.254 38.316 390.312 cv
38.301 390.375 38.281 390.426 38.262 390.457 cv
38.238 390.496 38.211 390.52 38.184 390.535 cv
38.152 390.551 38.125 390.559 38.094 390.559 cv
33.48 390.559 li
33.445 390.559 33.414 390.551 33.391 390.535 cv
33.359 390.52 33.336 390.496 33.313 390.457 cv
33.285 390.426 33.266 390.375 33.254 390.312 cv
33.238 390.254 33.23 390.184 33.234 390.094 cv
33.23 390.016 33.238 389.945 33.254 389.883 cv
33.266 389.828 33.281 389.777 33.305 389.738 cv
33.324 389.699 33.348 389.672 33.379 389.648 cv
33.406 389.633 33.441 389.621 33.48 389.617 cv
35.324 389.617 li
35.324 382.898 li
33.617 383.918 li
33.527 383.965 33.457 383.992 33.406 384 cv
33.352 384.012 33.309 384 33.281 383.969 cv
33.246 383.941 33.223 383.891 33.215 383.82 cv
33.199 383.754 33.195 383.668 33.199 383.562 cv
33.195 383.484 33.199 383.418 33.207 383.363 cv
33.215 383.309 33.223 383.266 33.238 383.227 cv
33.25 383.195 33.27 383.164 33.297 383.133 cv
33.32 383.109 33.355 383.082 33.398 383.051 cv
35.43 381.746 li
35.445 381.734 35.469 381.727 35.496 381.715 cv
35.523 381.707 35.559 381.695 35.602 381.687 cv
35.641 381.68 35.688 381.676 35.746 381.668 cv
35.797 381.668 35.867 381.664 35.949 381.664 cv
36.059 381.664 36.148 381.672 36.223 381.68 cv
36.293 381.691 36.352 381.703 36.395 381.715 cv
36.434 381.734 36.461 381.754 36.477 381.777 cv
36.488 381.805 36.492 381.832 36.496 381.855 cv
36.496 389.617 li
38.094 389.617 li
38.129 389.621 38.16 389.633 38.195 389.648 cv
38.223 389.672 38.25 389.699 38.273 389.738 cv
38.293 389.777 38.309 389.828 38.32 389.883 cv
38.332 389.945 38.34 390.016 38.34 390.094 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
45.398 390.055 mo
45.395 390.137 45.387 390.211 45.379 390.273 cv
45.363 390.34 45.348 390.395 45.332 390.434 cv
45.309 390.48 45.281 390.512 45.25 390.527 cv
45.211 390.551 45.176 390.559 45.137 390.559 cv
40.258 390.559 li
40.188 390.559 40.133 390.551 40.09 390.535 cv
40.039 390.52 39.996 390.496 39.965 390.457 cv
39.926 390.426 39.902 390.371 39.891 390.301 cv
39.871 390.23 39.863 390.148 39.867 390.047 cv
39.863 389.961 39.867 389.879 39.879 389.809 cv
39.883 389.742 39.898 389.684 39.926 389.629 cv
39.945 389.578 39.973 389.523 40.012 389.469 cv
40.043 389.418 40.09 389.363 40.148 389.301 cv
41.914 387.488 li
42.32 387.07 42.645 386.695 42.895 386.363 cv
43.137 386.031 43.328 385.73 43.465 385.453 cv
43.598 385.184 43.688 384.934 43.73 384.711 cv
43.77 384.488 43.789 384.281 43.793 384.082 cv
43.789 383.887 43.758 383.699 43.695 383.523 cv
43.629 383.352 43.531 383.199 43.41 383.066 cv
43.281 382.937 43.125 382.832 42.941 382.75 cv
42.75 382.676 42.535 382.637 42.293 382.633 cv
42.004 382.637 41.746 382.676 41.52 382.75 cv
41.289 382.832 41.09 382.918 40.922 383.004 cv
40.746 383.098 40.602 383.18 40.492 383.254 cv
40.375 383.336 40.289 383.375 40.234 383.371 cv
40.199 383.375 40.172 383.367 40.148 383.344 cv
40.121 383.328 40.098 383.297 40.082 383.254 cv
40.063 383.215 40.051 383.16 40.043 383.09 cv
40.031 383.023 40.027 382.941 40.031 382.844 cv
40.027 382.777 40.031 382.719 40.039 382.668 cv
40.043 382.621 40.051 382.578 40.063 382.539 cv
40.07 382.504 40.082 382.469 40.105 382.437 cv
40.121 382.406 40.16 382.367 40.215 382.316 cv
40.27 382.273 40.363 382.211 40.496 382.125 cv
40.629 382.047 40.797 381.965 41.004 381.879 cv
41.203 381.801 41.426 381.734 41.672 381.68 cv
41.914 381.629 42.172 381.602 42.441 381.598 cv
42.867 381.602 43.238 381.66 43.563 381.777 cv
43.883 381.898 44.152 382.062 44.363 382.273 cv
44.574 382.484 44.73 382.73 44.836 383.004 cv
44.941 383.285 44.996 383.578 44.996 383.891 cv
44.996 384.172 44.969 384.453 44.918 384.734 cv
44.867 385.016 44.762 385.32 44.602 385.641 cv
44.438 385.969 44.203 386.328 43.902 386.727 cv
43.594 387.125 43.191 387.586 42.688 388.102 cv
41.289 389.562 li
45.133 389.562 li
45.164 389.562 45.199 389.574 45.238 389.594 cv
45.27 389.617 45.301 389.648 45.324 389.687 cv
45.348 389.73 45.363 389.781 45.379 389.84 cv
45.387 389.902 45.395 389.973 45.398 390.055 cv
cp
f
32.004 337.148 mo
46.192 337.148 li
46.192 354.238 li
32.004 354.238 li
cp
0 0 0 0 cmyk
ef
38.34 350.055 mo
38.34 350.145 38.332 350.215 38.316 350.273 cv
38.301 350.336 38.281 350.387 38.262 350.418 cv
38.238 350.457 38.211 350.48 38.184 350.496 cv
38.152 350.512 38.125 350.52 38.094 350.52 cv
33.48 350.52 li
33.445 350.52 33.414 350.512 33.391 350.496 cv
33.359 350.48 33.336 350.457 33.313 350.418 cv
33.285 350.387 33.266 350.336 33.254 350.273 cv
33.238 350.215 33.23 350.145 33.234 350.055 cv
33.23 349.977 33.238 349.906 33.254 349.844 cv
33.266 349.789 33.281 349.738 33.305 349.699 cv
33.324 349.66 33.348 349.633 33.379 349.609 cv
33.406 349.594 33.441 349.582 33.48 349.578 cv
35.324 349.578 li
35.324 342.859 li
33.617 343.879 li
33.527 343.926 33.457 343.953 33.406 343.961 cv
33.352 343.973 33.309 343.961 33.281 343.93 cv
33.246 343.902 33.223 343.852 33.215 343.781 cv
33.199 343.715 33.195 343.629 33.199 343.523 cv
33.195 343.445 33.199 343.379 33.207 343.324 cv
33.215 343.27 33.223 343.227 33.238 343.187 cv
33.25 343.156 33.27 343.125 33.297 343.094 cv
33.32 343.07 33.355 343.043 33.398 343.012 cv
35.43 341.707 li
35.445 341.695 35.469 341.687 35.496 341.676 cv
35.523 341.668 35.559 341.656 35.602 341.648 cv
35.641 341.641 35.688 341.637 35.746 341.629 cv
35.797 341.629 35.867 341.625 35.949 341.625 cv
36.059 341.625 36.148 341.633 36.223 341.641 cv
36.293 341.652 36.352 341.664 36.395 341.676 cv
36.434 341.695 36.461 341.715 36.477 341.738 cv
36.488 341.766 36.492 341.793 36.496 341.816 cv
36.496 349.578 li
38.094 349.578 li
38.129 349.582 38.16 349.594 38.195 349.609 cv
38.223 349.633 38.25 349.66 38.273 349.699 cv
38.293 349.738 38.309 349.789 38.32 349.844 cv
38.332 349.906 38.34 349.977 38.34 350.055 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
45.621 347.66 mo
45.617 348.047 45.559 348.422 45.441 348.781 cv
45.324 349.145 45.141 349.465 44.898 349.738 cv
44.648 350.02 44.34 350.238 43.965 350.402 cv
43.586 350.566 43.137 350.648 42.625 350.648 cv
42.254 350.648 41.93 350.605 41.648 350.512 cv
41.363 350.426 41.117 350.297 40.91 350.125 cv
40.699 349.961 40.527 349.754 40.391 349.504 cv
40.25 349.262 40.137 348.98 40.055 348.664 cv
39.969 348.352 39.91 348.008 39.875 347.633 cv
39.836 347.262 39.816 346.859 39.82 346.43 cv
39.816 346.055 39.836 345.676 39.879 345.285 cv
39.918 344.902 39.992 344.527 40.098 344.164 cv
40.203 343.809 40.344 343.473 40.527 343.152 cv
40.703 342.84 40.93 342.562 41.203 342.324 cv
41.473 342.094 41.797 341.91 42.176 341.77 cv
42.551 341.637 42.988 341.566 43.492 341.562 cv
43.656 341.566 43.828 341.578 44.004 341.594 cv
44.176 341.617 44.336 341.645 44.48 341.676 cv
44.625 341.715 44.746 341.75 44.848 341.789 cv
44.945 341.832 45.012 341.867 45.047 341.891 cv
45.078 341.918 45.102 341.945 45.121 341.973 cv
45.133 342.004 45.145 342.035 45.156 342.066 cv
45.164 342.102 45.172 342.141 45.18 342.184 cv
45.18 342.227 45.184 342.277 45.188 342.34 cv
45.184 342.426 45.184 342.5 45.184 342.555 cv
45.18 342.617 45.168 342.664 45.156 342.695 cv
45.137 342.734 45.117 342.762 45.094 342.777 cv
45.066 342.801 45.035 342.809 44.996 342.805 cv
44.941 342.809 44.871 342.793 44.789 342.758 cv
44.699 342.73 44.594 342.695 44.477 342.652 cv
44.352 342.617 44.203 342.582 44.027 342.547 cv
43.852 342.52 43.648 342.504 43.418 342.5 cv
42.992 342.504 42.629 342.59 42.324 342.758 cv
42.02 342.934 41.77 343.164 41.578 343.453 cv
41.383 343.746 41.238 344.086 41.148 344.469 cv
41.051 344.855 41 345.258 40.988 345.672 cv
41.105 345.609 41.238 345.539 41.387 345.469 cv
41.535 345.402 41.695 345.344 41.871 345.285 cv
42.043 345.234 42.227 345.187 42.426 345.152 cv
42.621 345.117 42.832 345.102 43.055 345.098 cv
43.531 345.102 43.934 345.164 44.262 345.293 cv
44.586 345.426 44.852 345.609 45.059 345.836 cv
45.258 346.07 45.402 346.34 45.492 346.648 cv
45.574 346.961 45.617 347.297 45.621 347.66 cv
cp
44.434 347.77 mo
44.434 347.508 44.406 347.266 44.355 347.047 cv
44.301 346.832 44.215 346.648 44.094 346.5 cv
43.969 346.352 43.805 346.238 43.602 346.152 cv
43.395 346.074 43.141 346.031 42.844 346.027 cv
42.672 346.031 42.504 346.047 42.336 346.074 cv
42.168 346.105 42.004 346.145 41.852 346.195 cv
41.691 346.25 41.543 346.312 41.398 346.379 cv
41.254 346.453 41.121 346.531 41.008 346.609 cv
41.004 347.199 41.043 347.687 41.121 348.082 cv
41.195 348.48 41.305 348.801 41.449 349.035 cv
41.59 349.277 41.77 349.445 41.984 349.547 cv
42.195 349.648 42.445 349.699 42.734 349.699 cv
43.023 349.699 43.273 349.645 43.492 349.535 cv
43.703 349.426 43.883 349.281 44.023 349.098 cv
44.164 348.914 44.266 348.707 44.336 348.477 cv
44.398 348.246 44.434 348.012 44.434 347.77 cv
cp
f
32.004 297.129 mo
46.192 297.129 li
46.192 314.219 li
32.004 314.219 li
cp
0 0 0 0 cmyk
ef
38.32 309.977 mo
38.316 310.059 38.309 310.133 38.301 310.195 cv
38.285 310.262 38.27 310.316 38.254 310.355 cv
38.23 310.402 38.203 310.434 38.172 310.449 cv
38.133 310.473 38.098 310.48 38.059 310.48 cv
33.18 310.48 li
33.109 310.48 33.055 310.473 33.012 310.457 cv
32.961 310.441 32.918 310.418 32.887 310.379 cv
32.848 310.348 32.824 310.293 32.813 310.223 cv
32.793 310.152 32.785 310.07 32.789 309.969 cv
32.785 309.883 32.789 309.801 32.801 309.73 cv
32.805 309.664 32.82 309.605 32.848 309.551 cv
32.867 309.5 32.895 309.445 32.934 309.391 cv
32.965 309.34 33.012 309.285 33.07 309.223 cv
34.836 307.41 li
35.242 306.992 35.566 306.617 35.816 306.285 cv
36.059 305.953 36.25 305.652 36.387 305.375 cv
36.52 305.105 36.609 304.855 36.652 304.633 cv
36.691 304.41 36.711 304.203 36.715 304.004 cv
36.711 303.809 36.68 303.621 36.617 303.445 cv
36.551 303.273 36.453 303.121 36.332 302.988 cv
36.203 302.859 36.047 302.754 35.863 302.672 cv
35.672 302.598 35.457 302.559 35.215 302.555 cv
34.926 302.559 34.668 302.598 34.441 302.672 cv
34.211 302.754 34.012 302.84 33.844 302.926 cv
33.668 303.02 33.523 303.102 33.414 303.176 cv
33.297 303.258 33.211 303.297 33.156 303.293 cv
33.121 303.297 33.094 303.289 33.07 303.266 cv
33.043 303.25 33.02 303.219 33.004 303.176 cv
32.984 303.137 32.973 303.082 32.965 303.012 cv
32.953 302.945 32.949 302.863 32.953 302.766 cv
32.949 302.699 32.953 302.641 32.961 302.59 cv
32.965 302.543 32.973 302.5 32.984 302.461 cv
32.992 302.426 33.004 302.391 33.027 302.359 cv
33.043 302.328 33.082 302.289 33.137 302.238 cv
33.191 302.195 33.285 302.133 33.418 302.047 cv
33.551 301.969 33.719 301.887 33.926 301.801 cv
34.125 301.723 34.348 301.656 34.594 301.602 cv
34.836 301.551 35.094 301.523 35.363 301.52 cv
35.789 301.523 36.16 301.582 36.484 301.699 cv
36.805 301.82 37.074 301.984 37.285 302.195 cv
37.496 302.406 37.652 302.652 37.758 302.926 cv
37.863 303.207 37.918 303.5 37.918 303.812 cv
37.918 304.094 37.891 304.375 37.84 304.656 cv
37.789 304.937 37.684 305.242 37.523 305.562 cv
37.359 305.891 37.125 306.25 36.824 306.648 cv
36.516 307.047 36.113 307.508 35.609 308.023 cv
34.211 309.484 li
38.055 309.484 li
38.086 309.484 38.121 309.496 38.16 309.516 cv
38.191 309.539 38.223 309.57 38.246 309.609 cv
38.27 309.652 38.285 309.703 38.301 309.762 cv
38.309 309.824 38.316 309.895 38.32 309.977 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
45.691 306.043 mo
45.688 306.727 45.633 307.344 45.531 307.902 cv
45.422 308.461 45.246 308.941 44.996 309.344 cv
44.746 309.75 44.422 310.062 44.023 310.281 cv
43.625 310.5 43.129 310.609 42.543 310.609 cv
41.984 310.609 41.52 310.512 41.141 310.312 cv
40.758 310.117 40.449 309.828 40.223 309.441 cv
39.988 309.059 39.824 308.582 39.727 308.02 cv
39.629 307.457 39.582 306.812 39.582 306.086 cv
39.582 305.414 39.637 304.797 39.746 304.23 cv
39.855 303.672 40.031 303.191 40.277 302.785 cv
40.52 302.387 40.844 302.074 41.246 301.852 cv
41.645 301.633 42.137 301.523 42.723 301.52 cv
43.281 301.523 43.75 301.621 44.129 301.816 cv
44.508 302.016 44.813 302.309 45.047 302.691 cv
45.277 303.078 45.441 303.551 45.543 304.109 cv
45.637 304.676 45.688 305.32 45.691 306.043 cv
cp
44.488 306.125 mo
44.484 305.687 44.469 305.289 44.441 304.937 cv
44.406 304.586 44.359 304.277 44.301 304.008 cv
44.238 303.742 44.16 303.512 44.063 303.316 cv
43.961 303.125 43.844 302.965 43.711 302.84 cv
43.574 302.715 43.418 302.625 43.242 302.566 cv
43.066 302.512 42.871 302.484 42.652 302.48 cv
42.266 302.484 41.949 302.574 41.711 302.754 cv
41.465 302.937 41.277 303.187 41.141 303.504 cv
41 303.824 40.902 304.199 40.855 304.625 cv
40.801 305.055 40.777 305.512 40.781 306.004 cv
40.777 306.664 40.813 307.227 40.883 307.687 cv
40.953 308.152 41.059 308.527 41.207 308.816 cv
41.352 309.105 41.543 309.316 41.773 309.449 cv
42.004 309.582 42.281 309.648 42.613 309.648 cv
42.863 309.648 43.09 309.609 43.285 309.527 cv
43.477 309.445 43.641 309.328 43.781 309.176 cv
43.918 309.023 44.035 308.84 44.129 308.625 cv
44.219 308.414 44.289 308.176 44.348 307.914 cv
44.398 307.656 44.438 307.375 44.457 307.07 cv
44.477 306.77 44.484 306.457 44.488 306.125 cv
cp
f
32.004 257.102 mo
46.192 257.102 li
46.192 274.192 li
32.004 274.192 li
cp
0 0 0 0 cmyk
ef
38.32 269.957 mo
38.316 270.039 38.309 270.113 38.301 270.176 cv
38.285 270.242 38.27 270.297 38.254 270.336 cv
38.23 270.383 38.203 270.414 38.172 270.43 cv
38.133 270.453 38.098 270.461 38.059 270.461 cv
33.18 270.461 li
33.109 270.461 33.055 270.453 33.012 270.437 cv
32.961 270.422 32.918 270.398 32.887 270.359 cv
32.848 270.328 32.824 270.273 32.813 270.203 cv
32.793 270.133 32.785 270.051 32.789 269.949 cv
32.785 269.863 32.789 269.781 32.801 269.711 cv
32.805 269.645 32.82 269.586 32.848 269.531 cv
32.867 269.48 32.895 269.426 32.934 269.371 cv
32.965 269.32 33.012 269.266 33.07 269.203 cv
34.836 267.391 li
35.242 266.973 35.566 266.598 35.816 266.266 cv
36.059 265.934 36.25 265.633 36.387 265.355 cv
36.52 265.086 36.609 264.836 36.652 264.613 cv
36.691 264.391 36.711 264.184 36.715 263.984 cv
36.711 263.789 36.68 263.602 36.617 263.426 cv
36.551 263.254 36.453 263.102 36.332 262.969 cv
36.203 262.84 36.047 262.734 35.863 262.652 cv
35.672 262.578 35.457 262.539 35.215 262.535 cv
34.926 262.539 34.668 262.578 34.441 262.652 cv
34.211 262.734 34.012 262.82 33.844 262.906 cv
33.668 263 33.523 263.082 33.414 263.156 cv
33.297 263.238 33.211 263.277 33.156 263.273 cv
33.121 263.277 33.094 263.27 33.07 263.246 cv
33.043 263.23 33.02 263.199 33.004 263.156 cv
32.984 263.117 32.973 263.062 32.965 262.992 cv
32.953 262.926 32.949 262.844 32.953 262.746 cv
32.949 262.68 32.953 262.621 32.961 262.57 cv
32.965 262.523 32.973 262.48 32.984 262.441 cv
32.992 262.406 33.004 262.371 33.027 262.34 cv
33.043 262.309 33.082 262.27 33.137 262.219 cv
33.191 262.176 33.285 262.113 33.418 262.027 cv
33.551 261.949 33.719 261.867 33.926 261.781 cv
34.125 261.703 34.348 261.637 34.594 261.582 cv
34.836 261.531 35.094 261.504 35.363 261.5 cv
35.789 261.504 36.16 261.562 36.484 261.68 cv
36.805 261.801 37.074 261.965 37.285 262.176 cv
37.496 262.387 37.652 262.633 37.758 262.906 cv
37.863 263.187 37.918 263.48 37.918 263.793 cv
37.918 264.074 37.891 264.355 37.84 264.637 cv
37.789 264.918 37.684 265.223 37.523 265.543 cv
37.359 265.871 37.125 266.23 36.824 266.629 cv
36.516 267.027 36.113 267.488 35.609 268.004 cv
34.211 269.465 li
38.055 269.465 li
38.086 269.465 38.121 269.477 38.16 269.496 cv
38.191 269.52 38.223 269.551 38.246 269.59 cv
38.27 269.633 38.285 269.684 38.301 269.742 cv
38.309 269.805 38.316 269.875 38.32 269.957 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
45.773 267.949 mo
45.77 268.102 45.746 268.219 45.703 268.305 cv
45.656 268.391 45.594 268.434 45.512 268.434 cv
44.516 268.434 li
44.516 270.289 li
44.516 270.328 44.504 270.359 44.488 270.383 cv
44.465 270.414 44.434 270.434 44.391 270.449 cv
44.34 270.465 44.277 270.477 44.207 270.484 cv
44.129 270.492 44.035 270.496 43.918 270.5 cv
43.805 270.496 43.711 270.492 43.637 270.484 cv
43.559 270.477 43.496 270.465 43.457 270.449 cv
43.41 270.434 43.383 270.414 43.367 270.383 cv
43.352 270.359 43.344 270.328 43.344 270.289 cv
43.344 268.434 li
39.73 268.434 li
39.672 268.434 39.629 268.43 39.594 268.414 cv
39.555 268.406 39.52 268.379 39.496 268.34 cv
39.465 268.305 39.445 268.254 39.434 268.184 cv
39.422 268.117 39.418 268.027 39.418 267.914 cv
39.418 267.832 39.418 267.754 39.422 267.684 cv
39.426 267.617 39.434 267.555 39.449 267.496 cv
39.461 267.441 39.48 267.387 39.504 267.332 cv
39.523 267.281 39.551 267.227 39.586 267.164 cv
42.734 261.797 li
42.758 261.762 42.789 261.73 42.836 261.703 cv
42.875 261.676 42.934 261.652 43.004 261.633 cv
43.074 261.617 43.16 261.605 43.262 261.598 cv
43.363 261.594 43.484 261.59 43.625 261.586 cv
43.777 261.59 43.91 261.598 44.023 261.605 cv
44.137 261.621 44.227 261.633 44.301 261.648 cv
44.367 261.668 44.422 261.695 44.461 261.723 cv
44.496 261.754 44.516 261.785 44.516 261.824 cv
44.516 267.465 li
45.512 267.465 li
45.59 267.469 45.652 267.508 45.699 267.586 cv
45.746 267.668 45.77 267.789 45.773 267.949 cv
cp
43.344 262.617 mo
43.328 262.617 li
40.488 267.465 li
43.344 267.465 li
cp
f
32.004 217.07 mo
46.192 217.07 li
46.192 234.16 li
32.004 234.16 li
cp
0 0 0 0 cmyk
ef
38.32 229.918 mo
38.316 230 38.309 230.074 38.301 230.137 cv
38.285 230.203 38.27 230.258 38.254 230.297 cv
38.23 230.344 38.203 230.375 38.172 230.391 cv
38.133 230.414 38.098 230.422 38.059 230.422 cv
33.18 230.422 li
33.109 230.422 33.055 230.414 33.012 230.398 cv
32.961 230.383 32.918 230.359 32.887 230.32 cv
32.848 230.289 32.824 230.234 32.813 230.164 cv
32.793 230.094 32.785 230.012 32.789 229.91 cv
32.785 229.824 32.789 229.742 32.801 229.672 cv
32.805 229.605 32.82 229.547 32.848 229.492 cv
32.867 229.441 32.895 229.387 32.934 229.332 cv
32.965 229.281 33.012 229.227 33.07 229.164 cv
34.836 227.352 li
35.242 226.934 35.566 226.559 35.816 226.227 cv
36.059 225.895 36.25 225.594 36.387 225.316 cv
36.52 225.047 36.609 224.797 36.652 224.574 cv
36.691 224.352 36.711 224.145 36.715 223.945 cv
36.711 223.75 36.68 223.562 36.617 223.387 cv
36.551 223.215 36.453 223.062 36.332 222.93 cv
36.203 222.801 36.047 222.695 35.863 222.613 cv
35.672 222.539 35.457 222.5 35.215 222.496 cv
34.926 222.5 34.668 222.539 34.441 222.613 cv
34.211 222.695 34.012 222.781 33.844 222.867 cv
33.668 222.961 33.523 223.043 33.414 223.117 cv
33.297 223.199 33.211 223.238 33.156 223.234 cv
33.121 223.238 33.094 223.23 33.07 223.207 cv
33.043 223.191 33.02 223.16 33.004 223.117 cv
32.984 223.078 32.973 223.023 32.965 222.953 cv
32.953 222.887 32.949 222.805 32.953 222.707 cv
32.949 222.641 32.953 222.582 32.961 222.531 cv
32.965 222.484 32.973 222.441 32.984 222.402 cv
32.992 222.367 33.004 222.332 33.027 222.301 cv
33.043 222.27 33.082 222.23 33.137 222.18 cv
33.191 222.137 33.285 222.074 33.418 221.988 cv
33.551 221.91 33.719 221.828 33.926 221.742 cv
34.125 221.664 34.348 221.598 34.594 221.543 cv
34.836 221.492 35.094 221.465 35.363 221.461 cv
35.789 221.465 36.16 221.523 36.484 221.641 cv
36.805 221.762 37.074 221.926 37.285 222.137 cv
37.496 222.348 37.652 222.594 37.758 222.867 cv
37.863 223.148 37.918 223.441 37.918 223.754 cv
37.918 224.035 37.891 224.316 37.84 224.598 cv
37.789 224.879 37.684 225.184 37.523 225.504 cv
37.359 225.832 37.125 226.191 36.824 226.59 cv
36.516 226.988 36.113 227.449 35.609 227.965 cv
34.211 229.426 li
38.055 229.426 li
38.086 229.426 38.121 229.437 38.16 229.457 cv
38.191 229.48 38.223 229.512 38.246 229.551 cv
38.27 229.594 38.285 229.645 38.301 229.703 cv
38.309 229.766 38.316 229.836 38.32 229.918 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
45.602 228.156 mo
45.598 228.543 45.531 228.883 45.395 229.18 cv
45.258 229.477 45.059 229.73 44.805 229.934 cv
44.547 230.141 44.23 230.293 43.855 230.395 cv
43.473 230.5 43.043 230.551 42.559 230.551 cv
42.102 230.551 41.691 230.504 41.336 230.41 cv
40.973 230.316 40.668 230.176 40.422 229.988 cv
40.168 229.801 39.977 229.57 39.848 229.297 cv
39.711 229.023 39.645 228.711 39.648 228.359 cv
39.645 228.086 39.691 227.832 39.785 227.598 cv
39.875 227.363 40.004 227.148 40.176 226.953 cv
40.344 226.758 40.555 226.578 40.809 226.406 cv
41.055 226.238 41.34 226.074 41.656 225.918 cv
41.383 225.777 41.141 225.629 40.93 225.469 cv
40.719 225.316 40.539 225.145 40.398 224.957 cv
40.25 224.773 40.141 224.578 40.07 224.367 cv
39.992 224.164 39.957 223.934 39.957 223.684 cv
39.957 223.375 40.012 223.086 40.125 222.812 cv
40.234 222.543 40.402 222.309 40.629 222.109 cv
40.852 221.91 41.137 221.754 41.488 221.637 cv
41.832 221.523 42.238 221.465 42.707 221.461 cv
43.148 221.465 43.535 221.516 43.863 221.621 cv
44.188 221.73 44.457 221.879 44.668 222.059 cv
44.879 222.246 45.035 222.461 45.137 222.707 cv
45.238 222.961 45.289 223.23 45.289 223.516 cv
45.289 223.75 45.25 223.973 45.176 224.184 cv
45.098 224.398 44.988 224.602 44.844 224.793 cv
44.695 224.984 44.516 225.164 44.309 225.328 cv
44.094 225.496 43.852 225.648 43.582 225.793 cv
43.902 225.953 44.191 226.117 44.445 226.285 cv
44.695 226.457 44.906 226.641 45.078 226.828 cv
45.25 227.023 45.379 227.227 45.469 227.441 cv
45.555 227.66 45.598 227.898 45.602 228.156 cv
cp
44.129 223.621 mo
44.129 223.434 44.094 223.262 44.027 223.105 cv
43.961 222.953 43.863 222.82 43.738 222.707 cv
43.605 222.602 43.449 222.52 43.262 222.461 cv
43.074 222.406 42.859 222.379 42.617 222.375 cv
42.125 222.379 41.754 222.488 41.504 222.711 cv
41.25 222.934 41.121 223.238 41.125 223.621 cv
41.121 223.805 41.152 223.973 41.215 224.121 cv
41.273 224.277 41.371 224.422 41.504 224.555 cv
41.633 224.695 41.797 224.828 41.996 224.953 cv
42.191 225.086 42.426 225.219 42.699 225.355 cv
43.16 225.121 43.512 224.859 43.758 224.57 cv
44.004 224.285 44.129 223.969 44.129 223.621 cv
cp
44.414 228.277 mo
44.41 228.07 44.371 227.883 44.297 227.711 cv
44.219 227.543 44.102 227.383 43.945 227.23 cv
43.785 227.086 43.59 226.941 43.359 226.801 cv
43.121 226.664 42.848 226.52 42.543 226.367 cv
42.254 226.508 42.004 226.652 41.789 226.793 cv
41.57 226.937 41.395 227.082 41.258 227.23 cv
41.117 227.383 41.012 227.539 40.941 227.703 cv
40.871 227.867 40.836 228.051 40.836 228.25 cv
40.836 228.695 40.984 229.039 41.289 229.277 cv
41.59 229.52 42.043 229.637 42.645 229.637 cv
43.227 229.637 43.668 229.516 43.965 229.273 cv
44.262 229.031 44.41 228.699 44.414 228.277 cv
cp
f
32.004 177.051 mo
46.192 177.051 li
46.192 194.141 li
32.004 194.141 li
cp
0 0 0 0 cmyk
ef
38.25 187.871 mo
38.246 188.281 38.176 188.645 38.039 188.969 cv
37.895 189.297 37.691 189.578 37.43 189.805 cv
37.164 190.039 36.84 190.215 36.453 190.34 cv
36.066 190.465 35.629 190.527 35.145 190.527 cv
34.848 190.527 34.57 190.504 34.316 190.457 cv
34.055 190.41 33.828 190.355 33.629 190.289 cv
33.426 190.223 33.258 190.152 33.129 190.082 cv
32.996 190.012 32.914 189.961 32.883 189.93 cv
32.848 189.898 32.82 189.867 32.805 189.832 cv
32.781 189.805 32.766 189.766 32.754 189.719 cv
32.738 189.672 32.727 189.617 32.723 189.551 cv
32.715 189.484 32.715 189.402 32.715 189.305 cv
32.715 189.145 32.73 189.031 32.762 188.965 cv
32.793 188.906 32.84 188.875 32.902 188.871 cv
32.945 188.875 33.027 188.91 33.152 188.98 cv
33.273 189.051 33.434 189.129 33.629 189.215 cv
33.82 189.301 34.043 189.379 34.305 189.449 cv
34.563 189.523 34.852 189.562 35.172 189.559 cv
35.477 189.562 35.75 189.523 35.984 189.445 cv
36.219 189.371 36.414 189.262 36.574 189.117 cv
36.73 188.977 36.848 188.809 36.93 188.613 cv
37.008 188.422 37.051 188.211 37.051 187.98 cv
37.051 187.734 37 187.508 36.898 187.305 cv
36.797 187.105 36.648 186.934 36.453 186.789 cv
36.258 186.645 36.016 186.535 35.734 186.453 cv
35.445 186.379 35.125 186.34 34.766 186.336 cv
33.898 186.336 li
33.859 186.34 33.82 186.332 33.785 186.312 cv
33.75 186.301 33.719 186.273 33.695 186.234 cv
33.668 186.199 33.648 186.152 33.633 186.094 cv
33.613 186.035 33.605 185.957 33.609 185.859 cv
33.605 185.777 33.613 185.707 33.629 185.645 cv
33.641 185.59 33.66 185.543 33.688 185.508 cv
33.711 185.477 33.738 185.453 33.773 185.434 cv
33.801 185.422 33.836 185.414 33.883 185.41 cv
34.652 185.41 li
34.953 185.414 35.223 185.375 35.461 185.293 cv
35.699 185.219 35.902 185.105 36.07 184.957 cv
36.234 184.812 36.363 184.641 36.453 184.437 cv
36.539 184.238 36.582 184.012 36.586 183.758 cv
36.582 183.578 36.551 183.402 36.496 183.234 cv
36.434 183.07 36.348 182.926 36.23 182.801 cv
36.113 182.68 35.961 182.582 35.777 182.512 cv
35.59 182.441 35.375 182.406 35.137 182.406 cv
34.871 182.406 34.629 182.449 34.41 182.527 cv
34.184 182.609 33.988 182.691 33.82 182.781 cv
33.645 182.875 33.5 182.961 33.391 183.039 cv
33.273 183.117 33.195 183.156 33.152 183.156 cv
33.117 183.156 33.09 183.152 33.066 183.141 cv
33.039 183.129 33.016 183.105 33.004 183.07 cv
32.984 183.039 32.973 182.992 32.969 182.93 cv
32.961 182.871 32.961 182.789 32.961 182.684 cv
32.961 182.617 32.961 182.559 32.965 182.504 cv
32.969 182.457 32.977 182.41 32.992 182.367 cv
33.004 182.332 33.023 182.297 33.043 182.262 cv
33.059 182.234 33.086 182.199 33.133 182.152 cv
33.172 182.113 33.262 182.051 33.395 181.965 cv
33.527 181.887 33.688 181.805 33.883 181.719 cv
34.074 181.641 34.301 181.574 34.555 181.52 cv
34.805 181.469 35.074 181.441 35.371 181.437 cv
35.777 181.441 36.137 181.492 36.449 181.594 cv
36.754 181.699 37.012 181.848 37.223 182.039 cv
37.426 182.23 37.582 182.457 37.688 182.723 cv
37.785 182.988 37.836 183.285 37.84 183.605 cv
37.836 183.887 37.801 184.145 37.73 184.383 cv
37.656 184.621 37.547 184.832 37.41 185.016 cv
37.266 185.203 37.094 185.359 36.891 185.488 cv
36.684 185.617 36.449 185.707 36.184 185.758 cv
36.184 185.77 li
36.488 185.801 36.766 185.879 37.02 186 cv
37.27 186.121 37.488 186.273 37.672 186.453 cv
37.852 186.641 37.992 186.852 38.098 187.094 cv
38.195 187.336 38.246 187.598 38.25 187.871 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
45.398 189.895 mo
45.395 189.977 45.387 190.051 45.379 190.113 cv
45.363 190.18 45.348 190.234 45.332 190.273 cv
45.309 190.32 45.281 190.352 45.25 190.367 cv
45.211 190.391 45.176 190.398 45.137 190.398 cv
40.258 190.398 li
40.188 190.398 40.133 190.391 40.09 190.375 cv
40.039 190.359 39.996 190.336 39.965 190.297 cv
39.926 190.266 39.902 190.211 39.891 190.141 cv
39.871 190.07 39.863 189.988 39.867 189.887 cv
39.863 189.801 39.867 189.719 39.879 189.648 cv
39.883 189.582 39.898 189.523 39.926 189.469 cv
39.945 189.418 39.973 189.363 40.012 189.309 cv
40.043 189.258 40.09 189.203 40.148 189.141 cv
41.914 187.328 li
42.32 186.91 42.645 186.535 42.895 186.203 cv
43.137 185.871 43.328 185.57 43.465 185.293 cv
43.598 185.023 43.688 184.773 43.73 184.551 cv
43.77 184.328 43.789 184.121 43.793 183.922 cv
43.789 183.727 43.758 183.539 43.695 183.363 cv
43.629 183.191 43.531 183.039 43.41 182.906 cv
43.281 182.777 43.125 182.672 42.941 182.59 cv
42.75 182.516 42.535 182.477 42.293 182.473 cv
42.004 182.477 41.746 182.516 41.52 182.59 cv
41.289 182.672 41.09 182.758 40.922 182.844 cv
40.746 182.937 40.602 183.02 40.492 183.094 cv
40.375 183.176 40.289 183.215 40.234 183.211 cv
40.199 183.215 40.172 183.207 40.148 183.184 cv
40.121 183.168 40.098 183.137 40.082 183.094 cv
40.063 183.055 40.051 183 40.043 182.93 cv
40.031 182.863 40.027 182.781 40.031 182.684 cv
40.027 182.617 40.031 182.559 40.039 182.508 cv
40.043 182.461 40.051 182.418 40.063 182.379 cv
40.07 182.344 40.082 182.309 40.105 182.277 cv
40.121 182.246 40.16 182.207 40.215 182.156 cv
40.27 182.113 40.363 182.051 40.496 181.965 cv
40.629 181.887 40.797 181.805 41.004 181.719 cv
41.203 181.641 41.426 181.574 41.672 181.52 cv
41.914 181.469 42.172 181.441 42.441 181.437 cv
42.867 181.441 43.238 181.5 43.563 181.617 cv
43.883 181.738 44.152 181.902 44.363 182.113 cv
44.574 182.324 44.73 182.57 44.836 182.844 cv
44.941 183.125 44.996 183.418 44.996 183.73 cv
44.996 184.012 44.969 184.293 44.918 184.574 cv
44.867 184.855 44.762 185.16 44.602 185.48 cv
44.438 185.809 44.203 186.168 43.902 186.566 cv
43.594 186.965 43.191 187.426 42.688 187.941 cv
41.289 189.402 li
45.133 189.402 li
45.164 189.402 45.199 189.414 45.238 189.434 cv
45.27 189.457 45.301 189.488 45.324 189.527 cv
45.348 189.57 45.363 189.621 45.379 189.68 cv
45.387 189.742 45.395 189.812 45.398 189.895 cv
cp
f
32.004 137.02 mo
46.192 137.02 li
46.192 154.11 li
32.004 154.11 li
cp
0 0 0 0 cmyk
ef
38.25 147.832 mo
38.246 148.242 38.176 148.605 38.039 148.93 cv
37.895 149.258 37.691 149.539 37.43 149.766 cv
37.164 150 36.84 150.176 36.453 150.301 cv
36.066 150.426 35.629 150.488 35.145 150.488 cv
34.848 150.488 34.57 150.465 34.316 150.418 cv
34.055 150.371 33.828 150.316 33.629 150.25 cv
33.426 150.184 33.258 150.113 33.129 150.043 cv
32.996 149.973 32.914 149.922 32.883 149.891 cv
32.848 149.859 32.82 149.828 32.805 149.793 cv
32.781 149.766 32.766 149.727 32.754 149.68 cv
32.738 149.633 32.727 149.578 32.723 149.512 cv
32.715 149.445 32.715 149.363 32.715 149.266 cv
32.715 149.105 32.73 148.992 32.762 148.926 cv
32.793 148.867 32.84 148.836 32.902 148.832 cv
32.945 148.836 33.027 148.871 33.152 148.941 cv
33.273 149.012 33.434 149.09 33.629 149.176 cv
33.82 149.262 34.043 149.34 34.305 149.41 cv
34.563 149.484 34.852 149.523 35.172 149.52 cv
35.477 149.523 35.75 149.484 35.984 149.406 cv
36.219 149.332 36.414 149.223 36.574 149.078 cv
36.73 148.937 36.848 148.77 36.93 148.574 cv
37.008 148.383 37.051 148.172 37.051 147.941 cv
37.051 147.695 37 147.469 36.898 147.266 cv
36.797 147.066 36.648 146.895 36.453 146.75 cv
36.258 146.605 36.016 146.496 35.734 146.414 cv
35.445 146.34 35.125 146.301 34.766 146.297 cv
33.898 146.297 li
33.859 146.301 33.82 146.293 33.785 146.273 cv
33.75 146.262 33.719 146.234 33.695 146.195 cv
33.668 146.16 33.648 146.113 33.633 146.055 cv
33.613 145.996 33.605 145.918 33.609 145.82 cv
33.605 145.738 33.613 145.668 33.629 145.605 cv
33.641 145.551 33.66 145.504 33.688 145.469 cv
33.711 145.437 33.738 145.414 33.773 145.395 cv
33.801 145.383 33.836 145.375 33.883 145.371 cv
34.652 145.371 li
34.953 145.375 35.223 145.336 35.461 145.254 cv
35.699 145.18 35.902 145.066 36.07 144.918 cv
36.234 144.773 36.363 144.602 36.453 144.398 cv
36.539 144.199 36.582 143.973 36.586 143.719 cv
36.582 143.539 36.551 143.363 36.496 143.195 cv
36.434 143.031 36.348 142.887 36.23 142.762 cv
36.113 142.641 35.961 142.543 35.777 142.473 cv
35.59 142.402 35.375 142.367 35.137 142.367 cv
34.871 142.367 34.629 142.41 34.41 142.488 cv
34.184 142.57 33.988 142.652 33.82 142.742 cv
33.645 142.836 33.5 142.922 33.391 143 cv
33.273 143.078 33.195 143.117 33.152 143.117 cv
33.117 143.117 33.09 143.113 33.066 143.102 cv
33.039 143.09 33.016 143.066 33.004 143.031 cv
32.984 143 32.973 142.953 32.969 142.891 cv
32.961 142.832 32.961 142.75 32.961 142.645 cv
32.961 142.578 32.961 142.52 32.965 142.465 cv
32.969 142.418 32.977 142.371 32.992 142.328 cv
33.004 142.293 33.023 142.258 33.043 142.223 cv
33.059 142.195 33.086 142.16 33.133 142.113 cv
33.172 142.074 33.262 142.012 33.395 141.926 cv
33.527 141.848 33.688 141.766 33.883 141.68 cv
34.074 141.602 34.301 141.535 34.555 141.48 cv
34.805 141.43 35.074 141.402 35.371 141.398 cv
35.777 141.402 36.137 141.453 36.449 141.555 cv
36.754 141.66 37.012 141.809 37.223 142 cv
37.426 142.191 37.582 142.418 37.688 142.684 cv
37.785 142.949 37.836 143.246 37.84 143.566 cv
37.836 143.848 37.801 144.105 37.73 144.344 cv
37.656 144.582 37.547 144.793 37.41 144.977 cv
37.266 145.164 37.094 145.32 36.891 145.449 cv
36.684 145.578 36.449 145.668 36.184 145.719 cv
36.184 145.73 li
36.488 145.762 36.766 145.84 37.02 145.961 cv
37.27 146.082 37.488 146.234 37.672 146.414 cv
37.852 146.602 37.992 146.812 38.098 147.055 cv
38.195 147.297 38.246 147.559 38.25 147.832 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
45.621 147.5 mo
45.617 147.887 45.559 148.262 45.441 148.621 cv
45.324 148.984 45.141 149.305 44.898 149.578 cv
44.648 149.859 44.34 150.078 43.965 150.242 cv
43.586 150.406 43.137 150.488 42.625 150.488 cv
42.254 150.488 41.93 150.445 41.648 150.352 cv
41.363 150.266 41.117 150.137 40.91 149.965 cv
40.699 149.801 40.527 149.594 40.391 149.344 cv
40.25 149.102 40.137 148.82 40.055 148.504 cv
39.969 148.191 39.91 147.848 39.875 147.473 cv
39.836 147.102 39.816 146.699 39.82 146.27 cv
39.816 145.895 39.836 145.516 39.879 145.125 cv
39.918 144.742 39.992 144.367 40.098 144.004 cv
40.203 143.648 40.344 143.312 40.527 142.992 cv
40.703 142.68 40.93 142.402 41.203 142.164 cv
41.473 141.934 41.797 141.75 42.176 141.609 cv
42.551 141.477 42.988 141.406 43.492 141.402 cv
43.656 141.406 43.828 141.418 44.004 141.434 cv
44.176 141.457 44.336 141.484 44.48 141.516 cv
44.625 141.555 44.746 141.59 44.848 141.629 cv
44.945 141.672 45.012 141.707 45.047 141.73 cv
45.078 141.758 45.102 141.785 45.121 141.812 cv
45.133 141.844 45.145 141.875 45.156 141.906 cv
45.164 141.941 45.172 141.98 45.18 142.023 cv
45.18 142.066 45.184 142.117 45.188 142.18 cv
45.184 142.266 45.184 142.34 45.184 142.395 cv
45.18 142.457 45.168 142.504 45.156 142.535 cv
45.137 142.574 45.117 142.602 45.094 142.617 cv
45.066 142.641 45.035 142.648 44.996 142.645 cv
44.941 142.648 44.871 142.633 44.789 142.598 cv
44.699 142.57 44.594 142.535 44.477 142.492 cv
44.352 142.457 44.203 142.422 44.027 142.387 cv
43.852 142.359 43.648 142.344 43.418 142.34 cv
42.992 142.344 42.629 142.43 42.324 142.598 cv
42.02 142.773 41.77 143.004 41.578 143.293 cv
41.383 143.586 41.238 143.926 41.148 144.309 cv
41.051 144.695 41 145.098 40.988 145.512 cv
41.105 145.449 41.238 145.379 41.387 145.309 cv
41.535 145.242 41.695 145.184 41.871 145.125 cv
42.043 145.074 42.227 145.027 42.426 144.992 cv
42.621 144.957 42.832 144.941 43.055 144.937 cv
43.531 144.941 43.934 145.004 44.262 145.133 cv
44.586 145.266 44.852 145.449 45.059 145.676 cv
45.258 145.91 45.402 146.18 45.492 146.488 cv
45.574 146.801 45.617 147.137 45.621 147.5 cv
cp
44.434 147.609 mo
44.434 147.348 44.406 147.105 44.355 146.887 cv
44.301 146.672 44.215 146.488 44.094 146.34 cv
43.969 146.191 43.805 146.078 43.602 145.992 cv
43.395 145.914 43.141 145.871 42.844 145.867 cv
42.672 145.871 42.504 145.887 42.336 145.914 cv
42.168 145.945 42.004 145.984 41.852 146.035 cv
41.691 146.09 41.543 146.152 41.398 146.219 cv
41.254 146.293 41.121 146.371 41.008 146.449 cv
41.004 147.039 41.043 147.527 41.121 147.922 cv
41.195 148.32 41.305 148.641 41.449 148.875 cv
41.59 149.117 41.77 149.285 41.984 149.387 cv
42.195 149.488 42.445 149.539 42.734 149.539 cv
43.023 149.539 43.273 149.484 43.492 149.375 cv
43.703 149.266 43.883 149.121 44.023 148.937 cv
44.164 148.754 44.266 148.547 44.336 148.316 cv
44.398 148.086 44.434 147.852 44.434 147.609 cv
cp
f
32.004 96.988 mo
46.192 96.988 li
46.192 114.078 li
32.004 114.078 li
cp
0 0 0 0 cmyk
ef
38.695 107.809 mo
38.691 107.961 38.668 108.078 38.625 108.164 cv
38.578 108.25 38.516 108.293 38.434 108.293 cv
37.438 108.293 li
37.438 110.148 li
37.438 110.187 37.426 110.219 37.41 110.242 cv
37.387 110.273 37.355 110.293 37.313 110.309 cv
37.262 110.324 37.199 110.336 37.129 110.344 cv
37.051 110.352 36.957 110.355 36.84 110.359 cv
36.727 110.355 36.633 110.352 36.559 110.344 cv
36.48 110.336 36.418 110.324 36.379 110.309 cv
36.332 110.293 36.305 110.273 36.289 110.242 cv
36.273 110.219 36.266 110.187 36.266 110.148 cv
36.266 108.293 li
32.652 108.293 li
32.594 108.293 32.551 108.289 32.516 108.273 cv
32.477 108.266 32.441 108.238 32.418 108.199 cv
32.387 108.164 32.367 108.113 32.355 108.043 cv
32.344 107.977 32.34 107.887 32.34 107.773 cv
32.34 107.691 32.34 107.613 32.344 107.543 cv
32.348 107.477 32.355 107.414 32.371 107.355 cv
32.383 107.301 32.402 107.246 32.426 107.191 cv
32.445 107.141 32.473 107.086 32.508 107.023 cv
35.656 101.656 li
35.68 101.621 35.711 101.59 35.758 101.562 cv
35.797 101.535 35.855 101.512 35.926 101.492 cv
35.996 101.477 36.082 101.465 36.184 101.457 cv
36.285 101.453 36.406 101.449 36.547 101.445 cv
36.699 101.449 36.832 101.457 36.945 101.465 cv
37.059 101.48 37.148 101.492 37.223 101.508 cv
37.289 101.527 37.344 101.555 37.383 101.582 cv
37.418 101.613 37.438 101.645 37.438 101.684 cv
37.438 107.324 li
38.434 107.324 li
38.512 107.328 38.574 107.367 38.621 107.445 cv
38.668 107.527 38.691 107.648 38.695 107.809 cv
cp
36.266 102.477 mo
36.25 102.477 li
33.41 107.324 li
36.266 107.324 li
cp
.629236 .549432 .540154 .282963 cmyk
f
45.691 105.883 mo
45.688 106.566 45.633 107.184 45.531 107.742 cv
45.422 108.301 45.246 108.781 44.996 109.184 cv
44.746 109.59 44.422 109.902 44.023 110.121 cv
43.625 110.34 43.129 110.449 42.543 110.449 cv
41.984 110.449 41.52 110.352 41.141 110.152 cv
40.758 109.957 40.449 109.668 40.223 109.281 cv
39.988 108.898 39.824 108.422 39.727 107.859 cv
39.629 107.297 39.582 106.652 39.582 105.926 cv
39.582 105.254 39.637 104.637 39.746 104.07 cv
39.855 103.512 40.031 103.031 40.277 102.625 cv
40.52 102.227 40.844 101.914 41.246 101.691 cv
41.645 101.473 42.137 101.363 42.723 101.359 cv
43.281 101.363 43.75 101.461 44.129 101.656 cv
44.508 101.855 44.813 102.148 45.047 102.531 cv
45.277 102.918 45.441 103.391 45.543 103.949 cv
45.637 104.516 45.688 105.16 45.691 105.883 cv
cp
44.488 105.965 mo
44.484 105.527 44.469 105.129 44.441 104.777 cv
44.406 104.426 44.359 104.117 44.301 103.848 cv
44.238 103.582 44.16 103.352 44.063 103.156 cv
43.961 102.965 43.844 102.805 43.711 102.68 cv
43.574 102.555 43.418 102.465 43.242 102.406 cv
43.066 102.352 42.871 102.324 42.652 102.32 cv
42.266 102.324 41.949 102.414 41.711 102.594 cv
41.465 102.777 41.277 103.027 41.141 103.344 cv
41 103.664 40.902 104.039 40.855 104.465 cv
40.801 104.895 40.777 105.352 40.781 105.844 cv
40.777 106.504 40.813 107.066 40.883 107.527 cv
40.953 107.992 41.059 108.367 41.207 108.656 cv
41.352 108.945 41.543 109.156 41.773 109.289 cv
42.004 109.422 42.281 109.488 42.613 109.488 cv
42.863 109.488 43.09 109.449 43.285 109.367 cv
43.477 109.285 43.641 109.168 43.781 109.016 cv
43.918 108.863 44.035 108.68 44.129 108.465 cv
44.219 108.254 44.289 108.016 44.348 107.754 cv
44.398 107.496 44.438 107.215 44.457 106.91 cv
44.477 106.609 44.484 106.297 44.488 105.965 cv
cp
f
32.004 56.961 mo
46.192 56.961 li
46.192 74.051 li
32.004 74.051 li
cp
0 0 0 0 cmyk
ef
38.695 67.789 mo
38.691 67.941 38.668 68.059 38.625 68.145 cv
38.578 68.23 38.516 68.273 38.434 68.273 cv
37.438 68.273 li
37.438 70.129 li
37.438 70.168 37.426 70.199 37.41 70.223 cv
37.387 70.254 37.355 70.273 37.313 70.289 cv
37.262 70.305 37.199 70.316 37.129 70.324 cv
37.051 70.332 36.957 70.336 36.84 70.34 cv
36.727 70.336 36.633 70.332 36.559 70.324 cv
36.48 70.316 36.418 70.305 36.379 70.289 cv
36.332 70.273 36.305 70.254 36.289 70.223 cv
36.273 70.199 36.266 70.168 36.266 70.129 cv
36.266 68.273 li
32.652 68.273 li
32.594 68.273 32.551 68.27 32.516 68.254 cv
32.477 68.246 32.441 68.219 32.418 68.18 cv
32.387 68.145 32.367 68.094 32.355 68.023 cv
32.344 67.957 32.34 67.867 32.34 67.754 cv
32.34 67.672 32.34 67.594 32.344 67.523 cv
32.348 67.457 32.355 67.395 32.371 67.336 cv
32.383 67.281 32.402 67.227 32.426 67.172 cv
32.445 67.121 32.473 67.066 32.508 67.004 cv
35.656 61.637 li
35.68 61.602 35.711 61.57 35.758 61.543 cv
35.797 61.516 35.855 61.492 35.926 61.473 cv
35.996 61.457 36.082 61.445 36.184 61.437 cv
36.285 61.434 36.406 61.43 36.547 61.426 cv
36.699 61.43 36.832 61.437 36.945 61.445 cv
37.059 61.461 37.148 61.473 37.223 61.488 cv
37.289 61.508 37.344 61.535 37.383 61.562 cv
37.418 61.594 37.438 61.625 37.438 61.664 cv
37.438 67.305 li
38.434 67.305 li
38.512 67.309 38.574 67.348 38.621 67.426 cv
38.668 67.508 38.691 67.629 38.695 67.789 cv
cp
36.266 62.457 mo
36.25 62.457 li
33.41 67.305 li
36.266 67.305 li
cp
.629236 .549432 .540154 .282963 cmyk
f
45.773 67.789 mo
45.77 67.941 45.746 68.059 45.703 68.145 cv
45.656 68.23 45.594 68.273 45.512 68.273 cv
44.516 68.273 li
44.516 70.129 li
44.516 70.168 44.504 70.199 44.488 70.223 cv
44.465 70.254 44.434 70.273 44.391 70.289 cv
44.34 70.305 44.277 70.316 44.207 70.324 cv
44.129 70.332 44.035 70.336 43.918 70.34 cv
43.805 70.336 43.711 70.332 43.637 70.324 cv
43.559 70.316 43.496 70.305 43.457 70.289 cv
43.41 70.273 43.383 70.254 43.367 70.223 cv
43.352 70.199 43.344 70.168 43.344 70.129 cv
43.344 68.273 li
39.73 68.273 li
39.672 68.273 39.629 68.27 39.594 68.254 cv
39.555 68.246 39.52 68.219 39.496 68.18 cv
39.465 68.145 39.445 68.094 39.434 68.023 cv
39.422 67.957 39.418 67.867 39.418 67.754 cv
39.418 67.672 39.418 67.594 39.422 67.523 cv
39.426 67.457 39.434 67.395 39.449 67.336 cv
39.461 67.281 39.48 67.227 39.504 67.172 cv
39.523 67.121 39.551 67.066 39.586 67.004 cv
42.734 61.637 li
42.758 61.602 42.789 61.57 42.836 61.543 cv
42.875 61.516 42.934 61.492 43.004 61.473 cv
43.074 61.457 43.16 61.445 43.262 61.437 cv
43.363 61.434 43.484 61.43 43.625 61.426 cv
43.777 61.43 43.91 61.437 44.023 61.445 cv
44.137 61.461 44.227 61.473 44.301 61.488 cv
44.367 61.508 44.422 61.535 44.461 61.562 cv
44.496 61.594 44.516 61.625 44.516 61.664 cv
44.516 67.305 li
45.512 67.305 li
45.59 67.309 45.652 67.348 45.699 67.426 cv
45.746 67.508 45.77 67.629 45.773 67.789 cv
cp
43.344 62.457 mo
43.328 62.457 li
40.488 67.305 li
43.344 67.305 li
cp
f
32.004 16.941 mo
46.192 16.941 li
46.192 34.031 li
32.004 34.031 li
cp
0 0 0 0 cmyk
ef
38.695 27.75 mo
38.691 27.902 38.668 28.02 38.625 28.105 cv
38.578 28.191 38.516 28.234 38.434 28.234 cv
37.438 28.234 li
37.438 30.09 li
37.438 30.129 37.426 30.16 37.41 30.184 cv
37.387 30.215 37.355 30.234 37.313 30.25 cv
37.262 30.266 37.199 30.277 37.129 30.285 cv
37.051 30.293 36.957 30.297 36.84 30.301 cv
36.727 30.297 36.633 30.293 36.559 30.285 cv
36.48 30.277 36.418 30.266 36.379 30.25 cv
36.332 30.234 36.305 30.215 36.289 30.184 cv
36.273 30.16 36.266 30.129 36.266 30.09 cv
36.266 28.234 li
32.652 28.234 li
32.594 28.234 32.551 28.23 32.516 28.215 cv
32.477 28.207 32.441 28.18 32.418 28.141 cv
32.387 28.105 32.367 28.055 32.355 27.984 cv
32.344 27.918 32.34 27.828 32.34 27.715 cv
32.34 27.633 32.34 27.555 32.344 27.484 cv
32.348 27.418 32.355 27.355 32.371 27.297 cv
32.383 27.242 32.402 27.187 32.426 27.133 cv
32.445 27.082 32.473 27.027 32.508 26.965 cv
35.656 21.598 li
35.68 21.562 35.711 21.531 35.758 21.504 cv
35.797 21.477 35.855 21.453 35.926 21.434 cv
35.996 21.418 36.082 21.406 36.184 21.398 cv
36.285 21.395 36.406 21.391 36.547 21.387 cv
36.699 21.391 36.832 21.398 36.945 21.406 cv
37.059 21.422 37.148 21.434 37.223 21.449 cv
37.289 21.469 37.344 21.496 37.383 21.523 cv
37.418 21.555 37.438 21.586 37.438 21.625 cv
37.438 27.266 li
38.434 27.266 li
38.512 27.27 38.574 27.309 38.621 27.387 cv
38.668 27.469 38.691 27.59 38.695 27.75 cv
cp
36.266 22.418 mo
36.25 22.418 li
33.41 27.266 li
36.266 27.266 li
cp
.629236 .549432 .540154 .282963 cmyk
f
45.602 27.996 mo
45.598 28.383 45.531 28.723 45.395 29.02 cv
45.258 29.316 45.059 29.57 44.805 29.773 cv
44.547 29.98 44.23 30.133 43.855 30.234 cv
43.473 30.34 43.043 30.391 42.559 30.391 cv
42.102 30.391 41.691 30.344 41.336 30.25 cv
40.973 30.156 40.668 30.016 40.422 29.828 cv
40.168 29.641 39.977 29.41 39.848 29.137 cv
39.711 28.863 39.645 28.551 39.648 28.199 cv
39.645 27.926 39.691 27.672 39.785 27.437 cv
39.875 27.203 40.004 26.988 40.176 26.793 cv
40.344 26.598 40.555 26.418 40.809 26.246 cv
41.055 26.078 41.34 25.914 41.656 25.758 cv
41.383 25.617 41.141 25.469 40.93 25.309 cv
40.719 25.156 40.539 24.984 40.398 24.797 cv
40.25 24.613 40.141 24.418 40.07 24.207 cv
39.992 24.004 39.957 23.773 39.957 23.523 cv
39.957 23.215 40.012 22.926 40.125 22.652 cv
40.234 22.383 40.402 22.148 40.629 21.949 cv
40.852 21.75 41.137 21.594 41.488 21.477 cv
41.832 21.363 42.238 21.305 42.707 21.301 cv
43.148 21.305 43.535 21.355 43.863 21.461 cv
44.188 21.57 44.457 21.719 44.668 21.898 cv
44.879 22.086 45.035 22.301 45.137 22.547 cv
45.238 22.801 45.289 23.07 45.289 23.355 cv
45.289 23.59 45.25 23.812 45.176 24.023 cv
45.098 24.238 44.988 24.441 44.844 24.633 cv
44.695 24.824 44.516 25.004 44.309 25.168 cv
44.094 25.336 43.852 25.488 43.582 25.633 cv
43.902 25.793 44.191 25.957 44.445 26.125 cv
44.695 26.297 44.906 26.48 45.078 26.668 cv
45.25 26.863 45.379 27.066 45.469 27.281 cv
45.555 27.5 45.598 27.738 45.602 27.996 cv
cp
44.129 23.461 mo
44.129 23.273 44.094 23.102 44.027 22.945 cv
43.961 22.793 43.863 22.66 43.738 22.547 cv
43.605 22.441 43.449 22.359 43.262 22.301 cv
43.074 22.246 42.859 22.219 42.617 22.215 cv
42.125 22.219 41.754 22.328 41.504 22.551 cv
41.25 22.773 41.121 23.078 41.125 23.461 cv
41.121 23.645 41.152 23.812 41.215 23.961 cv
41.273 24.117 41.371 24.262 41.504 24.395 cv
41.633 24.535 41.797 24.668 41.996 24.793 cv
42.191 24.926 42.426 25.059 42.699 25.195 cv
43.16 24.961 43.512 24.699 43.758 24.41 cv
44.004 24.125 44.129 23.809 44.129 23.461 cv
cp
44.414 28.117 mo
44.41 27.91 44.371 27.723 44.297 27.551 cv
44.219 27.383 44.102 27.223 43.945 27.07 cv
43.785 26.926 43.59 26.781 43.359 26.641 cv
43.121 26.504 42.848 26.359 42.543 26.207 cv
42.254 26.348 42.004 26.492 41.789 26.633 cv
41.57 26.777 41.395 26.922 41.258 27.07 cv
41.117 27.223 41.012 27.379 40.941 27.543 cv
40.871 27.707 40.836 27.891 40.836 28.09 cv
40.836 28.535 40.984 28.879 41.289 29.117 cv
41.59 29.359 42.043 29.477 42.645 29.477 cv
43.227 29.477 43.668 29.355 43.965 29.113 cv
44.262 28.871 44.41 28.539 44.414 28.117 cv
cp
f
61.977 528.395 mo
61.977 528.484 61.969 528.555 61.953 528.613 cv
61.938 528.676 61.918 528.727 61.898 528.758 cv
61.875 528.797 61.848 528.82 61.82 528.836 cv
61.789 528.852 61.762 528.859 61.73 528.859 cv
57.117 528.859 li
57.082 528.859 57.051 528.852 57.027 528.836 cv
56.996 528.82 56.973 528.797 56.949 528.758 cv
56.922 528.727 56.902 528.676 56.891 528.613 cv
56.875 528.555 56.867 528.484 56.871 528.395 cv
56.867 528.316 56.875 528.246 56.891 528.184 cv
56.902 528.129 56.918 528.078 56.941 528.039 cv
56.961 528 56.984 527.973 57.016 527.949 cv
57.043 527.934 57.078 527.922 57.117 527.918 cv
58.961 527.918 li
58.961 521.199 li
57.254 522.219 li
57.164 522.266 57.094 522.293 57.043 522.301 cv
56.988 522.312 56.945 522.301 56.918 522.27 cv
56.883 522.242 56.859 522.191 56.852 522.121 cv
56.836 522.055 56.832 521.969 56.836 521.863 cv
56.832 521.785 56.836 521.719 56.844 521.664 cv
56.852 521.609 56.859 521.566 56.875 521.527 cv
56.887 521.496 56.906 521.465 56.934 521.434 cv
56.957 521.41 56.992 521.383 57.035 521.352 cv
59.066 520.047 li
59.082 520.035 59.105 520.027 59.133 520.016 cv
59.16 520.008 59.195 519.996 59.238 519.988 cv
59.277 519.98 59.324 519.977 59.383 519.969 cv
59.434 519.969 59.504 519.965 59.586 519.965 cv
59.695 519.965 59.785 519.973 59.859 519.98 cv
59.93 519.992 59.988 520.004 60.031 520.016 cv
60.07 520.035 60.098 520.055 60.113 520.078 cv
60.125 520.105 60.129 520.133 60.133 520.156 cv
60.133 527.918 li
61.73 527.918 li
61.766 527.922 61.797 527.934 61.832 527.949 cv
61.859 527.973 61.887 528 61.91 528.039 cv
61.93 528.078 61.945 528.129 61.957 528.184 cv
61.969 528.246 61.977 528.316 61.977 528.395 cv
cp
f
81.98 528.355 mo
81.977 528.437 81.969 528.512 81.961 528.574 cv
81.945 528.641 81.93 528.695 81.914 528.734 cv
81.891 528.781 81.863 528.812 81.832 528.828 cv
81.793 528.852 81.758 528.859 81.719 528.859 cv
76.84 528.859 li
76.77 528.859 76.715 528.852 76.672 528.836 cv
76.621 528.82 76.578 528.797 76.547 528.758 cv
76.508 528.727 76.484 528.672 76.473 528.602 cv
76.453 528.531 76.445 528.449 76.449 528.348 cv
76.445 528.262 76.449 528.18 76.461 528.109 cv
76.465 528.043 76.48 527.984 76.508 527.93 cv
76.527 527.879 76.555 527.824 76.594 527.77 cv
76.625 527.719 76.672 527.664 76.73 527.602 cv
78.496 525.789 li
78.902 525.371 79.227 524.996 79.477 524.664 cv
79.719 524.332 79.91 524.031 80.047 523.754 cv
80.18 523.484 80.27 523.234 80.313 523.012 cv
80.352 522.789 80.371 522.582 80.375 522.383 cv
80.371 522.187 80.34 522 80.277 521.824 cv
80.211 521.652 80.113 521.5 79.992 521.367 cv
79.863 521.238 79.707 521.133 79.523 521.051 cv
79.332 520.977 79.117 520.937 78.875 520.934 cv
78.586 520.937 78.328 520.977 78.102 521.051 cv
77.871 521.133 77.672 521.219 77.504 521.305 cv
77.328 521.398 77.184 521.48 77.074 521.555 cv
76.957 521.637 76.871 521.676 76.816 521.672 cv
76.781 521.676 76.754 521.668 76.73 521.645 cv
76.703 521.629 76.68 521.598 76.664 521.555 cv
76.645 521.516 76.633 521.461 76.625 521.391 cv
76.613 521.324 76.609 521.242 76.613 521.145 cv
76.609 521.078 76.613 521.02 76.621 520.969 cv
76.625 520.922 76.633 520.879 76.645 520.84 cv
76.652 520.805 76.664 520.77 76.688 520.738 cv
76.703 520.707 76.742 520.668 76.797 520.617 cv
76.852 520.574 76.945 520.512 77.078 520.426 cv
77.211 520.348 77.379 520.266 77.586 520.18 cv
77.785 520.102 78.008 520.035 78.254 519.98 cv
78.496 519.93 78.754 519.902 79.023 519.898 cv
79.449 519.902 79.82 519.961 80.145 520.078 cv
80.465 520.199 80.734 520.363 80.945 520.574 cv
81.156 520.785 81.313 521.031 81.418 521.305 cv
81.523 521.586 81.578 521.879 81.578 522.191 cv
81.578 522.473 81.551 522.754 81.5 523.035 cv
81.449 523.316 81.344 523.621 81.184 523.941 cv
81.02 524.27 80.785 524.629 80.484 525.027 cv
80.176 525.426 79.773 525.887 79.27 526.402 cv
77.871 527.863 li
81.715 527.863 li
81.746 527.863 81.781 527.875 81.82 527.895 cv
81.852 527.918 81.883 527.949 81.906 527.988 cv
81.93 528.031 81.945 528.082 81.961 528.141 cv
81.969 528.203 81.977 528.273 81.98 528.355 cv
cp
f
101.949 526.332 mo
101.945 526.742 101.875 527.105 101.738 527.43 cv
101.594 527.758 101.391 528.039 101.129 528.266 cv
100.863 528.5 100.539 528.676 100.152 528.801 cv
99.766 528.926 99.328 528.988 98.844 528.988 cv
98.547 528.988 98.27 528.965 98.016 528.918 cv
97.754 528.871 97.527 528.816 97.328 528.75 cv
97.125 528.684 96.957 528.613 96.828 528.543 cv
96.695 528.473 96.613 528.422 96.582 528.391 cv
96.547 528.359 96.52 528.328 96.504 528.293 cv
96.48 528.266 96.465 528.227 96.453 528.18 cv
96.438 528.133 96.426 528.078 96.422 528.012 cv
96.414 527.945 96.414 527.863 96.414 527.766 cv
96.414 527.605 96.43 527.492 96.461 527.426 cv
96.492 527.367 96.539 527.336 96.602 527.332 cv
96.645 527.336 96.727 527.371 96.852 527.441 cv
96.973 527.512 97.133 527.59 97.328 527.676 cv
97.52 527.762 97.742 527.84 98.004 527.91 cv
98.262 527.984 98.551 528.023 98.871 528.02 cv
99.176 528.023 99.449 527.984 99.684 527.906 cv
99.918 527.832 100.113 527.723 100.273 527.578 cv
100.43 527.437 100.547 527.27 100.629 527.074 cv
100.707 526.883 100.75 526.672 100.75 526.441 cv
100.75 526.195 100.699 525.969 100.598 525.766 cv
100.496 525.566 100.348 525.395 100.152 525.25 cv
99.957 525.105 99.715 524.996 99.434 524.914 cv
99.145 524.84 98.824 524.801 98.465 524.797 cv
97.598 524.797 li
97.559 524.801 97.52 524.793 97.484 524.773 cv
97.449 524.762 97.418 524.734 97.395 524.695 cv
97.367 524.66 97.348 524.613 97.332 524.555 cv
97.313 524.496 97.305 524.418 97.309 524.32 cv
97.305 524.238 97.313 524.168 97.328 524.105 cv
97.34 524.051 97.359 524.004 97.387 523.969 cv
97.41 523.937 97.438 523.914 97.473 523.895 cv
97.5 523.883 97.535 523.875 97.582 523.871 cv
98.352 523.871 li
98.652 523.875 98.922 523.836 99.16 523.754 cv
99.398 523.68 99.602 523.566 99.77 523.418 cv
99.934 523.273 100.063 523.102 100.152 522.898 cv
100.238 522.699 100.281 522.473 100.285 522.219 cv
100.281 522.039 100.25 521.863 100.195 521.695 cv
100.133 521.531 100.047 521.387 99.93 521.262 cv
99.813 521.141 99.66 521.043 99.477 520.973 cv
99.289 520.902 99.074 520.867 98.836 520.867 cv
98.57 520.867 98.328 520.91 98.109 520.988 cv
97.883 521.07 97.688 521.152 97.52 521.242 cv
97.344 521.336 97.199 521.422 97.09 521.5 cv
96.973 521.578 96.895 521.617 96.852 521.617 cv
96.816 521.617 96.789 521.613 96.766 521.602 cv
96.738 521.59 96.715 521.566 96.703 521.531 cv
96.684 521.5 96.672 521.453 96.668 521.391 cv
96.66 521.332 96.66 521.25 96.66 521.145 cv
96.66 521.078 96.66 521.02 96.664 520.965 cv
96.668 520.918 96.676 520.871 96.691 520.828 cv
96.703 520.793 96.723 520.758 96.742 520.723 cv
96.758 520.695 96.785 520.66 96.832 520.613 cv
96.871 520.574 96.961 520.512 97.094 520.426 cv
97.227 520.348 97.387 520.266 97.582 520.18 cv
97.773 520.102 98 520.035 98.254 519.98 cv
98.504 519.93 98.773 519.902 99.07 519.898 cv
99.477 519.902 99.836 519.953 100.148 520.055 cv
100.453 520.16 100.711 520.309 100.922 520.5 cv
101.125 520.691 101.281 520.918 101.387 521.184 cv
101.484 521.449 101.535 521.746 101.539 522.066 cv
101.535 522.348 101.5 522.605 101.43 522.844 cv
101.355 523.082 101.246 523.293 101.109 523.477 cv
100.965 523.664 100.793 523.82 100.59 523.949 cv
100.383 524.078 100.148 524.168 99.883 524.219 cv
99.883 524.23 li
100.188 524.262 100.465 524.34 100.719 524.461 cv
100.969 524.582 101.188 524.734 101.371 524.914 cv
101.551 525.102 101.691 525.312 101.797 525.555 cv
101.895 525.797 101.945 526.059 101.949 526.332 cv
cp
f
122.414 526.348 mo
122.41 526.5 122.387 526.617 122.344 526.703 cv
122.297 526.789 122.234 526.832 122.152 526.832 cv
121.156 526.832 li
121.156 528.687 li
121.156 528.727 121.145 528.758 121.129 528.781 cv
121.105 528.812 121.074 528.832 121.031 528.848 cv
120.98 528.863 120.918 528.875 120.848 528.883 cv
120.77 528.891 120.676 528.895 120.559 528.898 cv
120.445 528.895 120.352 528.891 120.277 528.883 cv
120.199 528.875 120.137 528.863 120.098 528.848 cv
120.051 528.832 120.023 528.812 120.008 528.781 cv
119.992 528.758 119.984 528.727 119.984 528.687 cv
119.984 526.832 li
116.371 526.832 li
116.313 526.832 116.27 526.828 116.234 526.812 cv
116.195 526.805 116.16 526.777 116.137 526.738 cv
116.105 526.703 116.086 526.652 116.074 526.582 cv
116.063 526.516 116.059 526.426 116.059 526.312 cv
116.059 526.23 116.059 526.152 116.063 526.082 cv
116.066 526.016 116.074 525.953 116.09 525.895 cv
116.102 525.84 116.121 525.785 116.145 525.73 cv
116.164 525.68 116.191 525.625 116.227 525.562 cv
119.375 520.195 li
119.398 520.16 119.43 520.129 119.477 520.102 cv
119.516 520.074 119.574 520.051 119.645 520.031 cv
119.715 520.016 119.801 520.004 119.902 519.996 cv
120.004 519.992 120.125 519.988 120.266 519.984 cv
120.418 519.988 120.551 519.996 120.664 520.004 cv
120.777 520.02 120.867 520.031 120.941 520.047 cv
121.008 520.066 121.063 520.094 121.102 520.121 cv
121.137 520.152 121.156 520.184 121.156 520.223 cv
121.156 525.863 li
122.152 525.863 li
122.23 525.867 122.293 525.906 122.34 525.984 cv
122.387 526.066 122.41 526.187 122.414 526.348 cv
cp
119.984 521.016 mo
119.969 521.016 li
117.129 525.863 li
119.984 525.863 li
cp
f
142.035 526.02 mo
142.031 526.496 141.953 526.918 141.797 527.285 cv
141.637 527.656 141.41 527.965 141.121 528.215 cv
140.824 528.469 140.477 528.664 140.078 528.793 cv
139.672 528.926 139.227 528.988 138.738 528.988 cv
138.461 528.988 138.203 528.969 137.961 528.93 cv
137.715 528.891 137.496 528.844 137.305 528.789 cv
137.113 528.734 136.953 528.68 136.832 528.621 cv
136.707 528.57 136.629 528.527 136.598 528.492 cv
136.559 528.461 136.535 528.43 136.527 528.402 cv
136.512 528.375 136.5 528.344 136.488 528.305 cv
136.477 528.27 136.469 528.219 136.465 528.156 cv
136.457 528.098 136.453 528.027 136.457 527.945 cv
136.453 527.867 136.457 527.801 136.469 527.738 cv
136.473 527.68 136.488 527.629 136.508 527.586 cv
136.523 527.551 136.543 527.52 136.57 527.5 cv
136.594 527.484 136.621 527.477 136.656 527.473 cv
136.699 527.477 136.77 527.504 136.867 527.559 cv
136.961 527.617 137.09 527.68 137.254 527.746 cv
137.41 527.812 137.613 527.875 137.855 527.934 cv
138.094 527.992 138.375 528.023 138.703 528.02 cv
139.008 528.023 139.289 527.984 139.543 527.91 cv
139.797 527.84 140.016 527.727 140.203 527.57 cv
140.387 527.414 140.531 527.219 140.637 526.984 cv
140.738 526.75 140.789 526.465 140.793 526.129 cv
140.789 525.848 140.746 525.602 140.66 525.383 cv
140.57 525.172 140.434 524.992 140.25 524.844 cv
140.063 524.703 139.828 524.594 139.551 524.523 cv
139.266 524.453 138.93 524.418 138.539 524.414 cv
138.262 524.418 138.023 524.434 137.824 524.457 cv
137.621 524.488 137.434 524.5 137.266 524.496 cv
137.133 524.5 137.043 524.473 136.992 524.41 cv
136.934 524.355 136.906 524.238 136.91 524.066 cv
136.91 520.469 li
136.906 520.32 136.941 520.211 137.016 520.137 cv
137.082 520.066 137.184 520.031 137.32 520.027 cv
141.23 520.027 li
141.266 520.031 141.301 520.039 141.336 520.059 cv
141.367 520.078 141.395 520.109 141.422 520.148 cv
141.441 520.191 141.457 520.246 141.473 520.309 cv
141.48 520.375 141.488 520.449 141.488 520.531 cv
141.488 520.699 141.465 520.824 141.422 520.914 cv
141.379 521.008 141.32 521.055 141.242 521.051 cv
138.082 521.051 li
138.082 523.527 li
138.234 523.504 138.391 523.492 138.551 523.488 cv
138.711 523.484 138.898 523.48 139.109 523.48 cv
139.594 523.48 140.016 523.543 140.383 523.664 cv
140.742 523.785 141.047 523.957 141.293 524.176 cv
141.535 524.398 141.719 524.664 141.848 524.977 cv
141.969 525.293 142.031 525.641 142.035 526.02 cv
cp
f
162.32 526 mo
162.316 526.387 162.258 526.762 162.141 527.121 cv
162.023 527.484 161.84 527.805 161.598 528.078 cv
161.348 528.359 161.039 528.578 160.664 528.742 cv
160.285 528.906 159.836 528.988 159.324 528.988 cv
158.953 528.988 158.629 528.945 158.348 528.852 cv
158.063 528.766 157.816 528.637 157.609 528.465 cv
157.398 528.301 157.227 528.094 157.09 527.844 cv
156.949 527.602 156.836 527.32 156.754 527.004 cv
156.668 526.691 156.609 526.348 156.574 525.973 cv
156.535 525.602 156.516 525.199 156.52 524.77 cv
156.516 524.395 156.535 524.016 156.578 523.625 cv
156.617 523.242 156.691 522.867 156.797 522.504 cv
156.902 522.148 157.043 521.812 157.227 521.492 cv
157.402 521.18 157.629 520.902 157.902 520.664 cv
158.172 520.434 158.496 520.25 158.875 520.109 cv
159.25 519.977 159.688 519.906 160.191 519.902 cv
160.355 519.906 160.527 519.918 160.703 519.934 cv
160.875 519.957 161.035 519.984 161.18 520.016 cv
161.324 520.055 161.445 520.09 161.547 520.129 cv
161.645 520.172 161.711 520.207 161.746 520.23 cv
161.777 520.258 161.801 520.285 161.82 520.312 cv
161.832 520.344 161.844 520.375 161.855 520.406 cv
161.863 520.441 161.871 520.48 161.879 520.523 cv
161.879 520.566 161.883 520.617 161.887 520.68 cv
161.883 520.766 161.883 520.84 161.883 520.895 cv
161.879 520.957 161.867 521.004 161.855 521.035 cv
161.836 521.074 161.816 521.102 161.793 521.117 cv
161.766 521.141 161.734 521.148 161.695 521.145 cv
161.641 521.148 161.57 521.133 161.488 521.098 cv
161.398 521.07 161.293 521.035 161.176 520.992 cv
161.051 520.957 160.902 520.922 160.727 520.887 cv
160.551 520.859 160.348 520.844 160.117 520.84 cv
159.691 520.844 159.328 520.93 159.023 521.098 cv
158.719 521.273 158.469 521.504 158.277 521.793 cv
158.082 522.086 157.938 522.426 157.848 522.809 cv
157.75 523.195 157.699 523.598 157.688 524.012 cv
157.805 523.949 157.938 523.879 158.086 523.809 cv
158.234 523.742 158.395 523.684 158.57 523.625 cv
158.742 523.574 158.926 523.527 159.125 523.492 cv
159.32 523.457 159.531 523.441 159.754 523.437 cv
160.23 523.441 160.633 523.504 160.961 523.633 cv
161.285 523.766 161.551 523.949 161.758 524.176 cv
161.957 524.41 162.102 524.68 162.191 524.988 cv
162.273 525.301 162.316 525.637 162.32 526 cv
cp
161.133 526.109 mo
161.133 525.848 161.105 525.605 161.055 525.387 cv
161 525.172 160.914 524.988 160.793 524.84 cv
160.668 524.691 160.504 524.578 160.301 524.492 cv
160.094 524.414 159.84 524.371 159.543 524.367 cv
159.371 524.371 159.203 524.387 159.035 524.414 cv
158.867 524.445 158.703 524.484 158.551 524.535 cv
158.391 524.59 158.242 524.652 158.098 524.719 cv
157.953 524.793 157.82 524.871 157.707 524.949 cv
157.703 525.539 157.742 526.027 157.82 526.422 cv
157.895 526.82 158.004 527.141 158.148 527.375 cv
158.289 527.617 158.469 527.785 158.684 527.887 cv
158.895 527.988 159.145 528.039 159.434 528.039 cv
159.723 528.039 159.973 527.984 160.191 527.875 cv
160.402 527.766 160.582 527.621 160.723 527.437 cv
160.863 527.254 160.965 527.047 161.035 526.816 cv
161.098 526.586 161.133 526.352 161.133 526.109 cv
cp
f
182.266 520.531 mo
182.262 520.617 182.258 520.691 182.254 520.754 cv
182.246 520.824 182.238 520.887 182.227 520.945 cv
182.215 521.008 182.199 521.066 182.18 521.121 cv
182.156 521.18 182.133 521.242 182.109 521.305 cv
178.926 528.633 li
178.902 528.691 178.875 528.738 178.84 528.77 cv
178.805 528.809 178.762 528.836 178.711 528.852 cv
178.656 528.871 178.586 528.879 178.508 528.887 cv
178.422 528.891 178.324 528.895 178.211 528.898 cv
178.051 528.895 177.93 528.887 177.848 528.879 cv
177.758 528.863 177.695 528.848 177.66 528.816 cv
177.617 528.789 177.602 528.75 177.609 528.707 cv
177.613 528.664 177.629 528.613 177.656 528.551 cv
181.004 521.059 li
176.762 521.059 li
176.672 521.062 176.609 521.016 176.566 520.922 cv
176.523 520.832 176.5 520.703 176.504 520.539 cv
176.5 520.453 176.508 520.379 176.52 520.316 cv
176.531 520.254 176.547 520.199 176.57 520.152 cv
176.59 520.109 176.617 520.078 176.652 520.059 cv
176.684 520.039 176.719 520.031 176.762 520.027 cv
181.91 520.027 li
181.973 520.031 182.027 520.035 182.074 520.047 cv
182.121 520.062 182.156 520.09 182.184 520.129 cv
182.207 520.172 182.227 520.227 182.242 520.289 cv
182.254 520.355 182.262 520.437 182.266 520.531 cv
cp
f
202.363 526.594 mo
202.359 526.98 202.293 527.32 202.156 527.617 cv
202.02 527.914 201.82 528.168 201.566 528.371 cv
201.309 528.578 200.992 528.73 200.617 528.832 cv
200.234 528.937 199.805 528.988 199.32 528.988 cv
198.863 528.988 198.453 528.941 198.098 528.848 cv
197.734 528.754 197.43 528.613 197.184 528.426 cv
196.93 528.238 196.738 528.008 196.609 527.734 cv
196.473 527.461 196.406 527.148 196.41 526.797 cv
196.406 526.523 196.453 526.27 196.547 526.035 cv
196.637 525.801 196.766 525.586 196.938 525.391 cv
197.105 525.195 197.316 525.016 197.57 524.844 cv
197.816 524.676 198.102 524.512 198.418 524.355 cv
198.145 524.215 197.902 524.066 197.691 523.906 cv
197.48 523.754 197.301 523.582 197.16 523.395 cv
197.012 523.211 196.902 523.016 196.832 522.805 cv
196.754 522.602 196.719 522.371 196.719 522.121 cv
196.719 521.812 196.773 521.523 196.887 521.25 cv
196.996 520.98 197.164 520.746 197.391 520.547 cv
197.613 520.348 197.898 520.191 198.25 520.074 cv
198.594 519.961 199 519.902 199.469 519.898 cv
199.91 519.902 200.297 519.953 200.625 520.059 cv
200.949 520.168 201.219 520.316 201.43 520.496 cv
201.641 520.684 201.797 520.898 201.898 521.145 cv
202 521.398 202.051 521.668 202.051 521.953 cv
202.051 522.187 202.012 522.41 201.938 522.621 cv
201.859 522.836 201.75 523.039 201.605 523.23 cv
201.457 523.422 201.277 523.602 201.07 523.766 cv
200.855 523.934 200.613 524.086 200.344 524.23 cv
200.664 524.391 200.953 524.555 201.207 524.723 cv
201.457 524.895 201.668 525.078 201.84 525.266 cv
202.012 525.461 202.141 525.664 202.23 525.879 cv
202.316 526.098 202.359 526.336 202.363 526.594 cv
cp
200.891 522.059 mo
200.891 521.871 200.855 521.699 200.789 521.543 cv
200.723 521.391 200.625 521.258 200.5 521.145 cv
200.367 521.039 200.211 520.957 200.023 520.898 cv
199.836 520.844 199.621 520.816 199.379 520.812 cv
198.887 520.816 198.516 520.926 198.266 521.148 cv
198.012 521.371 197.883 521.676 197.887 522.059 cv
197.883 522.242 197.914 522.41 197.977 522.559 cv
198.035 522.715 198.133 522.859 198.266 522.992 cv
198.395 523.133 198.559 523.266 198.758 523.391 cv
198.953 523.523 199.188 523.656 199.461 523.793 cv
199.922 523.559 200.273 523.297 200.52 523.008 cv
200.766 522.723 200.891 522.406 200.891 522.059 cv
cp
201.176 526.715 mo
201.172 526.508 201.133 526.32 201.059 526.148 cv
200.98 525.98 200.863 525.82 200.707 525.668 cv
200.547 525.523 200.352 525.379 200.121 525.238 cv
199.883 525.102 199.609 524.957 199.305 524.805 cv
199.016 524.945 198.766 525.09 198.551 525.23 cv
198.332 525.375 198.156 525.52 198.02 525.668 cv
197.879 525.82 197.773 525.977 197.703 526.141 cv
197.633 526.305 197.598 526.488 197.598 526.687 cv
197.598 527.133 197.746 527.477 198.051 527.715 cv
198.352 527.957 198.805 528.074 199.406 528.074 cv
199.988 528.074 200.43 527.953 200.727 527.711 cv
201.023 527.469 201.172 527.137 201.176 526.715 cv
cp
f
222.266 524.094 mo
222.266 524.48 222.242 524.867 222.195 525.258 cv
222.148 525.652 222.07 526.027 221.965 526.387 cv
221.852 526.746 221.703 527.086 221.523 527.402 cv
221.336 527.719 221.105 527.996 220.828 528.23 cv
220.547 528.473 220.215 528.656 219.832 528.789 cv
219.445 528.922 219 528.988 218.492 528.988 cv
218.297 528.988 218.105 528.973 217.922 528.949 cv
217.734 528.922 217.566 528.895 217.422 528.859 cv
217.273 528.824 217.152 528.789 217.051 528.746 cv
216.949 528.707 216.875 528.664 216.832 528.621 cv
216.785 528.582 216.754 528.527 216.734 528.453 cv
216.711 528.387 216.699 528.293 216.703 528.172 cv
216.699 528.074 216.703 527.992 216.711 527.934 cv
216.719 527.875 216.727 527.832 216.742 527.797 cv
216.754 527.766 216.773 527.742 216.801 527.73 cv
216.824 527.719 216.855 527.711 216.895 527.711 cv
216.941 527.711 217.012 527.73 217.105 527.766 cv
217.191 527.801 217.309 527.84 217.449 527.879 cv
217.59 527.922 217.75 527.957 217.938 527.988 cv
218.121 528.023 218.332 528.039 218.566 528.039 cv
219.008 528.039 219.387 527.957 219.703 527.785 cv
220.016 527.617 220.273 527.387 220.477 527.098 cv
220.676 526.812 220.824 526.48 220.926 526.102 cv
221.023 525.727 221.082 525.328 221.094 524.906 cv
220.852 525.051 220.559 525.176 220.223 525.281 cv
219.883 525.395 219.5 525.449 219.066 525.445 cv
218.574 525.449 218.16 525.383 217.824 525.246 cv
217.488 525.113 217.219 524.93 217.02 524.695 cv
216.813 524.465 216.668 524.191 216.582 523.871 cv
216.492 523.555 216.445 523.203 216.449 522.824 cv
216.445 522.434 216.504 522.062 216.621 521.711 cv
216.734 521.359 216.91 521.051 217.152 520.777 cv
217.391 520.512 217.699 520.297 218.074 520.137 cv
218.445 519.98 218.891 519.902 219.414 519.898 cv
219.777 519.902 220.105 519.949 220.391 520.039 cv
220.676 520.133 220.922 520.266 221.133 520.441 cv
221.34 520.617 221.516 520.828 221.664 521.074 cv
221.805 521.324 221.922 521.605 222.016 521.918 cv
222.102 522.234 222.168 522.574 222.207 522.937 cv
222.246 523.309 222.266 523.695 222.266 524.094 cv
cp
221.07 523.965 mo
221.07 523.387 221.031 522.895 220.953 522.496 cv
220.875 522.098 220.762 521.777 220.613 521.531 cv
220.465 521.285 220.281 521.105 220.063 520.996 cv
219.844 520.887 219.59 520.832 219.305 520.832 cv
219.004 520.832 218.75 520.887 218.543 520.992 cv
218.332 521.102 218.16 521.246 218.027 521.422 cv
217.891 521.605 217.793 521.809 217.73 522.035 cv
217.668 522.266 217.637 522.5 217.637 522.734 cv
217.637 523.008 217.664 523.254 217.723 523.477 cv
217.777 523.699 217.871 523.887 218 524.043 cv
218.125 524.199 218.289 524.32 218.496 524.398 cv
218.699 524.484 218.953 524.523 219.258 524.523 cv
219.598 524.523 219.926 524.473 220.246 524.371 cv
220.559 524.27 220.836 524.137 221.07 523.965 cv
cp
f
238.699 528.395 mo
238.699 528.484 238.691 528.555 238.676 528.613 cv
238.66 528.676 238.641 528.727 238.621 528.758 cv
238.598 528.797 238.57 528.82 238.543 528.836 cv
238.512 528.852 238.484 528.859 238.453 528.859 cv
233.84 528.859 li
233.805 528.859 233.773 528.852 233.75 528.836 cv
233.719 528.82 233.695 528.797 233.672 528.758 cv
233.645 528.727 233.625 528.676 233.613 528.613 cv
233.598 528.555 233.59 528.484 233.594 528.395 cv
233.59 528.316 233.598 528.246 233.613 528.184 cv
233.625 528.129 233.641 528.078 233.664 528.039 cv
233.684 528 233.707 527.973 233.738 527.949 cv
233.766 527.934 233.801 527.922 233.84 527.918 cv
235.684 527.918 li
235.684 521.199 li
233.977 522.219 li
233.887 522.266 233.816 522.293 233.766 522.301 cv
233.711 522.312 233.668 522.301 233.641 522.27 cv
233.605 522.242 233.582 522.191 233.574 522.121 cv
233.559 522.055 233.555 521.969 233.559 521.863 cv
233.555 521.785 233.559 521.719 233.566 521.664 cv
233.574 521.609 233.582 521.566 233.598 521.527 cv
233.609 521.496 233.629 521.465 233.656 521.434 cv
233.68 521.41 233.715 521.383 233.758 521.352 cv
235.789 520.047 li
235.805 520.035 235.828 520.027 235.855 520.016 cv
235.883 520.008 235.918 519.996 235.961 519.988 cv
236 519.98 236.047 519.977 236.105 519.969 cv
236.156 519.969 236.227 519.965 236.309 519.965 cv
236.418 519.965 236.508 519.973 236.582 519.98 cv
236.652 519.992 236.711 520.004 236.754 520.016 cv
236.793 520.035 236.82 520.055 236.836 520.078 cv
236.848 520.105 236.852 520.133 236.855 520.156 cv
236.855 527.918 li
238.453 527.918 li
238.488 527.922 238.52 527.934 238.555 527.949 cv
238.582 527.973 238.609 528 238.633 528.039 cv
238.652 528.078 238.668 528.129 238.68 528.184 cv
238.691 528.246 238.699 528.316 238.699 528.395 cv
cp
f
246.051 524.422 mo
246.047 525.105 245.992 525.723 245.891 526.281 cv
245.781 526.84 245.605 527.32 245.355 527.723 cv
245.105 528.129 244.781 528.441 244.383 528.66 cv
243.984 528.879 243.488 528.988 242.902 528.988 cv
242.344 528.988 241.879 528.891 241.5 528.691 cv
241.117 528.496 240.809 528.207 240.582 527.82 cv
240.348 527.437 240.184 526.961 240.086 526.398 cv
239.988 525.836 239.941 525.191 239.941 524.465 cv
239.941 523.793 239.996 523.176 240.105 522.609 cv
240.215 522.051 240.391 521.57 240.637 521.164 cv
240.879 520.766 241.203 520.453 241.605 520.23 cv
242.004 520.012 242.496 519.902 243.082 519.898 cv
243.641 519.902 244.109 520 244.488 520.195 cv
244.867 520.395 245.172 520.687 245.406 521.07 cv
245.637 521.457 245.801 521.93 245.902 522.488 cv
245.996 523.055 246.047 523.699 246.051 524.422 cv
cp
244.848 524.504 mo
244.844 524.066 244.828 523.668 244.801 523.316 cv
244.766 522.965 244.719 522.656 244.66 522.387 cv
244.598 522.121 244.52 521.891 244.422 521.695 cv
244.32 521.504 244.203 521.344 244.07 521.219 cv
243.934 521.094 243.777 521.004 243.602 520.945 cv
243.426 520.891 243.23 520.863 243.012 520.859 cv
242.625 520.863 242.309 520.953 242.07 521.133 cv
241.824 521.316 241.637 521.566 241.5 521.883 cv
241.359 522.203 241.262 522.578 241.215 523.004 cv
241.16 523.434 241.137 523.891 241.141 524.383 cv
241.137 525.043 241.172 525.605 241.242 526.066 cv
241.313 526.531 241.418 526.906 241.566 527.195 cv
241.711 527.484 241.902 527.695 242.133 527.828 cv
242.363 527.961 242.641 528.027 242.973 528.027 cv
243.223 528.027 243.449 527.988 243.645 527.906 cv
243.836 527.824 244 527.707 244.141 527.555 cv
244.277 527.402 244.395 527.219 244.488 527.004 cv
244.578 526.793 244.648 526.555 244.707 526.293 cv
244.758 526.035 244.797 525.754 244.816 525.449 cv
244.836 525.148 244.844 524.836 244.848 524.504 cv
cp
f
258.738 528.395 mo
258.738 528.484 258.73 528.555 258.715 528.613 cv
258.699 528.676 258.68 528.727 258.66 528.758 cv
258.637 528.797 258.609 528.82 258.582 528.836 cv
258.551 528.852 258.523 528.859 258.492 528.859 cv
253.879 528.859 li
253.844 528.859 253.813 528.852 253.789 528.836 cv
253.758 528.82 253.734 528.797 253.711 528.758 cv
253.684 528.727 253.664 528.676 253.652 528.613 cv
253.637 528.555 253.629 528.484 253.633 528.395 cv
253.629 528.316 253.637 528.246 253.652 528.184 cv
253.664 528.129 253.68 528.078 253.703 528.039 cv
253.723 528 253.746 527.973 253.777 527.949 cv
253.805 527.934 253.84 527.922 253.879 527.918 cv
255.723 527.918 li
255.723 521.199 li
254.016 522.219 li
253.926 522.266 253.855 522.293 253.805 522.301 cv
253.75 522.312 253.707 522.301 253.68 522.27 cv
253.645 522.242 253.621 522.191 253.613 522.121 cv
253.598 522.055 253.594 521.969 253.598 521.863 cv
253.594 521.785 253.598 521.719 253.605 521.664 cv
253.613 521.609 253.621 521.566 253.637 521.527 cv
253.648 521.496 253.668 521.465 253.695 521.434 cv
253.719 521.41 253.754 521.383 253.797 521.352 cv
255.828 520.047 li
255.844 520.035 255.867 520.027 255.895 520.016 cv
255.922 520.008 255.957 519.996 256 519.988 cv
256.039 519.98 256.086 519.977 256.145 519.969 cv
256.195 519.969 256.266 519.965 256.348 519.965 cv
256.457 519.965 256.547 519.973 256.621 519.98 cv
256.691 519.992 256.75 520.004 256.793 520.016 cv
256.832 520.035 256.859 520.055 256.875 520.078 cv
256.887 520.105 256.891 520.133 256.895 520.156 cv
256.895 527.918 li
258.492 527.918 li
258.527 527.922 258.559 527.934 258.594 527.949 cv
258.621 527.973 258.648 528 258.672 528.039 cv
258.691 528.078 258.707 528.129 258.719 528.184 cv
258.73 528.246 258.738 528.316 258.738 528.395 cv
cp
f
265.816 528.395 mo
265.816 528.484 265.809 528.555 265.793 528.613 cv
265.777 528.676 265.758 528.727 265.738 528.758 cv
265.715 528.797 265.688 528.82 265.66 528.836 cv
265.629 528.852 265.602 528.859 265.57 528.859 cv
260.957 528.859 li
260.922 528.859 260.891 528.852 260.867 528.836 cv
260.836 528.82 260.813 528.797 260.789 528.758 cv
260.762 528.727 260.742 528.676 260.73 528.613 cv
260.715 528.555 260.707 528.484 260.711 528.395 cv
260.707 528.316 260.715 528.246 260.73 528.184 cv
260.742 528.129 260.758 528.078 260.781 528.039 cv
260.801 528 260.824 527.973 260.855 527.949 cv
260.883 527.934 260.918 527.922 260.957 527.918 cv
262.801 527.918 li
262.801 521.199 li
261.094 522.219 li
261.004 522.266 260.934 522.293 260.883 522.301 cv
260.828 522.312 260.785 522.301 260.758 522.27 cv
260.723 522.242 260.699 522.191 260.691 522.121 cv
260.676 522.055 260.672 521.969 260.676 521.863 cv
260.672 521.785 260.676 521.719 260.684 521.664 cv
260.691 521.609 260.699 521.566 260.715 521.527 cv
260.727 521.496 260.746 521.465 260.773 521.434 cv
260.797 521.41 260.832 521.383 260.875 521.352 cv
262.906 520.047 li
262.922 520.035 262.945 520.027 262.973 520.016 cv
263 520.008 263.035 519.996 263.078 519.988 cv
263.117 519.98 263.164 519.977 263.223 519.969 cv
263.273 519.969 263.344 519.965 263.426 519.965 cv
263.535 519.965 263.625 519.973 263.699 519.98 cv
263.77 519.992 263.828 520.004 263.871 520.016 cv
263.91 520.035 263.938 520.055 263.953 520.078 cv
263.965 520.105 263.969 520.133 263.973 520.156 cv
263.973 527.918 li
265.57 527.918 li
265.605 527.922 265.637 527.934 265.672 527.949 cv
265.699 527.973 265.727 528 265.75 528.039 cv
265.77 528.078 265.785 528.129 265.797 528.184 cv
265.809 528.246 265.816 528.316 265.816 528.395 cv
cp
f
278.758 528.395 mo
278.758 528.484 278.75 528.555 278.734 528.613 cv
278.719 528.676 278.699 528.727 278.68 528.758 cv
278.656 528.797 278.629 528.82 278.602 528.836 cv
278.57 528.852 278.543 528.859 278.512 528.859 cv
273.898 528.859 li
273.863 528.859 273.832 528.852 273.809 528.836 cv
273.777 528.82 273.754 528.797 273.73 528.758 cv
273.703 528.727 273.684 528.676 273.672 528.613 cv
273.656 528.555 273.648 528.484 273.652 528.395 cv
273.648 528.316 273.656 528.246 273.672 528.184 cv
273.684 528.129 273.699 528.078 273.723 528.039 cv
273.742 528 273.766 527.973 273.797 527.949 cv
273.824 527.934 273.859 527.922 273.898 527.918 cv
275.742 527.918 li
275.742 521.199 li
274.035 522.219 li
273.945 522.266 273.875 522.293 273.824 522.301 cv
273.77 522.312 273.727 522.301 273.699 522.27 cv
273.664 522.242 273.641 522.191 273.633 522.121 cv
273.617 522.055 273.613 521.969 273.617 521.863 cv
273.613 521.785 273.617 521.719 273.625 521.664 cv
273.633 521.609 273.641 521.566 273.656 521.527 cv
273.668 521.496 273.688 521.465 273.715 521.434 cv
273.738 521.41 273.773 521.383 273.816 521.352 cv
275.848 520.047 li
275.863 520.035 275.887 520.027 275.914 520.016 cv
275.941 520.008 275.977 519.996 276.02 519.988 cv
276.059 519.98 276.105 519.977 276.164 519.969 cv
276.215 519.969 276.285 519.965 276.367 519.965 cv
276.477 519.965 276.566 519.973 276.641 519.98 cv
276.711 519.992 276.77 520.004 276.813 520.016 cv
276.852 520.035 276.879 520.055 276.895 520.078 cv
276.906 520.105 276.91 520.133 276.914 520.156 cv
276.914 527.918 li
278.512 527.918 li
278.547 527.922 278.578 527.934 278.613 527.949 cv
278.641 527.973 278.668 528 278.691 528.039 cv
278.711 528.078 278.727 528.129 278.738 528.184 cv
278.75 528.246 278.758 528.316 278.758 528.395 cv
cp
f
285.82 528.355 mo
285.816 528.437 285.809 528.512 285.801 528.574 cv
285.785 528.641 285.77 528.695 285.754 528.734 cv
285.73 528.781 285.703 528.812 285.672 528.828 cv
285.633 528.852 285.598 528.859 285.559 528.859 cv
280.68 528.859 li
280.609 528.859 280.555 528.852 280.512 528.836 cv
280.461 528.82 280.418 528.797 280.387 528.758 cv
280.348 528.727 280.324 528.672 280.313 528.602 cv
280.293 528.531 280.285 528.449 280.289 528.348 cv
280.285 528.262 280.289 528.18 280.301 528.109 cv
280.305 528.043 280.32 527.984 280.348 527.93 cv
280.367 527.879 280.395 527.824 280.434 527.77 cv
280.465 527.719 280.512 527.664 280.57 527.602 cv
282.336 525.789 li
282.742 525.371 283.066 524.996 283.316 524.664 cv
283.559 524.332 283.75 524.031 283.887 523.754 cv
284.02 523.484 284.109 523.234 284.152 523.012 cv
284.191 522.789 284.211 522.582 284.215 522.383 cv
284.211 522.187 284.18 522 284.117 521.824 cv
284.051 521.652 283.953 521.5 283.832 521.367 cv
283.703 521.238 283.547 521.133 283.363 521.051 cv
283.172 520.977 282.957 520.937 282.715 520.934 cv
282.426 520.937 282.168 520.977 281.941 521.051 cv
281.711 521.133 281.512 521.219 281.344 521.305 cv
281.168 521.398 281.023 521.48 280.914 521.555 cv
280.797 521.637 280.711 521.676 280.656 521.672 cv
280.621 521.676 280.594 521.668 280.57 521.645 cv
280.543 521.629 280.52 521.598 280.504 521.555 cv
280.484 521.516 280.473 521.461 280.465 521.391 cv
280.453 521.324 280.449 521.242 280.453 521.145 cv
280.449 521.078 280.453 521.02 280.461 520.969 cv
280.465 520.922 280.473 520.879 280.484 520.84 cv
280.492 520.805 280.504 520.77 280.527 520.738 cv
280.543 520.707 280.582 520.668 280.637 520.617 cv
280.691 520.574 280.785 520.512 280.918 520.426 cv
281.051 520.348 281.219 520.266 281.426 520.18 cv
281.625 520.102 281.848 520.035 282.094 519.98 cv
282.336 519.93 282.594 519.902 282.863 519.898 cv
283.289 519.902 283.66 519.961 283.984 520.078 cv
284.305 520.199 284.574 520.363 284.785 520.574 cv
284.996 520.785 285.152 521.031 285.258 521.305 cv
285.363 521.586 285.418 521.879 285.418 522.191 cv
285.418 522.473 285.391 522.754 285.34 523.035 cv
285.289 523.316 285.184 523.621 285.023 523.941 cv
284.859 524.27 284.625 524.629 284.324 525.027 cv
284.016 525.426 283.613 525.887 283.109 526.402 cv
281.711 527.863 li
285.555 527.863 li
285.586 527.863 285.621 527.875 285.66 527.895 cv
285.691 527.918 285.723 527.949 285.746 527.988 cv
285.77 528.031 285.785 528.082 285.801 528.141 cv
285.809 528.203 285.816 528.273 285.82 528.355 cv
cp
f
298.797 528.395 mo
298.797 528.484 298.789 528.555 298.773 528.613 cv
298.758 528.676 298.738 528.727 298.719 528.758 cv
298.695 528.797 298.668 528.82 298.641 528.836 cv
298.609 528.852 298.582 528.859 298.551 528.859 cv
293.938 528.859 li
293.902 528.859 293.871 528.852 293.848 528.836 cv
293.816 528.82 293.793 528.797 293.77 528.758 cv
293.742 528.727 293.723 528.676 293.711 528.613 cv
293.695 528.555 293.688 528.484 293.691 528.395 cv
293.688 528.316 293.695 528.246 293.711 528.184 cv
293.723 528.129 293.738 528.078 293.762 528.039 cv
293.781 528 293.805 527.973 293.836 527.949 cv
293.863 527.934 293.898 527.922 293.938 527.918 cv
295.781 527.918 li
295.781 521.199 li
294.074 522.219 li
293.984 522.266 293.914 522.293 293.863 522.301 cv
293.809 522.312 293.766 522.301 293.738 522.27 cv
293.703 522.242 293.68 522.191 293.672 522.121 cv
293.656 522.055 293.652 521.969 293.656 521.863 cv
293.652 521.785 293.656 521.719 293.664 521.664 cv
293.672 521.609 293.68 521.566 293.695 521.527 cv
293.707 521.496 293.727 521.465 293.754 521.434 cv
293.777 521.41 293.813 521.383 293.855 521.352 cv
295.887 520.047 li
295.902 520.035 295.926 520.027 295.953 520.016 cv
295.98 520.008 296.016 519.996 296.059 519.988 cv
296.098 519.98 296.145 519.977 296.203 519.969 cv
296.254 519.969 296.324 519.965 296.406 519.965 cv
296.516 519.965 296.605 519.973 296.68 519.98 cv
296.75 519.992 296.809 520.004 296.852 520.016 cv
296.891 520.035 296.918 520.055 296.934 520.078 cv
296.945 520.105 296.949 520.133 296.953 520.156 cv
296.953 527.918 li
298.551 527.918 li
298.586 527.922 298.617 527.934 298.652 527.949 cv
298.68 527.973 298.707 528 298.73 528.039 cv
298.75 528.078 298.766 528.129 298.777 528.184 cv
298.789 528.246 298.797 528.316 298.797 528.395 cv
cp
f
305.789 526.332 mo
305.785 526.742 305.715 527.105 305.578 527.43 cv
305.434 527.758 305.23 528.039 304.969 528.266 cv
304.703 528.5 304.379 528.676 303.992 528.801 cv
303.605 528.926 303.168 528.988 302.684 528.988 cv
302.387 528.988 302.109 528.965 301.855 528.918 cv
301.594 528.871 301.367 528.816 301.168 528.75 cv
300.965 528.684 300.797 528.613 300.668 528.543 cv
300.535 528.473 300.453 528.422 300.422 528.391 cv
300.387 528.359 300.359 528.328 300.344 528.293 cv
300.32 528.266 300.305 528.227 300.293 528.18 cv
300.277 528.133 300.266 528.078 300.262 528.012 cv
300.254 527.945 300.254 527.863 300.254 527.766 cv
300.254 527.605 300.27 527.492 300.301 527.426 cv
300.332 527.367 300.379 527.336 300.441 527.332 cv
300.484 527.336 300.566 527.371 300.691 527.441 cv
300.813 527.512 300.973 527.59 301.168 527.676 cv
301.359 527.762 301.582 527.84 301.844 527.91 cv
302.102 527.984 302.391 528.023 302.711 528.02 cv
303.016 528.023 303.289 527.984 303.523 527.906 cv
303.758 527.832 303.953 527.723 304.113 527.578 cv
304.27 527.437 304.387 527.27 304.469 527.074 cv
304.547 526.883 304.59 526.672 304.59 526.441 cv
304.59 526.195 304.539 525.969 304.438 525.766 cv
304.336 525.566 304.188 525.395 303.992 525.25 cv
303.797 525.105 303.555 524.996 303.273 524.914 cv
302.984 524.84 302.664 524.801 302.305 524.797 cv
301.438 524.797 li
301.398 524.801 301.359 524.793 301.324 524.773 cv
301.289 524.762 301.258 524.734 301.234 524.695 cv
301.207 524.66 301.188 524.613 301.172 524.555 cv
301.152 524.496 301.145 524.418 301.148 524.32 cv
301.145 524.238 301.152 524.168 301.168 524.105 cv
301.18 524.051 301.199 524.004 301.227 523.969 cv
301.25 523.937 301.277 523.914 301.313 523.895 cv
301.34 523.883 301.375 523.875 301.422 523.871 cv
302.191 523.871 li
302.492 523.875 302.762 523.836 303 523.754 cv
303.238 523.68 303.441 523.566 303.609 523.418 cv
303.773 523.273 303.902 523.102 303.992 522.898 cv
304.078 522.699 304.121 522.473 304.125 522.219 cv
304.121 522.039 304.09 521.863 304.035 521.695 cv
303.973 521.531 303.887 521.387 303.77 521.262 cv
303.652 521.141 303.5 521.043 303.316 520.973 cv
303.129 520.902 302.914 520.867 302.676 520.867 cv
302.41 520.867 302.168 520.91 301.949 520.988 cv
301.723 521.07 301.527 521.152 301.359 521.242 cv
301.184 521.336 301.039 521.422 300.93 521.5 cv
300.813 521.578 300.734 521.617 300.691 521.617 cv
300.656 521.617 300.629 521.613 300.605 521.602 cv
300.578 521.59 300.555 521.566 300.543 521.531 cv
300.523 521.5 300.512 521.453 300.508 521.391 cv
300.5 521.332 300.5 521.25 300.5 521.145 cv
300.5 521.078 300.5 521.02 300.504 520.965 cv
300.508 520.918 300.516 520.871 300.531 520.828 cv
300.543 520.793 300.563 520.758 300.582 520.723 cv
300.598 520.695 300.625 520.66 300.672 520.613 cv
300.711 520.574 300.801 520.512 300.934 520.426 cv
301.066 520.348 301.227 520.266 301.422 520.18 cv
301.613 520.102 301.84 520.035 302.094 519.98 cv
302.344 519.93 302.613 519.902 302.91 519.898 cv
303.316 519.902 303.676 519.953 303.988 520.055 cv
304.293 520.16 304.551 520.309 304.762 520.5 cv
304.965 520.691 305.121 520.918 305.227 521.184 cv
305.324 521.449 305.375 521.746 305.379 522.066 cv
305.375 522.348 305.34 522.605 305.27 522.844 cv
305.195 523.082 305.086 523.293 304.949 523.477 cv
304.805 523.664 304.633 523.82 304.43 523.949 cv
304.223 524.078 303.988 524.168 303.723 524.219 cv
303.723 524.23 li
304.027 524.262 304.305 524.34 304.559 524.461 cv
304.809 524.582 305.027 524.734 305.211 524.914 cv
305.391 525.102 305.531 525.312 305.637 525.555 cv
305.734 525.797 305.785 526.059 305.789 526.332 cv
cp
f
318.816 528.395 mo
318.816 528.484 318.809 528.555 318.793 528.613 cv
318.777 528.676 318.758 528.727 318.738 528.758 cv
318.715 528.797 318.688 528.82 318.66 528.836 cv
318.629 528.852 318.602 528.859 318.57 528.859 cv
313.957 528.859 li
313.922 528.859 313.891 528.852 313.867 528.836 cv
313.836 528.82 313.813 528.797 313.789 528.758 cv
313.762 528.727 313.742 528.676 313.73 528.613 cv
313.715 528.555 313.707 528.484 313.711 528.395 cv
313.707 528.316 313.715 528.246 313.73 528.184 cv
313.742 528.129 313.758 528.078 313.781 528.039 cv
313.801 528 313.824 527.973 313.855 527.949 cv
313.883 527.934 313.918 527.922 313.957 527.918 cv
315.801 527.918 li
315.801 521.199 li
314.094 522.219 li
314.004 522.266 313.934 522.293 313.883 522.301 cv
313.828 522.312 313.785 522.301 313.758 522.27 cv
313.723 522.242 313.699 522.191 313.691 522.121 cv
313.676 522.055 313.672 521.969 313.676 521.863 cv
313.672 521.785 313.676 521.719 313.684 521.664 cv
313.691 521.609 313.699 521.566 313.715 521.527 cv
313.727 521.496 313.746 521.465 313.773 521.434 cv
313.797 521.41 313.832 521.383 313.875 521.352 cv
315.906 520.047 li
315.922 520.035 315.945 520.027 315.973 520.016 cv
316 520.008 316.035 519.996 316.078 519.988 cv
316.117 519.98 316.164 519.977 316.223 519.969 cv
316.273 519.969 316.344 519.965 316.426 519.965 cv
316.535 519.965 316.625 519.973 316.699 519.98 cv
316.77 519.992 316.828 520.004 316.871 520.016 cv
316.91 520.035 316.938 520.055 316.953 520.078 cv
316.965 520.105 316.969 520.133 316.973 520.156 cv
316.973 527.918 li
318.57 527.918 li
318.605 527.922 318.637 527.934 318.672 527.949 cv
318.699 527.973 318.727 528 318.75 528.039 cv
318.77 528.078 318.785 528.129 318.797 528.184 cv
318.809 528.246 318.816 528.316 318.816 528.395 cv
cp
f
326.254 526.348 mo
326.25 526.5 326.227 526.617 326.184 526.703 cv
326.137 526.789 326.074 526.832 325.992 526.832 cv
324.996 526.832 li
324.996 528.687 li
324.996 528.727 324.984 528.758 324.969 528.781 cv
324.945 528.812 324.914 528.832 324.871 528.848 cv
324.82 528.863 324.758 528.875 324.688 528.883 cv
324.609 528.891 324.516 528.895 324.398 528.898 cv
324.285 528.895 324.191 528.891 324.117 528.883 cv
324.039 528.875 323.977 528.863 323.938 528.848 cv
323.891 528.832 323.863 528.812 323.848 528.781 cv
323.832 528.758 323.824 528.727 323.824 528.687 cv
323.824 526.832 li
320.211 526.832 li
320.152 526.832 320.109 526.828 320.074 526.812 cv
320.035 526.805 320 526.777 319.977 526.738 cv
319.945 526.703 319.926 526.652 319.914 526.582 cv
319.902 526.516 319.898 526.426 319.898 526.312 cv
319.898 526.23 319.898 526.152 319.902 526.082 cv
319.906 526.016 319.914 525.953 319.93 525.895 cv
319.941 525.84 319.961 525.785 319.984 525.73 cv
320.004 525.68 320.031 525.625 320.066 525.562 cv
323.215 520.195 li
323.238 520.16 323.27 520.129 323.316 520.102 cv
323.355 520.074 323.414 520.051 323.484 520.031 cv
323.555 520.016 323.641 520.004 323.742 519.996 cv
323.844 519.992 323.965 519.988 324.105 519.984 cv
324.258 519.988 324.391 519.996 324.504 520.004 cv
324.617 520.02 324.707 520.031 324.781 520.047 cv
324.848 520.066 324.902 520.094 324.941 520.121 cv
324.977 520.152 324.996 520.184 324.996 520.223 cv
324.996 525.863 li
325.992 525.863 li
326.07 525.867 326.133 525.906 326.18 525.984 cv
326.227 526.066 326.25 526.187 326.254 526.348 cv
cp
323.824 521.016 mo
323.809 521.016 li
320.969 525.863 li
323.824 525.863 li
cp
f
338.859 528.395 mo
338.859 528.484 338.852 528.555 338.836 528.613 cv
338.82 528.676 338.801 528.727 338.781 528.758 cv
338.758 528.797 338.73 528.82 338.703 528.836 cv
338.672 528.852 338.645 528.859 338.613 528.859 cv
334 528.859 li
333.965 528.859 333.934 528.852 333.91 528.836 cv
333.879 528.82 333.855 528.797 333.832 528.758 cv
333.805 528.727 333.785 528.676 333.773 528.613 cv
333.758 528.555 333.75 528.484 333.754 528.395 cv
333.75 528.316 333.758 528.246 333.773 528.184 cv
333.785 528.129 333.801 528.078 333.824 528.039 cv
333.844 528 333.867 527.973 333.898 527.949 cv
333.926 527.934 333.961 527.922 334 527.918 cv
335.844 527.918 li
335.844 521.199 li
334.137 522.219 li
334.047 522.266 333.977 522.293 333.926 522.301 cv
333.871 522.312 333.828 522.301 333.801 522.27 cv
333.766 522.242 333.742 522.191 333.734 522.121 cv
333.719 522.055 333.715 521.969 333.719 521.863 cv
333.715 521.785 333.719 521.719 333.727 521.664 cv
333.734 521.609 333.742 521.566 333.758 521.527 cv
333.77 521.496 333.789 521.465 333.816 521.434 cv
333.84 521.41 333.875 521.383 333.918 521.352 cv
335.949 520.047 li
335.965 520.035 335.988 520.027 336.016 520.016 cv
336.043 520.008 336.078 519.996 336.121 519.988 cv
336.16 519.98 336.207 519.977 336.266 519.969 cv
336.316 519.969 336.387 519.965 336.469 519.965 cv
336.578 519.965 336.668 519.973 336.742 519.98 cv
336.813 519.992 336.871 520.004 336.914 520.016 cv
336.953 520.035 336.98 520.055 336.996 520.078 cv
337.008 520.105 337.012 520.133 337.016 520.156 cv
337.016 527.918 li
338.613 527.918 li
338.648 527.922 338.68 527.934 338.715 527.949 cv
338.742 527.973 338.77 528 338.793 528.039 cv
338.813 528.078 338.828 528.129 338.84 528.184 cv
338.852 528.246 338.859 528.316 338.859 528.395 cv
cp
f
345.875 526.02 mo
345.871 526.496 345.793 526.918 345.637 527.285 cv
345.477 527.656 345.25 527.965 344.961 528.215 cv
344.664 528.469 344.316 528.664 343.918 528.793 cv
343.512 528.926 343.066 528.988 342.578 528.988 cv
342.301 528.988 342.043 528.969 341.801 528.93 cv
341.555 528.891 341.336 528.844 341.145 528.789 cv
340.953 528.734 340.793 528.68 340.672 528.621 cv
340.547 528.57 340.469 528.527 340.438 528.492 cv
340.398 528.461 340.375 528.43 340.367 528.402 cv
340.352 528.375 340.34 528.344 340.328 528.305 cv
340.316 528.27 340.309 528.219 340.305 528.156 cv
340.297 528.098 340.293 528.027 340.297 527.945 cv
340.293 527.867 340.297 527.801 340.309 527.738 cv
340.313 527.68 340.328 527.629 340.348 527.586 cv
340.363 527.551 340.383 527.52 340.41 527.5 cv
340.434 527.484 340.461 527.477 340.496 527.473 cv
340.539 527.477 340.609 527.504 340.707 527.559 cv
340.801 527.617 340.93 527.68 341.094 527.746 cv
341.25 527.812 341.453 527.875 341.695 527.934 cv
341.934 527.992 342.215 528.023 342.543 528.02 cv
342.848 528.023 343.129 527.984 343.383 527.91 cv
343.637 527.84 343.855 527.727 344.043 527.57 cv
344.227 527.414 344.371 527.219 344.477 526.984 cv
344.578 526.75 344.629 526.465 344.633 526.129 cv
344.629 525.848 344.586 525.602 344.5 525.383 cv
344.41 525.172 344.273 524.992 344.09 524.844 cv
343.902 524.703 343.668 524.594 343.391 524.523 cv
343.105 524.453 342.77 524.418 342.379 524.414 cv
342.102 524.418 341.863 524.434 341.664 524.457 cv
341.461 524.488 341.273 524.5 341.105 524.496 cv
340.973 524.5 340.883 524.473 340.832 524.41 cv
340.773 524.355 340.746 524.238 340.75 524.066 cv
340.75 520.469 li
340.746 520.32 340.781 520.211 340.855 520.137 cv
340.922 520.066 341.023 520.031 341.16 520.027 cv
345.07 520.027 li
345.105 520.031 345.141 520.039 345.176 520.059 cv
345.207 520.078 345.234 520.109 345.262 520.148 cv
345.281 520.191 345.297 520.246 345.313 520.309 cv
345.32 520.375 345.328 520.449 345.328 520.531 cv
345.328 520.699 345.305 520.824 345.262 520.914 cv
345.219 521.008 345.16 521.055 345.082 521.051 cv
341.922 521.051 li
341.922 523.527 li
342.074 523.504 342.23 523.492 342.391 523.488 cv
342.551 523.484 342.738 523.48 342.949 523.48 cv
343.434 523.48 343.855 523.543 344.223 523.664 cv
344.582 523.785 344.887 523.957 345.133 524.176 cv
345.375 524.398 345.559 524.664 345.688 524.977 cv
345.809 525.293 345.871 525.641 345.875 526.02 cv
cp
f
358.879 528.395 mo
358.879 528.484 358.871 528.555 358.855 528.613 cv
358.84 528.676 358.82 528.727 358.801 528.758 cv
358.777 528.797 358.75 528.82 358.723 528.836 cv
358.691 528.852 358.664 528.859 358.633 528.859 cv
354.02 528.859 li
353.984 528.859 353.953 528.852 353.93 528.836 cv
353.898 528.82 353.875 528.797 353.852 528.758 cv
353.824 528.727 353.805 528.676 353.793 528.613 cv
353.777 528.555 353.77 528.484 353.773 528.395 cv
353.77 528.316 353.777 528.246 353.793 528.184 cv
353.805 528.129 353.82 528.078 353.844 528.039 cv
353.863 528 353.887 527.973 353.918 527.949 cv
353.945 527.934 353.98 527.922 354.02 527.918 cv
355.863 527.918 li
355.863 521.199 li
354.156 522.219 li
354.066 522.266 353.996 522.293 353.945 522.301 cv
353.891 522.312 353.848 522.301 353.82 522.27 cv
353.785 522.242 353.762 522.191 353.754 522.121 cv
353.738 522.055 353.734 521.969 353.738 521.863 cv
353.734 521.785 353.738 521.719 353.746 521.664 cv
353.754 521.609 353.762 521.566 353.777 521.527 cv
353.789 521.496 353.809 521.465 353.836 521.434 cv
353.859 521.41 353.895 521.383 353.938 521.352 cv
355.969 520.047 li
355.984 520.035 356.008 520.027 356.035 520.016 cv
356.063 520.008 356.098 519.996 356.141 519.988 cv
356.18 519.98 356.227 519.977 356.285 519.969 cv
356.336 519.969 356.406 519.965 356.488 519.965 cv
356.598 519.965 356.688 519.973 356.762 519.98 cv
356.832 519.992 356.891 520.004 356.934 520.016 cv
356.973 520.035 357 520.055 357.016 520.078 cv
357.027 520.105 357.031 520.133 357.035 520.156 cv
357.035 527.918 li
358.633 527.918 li
358.668 527.922 358.699 527.934 358.734 527.949 cv
358.762 527.973 358.789 528 358.813 528.039 cv
358.832 528.078 358.848 528.129 358.859 528.184 cv
358.871 528.246 358.879 528.316 358.879 528.395 cv
cp
f
366.16 526 mo
366.156 526.387 366.098 526.762 365.98 527.121 cv
365.863 527.484 365.68 527.805 365.438 528.078 cv
365.188 528.359 364.879 528.578 364.504 528.742 cv
364.125 528.906 363.676 528.988 363.164 528.988 cv
362.793 528.988 362.469 528.945 362.188 528.852 cv
361.902 528.766 361.656 528.637 361.449 528.465 cv
361.238 528.301 361.066 528.094 360.93 527.844 cv
360.789 527.602 360.676 527.32 360.594 527.004 cv
360.508 526.691 360.449 526.348 360.414 525.973 cv
360.375 525.602 360.355 525.199 360.359 524.77 cv
360.355 524.395 360.375 524.016 360.418 523.625 cv
360.457 523.242 360.531 522.867 360.637 522.504 cv
360.742 522.148 360.883 521.812 361.066 521.492 cv
361.242 521.18 361.469 520.902 361.742 520.664 cv
362.012 520.434 362.336 520.25 362.715 520.109 cv
363.09 519.977 363.527 519.906 364.031 519.902 cv
364.195 519.906 364.367 519.918 364.543 519.934 cv
364.715 519.957 364.875 519.984 365.02 520.016 cv
365.164 520.055 365.285 520.09 365.387 520.129 cv
365.484 520.172 365.551 520.207 365.586 520.23 cv
365.617 520.258 365.641 520.285 365.66 520.312 cv
365.672 520.344 365.684 520.375 365.695 520.406 cv
365.703 520.441 365.711 520.48 365.719 520.523 cv
365.719 520.566 365.723 520.617 365.727 520.68 cv
365.723 520.766 365.723 520.84 365.723 520.895 cv
365.719 520.957 365.707 521.004 365.695 521.035 cv
365.676 521.074 365.656 521.102 365.633 521.117 cv
365.605 521.141 365.574 521.148 365.535 521.145 cv
365.48 521.148 365.41 521.133 365.328 521.098 cv
365.238 521.07 365.133 521.035 365.016 520.992 cv
364.891 520.957 364.742 520.922 364.566 520.887 cv
364.391 520.859 364.188 520.844 363.957 520.84 cv
363.531 520.844 363.168 520.93 362.863 521.098 cv
362.559 521.273 362.309 521.504 362.117 521.793 cv
361.922 522.086 361.777 522.426 361.688 522.809 cv
361.59 523.195 361.539 523.598 361.527 524.012 cv
361.645 523.949 361.777 523.879 361.926 523.809 cv
362.074 523.742 362.234 523.684 362.41 523.625 cv
362.582 523.574 362.766 523.527 362.965 523.492 cv
363.16 523.457 363.371 523.441 363.594 523.437 cv
364.07 523.441 364.473 523.504 364.801 523.633 cv
365.125 523.766 365.391 523.949 365.598 524.176 cv
365.797 524.41 365.941 524.68 366.031 524.988 cv
366.113 525.301 366.156 525.637 366.16 526 cv
cp
364.973 526.109 mo
364.973 525.848 364.945 525.605 364.895 525.387 cv
364.84 525.172 364.754 524.988 364.633 524.84 cv
364.508 524.691 364.344 524.578 364.141 524.492 cv
363.934 524.414 363.68 524.371 363.383 524.367 cv
363.211 524.371 363.043 524.387 362.875 524.414 cv
362.707 524.445 362.543 524.484 362.391 524.535 cv
362.23 524.59 362.082 524.652 361.938 524.719 cv
361.793 524.793 361.66 524.871 361.547 524.949 cv
361.543 525.539 361.582 526.027 361.66 526.422 cv
361.734 526.82 361.844 527.141 361.988 527.375 cv
362.129 527.617 362.309 527.785 362.523 527.887 cv
362.734 527.988 362.984 528.039 363.273 528.039 cv
363.563 528.039 363.813 527.984 364.031 527.875 cv
364.242 527.766 364.422 527.621 364.563 527.437 cv
364.703 527.254 364.805 527.047 364.875 526.816 cv
364.938 526.586 364.973 526.352 364.973 526.109 cv
cp
f
378.918 528.395 mo
378.918 528.484 378.91 528.555 378.895 528.613 cv
378.879 528.676 378.859 528.727 378.84 528.758 cv
378.816 528.797 378.789 528.82 378.762 528.836 cv
378.73 528.852 378.703 528.859 378.672 528.859 cv
374.059 528.859 li
374.023 528.859 373.992 528.852 373.969 528.836 cv
373.938 528.82 373.914 528.797 373.891 528.758 cv
373.863 528.727 373.844 528.676 373.832 528.613 cv
373.816 528.555 373.809 528.484 373.813 528.395 cv
373.809 528.316 373.816 528.246 373.832 528.184 cv
373.844 528.129 373.859 528.078 373.883 528.039 cv
373.902 528 373.926 527.973 373.957 527.949 cv
373.984 527.934 374.02 527.922 374.059 527.918 cv
375.902 527.918 li
375.902 521.199 li
374.195 522.219 li
374.105 522.266 374.035 522.293 373.984 522.301 cv
373.93 522.312 373.887 522.301 373.859 522.27 cv
373.824 522.242 373.801 522.191 373.793 522.121 cv
373.777 522.055 373.773 521.969 373.777 521.863 cv
373.773 521.785 373.777 521.719 373.785 521.664 cv
373.793 521.609 373.801 521.566 373.816 521.527 cv
373.828 521.496 373.848 521.465 373.875 521.434 cv
373.898 521.41 373.934 521.383 373.977 521.352 cv
376.008 520.047 li
376.023 520.035 376.047 520.027 376.074 520.016 cv
376.102 520.008 376.137 519.996 376.18 519.988 cv
376.219 519.98 376.266 519.977 376.324 519.969 cv
376.375 519.969 376.445 519.965 376.527 519.965 cv
376.637 519.965 376.727 519.973 376.801 519.98 cv
376.871 519.992 376.93 520.004 376.973 520.016 cv
377.012 520.035 377.039 520.055 377.055 520.078 cv
377.066 520.105 377.07 520.133 377.074 520.156 cv
377.074 527.918 li
378.672 527.918 li
378.707 527.922 378.738 527.934 378.773 527.949 cv
378.801 527.973 378.828 528 378.852 528.039 cv
378.871 528.078 378.887 528.129 378.898 528.184 cv
378.91 528.246 378.918 528.316 378.918 528.395 cv
cp
f
386.109 520.531 mo
386.105 520.617 386.102 520.691 386.098 520.754 cv
386.09 520.824 386.082 520.887 386.07 520.945 cv
386.059 521.008 386.043 521.066 386.023 521.121 cv
386 521.18 385.977 521.242 385.953 521.305 cv
382.77 528.633 li
382.746 528.691 382.719 528.738 382.684 528.77 cv
382.648 528.809 382.605 528.836 382.555 528.852 cv
382.5 528.871 382.43 528.879 382.352 528.887 cv
382.266 528.891 382.168 528.895 382.055 528.898 cv
381.895 528.895 381.773 528.887 381.691 528.879 cv
381.602 528.863 381.539 528.848 381.504 528.816 cv
381.461 528.789 381.445 528.75 381.453 528.707 cv
381.457 528.664 381.473 528.613 381.5 528.551 cv
384.848 521.059 li
380.605 521.059 li
380.516 521.062 380.453 521.016 380.41 520.922 cv
380.367 520.832 380.344 520.703 380.348 520.539 cv
380.344 520.453 380.352 520.379 380.363 520.316 cv
380.375 520.254 380.391 520.199 380.414 520.152 cv
380.434 520.109 380.461 520.078 380.496 520.059 cv
380.527 520.039 380.563 520.031 380.605 520.027 cv
385.754 520.027 li
385.816 520.031 385.871 520.035 385.918 520.047 cv
385.965 520.062 386 520.09 386.027 520.129 cv
386.051 520.172 386.07 520.227 386.086 520.289 cv
386.098 520.355 386.105 520.437 386.109 520.531 cv
cp
f
398.938 528.395 mo
398.938 528.484 398.93 528.555 398.914 528.613 cv
398.898 528.676 398.879 528.727 398.859 528.758 cv
398.836 528.797 398.809 528.82 398.781 528.836 cv
398.75 528.852 398.723 528.859 398.691 528.859 cv
394.078 528.859 li
394.043 528.859 394.012 528.852 393.988 528.836 cv
393.957 528.82 393.934 528.797 393.91 528.758 cv
393.883 528.727 393.863 528.676 393.852 528.613 cv
393.836 528.555 393.828 528.484 393.832 528.395 cv
393.828 528.316 393.836 528.246 393.852 528.184 cv
393.863 528.129 393.879 528.078 393.902 528.039 cv
393.922 528 393.945 527.973 393.977 527.949 cv
394.004 527.934 394.039 527.922 394.078 527.918 cv
395.922 527.918 li
395.922 521.199 li
394.215 522.219 li
394.125 522.266 394.055 522.293 394.004 522.301 cv
393.949 522.312 393.906 522.301 393.879 522.27 cv
393.844 522.242 393.82 522.191 393.813 522.121 cv
393.797 522.055 393.793 521.969 393.797 521.863 cv
393.793 521.785 393.797 521.719 393.805 521.664 cv
393.813 521.609 393.82 521.566 393.836 521.527 cv
393.848 521.496 393.867 521.465 393.895 521.434 cv
393.918 521.41 393.953 521.383 393.996 521.352 cv
396.027 520.047 li
396.043 520.035 396.066 520.027 396.094 520.016 cv
396.121 520.008 396.156 519.996 396.199 519.988 cv
396.238 519.98 396.285 519.977 396.344 519.969 cv
396.395 519.969 396.465 519.965 396.547 519.965 cv
396.656 519.965 396.746 519.973 396.82 519.98 cv
396.891 519.992 396.949 520.004 396.992 520.016 cv
397.031 520.035 397.059 520.055 397.074 520.078 cv
397.086 520.105 397.09 520.133 397.094 520.156 cv
397.094 527.918 li
398.691 527.918 li
398.727 527.922 398.758 527.934 398.793 527.949 cv
398.82 527.973 398.848 528 398.871 528.039 cv
398.891 528.078 398.906 528.129 398.918 528.184 cv
398.93 528.246 398.938 528.316 398.938 528.395 cv
cp
f
406.203 526.594 mo
406.199 526.98 406.133 527.32 405.996 527.617 cv
405.859 527.914 405.66 528.168 405.406 528.371 cv
405.148 528.578 404.832 528.73 404.457 528.832 cv
404.074 528.937 403.645 528.988 403.16 528.988 cv
402.703 528.988 402.293 528.941 401.938 528.848 cv
401.574 528.754 401.27 528.613 401.023 528.426 cv
400.77 528.238 400.578 528.008 400.449 527.734 cv
400.313 527.461 400.246 527.148 400.25 526.797 cv
400.246 526.523 400.293 526.27 400.387 526.035 cv
400.477 525.801 400.605 525.586 400.777 525.391 cv
400.945 525.195 401.156 525.016 401.41 524.844 cv
401.656 524.676 401.941 524.512 402.258 524.355 cv
401.984 524.215 401.742 524.066 401.531 523.906 cv
401.32 523.754 401.141 523.582 401 523.395 cv
400.852 523.211 400.742 523.016 400.672 522.805 cv
400.594 522.602 400.559 522.371 400.559 522.121 cv
400.559 521.812 400.613 521.523 400.727 521.25 cv
400.836 520.98 401.004 520.746 401.23 520.547 cv
401.453 520.348 401.738 520.191 402.09 520.074 cv
402.434 519.961 402.84 519.902 403.309 519.898 cv
403.75 519.902 404.137 519.953 404.465 520.059 cv
404.789 520.168 405.059 520.316 405.27 520.496 cv
405.48 520.684 405.637 520.898 405.738 521.145 cv
405.84 521.398 405.891 521.668 405.891 521.953 cv
405.891 522.187 405.852 522.41 405.777 522.621 cv
405.699 522.836 405.59 523.039 405.445 523.23 cv
405.297 523.422 405.117 523.602 404.91 523.766 cv
404.695 523.934 404.453 524.086 404.184 524.23 cv
404.504 524.391 404.793 524.555 405.047 524.723 cv
405.297 524.895 405.508 525.078 405.68 525.266 cv
405.852 525.461 405.98 525.664 406.07 525.879 cv
406.156 526.098 406.199 526.336 406.203 526.594 cv
cp
404.73 522.059 mo
404.73 521.871 404.695 521.699 404.629 521.543 cv
404.563 521.391 404.465 521.258 404.34 521.145 cv
404.207 521.039 404.051 520.957 403.863 520.898 cv
403.676 520.844 403.461 520.816 403.219 520.812 cv
402.727 520.816 402.355 520.926 402.105 521.148 cv
401.852 521.371 401.723 521.676 401.727 522.059 cv
401.723 522.242 401.754 522.41 401.816 522.559 cv
401.875 522.715 401.973 522.859 402.105 522.992 cv
402.234 523.133 402.398 523.266 402.598 523.391 cv
402.793 523.523 403.027 523.656 403.301 523.793 cv
403.762 523.559 404.113 523.297 404.359 523.008 cv
404.605 522.723 404.73 522.406 404.73 522.059 cv
cp
405.016 526.715 mo
405.012 526.508 404.973 526.32 404.898 526.148 cv
404.82 525.98 404.703 525.82 404.547 525.668 cv
404.387 525.523 404.191 525.379 403.961 525.238 cv
403.723 525.102 403.449 524.957 403.145 524.805 cv
402.855 524.945 402.605 525.09 402.391 525.23 cv
402.172 525.375 401.996 525.52 401.859 525.668 cv
401.719 525.82 401.613 525.977 401.543 526.141 cv
401.473 526.305 401.438 526.488 401.438 526.687 cv
401.438 527.133 401.586 527.477 401.891 527.715 cv
402.191 527.957 402.645 528.074 403.246 528.074 cv
403.828 528.074 404.27 527.953 404.566 527.711 cv
404.863 527.469 405.012 527.137 405.016 526.715 cv
cp
f
418.977 528.395 mo
418.977 528.484 418.969 528.555 418.953 528.613 cv
418.938 528.676 418.918 528.727 418.898 528.758 cv
418.875 528.797 418.848 528.82 418.82 528.836 cv
418.789 528.852 418.762 528.859 418.73 528.859 cv
414.117 528.859 li
414.082 528.859 414.051 528.852 414.027 528.836 cv
413.996 528.82 413.973 528.797 413.949 528.758 cv
413.922 528.727 413.902 528.676 413.891 528.613 cv
413.875 528.555 413.867 528.484 413.871 528.395 cv
413.867 528.316 413.875 528.246 413.891 528.184 cv
413.902 528.129 413.918 528.078 413.941 528.039 cv
413.961 528 413.984 527.973 414.016 527.949 cv
414.043 527.934 414.078 527.922 414.117 527.918 cv
415.961 527.918 li
415.961 521.199 li
414.254 522.219 li
414.164 522.266 414.094 522.293 414.043 522.301 cv
413.988 522.312 413.945 522.301 413.918 522.27 cv
413.883 522.242 413.859 522.191 413.852 522.121 cv
413.836 522.055 413.832 521.969 413.836 521.863 cv
413.832 521.785 413.836 521.719 413.844 521.664 cv
413.852 521.609 413.859 521.566 413.875 521.527 cv
413.887 521.496 413.906 521.465 413.934 521.434 cv
413.957 521.41 413.992 521.383 414.035 521.352 cv
416.066 520.047 li
416.082 520.035 416.105 520.027 416.133 520.016 cv
416.16 520.008 416.195 519.996 416.238 519.988 cv
416.277 519.98 416.324 519.977 416.383 519.969 cv
416.434 519.969 416.504 519.965 416.586 519.965 cv
416.695 519.965 416.785 519.973 416.859 519.98 cv
416.93 519.992 416.988 520.004 417.031 520.016 cv
417.07 520.035 417.098 520.055 417.113 520.078 cv
417.125 520.105 417.129 520.133 417.133 520.156 cv
417.133 527.918 li
418.73 527.918 li
418.766 527.922 418.797 527.934 418.832 527.949 cv
418.859 527.973 418.887 528 418.91 528.039 cv
418.93 528.078 418.945 528.129 418.957 528.184 cv
418.969 528.246 418.977 528.316 418.977 528.395 cv
cp
f
426.105 524.094 mo
426.105 524.48 426.082 524.867 426.035 525.258 cv
425.988 525.652 425.91 526.027 425.805 526.387 cv
425.691 526.746 425.543 527.086 425.363 527.402 cv
425.176 527.719 424.945 527.996 424.668 528.23 cv
424.387 528.473 424.055 528.656 423.672 528.789 cv
423.285 528.922 422.84 528.988 422.332 528.988 cv
422.137 528.988 421.945 528.973 421.762 528.949 cv
421.574 528.922 421.406 528.895 421.262 528.859 cv
421.113 528.824 420.992 528.789 420.891 528.746 cv
420.789 528.707 420.715 528.664 420.672 528.621 cv
420.625 528.582 420.594 528.527 420.574 528.453 cv
420.551 528.387 420.539 528.293 420.543 528.172 cv
420.539 528.074 420.543 527.992 420.551 527.934 cv
420.559 527.875 420.566 527.832 420.582 527.797 cv
420.594 527.766 420.613 527.742 420.641 527.73 cv
420.664 527.719 420.695 527.711 420.734 527.711 cv
420.781 527.711 420.852 527.73 420.945 527.766 cv
421.031 527.801 421.148 527.84 421.289 527.879 cv
421.43 527.922 421.59 527.957 421.777 527.988 cv
421.961 528.023 422.172 528.039 422.406 528.039 cv
422.848 528.039 423.227 527.957 423.543 527.785 cv
423.855 527.617 424.113 527.387 424.316 527.098 cv
424.516 526.812 424.664 526.48 424.766 526.102 cv
424.863 525.727 424.922 525.328 424.934 524.906 cv
424.691 525.051 424.398 525.176 424.063 525.281 cv
423.723 525.395 423.34 525.449 422.906 525.445 cv
422.414 525.449 422 525.383 421.664 525.246 cv
421.328 525.113 421.059 524.93 420.859 524.695 cv
420.652 524.465 420.508 524.191 420.422 523.871 cv
420.332 523.555 420.285 523.203 420.289 522.824 cv
420.285 522.434 420.344 522.062 420.461 521.711 cv
420.574 521.359 420.75 521.051 420.992 520.777 cv
421.23 520.512 421.539 520.297 421.914 520.137 cv
422.285 519.98 422.73 519.902 423.254 519.898 cv
423.617 519.902 423.945 519.949 424.23 520.039 cv
424.516 520.133 424.762 520.266 424.973 520.441 cv
425.18 520.617 425.355 520.828 425.504 521.074 cv
425.645 521.324 425.762 521.605 425.855 521.918 cv
425.941 522.234 426.008 522.574 426.047 522.937 cv
426.086 523.309 426.105 523.695 426.105 524.094 cv
cp
424.91 523.965 mo
424.91 523.387 424.871 522.895 424.793 522.496 cv
424.715 522.098 424.602 521.777 424.453 521.531 cv
424.305 521.285 424.121 521.105 423.902 520.996 cv
423.684 520.887 423.43 520.832 423.145 520.832 cv
422.844 520.832 422.59 520.887 422.383 520.992 cv
422.172 521.102 422 521.246 421.867 521.422 cv
421.73 521.605 421.633 521.809 421.57 522.035 cv
421.508 522.266 421.477 522.5 421.477 522.734 cv
421.477 523.008 421.504 523.254 421.563 523.477 cv
421.617 523.699 421.711 523.887 421.84 524.043 cv
421.965 524.199 422.129 524.32 422.336 524.398 cv
422.539 524.484 422.793 524.523 423.098 524.523 cv
423.438 524.523 423.766 524.473 424.086 524.371 cv
424.398 524.27 424.676 524.137 424.91 523.965 cv
cp
f
438.98 528.355 mo
438.977 528.437 438.969 528.512 438.961 528.574 cv
438.945 528.641 438.93 528.695 438.914 528.734 cv
438.891 528.781 438.863 528.812 438.832 528.828 cv
438.793 528.852 438.758 528.859 438.719 528.859 cv
433.84 528.859 li
433.77 528.859 433.715 528.852 433.672 528.836 cv
433.621 528.82 433.578 528.797 433.547 528.758 cv
433.508 528.727 433.484 528.672 433.473 528.602 cv
433.453 528.531 433.445 528.449 433.449 528.348 cv
433.445 528.262 433.449 528.18 433.461 528.109 cv
433.465 528.043 433.48 527.984 433.508 527.93 cv
433.527 527.879 433.555 527.824 433.594 527.77 cv
433.625 527.719 433.672 527.664 433.73 527.602 cv
435.496 525.789 li
435.902 525.371 436.227 524.996 436.477 524.664 cv
436.719 524.332 436.91 524.031 437.047 523.754 cv
437.18 523.484 437.27 523.234 437.313 523.012 cv
437.352 522.789 437.371 522.582 437.375 522.383 cv
437.371 522.187 437.34 522 437.277 521.824 cv
437.211 521.652 437.113 521.5 436.992 521.367 cv
436.863 521.238 436.707 521.133 436.523 521.051 cv
436.332 520.977 436.117 520.937 435.875 520.934 cv
435.586 520.937 435.328 520.977 435.102 521.051 cv
434.871 521.133 434.672 521.219 434.504 521.305 cv
434.328 521.398 434.184 521.48 434.074 521.555 cv
433.957 521.637 433.871 521.676 433.816 521.672 cv
433.781 521.676 433.754 521.668 433.73 521.645 cv
433.703 521.629 433.68 521.598 433.664 521.555 cv
433.645 521.516 433.633 521.461 433.625 521.391 cv
433.613 521.324 433.609 521.242 433.613 521.145 cv
433.609 521.078 433.613 521.02 433.621 520.969 cv
433.625 520.922 433.633 520.879 433.645 520.84 cv
433.652 520.805 433.664 520.77 433.688 520.738 cv
433.703 520.707 433.742 520.668 433.797 520.617 cv
433.852 520.574 433.945 520.512 434.078 520.426 cv
434.211 520.348 434.379 520.266 434.586 520.18 cv
434.785 520.102 435.008 520.035 435.254 519.98 cv
435.496 519.93 435.754 519.902 436.023 519.898 cv
436.449 519.902 436.82 519.961 437.145 520.078 cv
437.465 520.199 437.734 520.363 437.945 520.574 cv
438.156 520.785 438.313 521.031 438.418 521.305 cv
438.523 521.586 438.578 521.879 438.578 522.191 cv
438.578 522.473 438.551 522.754 438.5 523.035 cv
438.449 523.316 438.344 523.621 438.184 523.941 cv
438.02 524.27 437.785 524.629 437.484 525.027 cv
437.176 525.426 436.773 525.887 436.27 526.402 cv
434.871 527.863 li
438.715 527.863 li
438.746 527.863 438.781 527.875 438.82 527.895 cv
438.852 527.918 438.883 527.949 438.906 527.988 cv
438.93 528.031 438.945 528.082 438.961 528.141 cv
438.969 528.203 438.977 528.273 438.98 528.355 cv
cp
f
446.352 524.422 mo
446.348 525.105 446.293 525.723 446.191 526.281 cv
446.082 526.84 445.906 527.32 445.656 527.723 cv
445.406 528.129 445.082 528.441 444.684 528.66 cv
444.285 528.879 443.789 528.988 443.203 528.988 cv
442.645 528.988 442.18 528.891 441.801 528.691 cv
441.418 528.496 441.109 528.207 440.883 527.82 cv
440.648 527.437 440.484 526.961 440.387 526.398 cv
440.289 525.836 440.242 525.191 440.242 524.465 cv
440.242 523.793 440.297 523.176 440.406 522.609 cv
440.516 522.051 440.691 521.57 440.938 521.164 cv
441.18 520.766 441.504 520.453 441.906 520.23 cv
442.305 520.012 442.797 519.902 443.383 519.898 cv
443.941 519.902 444.41 520 444.789 520.195 cv
445.168 520.395 445.473 520.687 445.707 521.07 cv
445.938 521.457 446.102 521.93 446.203 522.488 cv
446.297 523.055 446.348 523.699 446.352 524.422 cv
cp
445.148 524.504 mo
445.145 524.066 445.129 523.668 445.102 523.316 cv
445.066 522.965 445.02 522.656 444.961 522.387 cv
444.898 522.121 444.82 521.891 444.723 521.695 cv
444.621 521.504 444.504 521.344 444.371 521.219 cv
444.234 521.094 444.078 521.004 443.902 520.945 cv
443.727 520.891 443.531 520.863 443.313 520.859 cv
442.926 520.863 442.609 520.953 442.371 521.133 cv
442.125 521.316 441.938 521.566 441.801 521.883 cv
441.66 522.203 441.563 522.578 441.516 523.004 cv
441.461 523.434 441.438 523.891 441.441 524.383 cv
441.438 525.043 441.473 525.605 441.543 526.066 cv
441.613 526.531 441.719 526.906 441.867 527.195 cv
442.012 527.484 442.203 527.695 442.434 527.828 cv
442.664 527.961 442.941 528.027 443.273 528.027 cv
443.523 528.027 443.75 527.988 443.945 527.906 cv
444.137 527.824 444.301 527.707 444.441 527.555 cv
444.578 527.402 444.695 527.219 444.789 527.004 cv
444.879 526.793 444.949 526.555 445.008 526.293 cv
445.059 526.035 445.098 525.754 445.117 525.449 cv
445.137 525.148 445.145 524.836 445.148 524.504 cv
cp
f
459.02 528.355 mo
459.016 528.437 459.008 528.512 459 528.574 cv
458.984 528.641 458.969 528.695 458.953 528.734 cv
458.93 528.781 458.902 528.812 458.871 528.828 cv
458.832 528.852 458.797 528.859 458.758 528.859 cv
453.879 528.859 li
453.809 528.859 453.754 528.852 453.711 528.836 cv
453.66 528.82 453.617 528.797 453.586 528.758 cv
453.547 528.727 453.523 528.672 453.512 528.602 cv
453.492 528.531 453.484 528.449 453.488 528.348 cv
453.484 528.262 453.488 528.18 453.5 528.109 cv
453.504 528.043 453.52 527.984 453.547 527.93 cv
453.566 527.879 453.594 527.824 453.633 527.77 cv
453.664 527.719 453.711 527.664 453.77 527.602 cv
455.535 525.789 li
455.941 525.371 456.266 524.996 456.516 524.664 cv
456.758 524.332 456.949 524.031 457.086 523.754 cv
457.219 523.484 457.309 523.234 457.352 523.012 cv
457.391 522.789 457.41 522.582 457.414 522.383 cv
457.41 522.187 457.379 522 457.316 521.824 cv
457.25 521.652 457.152 521.5 457.031 521.367 cv
456.902 521.238 456.746 521.133 456.563 521.051 cv
456.371 520.977 456.156 520.937 455.914 520.934 cv
455.625 520.937 455.367 520.977 455.141 521.051 cv
454.91 521.133 454.711 521.219 454.543 521.305 cv
454.367 521.398 454.223 521.48 454.113 521.555 cv
453.996 521.637 453.91 521.676 453.855 521.672 cv
453.82 521.676 453.793 521.668 453.77 521.645 cv
453.742 521.629 453.719 521.598 453.703 521.555 cv
453.684 521.516 453.672 521.461 453.664 521.391 cv
453.652 521.324 453.648 521.242 453.652 521.145 cv
453.648 521.078 453.652 521.02 453.66 520.969 cv
453.664 520.922 453.672 520.879 453.684 520.84 cv
453.691 520.805 453.703 520.77 453.727 520.738 cv
453.742 520.707 453.781 520.668 453.836 520.617 cv
453.891 520.574 453.984 520.512 454.117 520.426 cv
454.25 520.348 454.418 520.266 454.625 520.18 cv
454.824 520.102 455.047 520.035 455.293 519.98 cv
455.535 519.93 455.793 519.902 456.063 519.898 cv
456.488 519.902 456.859 519.961 457.184 520.078 cv
457.504 520.199 457.773 520.363 457.984 520.574 cv
458.195 520.785 458.352 521.031 458.457 521.305 cv
458.563 521.586 458.617 521.879 458.617 522.191 cv
458.617 522.473 458.59 522.754 458.539 523.035 cv
458.488 523.316 458.383 523.621 458.223 523.941 cv
458.059 524.27 457.824 524.629 457.523 525.027 cv
457.215 525.426 456.813 525.887 456.309 526.402 cv
454.91 527.863 li
458.754 527.863 li
458.785 527.863 458.82 527.875 458.859 527.895 cv
458.891 527.918 458.922 527.949 458.945 527.988 cv
458.969 528.031 458.984 528.082 459 528.141 cv
459.008 528.203 459.016 528.273 459.02 528.355 cv
cp
f
466.117 528.395 mo
466.117 528.484 466.109 528.555 466.094 528.613 cv
466.078 528.676 466.059 528.727 466.039 528.758 cv
466.016 528.797 465.988 528.82 465.961 528.836 cv
465.93 528.852 465.902 528.859 465.871 528.859 cv
461.258 528.859 li
461.223 528.859 461.191 528.852 461.168 528.836 cv
461.137 528.82 461.113 528.797 461.09 528.758 cv
461.063 528.727 461.043 528.676 461.031 528.613 cv
461.016 528.555 461.008 528.484 461.012 528.395 cv
461.008 528.316 461.016 528.246 461.031 528.184 cv
461.043 528.129 461.059 528.078 461.082 528.039 cv
461.102 528 461.125 527.973 461.156 527.949 cv
461.184 527.934 461.219 527.922 461.258 527.918 cv
463.102 527.918 li
463.102 521.199 li
461.395 522.219 li
461.305 522.266 461.234 522.293 461.184 522.301 cv
461.129 522.312 461.086 522.301 461.059 522.27 cv
461.023 522.242 461 522.191 460.992 522.121 cv
460.977 522.055 460.973 521.969 460.977 521.863 cv
460.973 521.785 460.977 521.719 460.984 521.664 cv
460.992 521.609 461 521.566 461.016 521.527 cv
461.027 521.496 461.047 521.465 461.074 521.434 cv
461.098 521.41 461.133 521.383 461.176 521.352 cv
463.207 520.047 li
463.223 520.035 463.246 520.027 463.273 520.016 cv
463.301 520.008 463.336 519.996 463.379 519.988 cv
463.418 519.98 463.465 519.977 463.523 519.969 cv
463.574 519.969 463.645 519.965 463.727 519.965 cv
463.836 519.965 463.926 519.973 464 519.98 cv
464.07 519.992 464.129 520.004 464.172 520.016 cv
464.211 520.035 464.238 520.055 464.254 520.078 cv
464.266 520.105 464.27 520.133 464.273 520.156 cv
464.273 527.918 li
465.871 527.918 li
465.906 527.922 465.938 527.934 465.973 527.949 cv
466 527.973 466.027 528 466.051 528.039 cv
466.07 528.078 466.086 528.129 466.098 528.184 cv
466.109 528.246 466.117 528.316 466.117 528.395 cv
cp
f
479.039 528.355 mo
479.035 528.437 479.027 528.512 479.02 528.574 cv
479.004 528.641 478.988 528.695 478.973 528.734 cv
478.949 528.781 478.922 528.812 478.891 528.828 cv
478.852 528.852 478.816 528.859 478.777 528.859 cv
473.898 528.859 li
473.828 528.859 473.773 528.852 473.73 528.836 cv
473.68 528.82 473.637 528.797 473.605 528.758 cv
473.566 528.727 473.543 528.672 473.531 528.602 cv
473.512 528.531 473.504 528.449 473.508 528.348 cv
473.504 528.262 473.508 528.18 473.52 528.109 cv
473.523 528.043 473.539 527.984 473.566 527.93 cv
473.586 527.879 473.613 527.824 473.652 527.77 cv
473.684 527.719 473.73 527.664 473.789 527.602 cv
475.555 525.789 li
475.961 525.371 476.285 524.996 476.535 524.664 cv
476.777 524.332 476.969 524.031 477.105 523.754 cv
477.238 523.484 477.328 523.234 477.371 523.012 cv
477.41 522.789 477.43 522.582 477.434 522.383 cv
477.43 522.187 477.398 522 477.336 521.824 cv
477.27 521.652 477.172 521.5 477.051 521.367 cv
476.922 521.238 476.766 521.133 476.582 521.051 cv
476.391 520.977 476.176 520.937 475.934 520.934 cv
475.645 520.937 475.387 520.977 475.16 521.051 cv
474.93 521.133 474.73 521.219 474.563 521.305 cv
474.387 521.398 474.242 521.48 474.133 521.555 cv
474.016 521.637 473.93 521.676 473.875 521.672 cv
473.84 521.676 473.813 521.668 473.789 521.645 cv
473.762 521.629 473.738 521.598 473.723 521.555 cv
473.703 521.516 473.691 521.461 473.684 521.391 cv
473.672 521.324 473.668 521.242 473.672 521.145 cv
473.668 521.078 473.672 521.02 473.68 520.969 cv
473.684 520.922 473.691 520.879 473.703 520.84 cv
473.711 520.805 473.723 520.77 473.746 520.738 cv
473.762 520.707 473.801 520.668 473.855 520.617 cv
473.91 520.574 474.004 520.512 474.137 520.426 cv
474.27 520.348 474.438 520.266 474.645 520.18 cv
474.844 520.102 475.066 520.035 475.313 519.98 cv
475.555 519.93 475.813 519.902 476.082 519.898 cv
476.508 519.902 476.879 519.961 477.203 520.078 cv
477.523 520.199 477.793 520.363 478.004 520.574 cv
478.215 520.785 478.371 521.031 478.477 521.305 cv
478.582 521.586 478.637 521.879 478.637 522.191 cv
478.637 522.473 478.609 522.754 478.559 523.035 cv
478.508 523.316 478.402 523.621 478.242 523.941 cv
478.078 524.27 477.844 524.629 477.543 525.027 cv
477.234 525.426 476.832 525.887 476.328 526.402 cv
474.93 527.863 li
478.773 527.863 li
478.805 527.863 478.84 527.875 478.879 527.895 cv
478.91 527.918 478.941 527.949 478.965 527.988 cv
478.988 528.031 479.004 528.082 479.02 528.141 cv
479.027 528.203 479.035 528.273 479.039 528.355 cv
cp
f
486.117 528.355 mo
486.113 528.437 486.105 528.512 486.098 528.574 cv
486.082 528.641 486.066 528.695 486.051 528.734 cv
486.027 528.781 486 528.812 485.969 528.828 cv
485.93 528.852 485.895 528.859 485.855 528.859 cv
480.977 528.859 li
480.906 528.859 480.852 528.852 480.809 528.836 cv
480.758 528.82 480.715 528.797 480.684 528.758 cv
480.645 528.727 480.621 528.672 480.609 528.602 cv
480.59 528.531 480.582 528.449 480.586 528.348 cv
480.582 528.262 480.586 528.18 480.598 528.109 cv
480.602 528.043 480.617 527.984 480.645 527.93 cv
480.664 527.879 480.691 527.824 480.73 527.77 cv
480.762 527.719 480.809 527.664 480.867 527.602 cv
482.633 525.789 li
483.039 525.371 483.363 524.996 483.613 524.664 cv
483.855 524.332 484.047 524.031 484.184 523.754 cv
484.316 523.484 484.406 523.234 484.449 523.012 cv
484.488 522.789 484.508 522.582 484.512 522.383 cv
484.508 522.187 484.477 522 484.414 521.824 cv
484.348 521.652 484.25 521.5 484.129 521.367 cv
484 521.238 483.844 521.133 483.66 521.051 cv
483.469 520.977 483.254 520.937 483.012 520.934 cv
482.723 520.937 482.465 520.977 482.238 521.051 cv
482.008 521.133 481.809 521.219 481.641 521.305 cv
481.465 521.398 481.32 521.48 481.211 521.555 cv
481.094 521.637 481.008 521.676 480.953 521.672 cv
480.918 521.676 480.891 521.668 480.867 521.645 cv
480.84 521.629 480.816 521.598 480.801 521.555 cv
480.781 521.516 480.77 521.461 480.762 521.391 cv
480.75 521.324 480.746 521.242 480.75 521.145 cv
480.746 521.078 480.75 521.02 480.758 520.969 cv
480.762 520.922 480.77 520.879 480.781 520.84 cv
480.789 520.805 480.801 520.77 480.824 520.738 cv
480.84 520.707 480.879 520.668 480.934 520.617 cv
480.988 520.574 481.082 520.512 481.215 520.426 cv
481.348 520.348 481.516 520.266 481.723 520.18 cv
481.922 520.102 482.145 520.035 482.391 519.98 cv
482.633 519.93 482.891 519.902 483.16 519.898 cv
483.586 519.902 483.957 519.961 484.281 520.078 cv
484.602 520.199 484.871 520.363 485.082 520.574 cv
485.293 520.785 485.449 521.031 485.555 521.305 cv
485.66 521.586 485.715 521.879 485.715 522.191 cv
485.715 522.473 485.688 522.754 485.637 523.035 cv
485.586 523.316 485.48 523.621 485.32 523.941 cv
485.156 524.27 484.922 524.629 484.621 525.027 cv
484.313 525.426 483.91 525.887 483.406 526.402 cv
482.008 527.863 li
485.852 527.863 li
485.883 527.863 485.918 527.875 485.957 527.895 cv
485.988 527.918 486.02 527.949 486.043 527.988 cv
486.066 528.031 486.082 528.082 486.098 528.141 cv
486.105 528.203 486.113 528.273 486.117 528.355 cv
cp
f
499.078 528.355 mo
499.074 528.437 499.066 528.512 499.059 528.574 cv
499.043 528.641 499.027 528.695 499.012 528.734 cv
498.988 528.781 498.961 528.812 498.93 528.828 cv
498.891 528.852 498.855 528.859 498.816 528.859 cv
493.938 528.859 li
493.867 528.859 493.813 528.852 493.77 528.836 cv
493.719 528.82 493.676 528.797 493.645 528.758 cv
493.605 528.727 493.582 528.672 493.57 528.602 cv
493.551 528.531 493.543 528.449 493.547 528.348 cv
493.543 528.262 493.547 528.18 493.559 528.109 cv
493.563 528.043 493.578 527.984 493.605 527.93 cv
493.625 527.879 493.652 527.824 493.691 527.77 cv
493.723 527.719 493.77 527.664 493.828 527.602 cv
495.594 525.789 li
496 525.371 496.324 524.996 496.574 524.664 cv
496.816 524.332 497.008 524.031 497.145 523.754 cv
497.277 523.484 497.367 523.234 497.41 523.012 cv
497.449 522.789 497.469 522.582 497.473 522.383 cv
497.469 522.187 497.438 522 497.375 521.824 cv
497.309 521.652 497.211 521.5 497.09 521.367 cv
496.961 521.238 496.805 521.133 496.621 521.051 cv
496.43 520.977 496.215 520.937 495.973 520.934 cv
495.684 520.937 495.426 520.977 495.199 521.051 cv
494.969 521.133 494.77 521.219 494.602 521.305 cv
494.426 521.398 494.281 521.48 494.172 521.555 cv
494.055 521.637 493.969 521.676 493.914 521.672 cv
493.879 521.676 493.852 521.668 493.828 521.645 cv
493.801 521.629 493.777 521.598 493.762 521.555 cv
493.742 521.516 493.73 521.461 493.723 521.391 cv
493.711 521.324 493.707 521.242 493.711 521.145 cv
493.707 521.078 493.711 521.02 493.719 520.969 cv
493.723 520.922 493.73 520.879 493.742 520.84 cv
493.75 520.805 493.762 520.77 493.785 520.738 cv
493.801 520.707 493.84 520.668 493.895 520.617 cv
493.949 520.574 494.043 520.512 494.176 520.426 cv
494.309 520.348 494.477 520.266 494.684 520.18 cv
494.883 520.102 495.105 520.035 495.352 519.98 cv
495.594 519.93 495.852 519.902 496.121 519.898 cv
496.547 519.902 496.918 519.961 497.242 520.078 cv
497.563 520.199 497.832 520.363 498.043 520.574 cv
498.254 520.785 498.41 521.031 498.516 521.305 cv
498.621 521.586 498.676 521.879 498.676 522.191 cv
498.676 522.473 498.648 522.754 498.598 523.035 cv
498.547 523.316 498.441 523.621 498.281 523.941 cv
498.117 524.27 497.883 524.629 497.582 525.027 cv
497.273 525.426 496.871 525.887 496.367 526.402 cv
494.969 527.863 li
498.813 527.863 li
498.844 527.863 498.879 527.875 498.918 527.895 cv
498.949 527.918 498.98 527.949 499.004 527.988 cv
499.027 528.031 499.043 528.082 499.059 528.141 cv
499.066 528.203 499.074 528.273 499.078 528.355 cv
cp
f
506.09 526.332 mo
506.086 526.742 506.016 527.105 505.879 527.43 cv
505.734 527.758 505.531 528.039 505.27 528.266 cv
505.004 528.5 504.68 528.676 504.293 528.801 cv
503.906 528.926 503.469 528.988 502.984 528.988 cv
502.688 528.988 502.41 528.965 502.156 528.918 cv
501.895 528.871 501.668 528.816 501.469 528.75 cv
501.266 528.684 501.098 528.613 500.969 528.543 cv
500.836 528.473 500.754 528.422 500.723 528.391 cv
500.688 528.359 500.66 528.328 500.645 528.293 cv
500.621 528.266 500.605 528.227 500.594 528.18 cv
500.578 528.133 500.566 528.078 500.563 528.012 cv
500.555 527.945 500.555 527.863 500.555 527.766 cv
500.555 527.605 500.57 527.492 500.602 527.426 cv
500.633 527.367 500.68 527.336 500.742 527.332 cv
500.785 527.336 500.867 527.371 500.992 527.441 cv
501.113 527.512 501.273 527.59 501.469 527.676 cv
501.66 527.762 501.883 527.84 502.145 527.91 cv
502.402 527.984 502.691 528.023 503.012 528.02 cv
503.316 528.023 503.59 527.984 503.824 527.906 cv
504.059 527.832 504.254 527.723 504.414 527.578 cv
504.57 527.437 504.688 527.27 504.77 527.074 cv
504.848 526.883 504.891 526.672 504.891 526.441 cv
504.891 526.195 504.84 525.969 504.738 525.766 cv
504.637 525.566 504.488 525.395 504.293 525.25 cv
504.098 525.105 503.855 524.996 503.574 524.914 cv
503.285 524.84 502.965 524.801 502.605 524.797 cv
501.738 524.797 li
501.699 524.801 501.66 524.793 501.625 524.773 cv
501.59 524.762 501.559 524.734 501.535 524.695 cv
501.508 524.66 501.488 524.613 501.473 524.555 cv
501.453 524.496 501.445 524.418 501.449 524.32 cv
501.445 524.238 501.453 524.168 501.469 524.105 cv
501.48 524.051 501.5 524.004 501.527 523.969 cv
501.551 523.937 501.578 523.914 501.613 523.895 cv
501.641 523.883 501.676 523.875 501.723 523.871 cv
502.492 523.871 li
502.793 523.875 503.063 523.836 503.301 523.754 cv
503.539 523.68 503.742 523.566 503.91 523.418 cv
504.074 523.273 504.203 523.102 504.293 522.898 cv
504.379 522.699 504.422 522.473 504.426 522.219 cv
504.422 522.039 504.391 521.863 504.336 521.695 cv
504.273 521.531 504.188 521.387 504.07 521.262 cv
503.953 521.141 503.801 521.043 503.617 520.973 cv
503.43 520.902 503.215 520.867 502.977 520.867 cv
502.711 520.867 502.469 520.91 502.25 520.988 cv
502.023 521.07 501.828 521.152 501.66 521.242 cv
501.484 521.336 501.34 521.422 501.23 521.5 cv
501.113 521.578 501.035 521.617 500.992 521.617 cv
500.957 521.617 500.93 521.613 500.906 521.602 cv
500.879 521.59 500.855 521.566 500.844 521.531 cv
500.824 521.5 500.813 521.453 500.809 521.391 cv
500.801 521.332 500.801 521.25 500.801 521.145 cv
500.801 521.078 500.801 521.02 500.805 520.965 cv
500.809 520.918 500.816 520.871 500.832 520.828 cv
500.844 520.793 500.863 520.758 500.883 520.723 cv
500.898 520.695 500.926 520.66 500.973 520.613 cv
501.012 520.574 501.102 520.512 501.234 520.426 cv
501.367 520.348 501.527 520.266 501.723 520.18 cv
501.914 520.102 502.141 520.035 502.395 519.98 cv
502.645 519.93 502.914 519.902 503.211 519.898 cv
503.617 519.902 503.977 519.953 504.289 520.055 cv
504.594 520.16 504.852 520.309 505.063 520.5 cv
505.266 520.691 505.422 520.918 505.527 521.184 cv
505.625 521.449 505.676 521.746 505.68 522.066 cv
505.676 522.348 505.641 522.605 505.57 522.844 cv
505.496 523.082 505.387 523.293 505.25 523.477 cv
505.105 523.664 504.934 523.82 504.73 523.949 cv
504.523 524.078 504.289 524.168 504.023 524.219 cv
504.023 524.23 li
504.328 524.262 504.605 524.34 504.859 524.461 cv
505.109 524.582 505.328 524.734 505.512 524.914 cv
505.691 525.102 505.832 525.312 505.938 525.555 cv
506.035 525.797 506.086 526.059 506.09 526.332 cv
cp
f
519.117 528.355 mo
519.113 528.437 519.105 528.512 519.098 528.574 cv
519.082 528.641 519.066 528.695 519.051 528.734 cv
519.027 528.781 519 528.812 518.969 528.828 cv
518.93 528.852 518.895 528.859 518.855 528.859 cv
513.977 528.859 li
513.906 528.859 513.852 528.852 513.809 528.836 cv
513.758 528.82 513.715 528.797 513.684 528.758 cv
513.645 528.727 513.621 528.672 513.609 528.602 cv
513.59 528.531 513.582 528.449 513.586 528.348 cv
513.582 528.262 513.586 528.18 513.598 528.109 cv
513.602 528.043 513.617 527.984 513.645 527.93 cv
513.664 527.879 513.691 527.824 513.73 527.77 cv
513.762 527.719 513.809 527.664 513.867 527.602 cv
515.633 525.789 li
516.039 525.371 516.363 524.996 516.613 524.664 cv
516.855 524.332 517.047 524.031 517.184 523.754 cv
517.316 523.484 517.406 523.234 517.449 523.012 cv
517.488 522.789 517.508 522.582 517.512 522.383 cv
517.508 522.187 517.477 522 517.414 521.824 cv
517.348 521.652 517.25 521.5 517.129 521.367 cv
517 521.238 516.844 521.133 516.66 521.051 cv
516.469 520.977 516.254 520.937 516.012 520.934 cv
515.723 520.937 515.465 520.977 515.238 521.051 cv
515.008 521.133 514.809 521.219 514.641 521.305 cv
514.465 521.398 514.32 521.48 514.211 521.555 cv
514.094 521.637 514.008 521.676 513.953 521.672 cv
513.918 521.676 513.891 521.668 513.867 521.645 cv
513.84 521.629 513.816 521.598 513.801 521.555 cv
513.781 521.516 513.77 521.461 513.762 521.391 cv
513.75 521.324 513.746 521.242 513.75 521.145 cv
513.746 521.078 513.75 521.02 513.758 520.969 cv
513.762 520.922 513.77 520.879 513.781 520.84 cv
513.789 520.805 513.801 520.77 513.824 520.738 cv
513.84 520.707 513.879 520.668 513.934 520.617 cv
513.988 520.574 514.082 520.512 514.215 520.426 cv
514.348 520.348 514.516 520.266 514.723 520.18 cv
514.922 520.102 515.145 520.035 515.391 519.98 cv
515.633 519.93 515.891 519.902 516.16 519.898 cv
516.586 519.902 516.957 519.961 517.281 520.078 cv
517.602 520.199 517.871 520.363 518.082 520.574 cv
518.293 520.785 518.449 521.031 518.555 521.305 cv
518.66 521.586 518.715 521.879 518.715 522.191 cv
518.715 522.473 518.688 522.754 518.637 523.035 cv
518.586 523.316 518.48 523.621 518.32 523.941 cv
518.156 524.27 517.922 524.629 517.621 525.027 cv
517.313 525.426 516.91 525.887 516.406 526.402 cv
515.008 527.863 li
518.852 527.863 li
518.883 527.863 518.918 527.875 518.957 527.895 cv
518.988 527.918 519.02 527.949 519.043 527.988 cv
519.066 528.031 519.082 528.082 519.098 528.141 cv
519.105 528.203 519.113 528.273 519.117 528.355 cv
cp
f
526.574 526.348 mo
526.57 526.5 526.547 526.617 526.504 526.703 cv
526.457 526.789 526.395 526.832 526.313 526.832 cv
525.316 526.832 li
525.316 528.687 li
525.316 528.727 525.305 528.758 525.289 528.781 cv
525.266 528.812 525.234 528.832 525.191 528.848 cv
525.141 528.863 525.078 528.875 525.008 528.883 cv
524.93 528.891 524.836 528.895 524.719 528.898 cv
524.605 528.895 524.512 528.891 524.438 528.883 cv
524.359 528.875 524.297 528.863 524.258 528.848 cv
524.211 528.832 524.184 528.812 524.168 528.781 cv
524.152 528.758 524.145 528.727 524.145 528.687 cv
524.145 526.832 li
520.531 526.832 li
520.473 526.832 520.43 526.828 520.395 526.812 cv
520.355 526.805 520.32 526.777 520.297 526.738 cv
520.266 526.703 520.246 526.652 520.234 526.582 cv
520.223 526.516 520.219 526.426 520.219 526.312 cv
520.219 526.23 520.219 526.152 520.223 526.082 cv
520.227 526.016 520.234 525.953 520.25 525.895 cv
520.262 525.84 520.281 525.785 520.305 525.73 cv
520.324 525.68 520.352 525.625 520.387 525.562 cv
523.535 520.195 li
523.559 520.16 523.59 520.129 523.637 520.102 cv
523.676 520.074 523.734 520.051 523.805 520.031 cv
523.875 520.016 523.961 520.004 524.063 519.996 cv
524.164 519.992 524.285 519.988 524.426 519.984 cv
524.578 519.988 524.711 519.996 524.824 520.004 cv
524.938 520.02 525.027 520.031 525.102 520.047 cv
525.168 520.066 525.223 520.094 525.262 520.121 cv
525.297 520.152 525.316 520.184 525.316 520.223 cv
525.316 525.863 li
526.313 525.863 li
526.391 525.867 526.453 525.906 526.5 525.984 cv
526.547 526.066 526.57 526.187 526.574 526.348 cv
cp
524.145 521.016 mo
524.129 521.016 li
521.289 525.863 li
524.145 525.863 li
cp
f
539.137 528.355 mo
539.133 528.437 539.125 528.512 539.117 528.574 cv
539.102 528.641 539.086 528.695 539.07 528.734 cv
539.047 528.781 539.02 528.812 538.988 528.828 cv
538.949 528.852 538.914 528.859 538.875 528.859 cv
533.996 528.859 li
533.926 528.859 533.871 528.852 533.828 528.836 cv
533.777 528.82 533.734 528.797 533.703 528.758 cv
533.664 528.727 533.641 528.672 533.629 528.602 cv
533.609 528.531 533.602 528.449 533.605 528.348 cv
533.602 528.262 533.605 528.18 533.617 528.109 cv
533.621 528.043 533.637 527.984 533.664 527.93 cv
533.684 527.879 533.711 527.824 533.75 527.77 cv
533.781 527.719 533.828 527.664 533.887 527.602 cv
535.652 525.789 li
536.059 525.371 536.383 524.996 536.633 524.664 cv
536.875 524.332 537.066 524.031 537.203 523.754 cv
537.336 523.484 537.426 523.234 537.469 523.012 cv
537.508 522.789 537.527 522.582 537.531 522.383 cv
537.527 522.187 537.496 522 537.434 521.824 cv
537.367 521.652 537.27 521.5 537.148 521.367 cv
537.02 521.238 536.863 521.133 536.68 521.051 cv
536.488 520.977 536.273 520.937 536.031 520.934 cv
535.742 520.937 535.484 520.977 535.258 521.051 cv
535.027 521.133 534.828 521.219 534.66 521.305 cv
534.484 521.398 534.34 521.48 534.23 521.555 cv
534.113 521.637 534.027 521.676 533.973 521.672 cv
533.938 521.676 533.91 521.668 533.887 521.645 cv
533.859 521.629 533.836 521.598 533.82 521.555 cv
533.801 521.516 533.789 521.461 533.781 521.391 cv
533.77 521.324 533.766 521.242 533.77 521.145 cv
533.766 521.078 533.77 521.02 533.777 520.969 cv
533.781 520.922 533.789 520.879 533.801 520.84 cv
533.809 520.805 533.82 520.77 533.844 520.738 cv
533.859 520.707 533.898 520.668 533.953 520.617 cv
534.008 520.574 534.102 520.512 534.234 520.426 cv
534.367 520.348 534.535 520.266 534.742 520.18 cv
534.941 520.102 535.164 520.035 535.41 519.98 cv
535.652 519.93 535.91 519.902 536.18 519.898 cv
536.605 519.902 536.977 519.961 537.301 520.078 cv
537.621 520.199 537.891 520.363 538.102 520.574 cv
538.313 520.785 538.469 521.031 538.574 521.305 cv
538.68 521.586 538.734 521.879 538.734 522.191 cv
538.734 522.473 538.707 522.754 538.656 523.035 cv
538.605 523.316 538.5 523.621 538.34 523.941 cv
538.176 524.27 537.941 524.629 537.641 525.027 cv
537.332 525.426 536.93 525.887 536.426 526.402 cv
535.027 527.863 li
538.871 527.863 li
538.902 527.863 538.938 527.875 538.977 527.895 cv
539.008 527.918 539.039 527.949 539.063 527.988 cv
539.086 528.031 539.102 528.082 539.117 528.141 cv
539.125 528.203 539.133 528.273 539.137 528.355 cv
cp
f
546.176 526.02 mo
546.172 526.496 546.094 526.918 545.938 527.285 cv
545.777 527.656 545.551 527.965 545.262 528.215 cv
544.965 528.469 544.617 528.664 544.219 528.793 cv
543.813 528.926 543.367 528.988 542.879 528.988 cv
542.602 528.988 542.344 528.969 542.102 528.93 cv
541.855 528.891 541.637 528.844 541.445 528.789 cv
541.254 528.734 541.094 528.68 540.973 528.621 cv
540.848 528.57 540.77 528.527 540.738 528.492 cv
540.699 528.461 540.676 528.43 540.668 528.402 cv
540.652 528.375 540.641 528.344 540.629 528.305 cv
540.617 528.27 540.609 528.219 540.605 528.156 cv
540.598 528.098 540.594 528.027 540.598 527.945 cv
540.594 527.867 540.598 527.801 540.609 527.738 cv
540.613 527.68 540.629 527.629 540.648 527.586 cv
540.664 527.551 540.684 527.52 540.711 527.5 cv
540.734 527.484 540.762 527.477 540.797 527.473 cv
540.84 527.477 540.91 527.504 541.008 527.559 cv
541.102 527.617 541.23 527.68 541.395 527.746 cv
541.551 527.812 541.754 527.875 541.996 527.934 cv
542.234 527.992 542.516 528.023 542.844 528.02 cv
543.148 528.023 543.43 527.984 543.684 527.91 cv
543.938 527.84 544.156 527.727 544.344 527.57 cv
544.527 527.414 544.672 527.219 544.777 526.984 cv
544.879 526.75 544.93 526.465 544.934 526.129 cv
544.93 525.848 544.887 525.602 544.801 525.383 cv
544.711 525.172 544.574 524.992 544.391 524.844 cv
544.203 524.703 543.969 524.594 543.691 524.523 cv
543.406 524.453 543.07 524.418 542.68 524.414 cv
542.402 524.418 542.164 524.434 541.965 524.457 cv
541.762 524.488 541.574 524.5 541.406 524.496 cv
541.273 524.5 541.184 524.473 541.133 524.41 cv
541.074 524.355 541.047 524.238 541.051 524.066 cv
541.051 520.469 li
541.047 520.32 541.082 520.211 541.156 520.137 cv
541.223 520.066 541.324 520.031 541.461 520.027 cv
545.371 520.027 li
545.406 520.031 545.441 520.039 545.477 520.059 cv
545.508 520.078 545.535 520.109 545.563 520.148 cv
545.582 520.191 545.598 520.246 545.613 520.309 cv
545.621 520.375 545.629 520.449 545.629 520.531 cv
545.629 520.699 545.605 520.824 545.563 520.914 cv
545.52 521.008 545.461 521.055 545.383 521.051 cv
542.223 521.051 li
542.223 523.527 li
542.375 523.504 542.531 523.492 542.691 523.488 cv
542.852 523.484 543.039 523.48 543.25 523.48 cv
543.734 523.48 544.156 523.543 544.523 523.664 cv
544.883 523.785 545.188 523.957 545.434 524.176 cv
545.676 524.398 545.859 524.664 545.988 524.977 cv
546.109 525.293 546.172 525.641 546.176 526.02 cv
cp
f
559.18 528.355 mo
559.176 528.437 559.168 528.512 559.16 528.574 cv
559.145 528.641 559.129 528.695 559.113 528.734 cv
559.09 528.781 559.063 528.812 559.031 528.828 cv
558.992 528.852 558.957 528.859 558.918 528.859 cv
554.039 528.859 li
553.969 528.859 553.914 528.852 553.871 528.836 cv
553.82 528.82 553.777 528.797 553.746 528.758 cv
553.707 528.727 553.684 528.672 553.672 528.602 cv
553.652 528.531 553.645 528.449 553.648 528.348 cv
553.645 528.262 553.648 528.18 553.66 528.109 cv
553.664 528.043 553.68 527.984 553.707 527.93 cv
553.727 527.879 553.754 527.824 553.793 527.77 cv
553.824 527.719 553.871 527.664 553.93 527.602 cv
555.695 525.789 li
556.102 525.371 556.426 524.996 556.676 524.664 cv
556.918 524.332 557.109 524.031 557.246 523.754 cv
557.379 523.484 557.469 523.234 557.512 523.012 cv
557.551 522.789 557.57 522.582 557.574 522.383 cv
557.57 522.187 557.539 522 557.477 521.824 cv
557.41 521.652 557.313 521.5 557.191 521.367 cv
557.063 521.238 556.906 521.133 556.723 521.051 cv
556.531 520.977 556.316 520.937 556.074 520.934 cv
555.785 520.937 555.527 520.977 555.301 521.051 cv
555.07 521.133 554.871 521.219 554.703 521.305 cv
554.527 521.398 554.383 521.48 554.273 521.555 cv
554.156 521.637 554.07 521.676 554.016 521.672 cv
553.98 521.676 553.953 521.668 553.93 521.645 cv
553.902 521.629 553.879 521.598 553.863 521.555 cv
553.844 521.516 553.832 521.461 553.824 521.391 cv
553.813 521.324 553.809 521.242 553.813 521.145 cv
553.809 521.078 553.813 521.02 553.82 520.969 cv
553.824 520.922 553.832 520.879 553.844 520.84 cv
553.852 520.805 553.863 520.77 553.887 520.738 cv
553.902 520.707 553.941 520.668 553.996 520.617 cv
554.051 520.574 554.145 520.512 554.277 520.426 cv
554.41 520.348 554.578 520.266 554.785 520.18 cv
554.984 520.102 555.207 520.035 555.453 519.98 cv
555.695 519.93 555.953 519.902 556.223 519.898 cv
556.648 519.902 557.02 519.961 557.344 520.078 cv
557.664 520.199 557.934 520.363 558.145 520.574 cv
558.355 520.785 558.512 521.031 558.617 521.305 cv
558.723 521.586 558.777 521.879 558.777 522.191 cv
558.777 522.473 558.75 522.754 558.699 523.035 cv
558.648 523.316 558.543 523.621 558.383 523.941 cv
558.219 524.27 557.984 524.629 557.684 525.027 cv
557.375 525.426 556.973 525.887 556.469 526.402 cv
555.07 527.863 li
558.914 527.863 li
558.945 527.863 558.98 527.875 559.02 527.895 cv
559.051 527.918 559.082 527.949 559.105 527.988 cv
559.129 528.031 559.145 528.082 559.16 528.141 cv
559.168 528.203 559.176 528.273 559.18 528.355 cv
cp
f
566.48 526 mo
566.477 526.387 566.418 526.762 566.301 527.121 cv
566.184 527.484 566 527.805 565.758 528.078 cv
565.508 528.359 565.199 528.578 564.824 528.742 cv
564.445 528.906 563.996 528.988 563.484 528.988 cv
563.113 528.988 562.789 528.945 562.508 528.852 cv
562.223 528.766 561.977 528.637 561.77 528.465 cv
561.559 528.301 561.387 528.094 561.25 527.844 cv
561.109 527.602 560.996 527.32 560.914 527.004 cv
560.828 526.691 560.77 526.348 560.734 525.973 cv
560.695 525.602 560.676 525.199 560.68 524.77 cv
560.676 524.395 560.695 524.016 560.738 523.625 cv
560.777 523.242 560.852 522.867 560.957 522.504 cv
561.063 522.148 561.203 521.812 561.387 521.492 cv
561.563 521.18 561.789 520.902 562.063 520.664 cv
562.332 520.434 562.656 520.25 563.035 520.109 cv
563.41 519.977 563.848 519.906 564.352 519.902 cv
564.516 519.906 564.688 519.918 564.863 519.934 cv
565.035 519.957 565.195 519.984 565.34 520.016 cv
565.484 520.055 565.605 520.09 565.707 520.129 cv
565.805 520.172 565.871 520.207 565.906 520.23 cv
565.938 520.258 565.961 520.285 565.98 520.312 cv
565.992 520.344 566.004 520.375 566.016 520.406 cv
566.023 520.441 566.031 520.48 566.039 520.523 cv
566.039 520.566 566.043 520.617 566.047 520.68 cv
566.043 520.766 566.043 520.84 566.043 520.895 cv
566.039 520.957 566.027 521.004 566.016 521.035 cv
565.996 521.074 565.977 521.102 565.953 521.117 cv
565.926 521.141 565.895 521.148 565.855 521.145 cv
565.801 521.148 565.73 521.133 565.648 521.098 cv
565.559 521.07 565.453 521.035 565.336 520.992 cv
565.211 520.957 565.063 520.922 564.887 520.887 cv
564.711 520.859 564.508 520.844 564.277 520.84 cv
563.852 520.844 563.488 520.93 563.184 521.098 cv
562.879 521.273 562.629 521.504 562.438 521.793 cv
562.242 522.086 562.098 522.426 562.008 522.809 cv
561.91 523.195 561.859 523.598 561.848 524.012 cv
561.965 523.949 562.098 523.879 562.246 523.809 cv
562.395 523.742 562.555 523.684 562.73 523.625 cv
562.902 523.574 563.086 523.527 563.285 523.492 cv
563.48 523.457 563.691 523.441 563.914 523.437 cv
564.391 523.441 564.793 523.504 565.121 523.633 cv
565.445 523.766 565.711 523.949 565.918 524.176 cv
566.117 524.41 566.262 524.68 566.352 524.988 cv
566.434 525.301 566.477 525.637 566.48 526 cv
cp
565.293 526.109 mo
565.293 525.848 565.266 525.605 565.215 525.387 cv
565.16 525.172 565.074 524.988 564.953 524.84 cv
564.828 524.691 564.664 524.578 564.461 524.492 cv
564.254 524.414 564 524.371 563.703 524.367 cv
563.531 524.371 563.363 524.387 563.195 524.414 cv
563.027 524.445 562.863 524.484 562.711 524.535 cv
562.551 524.59 562.402 524.652 562.258 524.719 cv
562.113 524.793 561.98 524.871 561.867 524.949 cv
561.863 525.539 561.902 526.027 561.98 526.422 cv
562.055 526.82 562.164 527.141 562.309 527.375 cv
562.449 527.617 562.629 527.785 562.844 527.887 cv
563.055 527.988 563.305 528.039 563.594 528.039 cv
563.883 528.039 564.133 527.984 564.352 527.875 cv
564.563 527.766 564.742 527.621 564.883 527.437 cv
565.023 527.254 565.125 527.047 565.195 526.816 cv
565.258 526.586 565.293 526.352 565.293 526.109 cv
cp
f
579.199 528.355 mo
579.195 528.437 579.188 528.512 579.18 528.574 cv
579.164 528.641 579.148 528.695 579.133 528.734 cv
579.109 528.781 579.082 528.812 579.051 528.828 cv
579.012 528.852 578.977 528.859 578.938 528.859 cv
574.059 528.859 li
573.988 528.859 573.934 528.852 573.891 528.836 cv
573.84 528.82 573.797 528.797 573.766 528.758 cv
573.727 528.727 573.703 528.672 573.691 528.602 cv
573.672 528.531 573.664 528.449 573.668 528.348 cv
573.664 528.262 573.668 528.18 573.68 528.109 cv
573.684 528.043 573.699 527.984 573.727 527.93 cv
573.746 527.879 573.773 527.824 573.813 527.77 cv
573.844 527.719 573.891 527.664 573.949 527.602 cv
575.715 525.789 li
576.121 525.371 576.445 524.996 576.695 524.664 cv
576.938 524.332 577.129 524.031 577.266 523.754 cv
577.398 523.484 577.488 523.234 577.531 523.012 cv
577.57 522.789 577.59 522.582 577.594 522.383 cv
577.59 522.187 577.559 522 577.496 521.824 cv
577.43 521.652 577.332 521.5 577.211 521.367 cv
577.082 521.238 576.926 521.133 576.742 521.051 cv
576.551 520.977 576.336 520.937 576.094 520.934 cv
575.805 520.937 575.547 520.977 575.32 521.051 cv
575.09 521.133 574.891 521.219 574.723 521.305 cv
574.547 521.398 574.402 521.48 574.293 521.555 cv
574.176 521.637 574.09 521.676 574.035 521.672 cv
574 521.676 573.973 521.668 573.949 521.645 cv
573.922 521.629 573.898 521.598 573.883 521.555 cv
573.863 521.516 573.852 521.461 573.844 521.391 cv
573.832 521.324 573.828 521.242 573.832 521.145 cv
573.828 521.078 573.832 521.02 573.84 520.969 cv
573.844 520.922 573.852 520.879 573.863 520.84 cv
573.871 520.805 573.883 520.77 573.906 520.738 cv
573.922 520.707 573.961 520.668 574.016 520.617 cv
574.07 520.574 574.164 520.512 574.297 520.426 cv
574.43 520.348 574.598 520.266 574.805 520.18 cv
575.004 520.102 575.227 520.035 575.473 519.98 cv
575.715 519.93 575.973 519.902 576.242 519.898 cv
576.668 519.902 577.039 519.961 577.363 520.078 cv
577.684 520.199 577.953 520.363 578.164 520.574 cv
578.375 520.785 578.531 521.031 578.637 521.305 cv
578.742 521.586 578.797 521.879 578.797 522.191 cv
578.797 522.473 578.77 522.754 578.719 523.035 cv
578.668 523.316 578.563 523.621 578.402 523.941 cv
578.238 524.27 578.004 524.629 577.703 525.027 cv
577.395 525.426 576.992 525.887 576.488 526.402 cv
575.09 527.863 li
578.934 527.863 li
578.965 527.863 579 527.875 579.039 527.895 cv
579.07 527.918 579.102 527.949 579.125 527.988 cv
579.148 528.031 579.164 528.082 579.18 528.141 cv
579.188 528.203 579.195 528.273 579.199 528.355 cv
cp
f
586.406 520.531 mo
586.402 520.617 586.398 520.691 586.395 520.754 cv
586.387 520.824 586.379 520.887 586.367 520.945 cv
586.355 521.008 586.34 521.066 586.32 521.121 cv
586.297 521.18 586.273 521.242 586.25 521.305 cv
583.066 528.633 li
583.043 528.691 583.016 528.738 582.98 528.77 cv
582.945 528.809 582.902 528.836 582.852 528.852 cv
582.797 528.871 582.727 528.879 582.648 528.887 cv
582.563 528.891 582.465 528.895 582.352 528.898 cv
582.191 528.895 582.07 528.887 581.988 528.879 cv
581.898 528.863 581.836 528.848 581.801 528.816 cv
581.758 528.789 581.742 528.75 581.75 528.707 cv
581.754 528.664 581.77 528.613 581.797 528.551 cv
585.145 521.059 li
580.902 521.059 li
580.813 521.062 580.75 521.016 580.707 520.922 cv
580.664 520.832 580.641 520.703 580.645 520.539 cv
580.641 520.453 580.648 520.379 580.66 520.316 cv
580.672 520.254 580.688 520.199 580.711 520.152 cv
580.73 520.109 580.758 520.078 580.793 520.059 cv
580.824 520.039 580.859 520.031 580.902 520.027 cv
586.051 520.027 li
586.113 520.031 586.168 520.035 586.215 520.047 cv
586.262 520.062 586.297 520.09 586.324 520.129 cv
586.348 520.172 586.367 520.227 586.383 520.289 cv
586.395 520.355 586.402 520.437 586.406 520.531 cv
cp
f
599.238 528.355 mo
599.234 528.437 599.227 528.512 599.219 528.574 cv
599.203 528.641 599.188 528.695 599.172 528.734 cv
599.148 528.781 599.121 528.812 599.09 528.828 cv
599.051 528.852 599.016 528.859 598.977 528.859 cv
594.098 528.859 li
594.027 528.859 593.973 528.852 593.93 528.836 cv
593.879 528.82 593.836 528.797 593.805 528.758 cv
593.766 528.727 593.742 528.672 593.73 528.602 cv
593.711 528.531 593.703 528.449 593.707 528.348 cv
593.703 528.262 593.707 528.18 593.719 528.109 cv
593.723 528.043 593.738 527.984 593.766 527.93 cv
593.785 527.879 593.813 527.824 593.852 527.77 cv
593.883 527.719 593.93 527.664 593.988 527.602 cv
595.754 525.789 li
596.16 525.371 596.484 524.996 596.734 524.664 cv
596.977 524.332 597.168 524.031 597.305 523.754 cv
597.438 523.484 597.527 523.234 597.57 523.012 cv
597.609 522.789 597.629 522.582 597.633 522.383 cv
597.629 522.187 597.598 522 597.535 521.824 cv
597.469 521.652 597.371 521.5 597.25 521.367 cv
597.121 521.238 596.965 521.133 596.781 521.051 cv
596.59 520.977 596.375 520.937 596.133 520.934 cv
595.844 520.937 595.586 520.977 595.359 521.051 cv
595.129 521.133 594.93 521.219 594.762 521.305 cv
594.586 521.398 594.441 521.48 594.332 521.555 cv
594.215 521.637 594.129 521.676 594.074 521.672 cv
594.039 521.676 594.012 521.668 593.988 521.645 cv
593.961 521.629 593.938 521.598 593.922 521.555 cv
593.902 521.516 593.891 521.461 593.883 521.391 cv
593.871 521.324 593.867 521.242 593.871 521.145 cv
593.867 521.078 593.871 521.02 593.879 520.969 cv
593.883 520.922 593.891 520.879 593.902 520.84 cv
593.91 520.805 593.922 520.77 593.945 520.738 cv
593.961 520.707 594 520.668 594.055 520.617 cv
594.109 520.574 594.203 520.512 594.336 520.426 cv
594.469 520.348 594.637 520.266 594.844 520.18 cv
595.043 520.102 595.266 520.035 595.512 519.98 cv
595.754 519.93 596.012 519.902 596.281 519.898 cv
596.707 519.902 597.078 519.961 597.402 520.078 cv
597.723 520.199 597.992 520.363 598.203 520.574 cv
598.414 520.785 598.57 521.031 598.676 521.305 cv
598.781 521.586 598.836 521.879 598.836 522.191 cv
598.836 522.473 598.809 522.754 598.758 523.035 cv
598.707 523.316 598.602 523.621 598.441 523.941 cv
598.277 524.27 598.043 524.629 597.742 525.027 cv
597.434 525.426 597.031 525.887 596.527 526.402 cv
595.129 527.863 li
598.973 527.863 li
599.004 527.863 599.039 527.875 599.078 527.895 cv
599.109 527.918 599.141 527.949 599.164 527.988 cv
599.188 528.031 599.203 528.082 599.219 528.141 cv
599.227 528.203 599.234 528.273 599.238 528.355 cv
cp
f
606.523 526.594 mo
606.52 526.98 606.453 527.32 606.316 527.617 cv
606.18 527.914 605.98 528.168 605.727 528.371 cv
605.469 528.578 605.152 528.73 604.777 528.832 cv
604.395 528.937 603.965 528.988 603.48 528.988 cv
603.023 528.988 602.613 528.941 602.258 528.848 cv
601.895 528.754 601.59 528.613 601.344 528.426 cv
601.09 528.238 600.898 528.008 600.77 527.734 cv
600.633 527.461 600.566 527.148 600.57 526.797 cv
600.566 526.523 600.613 526.27 600.707 526.035 cv
600.797 525.801 600.926 525.586 601.098 525.391 cv
601.266 525.195 601.477 525.016 601.73 524.844 cv
601.977 524.676 602.262 524.512 602.578 524.355 cv
602.305 524.215 602.063 524.066 601.852 523.906 cv
601.641 523.754 601.461 523.582 601.32 523.395 cv
601.172 523.211 601.063 523.016 600.992 522.805 cv
600.914 522.602 600.879 522.371 600.879 522.121 cv
600.879 521.812 600.934 521.523 601.047 521.25 cv
601.156 520.98 601.324 520.746 601.551 520.547 cv
601.773 520.348 602.059 520.191 602.41 520.074 cv
602.754 519.961 603.16 519.902 603.629 519.898 cv
604.07 519.902 604.457 519.953 604.785 520.059 cv
605.109 520.168 605.379 520.316 605.59 520.496 cv
605.801 520.684 605.957 520.898 606.059 521.145 cv
606.16 521.398 606.211 521.668 606.211 521.953 cv
606.211 522.187 606.172 522.41 606.098 522.621 cv
606.02 522.836 605.91 523.039 605.766 523.23 cv
605.617 523.422 605.438 523.602 605.23 523.766 cv
605.016 523.934 604.773 524.086 604.504 524.23 cv
604.824 524.391 605.113 524.555 605.367 524.723 cv
605.617 524.895 605.828 525.078 606 525.266 cv
606.172 525.461 606.301 525.664 606.391 525.879 cv
606.477 526.098 606.52 526.336 606.523 526.594 cv
cp
605.051 522.059 mo
605.051 521.871 605.016 521.699 604.949 521.543 cv
604.883 521.391 604.785 521.258 604.66 521.145 cv
604.527 521.039 604.371 520.957 604.184 520.898 cv
603.996 520.844 603.781 520.816 603.539 520.812 cv
603.047 520.816 602.676 520.926 602.426 521.148 cv
602.172 521.371 602.043 521.676 602.047 522.059 cv
602.043 522.242 602.074 522.41 602.137 522.559 cv
602.195 522.715 602.293 522.859 602.426 522.992 cv
602.555 523.133 602.719 523.266 602.918 523.391 cv
603.113 523.523 603.348 523.656 603.621 523.793 cv
604.082 523.559 604.434 523.297 604.68 523.008 cv
604.926 522.723 605.051 522.406 605.051 522.059 cv
cp
605.336 526.715 mo
605.332 526.508 605.293 526.32 605.219 526.148 cv
605.141 525.98 605.023 525.82 604.867 525.668 cv
604.707 525.523 604.512 525.379 604.281 525.238 cv
604.043 525.102 603.77 524.957 603.465 524.805 cv
603.176 524.945 602.926 525.09 602.711 525.23 cv
602.492 525.375 602.316 525.52 602.18 525.668 cv
602.039 525.82 601.934 525.977 601.863 526.141 cv
601.793 526.305 601.758 526.488 601.758 526.687 cv
601.758 527.133 601.906 527.477 602.211 527.715 cv
602.512 527.957 602.965 528.074 603.566 528.074 cv
604.148 528.074 604.59 527.953 604.887 527.711 cv
605.184 527.469 605.332 527.137 605.336 526.715 cv
cp
f
619.258 528.355 mo
619.254 528.437 619.246 528.512 619.238 528.574 cv
619.223 528.641 619.207 528.695 619.191 528.734 cv
619.168 528.781 619.141 528.812 619.109 528.828 cv
619.07 528.852 619.035 528.859 618.996 528.859 cv
614.117 528.859 li
614.047 528.859 613.992 528.852 613.949 528.836 cv
613.898 528.82 613.855 528.797 613.824 528.758 cv
613.785 528.727 613.762 528.672 613.75 528.602 cv
613.73 528.531 613.723 528.449 613.727 528.348 cv
613.723 528.262 613.727 528.18 613.738 528.109 cv
613.742 528.043 613.758 527.984 613.785 527.93 cv
613.805 527.879 613.832 527.824 613.871 527.77 cv
613.902 527.719 613.949 527.664 614.008 527.602 cv
615.773 525.789 li
616.18 525.371 616.504 524.996 616.754 524.664 cv
616.996 524.332 617.188 524.031 617.324 523.754 cv
617.457 523.484 617.547 523.234 617.59 523.012 cv
617.629 522.789 617.648 522.582 617.652 522.383 cv
617.648 522.187 617.617 522 617.555 521.824 cv
617.488 521.652 617.391 521.5 617.27 521.367 cv
617.141 521.238 616.984 521.133 616.801 521.051 cv
616.609 520.977 616.395 520.937 616.152 520.934 cv
615.863 520.937 615.605 520.977 615.379 521.051 cv
615.148 521.133 614.949 521.219 614.781 521.305 cv
614.605 521.398 614.461 521.48 614.352 521.555 cv
614.234 521.637 614.148 521.676 614.094 521.672 cv
614.059 521.676 614.031 521.668 614.008 521.645 cv
613.98 521.629 613.957 521.598 613.941 521.555 cv
613.922 521.516 613.91 521.461 613.902 521.391 cv
613.891 521.324 613.887 521.242 613.891 521.145 cv
613.887 521.078 613.891 521.02 613.898 520.969 cv
613.902 520.922 613.91 520.879 613.922 520.84 cv
613.93 520.805 613.941 520.77 613.965 520.738 cv
613.98 520.707 614.02 520.668 614.074 520.617 cv
614.129 520.574 614.223 520.512 614.355 520.426 cv
614.488 520.348 614.656 520.266 614.863 520.18 cv
615.063 520.102 615.285 520.035 615.531 519.98 cv
615.773 519.93 616.031 519.902 616.301 519.898 cv
616.727 519.902 617.098 519.961 617.422 520.078 cv
617.742 520.199 618.012 520.363 618.223 520.574 cv
618.434 520.785 618.59 521.031 618.695 521.305 cv
618.801 521.586 618.855 521.879 618.855 522.191 cv
618.855 522.473 618.828 522.754 618.777 523.035 cv
618.727 523.316 618.621 523.621 618.461 523.941 cv
618.297 524.27 618.063 524.629 617.762 525.027 cv
617.453 525.426 617.051 525.887 616.547 526.402 cv
615.148 527.863 li
618.992 527.863 li
619.023 527.863 619.059 527.875 619.098 527.895 cv
619.129 527.918 619.16 527.949 619.184 527.988 cv
619.207 528.031 619.223 528.082 619.238 528.141 cv
619.246 528.203 619.254 528.273 619.258 528.355 cv
cp
f
626.406 524.094 mo
626.406 524.48 626.383 524.867 626.336 525.258 cv
626.289 525.652 626.211 526.027 626.105 526.387 cv
625.992 526.746 625.844 527.086 625.664 527.402 cv
625.477 527.719 625.246 527.996 624.969 528.23 cv
624.688 528.473 624.355 528.656 623.973 528.789 cv
623.586 528.922 623.141 528.988 622.633 528.988 cv
622.438 528.988 622.246 528.973 622.063 528.949 cv
621.875 528.922 621.707 528.895 621.563 528.859 cv
621.414 528.824 621.293 528.789 621.191 528.746 cv
621.09 528.707 621.016 528.664 620.973 528.621 cv
620.926 528.582 620.895 528.527 620.875 528.453 cv
620.852 528.387 620.84 528.293 620.844 528.172 cv
620.84 528.074 620.844 527.992 620.852 527.934 cv
620.859 527.875 620.867 527.832 620.883 527.797 cv
620.895 527.766 620.914 527.742 620.941 527.73 cv
620.965 527.719 620.996 527.711 621.035 527.711 cv
621.082 527.711 621.152 527.73 621.246 527.766 cv
621.332 527.801 621.449 527.84 621.59 527.879 cv
621.73 527.922 621.891 527.957 622.078 527.988 cv
622.262 528.023 622.473 528.039 622.707 528.039 cv
623.148 528.039 623.527 527.957 623.844 527.785 cv
624.156 527.617 624.414 527.387 624.617 527.098 cv
624.816 526.812 624.965 526.48 625.066 526.102 cv
625.164 525.727 625.223 525.328 625.234 524.906 cv
624.992 525.051 624.699 525.176 624.363 525.281 cv
624.023 525.395 623.641 525.449 623.207 525.445 cv
622.715 525.449 622.301 525.383 621.965 525.246 cv
621.629 525.113 621.359 524.93 621.16 524.695 cv
620.953 524.465 620.809 524.191 620.723 523.871 cv
620.633 523.555 620.586 523.203 620.59 522.824 cv
620.586 522.434 620.645 522.062 620.762 521.711 cv
620.875 521.359 621.051 521.051 621.293 520.777 cv
621.531 520.512 621.84 520.297 622.215 520.137 cv
622.586 519.98 623.031 519.902 623.555 519.898 cv
623.918 519.902 624.246 519.949 624.531 520.039 cv
624.816 520.133 625.063 520.266 625.273 520.441 cv
625.48 520.617 625.656 520.828 625.805 521.074 cv
625.945 521.324 626.063 521.605 626.156 521.918 cv
626.242 522.234 626.309 522.574 626.348 522.937 cv
626.387 523.309 626.406 523.695 626.406 524.094 cv
cp
625.211 523.965 mo
625.211 523.387 625.172 522.895 625.094 522.496 cv
625.016 522.098 624.902 521.777 624.754 521.531 cv
624.605 521.285 624.422 521.105 624.203 520.996 cv
623.984 520.887 623.73 520.832 623.445 520.832 cv
623.145 520.832 622.891 520.887 622.684 520.992 cv
622.473 521.102 622.301 521.246 622.168 521.422 cv
622.031 521.605 621.934 521.809 621.871 522.035 cv
621.809 522.266 621.777 522.5 621.777 522.734 cv
621.777 523.008 621.805 523.254 621.863 523.477 cv
621.918 523.699 622.012 523.887 622.141 524.043 cv
622.266 524.199 622.43 524.32 622.637 524.398 cv
622.84 524.484 623.094 524.523 623.398 524.523 cv
623.738 524.523 624.066 524.473 624.387 524.371 cv
624.699 524.27 624.977 524.137 625.211 523.965 cv
cp
f
639.227 526.332 mo
639.223 526.742 639.152 527.105 639.016 527.43 cv
638.871 527.758 638.668 528.039 638.406 528.266 cv
638.141 528.5 637.816 528.676 637.43 528.801 cv
637.043 528.926 636.605 528.988 636.121 528.988 cv
635.824 528.988 635.547 528.965 635.293 528.918 cv
635.031 528.871 634.805 528.816 634.605 528.75 cv
634.402 528.684 634.234 528.613 634.105 528.543 cv
633.973 528.473 633.891 528.422 633.859 528.391 cv
633.824 528.359 633.797 528.328 633.781 528.293 cv
633.758 528.266 633.742 528.227 633.73 528.18 cv
633.715 528.133 633.703 528.078 633.699 528.012 cv
633.691 527.945 633.691 527.863 633.691 527.766 cv
633.691 527.605 633.707 527.492 633.738 527.426 cv
633.77 527.367 633.816 527.336 633.879 527.332 cv
633.922 527.336 634.004 527.371 634.129 527.441 cv
634.25 527.512 634.41 527.59 634.605 527.676 cv
634.797 527.762 635.02 527.84 635.281 527.91 cv
635.539 527.984 635.828 528.023 636.148 528.02 cv
636.453 528.023 636.727 527.984 636.961 527.906 cv
637.195 527.832 637.391 527.723 637.551 527.578 cv
637.707 527.437 637.824 527.27 637.906 527.074 cv
637.984 526.883 638.027 526.672 638.027 526.441 cv
638.027 526.195 637.977 525.969 637.875 525.766 cv
637.773 525.566 637.625 525.395 637.43 525.25 cv
637.234 525.105 636.992 524.996 636.711 524.914 cv
636.422 524.84 636.102 524.801 635.742 524.797 cv
634.875 524.797 li
634.836 524.801 634.797 524.793 634.762 524.773 cv
634.727 524.762 634.695 524.734 634.672 524.695 cv
634.645 524.66 634.625 524.613 634.609 524.555 cv
634.59 524.496 634.582 524.418 634.586 524.32 cv
634.582 524.238 634.59 524.168 634.605 524.105 cv
634.617 524.051 634.637 524.004 634.664 523.969 cv
634.688 523.937 634.715 523.914 634.75 523.895 cv
634.777 523.883 634.813 523.875 634.859 523.871 cv
635.629 523.871 li
635.93 523.875 636.199 523.836 636.438 523.754 cv
636.676 523.68 636.879 523.566 637.047 523.418 cv
637.211 523.273 637.34 523.102 637.43 522.898 cv
637.516 522.699 637.559 522.473 637.563 522.219 cv
637.559 522.039 637.527 521.863 637.473 521.695 cv
637.41 521.531 637.324 521.387 637.207 521.262 cv
637.09 521.141 636.938 521.043 636.754 520.973 cv
636.566 520.902 636.352 520.867 636.113 520.867 cv
635.848 520.867 635.605 520.91 635.387 520.988 cv
635.16 521.07 634.965 521.152 634.797 521.242 cv
634.621 521.336 634.477 521.422 634.367 521.5 cv
634.25 521.578 634.172 521.617 634.129 521.617 cv
634.094 521.617 634.066 521.613 634.043 521.602 cv
634.016 521.59 633.992 521.566 633.98 521.531 cv
633.961 521.5 633.949 521.453 633.945 521.391 cv
633.938 521.332 633.938 521.25 633.938 521.145 cv
633.938 521.078 633.938 521.02 633.941 520.965 cv
633.945 520.918 633.953 520.871 633.969 520.828 cv
633.98 520.793 634 520.758 634.02 520.723 cv
634.035 520.695 634.063 520.66 634.109 520.613 cv
634.148 520.574 634.238 520.512 634.371 520.426 cv
634.504 520.348 634.664 520.266 634.859 520.18 cv
635.051 520.102 635.277 520.035 635.531 519.98 cv
635.781 519.93 636.051 519.902 636.348 519.898 cv
636.754 519.902 637.113 519.953 637.426 520.055 cv
637.73 520.16 637.988 520.309 638.199 520.5 cv
638.402 520.691 638.559 520.918 638.664 521.184 cv
638.762 521.449 638.813 521.746 638.816 522.066 cv
638.813 522.348 638.777 522.605 638.707 522.844 cv
638.633 523.082 638.523 523.293 638.387 523.477 cv
638.242 523.664 638.07 523.82 637.867 523.949 cv
637.66 524.078 637.426 524.168 637.16 524.219 cv
637.16 524.23 li
637.465 524.262 637.742 524.34 637.996 524.461 cv
638.246 524.582 638.465 524.734 638.648 524.914 cv
638.828 525.102 638.969 525.312 639.074 525.555 cv
639.172 525.797 639.223 526.059 639.227 526.332 cv
cp
f
646.672 524.422 mo
646.668 525.105 646.613 525.723 646.512 526.281 cv
646.402 526.84 646.227 527.32 645.977 527.723 cv
645.727 528.129 645.402 528.441 645.004 528.66 cv
644.605 528.879 644.109 528.988 643.523 528.988 cv
642.965 528.988 642.5 528.891 642.121 528.691 cv
641.738 528.496 641.43 528.207 641.203 527.82 cv
640.969 527.437 640.805 526.961 640.707 526.398 cv
640.609 525.836 640.563 525.191 640.563 524.465 cv
640.563 523.793 640.617 523.176 640.727 522.609 cv
640.836 522.051 641.012 521.57 641.258 521.164 cv
641.5 520.766 641.824 520.453 642.227 520.23 cv
642.625 520.012 643.117 519.902 643.703 519.898 cv
644.262 519.902 644.73 520 645.109 520.195 cv
645.488 520.395 645.793 520.687 646.027 521.07 cv
646.258 521.457 646.422 521.93 646.523 522.488 cv
646.617 523.055 646.668 523.699 646.672 524.422 cv
cp
645.469 524.504 mo
645.465 524.066 645.449 523.668 645.422 523.316 cv
645.387 522.965 645.34 522.656 645.281 522.387 cv
645.219 522.121 645.141 521.891 645.043 521.695 cv
644.941 521.504 644.824 521.344 644.691 521.219 cv
644.555 521.094 644.398 521.004 644.223 520.945 cv
644.047 520.891 643.852 520.863 643.633 520.859 cv
643.246 520.863 642.93 520.953 642.691 521.133 cv
642.445 521.316 642.258 521.566 642.121 521.883 cv
641.98 522.203 641.883 522.578 641.836 523.004 cv
641.781 523.434 641.758 523.891 641.762 524.383 cv
641.758 525.043 641.793 525.605 641.863 526.066 cv
641.934 526.531 642.039 526.906 642.188 527.195 cv
642.332 527.484 642.523 527.695 642.754 527.828 cv
642.984 527.961 643.262 528.027 643.594 528.027 cv
643.844 528.027 644.07 527.988 644.266 527.906 cv
644.457 527.824 644.621 527.707 644.762 527.555 cv
644.898 527.402 645.016 527.219 645.109 527.004 cv
645.199 526.793 645.27 526.555 645.328 526.293 cv
645.379 526.035 645.418 525.754 645.438 525.449 cv
645.457 525.148 645.465 524.836 645.469 524.504 cv
cp
f
659.25 526.332 mo
659.246 526.742 659.176 527.105 659.039 527.43 cv
658.895 527.758 658.691 528.039 658.43 528.266 cv
658.164 528.5 657.84 528.676 657.453 528.801 cv
657.066 528.926 656.629 528.988 656.145 528.988 cv
655.848 528.988 655.57 528.965 655.316 528.918 cv
655.055 528.871 654.828 528.816 654.629 528.75 cv
654.426 528.684 654.258 528.613 654.129 528.543 cv
653.996 528.473 653.914 528.422 653.883 528.391 cv
653.848 528.359 653.82 528.328 653.805 528.293 cv
653.781 528.266 653.766 528.227 653.754 528.18 cv
653.738 528.133 653.727 528.078 653.723 528.012 cv
653.715 527.945 653.715 527.863 653.715 527.766 cv
653.715 527.605 653.73 527.492 653.762 527.426 cv
653.793 527.367 653.84 527.336 653.902 527.332 cv
653.945 527.336 654.027 527.371 654.152 527.441 cv
654.273 527.512 654.434 527.59 654.629 527.676 cv
654.82 527.762 655.043 527.84 655.305 527.91 cv
655.563 527.984 655.852 528.023 656.172 528.02 cv
656.477 528.023 656.75 527.984 656.984 527.906 cv
657.219 527.832 657.414 527.723 657.574 527.578 cv
657.73 527.437 657.848 527.27 657.93 527.074 cv
658.008 526.883 658.051 526.672 658.051 526.441 cv
658.051 526.195 658 525.969 657.898 525.766 cv
657.797 525.566 657.648 525.395 657.453 525.25 cv
657.258 525.105 657.016 524.996 656.734 524.914 cv
656.445 524.84 656.125 524.801 655.766 524.797 cv
654.898 524.797 li
654.859 524.801 654.82 524.793 654.785 524.773 cv
654.75 524.762 654.719 524.734 654.695 524.695 cv
654.668 524.66 654.648 524.613 654.633 524.555 cv
654.613 524.496 654.605 524.418 654.609 524.32 cv
654.605 524.238 654.613 524.168 654.629 524.105 cv
654.641 524.051 654.66 524.004 654.688 523.969 cv
654.711 523.937 654.738 523.914 654.773 523.895 cv
654.801 523.883 654.836 523.875 654.883 523.871 cv
655.652 523.871 li
655.953 523.875 656.223 523.836 656.461 523.754 cv
656.699 523.68 656.902 523.566 657.07 523.418 cv
657.234 523.273 657.363 523.102 657.453 522.898 cv
657.539 522.699 657.582 522.473 657.586 522.219 cv
657.582 522.039 657.551 521.863 657.496 521.695 cv
657.434 521.531 657.348 521.387 657.23 521.262 cv
657.113 521.141 656.961 521.043 656.777 520.973 cv
656.59 520.902 656.375 520.867 656.137 520.867 cv
655.871 520.867 655.629 520.91 655.41 520.988 cv
655.184 521.07 654.988 521.152 654.82 521.242 cv
654.645 521.336 654.5 521.422 654.391 521.5 cv
654.273 521.578 654.195 521.617 654.152 521.617 cv
654.117 521.617 654.09 521.613 654.066 521.602 cv
654.039 521.59 654.016 521.566 654.004 521.531 cv
653.984 521.5 653.973 521.453 653.969 521.391 cv
653.961 521.332 653.961 521.25 653.961 521.145 cv
653.961 521.078 653.961 521.02 653.965 520.965 cv
653.969 520.918 653.977 520.871 653.992 520.828 cv
654.004 520.793 654.023 520.758 654.043 520.723 cv
654.059 520.695 654.086 520.66 654.133 520.613 cv
654.172 520.574 654.262 520.512 654.395 520.426 cv
654.527 520.348 654.688 520.266 654.883 520.18 cv
655.074 520.102 655.301 520.035 655.555 519.98 cv
655.805 519.93 656.074 519.902 656.371 519.898 cv
656.777 519.902 657.137 519.953 657.449 520.055 cv
657.754 520.16 658.012 520.309 658.223 520.5 cv
658.426 520.691 658.582 520.918 658.688 521.184 cv
658.785 521.449 658.836 521.746 658.84 522.066 cv
658.836 522.348 658.801 522.605 658.73 522.844 cv
658.656 523.082 658.547 523.293 658.41 523.477 cv
658.266 523.664 658.094 523.82 657.891 523.949 cv
657.684 524.078 657.449 524.168 657.184 524.219 cv
657.184 524.23 li
657.488 524.262 657.766 524.34 658.02 524.461 cv
658.27 524.582 658.488 524.734 658.672 524.914 cv
658.852 525.102 658.992 525.312 659.098 525.555 cv
659.195 525.797 659.246 526.059 659.25 526.332 cv
cp
f
666.418 528.395 mo
666.418 528.484 666.41 528.555 666.395 528.613 cv
666.379 528.676 666.359 528.727 666.34 528.758 cv
666.316 528.797 666.289 528.82 666.262 528.836 cv
666.23 528.852 666.203 528.859 666.172 528.859 cv
661.559 528.859 li
661.523 528.859 661.492 528.852 661.469 528.836 cv
661.438 528.82 661.414 528.797 661.391 528.758 cv
661.363 528.727 661.344 528.676 661.332 528.613 cv
661.316 528.555 661.309 528.484 661.313 528.395 cv
661.309 528.316 661.316 528.246 661.332 528.184 cv
661.344 528.129 661.359 528.078 661.383 528.039 cv
661.402 528 661.426 527.973 661.457 527.949 cv
661.484 527.934 661.52 527.922 661.559 527.918 cv
663.402 527.918 li
663.402 521.199 li
661.695 522.219 li
661.605 522.266 661.535 522.293 661.484 522.301 cv
661.43 522.312 661.387 522.301 661.359 522.27 cv
661.324 522.242 661.301 522.191 661.293 522.121 cv
661.277 522.055 661.273 521.969 661.277 521.863 cv
661.273 521.785 661.277 521.719 661.285 521.664 cv
661.293 521.609 661.301 521.566 661.316 521.527 cv
661.328 521.496 661.348 521.465 661.375 521.434 cv
661.398 521.41 661.434 521.383 661.477 521.352 cv
663.508 520.047 li
663.523 520.035 663.547 520.027 663.574 520.016 cv
663.602 520.008 663.637 519.996 663.68 519.988 cv
663.719 519.98 663.766 519.977 663.824 519.969 cv
663.875 519.969 663.945 519.965 664.027 519.965 cv
664.137 519.965 664.227 519.973 664.301 519.98 cv
664.371 519.992 664.43 520.004 664.473 520.016 cv
664.512 520.035 664.539 520.055 664.555 520.078 cv
664.566 520.105 664.57 520.133 664.574 520.156 cv
664.574 527.918 li
666.172 527.918 li
666.207 527.922 666.238 527.934 666.273 527.949 cv
666.301 527.973 666.328 528 666.352 528.039 cv
666.371 528.078 666.387 528.129 666.398 528.184 cv
666.41 528.246 666.418 528.316 666.418 528.395 cv
cp
f
679.289 526.332 mo
679.285 526.742 679.215 527.105 679.078 527.43 cv
678.934 527.758 678.73 528.039 678.469 528.266 cv
678.203 528.5 677.879 528.676 677.492 528.801 cv
677.105 528.926 676.668 528.988 676.184 528.988 cv
675.887 528.988 675.609 528.965 675.355 528.918 cv
675.094 528.871 674.867 528.816 674.668 528.75 cv
674.465 528.684 674.297 528.613 674.168 528.543 cv
674.035 528.473 673.953 528.422 673.922 528.391 cv
673.887 528.359 673.859 528.328 673.844 528.293 cv
673.82 528.266 673.805 528.227 673.793 528.18 cv
673.777 528.133 673.766 528.078 673.762 528.012 cv
673.754 527.945 673.754 527.863 673.754 527.766 cv
673.754 527.605 673.77 527.492 673.801 527.426 cv
673.832 527.367 673.879 527.336 673.941 527.332 cv
673.984 527.336 674.066 527.371 674.191 527.441 cv
674.313 527.512 674.473 527.59 674.668 527.676 cv
674.859 527.762 675.082 527.84 675.344 527.91 cv
675.602 527.984 675.891 528.023 676.211 528.02 cv
676.516 528.023 676.789 527.984 677.023 527.906 cv
677.258 527.832 677.453 527.723 677.613 527.578 cv
677.77 527.437 677.887 527.27 677.969 527.074 cv
678.047 526.883 678.09 526.672 678.09 526.441 cv
678.09 526.195 678.039 525.969 677.938 525.766 cv
677.836 525.566 677.688 525.395 677.492 525.25 cv
677.297 525.105 677.055 524.996 676.773 524.914 cv
676.484 524.84 676.164 524.801 675.805 524.797 cv
674.938 524.797 li
674.898 524.801 674.859 524.793 674.824 524.773 cv
674.789 524.762 674.758 524.734 674.734 524.695 cv
674.707 524.66 674.688 524.613 674.672 524.555 cv
674.652 524.496 674.645 524.418 674.648 524.32 cv
674.645 524.238 674.652 524.168 674.668 524.105 cv
674.68 524.051 674.699 524.004 674.727 523.969 cv
674.75 523.937 674.777 523.914 674.813 523.895 cv
674.84 523.883 674.875 523.875 674.922 523.871 cv
675.691 523.871 li
675.992 523.875 676.262 523.836 676.5 523.754 cv
676.738 523.68 676.941 523.566 677.109 523.418 cv
677.273 523.273 677.402 523.102 677.492 522.898 cv
677.578 522.699 677.621 522.473 677.625 522.219 cv
677.621 522.039 677.59 521.863 677.535 521.695 cv
677.473 521.531 677.387 521.387 677.27 521.262 cv
677.152 521.141 677 521.043 676.816 520.973 cv
676.629 520.902 676.414 520.867 676.176 520.867 cv
675.91 520.867 675.668 520.91 675.449 520.988 cv
675.223 521.07 675.027 521.152 674.859 521.242 cv
674.684 521.336 674.539 521.422 674.43 521.5 cv
674.313 521.578 674.234 521.617 674.191 521.617 cv
674.156 521.617 674.129 521.613 674.105 521.602 cv
674.078 521.59 674.055 521.566 674.043 521.531 cv
674.023 521.5 674.012 521.453 674.008 521.391 cv
674 521.332 674 521.25 674 521.145 cv
674 521.078 674 521.02 674.004 520.965 cv
674.008 520.918 674.016 520.871 674.031 520.828 cv
674.043 520.793 674.063 520.758 674.082 520.723 cv
674.098 520.695 674.125 520.66 674.172 520.613 cv
674.211 520.574 674.301 520.512 674.434 520.426 cv
674.566 520.348 674.727 520.266 674.922 520.18 cv
675.113 520.102 675.34 520.035 675.594 519.98 cv
675.844 519.93 676.113 519.902 676.41 519.898 cv
676.816 519.902 677.176 519.953 677.488 520.055 cv
677.793 520.16 678.051 520.309 678.262 520.5 cv
678.465 520.691 678.621 520.918 678.727 521.184 cv
678.824 521.449 678.875 521.746 678.879 522.066 cv
678.875 522.348 678.84 522.605 678.77 522.844 cv
678.695 523.082 678.586 523.293 678.449 523.477 cv
678.305 523.664 678.133 523.82 677.93 523.949 cv
677.723 524.078 677.488 524.168 677.223 524.219 cv
677.223 524.23 li
677.527 524.262 677.805 524.34 678.059 524.461 cv
678.309 524.582 678.527 524.734 678.711 524.914 cv
678.891 525.102 679.031 525.312 679.137 525.555 cv
679.234 525.797 679.285 526.059 679.289 526.332 cv
cp
f
686.438 528.355 mo
686.434 528.437 686.426 528.512 686.418 528.574 cv
686.402 528.641 686.387 528.695 686.371 528.734 cv
686.348 528.781 686.32 528.812 686.289 528.828 cv
686.25 528.852 686.215 528.859 686.176 528.859 cv
681.297 528.859 li
681.227 528.859 681.172 528.852 681.129 528.836 cv
681.078 528.82 681.035 528.797 681.004 528.758 cv
680.965 528.727 680.941 528.672 680.93 528.602 cv
680.91 528.531 680.902 528.449 680.906 528.348 cv
680.902 528.262 680.906 528.18 680.918 528.109 cv
680.922 528.043 680.938 527.984 680.965 527.93 cv
680.984 527.879 681.012 527.824 681.051 527.77 cv
681.082 527.719 681.129 527.664 681.188 527.602 cv
682.953 525.789 li
683.359 525.371 683.684 524.996 683.934 524.664 cv
684.176 524.332 684.367 524.031 684.504 523.754 cv
684.637 523.484 684.727 523.234 684.77 523.012 cv
684.809 522.789 684.828 522.582 684.832 522.383 cv
684.828 522.187 684.797 522 684.734 521.824 cv
684.668 521.652 684.57 521.5 684.449 521.367 cv
684.32 521.238 684.164 521.133 683.98 521.051 cv
683.789 520.977 683.574 520.937 683.332 520.934 cv
683.043 520.937 682.785 520.977 682.559 521.051 cv
682.328 521.133 682.129 521.219 681.961 521.305 cv
681.785 521.398 681.641 521.48 681.531 521.555 cv
681.414 521.637 681.328 521.676 681.273 521.672 cv
681.238 521.676 681.211 521.668 681.188 521.645 cv
681.16 521.629 681.137 521.598 681.121 521.555 cv
681.102 521.516 681.09 521.461 681.082 521.391 cv
681.07 521.324 681.066 521.242 681.07 521.145 cv
681.066 521.078 681.07 521.02 681.078 520.969 cv
681.082 520.922 681.09 520.879 681.102 520.84 cv
681.109 520.805 681.121 520.77 681.145 520.738 cv
681.16 520.707 681.199 520.668 681.254 520.617 cv
681.309 520.574 681.402 520.512 681.535 520.426 cv
681.668 520.348 681.836 520.266 682.043 520.18 cv
682.242 520.102 682.465 520.035 682.711 519.98 cv
682.953 519.93 683.211 519.902 683.48 519.898 cv
683.906 519.902 684.277 519.961 684.602 520.078 cv
684.922 520.199 685.191 520.363 685.402 520.574 cv
685.613 520.785 685.77 521.031 685.875 521.305 cv
685.98 521.586 686.035 521.879 686.035 522.191 cv
686.035 522.473 686.008 522.754 685.957 523.035 cv
685.906 523.316 685.801 523.621 685.641 523.941 cv
685.477 524.27 685.242 524.629 684.941 525.027 cv
684.633 525.426 684.23 525.887 683.727 526.402 cv
682.328 527.863 li
686.172 527.863 li
686.203 527.863 686.238 527.875 686.277 527.895 cv
686.309 527.918 686.34 527.949 686.363 527.988 cv
686.387 528.031 686.402 528.082 686.418 528.141 cv
686.426 528.203 686.434 528.273 686.438 528.355 cv
cp
f
7.648 316.812 mo
7.75 316.812 7.836 316.82 7.906 316.828 cv
7.98 316.844 8.039 316.859 8.082 316.879 cv
8.129 316.906 8.16 316.934 8.18 316.965 cv
8.203 317 8.215 317.039 8.211 317.078 cv
8.211 319.926 li
16.988 319.926 li
17.031 319.93 17.066 319.941 17.098 319.957 cv
17.129 319.98 17.156 320.016 17.172 320.066 cv
17.191 320.121 17.203 320.191 17.219 320.273 cv
17.23 320.363 17.238 320.469 17.238 320.598 cv
17.238 320.723 17.23 320.832 17.219 320.918 cv
17.203 321.012 17.191 321.082 17.172 321.129 cv
17.156 321.184 17.129 321.219 17.098 321.238 cv
17.066 321.262 17.031 321.273 16.988 321.27 cv
8.211 321.27 li
8.211 324.117 li
8.215 324.164 8.203 324.199 8.18 324.23 cv
8.16 324.266 8.129 324.293 8.082 324.312 cv
8.039 324.336 7.98 324.355 7.906 324.363 cv
7.836 324.379 7.75 324.383 7.648 324.383 cv
7.551 324.383 7.465 324.379 7.387 324.363 cv
7.316 324.355 7.254 324.336 7.203 324.312 cv
7.16 324.293 7.125 324.266 7.102 324.23 cv
7.082 324.199 7.074 324.164 7.07 324.117 cv
7.07 317.078 li
7.074 317.039 7.082 317 7.102 316.965 cv
7.125 316.934 7.16 316.906 7.203 316.879 cv
7.254 316.859 7.316 316.844 7.387 316.828 cv
7.465 316.82 7.551 316.812 7.648 316.812 cv
cp
f
16.996 314.211 mo
17.043 314.215 17.078 314.227 17.102 314.242 cv
17.133 314.266 17.156 314.297 17.176 314.344 cv
17.195 314.391 17.207 314.457 17.223 314.539 cv
17.23 314.625 17.238 314.73 17.238 314.859 cv
17.238 314.984 17.23 315.09 17.223 315.176 cv
17.207 315.262 17.195 315.328 17.176 315.375 cv
17.156 315.426 17.133 315.461 17.102 315.477 cv
17.078 315.496 17.043 315.504 16.996 315.504 cv
9.957 315.504 li
9.922 315.504 9.887 315.496 9.855 315.477 cv
9.824 315.461 9.801 315.426 9.777 315.375 cv
9.762 315.328 9.746 315.262 9.73 315.176 cv
9.723 315.09 9.715 314.984 9.715 314.859 cv
9.715 314.73 9.723 314.625 9.73 314.539 cv
9.746 314.457 9.762 314.391 9.777 314.344 cv
9.801 314.297 9.824 314.266 9.855 314.242 cv
9.887 314.227 9.922 314.215 9.957 314.211 cv
cp
7.578 314.062 mo
7.883 314.062 8.09 314.121 8.195 314.234 cv
8.309 314.352 8.363 314.562 8.359 314.867 cv
8.363 315.176 8.309 315.383 8.199 315.492 cv
8.094 315.605 7.891 315.664 7.594 315.66 cv
7.293 315.664 7.09 315.605 6.977 315.488 cv
6.871 315.375 6.816 315.164 6.813 314.852 cv
6.816 314.555 6.867 314.348 6.973 314.23 cv
7.082 314.121 7.285 314.062 7.578 314.062 cv
cp
f
16.996 301.371 mo
17.043 301.375 17.078 301.387 17.102 301.402 cv
17.133 301.426 17.156 301.457 17.176 301.504 cv
17.195 301.551 17.207 301.617 17.223 301.699 cv
17.23 301.785 17.238 301.891 17.238 302.012 cv
17.238 302.148 17.23 302.254 17.223 302.336 cv
17.207 302.422 17.195 302.488 17.176 302.535 cv
17.156 302.586 17.133 302.621 17.102 302.641 cv
17.078 302.664 17.043 302.676 16.996 302.672 cv
12.719 302.672 li
12.422 302.676 12.148 302.703 11.902 302.75 cv
11.66 302.805 11.449 302.887 11.27 303 cv
11.094 303.117 10.957 303.262 10.863 303.437 cv
10.77 303.617 10.723 303.828 10.723 304.062 cv
10.723 304.363 10.84 304.66 11.066 304.961 cv
11.301 305.262 11.637 305.594 12.074 305.949 cv
16.996 305.949 li
17.043 305.953 17.078 305.961 17.102 305.98 cv
17.133 306.004 17.156 306.039 17.176 306.086 cv
17.195 306.137 17.207 306.203 17.223 306.285 cv
17.23 306.371 17.238 306.477 17.238 306.598 cv
17.238 306.719 17.23 306.82 17.223 306.906 cv
17.207 306.992 17.195 307.062 17.176 307.109 cv
17.156 307.164 17.133 307.195 17.102 307.211 cv
17.078 307.23 17.043 307.242 16.996 307.238 cv
12.719 307.238 li
12.422 307.242 12.148 307.27 11.902 307.324 cv
11.66 307.383 11.449 307.469 11.27 307.582 cv
11.094 307.699 10.957 307.844 10.863 308.016 cv
10.77 308.191 10.723 308.398 10.723 308.641 cv
10.723 308.937 10.84 309.238 11.066 309.539 cv
11.301 309.844 11.637 310.172 12.074 310.523 cv
16.996 310.523 li
17.043 310.527 17.078 310.539 17.102 310.555 cv
17.133 310.578 17.156 310.609 17.176 310.656 cv
17.195 310.703 17.207 310.77 17.223 310.852 cv
17.23 310.937 17.238 311.043 17.238 311.172 cv
17.238 311.297 17.23 311.402 17.223 311.488 cv
17.207 311.574 17.195 311.641 17.176 311.687 cv
17.156 311.738 17.133 311.773 17.102 311.789 cv
17.078 311.809 17.043 311.816 16.996 311.816 cv
9.957 311.816 li
9.918 311.816 9.883 311.809 9.852 311.793 cv
9.824 311.777 9.797 311.746 9.773 311.699 cv
9.75 311.652 9.734 311.594 9.727 311.52 cv
9.719 311.445 9.715 311.348 9.715 311.227 cv
9.715 311.113 9.719 311.02 9.727 310.941 cv
9.734 310.871 9.75 310.812 9.773 310.766 cv
9.797 310.727 9.824 310.695 9.852 310.676 cv
9.883 310.66 9.918 310.652 9.957 310.648 cv
10.887 310.648 li
10.445 310.258 10.121 309.871 9.914 309.496 cv
9.711 309.125 9.609 308.75 9.605 308.367 cv
9.609 308.074 9.645 307.812 9.707 307.578 cv
9.777 307.352 9.871 307.145 9.992 306.965 cv
10.117 306.789 10.262 306.641 10.43 306.512 cv
10.602 306.391 10.793 306.285 10.996 306.199 cv
10.746 305.969 10.527 305.746 10.348 305.531 cv
10.172 305.324 10.031 305.121 9.918 304.922 cv
9.813 304.727 9.73 304.535 9.68 304.348 cv
9.633 304.164 9.609 303.977 9.605 303.789 cv
9.609 303.336 9.688 302.957 9.844 302.648 cv
10.004 302.344 10.219 302.094 10.48 301.902 cv
10.75 301.711 11.059 301.574 11.414 301.492 cv
11.773 301.414 12.152 301.375 12.547 301.371 cv
cp
f
13.172 293.012 mo
13.375 293.016 13.52 293.066 13.605 293.164 cv
13.691 293.27 13.734 293.383 13.734 293.512 cv
13.734 298.148 li
14.125 298.152 14.477 298.113 14.789 298.031 cv
15.102 297.957 15.371 297.828 15.598 297.641 cv
15.824 297.461 15.996 297.223 16.113 296.926 cv
16.234 296.637 16.297 296.277 16.293 295.848 cv
16.297 295.516 16.27 295.215 16.211 294.953 cv
16.16 294.691 16.098 294.465 16.027 294.273 cv
15.961 294.082 15.898 293.926 15.844 293.801 cv
15.789 293.68 15.762 293.586 15.762 293.52 cv
15.762 293.484 15.773 293.453 15.789 293.422 cv
15.813 293.398 15.84 293.375 15.871 293.355 cv
15.91 293.344 15.961 293.332 16.023 293.32 cv
16.094 293.316 16.172 293.312 16.262 293.309 cv
16.332 293.312 16.391 293.316 16.438 293.316 cv
16.488 293.324 16.531 293.328 16.57 293.336 cv
16.609 293.344 16.645 293.359 16.676 293.375 cv
16.707 293.398 16.738 293.422 16.766 293.445 cv
16.797 293.477 16.844 293.559 16.906 293.699 cv
16.973 293.84 17.035 294.023 17.098 294.246 cv
17.16 294.473 17.215 294.73 17.266 295.023 cv
17.313 295.32 17.336 295.637 17.34 295.969 cv
17.336 296.551 17.258 297.059 17.098 297.488 cv
16.938 297.926 16.699 298.293 16.379 298.59 cv
16.063 298.891 15.664 299.113 15.184 299.262 cv
14.703 299.414 14.145 299.488 13.508 299.488 cv
12.906 299.488 12.363 299.41 11.879 299.254 cv
11.398 299.098 10.988 298.875 10.648 298.578 cv
10.316 298.285 10.059 297.926 9.875 297.508 cv
9.699 297.094 9.609 296.629 9.605 296.109 cv
9.609 295.559 9.699 295.086 9.871 294.695 cv
10.051 294.309 10.289 293.992 10.586 293.738 cv
10.891 293.492 11.242 293.309 11.641 293.187 cv
12.047 293.074 12.477 293.016 12.938 293.012 cv
cp
12.789 294.309 mo
12.113 294.293 11.578 294.445 11.191 294.762 cv
10.809 295.082 10.617 295.555 10.613 296.176 cv
10.617 296.5 10.676 296.781 10.793 297.02 cv
10.914 297.262 11.074 297.461 11.27 297.625 cv
11.469 297.789 11.699 297.914 11.961 298 cv
12.227 298.09 12.504 298.141 12.789 298.148 cv
cp
f
6.414 284.809 mo
7.465 285.305 8.539 285.672 9.641 285.914 cv
10.746 286.156 11.855 286.277 12.969 286.277 cv
14.09 286.277 15.199 286.156 16.301 285.906 cv
17.398 285.664 18.477 285.301 19.539 284.824 cv
19.598 284.801 19.652 284.789 19.699 284.781 cv
19.742 284.781 19.777 284.797 19.809 284.832 cv
19.836 284.871 19.855 284.926 19.871 285 cv
19.879 285.078 19.887 285.184 19.891 285.309 cv
19.887 285.406 19.883 285.484 19.883 285.551 cv
19.875 285.621 19.867 285.68 19.852 285.727 cv
19.836 285.777 19.816 285.82 19.797 285.848 cv
19.773 285.883 19.75 285.906 19.727 285.918 cv
19.191 286.203 18.652 286.449 18.109 286.66 cv
17.563 286.875 17.012 287.055 16.449 287.203 cv
15.887 287.352 15.316 287.461 14.738 287.531 cv
14.164 287.605 13.582 287.645 12.992 287.641 cv
12.402 287.645 11.82 287.602 11.246 287.52 cv
10.676 287.441 10.105 287.328 9.539 287.176 cv
8.973 287.027 8.418 286.844 7.867 286.629 cv
7.324 286.418 6.781 286.18 6.238 285.91 cv
6.223 285.906 6.203 285.891 6.184 285.867 cv
6.172 285.844 6.156 285.812 6.137 285.77 cv
6.125 285.73 6.113 285.672 6.102 285.598 cv
6.098 285.527 6.094 285.434 6.09 285.316 cv
6.094 285.199 6.102 285.105 6.113 285.027 cv
6.133 284.957 6.152 284.898 6.176 284.855 cv
6.203 284.816 6.238 284.793 6.281 284.785 cv
6.324 284.781 6.371 284.789 6.414 284.809 cv
cp
f
14.352 277.043 mo
14.828 277.047 15.25 277.133 15.621 277.305 cv
15.992 277.48 16.309 277.723 16.563 278.031 cv
16.824 278.344 17.016 278.711 17.145 279.129 cv
17.273 279.551 17.336 280 17.34 280.484 cv
17.336 280.824 17.309 281.141 17.254 281.426 cv
17.195 281.719 17.129 281.977 17.043 282.203 cv
16.965 282.434 16.879 282.625 16.785 282.773 cv
16.699 282.93 16.621 283.035 16.559 283.094 cv
16.496 283.156 16.418 283.199 16.32 283.227 cv
16.227 283.258 16.098 283.273 15.934 283.27 cv
15.82 283.273 15.727 283.27 15.648 283.254 cv
15.574 283.246 15.512 283.23 15.461 283.207 cv
15.418 283.191 15.383 283.164 15.363 283.129 cv
15.348 283.102 15.34 283.066 15.336 283.02 cv
15.34 282.949 15.383 282.844 15.469 282.711 cv
15.559 282.578 15.656 282.41 15.762 282.199 cv
15.867 281.992 15.965 281.738 16.055 281.441 cv
16.148 281.148 16.195 280.809 16.191 280.422 cv
16.195 280.133 16.156 279.867 16.074 279.621 cv
16 279.383 15.891 279.172 15.742 278.996 cv
15.602 278.82 15.422 278.687 15.211 278.59 cv
15.004 278.5 14.77 278.453 14.5 278.449 cv
14.219 278.453 13.973 278.516 13.766 278.645 cv
13.566 278.777 13.387 278.953 13.23 279.164 cv
13.078 279.383 12.938 279.625 12.809 279.895 cv
12.684 280.172 12.555 280.453 12.418 280.734 cv
12.285 281.023 12.137 281.301 11.973 281.57 cv
11.813 281.844 11.621 282.086 11.402 282.301 cv
11.184 282.516 10.93 282.691 10.633 282.82 cv
10.344 282.957 9.988 283.023 9.574 283.02 cv
9.152 283.023 8.777 282.945 8.441 282.789 cv
8.113 282.637 7.836 282.422 7.609 282.148 cv
7.391 281.875 7.219 281.551 7.098 281.168 cv
6.984 280.793 6.926 280.383 6.922 279.945 cv
6.926 279.723 6.945 279.5 6.98 279.27 cv
7.023 279.043 7.074 278.828 7.137 278.625 cv
7.203 278.43 7.277 278.25 7.355 278.09 cv
7.438 277.937 7.504 277.836 7.551 277.781 cv
7.605 277.734 7.645 277.699 7.668 277.684 cv
7.699 277.668 7.734 277.656 7.777 277.645 cv
7.824 277.637 7.879 277.629 7.938 277.621 cv
8.004 277.617 8.082 277.613 8.18 277.613 cv
8.273 277.613 8.359 277.617 8.43 277.625 cv
8.508 277.633 8.566 277.645 8.613 277.66 cv
8.664 277.676 8.703 277.699 8.723 277.727 cv
8.75 277.758 8.762 277.789 8.758 277.824 cv
8.762 277.883 8.723 277.973 8.648 278.094 cv
8.578 278.219 8.496 278.371 8.402 278.543 cv
8.313 278.723 8.23 278.934 8.152 279.176 cv
8.078 279.422 8.039 279.691 8.039 279.992 cv
8.039 280.273 8.078 280.52 8.152 280.727 cv
8.23 280.937 8.332 281.109 8.453 281.242 cv
8.582 281.379 8.73 281.48 8.898 281.547 cv
9.074 281.617 9.258 281.652 9.449 281.648 cv
9.734 281.652 9.977 281.586 10.176 281.453 cv
10.383 281.324 10.563 281.152 10.715 280.934 cv
10.875 280.723 11.016 280.477 11.145 280.195 cv
11.277 279.922 11.41 279.641 11.539 279.352 cv
11.676 279.066 11.82 278.781 11.977 278.504 cv
12.137 278.23 12.328 277.984 12.543 277.766 cv
12.762 277.551 13.016 277.379 13.309 277.242 cv
13.605 277.113 13.953 277.047 14.352 277.043 cv
cp
f
13.172 269.27 mo
13.375 269.273 13.52 269.324 13.605 269.422 cv
13.691 269.527 13.734 269.641 13.734 269.77 cv
13.734 274.406 li
14.125 274.41 14.477 274.371 14.789 274.289 cv
15.102 274.215 15.371 274.086 15.598 273.898 cv
15.824 273.719 15.996 273.48 16.113 273.184 cv
16.234 272.895 16.297 272.535 16.293 272.105 cv
16.297 271.773 16.27 271.473 16.211 271.211 cv
16.16 270.949 16.098 270.723 16.027 270.531 cv
15.961 270.34 15.898 270.184 15.844 270.059 cv
15.789 269.937 15.762 269.844 15.762 269.777 cv
15.762 269.742 15.773 269.711 15.789 269.68 cv
15.813 269.656 15.84 269.633 15.871 269.613 cv
15.91 269.602 15.961 269.59 16.023 269.578 cv
16.094 269.574 16.172 269.57 16.262 269.566 cv
16.332 269.57 16.391 269.574 16.438 269.574 cv
16.488 269.582 16.531 269.586 16.57 269.594 cv
16.609 269.602 16.645 269.617 16.676 269.633 cv
16.707 269.656 16.738 269.68 16.766 269.703 cv
16.797 269.734 16.844 269.816 16.906 269.957 cv
16.973 270.098 17.035 270.281 17.098 270.504 cv
17.16 270.73 17.215 270.988 17.266 271.281 cv
17.313 271.578 17.336 271.895 17.34 272.227 cv
17.336 272.809 17.258 273.316 17.098 273.746 cv
16.938 274.184 16.699 274.551 16.379 274.848 cv
16.063 275.148 15.664 275.371 15.184 275.52 cv
14.703 275.672 14.145 275.746 13.508 275.746 cv
12.906 275.746 12.363 275.668 11.879 275.512 cv
11.398 275.355 10.988 275.133 10.648 274.836 cv
10.316 274.543 10.059 274.184 9.875 273.766 cv
9.699 273.352 9.609 272.887 9.605 272.367 cv
9.609 271.816 9.699 271.344 9.871 270.953 cv
10.051 270.566 10.289 270.25 10.586 269.996 cv
10.891 269.75 11.242 269.566 11.641 269.445 cv
12.047 269.332 12.477 269.273 12.938 269.27 cv
cp
12.789 270.566 mo
12.113 270.551 11.578 270.703 11.191 271.02 cv
10.809 271.34 10.617 271.812 10.613 272.434 cv
10.617 272.758 10.676 273.039 10.793 273.277 cv
10.914 273.52 11.074 273.719 11.27 273.883 cv
11.469 274.047 11.699 274.172 11.961 274.258 cv
12.227 274.348 12.504 274.398 12.789 274.406 cv
cp
f
15.926 262.234 mo
16.016 262.234 16.094 262.238 16.156 262.242 cv
16.223 262.25 16.277 262.258 16.32 262.27 cv
16.367 262.285 16.406 262.301 16.438 262.316 cv
16.473 262.336 16.523 262.379 16.586 262.441 cv
16.656 262.508 16.734 262.617 16.828 262.773 cv
16.926 262.93 17.012 263.105 17.086 263.301 cv
17.16 263.496 17.219 263.711 17.27 263.941 cv
17.313 264.172 17.336 264.41 17.34 264.652 cv
17.336 265.16 17.258 265.605 17.09 265.996 cv
16.926 266.387 16.68 266.715 16.359 266.98 cv
16.039 267.246 15.648 267.449 15.18 267.582 cv
14.715 267.723 14.176 267.789 13.563 267.789 cv
12.875 267.789 12.277 267.707 11.777 267.535 cv
11.277 267.371 10.871 267.137 10.551 266.84 cv
10.238 266.543 10 266.195 9.844 265.797 cv
9.691 265.398 9.617 264.969 9.613 264.504 cv
9.617 264.281 9.637 264.062 9.676 263.852 cv
9.719 263.641 9.773 263.445 9.84 263.266 cv
9.91 263.09 9.988 262.934 10.074 262.793 cv
10.164 262.656 10.238 262.555 10.301 262.492 cv
10.363 262.43 10.414 262.387 10.449 262.363 cv
10.488 262.34 10.531 262.32 10.578 262.305 cv
10.629 262.289 10.684 262.281 10.746 262.273 cv
10.809 262.273 10.887 262.27 10.98 262.266 cv
11.184 262.27 11.328 262.293 11.406 262.336 cv
11.492 262.387 11.531 262.445 11.527 262.508 cv
11.531 262.59 11.488 262.68 11.398 262.777 cv
11.316 262.883 11.223 263.012 11.113 263.164 cv
11.012 263.324 10.914 263.512 10.828 263.734 cv
10.742 263.957 10.699 264.219 10.699 264.52 cv
10.699 265.141 10.938 265.617 11.414 265.945 cv
11.891 266.277 12.586 266.441 13.492 266.441 cv
13.949 266.441 14.344 266.398 14.684 266.312 cv
15.027 266.227 15.316 266.102 15.543 265.934 cv
15.777 265.77 15.945 265.566 16.055 265.32 cv
16.168 265.082 16.227 264.805 16.223 264.488 cv
16.227 264.195 16.18 263.934 16.082 263.707 cv
15.992 263.484 15.887 263.289 15.773 263.121 cv
15.66 262.961 15.559 262.824 15.465 262.707 cv
15.375 262.598 15.328 262.508 15.328 262.445 cv
15.328 262.41 15.34 262.379 15.359 262.352 cv
15.383 262.328 15.418 262.309 15.465 262.285 cv
15.516 262.27 15.578 262.254 15.656 262.246 cv
15.734 262.238 15.824 262.234 15.926 262.234 cv
cp
f
13.398 254.055 mo
13.977 254.059 14.504 254.133 14.984 254.281 cv
15.469 254.434 15.883 254.66 16.23 254.957 cv
16.582 255.262 16.855 255.637 17.047 256.082 cv
17.242 256.535 17.336 257.059 17.34 257.652 cv
17.336 258.234 17.254 258.738 17.082 259.164 cv
16.914 259.598 16.664 259.957 16.332 260.242 cv
16.008 260.531 15.609 260.742 15.137 260.883 cv
14.668 261.023 14.137 261.094 13.539 261.094 cv
12.969 261.094 12.441 261.02 11.957 260.871 cv
11.477 260.723 11.059 260.5 10.707 260.199 cv
10.359 259.898 10.09 259.523 9.895 259.074 cv
9.707 258.629 9.609 258.105 9.605 257.504 cv
9.609 256.926 9.695 256.422 9.863 255.988 cv
10.039 255.562 10.289 255.203 10.613 254.914 cv
10.945 254.629 11.344 254.414 11.813 254.27 cv
12.281 254.129 12.813 254.059 13.398 254.055 cv
cp
13.484 255.391 mo
13.105 255.395 12.746 255.43 12.406 255.5 cv
12.066 255.574 11.77 255.691 11.512 255.852 cv
11.262 256.016 11.059 256.234 10.906 256.512 cv
10.762 256.793 10.688 257.141 10.684 257.555 cv
10.688 257.937 10.754 258.27 10.887 258.543 cv
11.023 258.824 11.215 259.051 11.461 259.227 cv
11.711 259.41 12.008 259.543 12.344 259.625 cv
12.688 259.715 13.055 259.758 13.453 259.754 cv
13.84 259.758 14.203 259.723 14.539 259.648 cv
14.879 259.582 15.176 259.465 15.43 259.293 cv
15.684 259.129 15.883 258.906 16.031 258.625 cv
16.18 258.352 16.254 258.004 16.254 257.586 cv
16.254 257.207 16.188 256.879 16.051 256.598 cv
15.918 256.324 15.727 256.094 15.48 255.914 cv
15.234 255.734 14.941 255.605 14.602 255.52 cv
14.266 255.437 13.895 255.395 13.484 255.391 cv
cp
f
16.996 246.098 mo
17.043 246.102 17.078 246.113 17.102 246.129 cv
17.133 246.152 17.156 246.184 17.176 246.23 cv
17.195 246.277 17.207 246.344 17.223 246.426 cv
17.23 246.512 17.238 246.617 17.238 246.738 cv
17.238 246.871 17.23 246.977 17.223 247.059 cv
17.207 247.145 17.195 247.211 17.176 247.254 cv
17.156 247.305 17.133 247.336 17.102 247.355 cv
17.078 247.379 17.043 247.391 16.996 247.387 cv
12.875 247.387 li
12.473 247.391 12.148 247.422 11.902 247.48 cv
11.66 247.547 11.449 247.637 11.27 247.754 cv
11.094 247.875 10.957 248.031 10.863 248.219 cv
10.77 248.41 10.723 248.633 10.723 248.883 cv
10.723 249.211 10.84 249.531 11.066 249.852 cv
11.301 250.176 11.637 250.516 12.074 250.867 cv
16.996 250.867 li
17.043 250.871 17.078 250.883 17.102 250.898 cv
17.133 250.922 17.156 250.953 17.176 251 cv
17.195 251.047 17.207 251.113 17.223 251.195 cv
17.23 251.281 17.238 251.387 17.238 251.516 cv
17.238 251.641 17.23 251.746 17.223 251.832 cv
17.207 251.918 17.195 251.984 17.176 252.031 cv
17.156 252.082 17.133 252.117 17.102 252.133 cv
17.078 252.152 17.043 252.16 16.996 252.16 cv
9.957 252.16 li
9.918 252.16 9.883 252.152 9.852 252.137 cv
9.824 252.121 9.797 252.09 9.773 252.043 cv
9.75 251.996 9.734 251.937 9.727 251.863 cv
9.719 251.789 9.715 251.691 9.715 251.57 cv
9.715 251.457 9.719 251.363 9.727 251.285 cv
9.734 251.215 9.75 251.156 9.773 251.109 cv
9.797 251.07 9.824 251.039 9.852 251.02 cv
9.883 251.004 9.918 250.996 9.957 250.992 cv
10.887 250.992 li
10.445 250.602 10.121 250.207 9.914 249.809 cv
9.711 249.418 9.609 249.02 9.605 248.613 cv
9.609 248.148 9.688 247.754 9.844 247.43 cv
10.004 247.113 10.219 246.852 10.48 246.652 cv
10.75 246.457 11.059 246.316 11.414 246.227 cv
11.773 246.145 12.203 246.102 12.703 246.098 cv
cp
f
16.996 237.719 mo
17.043 237.723 17.078 237.73 17.105 237.746 cv
17.141 237.766 17.164 237.797 17.18 237.84 cv
17.195 237.887 17.207 237.945 17.223 238.016 cv
17.23 238.09 17.238 238.18 17.238 238.281 cv
17.238 238.395 17.23 238.484 17.223 238.555 cv
17.207 238.629 17.195 238.687 17.18 238.734 cv
17.164 238.781 17.141 238.816 17.105 238.836 cv
17.078 238.859 17.043 238.871 16.996 238.867 cv
16.066 238.867 li
16.469 239.242 16.781 239.625 17.004 240.023 cv
17.227 240.422 17.336 240.859 17.34 241.332 cv
17.336 241.852 17.238 242.293 17.039 242.652 cv
16.84 243.02 16.57 243.316 16.227 243.543 cv
15.887 243.773 15.484 243.937 15.023 244.039 cv
14.563 244.145 14.078 244.195 13.563 244.195 cv
12.961 244.195 12.414 244.133 11.926 244 cv
11.438 243.875 11.02 243.68 10.676 243.422 cv
10.332 243.164 10.07 242.848 9.883 242.469 cv
9.703 242.094 9.609 241.656 9.605 241.16 cv
9.609 240.75 9.699 240.375 9.875 240.031 cv
10.059 239.691 10.324 239.352 10.668 239.016 cv
6.578 239.016 li
6.547 239.016 6.512 239.008 6.473 238.988 cv
6.441 238.973 6.414 238.937 6.395 238.883 cv
6.379 238.832 6.363 238.766 6.348 238.684 cv
6.336 238.605 6.328 238.504 6.328 238.375 cv
6.328 238.25 6.336 238.141 6.348 238.055 cv
6.363 237.973 6.379 237.91 6.395 237.859 cv
6.414 237.816 6.441 237.781 6.473 237.754 cv
6.512 237.734 6.547 237.723 6.578 237.719 cv
cp
12.043 239.016 mo
11.613 239.367 11.285 239.707 11.055 240.031 cv
10.832 240.359 10.719 240.699 10.715 241.051 cv
10.719 241.383 10.797 241.66 10.949 241.887 cv
11.109 242.117 11.313 242.305 11.566 242.445 cv
11.824 242.59 12.117 242.695 12.438 242.758 cv
12.766 242.828 13.094 242.859 13.422 242.855 cv
13.781 242.859 14.125 242.832 14.461 242.773 cv
14.801 242.723 15.105 242.629 15.367 242.488 cv
15.633 242.355 15.844 242.176 16 241.949 cv
16.164 241.73 16.242 241.449 16.238 241.105 cv
16.242 240.937 16.219 240.77 16.168 240.609 cv
16.125 240.453 16.047 240.293 15.934 240.121 cv
15.828 239.957 15.688 239.781 15.508 239.594 cv
15.336 239.414 15.117 239.219 14.859 239.016 cv
cp
f
15.078 230.918 mo
15.441 230.922 15.762 230.988 16.043 231.117 cv
16.324 231.254 16.563 231.445 16.754 231.687 cv
16.949 231.937 17.094 232.227 17.191 232.562 cv
17.289 232.902 17.336 233.277 17.34 233.68 cv
17.336 233.934 17.316 234.172 17.281 234.395 cv
17.238 234.625 17.191 234.828 17.133 235.008 cv
17.074 235.191 17.012 235.344 16.945 235.465 cv
16.883 235.594 16.824 235.684 16.77 235.738 cv
16.719 235.797 16.648 235.84 16.551 235.863 cv
16.461 235.891 16.332 235.902 16.168 235.902 cv
16.07 235.902 15.988 235.898 15.918 235.887 cv
15.855 235.879 15.801 235.867 15.754 235.848 cv
15.715 235.836 15.684 235.812 15.664 235.781 cv
15.648 235.754 15.641 235.723 15.637 235.684 cv
15.641 235.629 15.676 235.543 15.742 235.43 cv
15.816 235.32 15.891 235.184 15.973 235.016 cv
16.059 234.852 16.137 234.656 16.203 234.43 cv
16.277 234.211 16.313 233.953 16.309 233.656 cv
16.313 233.441 16.289 233.242 16.238 233.062 cv
16.195 232.887 16.125 232.734 16.031 232.602 cv
15.941 232.477 15.828 232.375 15.684 232.301 cv
15.543 232.234 15.375 232.199 15.18 232.195 cv
14.984 232.199 14.816 232.25 14.68 232.348 cv
14.547 232.453 14.426 232.586 14.32 232.75 cv
14.219 232.918 14.129 233.105 14.043 233.312 cv
13.965 233.523 13.879 233.738 13.789 233.957 cv
13.703 234.18 13.602 234.398 13.488 234.605 cv
13.379 234.82 13.242 235.008 13.078 235.176 cv
12.918 235.344 12.727 235.48 12.5 235.578 cv
12.277 235.684 12.008 235.734 11.691 235.73 cv
11.418 235.734 11.152 235.68 10.898 235.57 cv
10.648 235.465 10.43 235.305 10.234 235.09 cv
10.047 234.875 9.895 234.605 9.777 234.285 cv
9.668 233.965 9.609 233.594 9.605 233.164 cv
9.609 232.98 9.625 232.793 9.652 232.602 cv
9.688 232.418 9.727 232.246 9.77 232.094 cv
9.82 231.945 9.871 231.816 9.922 231.707 cv
9.98 231.598 10.027 231.516 10.066 231.461 cv
10.109 231.406 10.148 231.371 10.176 231.352 cv
10.211 231.336 10.246 231.324 10.281 231.312 cv
10.324 231.309 10.371 231.301 10.426 231.289 cv
10.484 231.285 10.555 231.281 10.637 231.277 cv
10.727 231.281 10.805 231.285 10.867 231.289 cv
10.938 231.301 10.988 231.312 11.027 231.328 cv
11.07 231.348 11.102 231.371 11.117 231.395 cv
11.137 231.426 11.145 231.453 11.145 231.48 cv
11.145 231.531 11.117 231.598 11.059 231.684 cv
11.004 231.773 10.941 231.891 10.875 232.031 cv
10.813 232.176 10.754 232.34 10.691 232.527 cv
10.637 232.719 10.605 232.937 10.605 233.18 cv
10.605 233.402 10.633 233.594 10.68 233.758 cv
10.734 233.926 10.805 234.062 10.891 234.168 cv
10.984 234.277 11.09 234.359 11.215 234.41 cv
11.34 234.469 11.477 234.496 11.621 234.492 cv
11.828 234.496 12 234.445 12.133 234.336 cv
12.273 234.234 12.395 234.098 12.5 233.93 cv
12.605 233.766 12.699 233.574 12.781 233.359 cv
12.867 233.148 12.953 232.934 13.039 232.707 cv
13.129 232.488 13.227 232.27 13.336 232.051 cv
13.445 231.836 13.578 231.641 13.734 231.473 cv
13.891 231.309 14.078 231.176 14.297 231.07 cv
14.516 230.973 14.777 230.922 15.078 230.918 cv
cp
f
12.992 226.461 mo
13.582 226.461 14.164 226.5 14.738 226.57 cv
15.316 226.648 15.887 226.758 16.449 226.898 cv
17.012 227.047 17.563 227.223 18.109 227.434 cv
18.652 227.645 19.191 227.891 19.727 228.172 cv
19.75 228.187 19.773 228.211 19.797 228.242 cv
19.816 228.273 19.836 228.316 19.852 228.363 cv
19.867 228.418 19.875 228.477 19.883 228.539 cv
19.883 228.609 19.887 228.691 19.891 228.785 cv
19.887 228.926 19.879 229.031 19.871 229.102 cv
19.855 229.18 19.836 229.234 19.809 229.266 cv
19.777 229.305 19.742 229.32 19.699 229.312 cv
19.652 229.312 19.598 229.297 19.539 229.27 cv
18.48 228.789 17.406 228.426 16.305 228.18 cv
15.203 227.937 14.09 227.816 12.969 227.812 cv
11.855 227.816 10.746 227.937 9.641 228.18 cv
8.539 228.426 7.465 228.793 6.414 229.285 cv
6.371 229.309 6.324 229.316 6.281 229.309 cv
6.238 229.305 6.203 229.281 6.176 229.238 cv
6.152 229.199 6.133 229.145 6.113 229.066 cv
6.102 228.996 6.094 228.898 6.09 228.777 cv
6.094 228.668 6.098 228.574 6.102 228.5 cv
6.113 228.43 6.125 228.371 6.137 228.324 cv
6.156 228.281 6.172 228.25 6.184 228.227 cv
6.203 228.207 6.223 228.191 6.238 228.18 cv
7.313 227.645 8.41 227.223 9.539 226.918 cv
10.668 226.613 11.82 226.461 12.992 226.461 cv
cp
f
315.703 552.875 mo
315.699 552.918 315.691 552.953 315.672 552.984 cv
315.648 553.016 315.609 553.043 315.563 553.059 cv
315.508 553.078 315.441 553.09 315.355 553.105 cv
315.27 553.117 315.16 553.125 315.031 553.125 cv
314.902 553.125 314.793 553.117 314.707 553.105 cv
314.613 553.09 314.543 553.078 314.496 553.059 cv
314.441 553.043 314.406 553.016 314.387 552.984 cv
314.363 552.953 314.352 552.918 314.355 552.875 cv
314.355 543.16 li
314.352 543.121 314.363 543.086 314.391 543.051 cv
314.41 543.023 314.449 542.996 314.508 542.977 cv
314.563 542.961 314.637 542.945 314.723 542.93 cv
314.809 542.918 314.91 542.914 315.031 542.91 cv
315.16 542.914 315.27 542.918 315.355 542.93 cv
315.441 542.945 315.508 542.961 315.563 542.977 cv
315.609 542.996 315.648 543.023 315.672 543.051 cv
315.691 543.086 315.699 543.121 315.703 543.16 cv
cp
f
328.688 552.883 mo
328.684 552.93 328.672 552.965 328.656 552.988 cv
328.633 553.02 328.602 553.043 328.555 553.062 cv
328.508 553.082 328.441 553.094 328.359 553.109 cv
328.273 553.117 328.168 553.125 328.047 553.125 cv
327.91 553.125 327.805 553.117 327.723 553.109 cv
327.637 553.094 327.57 553.082 327.523 553.062 cv
327.473 553.043 327.438 553.02 327.418 552.988 cv
327.395 552.965 327.383 552.93 327.387 552.883 cv
327.387 548.605 li
327.383 548.309 327.355 548.035 327.309 547.789 cv
327.254 547.547 327.172 547.336 327.059 547.156 cv
326.941 546.98 326.797 546.844 326.621 546.75 cv
326.441 546.656 326.23 546.609 325.996 546.609 cv
325.695 546.609 325.398 546.727 325.098 546.953 cv
324.797 547.187 324.465 547.523 324.109 547.961 cv
324.109 552.883 li
324.105 552.93 324.098 552.965 324.078 552.988 cv
324.055 553.02 324.02 553.043 323.973 553.062 cv
323.922 553.082 323.855 553.094 323.773 553.109 cv
323.688 553.117 323.582 553.125 323.461 553.125 cv
323.34 553.125 323.238 553.117 323.152 553.109 cv
323.066 553.094 322.996 553.082 322.949 553.062 cv
322.895 553.043 322.863 553.02 322.848 552.988 cv
322.828 552.965 322.816 552.93 322.82 552.883 cv
322.82 548.605 li
322.816 548.309 322.789 548.035 322.734 547.789 cv
322.676 547.547 322.59 547.336 322.477 547.156 cv
322.359 546.98 322.215 546.844 322.043 546.75 cv
321.867 546.656 321.66 546.609 321.418 546.609 cv
321.121 546.609 320.82 546.727 320.52 546.953 cv
320.215 547.187 319.887 547.523 319.535 547.961 cv
319.535 552.883 li
319.531 552.93 319.52 552.965 319.504 552.988 cv
319.48 553.02 319.449 553.043 319.402 553.062 cv
319.355 553.082 319.289 553.094 319.207 553.109 cv
319.121 553.117 319.016 553.125 318.887 553.125 cv
318.762 553.125 318.656 553.117 318.57 553.109 cv
318.484 553.094 318.418 553.082 318.371 553.062 cv
318.32 553.043 318.285 553.02 318.27 552.988 cv
318.25 552.965 318.242 552.93 318.242 552.883 cv
318.242 545.844 li
318.242 545.805 318.25 545.77 318.266 545.738 cv
318.281 545.711 318.313 545.684 318.359 545.66 cv
318.406 545.637 318.465 545.621 318.539 545.613 cv
318.613 545.605 318.711 545.602 318.832 545.602 cv
318.945 545.602 319.039 545.605 319.117 545.613 cv
319.188 545.621 319.246 545.637 319.293 545.66 cv
319.332 545.684 319.363 545.711 319.383 545.738 cv
319.398 545.77 319.406 545.805 319.41 545.844 cv
319.41 546.773 li
319.801 546.332 320.188 546.008 320.563 545.801 cv
320.934 545.598 321.309 545.496 321.691 545.492 cv
321.984 545.496 322.246 545.531 322.48 545.594 cv
322.707 545.664 322.914 545.758 323.094 545.879 cv
323.27 546.004 323.418 546.148 323.547 546.316 cv
323.668 546.488 323.773 546.68 323.859 546.883 cv
324.09 546.633 324.313 546.414 324.527 546.234 cv
324.734 546.059 324.938 545.918 325.137 545.805 cv
325.332 545.699 325.523 545.617 325.711 545.566 cv
325.895 545.52 326.082 545.496 326.27 545.492 cv
326.723 545.496 327.102 545.574 327.41 545.73 cv
327.715 545.891 327.965 546.105 328.156 546.367 cv
328.348 546.637 328.484 546.945 328.566 547.301 cv
328.645 547.66 328.684 548.039 328.688 548.434 cv
cp
f
336.348 552.891 mo
336.344 552.953 336.324 553 336.285 553.031 cv
336.242 553.062 336.184 553.086 336.113 553.102 cv
336.035 553.117 335.93 553.125 335.793 553.125 cv
335.656 553.125 335.547 553.117 335.469 553.102 cv
335.383 553.086 335.324 553.062 335.293 553.031 cv
335.254 553 335.238 552.953 335.238 552.891 cv
335.238 552.187 li
334.93 552.516 334.586 552.773 334.207 552.953 cv
333.828 553.137 333.426 553.223 333.008 553.227 cv
332.633 553.223 332.301 553.176 332.004 553.082 cv
331.703 552.984 331.445 552.848 331.234 552.664 cv
331.02 552.484 330.855 552.262 330.742 551.992 cv
330.621 551.73 330.563 551.426 330.566 551.082 cv
330.563 550.687 330.645 550.344 330.809 550.051 cv
330.969 549.762 331.199 549.52 331.504 549.324 cv
331.805 549.133 332.176 548.988 332.617 548.891 cv
333.051 548.797 333.543 548.75 334.094 548.746 cv
335.066 548.746 li
335.066 548.195 li
335.063 547.93 335.035 547.687 334.98 547.477 cv
334.922 547.27 334.828 547.098 334.699 546.957 cv
334.57 546.82 334.402 546.715 334.203 546.645 cv
333.996 546.574 333.746 546.539 333.453 546.539 cv
333.133 546.539 332.848 546.578 332.598 546.652 cv
332.34 546.73 332.121 546.812 331.934 546.902 cv
331.742 546.996 331.582 547.082 331.453 547.152 cv
331.324 547.23 331.227 547.266 331.168 547.266 cv
331.121 547.266 331.086 547.258 331.059 547.234 cv
331.023 547.219 330.996 547.187 330.977 547.141 cv
330.949 547.102 330.934 547.047 330.926 546.98 cv
330.914 546.918 330.906 546.848 330.91 546.766 cv
330.906 546.641 330.918 546.535 330.938 546.457 cv
330.953 546.383 330.996 546.312 331.07 546.242 cv
331.137 546.176 331.258 546.098 331.434 546.004 cv
331.605 545.918 331.805 545.832 332.031 545.754 cv
332.254 545.68 332.5 545.617 332.766 545.566 cv
333.031 545.52 333.297 545.496 333.57 545.492 cv
334.07 545.496 334.5 545.555 334.859 545.664 cv
335.211 545.781 335.5 545.949 335.723 546.168 cv
335.938 546.395 336.098 546.668 336.199 546.992 cv
336.297 547.324 336.344 547.707 336.348 548.141 cv
cp
335.066 549.676 mo
333.961 549.676 li
333.605 549.68 333.297 549.711 333.039 549.766 cv
332.777 549.828 332.563 549.914 332.391 550.031 cv
332.219 550.148 332.09 550.289 332.012 550.453 cv
331.926 550.617 331.887 550.809 331.891 551.02 cv
331.887 551.391 332.004 551.68 332.238 551.895 cv
332.469 552.113 332.793 552.223 333.211 552.219 cv
333.547 552.223 333.859 552.137 334.152 551.961 cv
334.441 551.793 334.746 551.527 335.066 551.168 cv
cp
f
344.598 546.164 mo
344.598 546.348 344.57 546.48 344.523 546.559 cv
344.469 546.641 344.406 546.68 344.332 546.68 cv
343.324 546.68 li
343.504 546.867 343.633 547.074 343.707 547.301 cv
343.777 547.527 343.813 547.766 343.816 548.008 cv
343.813 548.422 343.746 548.781 343.621 549.09 cv
343.488 549.406 343.305 549.672 343.063 549.883 cv
342.82 550.102 342.531 550.266 342.195 550.379 cv
341.859 550.496 341.488 550.555 341.086 550.551 cv
340.797 550.555 340.523 550.516 340.27 550.437 cv
340.008 550.363 339.809 550.27 339.672 550.152 cv
339.574 550.25 339.5 550.355 339.441 550.473 cv
339.379 550.594 339.348 550.73 339.352 550.887 cv
339.348 551.07 339.434 551.223 339.605 551.344 cv
339.773 551.465 339.996 551.531 340.281 551.539 cv
342.117 551.617 li
342.465 551.633 342.785 551.68 343.082 551.762 cv
343.371 551.852 343.625 551.973 343.84 552.129 cv
344.051 552.289 344.219 552.484 344.34 552.715 cv
344.457 552.949 344.516 553.219 344.52 553.523 cv
344.516 553.844 344.449 554.148 344.316 554.445 cv
344.18 554.734 343.973 554.992 343.695 555.219 cv
343.414 555.437 343.055 555.613 342.625 555.742 cv
342.188 555.867 341.68 555.93 341.094 555.934 cv
340.523 555.93 340.039 555.883 339.641 555.789 cv
339.242 555.691 338.914 555.559 338.66 555.395 cv
338.402 555.223 338.219 555.023 338.105 554.793 cv
337.988 554.559 337.93 554.309 337.934 554.039 cv
337.93 553.867 337.949 553.699 337.996 553.539 cv
338.035 553.375 338.102 553.223 338.188 553.078 cv
338.273 552.934 338.379 552.797 338.508 552.66 cv
338.633 552.531 338.781 552.398 338.949 552.266 cv
338.691 552.137 338.5 551.973 338.383 551.773 cv
338.258 551.574 338.199 551.359 338.199 551.129 cv
338.199 550.812 338.262 550.527 338.395 550.277 cv
338.52 550.027 338.684 549.805 338.879 549.605 cv
338.715 549.414 338.586 549.195 338.496 548.953 cv
338.398 548.711 338.352 548.418 338.355 548.07 cv
338.352 547.672 338.418 547.312 338.559 546.992 cv
338.691 546.676 338.879 546.406 339.121 546.187 cv
339.359 545.969 339.648 545.801 339.988 545.684 cv
340.32 545.566 340.688 545.508 341.086 545.508 cv
341.297 545.508 341.496 545.52 341.684 545.543 cv
341.867 545.566 342.039 545.602 342.203 545.641 cv
344.332 545.641 li
344.418 545.645 344.484 545.687 344.531 545.77 cv
344.574 545.859 344.598 545.988 344.598 546.164 cv
cp
342.582 548.016 mo
342.582 547.539 342.449 547.168 342.184 546.895 cv
341.918 546.629 341.543 546.492 341.063 546.492 cv
340.809 546.492 340.59 546.535 340.41 546.617 cv
340.223 546.703 340.07 546.816 339.949 546.961 cv
339.824 547.109 339.734 547.277 339.676 547.465 cv
339.613 547.656 339.582 547.855 339.586 548.062 cv
339.582 548.531 339.715 548.898 339.98 549.16 cv
340.242 549.43 340.609 549.562 341.086 549.559 cv
341.34 549.562 341.563 549.523 341.75 549.437 cv
341.938 549.359 342.09 549.246 342.215 549.102 cv
342.336 548.961 342.43 548.797 342.492 548.605 cv
342.551 548.418 342.582 548.219 342.582 548.016 cv
cp
343.23 553.594 mo
343.227 553.289 343.102 553.059 342.859 552.895 cv
342.609 552.734 342.273 552.645 341.852 552.633 cv
340.031 552.57 li
339.863 552.703 339.727 552.828 339.621 552.941 cv
339.512 553.059 339.426 553.168 339.367 553.277 cv
339.301 553.383 339.258 553.488 339.238 553.594 cv
339.211 553.695 339.199 553.801 339.203 553.914 cv
339.199 554.25 339.371 554.508 339.719 554.684 cv
340.059 554.859 340.539 554.945 341.156 554.949 cv
341.543 554.945 341.871 554.91 342.137 554.836 cv
342.402 554.758 342.613 554.656 342.777 554.531 cv
342.934 554.406 343.051 554.262 343.125 554.102 cv
343.191 553.937 343.227 553.77 343.23 553.594 cv
cp
f
352.141 549.059 mo
352.137 549.262 352.086 549.406 351.988 549.492 cv
351.883 549.578 351.77 549.621 351.641 549.621 cv
347.004 549.621 li
347 550.012 347.039 550.363 347.121 550.676 cv
347.195 550.988 347.324 551.258 347.512 551.484 cv
347.691 551.711 347.93 551.883 348.227 552 cv
348.516 552.121 348.875 552.184 349.305 552.18 cv
349.637 552.184 349.938 552.156 350.199 552.098 cv
350.461 552.047 350.688 551.984 350.879 551.914 cv
351.07 551.848 351.227 551.785 351.352 551.73 cv
351.473 551.676 351.566 551.648 351.633 551.648 cv
351.668 551.648 351.699 551.66 351.73 551.676 cv
351.754 551.699 351.777 551.727 351.797 551.758 cv
351.809 551.797 351.82 551.848 351.832 551.91 cv
351.836 551.98 351.84 552.059 351.844 552.148 cv
351.84 552.219 351.836 552.277 351.836 552.324 cv
351.828 552.375 351.824 552.418 351.816 552.457 cv
351.809 552.496 351.793 552.531 351.777 552.562 cv
351.754 552.594 351.73 552.625 351.707 552.652 cv
351.676 552.684 351.594 552.73 351.453 552.793 cv
351.313 552.859 351.129 552.922 350.906 552.984 cv
350.68 553.047 350.422 553.102 350.129 553.152 cv
349.832 553.199 349.516 553.223 349.184 553.227 cv
348.602 553.223 348.094 553.145 347.664 552.984 cv
347.227 552.824 346.859 552.586 346.563 552.266 cv
346.262 551.949 346.039 551.551 345.891 551.07 cv
345.738 550.59 345.664 550.031 345.664 549.395 cv
345.664 548.793 345.742 548.25 345.898 547.766 cv
346.055 547.285 346.277 546.875 346.574 546.535 cv
346.867 546.203 347.227 545.945 347.645 545.762 cv
348.059 545.586 348.523 545.496 349.043 545.492 cv
349.594 545.496 350.066 545.586 350.457 545.758 cv
350.844 545.937 351.16 546.176 351.414 546.473 cv
351.66 546.777 351.844 547.129 351.965 547.527 cv
352.078 547.934 352.137 548.363 352.141 548.824 cv
cp
350.844 548.676 mo
350.859 548 350.707 547.465 350.391 547.078 cv
350.07 546.695 349.598 546.504 348.977 546.5 cv
348.652 546.504 348.371 546.562 348.133 546.68 cv
347.891 546.801 347.691 546.961 347.527 547.156 cv
347.363 547.355 347.238 547.586 347.152 547.848 cv
347.063 548.113 347.012 548.391 347.004 548.676 cv
cp
f
359.148 552.875 mo
359.145 552.918 359.137 552.953 359.117 552.984 cv
359.094 553.016 359.055 553.043 359.008 553.059 cv
358.953 553.078 358.887 553.09 358.801 553.105 cv
358.715 553.117 358.605 553.125 358.477 553.125 cv
358.348 553.125 358.238 553.117 358.152 553.105 cv
358.059 553.09 357.988 553.078 357.941 553.059 cv
357.887 553.043 357.852 553.016 357.832 552.984 cv
357.809 552.953 357.797 552.918 357.801 552.875 cv
357.801 543.16 li
357.797 543.121 357.809 543.086 357.836 543.051 cv
357.855 543.023 357.895 542.996 357.953 542.977 cv
358.008 542.961 358.082 542.945 358.168 542.93 cv
358.254 542.918 358.355 542.914 358.477 542.91 cv
358.605 542.914 358.715 542.918 358.801 542.93 cv
358.887 542.945 358.953 542.961 359.008 542.977 cv
359.055 542.996 359.094 543.023 359.117 543.051 cv
359.137 543.086 359.145 543.121 359.148 543.16 cv
cp
f
367.75 552.883 mo
367.746 552.93 367.734 552.965 367.719 552.988 cv
367.695 553.02 367.664 553.043 367.617 553.062 cv
367.57 553.082 367.504 553.094 367.422 553.109 cv
367.336 553.117 367.23 553.125 367.109 553.125 cv
366.977 553.125 366.871 553.117 366.789 553.109 cv
366.703 553.094 366.637 553.082 366.594 553.062 cv
366.543 553.043 366.512 553.02 366.492 552.988 cv
366.469 552.965 366.457 552.93 366.461 552.883 cv
366.461 548.762 li
366.457 548.359 366.426 548.035 366.367 547.789 cv
366.301 547.547 366.211 547.336 366.094 547.156 cv
365.973 546.98 365.816 546.844 365.629 546.75 cv
365.438 546.656 365.215 546.609 364.965 546.609 cv
364.637 546.609 364.316 546.727 363.996 546.953 cv
363.672 547.187 363.332 547.523 362.98 547.961 cv
362.98 552.883 li
362.977 552.93 362.965 552.965 362.949 552.988 cv
362.926 553.02 362.895 553.043 362.848 553.062 cv
362.801 553.082 362.734 553.094 362.652 553.109 cv
362.566 553.117 362.461 553.125 362.332 553.125 cv
362.207 553.125 362.102 553.117 362.016 553.109 cv
361.93 553.094 361.863 553.082 361.816 553.062 cv
361.766 553.043 361.73 553.02 361.715 552.988 cv
361.695 552.965 361.688 552.93 361.688 552.883 cv
361.688 545.844 li
361.688 545.805 361.695 545.77 361.711 545.738 cv
361.727 545.711 361.758 545.684 361.805 545.66 cv
361.852 545.637 361.91 545.621 361.984 545.613 cv
362.059 545.605 362.156 545.602 362.277 545.602 cv
362.391 545.602 362.484 545.605 362.563 545.613 cv
362.633 545.621 362.691 545.637 362.738 545.66 cv
362.777 545.684 362.809 545.711 362.828 545.738 cv
362.844 545.77 362.852 545.805 362.855 545.844 cv
362.855 546.773 li
363.246 546.332 363.641 546.008 364.039 545.801 cv
364.43 545.598 364.828 545.496 365.234 545.492 cv
365.699 545.496 366.094 545.574 366.418 545.73 cv
366.734 545.891 366.996 546.105 367.195 546.367 cv
367.391 546.637 367.531 546.945 367.621 547.301 cv
367.703 547.66 367.746 548.09 367.75 548.59 cv
cp
f
376.129 552.883 mo
376.125 552.93 376.117 552.965 376.102 552.992 cv
376.082 553.027 376.051 553.051 376.008 553.066 cv
375.961 553.082 375.902 553.094 375.832 553.109 cv
375.758 553.117 375.668 553.125 375.566 553.125 cv
375.453 553.125 375.363 553.117 375.293 553.109 cv
375.219 553.094 375.16 553.082 375.113 553.066 cv
375.066 553.051 375.031 553.027 375.012 552.992 cv
374.988 552.965 374.977 552.93 374.98 552.883 cv
374.98 551.953 li
374.605 552.355 374.223 552.668 373.824 552.891 cv
373.426 553.113 372.988 553.223 372.516 553.227 cv
371.996 553.223 371.555 553.125 371.195 552.926 cv
370.828 552.727 370.531 552.457 370.305 552.113 cv
370.074 551.773 369.91 551.371 369.809 550.91 cv
369.703 550.449 369.652 549.965 369.652 549.449 cv
369.652 548.848 369.715 548.301 369.848 547.812 cv
369.973 547.324 370.168 546.906 370.426 546.562 cv
370.684 546.219 371 545.957 371.379 545.77 cv
371.754 545.59 372.191 545.496 372.688 545.492 cv
373.098 545.496 373.473 545.586 373.816 545.762 cv
374.156 545.945 374.496 546.211 374.832 546.555 cv
374.832 542.465 li
374.832 542.434 374.84 542.398 374.859 542.359 cv
374.875 542.328 374.91 542.301 374.965 542.281 cv
375.016 542.266 375.082 542.25 375.164 542.234 cv
375.242 542.223 375.344 542.215 375.473 542.215 cv
375.598 542.215 375.707 542.223 375.793 542.234 cv
375.875 542.25 375.938 542.266 375.988 542.281 cv
376.031 542.301 376.066 542.328 376.094 542.359 cv
376.113 542.398 376.125 542.434 376.129 542.465 cv
cp
374.832 547.93 mo
374.48 547.5 374.141 547.172 373.816 546.941 cv
373.488 546.719 373.148 546.605 372.797 546.602 cv
372.465 546.605 372.188 546.684 371.961 546.836 cv
371.73 546.996 371.543 547.199 371.402 547.453 cv
371.258 547.711 371.152 548.004 371.09 548.324 cv
371.02 548.652 370.988 548.98 370.992 549.309 cv
370.988 549.668 371.016 550.012 371.074 550.348 cv
371.125 550.687 371.219 550.992 371.359 551.254 cv
371.492 551.52 371.672 551.73 371.898 551.887 cv
372.117 552.051 372.398 552.129 372.742 552.125 cv
372.91 552.129 373.078 552.105 373.238 552.055 cv
373.395 552.012 373.555 551.934 373.727 551.82 cv
373.891 551.715 374.066 551.574 374.254 551.395 cv
374.434 551.223 374.629 551.004 374.832 550.746 cv
cp
f
384.516 549.059 mo
384.512 549.262 384.461 549.406 384.363 549.492 cv
384.258 549.578 384.145 549.621 384.016 549.621 cv
379.379 549.621 li
379.375 550.012 379.414 550.363 379.496 550.676 cv
379.57 550.988 379.699 551.258 379.887 551.484 cv
380.066 551.711 380.305 551.883 380.602 552 cv
380.891 552.121 381.25 552.184 381.68 552.18 cv
382.012 552.184 382.313 552.156 382.574 552.098 cv
382.836 552.047 383.063 551.984 383.254 551.914 cv
383.445 551.848 383.602 551.785 383.727 551.73 cv
383.848 551.676 383.941 551.648 384.008 551.648 cv
384.043 551.648 384.074 551.66 384.105 551.676 cv
384.129 551.699 384.152 551.727 384.172 551.758 cv
384.184 551.797 384.195 551.848 384.207 551.91 cv
384.211 551.98 384.215 552.059 384.219 552.148 cv
384.215 552.219 384.211 552.277 384.211 552.324 cv
384.203 552.375 384.199 552.418 384.191 552.457 cv
384.184 552.496 384.168 552.531 384.152 552.562 cv
384.129 552.594 384.105 552.625 384.082 552.652 cv
384.051 552.684 383.969 552.73 383.828 552.793 cv
383.688 552.859 383.504 552.922 383.281 552.984 cv
383.055 553.047 382.797 553.102 382.504 553.152 cv
382.207 553.199 381.891 553.223 381.559 553.227 cv
380.977 553.223 380.469 553.145 380.039 552.984 cv
379.602 552.824 379.234 552.586 378.938 552.266 cv
378.637 551.949 378.414 551.551 378.266 551.07 cv
378.113 550.59 378.039 550.031 378.039 549.395 cv
378.039 548.793 378.117 548.25 378.273 547.766 cv
378.43 547.285 378.652 546.875 378.949 546.535 cv
379.242 546.203 379.602 545.945 380.02 545.762 cv
380.434 545.586 380.898 545.496 381.418 545.492 cv
381.969 545.496 382.441 545.586 382.832 545.758 cv
383.219 545.937 383.535 546.176 383.789 546.473 cv
384.035 546.777 384.219 547.129 384.34 547.527 cv
384.453 547.934 384.512 548.363 384.516 548.824 cv
cp
383.219 548.676 mo
383.234 548 383.082 547.465 382.766 547.078 cv
382.445 546.695 381.973 546.504 381.352 546.5 cv
381.027 546.504 380.746 546.562 380.508 546.68 cv
380.266 546.801 380.066 546.961 379.902 547.156 cv
379.738 547.355 379.613 547.586 379.527 547.848 cv
379.438 548.113 379.387 548.391 379.379 548.676 cv
cp
f
391.551 552.734 mo
391.59 552.809 391.609 552.871 391.613 552.918 cv
391.609 552.973 391.586 553.012 391.539 553.039 cv
391.488 553.07 391.414 553.09 391.313 553.105 cv
391.211 553.117 391.078 553.125 390.918 553.125 cv
390.758 553.125 390.633 553.121 390.547 553.113 cv
390.453 553.105 390.383 553.094 390.328 553.074 cv
390.273 553.059 390.23 553.035 390.203 553.004 cv
390.172 552.977 390.148 552.945 390.129 552.906 cv
388.438 550.113 li
386.758 552.906 li
386.734 552.945 386.711 552.977 386.684 553.004 cv
386.652 553.035 386.609 553.059 386.555 553.074 cv
386.5 553.094 386.426 553.105 386.34 553.113 cv
386.246 553.121 386.129 553.125 385.988 553.125 cv
385.832 553.125 385.711 553.117 385.617 553.105 cv
385.52 553.09 385.449 553.07 385.406 553.039 cv
385.359 553.012 385.336 552.973 385.344 552.918 cv
385.344 552.871 385.371 552.809 385.418 552.734 cv
387.609 549.301 li
385.535 545.992 li
385.492 545.922 385.469 545.859 385.469 545.809 cv
385.465 545.762 385.488 545.719 385.539 545.684 cv
385.586 545.652 385.66 545.633 385.766 545.617 cv
385.863 545.609 386 545.602 386.168 545.602 cv
386.316 545.602 386.438 545.605 386.531 545.613 cv
386.625 545.621 386.695 545.633 386.75 545.648 cv
386.797 545.664 386.836 545.687 386.867 545.711 cv
386.891 545.742 386.914 545.773 386.938 545.805 cv
388.539 548.426 li
390.168 545.805 li
390.188 545.777 390.211 545.746 390.238 545.719 cv
390.262 545.695 390.297 545.676 390.344 545.652 cv
390.387 545.637 390.449 545.621 390.531 545.613 cv
390.609 545.605 390.719 545.602 390.863 545.602 cv
391.012 545.602 391.137 545.609 391.234 545.617 cv
391.328 545.633 391.398 545.652 391.449 545.676 cv
391.492 545.707 391.516 545.746 391.512 545.797 cv
391.504 545.852 391.477 545.918 391.434 545.992 cv
389.375 549.262 li
cp
f
210.566 9.69098 mo
210.563 10.262 210.473 10.766 210.297 11.199 cv
210.117 11.641 209.859 12.008 209.523 12.309 cv
209.18 12.609 208.766 12.84 208.277 12.992 cv
207.781 13.152 207.199 13.23 206.535 13.227 cv
205.691 13.227 li
205.691 16.457 li
205.688 16.512 205.672 16.559 205.641 16.598 cv
205.605 16.641 205.551 16.676 205.473 16.699 cv
205.395 16.727 205.289 16.746 205.16 16.762 cv
205.027 16.777 204.859 16.785 204.66 16.785 cv
204.457 16.785 204.293 16.777 204.16 16.762 cv
204.027 16.746 203.922 16.727 203.844 16.699 cv
203.766 16.676 203.711 16.641 203.68 16.598 cv
203.648 16.559 203.633 16.512 203.633 16.457 cv
203.633 7.35199 li
203.633 7.10901 203.695 6.92603 203.824 6.80103 cv
203.949 6.67999 204.117 6.62097 204.332 6.617 cv
206.715 6.617 li
206.953 6.62097 207.18 6.62903 207.398 6.64502 cv
207.613 6.664 207.875 6.703 208.18 6.76202 cv
208.48 6.82397 208.785 6.93402 209.098 7.09399 cv
209.406 7.258 209.672 7.46503 209.891 7.70697 cv
210.109 7.95697 210.273 8.24597 210.391 8.578 cv
210.504 8.90997 210.563 9.28101 210.566 9.69098 cv
cp
208.414 9.84003 mo
208.414 9.48798 208.352 9.19501 208.227 8.96503 cv
208.102 8.73401 207.945 8.56201 207.766 8.453 cv
207.578 8.34399 207.387 8.27698 207.188 8.24597 cv
206.984 8.22302 206.777 8.20697 206.566 8.203 cv
205.691 8.203 li
205.691 11.637 li
206.613 11.637 li
206.938 11.641 207.211 11.598 207.438 11.504 cv
207.656 11.418 207.84 11.293 207.984 11.133 cv
208.121 10.977 208.227 10.785 208.305 10.562 cv
208.375 10.344 208.414 10.105 208.414 9.84003 cv
cp
f
216.52 10.145 mo
216.516 10.336 216.512 10.488 216.504 10.605 cv
216.492 10.727 216.477 10.82 216.457 10.887 cv
216.434 10.957 216.406 11.004 216.375 11.027 cv
216.34 11.055 216.297 11.066 216.246 11.066 cv
216.203 11.066 216.156 11.059 216.105 11.039 cv
216.051 11.023 215.992 11.004 215.93 10.98 cv
215.863 10.961 215.789 10.941 215.711 10.922 cv
215.629 10.906 215.543 10.898 215.453 10.895 cv
215.34 10.898 215.23 10.918 215.125 10.961 cv
215.012 11.008 214.898 11.078 214.785 11.168 cv
214.664 11.266 214.543 11.391 214.418 11.543 cv
214.289 11.703 214.152 11.898 214.008 12.125 cv
214.008 16.473 li
214.004 16.527 213.988 16.57 213.961 16.609 cv
213.926 16.648 213.871 16.684 213.801 16.707 cv
213.723 16.734 213.625 16.75 213.5 16.766 cv
213.375 16.777 213.215 16.785 213.023 16.785 cv
212.828 16.785 212.668 16.777 212.543 16.766 cv
212.414 16.75 212.313 16.734 212.242 16.707 cv
212.164 16.684 212.113 16.648 212.082 16.609 cv
212.051 16.57 212.035 16.527 212.035 16.473 cv
212.035 9.49597 li
212.035 9.44501 212.047 9.40198 212.074 9.35901 cv
212.098 9.32397 212.145 9.289 212.215 9.26202 cv
212.281 9.23798 212.367 9.21899 212.477 9.203 cv
212.582 9.19098 212.719 9.18701 212.883 9.18402 cv
213.047 9.18701 213.184 9.19098 213.297 9.203 cv
213.402 9.21899 213.488 9.23798 213.551 9.26202 cv
213.609 9.289 213.652 9.32397 213.68 9.35901 cv
213.703 9.40198 213.715 9.44501 213.719 9.49597 cv
213.719 10.363 li
213.898 10.105 214.07 9.89099 214.234 9.71899 cv
214.391 9.55103 214.547 9.41803 214.695 9.31598 cv
214.84 9.21899 214.984 9.14801 215.133 9.10901 cv
215.277 9.07001 215.422 9.05103 215.57 9.05103 cv
215.633 9.05103 215.707 9.05499 215.789 9.06201 cv
215.867 9.07001 215.949 9.086 216.035 9.10199 cv
216.117 9.125 216.191 9.14502 216.254 9.164 cv
216.316 9.19098 216.359 9.21503 216.391 9.23798 cv
216.414 9.26599 216.438 9.297 216.453 9.32397 cv
216.465 9.35901 216.477 9.40198 216.488 9.453 cv
216.496 9.51202 216.504 9.59399 216.512 9.69897 cv
216.516 9.81201 216.516 9.961 216.52 10.145 cv
cp
f
223.992 12.781 mo
223.992 13.023 223.938 13.199 223.832 13.312 cv
223.723 13.43 223.574 13.488 223.391 13.484 cv
219.145 13.484 li
219.141 13.785 219.176 14.055 219.25 14.293 cv
219.316 14.539 219.43 14.742 219.586 14.91 cv
219.738 15.082 219.934 15.215 220.18 15.301 cv
220.418 15.395 220.711 15.437 221.051 15.434 cv
221.395 15.437 221.695 15.414 221.961 15.359 cv
222.219 15.312 222.445 15.258 222.637 15.195 cv
222.824 15.137 222.98 15.078 223.109 15.027 cv
223.23 14.98 223.332 14.957 223.414 14.953 cv
223.457 14.957 223.496 14.965 223.531 14.98 cv
223.559 15 223.586 15.035 223.609 15.078 cv
223.629 15.129 223.645 15.195 223.652 15.281 cv
223.66 15.371 223.664 15.48 223.664 15.605 cv
223.664 15.723 223.66 15.82 223.656 15.898 cv
223.648 15.984 223.641 16.051 223.633 16.105 cv
223.621 16.164 223.605 16.215 223.586 16.25 cv
223.563 16.293 223.535 16.328 223.504 16.363 cv
223.469 16.402 223.375 16.453 223.227 16.512 cv
223.07 16.578 222.879 16.641 222.648 16.695 cv
222.41 16.758 222.141 16.805 221.844 16.852 cv
221.539 16.891 221.215 16.914 220.871 16.918 cv
220.246 16.914 219.703 16.84 219.242 16.684 cv
218.773 16.531 218.383 16.293 218.07 15.973 cv
217.754 15.656 217.523 15.254 217.371 14.77 cv
217.215 14.285 217.137 13.719 217.141 13.062 cv
217.137 12.445 217.219 11.887 217.383 11.387 cv
217.543 10.891 217.777 10.465 218.086 10.117 cv
218.395 9.77301 218.77 9.51202 219.211 9.32397 cv
219.648 9.14502 220.145 9.05103 220.699 9.05103 cv
221.285 9.05103 221.785 9.13702 222.199 9.30902 cv
222.613 9.47998 222.953 9.71899 223.219 10.023 cv
223.484 10.328 223.68 10.691 223.805 11.105 cv
223.93 11.527 223.992 11.98 223.992 12.469 cv
cp
222.086 12.219 mo
222.098 11.668 221.988 11.23 221.754 10.914 cv
221.516 10.602 221.148 10.445 220.652 10.441 cv
220.402 10.445 220.184 10.492 220 10.582 cv
219.813 10.68 219.66 10.805 219.539 10.961 cv
219.414 11.121 219.32 11.309 219.258 11.523 cv
219.191 11.742 219.152 11.977 219.145 12.219 cv
cp
f
232.633 12.883 mo
232.629 13.504 232.563 14.066 232.43 14.562 cv
232.293 15.062 232.098 15.484 231.848 15.832 cv
231.59 16.184 231.273 16.453 230.895 16.637 cv
230.512 16.824 230.078 16.914 229.59 16.918 cv
229.383 16.914 229.195 16.895 229.027 16.859 cv
228.855 16.816 228.691 16.758 228.535 16.68 cv
228.375 16.602 228.215 16.504 228.063 16.379 cv
227.902 16.262 227.742 16.121 227.578 15.957 cv
227.578 19.242 li
227.574 19.289 227.559 19.336 227.531 19.383 cv
227.496 19.422 227.441 19.457 227.371 19.488 cv
227.293 19.512 227.195 19.535 227.07 19.555 cv
226.945 19.566 226.785 19.574 226.594 19.578 cv
226.398 19.574 226.238 19.566 226.113 19.555 cv
225.984 19.535 225.883 19.512 225.813 19.488 cv
225.734 19.457 225.684 19.422 225.652 19.383 cv
225.621 19.336 225.605 19.289 225.605 19.242 cv
225.605 9.49597 li
225.605 9.44501 225.617 9.40198 225.645 9.35901 cv
225.668 9.32397 225.715 9.289 225.781 9.26202 cv
225.844 9.23798 225.93 9.21899 226.039 9.203 cv
226.148 9.19098 226.281 9.18701 226.445 9.18402 cv
226.598 9.18701 226.73 9.19098 226.84 9.203 cv
226.945 9.21899 227.031 9.23798 227.098 9.26202 cv
227.16 9.289 227.207 9.32397 227.234 9.35901 cv
227.258 9.40198 227.27 9.44501 227.273 9.49597 cv
227.273 10.316 li
227.473 10.109 227.672 9.92603 227.871 9.76599 cv
228.063 9.60901 228.262 9.47699 228.469 9.367 cv
228.668 9.26202 228.879 9.18402 229.098 9.12903 cv
229.316 9.078 229.547 9.05103 229.793 9.05103 cv
230.301 9.05103 230.734 9.15198 231.098 9.35199 cv
231.453 9.55499 231.746 9.828 231.977 10.176 cv
232.199 10.527 232.367 10.937 232.473 11.398 cv
232.578 11.867 232.629 12.359 232.633 12.883 cv
cp
230.582 13.023 mo
230.578 12.727 230.559 12.441 230.516 12.168 cv
230.469 11.895 230.391 11.652 230.289 11.434 cv
230.18 11.223 230.039 11.051 229.867 10.922 cv
229.688 10.797 229.469 10.734 229.211 10.73 cv
229.078 10.734 228.949 10.754 228.824 10.789 cv
228.691 10.832 228.563 10.895 228.434 10.98 cv
228.297 11.07 228.16 11.184 228.023 11.324 cv
227.879 11.465 227.73 11.641 227.578 11.848 cv
227.578 14.148 li
227.852 14.5 228.113 14.773 228.367 14.961 cv
228.613 15.156 228.875 15.25 229.148 15.246 cv
229.402 15.25 229.621 15.184 229.805 15.051 cv
229.98 14.918 230.129 14.746 230.246 14.535 cv
230.359 14.324 230.441 14.086 230.5 13.82 cv
230.551 13.555 230.578 13.289 230.582 13.023 cv
cp
f
240.152 16.496 mo
240.148 16.574 240.121 16.629 240.074 16.668 cv
240.02 16.711 239.938 16.738 239.828 16.758 cv
239.711 16.773 239.547 16.785 239.332 16.785 cv
239.094 16.785 238.922 16.773 238.82 16.758 cv
238.711 16.738 238.637 16.711 238.594 16.668 cv
238.547 16.629 238.523 16.574 238.527 16.496 cv
238.527 15.941 li
238.238 16.25 237.91 16.492 237.543 16.66 cv
237.172 16.832 236.766 16.914 236.32 16.918 cv
235.949 16.914 235.609 16.867 235.301 16.773 cv
234.988 16.68 234.719 16.539 234.492 16.344 cv
234.262 16.156 234.086 15.918 233.965 15.637 cv
233.836 15.355 233.773 15.027 233.777 14.648 cv
233.773 14.246 233.852 13.895 234.016 13.59 cv
234.172 13.293 234.41 13.043 234.727 12.848 cv
235.043 12.652 235.438 12.508 235.906 12.414 cv
236.375 12.32 236.918 12.273 237.539 12.273 cv
238.223 12.273 li
238.223 11.848 li
238.219 11.633 238.199 11.441 238.156 11.273 cv
238.109 11.113 238.035 10.977 237.934 10.863 cv
237.832 10.758 237.695 10.676 237.527 10.621 cv
237.355 10.57 237.145 10.547 236.898 10.543 cv
236.566 10.547 236.273 10.582 236.02 10.652 cv
235.758 10.727 235.531 10.809 235.336 10.895 cv
235.137 10.988 234.969 11.066 234.836 11.137 cv
234.699 11.211 234.594 11.25 234.512 11.246 cv
234.453 11.25 234.402 11.23 234.359 11.191 cv
234.313 11.156 234.273 11.105 234.25 11.035 cv
234.219 10.973 234.199 10.887 234.184 10.785 cv
234.168 10.687 234.16 10.578 234.16 10.457 cv
234.16 10.297 234.172 10.172 234.199 10.074 cv
234.223 9.98401 234.273 9.89801 234.348 9.82001 cv
234.418 9.74597 234.543 9.664 234.73 9.57001 cv
234.91 9.48401 235.125 9.39801 235.375 9.31598 cv
235.617 9.242 235.887 9.17999 236.176 9.125 cv
236.465 9.078 236.762 9.05103 237.07 9.05103 cv
237.613 9.05103 238.082 9.10498 238.473 9.211 cv
238.863 9.32001 239.184 9.48401 239.434 9.703 cv
239.684 9.92603 239.863 10.211 239.98 10.559 cv
240.09 10.91 240.148 11.324 240.152 11.801 cv
cp
238.223 13.508 mo
237.469 13.508 li
237.148 13.512 236.879 13.535 236.656 13.578 cv
236.43 13.629 236.246 13.699 236.109 13.789 cv
235.965 13.887 235.863 14 235.801 14.129 cv
235.734 14.266 235.699 14.418 235.703 14.586 cv
235.699 14.883 235.793 15.113 235.98 15.277 cv
236.164 15.449 236.422 15.531 236.75 15.527 cv
237.023 15.531 237.277 15.461 237.512 15.316 cv
237.742 15.176 237.977 14.969 238.223 14.695 cv
cp
f
246.605 10.145 mo
246.602 10.336 246.598 10.488 246.59 10.605 cv
246.578 10.727 246.563 10.82 246.543 10.887 cv
246.52 10.957 246.492 11.004 246.461 11.027 cv
246.426 11.055 246.383 11.066 246.332 11.066 cv
246.289 11.066 246.242 11.059 246.191 11.039 cv
246.137 11.023 246.078 11.004 246.016 10.98 cv
245.949 10.961 245.875 10.941 245.797 10.922 cv
245.715 10.906 245.629 10.898 245.539 10.895 cv
245.426 10.898 245.316 10.918 245.211 10.961 cv
245.098 11.008 244.984 11.078 244.871 11.168 cv
244.75 11.266 244.629 11.391 244.504 11.543 cv
244.375 11.703 244.238 11.898 244.094 12.125 cv
244.094 16.473 li
244.09 16.527 244.074 16.57 244.047 16.609 cv
244.012 16.648 243.957 16.684 243.887 16.707 cv
243.809 16.734 243.711 16.75 243.586 16.766 cv
243.461 16.777 243.301 16.785 243.109 16.785 cv
242.914 16.785 242.754 16.777 242.629 16.766 cv
242.5 16.75 242.398 16.734 242.328 16.707 cv
242.25 16.684 242.199 16.648 242.168 16.609 cv
242.137 16.57 242.121 16.527 242.121 16.473 cv
242.121 9.49597 li
242.121 9.44501 242.133 9.40198 242.16 9.35901 cv
242.184 9.32397 242.23 9.289 242.301 9.26202 cv
242.367 9.23798 242.453 9.21899 242.563 9.203 cv
242.668 9.19098 242.805 9.18701 242.969 9.18402 cv
243.133 9.18701 243.27 9.19098 243.383 9.203 cv
243.488 9.21899 243.574 9.23798 243.637 9.26202 cv
243.695 9.289 243.738 9.32397 243.766 9.35901 cv
243.789 9.40198 243.801 9.44501 243.805 9.49597 cv
243.805 10.363 li
243.984 10.105 244.156 9.89099 244.32 9.71899 cv
244.477 9.55103 244.633 9.41803 244.781 9.31598 cv
244.926 9.21899 245.07 9.14801 245.219 9.10901 cv
245.363 9.07001 245.508 9.05103 245.656 9.05103 cv
245.719 9.05103 245.793 9.05499 245.875 9.06201 cv
245.953 9.07001 246.035 9.086 246.121 9.10199 cv
246.203 9.125 246.277 9.14502 246.34 9.164 cv
246.402 9.19098 246.445 9.21503 246.477 9.23798 cv
246.5 9.26599 246.523 9.297 246.539 9.32397 cv
246.551 9.35901 246.563 9.40198 246.574 9.453 cv
246.582 9.51202 246.59 9.59399 246.598 9.69897 cv
246.602 9.81201 246.602 9.961 246.605 10.145 cv
cp
f
253.371 16.496 mo
253.367 16.574 253.34 16.629 253.293 16.668 cv
253.238 16.711 253.156 16.738 253.047 16.758 cv
252.93 16.773 252.766 16.785 252.551 16.785 cv
252.313 16.785 252.141 16.773 252.039 16.758 cv
251.93 16.738 251.855 16.711 251.813 16.668 cv
251.766 16.629 251.742 16.574 251.746 16.496 cv
251.746 15.941 li
251.457 16.25 251.129 16.492 250.762 16.66 cv
250.391 16.832 249.984 16.914 249.539 16.918 cv
249.168 16.914 248.828 16.867 248.52 16.773 cv
248.207 16.68 247.938 16.539 247.711 16.344 cv
247.48 16.156 247.305 15.918 247.184 15.637 cv
247.055 15.355 246.992 15.027 246.996 14.648 cv
246.992 14.246 247.07 13.895 247.234 13.59 cv
247.391 13.293 247.629 13.043 247.945 12.848 cv
248.262 12.652 248.656 12.508 249.125 12.414 cv
249.594 12.32 250.137 12.273 250.758 12.273 cv
251.441 12.273 li
251.441 11.848 li
251.438 11.633 251.418 11.441 251.375 11.273 cv
251.328 11.113 251.254 10.977 251.152 10.863 cv
251.051 10.758 250.914 10.676 250.746 10.621 cv
250.574 10.57 250.363 10.547 250.117 10.543 cv
249.785 10.547 249.492 10.582 249.238 10.652 cv
248.977 10.727 248.75 10.809 248.555 10.895 cv
248.355 10.988 248.188 11.066 248.055 11.137 cv
247.918 11.211 247.813 11.25 247.73 11.246 cv
247.672 11.25 247.621 11.23 247.578 11.191 cv
247.531 11.156 247.492 11.105 247.469 11.035 cv
247.438 10.973 247.418 10.887 247.402 10.785 cv
247.387 10.687 247.379 10.578 247.379 10.457 cv
247.379 10.297 247.391 10.172 247.418 10.074 cv
247.441 9.98401 247.492 9.89801 247.566 9.82001 cv
247.637 9.74597 247.762 9.664 247.949 9.57001 cv
248.129 9.48401 248.344 9.39801 248.594 9.31598 cv
248.836 9.242 249.105 9.17999 249.395 9.125 cv
249.684 9.078 249.98 9.05103 250.289 9.05103 cv
250.832 9.05103 251.301 9.10498 251.691 9.211 cv
252.082 9.32001 252.402 9.48401 252.652 9.703 cv
252.902 9.92603 253.082 10.211 253.199 10.559 cv
253.309 10.91 253.367 11.324 253.371 11.801 cv
cp
251.441 13.508 mo
250.688 13.508 li
250.367 13.512 250.098 13.535 249.875 13.578 cv
249.648 13.629 249.465 13.699 249.328 13.789 cv
249.184 13.887 249.082 14 249.02 14.129 cv
248.953 14.266 248.918 14.418 248.922 14.586 cv
248.918 14.883 249.012 15.113 249.199 15.277 cv
249.383 15.449 249.641 15.531 249.969 15.527 cv
250.242 15.531 250.496 15.461 250.73 15.316 cv
250.961 15.176 251.195 14.969 251.441 14.695 cv
cp
f
259.297 15.785 mo
259.293 16.016 259.281 16.191 259.254 16.312 cv
259.223 16.437 259.184 16.523 259.141 16.57 cv
259.09 16.621 259.02 16.664 258.93 16.703 cv
258.836 16.742 258.73 16.773 258.609 16.805 cv
258.484 16.828 258.352 16.852 258.211 16.871 cv
258.066 16.883 257.922 16.891 257.777 16.895 cv
257.387 16.891 257.047 16.84 256.762 16.746 cv
256.473 16.645 256.234 16.496 256.051 16.289 cv
255.859 16.086 255.723 15.828 255.633 15.512 cv
255.543 15.199 255.496 14.828 255.5 14.398 cv
255.5 10.824 li
254.664 10.824 li
254.563 10.828 254.488 10.766 254.438 10.641 cv
254.383 10.52 254.355 10.316 254.359 10.027 cv
254.355 9.87903 254.363 9.75 254.379 9.64502 cv
254.391 9.54303 254.41 9.461 254.438 9.39801 cv
254.461 9.34003 254.492 9.297 254.535 9.27002 cv
254.57 9.24597 254.617 9.23401 254.672 9.22998 cv
255.5 9.22998 li
255.5 7.672 li
255.496 7.625 255.512 7.578 255.543 7.53101 cv
255.57 7.492 255.621 7.45697 255.699 7.42603 cv
255.773 7.40198 255.879 7.37903 256.008 7.36298 cv
256.133 7.35199 256.289 7.34802 256.48 7.34399 cv
256.672 7.34802 256.832 7.35199 256.961 7.36298 cv
257.086 7.37903 257.188 7.40198 257.262 7.42603 cv
257.332 7.45697 257.383 7.492 257.418 7.53101 cv
257.445 7.578 257.461 7.625 257.465 7.672 cv
257.465 9.22998 li
258.984 9.22998 li
259.035 9.23401 259.078 9.24597 259.121 9.27002 cv
259.156 9.297 259.191 9.34003 259.219 9.39801 cv
259.242 9.461 259.262 9.54303 259.277 9.64502 cv
259.289 9.75 259.293 9.87903 259.297 10.027 cv
259.293 10.316 259.27 10.52 259.219 10.641 cv
259.164 10.766 259.086 10.828 258.992 10.824 cv
257.465 10.824 li
257.465 14.102 li
257.461 14.484 257.52 14.773 257.645 14.961 cv
257.762 15.156 257.977 15.25 258.285 15.246 cv
258.387 15.25 258.48 15.242 258.566 15.219 cv
258.648 15.203 258.723 15.18 258.789 15.156 cv
258.855 15.133 258.91 15.113 258.957 15.09 cv
258.996 15.074 259.039 15.062 259.078 15.062 cv
259.109 15.062 259.137 15.074 259.168 15.09 cv
259.191 15.113 259.215 15.148 259.234 15.203 cv
259.246 15.258 259.262 15.332 259.277 15.426 cv
259.289 15.52 259.293 15.641 259.297 15.785 cv
cp
f
262.695 16.473 mo
262.691 16.527 262.676 16.57 262.648 16.609 cv
262.613 16.648 262.559 16.684 262.488 16.707 cv
262.41 16.734 262.313 16.75 262.188 16.766 cv
262.063 16.777 261.902 16.785 261.711 16.785 cv
261.516 16.785 261.355 16.777 261.23 16.766 cv
261.102 16.75 261 16.734 260.93 16.707 cv
260.852 16.684 260.801 16.648 260.77 16.609 cv
260.738 16.57 260.723 16.527 260.723 16.473 cv
260.723 9.51202 li
260.723 9.46503 260.738 9.41803 260.77 9.375 cv
260.801 9.34003 260.852 9.30499 260.93 9.27301 cv
261 9.24597 261.102 9.22699 261.23 9.20697 cv
261.355 9.19501 261.516 9.18701 261.711 9.18402 cv
261.902 9.18701 262.063 9.19501 262.188 9.20697 cv
262.313 9.22699 262.41 9.24597 262.488 9.27301 cv
262.559 9.30499 262.613 9.34003 262.648 9.375 cv
262.676 9.41803 262.691 9.46503 262.695 9.51202 cv
cp
262.844 7.133 mo
262.844 7.53101 262.762 7.80499 262.602 7.953 cv
262.438 8.10901 262.137 8.18402 261.703 8.17999 cv
261.254 8.18402 260.957 8.10901 260.805 7.961 cv
260.648 7.81598 260.57 7.55499 260.574 7.172 cv
260.57 6.77698 260.648 6.50403 260.813 6.34802 cv
260.969 6.19897 261.273 6.12097 261.719 6.117 cv
262.156 6.12097 262.453 6.19501 262.609 6.34003 cv
262.766 6.492 262.844 6.758 262.844 7.133 cv
cp
f
271.723 12.914 mo
271.719 13.512 271.641 14.055 271.484 14.543 cv
271.328 15.035 271.09 15.457 270.773 15.809 cv
270.453 16.164 270.055 16.437 269.578 16.629 cv
269.098 16.82 268.535 16.914 267.895 16.918 cv
267.27 16.914 266.73 16.832 266.277 16.66 cv
265.816 16.492 265.438 16.242 265.133 15.91 cv
264.828 15.586 264.602 15.18 264.461 14.699 cv
264.313 14.219 264.242 13.672 264.242 13.055 cv
264.242 12.465 264.32 11.922 264.48 11.426 cv
264.637 10.934 264.875 10.512 265.195 10.156 cv
265.512 9.80902 265.91 9.53497 266.391 9.34003 cv
266.863 9.14801 267.422 9.05103 268.066 9.05103 cv
268.691 9.05103 269.234 9.13702 269.695 9.30499 cv
270.152 9.47699 270.531 9.72699 270.832 10.051 cv
271.129 10.383 271.352 10.785 271.5 11.262 cv
271.645 11.742 271.719 12.293 271.723 12.914 cv
cp
269.695 12.992 mo
269.691 12.652 269.664 12.336 269.613 12.043 cv
269.555 11.754 269.461 11.5 269.336 11.285 cv
269.203 11.074 269.031 10.906 268.816 10.785 cv
268.598 10.668 268.324 10.609 267.996 10.605 cv
267.703 10.609 267.449 10.664 267.23 10.766 cv
267.012 10.875 266.832 11.031 266.691 11.234 cv
266.551 11.445 266.445 11.691 266.375 11.98 cv
266.305 12.27 266.27 12.602 266.27 12.969 cv
266.27 13.316 266.297 13.633 266.355 13.918 cv
266.41 14.211 266.504 14.461 266.633 14.672 cv
266.758 14.887 266.93 15.055 267.152 15.172 cv
267.367 15.293 267.637 15.352 267.965 15.348 cv
268.262 15.352 268.523 15.297 268.742 15.187 cv
268.961 15.082 269.141 14.926 269.281 14.719 cv
269.422 14.52 269.523 14.273 269.594 13.98 cv
269.656 13.695 269.691 13.367 269.695 12.992 cv
cp
f
279.992 16.473 mo
279.988 16.527 279.973 16.57 279.945 16.609 cv
279.91 16.648 279.859 16.684 279.789 16.707 cv
279.715 16.734 279.613 16.75 279.488 16.766 cv
279.355 16.777 279.199 16.785 279.016 16.785 cv
278.82 16.785 278.66 16.777 278.535 16.766 cv
278.406 16.75 278.305 16.734 278.234 16.707 cv
278.156 16.684 278.105 16.648 278.078 16.609 cv
278.043 16.57 278.027 16.527 278.031 16.473 cv
278.031 12.492 li
278.027 12.152 278.004 11.887 277.957 11.691 cv
277.906 11.504 277.832 11.336 277.742 11.195 cv
277.645 11.059 277.523 10.953 277.379 10.875 cv
277.227 10.801 277.055 10.762 276.855 10.762 cv
276.605 10.762 276.352 10.855 276.098 11.035 cv
275.84 11.223 275.574 11.488 275.301 11.832 cv
275.301 16.473 li
275.297 16.527 275.281 16.57 275.254 16.609 cv
275.219 16.648 275.164 16.684 275.094 16.707 cv
275.016 16.734 274.918 16.75 274.793 16.766 cv
274.668 16.777 274.508 16.785 274.316 16.785 cv
274.121 16.785 273.961 16.777 273.836 16.766 cv
273.707 16.75 273.605 16.734 273.535 16.707 cv
273.457 16.684 273.406 16.648 273.375 16.609 cv
273.344 16.57 273.328 16.527 273.328 16.473 cv
273.328 9.49597 li
273.328 9.44501 273.34 9.40198 273.367 9.35901 cv
273.391 9.32397 273.438 9.289 273.508 9.26202 cv
273.574 9.23798 273.66 9.21899 273.77 9.203 cv
273.875 9.19098 274.012 9.18701 274.176 9.18402 cv
274.34 9.18701 274.477 9.19098 274.59 9.203 cv
274.695 9.21899 274.781 9.23798 274.844 9.26202 cv
274.902 9.289 274.945 9.32397 274.973 9.35901 cv
274.996 9.40198 275.008 9.44501 275.012 9.49597 cv
275.012 10.301 li
275.395 9.88702 275.789 9.57397 276.188 9.36298 cv
276.586 9.15601 277 9.05103 277.438 9.05103 cv
277.906 9.05103 278.309 9.12903 278.637 9.28497 cv
278.961 9.44098 279.223 9.65601 279.426 9.922 cv
279.625 10.195 279.77 10.508 279.859 10.863 cv
279.945 11.227 279.988 11.66 279.992 12.164 cv
cp
f
292.313 7.461 mo
292.313 7.617 292.305 7.74597 292.289 7.84802 cv
292.273 7.95697 292.254 8.04303 292.23 8.10498 cv
292.203 8.17603 292.168 8.22302 292.133 8.25 cv
292.09 8.28497 292.047 8.30103 292.004 8.297 cv
289.473 8.297 li
289.473 16.457 li
289.469 16.512 289.453 16.559 289.422 16.598 cv
289.387 16.641 289.328 16.676 289.25 16.699 cv
289.168 16.727 289.063 16.746 288.934 16.762 cv
288.797 16.777 288.633 16.785 288.438 16.785 cv
288.238 16.785 288.074 16.777 287.941 16.762 cv
287.809 16.746 287.703 16.727 287.625 16.699 cv
287.547 16.676 287.488 16.641 287.457 16.598 cv
287.418 16.559 287.402 16.512 287.406 16.457 cv
287.406 8.297 li
284.871 8.297 li
284.816 8.30103 284.77 8.28497 284.738 8.25 cv
284.699 8.22302 284.668 8.17603 284.645 8.10498 cv
284.613 8.04303 284.594 7.95697 284.586 7.84802 cv
284.57 7.74597 284.566 7.617 284.566 7.461 cv
284.566 7.30902 284.57 7.17603 284.586 7.06201 cv
284.594 6.95697 284.613 6.867 284.645 6.80103 cv
284.668 6.73798 284.699 6.69098 284.738 6.65997 cv
284.77 6.633 284.816 6.62097 284.871 6.617 cv
292.004 6.617 li
292.047 6.62097 292.09 6.633 292.133 6.65997 cv
292.168 6.69098 292.203 6.73798 292.23 6.80103 cv
292.254 6.867 292.273 6.95697 292.289 7.06201 cv
292.305 7.17603 292.313 7.30902 292.313 7.461 cv
cp
f
295.359 16.473 mo
295.355 16.527 295.34 16.57 295.313 16.609 cv
295.277 16.648 295.223 16.684 295.152 16.707 cv
295.074 16.734 294.977 16.75 294.852 16.766 cv
294.727 16.777 294.566 16.785 294.375 16.785 cv
294.18 16.785 294.02 16.777 293.895 16.766 cv
293.766 16.75 293.664 16.734 293.594 16.707 cv
293.516 16.684 293.465 16.648 293.434 16.609 cv
293.402 16.57 293.387 16.527 293.387 16.473 cv
293.387 9.51202 li
293.387 9.46503 293.402 9.41803 293.434 9.375 cv
293.465 9.34003 293.516 9.30499 293.594 9.27301 cv
293.664 9.24597 293.766 9.22699 293.895 9.20697 cv
294.02 9.19501 294.18 9.18701 294.375 9.18402 cv
294.566 9.18701 294.727 9.19501 294.852 9.20697 cv
294.977 9.22699 295.074 9.24597 295.152 9.27301 cv
295.223 9.30499 295.277 9.34003 295.313 9.375 cv
295.34 9.41803 295.355 9.46503 295.359 9.51202 cv
cp
295.508 7.133 mo
295.508 7.53101 295.426 7.80499 295.266 7.953 cv
295.102 8.10901 294.801 8.18402 294.367 8.17999 cv
293.918 8.18402 293.621 8.10901 293.469 7.961 cv
293.313 7.81598 293.234 7.55499 293.238 7.172 cv
293.234 6.77698 293.313 6.50403 293.477 6.34802 cv
293.633 6.19897 293.938 6.12097 294.383 6.117 cv
294.82 6.12097 295.117 6.19501 295.273 6.34003 cv
295.43 6.492 295.508 6.758 295.508 7.133 cv
cp
f
308.43 16.473 mo
308.426 16.527 308.41 16.57 308.383 16.609 cv
308.348 16.648 308.297 16.684 308.227 16.707 cv
308.152 16.734 308.051 16.75 307.93 16.766 cv
307.801 16.777 307.645 16.785 307.453 16.785 cv
307.25 16.785 307.086 16.777 306.965 16.766 cv
306.836 16.75 306.734 16.734 306.664 16.707 cv
306.586 16.684 306.535 16.648 306.508 16.609 cv
306.477 16.57 306.461 16.527 306.465 16.473 cv
306.465 12.336 li
306.461 12.102 306.441 11.887 306.398 11.691 cv
306.352 11.504 306.281 11.336 306.195 11.195 cv
306.102 11.059 305.988 10.953 305.852 10.875 cv
305.711 10.801 305.547 10.762 305.355 10.762 cv
305.121 10.762 304.883 10.855 304.645 11.035 cv
304.402 11.223 304.141 11.488 303.859 11.832 cv
303.859 16.473 li
303.855 16.527 303.84 16.57 303.813 16.609 cv
303.777 16.648 303.723 16.684 303.652 16.707 cv
303.574 16.734 303.477 16.75 303.352 16.766 cv
303.227 16.777 303.07 16.785 302.883 16.785 cv
302.688 16.785 302.527 16.777 302.406 16.766 cv
302.277 16.75 302.176 16.734 302.105 16.707 cv
302.027 16.684 301.977 16.648 301.945 16.609 cv
301.914 16.57 301.898 16.527 301.898 16.473 cv
301.898 12.336 li
301.898 12.102 301.875 11.887 301.832 11.691 cv
301.785 11.504 301.719 11.336 301.633 11.195 cv
301.543 11.059 301.43 10.953 301.289 10.875 cv
301.148 10.801 300.98 10.762 300.793 10.762 cv
300.551 10.762 300.313 10.855 300.074 11.035 cv
299.832 11.223 299.574 11.488 299.301 11.832 cv
299.301 16.473 li
299.297 16.527 299.281 16.57 299.254 16.609 cv
299.219 16.648 299.164 16.684 299.094 16.707 cv
299.016 16.734 298.918 16.75 298.793 16.766 cv
298.668 16.777 298.508 16.785 298.316 16.785 cv
298.121 16.785 297.961 16.777 297.836 16.766 cv
297.707 16.75 297.605 16.734 297.535 16.707 cv
297.457 16.684 297.406 16.648 297.375 16.609 cv
297.344 16.57 297.328 16.527 297.328 16.473 cv
297.328 9.49597 li
297.328 9.44501 297.34 9.40198 297.367 9.35901 cv
297.391 9.32397 297.438 9.289 297.508 9.26202 cv
297.574 9.23798 297.66 9.21899 297.77 9.203 cv
297.875 9.19098 298.012 9.18701 298.176 9.18402 cv
298.34 9.18701 298.477 9.19098 298.59 9.203 cv
298.695 9.21899 298.781 9.23798 298.844 9.26202 cv
298.902 9.289 298.945 9.32397 298.973 9.35901 cv
298.996 9.40198 299.008 9.44501 299.012 9.49597 cv
299.012 10.301 li
299.395 9.88702 299.781 9.57397 300.164 9.36298 cv
300.547 9.15601 300.945 9.05103 301.367 9.05103 cv
301.648 9.05103 301.906 9.08197 302.141 9.14099 cv
302.367 9.203 302.574 9.289 302.754 9.39801 cv
302.934 9.51202 303.086 9.64502 303.219 9.80103 cv
303.344 9.95697 303.453 10.133 303.547 10.324 cv
303.75 10.102 303.957 9.90997 304.16 9.74597 cv
304.363 9.59003 304.563 9.45697 304.758 9.35199 cv
304.953 9.25403 305.148 9.17999 305.344 9.125 cv
305.539 9.078 305.738 9.05103 305.941 9.05103 cv
306.402 9.05103 306.793 9.12903 307.113 9.28497 cv
307.434 9.44098 307.691 9.65601 307.887 9.922 cv
308.082 10.195 308.219 10.508 308.305 10.863 cv
308.383 11.227 308.426 11.605 308.43 12.004 cv
cp
f
316.797 12.781 mo
316.797 13.023 316.742 13.199 316.637 13.312 cv
316.527 13.43 316.379 13.488 316.195 13.484 cv
311.949 13.484 li
311.945 13.785 311.98 14.055 312.055 14.293 cv
312.121 14.539 312.234 14.742 312.391 14.91 cv
312.543 15.082 312.738 15.215 312.984 15.301 cv
313.223 15.395 313.516 15.437 313.855 15.434 cv
314.199 15.437 314.5 15.414 314.766 15.359 cv
315.023 15.312 315.25 15.258 315.441 15.195 cv
315.629 15.137 315.785 15.078 315.914 15.027 cv
316.035 14.98 316.137 14.957 316.219 14.953 cv
316.262 14.957 316.301 14.965 316.336 14.98 cv
316.363 15 316.391 15.035 316.414 15.078 cv
316.434 15.129 316.449 15.195 316.457 15.281 cv
316.465 15.371 316.469 15.48 316.469 15.605 cv
316.469 15.723 316.465 15.82 316.461 15.898 cv
316.453 15.984 316.445 16.051 316.438 16.105 cv
316.426 16.164 316.41 16.215 316.391 16.25 cv
316.367 16.293 316.34 16.328 316.309 16.363 cv
316.273 16.402 316.18 16.453 316.031 16.512 cv
315.875 16.578 315.684 16.641 315.453 16.695 cv
315.215 16.758 314.945 16.805 314.648 16.852 cv
314.344 16.891 314.02 16.914 313.676 16.918 cv
313.051 16.914 312.508 16.84 312.047 16.684 cv
311.578 16.531 311.188 16.293 310.875 15.973 cv
310.559 15.656 310.328 15.254 310.176 14.77 cv
310.02 14.285 309.941 13.719 309.945 13.062 cv
309.941 12.445 310.023 11.887 310.188 11.387 cv
310.348 10.891 310.582 10.465 310.891 10.117 cv
311.199 9.77301 311.574 9.51202 312.016 9.32397 cv
312.453 9.14502 312.949 9.05103 313.504 9.05103 cv
314.09 9.05103 314.59 9.13702 315.004 9.30902 cv
315.418 9.47998 315.758 9.71899 316.023 10.023 cv
316.289 10.328 316.484 10.691 316.609 11.105 cv
316.734 11.527 316.797 11.98 316.797 12.469 cv
cp
314.891 12.219 mo
314.902 11.668 314.793 11.23 314.559 10.914 cv
314.32 10.602 313.953 10.445 313.457 10.441 cv
313.207 10.445 312.988 10.492 312.805 10.582 cv
312.617 10.68 312.465 10.805 312.344 10.961 cv
312.219 11.121 312.125 11.309 312.063 11.523 cv
311.996 11.742 311.957 11.977 311.949 12.219 cv
cp
f
323.324 14.5 mo
323.32 14.898 323.246 15.25 323.102 15.551 cv
322.949 15.855 322.738 16.109 322.469 16.309 cv
322.195 16.516 321.875 16.664 321.508 16.766 cv
321.137 16.863 320.734 16.914 320.305 16.918 cv
320.039 16.914 319.793 16.895 319.559 16.859 cv
319.32 16.816 319.105 16.77 318.918 16.711 cv
318.727 16.652 318.57 16.59 318.449 16.527 cv
318.32 16.465 318.23 16.406 318.176 16.352 cv
318.117 16.297 318.07 16.211 318.043 16.094 cv
318.008 15.977 317.992 15.805 317.996 15.574 cv
317.992 15.426 318 15.305 318.012 15.211 cv
318.02 15.121 318.035 15.047 318.059 14.988 cv
318.078 14.937 318.102 14.902 318.137 14.879 cv
318.164 14.863 318.203 14.852 318.254 14.852 cv
318.309 14.852 318.395 14.887 318.508 14.949 cv
318.617 15.02 318.758 15.09 318.926 15.168 cv
319.094 15.246 319.289 15.32 319.512 15.387 cv
319.73 15.457 319.98 15.492 320.266 15.488 cv
320.441 15.492 320.598 15.473 320.738 15.434 cv
320.871 15.398 320.992 15.348 321.098 15.277 cv
321.195 15.215 321.273 15.129 321.328 15.02 cv
321.379 14.918 321.402 14.797 321.406 14.656 cv
321.402 14.504 321.355 14.367 321.262 14.254 cv
321.164 14.145 321.035 14.047 320.879 13.961 cv
320.715 13.879 320.535 13.801 320.34 13.727 cv
320.137 13.656 319.934 13.578 319.723 13.484 cv
319.512 13.398 319.305 13.297 319.102 13.18 cv
318.898 13.07 318.719 12.93 318.563 12.758 cv
318.402 12.594 318.273 12.391 318.18 12.156 cv
318.082 11.922 318.035 11.641 318.035 11.309 cv
318.035 10.977 318.098 10.672 318.23 10.391 cv
318.355 10.117 318.543 9.87903 318.793 9.67603 cv
319.035 9.47998 319.336 9.32397 319.691 9.21503 cv
320.039 9.10498 320.434 9.05103 320.875 9.05103 cv
321.09 9.05103 321.301 9.06598 321.512 9.09802 cv
321.715 9.12903 321.902 9.16803 322.07 9.21503 cv
322.238 9.26202 322.379 9.31201 322.496 9.367 cv
322.605 9.422 322.688 9.46899 322.742 9.508 cv
322.789 9.547 322.824 9.586 322.848 9.625 cv
322.863 9.664 322.879 9.711 322.895 9.76599 cv
322.902 9.82001 322.914 9.89099 322.922 9.96899 cv
322.93 10.055 322.934 10.152 322.934 10.27 cv
322.934 10.41 322.93 10.527 322.922 10.613 cv
322.914 10.707 322.898 10.777 322.883 10.824 cv
322.859 10.879 322.836 10.914 322.809 10.93 cv
322.773 10.953 322.738 10.961 322.699 10.957 cv
322.652 10.961 322.578 10.934 322.48 10.875 cv
322.379 10.824 322.254 10.766 322.105 10.699 cv
321.953 10.641 321.781 10.582 321.59 10.523 cv
321.391 10.473 321.168 10.445 320.922 10.441 cv
320.742 10.445 320.59 10.465 320.461 10.496 cv
320.328 10.535 320.219 10.586 320.141 10.652 cv
320.055 10.723 319.992 10.801 319.953 10.891 cv
319.906 10.984 319.887 11.082 319.891 11.184 cv
319.887 11.348 319.938 11.484 320.039 11.59 cv
320.137 11.703 320.266 11.801 320.43 11.879 cv
320.59 11.965 320.773 12.043 320.98 12.117 cv
321.184 12.191 321.391 12.27 321.605 12.355 cv
321.813 12.441 322.023 12.543 322.23 12.656 cv
322.438 12.773 322.621 12.914 322.785 13.078 cv
322.945 13.246 323.074 13.445 323.176 13.676 cv
323.27 13.91 323.32 14.184 323.324 14.5 cv
cp
f
335.418 12.914 mo
335.414 13.512 335.336 14.055 335.18 14.543 cv
335.023 15.035 334.785 15.457 334.469 15.809 cv
334.148 16.164 333.75 16.437 333.273 16.629 cv
332.793 16.82 332.23 16.914 331.59 16.918 cv
330.965 16.914 330.426 16.832 329.973 16.66 cv
329.512 16.492 329.133 16.242 328.828 15.91 cv
328.523 15.586 328.297 15.18 328.156 14.699 cv
328.008 14.219 327.938 13.672 327.938 13.055 cv
327.938 12.465 328.016 11.922 328.176 11.426 cv
328.332 10.934 328.57 10.512 328.891 10.156 cv
329.207 9.80902 329.605 9.53497 330.086 9.34003 cv
330.559 9.14801 331.117 9.05103 331.762 9.05103 cv
332.387 9.05103 332.93 9.13702 333.391 9.30499 cv
333.848 9.47699 334.227 9.72699 334.527 10.051 cv
334.824 10.383 335.047 10.785 335.195 11.262 cv
335.34 11.742 335.414 12.293 335.418 12.914 cv
cp
333.391 12.992 mo
333.387 12.652 333.359 12.336 333.309 12.043 cv
333.25 11.754 333.156 11.5 333.031 11.285 cv
332.898 11.074 332.727 10.906 332.512 10.785 cv
332.293 10.668 332.02 10.609 331.691 10.605 cv
331.398 10.609 331.145 10.664 330.926 10.766 cv
330.707 10.875 330.527 11.031 330.387 11.234 cv
330.246 11.445 330.141 11.691 330.07 11.98 cv
330 12.27 329.965 12.602 329.965 12.969 cv
329.965 13.316 329.992 13.633 330.051 13.918 cv
330.105 14.211 330.199 14.461 330.328 14.672 cv
330.453 14.887 330.625 15.055 330.848 15.172 cv
331.063 15.293 331.332 15.352 331.66 15.348 cv
331.957 15.352 332.219 15.297 332.438 15.187 cv
332.656 15.082 332.836 14.926 332.977 14.719 cv
333.117 14.52 333.219 14.273 333.289 13.98 cv
333.352 13.695 333.387 13.367 333.391 12.992 cv
cp
f
341.188 6.836 mo
341.184 6.98798 341.18 7.10901 341.172 7.19897 cv
341.16 7.29303 341.145 7.36298 341.125 7.40997 cv
341.102 7.461 341.078 7.49597 341.055 7.51202 cv
341.027 7.53101 340.996 7.539 340.969 7.539 cv
340.93 7.539 340.891 7.53101 340.848 7.51202 cv
340.801 7.49597 340.746 7.47699 340.68 7.453 cv
340.613 7.43402 340.535 7.414 340.449 7.39502 cv
340.359 7.37903 340.254 7.37097 340.137 7.367 cv
339.992 7.37097 339.871 7.39099 339.773 7.43402 cv
339.668 7.47998 339.586 7.55103 339.52 7.64502 cv
339.449 7.742 339.398 7.867 339.371 8.02002 cv
339.336 8.17603 339.32 8.367 339.324 8.586 cv
339.324 9.22998 li
340.598 9.22998 li
340.645 9.23401 340.688 9.24597 340.727 9.27002 cv
340.766 9.297 340.797 9.34003 340.828 9.39801 cv
340.852 9.461 340.871 9.54303 340.887 9.64502 cv
340.895 9.75 340.902 9.87903 340.906 10.027 cv
340.902 10.316 340.875 10.52 340.828 10.641 cv
340.773 10.766 340.699 10.828 340.598 10.824 cv
339.324 10.824 li
339.324 16.473 li
339.32 16.527 339.305 16.57 339.277 16.609 cv
339.242 16.648 339.191 16.684 339.121 16.707 cv
339.047 16.734 338.945 16.75 338.816 16.766 cv
338.684 16.777 338.523 16.785 338.34 16.785 cv
338.148 16.785 337.992 16.777 337.867 16.766 cv
337.738 16.75 337.633 16.734 337.559 16.707 cv
337.48 16.684 337.43 16.648 337.402 16.609 cv
337.371 16.57 337.355 16.527 337.359 16.473 cv
337.359 10.824 li
336.484 10.824 li
336.383 10.828 336.309 10.766 336.262 10.641 cv
336.211 10.52 336.184 10.316 336.188 10.027 cv
336.184 9.87903 336.191 9.75 336.207 9.64502 cv
336.219 9.54303 336.238 9.461 336.262 9.39801 cv
336.285 9.34003 336.316 9.297 336.355 9.27002 cv
336.395 9.24597 336.438 9.23401 336.492 9.22998 cv
337.359 9.22998 li
337.359 8.64099 li
337.355 8.16803 337.402 7.75403 337.5 7.39502 cv
337.594 7.039 337.742 6.742 337.945 6.50403 cv
338.141 6.27002 338.398 6.09003 338.711 5.96899 cv
339.02 5.84802 339.383 5.789 339.809 5.78497 cv
340.008 5.789 340.203 5.80499 340.387 5.84003 cv
340.566 5.875 340.707 5.914 340.816 5.94897 cv
340.918 5.992 340.992 6.02698 341.031 6.05902 cv
341.066 6.09399 341.094 6.14502 341.121 6.20697 cv
341.141 6.27698 341.16 6.35901 341.172 6.45697 cv
341.18 6.56201 341.184 6.68701 341.188 6.836 cv
cp
f
347.844 16.457 mo
347.84 16.512 347.824 16.559 347.793 16.598 cv
347.758 16.641 347.699 16.676 347.625 16.699 cv
347.543 16.727 347.441 16.746 347.313 16.762 cv
347.18 16.777 347.012 16.785 346.813 16.785 cv
346.613 16.785 346.445 16.777 346.313 16.762 cv
346.176 16.746 346.07 16.727 345.996 16.699 cv
345.914 16.676 345.859 16.641 345.828 16.598 cv
345.793 16.559 345.777 16.512 345.777 16.457 cv
345.777 6.89801 li
345.777 6.85199 345.793 6.80499 345.828 6.758 cv
345.859 6.71899 345.918 6.68402 346 6.65601 cv
346.078 6.633 346.184 6.61298 346.316 6.59399 cv
346.449 6.58197 346.613 6.57397 346.813 6.57001 cv
347.012 6.57397 347.18 6.58197 347.313 6.59399 cv
347.441 6.61298 347.543 6.633 347.625 6.65601 cv
347.699 6.68402 347.758 6.71899 347.793 6.758 cv
347.824 6.80499 347.84 6.85199 347.844 6.89801 cv
cp
f
361.039 16.473 mo
361.035 16.527 361.02 16.57 360.992 16.609 cv
360.957 16.648 360.906 16.684 360.836 16.707 cv
360.762 16.734 360.66 16.75 360.539 16.766 cv
360.41 16.777 360.254 16.785 360.063 16.785 cv
359.859 16.785 359.695 16.777 359.574 16.766 cv
359.445 16.75 359.344 16.734 359.273 16.707 cv
359.195 16.684 359.145 16.648 359.117 16.609 cv
359.086 16.57 359.07 16.527 359.074 16.473 cv
359.074 12.336 li
359.07 12.102 359.051 11.887 359.008 11.691 cv
358.961 11.504 358.891 11.336 358.805 11.195 cv
358.711 11.059 358.598 10.953 358.461 10.875 cv
358.32 10.801 358.156 10.762 357.965 10.762 cv
357.73 10.762 357.492 10.855 357.254 11.035 cv
357.012 11.223 356.75 11.488 356.469 11.832 cv
356.469 16.473 li
356.465 16.527 356.449 16.57 356.422 16.609 cv
356.387 16.648 356.332 16.684 356.262 16.707 cv
356.184 16.734 356.086 16.75 355.961 16.766 cv
355.836 16.777 355.68 16.785 355.492 16.785 cv
355.297 16.785 355.137 16.777 355.016 16.766 cv
354.887 16.75 354.785 16.734 354.715 16.707 cv
354.637 16.684 354.586 16.648 354.555 16.609 cv
354.523 16.57 354.508 16.527 354.508 16.473 cv
354.508 12.336 li
354.508 12.102 354.484 11.887 354.441 11.691 cv
354.395 11.504 354.328 11.336 354.242 11.195 cv
354.152 11.059 354.039 10.953 353.898 10.875 cv
353.758 10.801 353.59 10.762 353.402 10.762 cv
353.16 10.762 352.922 10.855 352.684 11.035 cv
352.441 11.223 352.184 11.488 351.91 11.832 cv
351.91 16.473 li
351.906 16.527 351.891 16.57 351.863 16.609 cv
351.828 16.648 351.773 16.684 351.703 16.707 cv
351.625 16.734 351.527 16.75 351.402 16.766 cv
351.277 16.777 351.117 16.785 350.926 16.785 cv
350.73 16.785 350.57 16.777 350.445 16.766 cv
350.316 16.75 350.215 16.734 350.145 16.707 cv
350.066 16.684 350.016 16.648 349.984 16.609 cv
349.953 16.57 349.938 16.527 349.938 16.473 cv
349.938 9.49597 li
349.938 9.44501 349.949 9.40198 349.977 9.35901 cv
350 9.32397 350.047 9.289 350.117 9.26202 cv
350.184 9.23798 350.27 9.21899 350.379 9.203 cv
350.484 9.19098 350.621 9.18701 350.785 9.18402 cv
350.949 9.18701 351.086 9.19098 351.199 9.203 cv
351.305 9.21899 351.391 9.23798 351.453 9.26202 cv
351.512 9.289 351.555 9.32397 351.582 9.35901 cv
351.605 9.40198 351.617 9.44501 351.621 9.49597 cv
351.621 10.301 li
352.004 9.88702 352.391 9.57397 352.773 9.36298 cv
353.156 9.15601 353.555 9.05103 353.977 9.05103 cv
354.258 9.05103 354.516 9.08197 354.75 9.14099 cv
354.977 9.203 355.184 9.289 355.363 9.39801 cv
355.543 9.51202 355.695 9.64502 355.828 9.80103 cv
355.953 9.95697 356.063 10.133 356.156 10.324 cv
356.359 10.102 356.566 9.90997 356.77 9.74597 cv
356.973 9.59003 357.172 9.45697 357.367 9.35199 cv
357.563 9.25403 357.758 9.17999 357.953 9.125 cv
358.148 9.078 358.348 9.05103 358.551 9.05103 cv
359.012 9.05103 359.402 9.12903 359.723 9.28497 cv
360.043 9.44098 360.301 9.65601 360.496 9.922 cv
360.691 10.195 360.828 10.508 360.914 10.863 cv
360.992 11.227 361.035 11.605 361.039 12.004 cv
cp
f
368.906 16.496 mo
368.902 16.574 368.875 16.629 368.828 16.668 cv
368.773 16.711 368.691 16.738 368.582 16.758 cv
368.465 16.773 368.301 16.785 368.086 16.785 cv
367.848 16.785 367.676 16.773 367.574 16.758 cv
367.465 16.738 367.391 16.711 367.348 16.668 cv
367.301 16.629 367.277 16.574 367.281 16.496 cv
367.281 15.941 li
366.992 16.25 366.664 16.492 366.297 16.66 cv
365.926 16.832 365.52 16.914 365.074 16.918 cv
364.703 16.914 364.363 16.867 364.055 16.773 cv
363.742 16.68 363.473 16.539 363.246 16.344 cv
363.016 16.156 362.84 15.918 362.719 15.637 cv
362.59 15.355 362.527 15.027 362.531 14.648 cv
362.527 14.246 362.605 13.895 362.77 13.59 cv
362.926 13.293 363.164 13.043 363.48 12.848 cv
363.797 12.652 364.191 12.508 364.66 12.414 cv
365.129 12.32 365.672 12.273 366.293 12.273 cv
366.977 12.273 li
366.977 11.848 li
366.973 11.633 366.953 11.441 366.91 11.273 cv
366.863 11.113 366.789 10.977 366.688 10.863 cv
366.586 10.758 366.449 10.676 366.281 10.621 cv
366.109 10.57 365.898 10.547 365.652 10.543 cv
365.32 10.547 365.027 10.582 364.773 10.652 cv
364.512 10.727 364.285 10.809 364.09 10.895 cv
363.891 10.988 363.723 11.066 363.59 11.137 cv
363.453 11.211 363.348 11.25 363.266 11.246 cv
363.207 11.25 363.156 11.23 363.113 11.191 cv
363.066 11.156 363.027 11.105 363.004 11.035 cv
362.973 10.973 362.953 10.887 362.938 10.785 cv
362.922 10.687 362.914 10.578 362.914 10.457 cv
362.914 10.297 362.926 10.172 362.953 10.074 cv
362.977 9.98401 363.027 9.89801 363.102 9.82001 cv
363.172 9.74597 363.297 9.664 363.484 9.57001 cv
363.664 9.48401 363.879 9.39801 364.129 9.31598 cv
364.371 9.242 364.641 9.17999 364.93 9.125 cv
365.219 9.078 365.516 9.05103 365.824 9.05103 cv
366.367 9.05103 366.836 9.10498 367.227 9.211 cv
367.617 9.32001 367.938 9.48401 368.188 9.703 cv
368.438 9.92603 368.617 10.211 368.734 10.559 cv
368.844 10.91 368.902 11.324 368.906 11.801 cv
cp
366.977 13.508 mo
366.223 13.508 li
365.902 13.512 365.633 13.535 365.41 13.578 cv
365.184 13.629 365 13.699 364.863 13.789 cv
364.719 13.887 364.617 14 364.555 14.129 cv
364.488 14.266 364.453 14.418 364.457 14.586 cv
364.453 14.883 364.547 15.113 364.734 15.277 cv
364.918 15.449 365.176 15.531 365.504 15.527 cv
365.777 15.531 366.031 15.461 366.266 15.316 cv
366.496 15.176 366.73 14.969 366.977 14.695 cv
cp
f
377.164 9.97998 mo
377.16 10.234 377.133 10.418 377.078 10.535 cv
377.02 10.656 376.949 10.715 376.867 10.715 cv
376.047 10.715 li
376.16 10.84 376.242 10.984 376.293 11.141 cv
376.34 11.305 376.363 11.469 376.367 11.637 cv
376.363 12.047 376.297 12.41 376.164 12.723 cv
376.027 13.043 375.832 13.309 375.582 13.52 cv
375.324 13.738 375.02 13.902 374.664 14.012 cv
374.305 14.129 373.906 14.184 373.473 14.18 cv
373.246 14.184 373.035 14.156 372.832 14.098 cv
372.629 14.047 372.473 13.984 372.363 13.906 cv
372.301 13.977 372.242 14.055 372.195 14.148 cv
372.141 14.242 372.117 14.348 372.121 14.461 cv
372.117 14.613 372.184 14.738 372.32 14.832 cv
372.449 14.934 372.637 14.984 372.879 14.992 cv
374.574 15.055 li
374.969 15.074 375.324 15.129 375.637 15.227 cv
375.945 15.324 376.207 15.461 376.418 15.633 cv
376.629 15.809 376.789 16.02 376.902 16.262 cv
377.012 16.512 377.066 16.785 377.07 17.098 cv
377.066 17.437 376.992 17.762 376.844 18.07 cv
376.691 18.375 376.465 18.641 376.164 18.867 cv
375.859 19.086 375.48 19.266 375.023 19.398 cv
374.566 19.527 374.031 19.59 373.426 19.594 cv
372.828 19.59 372.32 19.543 371.902 19.453 cv
371.48 19.355 371.137 19.227 370.871 19.062 cv
370.598 18.895 370.402 18.695 370.285 18.461 cv
370.16 18.227 370.102 17.973 370.102 17.699 cv
370.102 17.527 370.121 17.363 370.168 17.207 cv
370.207 17.051 370.273 16.898 370.363 16.758 cv
370.445 16.613 370.551 16.48 370.68 16.348 cv
370.801 16.219 370.945 16.094 371.109 15.973 cv
370.883 15.855 370.707 15.691 370.59 15.484 cv
370.465 15.281 370.406 15.055 370.406 14.805 cv
370.406 14.5 370.477 14.223 370.617 13.965 cv
370.758 13.715 370.938 13.484 371.164 13.281 cv
370.977 13.102 370.832 12.883 370.727 12.625 cv
370.613 12.371 370.559 12.055 370.563 11.668 cv
370.559 11.266 370.629 10.902 370.777 10.578 cv
370.918 10.262 371.117 9.98798 371.375 9.76599 cv
371.629 9.547 371.938 9.37903 372.293 9.258 cv
372.645 9.14502 373.035 9.086 373.465 9.08197 cv
373.684 9.086 373.891 9.09802 374.094 9.12097 cv
374.289 9.14801 374.477 9.18701 374.656 9.22998 cv
376.867 9.22998 li
376.953 9.23401 377.023 9.289 377.082 9.40198 cv
377.133 9.52002 377.16 9.71503 377.164 9.97998 cv
cp
374.641 11.629 mo
374.637 11.254 374.531 10.965 374.324 10.754 cv
374.113 10.551 373.82 10.445 373.441 10.441 cv
373.246 10.445 373.074 10.477 372.934 10.539 cv
372.785 10.605 372.664 10.695 372.57 10.805 cv
372.469 10.918 372.398 11.047 372.355 11.195 cv
372.305 11.344 372.281 11.5 372.285 11.66 cv
372.281 12.02 372.387 12.301 372.598 12.504 cv
372.805 12.711 373.094 12.812 373.465 12.812 cv
373.66 12.812 373.832 12.781 373.98 12.719 cv
374.125 12.656 374.246 12.57 374.344 12.461 cv
374.438 12.352 374.508 12.227 374.563 12.082 cv
374.609 11.937 374.637 11.785 374.641 11.629 cv
cp
375.102 17.199 mo
375.098 16.961 375.004 16.785 374.816 16.66 cv
374.625 16.539 374.367 16.469 374.043 16.457 cv
372.645 16.418 li
372.508 16.52 372.398 16.613 372.32 16.703 cv
372.238 16.793 372.172 16.879 372.125 16.965 cv
372.07 17.047 372.039 17.129 372.027 17.207 cv
372.008 17.285 372 17.363 372.004 17.449 cv
372 17.707 372.133 17.906 372.398 18.043 cv
372.66 18.176 373.031 18.242 373.512 18.246 cv
373.809 18.242 374.059 18.215 374.262 18.156 cv
374.465 18.094 374.629 18.012 374.754 17.918 cv
374.879 17.816 374.969 17.707 375.023 17.586 cv
375.074 17.461 375.098 17.332 375.102 17.199 cv
cp
f
384.723 12.781 mo
384.723 13.023 384.668 13.199 384.563 13.312 cv
384.453 13.43 384.305 13.488 384.121 13.484 cv
379.875 13.484 li
379.871 13.785 379.906 14.055 379.98 14.293 cv
380.047 14.539 380.16 14.742 380.316 14.91 cv
380.469 15.082 380.664 15.215 380.91 15.301 cv
381.148 15.395 381.441 15.437 381.781 15.434 cv
382.125 15.437 382.426 15.414 382.691 15.359 cv
382.949 15.312 383.176 15.258 383.367 15.195 cv
383.555 15.137 383.711 15.078 383.84 15.027 cv
383.961 14.98 384.063 14.957 384.145 14.953 cv
384.188 14.957 384.227 14.965 384.262 14.98 cv
384.289 15 384.316 15.035 384.34 15.078 cv
384.359 15.129 384.375 15.195 384.383 15.281 cv
384.391 15.371 384.395 15.48 384.395 15.605 cv
384.395 15.723 384.391 15.82 384.387 15.898 cv
384.379 15.984 384.371 16.051 384.363 16.105 cv
384.352 16.164 384.336 16.215 384.316 16.25 cv
384.293 16.293 384.266 16.328 384.234 16.363 cv
384.199 16.402 384.105 16.453 383.957 16.512 cv
383.801 16.578 383.609 16.641 383.379 16.695 cv
383.141 16.758 382.871 16.805 382.574 16.852 cv
382.27 16.891 381.945 16.914 381.602 16.918 cv
380.977 16.914 380.434 16.84 379.973 16.684 cv
379.504 16.531 379.113 16.293 378.801 15.973 cv
378.484 15.656 378.254 15.254 378.102 14.77 cv
377.945 14.285 377.867 13.719 377.871 13.062 cv
377.867 12.445 377.949 11.887 378.113 11.387 cv
378.273 10.891 378.508 10.465 378.816 10.117 cv
379.125 9.77301 379.5 9.51202 379.941 9.32397 cv
380.379 9.14502 380.875 9.05103 381.43 9.05103 cv
382.016 9.05103 382.516 9.13702 382.93 9.30902 cv
383.344 9.47998 383.684 9.71899 383.949 10.023 cv
384.215 10.328 384.41 10.691 384.535 11.105 cv
384.66 11.527 384.723 11.98 384.723 12.469 cv
cp
382.816 12.219 mo
382.828 11.668 382.719 11.23 382.484 10.914 cv
382.246 10.602 381.879 10.445 381.383 10.441 cv
381.133 10.445 380.914 10.492 380.73 10.582 cv
380.543 10.68 380.391 10.805 380.27 10.961 cv
380.145 11.121 380.051 11.309 379.988 11.523 cv
379.922 11.742 379.883 11.977 379.875 12.219 cv
cp
f
391.25 14.5 mo
391.246 14.898 391.172 15.25 391.027 15.551 cv
390.875 15.855 390.664 16.109 390.395 16.309 cv
390.121 16.516 389.801 16.664 389.434 16.766 cv
389.063 16.863 388.66 16.914 388.23 16.918 cv
387.965 16.914 387.719 16.895 387.484 16.859 cv
387.246 16.816 387.031 16.77 386.844 16.711 cv
386.652 16.652 386.496 16.59 386.375 16.527 cv
386.246 16.465 386.156 16.406 386.102 16.352 cv
386.043 16.297 385.996 16.211 385.969 16.094 cv
385.934 15.977 385.918 15.805 385.922 15.574 cv
385.918 15.426 385.926 15.305 385.938 15.211 cv
385.945 15.121 385.961 15.047 385.984 14.988 cv
386.004 14.937 386.027 14.902 386.063 14.879 cv
386.09 14.863 386.129 14.852 386.18 14.852 cv
386.234 14.852 386.32 14.887 386.434 14.949 cv
386.543 15.02 386.684 15.09 386.852 15.168 cv
387.02 15.246 387.215 15.32 387.438 15.387 cv
387.656 15.457 387.906 15.492 388.191 15.488 cv
388.367 15.492 388.523 15.473 388.664 15.434 cv
388.797 15.398 388.918 15.348 389.023 15.277 cv
389.121 15.215 389.199 15.129 389.254 15.02 cv
389.305 14.918 389.328 14.797 389.332 14.656 cv
389.328 14.504 389.281 14.367 389.188 14.254 cv
389.09 14.145 388.961 14.047 388.805 13.961 cv
388.641 13.879 388.461 13.801 388.266 13.727 cv
388.063 13.656 387.859 13.578 387.648 13.484 cv
387.438 13.398 387.23 13.297 387.027 13.18 cv
386.824 13.07 386.645 12.93 386.488 12.758 cv
386.328 12.594 386.199 12.391 386.105 12.156 cv
386.008 11.922 385.961 11.641 385.961 11.309 cv
385.961 10.977 386.023 10.672 386.156 10.391 cv
386.281 10.117 386.469 9.87903 386.719 9.67603 cv
386.961 9.47998 387.262 9.32397 387.617 9.21503 cv
387.965 9.10498 388.359 9.05103 388.801 9.05103 cv
389.016 9.05103 389.227 9.06598 389.438 9.09802 cv
389.641 9.12903 389.828 9.16803 389.996 9.21503 cv
390.164 9.26202 390.305 9.31201 390.422 9.367 cv
390.531 9.422 390.613 9.46899 390.668 9.508 cv
390.715 9.547 390.75 9.586 390.773 9.625 cv
390.789 9.664 390.805 9.711 390.82 9.76599 cv
390.828 9.82001 390.84 9.89099 390.848 9.96899 cv
390.855 10.055 390.859 10.152 390.859 10.27 cv
390.859 10.41 390.855 10.527 390.848 10.613 cv
390.84 10.707 390.824 10.777 390.809 10.824 cv
390.785 10.879 390.762 10.914 390.734 10.93 cv
390.699 10.953 390.664 10.961 390.625 10.957 cv
390.578 10.961 390.504 10.934 390.406 10.875 cv
390.305 10.824 390.18 10.766 390.031 10.699 cv
389.879 10.641 389.707 10.582 389.516 10.523 cv
389.316 10.473 389.094 10.445 388.848 10.441 cv
388.668 10.445 388.516 10.465 388.387 10.496 cv
388.254 10.535 388.145 10.586 388.066 10.652 cv
387.98 10.723 387.918 10.801 387.879 10.891 cv
387.832 10.984 387.813 11.082 387.816 11.184 cv
387.813 11.348 387.863 11.484 387.965 11.59 cv
388.063 11.703 388.191 11.801 388.355 11.879 cv
388.516 11.965 388.699 12.043 388.906 12.117 cv
389.109 12.191 389.316 12.27 389.531 12.355 cv
389.738 12.441 389.949 12.543 390.156 12.656 cv
390.363 12.773 390.547 12.914 390.711 13.078 cv
390.871 13.246 391 13.445 391.102 13.676 cv
391.195 13.91 391.246 14.184 391.25 14.5 cv
cp
f
399.77 12.805 mo
399.77 13.109 399.738 13.32 399.684 13.437 cv
399.621 13.562 399.531 13.621 399.41 13.617 cv
396.156 13.617 li
396.023 13.621 395.93 13.559 395.875 13.434 cv
395.813 13.312 395.785 13.105 395.789 12.805 cv
395.785 12.516 395.813 12.309 395.875 12.187 cv
395.93 12.066 396.023 12.004 396.156 12.004 cv
399.41 12.004 li
399.469 12.004 399.523 12.02 399.57 12.047 cv
399.613 12.074 399.648 12.117 399.684 12.18 cv
399.711 12.242 399.734 12.328 399.75 12.43 cv
399.762 12.539 399.77 12.664 399.77 12.805 cv
cp
f
412.465 16.473 mo
412.465 16.535 412.453 16.582 412.434 16.617 cv
412.41 16.66 412.359 16.691 412.285 16.715 cv
412.203 16.738 412.09 16.754 411.941 16.77 cv
411.789 16.777 411.582 16.785 411.32 16.785 cv
411.098 16.785 410.922 16.777 410.797 16.77 cv
410.664 16.754 410.563 16.738 410.488 16.711 cv
410.41 16.684 410.355 16.648 410.328 16.602 cv
410.293 16.562 410.27 16.508 410.25 16.441 cv
409.344 14.18 li
409.23 13.926 409.125 13.699 409.023 13.5 cv
408.918 13.305 408.801 13.141 408.672 13.004 cv
408.543 12.875 408.395 12.773 408.23 12.703 cv
408.059 12.637 407.867 12.602 407.652 12.602 cv
407.012 12.602 li
407.012 16.457 li
407.008 16.512 406.992 16.559 406.961 16.598 cv
406.926 16.641 406.871 16.676 406.793 16.699 cv
406.715 16.727 406.609 16.746 406.48 16.762 cv
406.348 16.777 406.18 16.785 405.98 16.785 cv
405.777 16.785 405.613 16.777 405.48 16.762 cv
405.348 16.746 405.242 16.727 405.164 16.699 cv
405.086 16.676 405.031 16.641 405 16.598 cv
404.969 16.559 404.953 16.512 404.953 16.457 cv
404.953 7.26599 li
404.953 7.039 405.012 6.875 405.129 6.77002 cv
405.246 6.672 405.391 6.62097 405.566 6.617 cv
408.184 6.617 li
408.449 6.62097 408.672 6.625 408.844 6.633 cv
409.016 6.64502 409.172 6.65601 409.313 6.672 cv
409.719 6.72998 410.082 6.83197 410.41 6.96899 cv
410.73 7.11298 411.008 7.297 411.238 7.52002 cv
411.461 7.75 411.633 8.01599 411.758 8.32397 cv
411.875 8.63702 411.938 8.99597 411.941 9.39502 cv
411.938 9.73798 411.895 10.047 411.813 10.32 cv
411.723 10.602 411.594 10.848 411.43 11.066 cv
411.258 11.285 411.055 11.477 410.813 11.637 cv
410.566 11.801 410.285 11.93 409.977 12.027 cv
410.125 12.105 410.27 12.195 410.402 12.297 cv
410.535 12.402 410.66 12.531 410.777 12.676 cv
410.895 12.828 411.004 12.996 411.109 13.184 cv
411.211 13.375 411.313 13.59 411.414 13.828 cv
412.27 15.824 li
412.344 16.023 412.395 16.168 412.426 16.258 cv
412.449 16.352 412.465 16.426 412.465 16.473 cv
cp
409.813 9.60498 mo
409.809 9.27698 409.734 8.99597 409.586 8.76202 cv
409.434 8.53497 409.188 8.37097 408.844 8.27301 cv
408.738 8.25 408.617 8.22998 408.484 8.211 cv
408.348 8.19897 408.164 8.19098 407.934 8.18701 cv
407.012 8.18701 li
407.012 11.059 li
408.059 11.059 li
408.348 11.062 408.602 11.027 408.824 10.953 cv
409.043 10.887 409.227 10.785 409.375 10.656 cv
409.52 10.531 409.629 10.379 409.703 10.199 cv
409.773 10.023 409.809 9.828 409.813 9.60498 cv
cp
f
420.043 12.781 mo
420.043 13.023 419.988 13.199 419.883 13.312 cv
419.773 13.43 419.625 13.488 419.441 13.484 cv
415.195 13.484 li
415.191 13.785 415.227 14.055 415.301 14.293 cv
415.367 14.539 415.48 14.742 415.637 14.91 cv
415.789 15.082 415.984 15.215 416.23 15.301 cv
416.469 15.395 416.762 15.437 417.102 15.434 cv
417.445 15.437 417.746 15.414 418.012 15.359 cv
418.27 15.312 418.496 15.258 418.688 15.195 cv
418.875 15.137 419.031 15.078 419.16 15.027 cv
419.281 14.98 419.383 14.957 419.465 14.953 cv
419.508 14.957 419.547 14.965 419.582 14.98 cv
419.609 15 419.637 15.035 419.66 15.078 cv
419.68 15.129 419.695 15.195 419.703 15.281 cv
419.711 15.371 419.715 15.48 419.715 15.605 cv
419.715 15.723 419.711 15.82 419.707 15.898 cv
419.699 15.984 419.691 16.051 419.684 16.105 cv
419.672 16.164 419.656 16.215 419.637 16.25 cv
419.613 16.293 419.586 16.328 419.555 16.363 cv
419.52 16.402 419.426 16.453 419.277 16.512 cv
419.121 16.578 418.93 16.641 418.699 16.695 cv
418.461 16.758 418.191 16.805 417.895 16.852 cv
417.59 16.891 417.266 16.914 416.922 16.918 cv
416.297 16.914 415.754 16.84 415.293 16.684 cv
414.824 16.531 414.434 16.293 414.121 15.973 cv
413.805 15.656 413.574 15.254 413.422 14.77 cv
413.266 14.285 413.188 13.719 413.191 13.062 cv
413.188 12.445 413.27 11.887 413.434 11.387 cv
413.594 10.891 413.828 10.465 414.137 10.117 cv
414.445 9.77301 414.82 9.51202 415.262 9.32397 cv
415.699 9.14502 416.195 9.05103 416.75 9.05103 cv
417.336 9.05103 417.836 9.13702 418.25 9.30902 cv
418.664 9.47998 419.004 9.71899 419.27 10.023 cv
419.535 10.328 419.73 10.691 419.855 11.105 cv
419.98 11.527 420.043 11.98 420.043 12.469 cv
cp
418.137 12.219 mo
418.148 11.668 418.039 11.23 417.805 10.914 cv
417.566 10.602 417.199 10.445 416.703 10.441 cv
416.453 10.445 416.234 10.492 416.051 10.582 cv
415.863 10.68 415.711 10.805 415.59 10.961 cv
415.465 11.121 415.371 11.309 415.309 11.523 cv
415.242 11.742 415.203 11.977 415.195 12.219 cv
cp
f
432.758 16.473 mo
432.754 16.527 432.738 16.57 432.711 16.609 cv
432.676 16.648 432.625 16.684 432.555 16.707 cv
432.48 16.734 432.379 16.75 432.258 16.766 cv
432.129 16.777 431.973 16.785 431.781 16.785 cv
431.578 16.785 431.414 16.777 431.293 16.766 cv
431.164 16.75 431.063 16.734 430.992 16.707 cv
430.914 16.684 430.863 16.648 430.836 16.609 cv
430.805 16.57 430.789 16.527 430.793 16.473 cv
430.793 12.336 li
430.789 12.102 430.77 11.887 430.727 11.691 cv
430.68 11.504 430.609 11.336 430.523 11.195 cv
430.43 11.059 430.316 10.953 430.18 10.875 cv
430.039 10.801 429.875 10.762 429.684 10.762 cv
429.449 10.762 429.211 10.855 428.973 11.035 cv
428.73 11.223 428.469 11.488 428.188 11.832 cv
428.188 16.473 li
428.184 16.527 428.168 16.57 428.141 16.609 cv
428.105 16.648 428.051 16.684 427.98 16.707 cv
427.902 16.734 427.805 16.75 427.68 16.766 cv
427.555 16.777 427.398 16.785 427.211 16.785 cv
427.016 16.785 426.855 16.777 426.734 16.766 cv
426.605 16.75 426.504 16.734 426.434 16.707 cv
426.355 16.684 426.305 16.648 426.273 16.609 cv
426.242 16.57 426.227 16.527 426.227 16.473 cv
426.227 12.336 li
426.227 12.102 426.203 11.887 426.16 11.691 cv
426.113 11.504 426.047 11.336 425.961 11.195 cv
425.871 11.059 425.758 10.953 425.617 10.875 cv
425.477 10.801 425.309 10.762 425.121 10.762 cv
424.879 10.762 424.641 10.855 424.402 11.035 cv
424.16 11.223 423.902 11.488 423.629 11.832 cv
423.629 16.473 li
423.625 16.527 423.609 16.57 423.582 16.609 cv
423.547 16.648 423.492 16.684 423.422 16.707 cv
423.344 16.734 423.246 16.75 423.121 16.766 cv
422.996 16.777 422.836 16.785 422.645 16.785 cv
422.449 16.785 422.289 16.777 422.164 16.766 cv
422.035 16.75 421.934 16.734 421.863 16.707 cv
421.785 16.684 421.734 16.648 421.703 16.609 cv
421.672 16.57 421.656 16.527 421.656 16.473 cv
421.656 9.49597 li
421.656 9.44501 421.668 9.40198 421.695 9.35901 cv
421.719 9.32397 421.766 9.289 421.836 9.26202 cv
421.902 9.23798 421.988 9.21899 422.098 9.203 cv
422.203 9.19098 422.34 9.18701 422.504 9.18402 cv
422.668 9.18701 422.805 9.19098 422.918 9.203 cv
423.023 9.21899 423.109 9.23798 423.172 9.26202 cv
423.23 9.289 423.273 9.32397 423.301 9.35901 cv
423.324 9.40198 423.336 9.44501 423.34 9.49597 cv
423.34 10.301 li
423.723 9.88702 424.109 9.57397 424.492 9.36298 cv
424.875 9.15601 425.273 9.05103 425.695 9.05103 cv
425.977 9.05103 426.234 9.08197 426.469 9.14099 cv
426.695 9.203 426.902 9.289 427.082 9.39801 cv
427.262 9.51202 427.414 9.64502 427.547 9.80103 cv
427.672 9.95697 427.781 10.133 427.875 10.324 cv
428.078 10.102 428.285 9.90997 428.488 9.74597 cv
428.691 9.59003 428.891 9.45697 429.086 9.35199 cv
429.281 9.25403 429.477 9.17999 429.672 9.125 cv
429.867 9.078 430.066 9.05103 430.27 9.05103 cv
430.73 9.05103 431.121 9.12903 431.441 9.28497 cv
431.762 9.44098 432.02 9.65601 432.215 9.922 cv
432.41 10.195 432.547 10.508 432.633 10.863 cv
432.711 11.227 432.754 11.605 432.758 12.004 cv
cp
f
441.738 12.914 mo
441.734 13.512 441.656 14.055 441.5 14.543 cv
441.344 15.035 441.105 15.457 440.789 15.809 cv
440.469 16.164 440.07 16.437 439.594 16.629 cv
439.113 16.82 438.551 16.914 437.91 16.918 cv
437.285 16.914 436.746 16.832 436.293 16.66 cv
435.832 16.492 435.453 16.242 435.148 15.91 cv
434.844 15.586 434.617 15.18 434.477 14.699 cv
434.328 14.219 434.258 13.672 434.258 13.055 cv
434.258 12.465 434.336 11.922 434.496 11.426 cv
434.652 10.934 434.891 10.512 435.211 10.156 cv
435.527 9.80902 435.926 9.53497 436.406 9.34003 cv
436.879 9.14801 437.438 9.05103 438.082 9.05103 cv
438.707 9.05103 439.25 9.13702 439.711 9.30499 cv
440.168 9.47699 440.547 9.72699 440.848 10.051 cv
441.145 10.383 441.367 10.785 441.516 11.262 cv
441.66 11.742 441.734 12.293 441.738 12.914 cv
cp
439.711 12.992 mo
439.707 12.652 439.68 12.336 439.629 12.043 cv
439.57 11.754 439.477 11.5 439.352 11.285 cv
439.219 11.074 439.047 10.906 438.832 10.785 cv
438.613 10.668 438.34 10.609 438.012 10.605 cv
437.719 10.609 437.465 10.664 437.246 10.766 cv
437.027 10.875 436.848 11.031 436.707 11.234 cv
436.566 11.445 436.461 11.691 436.391 11.98 cv
436.32 12.27 436.285 12.602 436.285 12.969 cv
436.285 13.316 436.313 13.633 436.371 13.918 cv
436.426 14.211 436.52 14.461 436.648 14.672 cv
436.773 14.887 436.945 15.055 437.168 15.172 cv
437.383 15.293 437.652 15.352 437.98 15.348 cv
438.277 15.352 438.539 15.297 438.758 15.187 cv
438.977 15.082 439.156 14.926 439.297 14.719 cv
439.438 14.52 439.539 14.273 439.609 13.98 cv
439.672 13.695 439.707 13.367 439.711 12.992 cv
cp
f
447.43 15.785 mo
447.426 16.016 447.414 16.191 447.387 16.312 cv
447.355 16.437 447.316 16.523 447.273 16.57 cv
447.223 16.621 447.152 16.664 447.063 16.703 cv
446.969 16.742 446.863 16.773 446.742 16.805 cv
446.617 16.828 446.484 16.852 446.344 16.871 cv
446.199 16.883 446.055 16.891 445.91 16.895 cv
445.52 16.891 445.18 16.84 444.895 16.746 cv
444.605 16.645 444.367 16.496 444.184 16.289 cv
443.992 16.086 443.855 15.828 443.766 15.512 cv
443.676 15.199 443.629 14.828 443.633 14.398 cv
443.633 10.824 li
442.797 10.824 li
442.695 10.828 442.621 10.766 442.57 10.641 cv
442.516 10.52 442.488 10.316 442.492 10.027 cv
442.488 9.87903 442.496 9.75 442.512 9.64502 cv
442.523 9.54303 442.543 9.461 442.57 9.39801 cv
442.594 9.34003 442.625 9.297 442.668 9.27002 cv
442.703 9.24597 442.75 9.23401 442.805 9.22998 cv
443.633 9.22998 li
443.633 7.672 li
443.629 7.625 443.645 7.578 443.676 7.53101 cv
443.703 7.492 443.754 7.45697 443.832 7.42603 cv
443.906 7.40198 444.012 7.37903 444.141 7.36298 cv
444.266 7.35199 444.422 7.34802 444.613 7.34399 cv
444.805 7.34802 444.965 7.35199 445.094 7.36298 cv
445.219 7.37903 445.32 7.40198 445.395 7.42603 cv
445.465 7.45697 445.516 7.492 445.551 7.53101 cv
445.578 7.578 445.594 7.625 445.598 7.672 cv
445.598 9.22998 li
447.117 9.22998 li
447.168 9.23401 447.211 9.24597 447.254 9.27002 cv
447.289 9.297 447.324 9.34003 447.352 9.39801 cv
447.375 9.461 447.395 9.54303 447.41 9.64502 cv
447.422 9.75 447.426 9.87903 447.43 10.027 cv
447.426 10.316 447.402 10.52 447.352 10.641 cv
447.297 10.766 447.219 10.828 447.125 10.824 cv
445.598 10.824 li
445.598 14.102 li
445.594 14.484 445.652 14.773 445.777 14.961 cv
445.895 15.156 446.109 15.25 446.418 15.246 cv
446.52 15.25 446.613 15.242 446.699 15.219 cv
446.781 15.203 446.855 15.18 446.922 15.156 cv
446.988 15.133 447.043 15.113 447.09 15.09 cv
447.129 15.074 447.172 15.062 447.211 15.062 cv
447.242 15.062 447.27 15.074 447.301 15.09 cv
447.324 15.113 447.348 15.148 447.367 15.203 cv
447.379 15.258 447.395 15.332 447.41 15.426 cv
447.422 15.52 447.426 15.641 447.43 15.785 cv
cp
f
455.141 12.781 mo
455.141 13.023 455.086 13.199 454.98 13.312 cv
454.871 13.43 454.723 13.488 454.539 13.484 cv
450.293 13.484 li
450.289 13.785 450.324 14.055 450.398 14.293 cv
450.465 14.539 450.578 14.742 450.734 14.91 cv
450.887 15.082 451.082 15.215 451.328 15.301 cv
451.566 15.395 451.859 15.437 452.199 15.434 cv
452.543 15.437 452.844 15.414 453.109 15.359 cv
453.367 15.312 453.594 15.258 453.785 15.195 cv
453.973 15.137 454.129 15.078 454.258 15.027 cv
454.379 14.98 454.48 14.957 454.563 14.953 cv
454.605 14.957 454.645 14.965 454.68 14.98 cv
454.707 15 454.734 15.035 454.758 15.078 cv
454.777 15.129 454.793 15.195 454.801 15.281 cv
454.809 15.371 454.813 15.48 454.813 15.605 cv
454.813 15.723 454.809 15.82 454.805 15.898 cv
454.797 15.984 454.789 16.051 454.781 16.105 cv
454.77 16.164 454.754 16.215 454.734 16.25 cv
454.711 16.293 454.684 16.328 454.652 16.363 cv
454.617 16.402 454.523 16.453 454.375 16.512 cv
454.219 16.578 454.027 16.641 453.797 16.695 cv
453.559 16.758 453.289 16.805 452.992 16.852 cv
452.688 16.891 452.363 16.914 452.02 16.918 cv
451.395 16.914 450.852 16.84 450.391 16.684 cv
449.922 16.531 449.531 16.293 449.219 15.973 cv
448.902 15.656 448.672 15.254 448.52 14.77 cv
448.363 14.285 448.285 13.719 448.289 13.062 cv
448.285 12.445 448.367 11.887 448.531 11.387 cv
448.691 10.891 448.926 10.465 449.234 10.117 cv
449.543 9.77301 449.918 9.51202 450.359 9.32397 cv
450.797 9.14502 451.293 9.05103 451.848 9.05103 cv
452.434 9.05103 452.934 9.13702 453.348 9.30902 cv
453.762 9.47998 454.102 9.71899 454.367 10.023 cv
454.633 10.328 454.828 10.691 454.953 11.105 cv
455.078 11.527 455.141 11.98 455.141 12.469 cv
cp
453.234 12.219 mo
453.246 11.668 453.137 11.23 452.902 10.914 cv
452.664 10.602 452.297 10.445 451.801 10.441 cv
451.551 10.445 451.332 10.492 451.148 10.582 cv
450.961 10.68 450.809 10.805 450.688 10.961 cv
450.563 11.121 450.469 11.309 450.406 11.523 cv
450.34 11.742 450.301 11.977 450.293 12.219 cv
cp
f
472.195 16.457 mo
472.191 16.512 472.18 16.559 472.152 16.598 cv
472.121 16.641 472.066 16.676 471.996 16.699 cv
471.918 16.727 471.82 16.746 471.695 16.762 cv
471.57 16.777 471.41 16.785 471.219 16.785 cv
471.027 16.785 470.871 16.777 470.75 16.762 cv
470.621 16.746 470.523 16.727 470.453 16.699 cv
470.379 16.676 470.324 16.641 470.297 16.598 cv
470.262 16.559 470.246 16.512 470.25 16.457 cv
470.25 8.21899 li
470.23 8.21899 li
467.301 16.449 li
467.277 16.52 467.242 16.574 467.199 16.617 cv
467.148 16.664 467.082 16.699 467.004 16.723 cv
466.918 16.75 466.816 16.766 466.695 16.773 cv
466.566 16.781 466.414 16.785 466.242 16.785 cv
466.063 16.785 465.914 16.777 465.789 16.766 cv
465.664 16.75 465.559 16.73 465.48 16.703 cv
465.395 16.676 465.332 16.641 465.289 16.598 cv
465.238 16.559 465.207 16.512 465.195 16.449 cv
462.363 8.21899 li
462.348 8.21899 li
462.348 16.457 li
462.344 16.512 462.328 16.559 462.305 16.598 cv
462.273 16.641 462.223 16.676 462.145 16.699 cv
462.066 16.727 461.965 16.746 461.844 16.762 cv
461.719 16.777 461.563 16.785 461.371 16.785 cv
461.184 16.785 461.023 16.777 460.898 16.762 cv
460.77 16.746 460.672 16.727 460.598 16.699 cv
460.52 16.676 460.465 16.641 460.441 16.598 cv
460.41 16.559 460.398 16.512 460.398 16.457 cv
460.398 7.43701 li
460.398 7.17603 460.469 6.97302 460.609 6.828 cv
460.75 6.69098 460.938 6.62097 461.176 6.617 cv
462.52 6.617 li
462.758 6.62097 462.961 6.64099 463.137 6.67603 cv
463.305 6.71899 463.453 6.78101 463.582 6.87097 cv
463.703 6.96503 463.809 7.086 463.895 7.22998 cv
463.977 7.383 464.051 7.56598 464.117 7.78101 cv
466.305 13.812 li
466.336 13.812 li
468.605 7.797 li
468.672 7.578 468.746 7.39502 468.828 7.242 cv
468.906 7.09399 469 6.97302 469.109 6.875 cv
469.215 6.78497 469.34 6.71899 469.488 6.67603 cv
469.629 6.64099 469.801 6.62097 469.996 6.617 cv
471.383 6.617 li
471.52 6.62097 471.641 6.63702 471.746 6.672 cv
471.844 6.711 471.926 6.76599 471.996 6.83197 cv
472.059 6.90601 472.109 6.992 472.145 7.09003 cv
472.176 7.19501 472.191 7.31201 472.195 7.43701 cv
cp
f
481.34 12.914 mo
481.336 13.512 481.258 14.055 481.102 14.543 cv
480.945 15.035 480.707 15.457 480.391 15.809 cv
480.07 16.164 479.672 16.437 479.195 16.629 cv
478.715 16.82 478.152 16.914 477.512 16.918 cv
476.887 16.914 476.348 16.832 475.895 16.66 cv
475.434 16.492 475.055 16.242 474.75 15.91 cv
474.445 15.586 474.219 15.18 474.078 14.699 cv
473.93 14.219 473.859 13.672 473.859 13.055 cv
473.859 12.465 473.938 11.922 474.098 11.426 cv
474.254 10.934 474.492 10.512 474.813 10.156 cv
475.129 9.80902 475.527 9.53497 476.008 9.34003 cv
476.48 9.14801 477.039 9.05103 477.684 9.05103 cv
478.309 9.05103 478.852 9.13702 479.313 9.30499 cv
479.77 9.47699 480.148 9.72699 480.449 10.051 cv
480.746 10.383 480.969 10.785 481.117 11.262 cv
481.262 11.742 481.336 12.293 481.34 12.914 cv
cp
479.313 12.992 mo
479.309 12.652 479.281 12.336 479.23 12.043 cv
479.172 11.754 479.078 11.5 478.953 11.285 cv
478.82 11.074 478.648 10.906 478.434 10.785 cv
478.215 10.668 477.941 10.609 477.613 10.605 cv
477.32 10.609 477.066 10.664 476.848 10.766 cv
476.629 10.875 476.449 11.031 476.309 11.234 cv
476.168 11.445 476.063 11.691 475.992 11.98 cv
475.922 12.27 475.887 12.602 475.887 12.969 cv
475.887 13.316 475.914 13.633 475.973 13.918 cv
476.027 14.211 476.121 14.461 476.25 14.672 cv
476.375 14.887 476.547 15.055 476.77 15.172 cv
476.984 15.293 477.254 15.352 477.582 15.348 cv
477.879 15.352 478.141 15.297 478.359 15.187 cv
478.578 15.082 478.758 14.926 478.898 14.719 cv
479.039 14.52 479.141 14.273 479.211 13.98 cv
479.273 13.695 479.309 13.367 479.313 12.992 cv
cp
f
489.516 16.473 mo
489.512 16.535 489.5 16.582 489.477 16.617 cv
489.449 16.66 489.406 16.691 489.344 16.715 cv
489.281 16.738 489.195 16.754 489.09 16.77 cv
488.98 16.777 488.848 16.785 488.695 16.785 cv
488.523 16.785 488.391 16.777 488.289 16.77 cv
488.184 16.754 488.098 16.738 488.035 16.715 cv
487.969 16.691 487.922 16.66 487.895 16.617 cv
487.863 16.582 487.848 16.535 487.852 16.473 cv
487.852 15.699 li
487.488 16.09 487.113 16.387 486.719 16.598 cv
486.324 16.809 485.887 16.914 485.41 16.918 cv
484.875 16.914 484.426 16.812 484.063 16.609 cv
483.691 16.406 483.391 16.129 483.16 15.777 cv
482.926 15.43 482.758 15.023 482.656 14.555 cv
482.551 14.09 482.5 13.598 482.5 13.078 cv
482.5 12.461 482.566 11.902 482.699 11.406 cv
482.832 10.91 483.023 10.488 483.281 10.137 cv
483.535 9.789 483.855 9.52002 484.238 9.33197 cv
484.617 9.14502 485.055 9.05103 485.551 9.05103 cv
485.938 9.05103 486.293 9.133 486.613 9.289 cv
486.934 9.453 487.25 9.68402 487.563 9.98798 cv
487.563 6.211 li
487.563 6.15997 487.574 6.11298 487.605 6.07001 cv
487.629 6.03101 487.684 5.99597 487.762 5.96503 cv
487.836 5.93701 487.934 5.914 488.063 5.89801 cv
488.184 5.883 488.344 5.875 488.539 5.875 cv
488.73 5.875 488.891 5.883 489.016 5.89801 cv
489.141 5.914 489.238 5.93701 489.313 5.96503 cv
489.383 5.99597 489.434 6.03101 489.469 6.07001 cv
489.496 6.11298 489.512 6.15997 489.516 6.211 cv
cp
487.563 11.809 mo
487.281 11.457 487.008 11.184 486.75 10.996 cv
486.488 10.809 486.219 10.715 485.941 10.715 cv
485.684 10.715 485.465 10.781 485.281 10.906 cv
485.094 11.039 484.945 11.207 484.836 11.418 cv
484.723 11.633 484.641 11.875 484.586 12.137 cv
484.531 12.402 484.504 12.672 484.504 12.945 cv
484.504 13.242 484.527 13.523 484.574 13.797 cv
484.621 14.074 484.695 14.32 484.805 14.535 cv
484.906 14.754 485.051 14.93 485.23 15.059 cv
485.406 15.191 485.629 15.258 485.902 15.254 cv
486.035 15.258 486.168 15.238 486.297 15.195 cv
486.422 15.156 486.551 15.09 486.688 15 cv
486.82 14.914 486.957 14.797 487.102 14.652 cv
487.238 14.512 487.395 14.336 487.563 14.125 cv
cp
f
497.949 12.781 mo
497.949 13.023 497.895 13.199 497.789 13.312 cv
497.68 13.43 497.531 13.488 497.348 13.484 cv
493.102 13.484 li
493.098 13.785 493.133 14.055 493.207 14.293 cv
493.273 14.539 493.387 14.742 493.543 14.91 cv
493.695 15.082 493.891 15.215 494.137 15.301 cv
494.375 15.395 494.668 15.437 495.008 15.434 cv
495.352 15.437 495.652 15.414 495.918 15.359 cv
496.176 15.312 496.402 15.258 496.594 15.195 cv
496.781 15.137 496.938 15.078 497.066 15.027 cv
497.188 14.98 497.289 14.957 497.371 14.953 cv
497.414 14.957 497.453 14.965 497.488 14.98 cv
497.516 15 497.543 15.035 497.566 15.078 cv
497.586 15.129 497.602 15.195 497.609 15.281 cv
497.617 15.371 497.621 15.48 497.621 15.605 cv
497.621 15.723 497.617 15.82 497.613 15.898 cv
497.605 15.984 497.598 16.051 497.59 16.105 cv
497.578 16.164 497.563 16.215 497.543 16.25 cv
497.52 16.293 497.492 16.328 497.461 16.363 cv
497.426 16.402 497.332 16.453 497.184 16.512 cv
497.027 16.578 496.836 16.641 496.605 16.695 cv
496.367 16.758 496.098 16.805 495.801 16.852 cv
495.496 16.891 495.172 16.914 494.828 16.918 cv
494.203 16.914 493.66 16.84 493.199 16.684 cv
492.73 16.531 492.34 16.293 492.027 15.973 cv
491.711 15.656 491.48 15.254 491.328 14.77 cv
491.172 14.285 491.094 13.719 491.098 13.062 cv
491.094 12.445 491.176 11.887 491.34 11.387 cv
491.5 10.891 491.734 10.465 492.043 10.117 cv
492.352 9.77301 492.727 9.51202 493.168 9.32397 cv
493.605 9.14502 494.102 9.05103 494.656 9.05103 cv
495.242 9.05103 495.742 9.13702 496.156 9.30902 cv
496.57 9.47998 496.91 9.71899 497.176 10.023 cv
497.441 10.328 497.637 10.691 497.762 11.105 cv
497.887 11.527 497.949 11.98 497.949 12.469 cv
cp
496.043 12.219 mo
496.055 11.668 495.945 11.23 495.711 10.914 cv
495.473 10.602 495.105 10.445 494.609 10.441 cv
494.359 10.445 494.141 10.492 493.957 10.582 cv
493.77 10.68 493.617 10.805 493.496 10.961 cv
493.371 11.121 493.277 11.309 493.215 11.523 cv
493.148 11.742 493.109 11.977 493.102 12.219 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
