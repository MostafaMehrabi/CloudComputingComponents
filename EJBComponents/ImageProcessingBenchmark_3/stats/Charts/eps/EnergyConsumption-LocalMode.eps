%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-LocalMode.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 13/12/2018, 12:20:02 p.m.
%%BoundingBox: 0 0 675 548
%%HiResBoundingBox: 0 0 674.0400 547.4401
%%CropBox: 0 0 674.0400 547.4401
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -547.44 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 547.44 li
674.04 547.44 li
674.04 0 li
cp
clp
gsave
0 547.44 mo
675 547.44 li
675 -.559998 li
0 -.559998 li
cp
clp
0 0 mo
674.039 0 li
674.039 547.441 li
0 547.441 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.48 477.961 mo
657.602 477.961 li
72.48 438.961 mo
657.602 438.961 li
72.48 399.84 mo
657.602 399.84 li
72.48 360.84 mo
657.602 360.84 li
72.48 321.719 mo
657.602 321.719 li
72.48 282.719 mo
657.602 282.719 li
72.48 243.719 mo
657.602 243.719 li
72.48 204.602 mo
657.602 204.602 li
72.48 165.602 mo
657.602 165.602 li
72.48 126.48 mo
657.602 126.48 li
72.48 87.48 mo
657.602 87.48 li
72.48 48.359 mo
657.602 48.359 li
.140414 .108034 .108034 0 cmyk
@
72.48 458.398 mo
657.602 458.398 li
72.48 419.398 mo
657.602 419.398 li
72.48 380.398 mo
657.602 380.398 li
72.48 341.281 mo
657.602 341.281 li
72.48 302.281 mo
657.602 302.281 li
72.48 263.16 mo
657.602 263.16 li
72.48 224.16 mo
657.602 224.16 li
72.48 185.039 mo
657.602 185.039 li
72.48 146.039 mo
657.602 146.039 li
72.48 106.922 mo
657.602 106.922 li
72.48 67.922 mo
657.602 67.922 li
72.48 28.922 mo
657.602 28.922 li
.328344 .284215 .278569 .000915541 cmyk
@
109.078 28.922 mo
109.078 497.52 li
182.281 28.922 mo
182.281 497.52 li
255.359 28.922 mo
255.359 497.52 li
328.441 28.922 mo
328.441 497.52 li
401.641 28.922 mo
401.641 497.52 li
474.719 28.922 mo
474.719 497.52 li
547.922 28.922 mo
547.922 497.52 li
621 28.922 mo
621 497.52 li
.178592 .148898 .143923 0 cmyk
@
72.48 28.922 mo
72.48 497.52 li
145.68 28.922 mo
145.68 497.52 li
218.762 28.922 mo
218.762 497.52 li
291.961 28.922 mo
291.961 497.52 li
365.039 28.922 mo
365.039 497.52 li
438.121 28.922 mo
438.121 497.52 li
511.32 28.922 mo
511.32 497.52 li
584.398 28.922 mo
584.398 497.52 li
657.602 28.922 mo
657.602 497.52 li
.328344 .284215 .278569 .000915541 cmyk
@
34.68 488.16 mo
59.52 488.16 li
59.52 505.32 li
34.68 505.32 li
cp
0 0 0 0 cmyk
ef
34.68 449.16 mo
59.52 449.16 li
59.52 466.199 li
34.68 466.199 li
cp
ef
34.68 410.039 mo
59.52 410.039 li
59.52 427.199 li
34.68 427.199 li
cp
ef
34.68 371.039 mo
59.52 371.039 li
59.52 388.078 li
34.68 388.078 li
cp
ef
34.68 331.922 mo
59.52 331.922 li
59.52 349.078 li
34.68 349.078 li
cp
ef
34.68 292.922 mo
59.52 292.922 li
59.52 309.961 li
34.68 309.961 li
cp
ef
34.68 253.922 mo
59.52 253.922 li
59.52 270.961 li
34.68 270.961 li
cp
ef
34.68 214.801 mo
59.52 214.801 li
59.52 231.961 li
34.68 231.961 li
cp
ef
27.602 175.801 mo
59.52 175.801 li
59.52 192.84 li
27.602 192.84 li
cp
ef
27.602 136.68 mo
59.52 136.68 li
59.52 153.84 li
27.602 153.84 li
cp
ef
27.602 97.68 mo
59.52 97.68 li
59.52 114.719 li
27.602 114.719 li
cp
ef
27.602 58.559 mo
59.52 58.559 li
59.52 75.719 li
27.602 75.719 li
cp
ef
27.602 19.559 mo
59.52 19.559 li
59.52 36.602 li
27.602 36.602 li
cp
ef
.96 lw
72.48 497.52 mo
657.602 497.52 li
.367803 .29575 .300999 .00198367 cmyk
@
72.48 497.52 mo
72.48 501.961 li
145.68 497.52 mo
145.68 501.961 li
218.762 497.52 mo
218.762 501.961 li
291.961 497.52 mo
291.961 501.961 li
365.039 497.52 mo
365.039 501.961 li
438.121 497.52 mo
438.121 501.961 li
511.32 497.52 mo
511.32 501.961 li
584.398 497.52 mo
584.398 501.961 li
657.602 497.52 mo
657.602 501.961 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
1 lc
72.48 70.559 mo
145.68 155.641 li
218.762 131.398 li
291.961 146.281 li
365.039 122.641 li
438.121 122.641 li
511.32 121.559 li
584.398 122.281 li
657.602 120.84 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
77.48 75.512 mo
67.398 65.43 li
67.398 75.512 mo
77.48 65.43 li
.62768 .285466 0 0 cmyk
@
150.559 160.59 mo
140.48 150.512 li
140.48 160.59 mo
150.559 150.512 li
@
223.762 136.352 mo
213.68 126.27 li
213.68 136.352 mo
223.762 126.27 li
@
296.84 151.352 mo
286.762 141.27 li
286.762 151.352 mo
296.84 141.27 li
@
370.039 127.59 mo
359.961 117.512 li
359.961 127.59 mo
370.039 117.512 li
@
443.121 127.59 mo
433.039 117.512 li
433.039 127.59 mo
443.121 117.512 li
@
516.199 126.629 mo
506.121 116.551 li
506.121 126.629 mo
516.199 116.551 li
@
589.398 127.23 mo
579.32 117.148 li
579.32 127.23 mo
589.398 117.148 li
@
662.48 125.789 mo
652.398 115.711 li
652.398 125.789 mo
662.48 115.711 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
.96 lw
1 lc
72.48 207.961 mo
145.68 306.602 li
218.762 267.121 li
291.961 254.641 li
365.039 254.039 li
438.121 253.801 li
511.32 254.039 li
584.398 254.039 li
657.602 253.32 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
77.48 212.91 mo
67.398 202.828 li
67.398 212.91 mo
77.48 202.828 li
.0319219 .621851 .911223 .000427253 cmyk
@
150.559 311.672 mo
140.48 301.59 li
140.48 311.672 mo
150.559 301.59 li
@
223.762 272.07 mo
213.68 261.988 li
213.68 272.07 mo
223.762 261.988 li
@
296.84 259.59 mo
286.762 249.512 li
286.762 259.59 mo
296.84 249.512 li
@
370.039 259.109 mo
359.961 249.031 li
359.961 259.109 mo
370.039 249.031 li
@
443.121 258.871 mo
433.039 248.789 li
433.039 258.871 mo
443.121 248.789 li
@
516.199 259.109 mo
506.121 249.031 li
506.121 259.109 mo
516.199 249.031 li
@
589.398 259.109 mo
579.32 249.031 li
579.32 259.109 mo
589.398 249.031 li
@
662.48 258.27 mo
652.398 248.191 li
652.398 258.27 mo
662.48 248.191 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
.96 lw
1 lc
72.48 248.16 mo
145.68 301.801 li
218.762 276 li
291.961 276.359 li
365.039 263.762 li
438.121 263.16 li
511.32 264.48 li
584.398 263.16 li
657.602 263.16 li
.619135 .109529 .981689 .00570687 cmyk
@
grestore
77.48 253.23 mo
67.398 243.148 li
67.398 253.23 mo
77.48 243.148 li
.619135 .109529 .981689 .00570687 cmyk
@
150.559 306.871 mo
140.48 296.789 li
140.48 306.871 mo
150.559 296.789 li
@
223.762 281.07 mo
213.68 270.988 li
213.68 281.07 mo
223.762 270.988 li
@
296.84 281.309 mo
286.762 271.23 li
286.762 281.309 mo
296.84 271.23 li
@
370.039 268.828 mo
359.961 258.75 li
359.961 268.828 mo
370.039 258.75 li
@
443.121 268.23 mo
433.039 258.148 li
433.039 268.23 mo
443.121 258.148 li
@
516.199 269.43 mo
506.121 259.352 li
506.121 269.43 mo
516.199 259.352 li
@
589.398 268.23 mo
579.32 258.148 li
579.32 268.23 mo
589.398 258.148 li
@
662.48 268.23 mo
652.398 258.148 li
652.398 268.23 mo
662.48 258.148 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
.96 lw
1 lc
72.48 271.922 mo
145.68 304.32 li
218.762 324.48 li
291.961 286.801 li
365.039 290.16 li
438.121 283.801 li
511.32 282.719 li
584.398 280.441 li
657.602 276.602 li
0 .990631 1 .000396735 cmyk
@
grestore
77.48 276.871 mo
67.398 266.789 li
67.398 276.871 mo
77.48 266.789 li
0 .990631 1 .000396735 cmyk
@
150.559 309.391 mo
140.48 299.309 li
140.48 309.391 mo
150.559 299.309 li
@
223.762 329.551 mo
213.68 319.469 li
213.68 329.551 mo
223.762 319.469 li
@
296.84 291.75 mo
286.762 281.672 li
286.762 291.75 mo
296.84 281.672 li
@
370.039 295.109 mo
359.961 285.031 li
359.961 295.109 mo
370.039 285.031 li
@
443.121 288.871 mo
433.039 278.789 li
433.039 288.871 mo
443.121 278.789 li
@
516.199 287.672 mo
506.121 277.59 li
506.121 287.672 mo
516.199 277.59 li
@
589.398 285.512 mo
579.32 275.43 li
579.32 285.512 mo
589.398 275.43 li
@
662.48 281.672 mo
652.398 271.59 li
652.398 281.672 mo
662.48 271.59 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
72.48 283.441 mo
145.68 305.762 li
218.762 296.762 li
291.961 284.52 li
365.039 283.801 li
438.121 280.078 li
511.32 283.441 li
584.398 282.719 li
657.602 281.52 li
.62768 .285466 0 0 cmyk
@
grestore
77 287.91 mo
67.879 278.789 li
67.879 287.91 mo
77 278.789 li
.62768 .285466 0 0 cmyk
@
150.078 310.352 mo
140.961 301.23 li
140.961 310.352 mo
150.078 301.23 li
@
223.281 301.23 mo
214.16 292.109 li
214.16 301.23 mo
223.281 292.109 li
@
296.359 289.109 mo
287.238 279.988 li
287.238 289.109 mo
296.359 279.988 li
@
369.559 288.391 mo
360.441 279.27 li
360.441 288.391 mo
369.559 279.27 li
@
442.641 284.551 mo
433.52 275.43 li
433.52 284.551 mo
442.641 275.43 li
@
515.719 287.91 mo
506.602 278.789 li
506.602 287.91 mo
515.719 278.789 li
@
588.922 287.191 mo
579.801 278.07 li
579.801 287.191 mo
588.922 278.07 li
@
662 286.109 mo
652.879 276.988 li
652.879 286.109 mo
662 276.988 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
72.48 277.68 mo
145.68 302.281 li
218.762 323.16 li
291.961 290.16 li
365.039 283.801 li
438.121 283.801 li
511.32 280.078 li
584.398 281.879 li
657.602 280.441 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
77.48 282.75 mo
67.398 272.672 li
67.398 282.75 mo
77.48 272.672 li
.0319219 .621851 .911223 .000427253 cmyk
@
150.559 307.352 mo
140.48 297.27 li
140.48 307.352 mo
150.559 297.27 li
@
223.762 328.23 mo
213.68 318.148 li
213.68 328.23 mo
223.762 318.148 li
@
296.84 295.23 mo
286.762 285.148 li
286.762 295.23 mo
296.84 285.148 li
@
370.039 288.871 mo
359.961 278.789 li
359.961 288.871 mo
370.039 278.789 li
@
443.121 288.871 mo
433.039 278.789 li
433.039 288.871 mo
443.121 278.789 li
@
516.199 285.031 mo
506.121 274.949 li
506.121 285.031 mo
516.199 274.949 li
@
589.398 286.949 mo
579.32 276.871 li
579.32 286.949 mo
589.398 276.871 li
@
662.48 285.512 mo
652.398 275.43 li
652.398 285.512 mo
662.48 275.43 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
72.48 277.68 mo
145.68 325.801 li
218.762 322.078 li
291.961 283.801 li
365.039 283.441 li
438.121 281.641 li
511.32 282.719 li
584.398 286.801 li
657.602 284.879 li
.619135 .109529 .981689 .00570687 cmyk
@
grestore
77.48 282.75 mo
67.398 272.672 li
67.398 282.75 mo
77.48 272.672 li
.619135 .109529 .981689 .00570687 cmyk
@
150.559 330.871 mo
140.48 320.789 li
140.48 330.871 mo
150.559 320.789 li
@
223.762 327.031 mo
213.68 316.949 li
213.68 327.031 mo
223.762 316.949 li
@
296.84 288.871 mo
286.762 278.789 li
286.762 288.871 mo
296.84 278.789 li
@
370.039 288.391 mo
359.961 278.309 li
359.961 288.391 mo
370.039 278.309 li
@
443.121 286.59 mo
433.039 276.512 li
433.039 286.59 mo
443.121 276.512 li
@
516.199 287.672 mo
506.121 277.59 li
506.121 287.672 mo
516.199 277.59 li
@
589.398 291.871 mo
579.32 281.789 li
579.32 291.871 mo
589.398 281.789 li
@
662.48 289.949 mo
652.398 279.871 li
652.398 289.949 mo
662.48 279.871 li
@
gsave
72.48 28.801 mo
658.199 28.801 li
658.199 498.239 li
72.48 498.239 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
72.48 279.719 mo
145.68 298.801 li
218.762 323.879 li
291.961 318.359 li
365.039 291.961 li
438.121 281.879 li
511.32 310.801 li
584.398 282.719 li
657.602 280.801 li
0 .990631 1 .000396735 cmyk
@
grestore
77.48 284.789 mo
67.398 274.711 li
67.398 284.789 mo
77.48 274.711 li
0 .990631 1 .000396735 cmyk
@
150.559 303.871 mo
140.48 293.789 li
140.48 303.871 mo
150.559 293.789 li
@
223.762 328.949 mo
213.68 318.871 li
213.68 328.949 mo
223.762 318.871 li
@
296.84 323.309 mo
286.762 313.23 li
286.762 323.309 mo
296.84 313.23 li
@
370.039 296.91 mo
359.961 286.828 li
359.961 296.91 mo
370.039 286.828 li
@
443.121 286.949 mo
433.039 276.871 li
433.039 286.949 mo
443.121 276.871 li
@
516.199 315.871 mo
506.121 305.789 li
506.121 315.871 mo
516.199 305.789 li
@
589.398 287.672 mo
579.32 277.59 li
579.32 287.672 mo
589.398 277.59 li
@
662.48 285.871 mo
652.398 275.789 li
652.398 285.871 mo
662.48 275.789 li
@
34.68 488.223 mo
59.5 488.223 li
59.5 505.313 li
34.68 505.313 li
cp
0 0 0 0 cmyk
ef
41.34 497.184 mo
41.336 497.867 41.281 498.492 41.176 499.055 cv
41.066 499.621 40.891 500.105 40.641 500.508 cv
40.391 500.914 40.063 501.227 39.664 501.445 cv
39.258 501.668 38.762 501.777 38.176 501.777 cv
37.613 501.777 37.145 501.68 36.762 501.48 cv
36.379 501.281 36.07 500.988 35.836 500.602 cv
35.602 500.215 35.434 499.738 35.34 499.172 cv
35.238 498.609 35.191 497.961 35.195 497.227 cv
35.191 496.551 35.246 495.93 35.359 495.363 cv
35.465 494.797 35.645 494.312 35.895 493.906 cv
36.141 493.504 36.465 493.187 36.867 492.965 cv
37.27 492.746 37.762 492.637 38.352 492.633 cv
38.91 492.637 39.383 492.738 39.77 492.934 cv
40.148 493.137 40.457 493.43 40.691 493.812 cv
40.922 494.203 41.09 494.676 41.191 495.238 cv
41.289 495.805 41.336 496.453 41.34 497.184 cv
cp
40.133 497.266 mo
40.129 496.824 40.113 496.43 40.082 496.074 cv
40.047 495.723 40 495.41 39.941 495.141 cv
39.875 494.871 39.793 494.637 39.699 494.441 cv
39.598 494.246 39.48 494.086 39.348 493.961 cv
39.207 493.836 39.051 493.746 38.875 493.687 cv
38.699 493.633 38.504 493.605 38.285 493.602 cv
37.895 493.605 37.578 493.695 37.336 493.875 cv
37.094 494.059 36.902 494.309 36.762 494.629 cv
36.621 494.949 36.523 495.328 36.477 495.758 cv
36.422 496.191 36.398 496.652 36.402 497.145 cv
36.398 497.812 36.434 498.379 36.504 498.84 cv
36.574 499.309 36.684 499.687 36.832 499.977 cv
36.98 500.273 37.168 500.484 37.402 500.613 cv
37.629 500.75 37.91 500.816 38.242 500.812 cv
38.496 500.816 38.723 500.773 38.918 500.687 cv
39.113 500.605 39.277 500.488 39.418 500.332 cv
39.555 500.18 39.672 499.996 39.766 499.781 cv
39.855 499.566 39.93 499.328 39.988 499.066 cv
40.039 498.809 40.078 498.527 40.102 498.219 cv
40.121 497.918 40.129 497.598 40.133 497.266 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.285 500.898 mo
44.281 501.227 44.227 501.445 44.125 501.551 cv
44.016 501.656 43.82 501.707 43.539 501.711 cv
43.258 501.707 43.066 501.656 42.965 501.555 cv
42.855 501.449 42.805 501.238 42.809 500.922 cv
42.805 500.598 42.859 500.383 42.969 500.273 cv
43.078 500.168 43.273 500.113 43.559 500.109 cv
43.832 500.113 44.023 500.168 44.129 500.27 cv
44.23 500.379 44.281 500.586 44.285 500.898 cv
cp
f
52 497.184 mo
51.996 497.867 51.941 498.492 51.836 499.055 cv
51.727 499.621 51.551 500.105 51.301 500.508 cv
51.051 500.914 50.723 501.227 50.324 501.445 cv
49.918 501.668 49.422 501.777 48.836 501.777 cv
48.273 501.777 47.805 501.68 47.422 501.48 cv
47.039 501.281 46.73 500.988 46.496 500.602 cv
46.262 500.215 46.094 499.738 46 499.172 cv
45.898 498.609 45.852 497.961 45.855 497.227 cv
45.852 496.551 45.906 495.93 46.02 495.363 cv
46.125 494.797 46.305 494.312 46.555 493.906 cv
46.801 493.504 47.125 493.187 47.527 492.965 cv
47.93 492.746 48.422 492.637 49.012 492.633 cv
49.57 492.637 50.043 492.738 50.43 492.934 cv
50.809 493.137 51.117 493.43 51.352 493.812 cv
51.582 494.203 51.75 494.676 51.852 495.238 cv
51.949 495.805 51.996 496.453 52 497.184 cv
cp
50.793 497.266 mo
50.789 496.824 50.773 496.43 50.742 496.074 cv
50.707 495.723 50.66 495.41 50.602 495.141 cv
50.535 494.871 50.453 494.637 50.359 494.441 cv
50.258 494.246 50.141 494.086 50.008 493.961 cv
49.867 493.836 49.711 493.746 49.535 493.687 cv
49.359 493.633 49.164 493.605 48.945 493.602 cv
48.555 493.605 48.238 493.695 47.996 493.875 cv
47.754 494.059 47.563 494.309 47.422 494.629 cv
47.281 494.949 47.184 495.328 47.137 495.758 cv
47.082 496.191 47.059 496.652 47.063 497.145 cv
47.059 497.812 47.094 498.379 47.164 498.84 cv
47.234 499.309 47.344 499.687 47.492 499.977 cv
47.641 500.273 47.828 500.484 48.063 500.613 cv
48.289 500.75 48.57 500.816 48.902 500.812 cv
49.156 500.816 49.383 500.773 49.578 500.687 cv
49.773 500.605 49.938 500.488 50.078 500.332 cv
50.215 500.18 50.332 499.996 50.426 499.781 cv
50.516 499.566 50.59 499.328 50.648 499.066 cv
50.699 498.809 50.738 498.527 50.762 498.219 cv
50.781 497.918 50.789 497.598 50.793 497.266 cv
cp
f
59.074 497.184 mo
59.07 497.867 59.016 498.492 58.91 499.055 cv
58.801 499.621 58.625 500.105 58.375 500.508 cv
58.125 500.914 57.797 501.227 57.398 501.445 cv
56.992 501.668 56.496 501.777 55.91 501.777 cv
55.348 501.777 54.879 501.68 54.496 501.48 cv
54.113 501.281 53.805 500.988 53.57 500.602 cv
53.336 500.215 53.168 499.738 53.074 499.172 cv
52.973 498.609 52.926 497.961 52.93 497.227 cv
52.926 496.551 52.98 495.93 53.094 495.363 cv
53.199 494.797 53.379 494.312 53.629 493.906 cv
53.875 493.504 54.199 493.187 54.602 492.965 cv
55.004 492.746 55.496 492.637 56.086 492.633 cv
56.645 492.637 57.117 492.738 57.504 492.934 cv
57.883 493.137 58.191 493.43 58.426 493.812 cv
58.656 494.203 58.824 494.676 58.926 495.238 cv
59.023 495.805 59.07 496.453 59.074 497.184 cv
cp
57.867 497.266 mo
57.863 496.824 57.848 496.43 57.816 496.074 cv
57.781 495.723 57.734 495.41 57.676 495.141 cv
57.609 494.871 57.527 494.637 57.434 494.441 cv
57.332 494.246 57.215 494.086 57.082 493.961 cv
56.941 493.836 56.785 493.746 56.609 493.687 cv
56.434 493.633 56.238 493.605 56.02 493.602 cv
55.629 493.605 55.313 493.695 55.07 493.875 cv
54.828 494.059 54.637 494.309 54.496 494.629 cv
54.355 494.949 54.258 495.328 54.211 495.758 cv
54.156 496.191 54.133 496.652 54.137 497.145 cv
54.133 497.812 54.168 498.379 54.238 498.84 cv
54.309 499.309 54.418 499.687 54.566 499.977 cv
54.715 500.273 54.902 500.484 55.137 500.613 cv
55.363 500.75 55.645 500.816 55.977 500.812 cv
56.23 500.816 56.457 500.773 56.652 500.687 cv
56.848 500.605 57.012 500.488 57.152 500.332 cv
57.289 500.18 57.406 499.996 57.5 499.781 cv
57.59 499.566 57.664 499.328 57.723 499.066 cv
57.773 498.809 57.813 498.527 57.836 498.219 cv
57.855 497.918 57.863 497.598 57.867 497.266 cv
cp
f
34.68 449.172 mo
59.5 449.172 li
59.5 466.262 li
34.68 466.262 li
cp
0 0 0 0 cmyk
ef
41.055 462.113 mo
41.051 462.203 41.043 462.273 41.031 462.332 cv
41.016 462.395 40.996 462.445 40.977 462.477 cv
40.953 462.516 40.93 462.539 40.898 462.555 cv
40.867 462.57 40.836 462.578 40.809 462.578 cv
36.172 462.578 li
36.137 462.578 36.109 462.57 36.082 462.555 cv
36.055 462.539 36.027 462.516 36.004 462.477 cv
35.977 462.445 35.957 462.395 35.945 462.332 cv
35.93 462.273 35.922 462.203 35.926 462.113 cv
35.922 462.035 35.93 461.961 35.945 461.898 cv
35.957 461.84 35.973 461.793 35.996 461.754 cv
36.012 461.719 36.039 461.687 36.07 461.664 cv
36.102 461.645 36.133 461.637 36.172 461.633 cv
38.023 461.633 li
38.023 454.887 li
36.309 455.906 li
36.219 455.957 36.148 455.984 36.102 455.992 cv
36.047 456 36.004 455.992 35.973 455.961 cv
35.938 455.934 35.918 455.883 35.906 455.812 cv
35.895 455.746 35.887 455.66 35.891 455.551 cv
35.887 455.477 35.891 455.41 35.902 455.352 cv
35.906 455.301 35.918 455.254 35.934 455.215 cv
35.945 455.18 35.965 455.148 35.988 455.121 cv
36.012 455.094 36.043 455.066 36.09 455.039 cv
38.133 453.727 li
38.148 453.715 38.168 453.703 38.199 453.695 cv
38.223 453.687 38.258 453.68 38.305 453.668 cv
38.344 453.66 38.395 453.652 38.449 453.648 cv
38.504 453.648 38.57 453.648 38.656 453.645 cv
38.762 453.648 38.855 453.652 38.93 453.66 cv
39 453.668 39.055 453.684 39.102 453.699 cv
39.141 453.719 39.168 453.738 39.184 453.762 cv
39.191 453.789 39.199 453.812 39.203 453.836 cv
39.203 461.633 li
40.809 461.633 li
40.844 461.637 40.879 461.645 40.91 461.664 cv
40.941 461.687 40.965 461.719 40.988 461.754 cv
41.004 461.793 41.02 461.84 41.035 461.898 cv
41.043 461.961 41.051 462.035 41.055 462.113 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.324 461.832 mo
44.324 462.16 44.27 462.375 44.164 462.48 cv
44.055 462.586 43.859 462.637 43.578 462.641 cv
43.301 462.637 43.109 462.586 43.008 462.484 cv
42.898 462.379 42.848 462.168 42.852 461.852 cv
42.848 461.527 42.902 461.312 43.012 461.203 cv
43.117 461.098 43.313 461.043 43.598 461.043 cv
43.871 461.043 44.059 461.098 44.168 461.203 cv
44.27 461.309 44.324 461.52 44.324 461.832 cv
cp
f
51.691 462.07 mo
51.688 462.156 51.684 462.23 51.672 462.293 cv
51.66 462.359 51.645 462.414 51.625 462.453 cv
51.602 462.5 51.574 462.531 51.543 462.547 cv
51.508 462.57 51.469 462.578 51.43 462.578 cv
46.527 462.578 li
46.465 462.578 46.406 462.57 46.359 462.555 cv
46.309 462.539 46.27 462.516 46.234 462.477 cv
46.199 462.445 46.172 462.391 46.16 462.32 cv
46.141 462.25 46.133 462.164 46.137 462.062 cv
46.133 461.973 46.137 461.895 46.145 461.824 cv
46.148 461.758 46.164 461.699 46.191 461.645 cv
46.215 461.594 46.246 461.539 46.281 461.484 cv
46.316 461.434 46.359 461.379 46.418 461.316 cv
48.191 459.492 li
48.602 459.074 48.93 458.699 49.18 458.363 cv
49.426 458.035 49.617 457.73 49.75 457.453 cv
49.883 457.18 49.969 456.93 50.016 456.703 cv
50.055 456.48 50.078 456.27 50.078 456.074 cv
50.078 455.879 50.043 455.695 49.977 455.516 cv
49.91 455.344 49.816 455.187 49.691 455.051 cv
49.566 454.922 49.41 454.816 49.223 454.734 cv
49.035 454.66 48.816 454.621 48.57 454.617 cv
48.281 454.621 48.023 454.66 47.797 454.734 cv
47.566 454.816 47.367 454.902 47.195 454.988 cv
47.023 455.082 46.879 455.164 46.762 455.242 cv
46.645 455.32 46.559 455.359 46.508 455.359 cv
46.473 455.359 46.441 455.352 46.418 455.332 cv
46.387 455.316 46.367 455.285 46.352 455.242 cv
46.336 455.203 46.32 455.148 46.313 455.078 cv
46.301 455.012 46.297 454.93 46.301 454.832 cv
46.297 454.766 46.301 454.707 46.309 454.656 cv
46.313 454.605 46.32 454.562 46.332 454.523 cv
46.34 454.488 46.355 454.453 46.375 454.422 cv
46.395 454.391 46.43 454.352 46.488 454.301 cv
46.539 454.254 46.633 454.187 46.77 454.105 cv
46.902 454.023 47.074 453.945 47.277 453.863 cv
47.48 453.785 47.703 453.715 47.949 453.66 cv
48.191 453.605 48.449 453.578 48.723 453.578 cv
49.148 453.578 49.523 453.641 49.848 453.762 cv
50.168 453.883 50.434 454.047 50.648 454.258 cv
50.859 454.469 51.02 454.715 51.125 454.988 cv
51.23 455.27 51.285 455.566 51.285 455.879 cv
51.285 456.168 51.258 456.449 51.207 456.727 cv
51.156 457.012 51.051 457.316 50.891 457.641 cv
50.727 457.969 50.492 458.332 50.188 458.73 cv
49.879 459.133 49.473 459.594 48.969 460.109 cv
47.563 461.578 li
51.422 461.578 li
51.453 461.582 51.488 461.594 51.527 461.609 cv
51.559 461.633 51.59 461.664 51.617 461.703 cv
51.641 461.746 51.66 461.797 51.672 461.855 cv
51.684 461.922 51.688 461.992 51.691 462.07 cv
cp
f
58.77 459.727 mo
58.77 460.203 58.688 460.625 58.527 460.996 cv
58.367 461.367 58.141 461.68 57.852 461.934 cv
57.555 462.187 57.207 462.383 56.805 462.512 cv
56.398 462.645 55.949 462.707 55.457 462.707 cv
55.18 462.707 54.918 462.687 54.676 462.648 cv
54.426 462.609 54.207 462.562 54.02 462.508 cv
53.824 462.453 53.668 462.398 53.543 462.34 cv
53.418 462.289 53.34 462.246 53.309 462.211 cv
53.273 462.18 53.25 462.148 53.238 462.121 cv
53.223 462.094 53.207 462.062 53.199 462.02 cv
53.184 461.984 53.176 461.934 53.176 461.871 cv
53.168 461.812 53.168 461.742 53.168 461.66 cv
53.168 461.586 53.172 461.516 53.18 461.453 cv
53.188 461.391 53.199 461.34 53.219 461.301 cv
53.234 461.262 53.254 461.234 53.281 461.215 cv
53.305 461.199 53.336 461.191 53.367 461.187 cv
53.414 461.191 53.484 461.219 53.578 461.273 cv
53.672 461.332 53.801 461.395 53.965 461.461 cv
54.129 461.527 54.328 461.59 54.57 461.648 cv
54.805 461.707 55.09 461.734 55.426 461.734 cv
55.727 461.734 56.008 461.699 56.266 461.625 cv
56.52 461.555 56.742 461.441 56.93 461.285 cv
57.113 461.133 57.258 460.937 57.363 460.699 cv
57.469 460.465 57.52 460.176 57.523 459.836 cv
57.52 459.555 57.477 459.305 57.387 459.086 cv
57.297 458.867 57.16 458.687 56.977 458.543 cv
56.789 458.402 56.555 458.297 56.273 458.223 cv
55.988 458.152 55.648 458.113 55.262 458.113 cv
54.977 458.113 54.738 458.129 54.539 458.156 cv
54.336 458.187 54.148 458.203 53.977 458.199 cv
53.848 458.203 53.754 458.172 53.703 458.109 cv
53.645 458.051 53.617 457.937 53.621 457.766 cv
53.621 454.152 li
53.617 454.004 53.652 453.895 53.727 453.816 cv
53.793 453.746 53.895 453.707 54.031 453.707 cv
57.961 453.707 li
57.996 453.707 58.031 453.719 58.066 453.738 cv
58.098 453.762 58.125 453.793 58.152 453.832 cv
58.172 453.875 58.188 453.926 58.203 453.988 cv
58.211 454.055 58.219 454.133 58.223 454.215 cv
58.219 454.383 58.195 454.508 58.156 454.598 cv
58.109 454.691 58.051 454.738 57.973 454.734 cv
54.801 454.734 li
54.801 457.223 li
54.953 457.203 55.109 457.191 55.273 457.184 cv
55.43 457.18 55.617 457.176 55.832 457.176 cv
56.316 457.176 56.742 457.238 57.109 457.359 cv
57.473 457.48 57.777 457.652 58.027 457.871 cv
58.27 458.098 58.457 458.363 58.582 458.676 cv
58.707 458.992 58.77 459.344 58.77 459.727 cv
cp
f
34.68 410.121 mo
59.5 410.121 li
59.5 427.211 li
34.68 427.211 li
cp
0 0 0 0 cmyk
ef
41.035 422.992 mo
41.031 423.078 41.027 423.152 41.016 423.215 cv
41.004 423.281 40.988 423.336 40.969 423.375 cv
40.945 423.422 40.918 423.453 40.887 423.469 cv
40.852 423.492 40.813 423.5 40.773 423.5 cv
35.871 423.5 li
35.809 423.5 35.75 423.492 35.703 423.477 cv
35.652 423.461 35.613 423.437 35.578 423.398 cv
35.543 423.367 35.516 423.312 35.504 423.242 cv
35.484 423.172 35.477 423.086 35.48 422.984 cv
35.477 422.895 35.48 422.816 35.488 422.746 cv
35.492 422.68 35.508 422.621 35.535 422.566 cv
35.559 422.516 35.59 422.461 35.625 422.406 cv
35.66 422.355 35.703 422.301 35.762 422.238 cv
37.535 420.414 li
37.945 419.996 38.273 419.621 38.523 419.285 cv
38.77 418.957 38.961 418.652 39.094 418.375 cv
39.227 418.102 39.313 417.852 39.359 417.625 cv
39.398 417.402 39.422 417.191 39.422 416.996 cv
39.422 416.801 39.387 416.617 39.32 416.437 cv
39.254 416.266 39.16 416.109 39.035 415.973 cv
38.91 415.844 38.754 415.738 38.566 415.656 cv
38.379 415.582 38.16 415.543 37.914 415.539 cv
37.625 415.543 37.367 415.582 37.141 415.656 cv
36.91 415.738 36.711 415.824 36.539 415.91 cv
36.367 416.004 36.223 416.086 36.105 416.164 cv
35.988 416.242 35.902 416.281 35.852 416.281 cv
35.816 416.281 35.785 416.273 35.762 416.254 cv
35.73 416.238 35.711 416.207 35.695 416.164 cv
35.68 416.125 35.664 416.07 35.656 416 cv
35.645 415.934 35.641 415.852 35.645 415.754 cv
35.641 415.687 35.645 415.629 35.652 415.578 cv
35.656 415.527 35.664 415.484 35.676 415.445 cv
35.684 415.41 35.699 415.375 35.719 415.344 cv
35.738 415.312 35.773 415.273 35.832 415.223 cv
35.883 415.176 35.977 415.109 36.113 415.027 cv
36.246 414.945 36.418 414.867 36.621 414.785 cv
36.824 414.707 37.047 414.637 37.293 414.582 cv
37.535 414.527 37.793 414.5 38.066 414.5 cv
38.492 414.5 38.867 414.562 39.191 414.684 cv
39.512 414.805 39.777 414.969 39.992 415.18 cv
40.203 415.391 40.363 415.637 40.469 415.91 cv
40.574 416.191 40.629 416.488 40.629 416.801 cv
40.629 417.09 40.602 417.371 40.551 417.648 cv
40.5 417.934 40.395 418.238 40.234 418.562 cv
40.07 418.891 39.836 419.254 39.531 419.652 cv
39.223 420.055 38.816 420.516 38.313 421.031 cv
36.906 422.5 li
40.766 422.5 li
40.797 422.504 40.832 422.516 40.871 422.531 cv
40.902 422.555 40.934 422.586 40.961 422.625 cv
40.984 422.668 41.004 422.719 41.016 422.777 cv
41.027 422.844 41.031 422.914 41.035 422.992 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.324 422.754 mo
44.324 423.082 44.27 423.297 44.164 423.402 cv
44.055 423.508 43.859 423.559 43.578 423.562 cv
43.301 423.559 43.109 423.508 43.008 423.406 cv
42.898 423.301 42.848 423.09 42.852 422.773 cv
42.848 422.449 42.902 422.234 43.012 422.125 cv
43.117 422.02 43.313 421.965 43.598 421.965 cv
43.871 421.965 44.059 422.02 44.168 422.125 cv
44.27 422.23 44.324 422.441 44.324 422.754 cv
cp
f
51.648 420.648 mo
51.648 421.125 51.566 421.547 51.406 421.918 cv
51.246 422.289 51.02 422.602 50.73 422.855 cv
50.434 423.109 50.086 423.305 49.684 423.434 cv
49.277 423.566 48.828 423.629 48.336 423.629 cv
48.059 423.629 47.797 423.609 47.555 423.57 cv
47.305 423.531 47.086 423.484 46.898 423.43 cv
46.703 423.375 46.547 423.32 46.422 423.262 cv
46.297 423.211 46.219 423.168 46.188 423.133 cv
46.152 423.102 46.129 423.07 46.117 423.043 cv
46.102 423.016 46.086 422.984 46.078 422.941 cv
46.063 422.906 46.055 422.855 46.055 422.793 cv
46.047 422.734 46.047 422.664 46.047 422.582 cv
46.047 422.508 46.051 422.437 46.059 422.375 cv
46.066 422.312 46.078 422.262 46.098 422.223 cv
46.113 422.184 46.133 422.156 46.16 422.137 cv
46.184 422.121 46.215 422.113 46.246 422.109 cv
46.293 422.113 46.363 422.141 46.457 422.195 cv
46.551 422.254 46.68 422.316 46.844 422.383 cv
47.008 422.449 47.207 422.512 47.449 422.57 cv
47.684 422.629 47.969 422.656 48.305 422.656 cv
48.605 422.656 48.887 422.621 49.145 422.547 cv
49.398 422.477 49.621 422.363 49.809 422.207 cv
49.992 422.055 50.137 421.859 50.242 421.621 cv
50.348 421.387 50.398 421.098 50.402 420.758 cv
50.398 420.477 50.355 420.227 50.266 420.008 cv
50.176 419.789 50.039 419.609 49.855 419.465 cv
49.668 419.324 49.434 419.219 49.152 419.145 cv
48.867 419.074 48.527 419.035 48.141 419.035 cv
47.855 419.035 47.617 419.051 47.418 419.078 cv
47.215 419.109 47.027 419.125 46.855 419.121 cv
46.727 419.125 46.633 419.094 46.582 419.031 cv
46.523 418.973 46.496 418.859 46.5 418.687 cv
46.5 415.074 li
46.496 414.926 46.531 414.816 46.605 414.738 cv
46.672 414.668 46.773 414.629 46.91 414.629 cv
50.84 414.629 li
50.875 414.629 50.91 414.641 50.945 414.66 cv
50.977 414.684 51.004 414.715 51.031 414.754 cv
51.051 414.797 51.066 414.848 51.082 414.91 cv
51.09 414.977 51.098 415.055 51.102 415.137 cv
51.098 415.305 51.074 415.43 51.035 415.52 cv
50.988 415.613 50.93 415.66 50.852 415.656 cv
47.68 415.656 li
47.68 418.145 li
47.832 418.125 47.988 418.113 48.152 418.105 cv
48.309 418.102 48.496 418.098 48.711 418.098 cv
49.195 418.098 49.621 418.16 49.988 418.281 cv
50.352 418.402 50.656 418.574 50.906 418.793 cv
51.148 419.02 51.336 419.285 51.461 419.598 cv
51.586 419.914 51.648 420.266 51.648 420.648 cv
cp
f
59.105 419.043 mo
59.102 419.727 59.051 420.348 58.945 420.91 cv
58.836 421.473 58.656 421.957 58.41 422.359 cv
58.156 422.766 57.828 423.078 57.43 423.297 cv
57.023 423.52 56.531 423.629 55.945 423.629 cv
55.387 423.629 54.914 423.531 54.535 423.332 cv
54.152 423.137 53.848 422.844 53.613 422.457 cv
53.379 422.07 53.211 421.598 53.117 421.031 cv
53.016 420.469 52.969 419.82 52.969 419.086 cv
52.969 418.414 53.023 417.793 53.133 417.227 cv
53.242 416.664 53.418 416.18 53.668 415.773 cv
53.91 415.371 54.234 415.059 54.641 414.832 cv
55.039 414.613 55.535 414.5 56.125 414.5 cv
56.684 414.5 57.156 414.602 57.539 414.797 cv
57.922 415 58.227 415.293 58.461 415.676 cv
58.691 416.066 58.859 416.539 58.957 417.102 cv
59.055 417.664 59.102 418.312 59.105 419.043 cv
cp
57.898 419.125 mo
57.895 418.684 57.879 418.285 57.852 417.934 cv
57.816 417.582 57.77 417.273 57.711 417.004 cv
57.645 416.734 57.566 416.504 57.469 416.309 cv
57.371 416.117 57.254 415.957 57.117 415.828 cv
56.977 415.703 56.816 415.609 56.645 415.551 cv
56.465 415.496 56.27 415.469 56.055 415.465 cv
55.664 415.469 55.348 415.559 55.109 415.742 cv
54.863 415.926 54.672 416.18 54.535 416.496 cv
54.395 416.816 54.301 417.187 54.25 417.617 cv
54.199 418.047 54.176 418.512 54.176 419.004 cv
54.176 419.668 54.207 420.23 54.277 420.691 cv
54.344 421.16 54.453 421.539 54.605 421.828 cv
54.75 422.125 54.941 422.336 55.172 422.465 cv
55.402 422.602 55.684 422.668 56.016 422.664 cv
56.27 422.668 56.492 422.629 56.688 422.543 cv
56.879 422.465 57.047 422.344 57.188 422.187 cv
57.328 422.035 57.441 421.852 57.535 421.637 cv
57.621 421.422 57.695 421.184 57.754 420.922 cv
57.805 420.664 57.844 420.383 57.867 420.078 cv
57.887 419.773 57.895 419.457 57.898 419.125 cv
cp
f
34.68 371.059 mo
59.5 371.059 li
59.5 388.149 li
34.68 388.149 li
cp
0 0 0 0 cmyk
ef
40.965 381.926 mo
40.961 382.336 40.891 382.703 40.75 383.027 cv
40.605 383.355 40.402 383.637 40.141 383.867 cv
39.875 384.102 39.547 384.277 39.16 384.402 cv
38.77 384.527 38.332 384.59 37.848 384.59 cv
37.543 384.59 37.266 384.562 37.012 384.516 cv
36.75 384.469 36.52 384.418 36.324 384.348 cv
36.121 384.285 35.957 384.215 35.824 384.145 cv
35.691 384.074 35.605 384.023 35.574 383.988 cv
35.535 383.961 35.512 383.93 35.496 383.895 cv
35.477 383.863 35.457 383.824 35.445 383.777 cv
35.43 383.734 35.422 383.68 35.414 383.609 cv
35.406 383.547 35.402 383.465 35.406 383.363 cv
35.402 383.203 35.418 383.09 35.453 383.023 cv
35.484 382.961 35.531 382.926 35.594 382.926 cv
35.637 382.926 35.719 382.965 35.844 383.035 cv
35.965 383.113 36.125 383.191 36.32 383.273 cv
36.512 383.359 36.738 383.437 37.004 383.508 cv
37.262 383.582 37.555 383.617 37.875 383.617 cv
38.184 383.617 38.453 383.578 38.691 383.5 cv
38.922 383.422 39.121 383.312 39.281 383.172 cv
39.438 383.031 39.555 382.863 39.637 382.668 cv
39.715 382.473 39.754 382.262 39.758 382.035 cv
39.754 381.785 39.703 381.559 39.605 381.355 cv
39.5 381.156 39.352 380.984 39.16 380.836 cv
38.961 380.691 38.723 380.578 38.438 380.5 cv
38.152 380.422 37.828 380.383 37.465 380.383 cv
36.594 380.383 li
36.551 380.383 36.516 380.375 36.48 380.359 cv
36.445 380.344 36.414 380.316 36.391 380.277 cv
36.363 380.242 36.344 380.195 36.328 380.137 cv
36.313 380.078 36.305 380 36.305 379.902 cv
36.305 379.816 36.309 379.746 36.324 379.687 cv
36.332 379.633 36.352 379.586 36.383 379.551 cv
36.406 379.516 36.438 379.492 36.469 379.473 cv
36.5 379.461 36.535 379.453 36.578 379.449 cv
37.352 379.449 li
37.652 379.453 37.922 379.414 38.164 379.332 cv
38.398 379.258 38.602 379.145 38.773 378.996 cv
38.938 378.852 39.066 378.676 39.156 378.473 cv
39.246 378.27 39.293 378.043 39.293 377.789 cv
39.293 377.609 39.262 377.434 39.203 377.266 cv
39.141 377.102 39.051 376.957 38.934 376.832 cv
38.813 376.707 38.66 376.609 38.48 376.539 cv
38.293 376.469 38.082 376.434 37.84 376.434 cv
37.574 376.434 37.328 376.477 37.109 376.555 cv
36.883 376.637 36.688 376.723 36.516 376.812 cv
36.34 376.906 36.195 376.992 36.082 377.07 cv
35.969 377.152 35.887 377.191 35.844 377.187 cv
35.809 377.191 35.781 377.184 35.758 377.172 cv
35.73 377.16 35.711 377.137 35.695 377.102 cv
35.68 377.07 35.668 377.023 35.66 376.957 cv
35.652 376.898 35.648 376.816 35.652 376.715 cv
35.648 376.648 35.648 376.59 35.656 376.535 cv
35.656 376.484 35.668 376.437 35.684 376.395 cv
35.699 376.359 35.715 376.324 35.734 376.289 cv
35.75 376.262 35.781 376.223 35.824 376.176 cv
35.867 376.133 35.953 376.07 36.09 375.988 cv
36.219 375.906 36.383 375.828 36.578 375.746 cv
36.77 375.668 36.992 375.598 37.25 375.543 cv
37.5 375.488 37.773 375.461 38.07 375.461 cv
38.477 375.461 38.84 375.516 39.152 375.617 cv
39.465 375.727 39.723 375.875 39.934 376.062 cv
40.137 376.258 40.293 376.488 40.398 376.754 cv
40.5 377.023 40.551 377.316 40.555 377.641 cv
40.551 377.922 40.516 378.184 40.445 378.418 cv
40.371 378.66 40.262 378.871 40.121 379.055 cv
39.977 379.242 39.805 379.398 39.602 379.527 cv
39.395 379.66 39.156 379.754 38.887 379.801 cv
38.887 379.812 li
39.191 379.848 39.473 379.922 39.727 380.043 cv
39.98 380.164 40.199 380.316 40.383 380.5 cv
40.563 380.684 40.703 380.898 40.809 381.141 cv
40.91 381.387 40.961 381.648 40.965 381.926 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.324 383.715 mo
44.324 384.043 44.27 384.258 44.164 384.363 cv
44.055 384.469 43.859 384.52 43.578 384.523 cv
43.301 384.52 43.109 384.469 43.008 384.367 cv
42.898 384.262 42.848 384.051 42.852 383.734 cv
42.848 383.41 42.902 383.195 43.012 383.086 cv
43.117 382.98 43.313 382.926 43.598 382.926 cv
43.871 382.926 44.059 382.98 44.168 383.086 cv
44.27 383.191 44.324 383.402 44.324 383.715 cv
cp
f
51.82 376.098 mo
51.816 376.184 51.813 376.258 51.809 376.32 cv
51.801 376.391 51.793 376.453 51.781 376.512 cv
51.77 376.578 51.754 376.637 51.734 376.691 cv
51.711 376.75 51.688 376.812 51.664 376.871 cv
48.469 384.234 li
48.441 384.293 48.414 384.336 48.383 384.367 cv
48.348 384.402 48.305 384.43 48.25 384.449 cv
48.195 384.469 48.125 384.48 48.047 384.492 cv
47.961 384.496 47.863 384.5 47.746 384.504 cv
47.59 384.5 47.469 384.492 47.383 384.48 cv
47.297 384.465 47.234 384.449 47.195 384.418 cv
47.156 384.391 47.137 384.352 47.145 384.309 cv
47.145 384.266 47.16 384.215 47.191 384.152 cv
50.551 376.625 li
46.293 376.625 li
46.207 376.629 46.141 376.582 46.098 376.488 cv
46.055 376.398 46.035 376.27 46.035 376.105 cv
46.035 376.02 46.039 375.945 46.051 375.879 cv
46.063 375.816 46.078 375.762 46.102 375.719 cv
46.121 375.676 46.148 375.645 46.184 375.621 cv
46.215 375.602 46.254 375.59 46.293 375.59 cv
51.465 375.59 li
51.523 375.59 51.578 375.598 51.629 375.613 cv
51.676 375.629 51.711 375.656 51.738 375.695 cv
51.762 375.734 51.781 375.789 51.797 375.852 cv
51.809 375.918 51.816 376 51.82 376.098 cv
cp
f
58.77 381.609 mo
58.77 382.086 58.688 382.508 58.527 382.879 cv
58.367 383.25 58.141 383.562 57.852 383.816 cv
57.555 384.07 57.207 384.266 56.805 384.395 cv
56.398 384.527 55.949 384.59 55.457 384.59 cv
55.18 384.59 54.918 384.57 54.676 384.531 cv
54.426 384.492 54.207 384.445 54.02 384.391 cv
53.824 384.336 53.668 384.281 53.543 384.223 cv
53.418 384.172 53.34 384.129 53.309 384.094 cv
53.273 384.062 53.25 384.031 53.238 384.004 cv
53.223 383.977 53.207 383.945 53.199 383.902 cv
53.184 383.867 53.176 383.816 53.176 383.754 cv
53.168 383.695 53.168 383.625 53.168 383.543 cv
53.168 383.469 53.172 383.398 53.18 383.336 cv
53.188 383.273 53.199 383.223 53.219 383.184 cv
53.234 383.145 53.254 383.117 53.281 383.098 cv
53.305 383.082 53.336 383.074 53.367 383.07 cv
53.414 383.074 53.484 383.102 53.578 383.156 cv
53.672 383.215 53.801 383.277 53.965 383.344 cv
54.129 383.41 54.328 383.473 54.57 383.531 cv
54.805 383.59 55.09 383.617 55.426 383.617 cv
55.727 383.617 56.008 383.582 56.266 383.508 cv
56.52 383.437 56.742 383.324 56.93 383.168 cv
57.113 383.016 57.258 382.82 57.363 382.582 cv
57.469 382.348 57.52 382.059 57.523 381.719 cv
57.52 381.437 57.477 381.187 57.387 380.969 cv
57.297 380.75 57.16 380.57 56.977 380.426 cv
56.789 380.285 56.555 380.18 56.273 380.105 cv
55.988 380.035 55.648 379.996 55.262 379.996 cv
54.977 379.996 54.738 380.012 54.539 380.039 cv
54.336 380.07 54.148 380.086 53.977 380.082 cv
53.848 380.086 53.754 380.055 53.703 379.992 cv
53.645 379.934 53.617 379.82 53.621 379.648 cv
53.621 376.035 li
53.617 375.887 53.652 375.777 53.727 375.699 cv
53.793 375.629 53.895 375.59 54.031 375.59 cv
57.961 375.59 li
57.996 375.59 58.031 375.602 58.066 375.621 cv
58.098 375.645 58.125 375.676 58.152 375.715 cv
58.172 375.758 58.188 375.809 58.203 375.871 cv
58.211 375.937 58.219 376.016 58.223 376.098 cv
58.219 376.266 58.195 376.391 58.156 376.48 cv
58.109 376.574 58.051 376.621 57.973 376.617 cv
54.801 376.617 li
54.801 379.105 li
54.953 379.086 55.109 379.074 55.273 379.066 cv
55.43 379.062 55.617 379.059 55.832 379.059 cv
56.316 379.059 56.742 379.121 57.109 379.242 cv
57.473 379.363 57.777 379.535 58.027 379.754 cv
58.27 379.98 58.457 380.246 58.582 380.559 cv
58.707 380.875 58.77 381.227 58.77 381.609 cv
cp
f
34.68 332.012 mo
59.5 332.012 li
59.5 349.102 li
34.68 349.102 li
cp
0 0 0 0 cmyk
ef
40.992 342.527 mo
40.992 343.004 40.91 343.426 40.75 343.797 cv
40.59 344.168 40.363 344.48 40.074 344.734 cv
39.777 344.988 39.43 345.184 39.027 345.312 cv
38.621 345.445 38.172 345.508 37.68 345.508 cv
37.402 345.508 37.141 345.488 36.898 345.449 cv
36.648 345.41 36.43 345.363 36.242 345.309 cv
36.047 345.254 35.891 345.199 35.766 345.141 cv
35.641 345.09 35.563 345.047 35.531 345.012 cv
35.496 344.98 35.473 344.949 35.461 344.922 cv
35.445 344.895 35.43 344.863 35.422 344.82 cv
35.406 344.785 35.398 344.734 35.398 344.672 cv
35.391 344.613 35.391 344.543 35.391 344.461 cv
35.391 344.387 35.395 344.316 35.402 344.254 cv
35.41 344.191 35.422 344.141 35.441 344.102 cv
35.457 344.062 35.477 344.035 35.504 344.016 cv
35.527 344 35.559 343.992 35.59 343.988 cv
35.637 343.992 35.707 344.02 35.801 344.074 cv
35.895 344.133 36.023 344.195 36.188 344.262 cv
36.352 344.328 36.551 344.391 36.793 344.449 cv
37.027 344.508 37.313 344.535 37.648 344.535 cv
37.949 344.535 38.23 344.5 38.488 344.426 cv
38.742 344.355 38.965 344.242 39.152 344.086 cv
39.336 343.934 39.48 343.738 39.586 343.5 cv
39.691 343.266 39.742 342.977 39.746 342.637 cv
39.742 342.355 39.699 342.105 39.609 341.887 cv
39.52 341.668 39.383 341.488 39.199 341.344 cv
39.012 341.203 38.777 341.098 38.496 341.023 cv
38.211 340.953 37.871 340.914 37.484 340.914 cv
37.199 340.914 36.961 340.93 36.762 340.957 cv
36.559 340.988 36.371 341.004 36.199 341 cv
36.07 341.004 35.977 340.973 35.926 340.91 cv
35.867 340.852 35.84 340.738 35.844 340.566 cv
35.844 336.953 li
35.84 336.805 35.875 336.695 35.949 336.617 cv
36.016 336.547 36.117 336.508 36.254 336.508 cv
40.184 336.508 li
40.219 336.508 40.254 336.52 40.289 336.539 cv
40.32 336.562 40.348 336.594 40.375 336.633 cv
40.395 336.676 40.41 336.727 40.426 336.789 cv
40.434 336.855 40.441 336.934 40.445 337.016 cv
40.441 337.184 40.418 337.309 40.379 337.398 cv
40.332 337.492 40.273 337.539 40.195 337.535 cv
37.023 337.535 li
37.023 340.023 li
37.176 340.004 37.332 339.992 37.496 339.984 cv
37.652 339.98 37.84 339.977 38.055 339.977 cv
38.539 339.977 38.965 340.039 39.332 340.16 cv
39.695 340.281 40 340.453 40.25 340.672 cv
40.492 340.898 40.68 341.164 40.805 341.477 cv
40.93 341.793 40.992 342.145 40.992 342.527 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.324 344.633 mo
44.324 344.961 44.27 345.176 44.164 345.281 cv
44.055 345.387 43.859 345.437 43.578 345.441 cv
43.301 345.437 43.109 345.387 43.008 345.285 cv
42.898 345.18 42.848 344.969 42.852 344.652 cv
42.848 344.328 42.902 344.113 43.012 344.004 cv
43.117 343.898 43.313 343.844 43.598 343.844 cv
43.871 343.844 44.059 343.898 44.168 344.004 cv
44.27 344.109 44.324 344.32 44.324 344.633 cv
cp
f
51.984 340.922 mo
51.98 341.605 51.93 342.227 51.824 342.789 cv
51.715 343.352 51.535 343.836 51.289 344.238 cv
51.035 344.645 50.707 344.957 50.309 345.176 cv
49.902 345.398 49.41 345.508 48.824 345.508 cv
48.266 345.508 47.793 345.41 47.414 345.211 cv
47.031 345.016 46.727 344.723 46.492 344.336 cv
46.258 343.949 46.09 343.477 45.996 342.91 cv
45.895 342.348 45.848 341.699 45.848 340.965 cv
45.848 340.293 45.902 339.672 46.012 339.105 cv
46.121 338.543 46.297 338.059 46.547 337.652 cv
46.789 337.25 47.113 336.937 47.52 336.711 cv
47.918 336.492 48.414 336.379 49.004 336.379 cv
49.563 336.379 50.035 336.48 50.418 336.676 cv
50.801 336.879 51.105 337.172 51.34 337.555 cv
51.57 337.945 51.738 338.418 51.836 338.98 cv
51.934 339.543 51.98 340.191 51.984 340.922 cv
cp
50.777 341.004 mo
50.773 340.562 50.758 340.164 50.73 339.812 cv
50.695 339.461 50.648 339.152 50.59 338.883 cv
50.523 338.613 50.445 338.383 50.348 338.187 cv
50.25 337.996 50.133 337.836 49.996 337.707 cv
49.855 337.582 49.695 337.488 49.523 337.43 cv
49.344 337.375 49.148 337.348 48.934 337.344 cv
48.543 337.348 48.227 337.437 47.988 337.621 cv
47.742 337.805 47.551 338.059 47.414 338.375 cv
47.273 338.695 47.18 339.066 47.129 339.496 cv
47.078 339.926 47.055 340.391 47.055 340.883 cv
47.055 341.547 47.086 342.109 47.156 342.57 cv
47.223 343.039 47.332 343.418 47.484 343.707 cv
47.629 344.004 47.82 344.215 48.051 344.344 cv
48.281 344.48 48.563 344.547 48.895 344.543 cv
49.148 344.547 49.371 344.508 49.566 344.422 cv
49.758 344.344 49.926 344.223 50.066 344.066 cv
50.207 343.914 50.32 343.73 50.414 343.516 cv
50.5 343.301 50.574 343.062 50.633 342.801 cv
50.684 342.543 50.723 342.262 50.746 341.957 cv
50.766 341.652 50.773 341.336 50.777 341.004 cv
cp
f
59.105 340.922 mo
59.102 341.605 59.051 342.227 58.945 342.789 cv
58.836 343.352 58.656 343.836 58.41 344.238 cv
58.156 344.645 57.828 344.957 57.43 345.176 cv
57.023 345.398 56.531 345.508 55.945 345.508 cv
55.387 345.508 54.914 345.41 54.535 345.211 cv
54.152 345.016 53.848 344.723 53.613 344.336 cv
53.379 343.949 53.211 343.477 53.117 342.91 cv
53.016 342.348 52.969 341.699 52.969 340.965 cv
52.969 340.293 53.023 339.672 53.133 339.105 cv
53.242 338.543 53.418 338.059 53.668 337.652 cv
53.91 337.25 54.234 336.937 54.641 336.711 cv
55.039 336.492 55.535 336.379 56.125 336.379 cv
56.684 336.379 57.156 336.48 57.539 336.676 cv
57.922 336.879 58.227 337.172 58.461 337.555 cv
58.691 337.945 58.859 338.418 58.957 338.98 cv
59.055 339.543 59.102 340.191 59.105 340.922 cv
cp
57.898 341.004 mo
57.895 340.562 57.879 340.164 57.852 339.812 cv
57.816 339.461 57.77 339.152 57.711 338.883 cv
57.645 338.613 57.566 338.383 57.469 338.187 cv
57.371 337.996 57.254 337.836 57.117 337.707 cv
56.977 337.582 56.816 337.488 56.645 337.43 cv
56.465 337.375 56.27 337.348 56.055 337.344 cv
55.664 337.348 55.348 337.437 55.109 337.621 cv
54.863 337.805 54.672 338.059 54.535 338.375 cv
54.395 338.695 54.301 339.066 54.25 339.496 cv
54.199 339.926 54.176 340.391 54.176 340.883 cv
54.176 341.547 54.207 342.109 54.277 342.57 cv
54.344 343.039 54.453 343.418 54.605 343.707 cv
54.75 344.004 54.941 344.215 55.172 344.344 cv
55.402 344.48 55.684 344.547 56.016 344.543 cv
56.27 344.547 56.492 344.508 56.688 344.422 cv
56.879 344.344 57.047 344.223 57.188 344.066 cv
57.328 343.914 57.441 343.73 57.535 343.516 cv
57.621 343.301 57.695 343.062 57.754 342.801 cv
57.805 342.543 57.844 342.262 57.867 341.957 cv
57.887 341.652 57.895 341.336 57.898 341.004 cv
cp
f
34.68 292.949 mo
59.5 292.949 li
59.5 310.039 li
34.68 310.039 li
cp
0 0 0 0 cmyk
ef
41.262 303.469 mo
41.262 303.859 41.199 304.238 41.082 304.598 cv
40.957 304.965 40.773 305.281 40.531 305.555 cv
40.281 305.832 39.969 306.055 39.594 306.219 cv
39.211 306.387 38.766 306.469 38.25 306.469 cv
37.879 306.469 37.551 306.426 37.27 306.332 cv
36.984 306.246 36.738 306.113 36.527 305.941 cv
36.316 305.773 36.141 305.566 36.004 305.32 cv
35.863 305.074 35.75 304.793 35.668 304.477 cv
35.582 304.164 35.523 303.82 35.488 303.441 cv
35.449 303.07 35.43 302.668 35.434 302.234 cv
35.43 301.855 35.449 301.473 35.492 301.082 cv
35.531 300.699 35.605 300.324 35.711 299.957 cv
35.816 299.598 35.961 299.258 36.141 298.941 cv
36.32 298.625 36.547 298.348 36.82 298.113 cv
37.094 297.879 37.418 297.691 37.797 297.551 cv
38.176 297.414 38.617 297.348 39.121 297.344 cv
39.289 297.348 39.461 297.355 39.633 297.375 cv
39.805 297.398 39.965 297.43 40.113 297.461 cv
40.262 297.5 40.383 297.535 40.484 297.574 cv
40.582 297.613 40.648 297.648 40.684 297.672 cv
40.711 297.699 40.734 297.727 40.754 297.754 cv
40.77 297.785 40.785 297.816 40.793 297.852 cv
40.801 297.887 40.805 297.926 40.813 297.969 cv
40.813 298.012 40.816 298.066 40.82 298.129 cv
40.816 298.215 40.816 298.285 40.816 298.34 cv
40.813 298.402 40.801 298.449 40.789 298.484 cv
40.77 298.523 40.75 298.551 40.727 298.566 cv
40.699 298.586 40.668 298.594 40.629 298.594 cv
40.578 298.594 40.508 298.578 40.422 298.547 cv
40.332 298.516 40.227 298.48 40.105 298.437 cv
39.98 298.402 39.832 298.367 39.656 298.332 cv
39.48 298.305 39.277 298.289 39.047 298.285 cv
38.617 298.289 38.25 298.375 37.945 298.547 cv
37.641 298.719 37.391 298.953 37.195 299.246 cv
37 299.539 36.855 299.879 36.766 300.262 cv
36.668 300.652 36.613 301.055 36.605 301.473 cv
36.723 301.406 36.859 301.34 37.008 301.27 cv
37.156 301.203 37.316 301.141 37.492 301.082 cv
37.668 301.031 37.855 300.984 38.051 300.949 cv
38.246 300.918 38.457 300.902 38.684 300.898 cv
39.16 300.902 39.563 300.969 39.895 301.094 cv
40.223 301.227 40.488 301.406 40.695 301.637 cv
40.895 301.867 41.039 302.137 41.129 302.449 cv
41.215 302.762 41.262 303.102 41.262 303.469 cv
cp
40.066 303.578 mo
40.066 303.316 40.039 303.074 39.988 302.855 cv
39.934 302.641 39.844 302.457 39.723 302.301 cv
39.598 302.152 39.434 302.035 39.23 301.953 cv
39.02 301.871 38.766 301.828 38.469 301.828 cv
38.297 301.828 38.129 301.844 37.961 301.875 cv
37.789 301.906 37.625 301.949 37.469 301.996 cv
37.309 302.051 37.16 302.113 37.02 302.184 cv
36.875 302.258 36.742 302.332 36.625 302.41 cv
36.621 303.004 36.66 303.5 36.738 303.895 cv
36.813 304.293 36.922 304.609 37.066 304.848 cv
37.211 305.09 37.391 305.262 37.605 305.363 cv
37.82 305.469 38.07 305.52 38.359 305.516 cv
38.648 305.52 38.902 305.465 39.117 305.352 cv
39.332 305.246 39.508 305.098 39.652 304.91 cv
39.793 304.727 39.898 304.52 39.965 304.289 cv
40.031 304.059 40.066 303.824 40.066 303.578 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.324 305.594 mo
44.324 305.922 44.27 306.137 44.164 306.242 cv
44.055 306.348 43.859 306.398 43.578 306.402 cv
43.301 306.398 43.109 306.348 43.008 306.246 cv
42.898 306.141 42.848 305.93 42.852 305.613 cv
42.848 305.289 42.902 305.074 43.012 304.965 cv
43.117 304.859 43.313 304.805 43.598 304.805 cv
43.871 304.805 44.059 304.859 44.168 304.965 cv
44.27 305.07 44.324 305.281 44.324 305.594 cv
cp
f
51.691 305.832 mo
51.688 305.918 51.684 305.992 51.672 306.055 cv
51.66 306.121 51.645 306.176 51.625 306.215 cv
51.602 306.262 51.574 306.293 51.543 306.309 cv
51.508 306.332 51.469 306.34 51.43 306.34 cv
46.527 306.34 li
46.465 306.34 46.406 306.332 46.359 306.316 cv
46.309 306.301 46.27 306.277 46.234 306.238 cv
46.199 306.207 46.172 306.152 46.16 306.082 cv
46.141 306.012 46.133 305.926 46.137 305.824 cv
46.133 305.734 46.137 305.656 46.145 305.586 cv
46.148 305.52 46.164 305.461 46.191 305.406 cv
46.215 305.355 46.246 305.301 46.281 305.246 cv
46.316 305.195 46.359 305.141 46.418 305.078 cv
48.191 303.254 li
48.602 302.836 48.93 302.461 49.18 302.125 cv
49.426 301.797 49.617 301.492 49.75 301.215 cv
49.883 300.941 49.969 300.691 50.016 300.465 cv
50.055 300.242 50.078 300.031 50.078 299.836 cv
50.078 299.641 50.043 299.457 49.977 299.277 cv
49.91 299.105 49.816 298.949 49.691 298.812 cv
49.566 298.684 49.41 298.578 49.223 298.496 cv
49.035 298.422 48.816 298.383 48.57 298.379 cv
48.281 298.383 48.023 298.422 47.797 298.496 cv
47.566 298.578 47.367 298.664 47.195 298.75 cv
47.023 298.844 46.879 298.926 46.762 299.004 cv
46.645 299.082 46.559 299.121 46.508 299.121 cv
46.473 299.121 46.441 299.113 46.418 299.094 cv
46.387 299.078 46.367 299.047 46.352 299.004 cv
46.336 298.965 46.32 298.91 46.313 298.84 cv
46.301 298.773 46.297 298.691 46.301 298.594 cv
46.297 298.527 46.301 298.469 46.309 298.418 cv
46.313 298.367 46.32 298.324 46.332 298.285 cv
46.34 298.25 46.355 298.215 46.375 298.184 cv
46.395 298.152 46.43 298.113 46.488 298.062 cv
46.539 298.016 46.633 297.949 46.77 297.867 cv
46.902 297.785 47.074 297.707 47.277 297.625 cv
47.48 297.547 47.703 297.477 47.949 297.422 cv
48.191 297.367 48.449 297.34 48.723 297.34 cv
49.148 297.34 49.523 297.402 49.848 297.523 cv
50.168 297.645 50.434 297.809 50.648 298.02 cv
50.859 298.23 51.02 298.477 51.125 298.75 cv
51.23 299.031 51.285 299.328 51.285 299.641 cv
51.285 299.93 51.258 300.211 51.207 300.488 cv
51.156 300.773 51.051 301.078 50.891 301.402 cv
50.727 301.73 50.492 302.094 50.188 302.492 cv
49.879 302.895 49.473 303.355 48.969 303.871 cv
47.563 305.34 li
51.422 305.34 li
51.453 305.344 51.488 305.355 51.527 305.371 cv
51.559 305.395 51.59 305.426 51.617 305.465 cv
51.641 305.508 51.66 305.559 51.672 305.617 cv
51.684 305.684 51.688 305.754 51.691 305.832 cv
cp
f
58.77 303.488 mo
58.77 303.965 58.688 304.387 58.527 304.758 cv
58.367 305.129 58.141 305.441 57.852 305.695 cv
57.555 305.949 57.207 306.145 56.805 306.273 cv
56.398 306.406 55.949 306.469 55.457 306.469 cv
55.18 306.469 54.918 306.449 54.676 306.41 cv
54.426 306.371 54.207 306.324 54.02 306.27 cv
53.824 306.215 53.668 306.16 53.543 306.102 cv
53.418 306.051 53.34 306.008 53.309 305.973 cv
53.273 305.941 53.25 305.91 53.238 305.883 cv
53.223 305.855 53.207 305.824 53.199 305.781 cv
53.184 305.746 53.176 305.695 53.176 305.633 cv
53.168 305.574 53.168 305.504 53.168 305.422 cv
53.168 305.348 53.172 305.277 53.18 305.215 cv
53.188 305.152 53.199 305.102 53.219 305.062 cv
53.234 305.023 53.254 304.996 53.281 304.977 cv
53.305 304.961 53.336 304.953 53.367 304.949 cv
53.414 304.953 53.484 304.98 53.578 305.035 cv
53.672 305.094 53.801 305.156 53.965 305.223 cv
54.129 305.289 54.328 305.352 54.57 305.41 cv
54.805 305.469 55.09 305.496 55.426 305.496 cv
55.727 305.496 56.008 305.461 56.266 305.387 cv
56.52 305.316 56.742 305.203 56.93 305.047 cv
57.113 304.895 57.258 304.699 57.363 304.461 cv
57.469 304.227 57.52 303.937 57.523 303.598 cv
57.52 303.316 57.477 303.066 57.387 302.848 cv
57.297 302.629 57.16 302.449 56.977 302.305 cv
56.789 302.164 56.555 302.059 56.273 301.984 cv
55.988 301.914 55.648 301.875 55.262 301.875 cv
54.977 301.875 54.738 301.891 54.539 301.918 cv
54.336 301.949 54.148 301.965 53.977 301.961 cv
53.848 301.965 53.754 301.934 53.703 301.871 cv
53.645 301.812 53.617 301.699 53.621 301.527 cv
53.621 297.914 li
53.617 297.766 53.652 297.656 53.727 297.578 cv
53.793 297.508 53.895 297.469 54.031 297.469 cv
57.961 297.469 li
57.996 297.469 58.031 297.48 58.066 297.5 cv
58.098 297.523 58.125 297.555 58.152 297.594 cv
58.172 297.637 58.188 297.687 58.203 297.75 cv
58.211 297.816 58.219 297.895 58.223 297.977 cv
58.219 298.145 58.195 298.27 58.156 298.359 cv
58.109 298.453 58.051 298.5 57.973 298.496 cv
54.801 298.496 li
54.801 300.984 li
54.953 300.965 55.109 300.953 55.273 300.945 cv
55.43 300.941 55.617 300.937 55.832 300.937 cv
56.316 300.937 56.742 301 57.109 301.121 cv
57.473 301.242 57.777 301.414 58.027 301.633 cv
58.27 301.859 58.457 302.125 58.582 302.437 cv
58.707 302.754 58.77 303.105 58.77 303.488 cv
cp
f
34.68 253.898 mo
59.5 253.898 li
59.5 270.988 li
34.68 270.988 li
cp
0 0 0 0 cmyk
ef
41.164 258.898 mo
41.16 258.984 41.156 259.059 41.152 259.121 cv
41.145 259.191 41.137 259.254 41.125 259.312 cv
41.113 259.379 41.098 259.437 41.078 259.492 cv
41.055 259.551 41.031 259.613 41.008 259.672 cv
37.813 267.035 li
37.785 267.094 37.758 267.137 37.727 267.168 cv
37.691 267.203 37.648 267.23 37.594 267.25 cv
37.539 267.27 37.469 267.281 37.391 267.293 cv
37.305 267.297 37.207 267.301 37.09 267.305 cv
36.934 267.301 36.813 267.293 36.727 267.281 cv
36.641 267.266 36.578 267.25 36.539 267.219 cv
36.5 267.191 36.48 267.152 36.488 267.109 cv
36.488 267.066 36.504 267.016 36.535 266.953 cv
39.895 259.426 li
35.637 259.426 li
35.551 259.43 35.484 259.383 35.441 259.289 cv
35.398 259.199 35.379 259.07 35.379 258.906 cv
35.379 258.82 35.383 258.746 35.395 258.68 cv
35.406 258.617 35.422 258.562 35.445 258.52 cv
35.465 258.477 35.492 258.445 35.527 258.422 cv
35.559 258.402 35.598 258.391 35.637 258.391 cv
40.809 258.391 li
40.867 258.391 40.922 258.398 40.973 258.414 cv
41.02 258.43 41.055 258.457 41.082 258.496 cv
41.105 258.535 41.125 258.59 41.141 258.652 cv
41.152 258.719 41.16 258.801 41.164 258.898 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.324 266.516 mo
44.324 266.844 44.27 267.059 44.164 267.164 cv
44.055 267.27 43.859 267.32 43.578 267.324 cv
43.301 267.32 43.109 267.27 43.008 267.168 cv
42.898 267.062 42.848 266.852 42.852 266.535 cv
42.848 266.211 42.902 265.996 43.012 265.887 cv
43.117 265.781 43.313 265.727 43.598 265.727 cv
43.871 265.727 44.059 265.781 44.168 265.887 cv
44.27 265.992 44.324 266.203 44.324 266.516 cv
cp
f
51.648 264.41 mo
51.648 264.887 51.566 265.309 51.406 265.68 cv
51.246 266.051 51.02 266.363 50.73 266.617 cv
50.434 266.871 50.086 267.066 49.684 267.195 cv
49.277 267.328 48.828 267.391 48.336 267.391 cv
48.059 267.391 47.797 267.371 47.555 267.332 cv
47.305 267.293 47.086 267.246 46.898 267.191 cv
46.703 267.137 46.547 267.082 46.422 267.023 cv
46.297 266.973 46.219 266.93 46.188 266.895 cv
46.152 266.863 46.129 266.832 46.117 266.805 cv
46.102 266.777 46.086 266.746 46.078 266.703 cv
46.063 266.668 46.055 266.617 46.055 266.555 cv
46.047 266.496 46.047 266.426 46.047 266.344 cv
46.047 266.27 46.051 266.199 46.059 266.137 cv
46.066 266.074 46.078 266.023 46.098 265.984 cv
46.113 265.945 46.133 265.918 46.16 265.898 cv
46.184 265.883 46.215 265.875 46.246 265.871 cv
46.293 265.875 46.363 265.902 46.457 265.957 cv
46.551 266.016 46.68 266.078 46.844 266.145 cv
47.008 266.211 47.207 266.273 47.449 266.332 cv
47.684 266.391 47.969 266.418 48.305 266.418 cv
48.605 266.418 48.887 266.383 49.145 266.309 cv
49.398 266.238 49.621 266.125 49.809 265.969 cv
49.992 265.816 50.137 265.621 50.242 265.383 cv
50.348 265.148 50.398 264.859 50.402 264.52 cv
50.398 264.238 50.355 263.988 50.266 263.77 cv
50.176 263.551 50.039 263.371 49.855 263.227 cv
49.668 263.086 49.434 262.98 49.152 262.906 cv
48.867 262.836 48.527 262.797 48.141 262.797 cv
47.855 262.797 47.617 262.812 47.418 262.84 cv
47.215 262.871 47.027 262.887 46.855 262.883 cv
46.727 262.887 46.633 262.855 46.582 262.793 cv
46.523 262.734 46.496 262.621 46.5 262.449 cv
46.5 258.836 li
46.496 258.687 46.531 258.578 46.605 258.5 cv
46.672 258.43 46.773 258.391 46.91 258.391 cv
50.84 258.391 li
50.875 258.391 50.91 258.402 50.945 258.422 cv
50.977 258.445 51.004 258.477 51.031 258.516 cv
51.051 258.559 51.066 258.609 51.082 258.672 cv
51.09 258.738 51.098 258.816 51.102 258.898 cv
51.098 259.066 51.074 259.191 51.035 259.281 cv
50.988 259.375 50.93 259.422 50.852 259.418 cv
47.68 259.418 li
47.68 261.906 li
47.832 261.887 47.988 261.875 48.152 261.867 cv
48.309 261.863 48.496 261.859 48.711 261.859 cv
49.195 261.859 49.621 261.922 49.988 262.043 cv
50.352 262.164 50.656 262.336 50.906 262.555 cv
51.148 262.781 51.336 263.047 51.461 263.359 cv
51.586 263.676 51.648 264.027 51.648 264.41 cv
cp
f
59.105 262.805 mo
59.102 263.488 59.051 264.109 58.945 264.672 cv
58.836 265.234 58.656 265.719 58.41 266.121 cv
58.156 266.527 57.828 266.84 57.43 267.059 cv
57.023 267.281 56.531 267.391 55.945 267.391 cv
55.387 267.391 54.914 267.293 54.535 267.094 cv
54.152 266.898 53.848 266.605 53.613 266.219 cv
53.379 265.832 53.211 265.359 53.117 264.793 cv
53.016 264.23 52.969 263.582 52.969 262.848 cv
52.969 262.176 53.023 261.555 53.133 260.988 cv
53.242 260.426 53.418 259.941 53.668 259.535 cv
53.91 259.133 54.234 258.82 54.641 258.594 cv
55.039 258.375 55.535 258.262 56.125 258.262 cv
56.684 258.262 57.156 258.363 57.539 258.559 cv
57.922 258.762 58.227 259.055 58.461 259.437 cv
58.691 259.828 58.859 260.301 58.957 260.863 cv
59.055 261.426 59.102 262.074 59.105 262.805 cv
cp
57.898 262.887 mo
57.895 262.445 57.879 262.047 57.852 261.695 cv
57.816 261.344 57.77 261.035 57.711 260.766 cv
57.645 260.496 57.566 260.266 57.469 260.07 cv
57.371 259.879 57.254 259.719 57.117 259.59 cv
56.977 259.465 56.816 259.371 56.645 259.312 cv
56.465 259.258 56.27 259.23 56.055 259.227 cv
55.664 259.23 55.348 259.32 55.109 259.504 cv
54.863 259.687 54.672 259.941 54.535 260.258 cv
54.395 260.578 54.301 260.949 54.25 261.379 cv
54.199 261.809 54.176 262.273 54.176 262.766 cv
54.176 263.43 54.207 263.992 54.277 264.453 cv
54.344 264.922 54.453 265.301 54.605 265.59 cv
54.75 265.887 54.941 266.098 55.172 266.227 cv
55.402 266.363 55.684 266.43 56.016 266.426 cv
56.27 266.43 56.492 266.391 56.688 266.305 cv
56.879 266.227 57.047 266.105 57.188 265.949 cv
57.328 265.797 57.441 265.613 57.535 265.398 cv
57.621 265.184 57.695 264.945 57.754 264.684 cv
57.805 264.426 57.844 264.145 57.867 263.84 cv
57.887 263.535 57.895 263.219 57.898 262.887 cv
cp
f
34.68 214.852 mo
59.5 214.852 li
59.5 231.942 li
34.68 231.942 li
cp
0 0 0 0 cmyk
ef
41.238 225.941 mo
41.238 226.328 41.168 226.672 41.031 226.969 cv
40.895 227.273 40.699 227.523 40.441 227.727 cv
40.184 227.934 39.863 228.09 39.484 228.191 cv
39.102 228.297 38.668 228.348 38.184 228.348 cv
37.723 228.348 37.313 228.301 36.953 228.207 cv
36.59 228.113 36.285 227.973 36.035 227.781 cv
35.785 227.598 35.594 227.367 35.461 227.09 cv
35.328 226.816 35.262 226.504 35.262 226.148 cv
35.262 225.875 35.305 225.617 35.398 225.383 cv
35.484 225.148 35.617 224.934 35.793 224.738 cv
35.961 224.543 36.172 224.359 36.426 224.184 cv
36.676 224.016 36.961 223.852 37.277 223.695 cv
37.004 223.555 36.762 223.406 36.551 223.246 cv
36.34 223.09 36.16 222.918 36.016 222.73 cv
35.867 222.547 35.758 222.352 35.684 222.141 cv
35.605 221.934 35.566 221.703 35.57 221.453 cv
35.566 221.145 35.621 220.852 35.738 220.578 cv
35.848 220.309 36.02 220.074 36.246 219.871 cv
36.473 219.672 36.758 219.512 37.109 219.395 cv
37.453 219.277 37.863 219.219 38.332 219.219 cv
38.777 219.219 39.164 219.273 39.492 219.379 cv
39.82 219.488 40.09 219.633 40.301 219.816 cv
40.512 220.004 40.668 220.223 40.773 220.473 cv
40.871 220.723 40.922 220.992 40.926 221.281 cv
40.922 221.516 40.883 221.742 40.813 221.953 cv
40.734 222.172 40.625 222.375 40.477 222.562 cv
40.328 222.758 40.148 222.937 39.938 223.102 cv
39.727 223.273 39.484 223.43 39.211 223.57 cv
39.531 223.734 39.816 223.898 40.074 224.066 cv
40.324 224.234 40.539 224.414 40.715 224.609 cv
40.883 224.805 41.012 225.012 41.105 225.227 cv
41.191 225.445 41.238 225.684 41.238 225.941 cv
cp
39.758 221.391 mo
39.754 221.203 39.723 221.027 39.656 220.871 cv
39.59 220.715 39.492 220.582 39.367 220.473 cv
39.238 220.363 39.078 220.281 38.891 220.223 cv
38.695 220.168 38.48 220.141 38.242 220.137 cv
37.746 220.141 37.371 220.25 37.121 220.473 cv
36.863 220.699 36.738 221.008 36.742 221.391 cv
36.738 221.57 36.77 221.734 36.832 221.887 cv
36.895 222.043 36.988 222.187 37.121 222.324 cv
37.246 222.461 37.41 222.594 37.613 222.723 cv
37.809 222.855 38.047 222.992 38.324 223.133 cv
38.785 222.898 39.141 222.637 39.387 222.344 cv
39.633 222.059 39.754 221.742 39.758 221.391 cv
cp
40.047 226.066 mo
40.043 225.859 40.004 225.668 39.93 225.496 cv
39.848 225.328 39.73 225.168 39.574 225.016 cv
39.418 224.867 39.219 224.723 38.984 224.582 cv
38.746 224.445 38.477 224.301 38.168 224.148 cv
37.879 224.293 37.625 224.434 37.41 224.574 cv
37.191 224.715 37.012 224.863 36.875 225.012 cv
36.734 225.168 36.629 225.324 36.559 225.488 cv
36.484 225.656 36.449 225.84 36.453 226.039 cv
36.449 226.484 36.602 226.828 36.91 227.066 cv
37.211 227.312 37.664 227.434 38.27 227.43 cv
38.852 227.434 39.297 227.312 39.598 227.062 cv
39.895 226.82 40.043 226.488 40.047 226.066 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.324 227.473 mo
44.324 227.801 44.27 228.016 44.164 228.121 cv
44.055 228.227 43.859 228.277 43.578 228.281 cv
43.301 228.277 43.109 228.227 43.008 228.125 cv
42.898 228.02 42.848 227.809 42.852 227.492 cv
42.848 227.168 42.902 226.953 43.012 226.844 cv
43.117 226.738 43.313 226.684 43.598 226.684 cv
43.871 226.684 44.059 226.738 44.168 226.844 cv
44.27 226.949 44.324 227.16 44.324 227.473 cv
cp
f
51.82 219.855 mo
51.816 219.941 51.813 220.016 51.809 220.078 cv
51.801 220.148 51.793 220.211 51.781 220.27 cv
51.77 220.336 51.754 220.395 51.734 220.449 cv
51.711 220.508 51.688 220.57 51.664 220.629 cv
48.469 227.992 li
48.441 228.051 48.414 228.094 48.383 228.125 cv
48.348 228.16 48.305 228.187 48.25 228.207 cv
48.195 228.227 48.125 228.238 48.047 228.25 cv
47.961 228.254 47.863 228.258 47.746 228.262 cv
47.59 228.258 47.469 228.25 47.383 228.238 cv
47.297 228.223 47.234 228.207 47.195 228.176 cv
47.156 228.148 47.137 228.109 47.145 228.066 cv
47.145 228.023 47.16 227.973 47.191 227.91 cv
50.551 220.383 li
46.293 220.383 li
46.207 220.387 46.141 220.34 46.098 220.246 cv
46.055 220.156 46.035 220.027 46.035 219.863 cv
46.035 219.777 46.039 219.703 46.051 219.637 cv
46.063 219.574 46.078 219.52 46.102 219.477 cv
46.121 219.434 46.148 219.402 46.184 219.379 cv
46.215 219.359 46.254 219.348 46.293 219.348 cv
51.465 219.348 li
51.523 219.348 51.578 219.355 51.629 219.371 cv
51.676 219.387 51.711 219.414 51.738 219.453 cv
51.762 219.492 51.781 219.547 51.797 219.609 cv
51.809 219.676 51.816 219.758 51.82 219.855 cv
cp
f
58.77 225.367 mo
58.77 225.844 58.688 226.266 58.527 226.637 cv
58.367 227.008 58.141 227.32 57.852 227.574 cv
57.555 227.828 57.207 228.023 56.805 228.152 cv
56.398 228.285 55.949 228.348 55.457 228.348 cv
55.18 228.348 54.918 228.328 54.676 228.289 cv
54.426 228.25 54.207 228.203 54.02 228.148 cv
53.824 228.094 53.668 228.039 53.543 227.98 cv
53.418 227.93 53.34 227.887 53.309 227.852 cv
53.273 227.82 53.25 227.789 53.238 227.762 cv
53.223 227.734 53.207 227.703 53.199 227.66 cv
53.184 227.625 53.176 227.574 53.176 227.512 cv
53.168 227.453 53.168 227.383 53.168 227.301 cv
53.168 227.227 53.172 227.156 53.18 227.094 cv
53.188 227.031 53.199 226.98 53.219 226.941 cv
53.234 226.902 53.254 226.875 53.281 226.855 cv
53.305 226.84 53.336 226.832 53.367 226.828 cv
53.414 226.832 53.484 226.859 53.578 226.914 cv
53.672 226.973 53.801 227.035 53.965 227.102 cv
54.129 227.168 54.328 227.23 54.57 227.289 cv
54.805 227.348 55.09 227.375 55.426 227.375 cv
55.727 227.375 56.008 227.34 56.266 227.266 cv
56.52 227.195 56.742 227.082 56.93 226.926 cv
57.113 226.773 57.258 226.578 57.363 226.34 cv
57.469 226.105 57.52 225.816 57.523 225.477 cv
57.52 225.195 57.477 224.945 57.387 224.727 cv
57.297 224.508 57.16 224.328 56.977 224.184 cv
56.789 224.043 56.555 223.937 56.273 223.863 cv
55.988 223.793 55.648 223.754 55.262 223.754 cv
54.977 223.754 54.738 223.77 54.539 223.797 cv
54.336 223.828 54.148 223.844 53.977 223.84 cv
53.848 223.844 53.754 223.812 53.703 223.75 cv
53.645 223.691 53.617 223.578 53.621 223.406 cv
53.621 219.793 li
53.617 219.645 53.652 219.535 53.727 219.457 cv
53.793 219.387 53.895 219.348 54.031 219.348 cv
57.961 219.348 li
57.996 219.348 58.031 219.359 58.066 219.379 cv
58.098 219.402 58.125 219.434 58.152 219.473 cv
58.172 219.516 58.188 219.566 58.203 219.629 cv
58.211 219.695 58.219 219.773 58.223 219.855 cv
58.219 220.023 58.195 220.148 58.156 220.238 cv
58.109 220.332 58.051 220.379 57.973 220.375 cv
54.801 220.375 li
54.801 222.863 li
54.953 222.844 55.109 222.832 55.273 222.824 cv
55.43 222.82 55.617 222.816 55.832 222.816 cv
56.316 222.816 56.742 222.879 57.109 223 cv
57.473 223.121 57.777 223.293 58.027 223.512 cv
58.27 223.738 58.457 224.004 58.582 224.316 cv
58.707 224.633 58.77 224.984 58.77 225.367 cv
cp
f
27.59 175.789 mo
59.504 175.789 li
59.504 192.879 li
27.59 192.879 li
cp
0 0 0 0 cmyk
ef
33.957 188.676 mo
33.953 188.766 33.945 188.836 33.934 188.895 cv
33.918 188.957 33.898 189.008 33.879 189.039 cv
33.855 189.078 33.832 189.102 33.801 189.117 cv
33.77 189.133 33.738 189.141 33.711 189.141 cv
29.074 189.141 li
29.039 189.141 29.012 189.133 28.984 189.117 cv
28.957 189.102 28.93 189.078 28.906 189.039 cv
28.879 189.008 28.859 188.957 28.848 188.895 cv
28.832 188.836 28.824 188.766 28.828 188.676 cv
28.824 188.598 28.832 188.523 28.848 188.461 cv
28.859 188.402 28.875 188.355 28.898 188.316 cv
28.914 188.281 28.941 188.25 28.973 188.227 cv
29.004 188.207 29.035 188.199 29.074 188.195 cv
30.926 188.195 li
30.926 181.449 li
29.211 182.469 li
29.121 182.52 29.051 182.547 29.004 182.555 cv
28.949 182.562 28.906 182.555 28.875 182.523 cv
28.84 182.496 28.82 182.445 28.809 182.375 cv
28.797 182.309 28.789 182.223 28.793 182.113 cv
28.789 182.039 28.793 181.973 28.805 181.914 cv
28.809 181.863 28.82 181.816 28.836 181.777 cv
28.848 181.742 28.867 181.711 28.891 181.684 cv
28.914 181.656 28.945 181.629 28.992 181.602 cv
31.035 180.289 li
31.051 180.277 31.07 180.266 31.102 180.258 cv
31.125 180.25 31.16 180.242 31.207 180.23 cv
31.246 180.223 31.297 180.215 31.352 180.211 cv
31.406 180.211 31.473 180.211 31.559 180.207 cv
31.664 180.211 31.758 180.215 31.832 180.223 cv
31.902 180.23 31.957 180.246 32.004 180.262 cv
32.043 180.281 32.07 180.301 32.086 180.324 cv
32.094 180.352 32.102 180.375 32.105 180.398 cv
32.105 188.195 li
33.711 188.195 li
33.746 188.199 33.781 188.207 33.813 188.227 cv
33.844 188.25 33.867 188.281 33.891 188.316 cv
33.906 188.355 33.922 188.402 33.938 188.461 cv
33.945 188.523 33.953 188.598 33.957 188.676 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.348 184.684 mo
41.344 185.367 41.293 185.988 41.188 186.551 cv
41.078 187.113 40.898 187.598 40.652 188 cv
40.398 188.406 40.07 188.719 39.672 188.937 cv
39.266 189.16 38.773 189.27 38.188 189.27 cv
37.629 189.27 37.156 189.172 36.777 188.973 cv
36.395 188.777 36.09 188.484 35.855 188.098 cv
35.621 187.711 35.453 187.238 35.359 186.672 cv
35.258 186.109 35.211 185.461 35.211 184.727 cv
35.211 184.055 35.266 183.434 35.375 182.867 cv
35.484 182.305 35.66 181.82 35.91 181.414 cv
36.152 181.012 36.477 180.699 36.883 180.473 cv
37.281 180.254 37.777 180.141 38.367 180.141 cv
38.926 180.141 39.398 180.242 39.781 180.437 cv
40.164 180.641 40.469 180.934 40.703 181.316 cv
40.934 181.707 41.102 182.18 41.199 182.742 cv
41.297 183.305 41.344 183.953 41.348 184.684 cv
cp
40.141 184.766 mo
40.137 184.324 40.121 183.926 40.094 183.574 cv
40.059 183.223 40.012 182.914 39.953 182.645 cv
39.887 182.375 39.809 182.145 39.711 181.949 cv
39.613 181.758 39.496 181.598 39.359 181.469 cv
39.219 181.344 39.059 181.25 38.887 181.191 cv
38.707 181.137 38.512 181.109 38.297 181.105 cv
37.906 181.109 37.59 181.199 37.352 181.383 cv
37.105 181.566 36.914 181.82 36.777 182.137 cv
36.637 182.457 36.543 182.828 36.492 183.258 cv
36.441 183.687 36.418 184.152 36.418 184.645 cv
36.418 185.309 36.449 185.871 36.52 186.332 cv
36.586 186.801 36.695 187.18 36.848 187.469 cv
36.992 187.766 37.184 187.977 37.414 188.105 cv
37.645 188.242 37.926 188.309 38.258 188.305 cv
38.512 188.309 38.734 188.27 38.93 188.184 cv
39.121 188.105 39.289 187.984 39.43 187.828 cv
39.57 187.676 39.684 187.492 39.777 187.277 cv
39.863 187.062 39.938 186.824 39.996 186.562 cv
40.047 186.305 40.086 186.023 40.109 185.719 cv
40.129 185.414 40.137 185.098 40.141 184.766 cv
cp
f
44.273 188.395 mo
44.273 188.723 44.219 188.937 44.113 189.043 cv
44.004 189.148 43.809 189.199 43.527 189.203 cv
43.25 189.199 43.059 189.148 42.957 189.047 cv
42.848 188.941 42.797 188.73 42.801 188.414 cv
42.797 188.09 42.852 187.875 42.961 187.766 cv
43.066 187.66 43.262 187.605 43.547 187.605 cv
43.82 187.605 44.008 187.66 44.117 187.766 cv
44.219 187.871 44.273 188.082 44.273 188.395 cv
cp
f
51.977 184.684 mo
51.973 185.367 51.922 185.988 51.816 186.551 cv
51.707 187.113 51.527 187.598 51.281 188 cv
51.027 188.406 50.699 188.719 50.301 188.937 cv
49.895 189.16 49.402 189.27 48.816 189.27 cv
48.258 189.27 47.785 189.172 47.406 188.973 cv
47.023 188.777 46.719 188.484 46.484 188.098 cv
46.25 187.711 46.082 187.238 45.988 186.672 cv
45.887 186.109 45.84 185.461 45.84 184.727 cv
45.84 184.055 45.895 183.434 46.004 182.867 cv
46.113 182.305 46.289 181.82 46.539 181.414 cv
46.781 181.012 47.105 180.699 47.512 180.473 cv
47.91 180.254 48.406 180.141 48.996 180.141 cv
49.555 180.141 50.027 180.242 50.41 180.437 cv
50.793 180.641 51.098 180.934 51.332 181.316 cv
51.563 181.707 51.73 182.18 51.828 182.742 cv
51.926 183.305 51.973 183.953 51.977 184.684 cv
cp
50.77 184.766 mo
50.766 184.324 50.75 183.926 50.723 183.574 cv
50.688 183.223 50.641 182.914 50.582 182.645 cv
50.516 182.375 50.438 182.145 50.34 181.949 cv
50.242 181.758 50.125 181.598 49.988 181.469 cv
49.848 181.344 49.688 181.25 49.516 181.191 cv
49.336 181.137 49.141 181.109 48.926 181.105 cv
48.535 181.109 48.219 181.199 47.98 181.383 cv
47.734 181.566 47.543 181.82 47.406 182.137 cv
47.266 182.457 47.172 182.828 47.121 183.258 cv
47.07 183.687 47.047 184.152 47.047 184.645 cv
47.047 185.309 47.078 185.871 47.148 186.332 cv
47.215 186.801 47.324 187.18 47.477 187.469 cv
47.621 187.766 47.813 187.977 48.043 188.105 cv
48.273 188.242 48.555 188.309 48.887 188.305 cv
49.141 188.309 49.363 188.27 49.559 188.184 cv
49.75 188.105 49.918 187.984 50.059 187.828 cv
50.199 187.676 50.313 187.492 50.406 187.277 cv
50.492 187.062 50.566 186.824 50.625 186.562 cv
50.676 186.305 50.715 186.023 50.738 185.719 cv
50.758 185.414 50.766 185.098 50.77 184.766 cv
cp
f
59.094 184.684 mo
59.09 185.367 59.039 185.988 58.934 186.551 cv
58.824 187.113 58.645 187.598 58.398 188 cv
58.145 188.406 57.816 188.719 57.418 188.937 cv
57.012 189.16 56.52 189.27 55.934 189.27 cv
55.375 189.27 54.902 189.172 54.523 188.973 cv
54.141 188.777 53.836 188.484 53.602 188.098 cv
53.367 187.711 53.199 187.238 53.105 186.672 cv
53.004 186.109 52.957 185.461 52.957 184.727 cv
52.957 184.055 53.012 183.434 53.121 182.867 cv
53.23 182.305 53.406 181.82 53.656 181.414 cv
53.898 181.012 54.223 180.699 54.629 180.473 cv
55.027 180.254 55.523 180.141 56.113 180.141 cv
56.672 180.141 57.145 180.242 57.527 180.437 cv
57.91 180.641 58.215 180.934 58.449 181.316 cv
58.68 181.707 58.848 182.18 58.945 182.742 cv
59.043 183.305 59.09 183.953 59.094 184.684 cv
cp
57.887 184.766 mo
57.883 184.324 57.867 183.926 57.84 183.574 cv
57.805 183.223 57.758 182.914 57.699 182.645 cv
57.633 182.375 57.555 182.145 57.457 181.949 cv
57.359 181.758 57.242 181.598 57.105 181.469 cv
56.965 181.344 56.805 181.25 56.633 181.191 cv
56.453 181.137 56.258 181.109 56.043 181.105 cv
55.652 181.109 55.336 181.199 55.098 181.383 cv
54.852 181.566 54.66 181.82 54.523 182.137 cv
54.383 182.457 54.289 182.828 54.238 183.258 cv
54.188 183.687 54.164 184.152 54.164 184.645 cv
54.164 185.309 54.195 185.871 54.266 186.332 cv
54.332 186.801 54.441 187.18 54.594 187.469 cv
54.738 187.766 54.93 187.977 55.16 188.105 cv
55.391 188.242 55.672 188.309 56.004 188.305 cv
56.258 188.309 56.48 188.27 56.676 188.184 cv
56.867 188.105 57.035 187.984 57.176 187.828 cv
57.316 187.676 57.43 187.492 57.523 187.277 cv
57.609 187.062 57.684 186.824 57.742 186.562 cv
57.793 186.305 57.832 186.023 57.855 185.719 cv
57.875 185.414 57.883 185.098 57.887 184.766 cv
cp
f
27.59 136.738 mo
59.504 136.738 li
59.504 153.828 li
27.59 153.828 li
cp
0 0 0 0 cmyk
ef
33.957 149.637 mo
33.953 149.727 33.945 149.797 33.934 149.855 cv
33.918 149.918 33.898 149.969 33.879 150 cv
33.855 150.039 33.832 150.062 33.801 150.078 cv
33.77 150.094 33.738 150.102 33.711 150.102 cv
29.074 150.102 li
29.039 150.102 29.012 150.094 28.984 150.078 cv
28.957 150.062 28.93 150.039 28.906 150 cv
28.879 149.969 28.859 149.918 28.848 149.855 cv
28.832 149.797 28.824 149.727 28.828 149.637 cv
28.824 149.559 28.832 149.484 28.848 149.422 cv
28.859 149.363 28.875 149.316 28.898 149.277 cv
28.914 149.242 28.941 149.211 28.973 149.187 cv
29.004 149.168 29.035 149.16 29.074 149.156 cv
30.926 149.156 li
30.926 142.41 li
29.211 143.43 li
29.121 143.48 29.051 143.508 29.004 143.516 cv
28.949 143.523 28.906 143.516 28.875 143.484 cv
28.84 143.457 28.82 143.406 28.809 143.336 cv
28.797 143.27 28.789 143.184 28.793 143.074 cv
28.789 143 28.793 142.934 28.805 142.875 cv
28.809 142.824 28.82 142.777 28.836 142.738 cv
28.848 142.703 28.867 142.672 28.891 142.645 cv
28.914 142.617 28.945 142.59 28.992 142.562 cv
31.035 141.25 li
31.051 141.238 31.07 141.227 31.102 141.219 cv
31.125 141.211 31.16 141.203 31.207 141.191 cv
31.246 141.184 31.297 141.176 31.352 141.172 cv
31.406 141.172 31.473 141.172 31.559 141.168 cv
31.664 141.172 31.758 141.176 31.832 141.184 cv
31.902 141.191 31.957 141.207 32.004 141.223 cv
32.043 141.242 32.07 141.262 32.086 141.285 cv
32.094 141.312 32.102 141.336 32.105 141.359 cv
32.105 149.156 li
33.711 149.156 li
33.746 149.16 33.781 149.168 33.813 149.187 cv
33.844 149.211 33.867 149.242 33.891 149.277 cv
33.906 149.316 33.922 149.363 33.938 149.422 cv
33.945 149.484 33.953 149.559 33.957 149.637 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.074 149.637 mo
41.07 149.727 41.063 149.797 41.051 149.855 cv
41.035 149.918 41.016 149.969 40.996 150 cv
40.973 150.039 40.949 150.062 40.918 150.078 cv
40.887 150.094 40.855 150.102 40.828 150.102 cv
36.191 150.102 li
36.156 150.102 36.129 150.094 36.102 150.078 cv
36.074 150.062 36.047 150.039 36.023 150 cv
35.996 149.969 35.977 149.918 35.965 149.855 cv
35.949 149.797 35.941 149.727 35.945 149.637 cv
35.941 149.559 35.949 149.484 35.965 149.422 cv
35.977 149.363 35.992 149.316 36.016 149.277 cv
36.031 149.242 36.059 149.211 36.09 149.187 cv
36.121 149.168 36.152 149.16 36.191 149.156 cv
38.043 149.156 li
38.043 142.41 li
36.328 143.43 li
36.238 143.48 36.168 143.508 36.121 143.516 cv
36.066 143.523 36.023 143.516 35.992 143.484 cv
35.957 143.457 35.938 143.406 35.926 143.336 cv
35.914 143.27 35.906 143.184 35.91 143.074 cv
35.906 143 35.91 142.934 35.922 142.875 cv
35.926 142.824 35.938 142.777 35.953 142.738 cv
35.965 142.703 35.984 142.672 36.008 142.645 cv
36.031 142.617 36.063 142.59 36.109 142.562 cv
38.152 141.25 li
38.168 141.238 38.188 141.227 38.219 141.219 cv
38.242 141.211 38.277 141.203 38.324 141.191 cv
38.363 141.184 38.414 141.176 38.469 141.172 cv
38.523 141.172 38.59 141.172 38.676 141.168 cv
38.781 141.172 38.875 141.176 38.949 141.184 cv
39.02 141.191 39.074 141.207 39.121 141.223 cv
39.16 141.242 39.188 141.262 39.203 141.285 cv
39.211 141.312 39.219 141.336 39.223 141.359 cv
39.223 149.156 li
40.828 149.156 li
40.863 149.16 40.898 149.168 40.93 149.187 cv
40.961 149.211 40.984 149.242 41.008 149.277 cv
41.023 149.316 41.039 149.363 41.055 149.422 cv
41.063 149.484 41.07 149.559 41.074 149.637 cv
cp
f
44.273 149.355 mo
44.273 149.684 44.219 149.898 44.113 150.004 cv
44.004 150.109 43.809 150.16 43.527 150.164 cv
43.25 150.16 43.059 150.109 42.957 150.008 cv
42.848 149.902 42.797 149.691 42.801 149.375 cv
42.797 149.051 42.852 148.836 42.961 148.727 cv
43.066 148.621 43.262 148.566 43.547 148.566 cv
43.82 148.566 44.008 148.621 44.117 148.727 cv
44.219 148.832 44.273 149.043 44.273 149.355 cv
cp
f
51.684 149.594 mo
51.68 149.68 51.676 149.754 51.664 149.816 cv
51.652 149.883 51.637 149.937 51.617 149.977 cv
51.594 150.023 51.566 150.055 51.535 150.07 cv
51.5 150.094 51.461 150.102 51.422 150.102 cv
46.52 150.102 li
46.457 150.102 46.398 150.094 46.352 150.078 cv
46.301 150.062 46.262 150.039 46.227 150 cv
46.191 149.969 46.164 149.914 46.152 149.844 cv
46.133 149.773 46.125 149.687 46.129 149.586 cv
46.125 149.496 46.129 149.418 46.137 149.348 cv
46.141 149.281 46.156 149.223 46.184 149.168 cv
46.207 149.117 46.238 149.062 46.273 149.008 cv
46.309 148.957 46.352 148.902 46.41 148.84 cv
48.184 147.016 li
48.594 146.598 48.922 146.223 49.172 145.887 cv
49.418 145.559 49.609 145.254 49.742 144.977 cv
49.875 144.703 49.961 144.453 50.008 144.227 cv
50.047 144.004 50.07 143.793 50.07 143.598 cv
50.07 143.402 50.035 143.219 49.969 143.039 cv
49.902 142.867 49.809 142.711 49.684 142.574 cv
49.559 142.445 49.402 142.34 49.215 142.258 cv
49.027 142.184 48.809 142.145 48.563 142.141 cv
48.273 142.145 48.016 142.184 47.789 142.258 cv
47.559 142.34 47.359 142.426 47.188 142.512 cv
47.016 142.605 46.871 142.687 46.754 142.766 cv
46.637 142.844 46.551 142.883 46.5 142.883 cv
46.465 142.883 46.434 142.875 46.41 142.855 cv
46.379 142.84 46.359 142.809 46.344 142.766 cv
46.328 142.727 46.313 142.672 46.305 142.602 cv
46.293 142.535 46.289 142.453 46.293 142.355 cv
46.289 142.289 46.293 142.23 46.301 142.18 cv
46.305 142.129 46.313 142.086 46.324 142.047 cv
46.332 142.012 46.348 141.977 46.367 141.945 cv
46.387 141.914 46.422 141.875 46.48 141.824 cv
46.531 141.777 46.625 141.711 46.762 141.629 cv
46.895 141.547 47.066 141.469 47.27 141.387 cv
47.473 141.309 47.695 141.238 47.941 141.184 cv
48.184 141.129 48.441 141.102 48.715 141.102 cv
49.141 141.102 49.516 141.164 49.84 141.285 cv
50.16 141.406 50.426 141.57 50.641 141.781 cv
50.852 141.992 51.012 142.238 51.117 142.512 cv
51.223 142.793 51.277 143.09 51.277 143.402 cv
51.277 143.691 51.25 143.973 51.199 144.25 cv
51.148 144.535 51.043 144.84 50.883 145.164 cv
50.719 145.492 50.484 145.855 50.18 146.254 cv
49.871 146.656 49.465 147.117 48.961 147.633 cv
47.555 149.102 li
51.414 149.102 li
51.445 149.105 51.48 149.117 51.52 149.133 cv
51.551 149.156 51.582 149.187 51.609 149.227 cv
51.633 149.27 51.652 149.32 51.664 149.379 cv
51.676 149.445 51.68 149.516 51.684 149.594 cv
cp
f
58.758 147.25 mo
58.758 147.727 58.676 148.148 58.516 148.52 cv
58.355 148.891 58.129 149.203 57.84 149.457 cv
57.543 149.711 57.195 149.906 56.793 150.035 cv
56.387 150.168 55.938 150.23 55.445 150.23 cv
55.168 150.23 54.906 150.211 54.664 150.172 cv
54.414 150.133 54.195 150.086 54.008 150.031 cv
53.813 149.977 53.656 149.922 53.531 149.863 cv
53.406 149.812 53.328 149.77 53.297 149.734 cv
53.262 149.703 53.238 149.672 53.227 149.645 cv
53.211 149.617 53.195 149.586 53.188 149.543 cv
53.172 149.508 53.164 149.457 53.164 149.395 cv
53.156 149.336 53.156 149.266 53.156 149.184 cv
53.156 149.109 53.16 149.039 53.168 148.977 cv
53.176 148.914 53.188 148.863 53.207 148.824 cv
53.223 148.785 53.242 148.758 53.27 148.738 cv
53.293 148.723 53.324 148.715 53.355 148.711 cv
53.402 148.715 53.473 148.742 53.566 148.797 cv
53.66 148.855 53.789 148.918 53.953 148.984 cv
54.117 149.051 54.316 149.113 54.559 149.172 cv
54.793 149.23 55.078 149.258 55.414 149.258 cv
55.715 149.258 55.996 149.223 56.254 149.148 cv
56.508 149.078 56.73 148.965 56.918 148.809 cv
57.102 148.656 57.246 148.461 57.352 148.223 cv
57.457 147.988 57.508 147.699 57.512 147.359 cv
57.508 147.078 57.465 146.828 57.375 146.609 cv
57.285 146.391 57.148 146.211 56.965 146.066 cv
56.777 145.926 56.543 145.82 56.262 145.746 cv
55.977 145.676 55.637 145.637 55.25 145.637 cv
54.965 145.637 54.727 145.652 54.527 145.68 cv
54.324 145.711 54.137 145.727 53.965 145.723 cv
53.836 145.727 53.742 145.695 53.691 145.633 cv
53.633 145.574 53.605 145.461 53.609 145.289 cv
53.609 141.676 li
53.605 141.527 53.641 141.418 53.715 141.34 cv
53.781 141.27 53.883 141.23 54.02 141.23 cv
57.949 141.23 li
57.984 141.23 58.02 141.242 58.055 141.262 cv
58.086 141.285 58.113 141.316 58.141 141.355 cv
58.16 141.398 58.176 141.449 58.191 141.512 cv
58.199 141.578 58.207 141.656 58.211 141.738 cv
58.207 141.906 58.184 142.031 58.145 142.121 cv
58.098 142.215 58.039 142.262 57.961 142.258 cv
54.789 142.258 li
54.789 144.746 li
54.941 144.727 55.098 144.715 55.262 144.707 cv
55.418 144.703 55.605 144.699 55.82 144.699 cv
56.305 144.699 56.73 144.762 57.098 144.883 cv
57.461 145.004 57.766 145.176 58.016 145.395 cv
58.258 145.621 58.445 145.887 58.57 146.199 cv
58.695 146.516 58.758 146.867 58.758 147.25 cv
cp
f
27.59 97.691 mo
59.504 97.691 li
59.504 114.781 li
27.59 114.781 li
cp
0 0 0 0 cmyk
ef
33.957 110.555 mo
33.953 110.645 33.945 110.715 33.934 110.773 cv
33.918 110.836 33.898 110.887 33.879 110.918 cv
33.855 110.957 33.832 110.98 33.801 110.996 cv
33.77 111.012 33.738 111.02 33.711 111.02 cv
29.074 111.02 li
29.039 111.02 29.012 111.012 28.984 110.996 cv
28.957 110.98 28.93 110.957 28.906 110.918 cv
28.879 110.887 28.859 110.836 28.848 110.773 cv
28.832 110.715 28.824 110.645 28.828 110.555 cv
28.824 110.477 28.832 110.402 28.848 110.34 cv
28.859 110.281 28.875 110.234 28.898 110.195 cv
28.914 110.16 28.941 110.129 28.973 110.105 cv
29.004 110.086 29.035 110.078 29.074 110.074 cv
30.926 110.074 li
30.926 103.328 li
29.211 104.348 li
29.121 104.398 29.051 104.426 29.004 104.434 cv
28.949 104.441 28.906 104.434 28.875 104.402 cv
28.84 104.375 28.82 104.324 28.809 104.254 cv
28.797 104.187 28.789 104.102 28.793 103.992 cv
28.789 103.918 28.793 103.852 28.805 103.793 cv
28.809 103.742 28.82 103.695 28.836 103.656 cv
28.848 103.621 28.867 103.59 28.891 103.562 cv
28.914 103.535 28.945 103.508 28.992 103.48 cv
31.035 102.168 li
31.051 102.156 31.07 102.145 31.102 102.137 cv
31.125 102.129 31.16 102.121 31.207 102.109 cv
31.246 102.102 31.297 102.094 31.352 102.09 cv
31.406 102.09 31.473 102.09 31.559 102.086 cv
31.664 102.09 31.758 102.094 31.832 102.102 cv
31.902 102.109 31.957 102.125 32.004 102.141 cv
32.043 102.16 32.07 102.18 32.086 102.203 cv
32.094 102.23 32.102 102.254 32.105 102.277 cv
32.105 110.074 li
33.711 110.074 li
33.746 110.078 33.781 110.086 33.813 110.105 cv
33.844 110.129 33.867 110.16 33.891 110.195 cv
33.906 110.234 33.922 110.281 33.938 110.34 cv
33.945 110.402 33.953 110.477 33.957 110.555 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.055 110.512 mo
41.051 110.598 41.047 110.672 41.035 110.734 cv
41.023 110.801 41.008 110.855 40.988 110.895 cv
40.965 110.941 40.938 110.973 40.906 110.988 cv
40.871 111.012 40.832 111.02 40.793 111.02 cv
35.891 111.02 li
35.828 111.02 35.77 111.012 35.723 110.996 cv
35.672 110.98 35.633 110.957 35.598 110.918 cv
35.563 110.887 35.535 110.832 35.523 110.762 cv
35.504 110.691 35.496 110.605 35.5 110.504 cv
35.496 110.414 35.5 110.336 35.508 110.266 cv
35.512 110.199 35.527 110.141 35.555 110.086 cv
35.578 110.035 35.609 109.98 35.645 109.926 cv
35.68 109.875 35.723 109.82 35.781 109.758 cv
37.555 107.934 li
37.965 107.516 38.293 107.141 38.543 106.805 cv
38.789 106.477 38.98 106.172 39.113 105.895 cv
39.246 105.621 39.332 105.371 39.379 105.145 cv
39.418 104.922 39.441 104.711 39.441 104.516 cv
39.441 104.32 39.406 104.137 39.34 103.957 cv
39.273 103.785 39.18 103.629 39.055 103.492 cv
38.93 103.363 38.773 103.258 38.586 103.176 cv
38.398 103.102 38.18 103.062 37.934 103.059 cv
37.645 103.062 37.387 103.102 37.16 103.176 cv
36.93 103.258 36.73 103.344 36.559 103.43 cv
36.387 103.523 36.242 103.605 36.125 103.684 cv
36.008 103.762 35.922 103.801 35.871 103.801 cv
35.836 103.801 35.805 103.793 35.781 103.773 cv
35.75 103.758 35.73 103.727 35.715 103.684 cv
35.699 103.645 35.684 103.59 35.676 103.52 cv
35.664 103.453 35.66 103.371 35.664 103.273 cv
35.66 103.207 35.664 103.148 35.672 103.098 cv
35.676 103.047 35.684 103.004 35.695 102.965 cv
35.703 102.93 35.719 102.895 35.738 102.863 cv
35.758 102.832 35.793 102.793 35.852 102.742 cv
35.902 102.695 35.996 102.629 36.133 102.547 cv
36.266 102.465 36.438 102.387 36.641 102.305 cv
36.844 102.227 37.066 102.156 37.313 102.102 cv
37.555 102.047 37.813 102.02 38.086 102.02 cv
38.512 102.02 38.887 102.082 39.211 102.203 cv
39.531 102.324 39.797 102.488 40.012 102.699 cv
40.223 102.91 40.383 103.156 40.488 103.43 cv
40.594 103.711 40.648 104.008 40.648 104.32 cv
40.648 104.609 40.621 104.891 40.57 105.168 cv
40.52 105.453 40.414 105.758 40.254 106.082 cv
40.09 106.41 39.855 106.773 39.551 107.172 cv
39.242 107.574 38.836 108.035 38.332 108.551 cv
36.926 110.02 li
40.785 110.02 li
40.816 110.023 40.852 110.035 40.891 110.051 cv
40.922 110.074 40.953 110.105 40.98 110.145 cv
41.004 110.187 41.023 110.238 41.035 110.297 cv
41.047 110.363 41.051 110.434 41.055 110.512 cv
cp
f
44.273 110.273 mo
44.273 110.602 44.219 110.816 44.113 110.922 cv
44.004 111.027 43.809 111.078 43.527 111.082 cv
43.25 111.078 43.059 111.027 42.957 110.926 cv
42.848 110.82 42.797 110.609 42.801 110.293 cv
42.797 109.969 42.852 109.754 42.961 109.645 cv
43.066 109.539 43.262 109.484 43.547 109.484 cv
43.82 109.484 44.008 109.539 44.117 109.645 cv
44.219 109.75 44.273 109.961 44.273 110.273 cv
cp
f
51.641 108.168 mo
51.641 108.645 51.559 109.066 51.398 109.437 cv
51.238 109.809 51.012 110.121 50.723 110.375 cv
50.426 110.629 50.078 110.824 49.676 110.953 cv
49.27 111.086 48.82 111.148 48.328 111.148 cv
48.051 111.148 47.789 111.129 47.547 111.09 cv
47.297 111.051 47.078 111.004 46.891 110.949 cv
46.695 110.895 46.539 110.84 46.414 110.781 cv
46.289 110.73 46.211 110.687 46.18 110.652 cv
46.145 110.621 46.121 110.59 46.109 110.562 cv
46.094 110.535 46.078 110.504 46.07 110.461 cv
46.055 110.426 46.047 110.375 46.047 110.312 cv
46.039 110.254 46.039 110.184 46.039 110.102 cv
46.039 110.027 46.043 109.957 46.051 109.895 cv
46.059 109.832 46.07 109.781 46.09 109.742 cv
46.105 109.703 46.125 109.676 46.152 109.656 cv
46.176 109.641 46.207 109.633 46.238 109.629 cv
46.285 109.633 46.355 109.66 46.449 109.715 cv
46.543 109.773 46.672 109.836 46.836 109.902 cv
47 109.969 47.199 110.031 47.441 110.09 cv
47.676 110.148 47.961 110.176 48.297 110.176 cv
48.598 110.176 48.879 110.141 49.137 110.066 cv
49.391 109.996 49.613 109.883 49.801 109.727 cv
49.984 109.574 50.129 109.379 50.234 109.141 cv
50.34 108.906 50.391 108.617 50.395 108.277 cv
50.391 107.996 50.348 107.746 50.258 107.527 cv
50.168 107.309 50.031 107.129 49.848 106.984 cv
49.66 106.844 49.426 106.738 49.145 106.664 cv
48.859 106.594 48.52 106.555 48.133 106.555 cv
47.848 106.555 47.609 106.57 47.41 106.598 cv
47.207 106.629 47.02 106.645 46.848 106.641 cv
46.719 106.645 46.625 106.613 46.574 106.551 cv
46.516 106.492 46.488 106.379 46.492 106.207 cv
46.492 102.594 li
46.488 102.445 46.523 102.336 46.598 102.258 cv
46.664 102.187 46.766 102.148 46.902 102.148 cv
50.832 102.148 li
50.867 102.148 50.902 102.16 50.938 102.18 cv
50.969 102.203 50.996 102.234 51.023 102.273 cv
51.043 102.316 51.059 102.367 51.074 102.43 cv
51.082 102.496 51.09 102.574 51.094 102.656 cv
51.09 102.824 51.066 102.949 51.027 103.039 cv
50.98 103.133 50.922 103.18 50.844 103.176 cv
47.672 103.176 li
47.672 105.664 li
47.824 105.645 47.98 105.633 48.145 105.625 cv
48.301 105.621 48.488 105.617 48.703 105.617 cv
49.188 105.617 49.613 105.68 49.98 105.801 cv
50.344 105.922 50.648 106.094 50.898 106.312 cv
51.141 106.539 51.328 106.805 51.453 107.117 cv
51.578 107.434 51.641 107.785 51.641 108.168 cv
cp
f
59.094 106.562 mo
59.09 107.246 59.039 107.867 58.934 108.43 cv
58.824 108.992 58.645 109.477 58.398 109.879 cv
58.145 110.285 57.816 110.598 57.418 110.816 cv
57.012 111.039 56.52 111.148 55.934 111.148 cv
55.375 111.148 54.902 111.051 54.523 110.852 cv
54.141 110.656 53.836 110.363 53.602 109.977 cv
53.367 109.59 53.199 109.117 53.105 108.551 cv
53.004 107.988 52.957 107.34 52.957 106.605 cv
52.957 105.934 53.012 105.312 53.121 104.746 cv
53.23 104.184 53.406 103.699 53.656 103.293 cv
53.898 102.891 54.223 102.578 54.629 102.352 cv
55.027 102.133 55.523 102.02 56.113 102.02 cv
56.672 102.02 57.145 102.121 57.527 102.316 cv
57.91 102.52 58.215 102.812 58.449 103.195 cv
58.68 103.586 58.848 104.059 58.945 104.621 cv
59.043 105.184 59.09 105.832 59.094 106.562 cv
cp
57.887 106.645 mo
57.883 106.203 57.867 105.805 57.84 105.453 cv
57.805 105.102 57.758 104.793 57.699 104.523 cv
57.633 104.254 57.555 104.023 57.457 103.828 cv
57.359 103.637 57.242 103.477 57.105 103.348 cv
56.965 103.223 56.805 103.129 56.633 103.07 cv
56.453 103.016 56.258 102.988 56.043 102.984 cv
55.652 102.988 55.336 103.078 55.098 103.262 cv
54.852 103.445 54.66 103.699 54.523 104.016 cv
54.383 104.336 54.289 104.707 54.238 105.137 cv
54.188 105.566 54.164 106.031 54.164 106.523 cv
54.164 107.187 54.195 107.75 54.266 108.211 cv
54.332 108.68 54.441 109.059 54.594 109.348 cv
54.738 109.645 54.93 109.855 55.16 109.984 cv
55.391 110.121 55.672 110.187 56.004 110.184 cv
56.258 110.187 56.48 110.148 56.676 110.062 cv
56.867 109.984 57.035 109.863 57.176 109.707 cv
57.316 109.555 57.43 109.371 57.523 109.156 cv
57.609 108.941 57.684 108.703 57.742 108.441 cv
57.793 108.184 57.832 107.902 57.855 107.598 cv
57.875 107.293 57.883 106.977 57.887 106.645 cv
cp
f
27.59 58.629 mo
59.504 58.629 li
59.504 75.719 li
27.59 75.719 li
cp
0 0 0 0 cmyk
ef
33.957 71.516 mo
33.953 71.605 33.945 71.676 33.934 71.734 cv
33.918 71.797 33.898 71.848 33.879 71.879 cv
33.855 71.918 33.832 71.941 33.801 71.957 cv
33.77 71.973 33.738 71.98 33.711 71.98 cv
29.074 71.98 li
29.039 71.98 29.012 71.973 28.984 71.957 cv
28.957 71.941 28.93 71.918 28.906 71.879 cv
28.879 71.848 28.859 71.797 28.848 71.734 cv
28.832 71.676 28.824 71.605 28.828 71.516 cv
28.824 71.437 28.832 71.363 28.848 71.301 cv
28.859 71.242 28.875 71.195 28.898 71.156 cv
28.914 71.121 28.941 71.09 28.973 71.066 cv
29.004 71.047 29.035 71.039 29.074 71.035 cv
30.926 71.035 li
30.926 64.289 li
29.211 65.309 li
29.121 65.359 29.051 65.387 29.004 65.395 cv
28.949 65.402 28.906 65.395 28.875 65.363 cv
28.84 65.336 28.82 65.285 28.809 65.215 cv
28.797 65.148 28.789 65.062 28.793 64.953 cv
28.789 64.879 28.793 64.812 28.805 64.754 cv
28.809 64.703 28.82 64.656 28.836 64.617 cv
28.848 64.582 28.867 64.551 28.891 64.523 cv
28.914 64.496 28.945 64.469 28.992 64.441 cv
31.035 63.129 li
31.051 63.117 31.07 63.105 31.102 63.098 cv
31.125 63.09 31.16 63.082 31.207 63.07 cv
31.246 63.062 31.297 63.055 31.352 63.051 cv
31.406 63.051 31.473 63.051 31.559 63.047 cv
31.664 63.051 31.758 63.055 31.832 63.062 cv
31.902 63.07 31.957 63.086 32.004 63.102 cv
32.043 63.121 32.07 63.141 32.086 63.164 cv
32.094 63.191 32.102 63.215 32.105 63.238 cv
32.105 71.035 li
33.711 71.035 li
33.746 71.039 33.781 71.047 33.813 71.066 cv
33.844 71.09 33.867 71.121 33.891 71.156 cv
33.906 71.195 33.922 71.242 33.938 71.301 cv
33.945 71.363 33.953 71.437 33.957 71.516 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.984 69.445 mo
40.98 69.855 40.91 70.223 40.77 70.547 cv
40.625 70.875 40.422 71.156 40.16 71.387 cv
39.895 71.621 39.566 71.797 39.18 71.922 cv
38.789 72.047 38.352 72.109 37.867 72.109 cv
37.563 72.109 37.285 72.082 37.031 72.035 cv
36.77 71.988 36.539 71.937 36.344 71.867 cv
36.141 71.805 35.977 71.734 35.844 71.664 cv
35.711 71.594 35.625 71.543 35.594 71.508 cv
35.555 71.48 35.531 71.449 35.516 71.414 cv
35.496 71.383 35.477 71.344 35.465 71.297 cv
35.449 71.254 35.441 71.199 35.434 71.129 cv
35.426 71.066 35.422 70.984 35.426 70.883 cv
35.422 70.723 35.438 70.609 35.473 70.543 cv
35.504 70.48 35.551 70.445 35.613 70.445 cv
35.656 70.445 35.738 70.484 35.863 70.555 cv
35.984 70.633 36.145 70.711 36.34 70.793 cv
36.531 70.879 36.758 70.957 37.023 71.027 cv
37.281 71.102 37.574 71.137 37.895 71.137 cv
38.203 71.137 38.473 71.098 38.711 71.02 cv
38.941 70.941 39.141 70.832 39.301 70.691 cv
39.457 70.551 39.574 70.383 39.656 70.187 cv
39.734 69.992 39.773 69.781 39.777 69.555 cv
39.773 69.305 39.723 69.078 39.625 68.875 cv
39.52 68.676 39.371 68.504 39.18 68.355 cv
38.98 68.211 38.742 68.098 38.457 68.02 cv
38.172 67.941 37.848 67.902 37.484 67.902 cv
36.613 67.902 li
36.57 67.902 36.535 67.895 36.5 67.879 cv
36.465 67.863 36.434 67.836 36.41 67.797 cv
36.383 67.762 36.363 67.715 36.348 67.656 cv
36.332 67.598 36.324 67.52 36.324 67.422 cv
36.324 67.336 36.328 67.266 36.344 67.207 cv
36.352 67.152 36.371 67.105 36.402 67.07 cv
36.426 67.035 36.457 67.012 36.488 66.992 cv
36.52 66.98 36.555 66.973 36.598 66.969 cv
37.371 66.969 li
37.672 66.973 37.941 66.934 38.184 66.852 cv
38.418 66.777 38.621 66.664 38.793 66.516 cv
38.957 66.371 39.086 66.195 39.176 65.992 cv
39.266 65.789 39.313 65.562 39.313 65.309 cv
39.313 65.129 39.281 64.953 39.223 64.785 cv
39.16 64.621 39.07 64.477 38.953 64.352 cv
38.832 64.227 38.68 64.129 38.5 64.059 cv
38.313 63.988 38.102 63.953 37.859 63.953 cv
37.594 63.953 37.348 63.996 37.129 64.074 cv
36.902 64.156 36.707 64.242 36.535 64.332 cv
36.359 64.426 36.215 64.512 36.102 64.59 cv
35.988 64.672 35.906 64.711 35.863 64.707 cv
35.828 64.711 35.801 64.703 35.777 64.691 cv
35.75 64.68 35.73 64.656 35.715 64.621 cv
35.699 64.59 35.688 64.543 35.68 64.477 cv
35.672 64.418 35.668 64.336 35.672 64.234 cv
35.668 64.168 35.668 64.109 35.676 64.055 cv
35.676 64.004 35.688 63.957 35.703 63.914 cv
35.719 63.879 35.734 63.844 35.754 63.809 cv
35.77 63.781 35.801 63.742 35.844 63.695 cv
35.887 63.652 35.973 63.59 36.109 63.508 cv
36.238 63.426 36.402 63.348 36.598 63.266 cv
36.789 63.187 37.012 63.117 37.27 63.062 cv
37.52 63.008 37.793 62.98 38.09 62.98 cv
38.496 62.98 38.859 63.035 39.172 63.137 cv
39.484 63.246 39.742 63.395 39.953 63.582 cv
40.156 63.777 40.313 64.008 40.418 64.273 cv
40.52 64.543 40.57 64.836 40.574 65.16 cv
40.57 65.441 40.535 65.703 40.465 65.937 cv
40.391 66.18 40.281 66.391 40.141 66.574 cv
39.996 66.762 39.824 66.918 39.621 67.047 cv
39.414 67.18 39.176 67.273 38.906 67.32 cv
38.906 67.332 li
39.211 67.367 39.492 67.441 39.746 67.562 cv
40 67.684 40.219 67.836 40.402 68.02 cv
40.582 68.203 40.723 68.418 40.828 68.66 cv
40.93 68.906 40.98 69.168 40.984 69.445 cv
cp
f
44.273 71.234 mo
44.273 71.562 44.219 71.777 44.113 71.883 cv
44.004 71.988 43.809 72.039 43.527 72.043 cv
43.25 72.039 43.059 71.988 42.957 71.887 cv
42.848 71.781 42.797 71.57 42.801 71.254 cv
42.797 70.93 42.852 70.715 42.961 70.605 cv
43.066 70.5 43.262 70.445 43.547 70.445 cv
43.82 70.445 44.008 70.5 44.117 70.605 cv
44.219 70.711 44.273 70.922 44.273 71.234 cv
cp
f
51.813 63.617 mo
51.809 63.703 51.805 63.777 51.801 63.84 cv
51.793 63.91 51.785 63.973 51.773 64.031 cv
51.762 64.098 51.746 64.156 51.727 64.211 cv
51.703 64.27 51.68 64.332 51.656 64.391 cv
48.461 71.754 li
48.434 71.812 48.406 71.855 48.375 71.887 cv
48.34 71.922 48.297 71.949 48.242 71.969 cv
48.188 71.988 48.117 72 48.039 72.012 cv
47.953 72.016 47.855 72.02 47.738 72.023 cv
47.582 72.02 47.461 72.012 47.375 72 cv
47.289 71.984 47.227 71.969 47.188 71.937 cv
47.148 71.91 47.129 71.871 47.137 71.828 cv
47.137 71.785 47.152 71.734 47.184 71.672 cv
50.543 64.145 li
46.285 64.145 li
46.199 64.148 46.133 64.102 46.09 64.008 cv
46.047 63.918 46.027 63.789 46.027 63.625 cv
46.027 63.539 46.031 63.465 46.043 63.398 cv
46.055 63.336 46.07 63.281 46.094 63.238 cv
46.113 63.195 46.141 63.164 46.176 63.141 cv
46.207 63.121 46.246 63.109 46.285 63.109 cv
51.457 63.109 li
51.516 63.109 51.57 63.117 51.621 63.133 cv
51.668 63.148 51.703 63.176 51.73 63.215 cv
51.754 63.254 51.773 63.309 51.789 63.371 cv
51.801 63.437 51.809 63.52 51.813 63.617 cv
cp
f
58.758 69.129 mo
58.758 69.605 58.676 70.027 58.516 70.398 cv
58.355 70.77 58.129 71.082 57.84 71.336 cv
57.543 71.59 57.195 71.785 56.793 71.914 cv
56.387 72.047 55.938 72.109 55.445 72.109 cv
55.168 72.109 54.906 72.09 54.664 72.051 cv
54.414 72.012 54.195 71.965 54.008 71.91 cv
53.813 71.855 53.656 71.801 53.531 71.742 cv
53.406 71.691 53.328 71.648 53.297 71.613 cv
53.262 71.582 53.238 71.551 53.227 71.523 cv
53.211 71.496 53.195 71.465 53.188 71.422 cv
53.172 71.387 53.164 71.336 53.164 71.273 cv
53.156 71.215 53.156 71.145 53.156 71.062 cv
53.156 70.988 53.16 70.918 53.168 70.855 cv
53.176 70.793 53.188 70.742 53.207 70.703 cv
53.223 70.664 53.242 70.637 53.27 70.617 cv
53.293 70.602 53.324 70.594 53.355 70.59 cv
53.402 70.594 53.473 70.621 53.566 70.676 cv
53.66 70.734 53.789 70.797 53.953 70.863 cv
54.117 70.93 54.316 70.992 54.559 71.051 cv
54.793 71.109 55.078 71.137 55.414 71.137 cv
55.715 71.137 55.996 71.102 56.254 71.027 cv
56.508 70.957 56.73 70.844 56.918 70.687 cv
57.102 70.535 57.246 70.34 57.352 70.102 cv
57.457 69.867 57.508 69.578 57.512 69.238 cv
57.508 68.957 57.465 68.707 57.375 68.488 cv
57.285 68.27 57.148 68.09 56.965 67.945 cv
56.777 67.805 56.543 67.699 56.262 67.625 cv
55.977 67.555 55.637 67.516 55.25 67.516 cv
54.965 67.516 54.727 67.531 54.527 67.559 cv
54.324 67.59 54.137 67.605 53.965 67.602 cv
53.836 67.605 53.742 67.574 53.691 67.512 cv
53.633 67.453 53.605 67.34 53.609 67.168 cv
53.609 63.555 li
53.605 63.406 53.641 63.297 53.715 63.219 cv
53.781 63.148 53.883 63.109 54.02 63.109 cv
57.949 63.109 li
57.984 63.109 58.02 63.121 58.055 63.141 cv
58.086 63.164 58.113 63.195 58.141 63.234 cv
58.16 63.277 58.176 63.328 58.191 63.391 cv
58.199 63.457 58.207 63.535 58.211 63.617 cv
58.207 63.785 58.184 63.91 58.145 64 cv
58.098 64.094 58.039 64.141 57.961 64.137 cv
54.789 64.137 li
54.789 66.625 li
54.941 66.605 55.098 66.594 55.262 66.586 cv
55.418 66.582 55.605 66.578 55.82 66.578 cv
56.305 66.578 56.73 66.641 57.098 66.762 cv
57.461 66.883 57.766 67.055 58.016 67.273 cv
58.258 67.5 58.445 67.766 58.57 68.078 cv
58.695 68.395 58.758 68.746 58.758 69.129 cv
cp
f
27.59 19.578 mo
59.504 19.578 li
59.504 36.672 li
27.59 36.672 li
cp
0 0 0 0 cmyk
ef
33.957 32.434 mo
33.953 32.523 33.945 32.594 33.934 32.652 cv
33.918 32.715 33.898 32.766 33.879 32.797 cv
33.855 32.836 33.832 32.859 33.801 32.875 cv
33.77 32.891 33.738 32.898 33.711 32.898 cv
29.074 32.898 li
29.039 32.898 29.012 32.891 28.984 32.875 cv
28.957 32.859 28.93 32.836 28.906 32.797 cv
28.879 32.766 28.859 32.715 28.848 32.652 cv
28.832 32.594 28.824 32.523 28.828 32.434 cv
28.824 32.355 28.832 32.281 28.848 32.219 cv
28.859 32.16 28.875 32.113 28.898 32.074 cv
28.914 32.039 28.941 32.008 28.973 31.984 cv
29.004 31.965 29.035 31.957 29.074 31.953 cv
30.926 31.953 li
30.926 25.207 li
29.211 26.227 li
29.121 26.277 29.051 26.305 29.004 26.312 cv
28.949 26.32 28.906 26.312 28.875 26.281 cv
28.84 26.254 28.82 26.203 28.809 26.133 cv
28.797 26.066 28.789 25.98 28.793 25.871 cv
28.789 25.797 28.793 25.73 28.805 25.672 cv
28.809 25.621 28.82 25.574 28.836 25.535 cv
28.848 25.5 28.867 25.469 28.891 25.441 cv
28.914 25.414 28.945 25.387 28.992 25.359 cv
31.035 24.047 li
31.051 24.035 31.07 24.023 31.102 24.016 cv
31.125 24.008 31.16 24 31.207 23.988 cv
31.246 23.98 31.297 23.973 31.352 23.969 cv
31.406 23.969 31.473 23.969 31.559 23.965 cv
31.664 23.969 31.758 23.973 31.832 23.98 cv
31.902 23.988 31.957 24.004 32.004 24.02 cv
32.043 24.039 32.07 24.059 32.086 24.082 cv
32.094 24.109 32.102 24.133 32.105 24.156 cv
32.105 31.953 li
33.711 31.953 li
33.746 31.957 33.781 31.965 33.813 31.984 cv
33.844 32.008 33.867 32.039 33.891 32.074 cv
33.906 32.113 33.922 32.16 33.938 32.219 cv
33.945 32.281 33.953 32.355 33.957 32.434 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.012 30.047 mo
41.012 30.523 40.93 30.945 40.77 31.316 cv
40.609 31.687 40.383 32 40.094 32.254 cv
39.797 32.508 39.449 32.703 39.047 32.832 cv
38.641 32.965 38.191 33.027 37.699 33.027 cv
37.422 33.027 37.16 33.008 36.918 32.969 cv
36.668 32.93 36.449 32.883 36.262 32.828 cv
36.066 32.773 35.91 32.719 35.785 32.66 cv
35.66 32.609 35.582 32.566 35.551 32.531 cv
35.516 32.5 35.492 32.469 35.48 32.441 cv
35.465 32.414 35.449 32.383 35.441 32.34 cv
35.426 32.305 35.418 32.254 35.418 32.191 cv
35.41 32.133 35.41 32.062 35.41 31.98 cv
35.41 31.906 35.414 31.836 35.422 31.773 cv
35.43 31.711 35.441 31.66 35.461 31.621 cv
35.477 31.582 35.496 31.555 35.523 31.535 cv
35.547 31.52 35.578 31.512 35.609 31.508 cv
35.656 31.512 35.727 31.539 35.82 31.594 cv
35.914 31.652 36.043 31.715 36.207 31.781 cv
36.371 31.848 36.57 31.91 36.813 31.969 cv
37.047 32.027 37.332 32.055 37.668 32.055 cv
37.969 32.055 38.25 32.02 38.508 31.945 cv
38.762 31.875 38.984 31.762 39.172 31.605 cv
39.355 31.453 39.5 31.258 39.605 31.02 cv
39.711 30.785 39.762 30.496 39.766 30.156 cv
39.762 29.875 39.719 29.625 39.629 29.406 cv
39.539 29.187 39.402 29.008 39.219 28.863 cv
39.031 28.723 38.797 28.617 38.516 28.543 cv
38.23 28.473 37.891 28.434 37.504 28.434 cv
37.219 28.434 36.98 28.449 36.781 28.477 cv
36.578 28.508 36.391 28.523 36.219 28.52 cv
36.09 28.523 35.996 28.492 35.945 28.43 cv
35.887 28.371 35.859 28.258 35.863 28.086 cv
35.863 24.473 li
35.859 24.324 35.895 24.215 35.969 24.137 cv
36.035 24.066 36.137 24.027 36.273 24.027 cv
40.203 24.027 li
40.238 24.027 40.273 24.039 40.309 24.059 cv
40.34 24.082 40.367 24.113 40.395 24.152 cv
40.414 24.195 40.43 24.246 40.445 24.309 cv
40.453 24.375 40.461 24.453 40.465 24.535 cv
40.461 24.703 40.438 24.828 40.398 24.918 cv
40.352 25.012 40.293 25.059 40.215 25.055 cv
37.043 25.055 li
37.043 27.543 li
37.195 27.523 37.352 27.512 37.516 27.504 cv
37.672 27.5 37.859 27.496 38.074 27.496 cv
38.559 27.496 38.984 27.559 39.352 27.68 cv
39.715 27.801 40.02 27.973 40.27 28.191 cv
40.512 28.418 40.699 28.684 40.824 28.996 cv
40.949 29.312 41.012 29.664 41.012 30.047 cv
cp
f
44.273 32.152 mo
44.273 32.48 44.219 32.695 44.113 32.801 cv
44.004 32.906 43.809 32.957 43.527 32.961 cv
43.25 32.957 43.059 32.906 42.957 32.805 cv
42.848 32.699 42.797 32.488 42.801 32.172 cv
42.797 31.848 42.852 31.633 42.961 31.523 cv
43.066 31.418 43.262 31.363 43.547 31.363 cv
43.82 31.363 44.008 31.418 44.117 31.523 cv
44.219 31.629 44.273 31.84 44.273 32.152 cv
cp
f
51.977 28.441 mo
51.973 29.125 51.922 29.746 51.816 30.309 cv
51.707 30.871 51.527 31.355 51.281 31.758 cv
51.027 32.164 50.699 32.477 50.301 32.695 cv
49.895 32.918 49.402 33.027 48.816 33.027 cv
48.258 33.027 47.785 32.93 47.406 32.73 cv
47.023 32.535 46.719 32.242 46.484 31.855 cv
46.25 31.469 46.082 30.996 45.988 30.43 cv
45.887 29.867 45.84 29.219 45.84 28.484 cv
45.84 27.812 45.895 27.191 46.004 26.625 cv
46.113 26.062 46.289 25.578 46.539 25.172 cv
46.781 24.77 47.105 24.457 47.512 24.23 cv
47.91 24.012 48.406 23.898 48.996 23.898 cv
49.555 23.898 50.027 24 50.41 24.195 cv
50.793 24.398 51.098 24.691 51.332 25.074 cv
51.563 25.465 51.73 25.937 51.828 26.5 cv
51.926 27.062 51.973 27.711 51.977 28.441 cv
cp
50.77 28.523 mo
50.766 28.082 50.75 27.684 50.723 27.332 cv
50.688 26.98 50.641 26.672 50.582 26.402 cv
50.516 26.133 50.438 25.902 50.34 25.707 cv
50.242 25.516 50.125 25.355 49.988 25.227 cv
49.848 25.102 49.688 25.008 49.516 24.949 cv
49.336 24.895 49.141 24.867 48.926 24.863 cv
48.535 24.867 48.219 24.957 47.98 25.141 cv
47.734 25.324 47.543 25.578 47.406 25.895 cv
47.266 26.215 47.172 26.586 47.121 27.016 cv
47.07 27.445 47.047 27.91 47.047 28.402 cv
47.047 29.066 47.078 29.629 47.148 30.09 cv
47.215 30.559 47.324 30.937 47.477 31.227 cv
47.621 31.523 47.813 31.734 48.043 31.863 cv
48.273 32 48.555 32.066 48.887 32.062 cv
49.141 32.066 49.363 32.027 49.559 31.941 cv
49.75 31.863 49.918 31.742 50.059 31.586 cv
50.199 31.434 50.313 31.25 50.406 31.035 cv
50.492 30.82 50.566 30.582 50.625 30.32 cv
50.676 30.062 50.715 29.781 50.738 29.477 cv
50.758 29.172 50.766 28.855 50.77 28.523 cv
cp
f
59.094 28.441 mo
59.09 29.125 59.039 29.746 58.934 30.309 cv
58.824 30.871 58.645 31.355 58.398 31.758 cv
58.145 32.164 57.816 32.477 57.418 32.695 cv
57.012 32.918 56.52 33.027 55.934 33.027 cv
55.375 33.027 54.902 32.93 54.523 32.73 cv
54.141 32.535 53.836 32.242 53.602 31.855 cv
53.367 31.469 53.199 30.996 53.105 30.43 cv
53.004 29.867 52.957 29.219 52.957 28.484 cv
52.957 27.812 53.012 27.191 53.121 26.625 cv
53.23 26.062 53.406 25.578 53.656 25.172 cv
53.898 24.77 54.223 24.457 54.629 24.23 cv
55.027 24.012 55.523 23.898 56.113 23.898 cv
56.672 23.898 57.145 24 57.527 24.195 cv
57.91 24.398 58.215 24.691 58.449 25.074 cv
58.68 25.465 58.848 25.937 58.945 26.5 cv
59.043 27.062 59.09 27.711 59.094 28.441 cv
cp
57.887 28.523 mo
57.883 28.082 57.867 27.684 57.84 27.332 cv
57.805 26.98 57.758 26.672 57.699 26.402 cv
57.633 26.133 57.555 25.902 57.457 25.707 cv
57.359 25.516 57.242 25.355 57.105 25.227 cv
56.965 25.102 56.805 25.008 56.633 24.949 cv
56.453 24.895 56.258 24.867 56.043 24.863 cv
55.652 24.867 55.336 24.957 55.098 25.141 cv
54.852 25.324 54.66 25.578 54.523 25.895 cv
54.383 26.215 54.289 26.586 54.238 27.016 cv
54.188 27.445 54.164 27.91 54.164 28.402 cv
54.164 29.066 54.195 29.629 54.266 30.09 cv
54.332 30.559 54.441 30.937 54.594 31.227 cv
54.738 31.523 54.93 31.734 55.16 31.863 cv
55.391 32 55.672 32.066 56.004 32.062 cv
56.258 32.066 56.48 32.027 56.676 31.941 cv
56.867 31.863 57.035 31.742 57.176 31.586 cv
57.316 31.434 57.43 31.25 57.523 31.035 cv
57.609 30.82 57.684 30.582 57.742 30.32 cv
57.793 30.062 57.832 29.781 57.855 29.477 cv
57.875 29.172 57.883 28.855 57.887 28.523 cv
cp
f
75.305 519.375 mo
75.301 519.465 75.293 519.535 75.281 519.594 cv
75.266 519.656 75.246 519.707 75.227 519.738 cv
75.203 519.777 75.18 519.801 75.148 519.816 cv
75.117 519.832 75.086 519.84 75.059 519.84 cv
70.422 519.84 li
70.387 519.84 70.359 519.832 70.332 519.816 cv
70.305 519.801 70.277 519.777 70.254 519.738 cv
70.227 519.707 70.207 519.656 70.195 519.594 cv
70.18 519.535 70.172 519.465 70.176 519.375 cv
70.172 519.297 70.18 519.223 70.195 519.16 cv
70.207 519.102 70.223 519.055 70.246 519.016 cv
70.262 518.98 70.289 518.949 70.32 518.926 cv
70.352 518.906 70.383 518.898 70.422 518.895 cv
72.273 518.895 li
72.273 512.148 li
70.559 513.168 li
70.469 513.219 70.398 513.246 70.352 513.254 cv
70.297 513.262 70.254 513.254 70.223 513.223 cv
70.188 513.195 70.168 513.145 70.156 513.074 cv
70.145 513.008 70.137 512.922 70.141 512.812 cv
70.137 512.738 70.141 512.672 70.152 512.613 cv
70.156 512.562 70.168 512.516 70.184 512.477 cv
70.195 512.441 70.215 512.41 70.238 512.383 cv
70.262 512.355 70.293 512.328 70.34 512.301 cv
72.383 510.988 li
72.398 510.977 72.418 510.965 72.449 510.957 cv
72.473 510.949 72.508 510.941 72.555 510.93 cv
72.594 510.922 72.645 510.914 72.699 510.91 cv
72.754 510.91 72.82 510.91 72.906 510.906 cv
73.012 510.91 73.105 510.914 73.18 510.922 cv
73.25 510.93 73.305 510.945 73.352 510.961 cv
73.391 510.98 73.418 511 73.434 511.023 cv
73.441 511.051 73.449 511.074 73.453 511.098 cv
73.453 518.895 li
75.059 518.895 li
75.094 518.898 75.129 518.906 75.16 518.926 cv
75.191 518.949 75.215 518.98 75.238 519.016 cv
75.254 519.055 75.27 519.102 75.285 519.16 cv
75.293 519.223 75.301 519.297 75.305 519.375 cv
cp
f
148.438 519.332 mo
148.434 519.418 148.43 519.492 148.418 519.555 cv
148.406 519.621 148.391 519.676 148.371 519.715 cv
148.348 519.762 148.32 519.793 148.289 519.809 cv
148.254 519.832 148.215 519.84 148.176 519.84 cv
143.273 519.84 li
143.211 519.84 143.152 519.832 143.105 519.816 cv
143.055 519.801 143.016 519.777 142.98 519.738 cv
142.945 519.707 142.918 519.652 142.906 519.582 cv
142.887 519.512 142.879 519.426 142.883 519.324 cv
142.879 519.234 142.883 519.156 142.891 519.086 cv
142.895 519.02 142.91 518.961 142.938 518.906 cv
142.961 518.855 142.992 518.801 143.027 518.746 cv
143.063 518.695 143.105 518.641 143.164 518.578 cv
144.938 516.754 li
145.348 516.336 145.676 515.961 145.926 515.625 cv
146.172 515.297 146.363 514.992 146.496 514.715 cv
146.629 514.441 146.715 514.191 146.762 513.965 cv
146.801 513.742 146.824 513.531 146.824 513.336 cv
146.824 513.141 146.789 512.957 146.723 512.777 cv
146.656 512.605 146.563 512.449 146.438 512.312 cv
146.313 512.184 146.156 512.078 145.969 511.996 cv
145.781 511.922 145.563 511.883 145.316 511.879 cv
145.027 511.883 144.77 511.922 144.543 511.996 cv
144.313 512.078 144.113 512.164 143.941 512.25 cv
143.77 512.344 143.625 512.426 143.508 512.504 cv
143.391 512.582 143.305 512.621 143.254 512.621 cv
143.219 512.621 143.188 512.613 143.164 512.594 cv
143.133 512.578 143.113 512.547 143.098 512.504 cv
143.082 512.465 143.066 512.41 143.059 512.34 cv
143.047 512.273 143.043 512.191 143.047 512.094 cv
143.043 512.027 143.047 511.969 143.055 511.918 cv
143.059 511.867 143.066 511.824 143.078 511.785 cv
143.086 511.75 143.102 511.715 143.121 511.684 cv
143.141 511.652 143.176 511.613 143.234 511.562 cv
143.285 511.516 143.379 511.449 143.516 511.367 cv
143.648 511.285 143.82 511.207 144.023 511.125 cv
144.227 511.047 144.449 510.977 144.695 510.922 cv
144.938 510.867 145.195 510.84 145.469 510.84 cv
145.895 510.84 146.27 510.902 146.594 511.023 cv
146.914 511.145 147.18 511.309 147.395 511.52 cv
147.605 511.73 147.766 511.977 147.871 512.25 cv
147.977 512.531 148.031 512.828 148.031 513.141 cv
148.031 513.43 148.004 513.711 147.953 513.988 cv
147.902 514.273 147.797 514.578 147.637 514.902 cv
147.473 515.23 147.238 515.594 146.934 515.992 cv
146.625 516.395 146.219 516.855 145.715 517.371 cv
144.309 518.84 li
148.168 518.84 li
148.199 518.844 148.234 518.855 148.273 518.871 cv
148.305 518.895 148.336 518.926 148.363 518.965 cv
148.387 519.008 148.406 519.059 148.418 519.117 cv
148.43 519.184 148.434 519.254 148.438 519.332 cv
cp
f
221.941 517.316 mo
221.938 517.469 221.914 517.59 221.871 517.676 cv
221.824 517.766 221.762 517.809 221.68 517.805 cv
220.68 517.805 li
220.68 519.668 li
220.68 519.707 220.668 519.738 220.652 519.762 cv
220.629 519.789 220.598 519.809 220.555 519.828 cv
220.504 519.844 220.441 519.855 220.371 519.867 cv
220.293 519.875 220.199 519.879 220.082 519.883 cv
219.965 519.879 219.867 519.875 219.797 519.867 cv
219.719 519.855 219.66 519.844 219.617 519.828 cv
219.57 519.809 219.539 519.789 219.523 519.762 cv
219.504 519.738 219.496 519.707 219.5 519.668 cv
219.5 517.805 li
215.871 517.805 li
215.813 517.809 215.77 517.801 215.734 517.785 cv
215.699 517.773 215.664 517.746 215.637 517.707 cv
215.605 517.672 215.586 517.621 215.574 517.551 cv
215.563 517.484 215.559 517.395 215.559 517.281 cv
215.559 517.199 215.559 517.121 215.566 517.051 cv
215.566 516.98 215.578 516.918 215.594 516.863 cv
215.605 516.809 215.621 516.754 215.648 516.699 cv
215.668 516.645 215.695 516.59 215.73 516.527 cv
218.891 511.141 li
218.91 511.105 218.945 511.074 218.992 511.047 cv
219.035 511.02 219.09 510.996 219.164 510.977 cv
219.23 510.961 219.316 510.949 219.422 510.937 cv
219.523 510.934 219.645 510.93 219.785 510.926 cv
219.934 510.93 220.07 510.934 220.188 510.945 cv
220.301 510.957 220.391 510.973 220.465 510.988 cv
220.531 511.008 220.586 511.031 220.625 511.062 cv
220.66 511.094 220.68 511.129 220.68 511.168 cv
220.68 516.832 li
221.68 516.832 li
221.754 516.836 221.816 516.875 221.867 516.953 cv
221.914 517.035 221.938 517.156 221.941 517.316 cv
cp
219.5 511.965 mo
219.488 511.965 li
216.637 516.832 li
219.5 516.832 li
cp
f
294.941 516.969 mo
294.941 517.359 294.879 517.738 294.762 518.098 cv
294.637 518.465 294.453 518.781 294.211 519.055 cv
293.961 519.332 293.648 519.555 293.273 519.719 cv
292.891 519.887 292.445 519.969 291.93 519.969 cv
291.559 519.969 291.23 519.926 290.949 519.832 cv
290.664 519.746 290.418 519.613 290.207 519.441 cv
289.996 519.273 289.82 519.066 289.684 518.82 cv
289.543 518.574 289.43 518.293 289.348 517.977 cv
289.262 517.664 289.203 517.32 289.168 516.941 cv
289.129 516.57 289.109 516.168 289.113 515.734 cv
289.109 515.355 289.129 514.973 289.172 514.582 cv
289.211 514.199 289.285 513.824 289.391 513.457 cv
289.496 513.098 289.641 512.758 289.82 512.441 cv
290 512.125 290.227 511.848 290.5 511.613 cv
290.773 511.379 291.098 511.191 291.477 511.051 cv
291.855 510.914 292.297 510.848 292.801 510.844 cv
292.969 510.848 293.141 510.855 293.313 510.875 cv
293.484 510.898 293.645 510.93 293.793 510.961 cv
293.941 511 294.063 511.035 294.164 511.074 cv
294.262 511.113 294.328 511.148 294.363 511.172 cv
294.391 511.199 294.414 511.227 294.434 511.254 cv
294.449 511.285 294.465 511.316 294.473 511.352 cv
294.48 511.387 294.484 511.426 294.492 511.469 cv
294.492 511.512 294.496 511.566 294.5 511.629 cv
294.496 511.715 294.496 511.785 294.496 511.84 cv
294.492 511.902 294.48 511.949 294.469 511.984 cv
294.449 512.023 294.43 512.051 294.406 512.066 cv
294.379 512.086 294.348 512.094 294.309 512.094 cv
294.258 512.094 294.188 512.078 294.102 512.047 cv
294.012 512.016 293.906 511.98 293.785 511.937 cv
293.66 511.902 293.512 511.867 293.336 511.832 cv
293.16 511.805 292.957 511.789 292.727 511.785 cv
292.297 511.789 291.93 511.875 291.625 512.047 cv
291.32 512.219 291.07 512.453 290.875 512.746 cv
290.68 513.039 290.535 513.379 290.445 513.762 cv
290.348 514.152 290.293 514.555 290.285 514.973 cv
290.402 514.906 290.539 514.84 290.688 514.77 cv
290.836 514.703 290.996 514.641 291.172 514.582 cv
291.348 514.531 291.535 514.484 291.73 514.449 cv
291.926 514.418 292.137 514.402 292.363 514.398 cv
292.84 514.402 293.242 514.469 293.574 514.594 cv
293.902 514.727 294.168 514.906 294.375 515.137 cv
294.574 515.367 294.719 515.637 294.809 515.949 cv
294.895 516.262 294.941 516.602 294.941 516.969 cv
cp
293.746 517.078 mo
293.746 516.816 293.719 516.574 293.668 516.355 cv
293.613 516.141 293.523 515.957 293.402 515.801 cv
293.277 515.652 293.113 515.535 292.91 515.453 cv
292.699 515.371 292.445 515.328 292.148 515.328 cv
291.977 515.328 291.809 515.344 291.641 515.375 cv
291.469 515.406 291.305 515.449 291.148 515.496 cv
290.988 515.551 290.84 515.613 290.699 515.684 cv
290.555 515.758 290.422 515.832 290.305 515.91 cv
290.301 516.504 290.34 517 290.418 517.395 cv
290.492 517.793 290.602 518.109 290.746 518.348 cv
290.891 518.59 291.07 518.762 291.285 518.863 cv
291.5 518.969 291.75 519.02 292.039 519.016 cv
292.328 519.02 292.582 518.965 292.797 518.852 cv
293.012 518.746 293.188 518.598 293.332 518.41 cv
293.473 518.227 293.578 518.02 293.645 517.789 cv
293.711 517.559 293.746 517.324 293.746 517.078 cv
cp
f
368.051 517.562 mo
368.051 517.949 367.98 518.293 367.844 518.59 cv
367.707 518.895 367.512 519.145 367.254 519.348 cv
366.996 519.555 366.676 519.711 366.297 519.812 cv
365.914 519.918 365.48 519.969 364.996 519.969 cv
364.535 519.969 364.125 519.922 363.766 519.828 cv
363.402 519.734 363.098 519.594 362.848 519.402 cv
362.598 519.219 362.406 518.988 362.273 518.711 cv
362.141 518.437 362.074 518.125 362.074 517.77 cv
362.074 517.496 362.117 517.238 362.211 517.004 cv
362.297 516.77 362.43 516.555 362.605 516.359 cv
362.773 516.164 362.984 515.98 363.238 515.805 cv
363.488 515.637 363.773 515.473 364.09 515.316 cv
363.816 515.176 363.574 515.027 363.363 514.867 cv
363.152 514.711 362.973 514.539 362.828 514.352 cv
362.68 514.168 362.57 513.973 362.496 513.762 cv
362.418 513.555 362.379 513.324 362.383 513.074 cv
362.379 512.766 362.434 512.473 362.551 512.199 cv
362.66 511.93 362.832 511.695 363.059 511.492 cv
363.285 511.293 363.57 511.133 363.922 511.016 cv
364.266 510.898 364.676 510.84 365.145 510.84 cv
365.59 510.84 365.977 510.895 366.305 511 cv
366.633 511.109 366.902 511.254 367.113 511.437 cv
367.324 511.625 367.48 511.844 367.586 512.094 cv
367.684 512.344 367.734 512.613 367.738 512.902 cv
367.734 513.137 367.695 513.363 367.625 513.574 cv
367.547 513.793 367.438 513.996 367.289 514.184 cv
367.141 514.379 366.961 514.559 366.75 514.723 cv
366.539 514.895 366.297 515.051 366.023 515.191 cv
366.344 515.355 366.629 515.52 366.887 515.687 cv
367.137 515.855 367.352 516.035 367.527 516.23 cv
367.695 516.426 367.824 516.633 367.918 516.848 cv
368.004 517.066 368.051 517.305 368.051 517.562 cv
cp
366.57 513.012 mo
366.566 512.824 366.535 512.648 366.469 512.492 cv
366.402 512.336 366.305 512.203 366.18 512.094 cv
366.051 511.984 365.891 511.902 365.703 511.844 cv
365.508 511.789 365.293 511.762 365.055 511.758 cv
364.559 511.762 364.184 511.871 363.934 512.094 cv
363.676 512.32 363.551 512.629 363.555 513.012 cv
363.551 513.191 363.582 513.355 363.645 513.508 cv
363.707 513.664 363.801 513.809 363.934 513.945 cv
364.059 514.082 364.223 514.215 364.426 514.344 cv
364.621 514.477 364.859 514.613 365.137 514.754 cv
365.598 514.52 365.953 514.258 366.199 513.965 cv
366.445 513.68 366.566 513.363 366.57 513.012 cv
cp
366.859 517.687 mo
366.855 517.48 366.816 517.289 366.742 517.117 cv
366.66 516.949 366.543 516.789 366.387 516.637 cv
366.23 516.488 366.031 516.344 365.797 516.203 cv
365.559 516.066 365.289 515.922 364.98 515.77 cv
364.691 515.914 364.438 516.055 364.223 516.195 cv
364.004 516.336 363.824 516.484 363.688 516.633 cv
363.547 516.789 363.441 516.945 363.371 517.109 cv
363.297 517.277 363.262 517.461 363.266 517.66 cv
363.262 518.105 363.414 518.449 363.723 518.687 cv
364.023 518.934 364.477 519.055 365.082 519.051 cv
365.664 519.055 366.109 518.934 366.41 518.684 cv
366.707 518.441 366.855 518.109 366.859 517.687 cv
cp
f
437.465 519.375 mo
437.461 519.465 437.453 519.535 437.441 519.594 cv
437.426 519.656 437.406 519.707 437.387 519.738 cv
437.363 519.777 437.34 519.801 437.309 519.816 cv
437.277 519.832 437.246 519.84 437.219 519.84 cv
432.582 519.84 li
432.547 519.84 432.52 519.832 432.492 519.816 cv
432.465 519.801 432.438 519.777 432.414 519.738 cv
432.387 519.707 432.367 519.656 432.355 519.594 cv
432.34 519.535 432.332 519.465 432.336 519.375 cv
432.332 519.297 432.34 519.223 432.355 519.16 cv
432.367 519.102 432.383 519.055 432.406 519.016 cv
432.422 518.98 432.449 518.949 432.48 518.926 cv
432.512 518.906 432.543 518.898 432.582 518.895 cv
434.434 518.895 li
434.434 512.148 li
432.719 513.168 li
432.629 513.219 432.559 513.246 432.512 513.254 cv
432.457 513.262 432.414 513.254 432.383 513.223 cv
432.348 513.195 432.328 513.145 432.316 513.074 cv
432.305 513.008 432.297 512.922 432.301 512.812 cv
432.297 512.738 432.301 512.672 432.313 512.613 cv
432.316 512.562 432.328 512.516 432.344 512.477 cv
432.355 512.441 432.375 512.41 432.398 512.383 cv
432.422 512.355 432.453 512.328 432.5 512.301 cv
434.543 510.988 li
434.559 510.977 434.578 510.965 434.609 510.957 cv
434.633 510.949 434.668 510.941 434.715 510.93 cv
434.754 510.922 434.805 510.914 434.859 510.91 cv
434.914 510.91 434.98 510.91 435.066 510.906 cv
435.172 510.91 435.266 510.914 435.34 510.922 cv
435.41 510.93 435.465 510.945 435.512 510.961 cv
435.551 510.98 435.578 511 435.594 511.023 cv
435.602 511.051 435.609 511.074 435.613 511.098 cv
435.613 518.895 li
437.219 518.895 li
437.254 518.898 437.289 518.906 437.32 518.926 cv
437.352 518.949 437.375 518.98 437.398 519.016 cv
437.414 519.055 437.43 519.102 437.445 519.16 cv
437.453 519.223 437.461 519.297 437.465 519.375 cv
cp
f
444.82 515.383 mo
444.816 516.066 444.766 516.687 444.66 517.25 cv
444.551 517.812 444.371 518.297 444.125 518.699 cv
443.871 519.105 443.543 519.418 443.145 519.637 cv
442.738 519.859 442.246 519.969 441.66 519.969 cv
441.102 519.969 440.629 519.871 440.25 519.672 cv
439.867 519.477 439.563 519.184 439.328 518.797 cv
439.094 518.41 438.926 517.937 438.832 517.371 cv
438.73 516.809 438.684 516.16 438.684 515.426 cv
438.684 514.754 438.738 514.133 438.848 513.566 cv
438.957 513.004 439.133 512.52 439.383 512.113 cv
439.625 511.711 439.949 511.398 440.355 511.172 cv
440.754 510.953 441.25 510.84 441.84 510.84 cv
442.398 510.84 442.871 510.941 443.254 511.137 cv
443.637 511.34 443.941 511.633 444.176 512.016 cv
444.406 512.406 444.574 512.879 444.672 513.441 cv
444.77 514.004 444.816 514.652 444.82 515.383 cv
cp
443.613 515.465 mo
443.609 515.023 443.594 514.625 443.566 514.273 cv
443.531 513.922 443.484 513.613 443.426 513.344 cv
443.359 513.074 443.281 512.844 443.184 512.648 cv
443.086 512.457 442.969 512.297 442.832 512.168 cv
442.691 512.043 442.531 511.949 442.359 511.891 cv
442.18 511.836 441.984 511.809 441.77 511.805 cv
441.379 511.809 441.063 511.898 440.824 512.082 cv
440.578 512.266 440.387 512.52 440.25 512.836 cv
440.109 513.156 440.016 513.527 439.965 513.957 cv
439.914 514.387 439.891 514.852 439.891 515.344 cv
439.891 516.008 439.922 516.57 439.992 517.031 cv
440.059 517.5 440.168 517.879 440.32 518.168 cv
440.465 518.465 440.656 518.676 440.887 518.805 cv
441.117 518.941 441.398 519.008 441.73 519.004 cv
441.984 519.008 442.207 518.969 442.402 518.883 cv
442.594 518.805 442.762 518.684 442.902 518.527 cv
443.043 518.375 443.156 518.191 443.25 517.977 cv
443.336 517.762 443.41 517.523 443.469 517.262 cv
443.52 517.004 443.559 516.723 443.582 516.418 cv
443.602 516.113 443.609 515.797 443.613 515.465 cv
cp
f
510.594 519.375 mo
510.59 519.465 510.582 519.535 510.57 519.594 cv
510.555 519.656 510.535 519.707 510.516 519.738 cv
510.492 519.777 510.469 519.801 510.438 519.816 cv
510.406 519.832 510.375 519.84 510.348 519.84 cv
505.711 519.84 li
505.676 519.84 505.648 519.832 505.621 519.816 cv
505.594 519.801 505.566 519.777 505.543 519.738 cv
505.516 519.707 505.496 519.656 505.484 519.594 cv
505.469 519.535 505.461 519.465 505.465 519.375 cv
505.461 519.297 505.469 519.223 505.484 519.16 cv
505.496 519.102 505.512 519.055 505.535 519.016 cv
505.551 518.98 505.578 518.949 505.609 518.926 cv
505.641 518.906 505.672 518.898 505.711 518.895 cv
507.563 518.895 li
507.563 512.148 li
505.848 513.168 li
505.758 513.219 505.688 513.246 505.641 513.254 cv
505.586 513.262 505.543 513.254 505.512 513.223 cv
505.477 513.195 505.457 513.145 505.445 513.074 cv
505.434 513.008 505.426 512.922 505.43 512.812 cv
505.426 512.738 505.43 512.672 505.441 512.613 cv
505.445 512.562 505.457 512.516 505.473 512.477 cv
505.484 512.441 505.504 512.41 505.527 512.383 cv
505.551 512.355 505.582 512.328 505.629 512.301 cv
507.672 510.988 li
507.688 510.977 507.707 510.965 507.738 510.957 cv
507.762 510.949 507.797 510.941 507.844 510.93 cv
507.883 510.922 507.934 510.914 507.988 510.91 cv
508.043 510.91 508.109 510.91 508.195 510.906 cv
508.301 510.91 508.395 510.914 508.469 510.922 cv
508.539 510.93 508.594 510.945 508.641 510.961 cv
508.68 510.98 508.707 511 508.723 511.023 cv
508.73 511.051 508.738 511.074 508.742 511.098 cv
508.742 518.895 li
510.348 518.895 li
510.383 518.898 510.418 518.906 510.449 518.926 cv
510.48 518.949 510.504 518.98 510.527 519.016 cv
510.543 519.055 510.559 519.102 510.574 519.16 cv
510.582 519.223 510.59 519.297 510.594 519.375 cv
cp
f
517.656 519.332 mo
517.652 519.418 517.648 519.492 517.637 519.555 cv
517.625 519.621 517.609 519.676 517.59 519.715 cv
517.566 519.762 517.539 519.793 517.508 519.809 cv
517.473 519.832 517.434 519.84 517.395 519.84 cv
512.492 519.84 li
512.43 519.84 512.371 519.832 512.324 519.816 cv
512.273 519.801 512.234 519.777 512.199 519.738 cv
512.164 519.707 512.137 519.652 512.125 519.582 cv
512.105 519.512 512.098 519.426 512.102 519.324 cv
512.098 519.234 512.102 519.156 512.109 519.086 cv
512.113 519.02 512.129 518.961 512.156 518.906 cv
512.18 518.855 512.211 518.801 512.246 518.746 cv
512.281 518.695 512.324 518.641 512.383 518.578 cv
514.156 516.754 li
514.566 516.336 514.895 515.961 515.145 515.625 cv
515.391 515.297 515.582 514.992 515.715 514.715 cv
515.848 514.441 515.934 514.191 515.98 513.965 cv
516.02 513.742 516.043 513.531 516.043 513.336 cv
516.043 513.141 516.008 512.957 515.941 512.777 cv
515.875 512.605 515.781 512.449 515.656 512.312 cv
515.531 512.184 515.375 512.078 515.188 511.996 cv
515 511.922 514.781 511.883 514.535 511.879 cv
514.246 511.883 513.988 511.922 513.762 511.996 cv
513.531 512.078 513.332 512.164 513.16 512.25 cv
512.988 512.344 512.844 512.426 512.727 512.504 cv
512.609 512.582 512.523 512.621 512.473 512.621 cv
512.438 512.621 512.406 512.613 512.383 512.594 cv
512.352 512.578 512.332 512.547 512.316 512.504 cv
512.301 512.465 512.285 512.41 512.277 512.34 cv
512.266 512.273 512.262 512.191 512.266 512.094 cv
512.262 512.027 512.266 511.969 512.273 511.918 cv
512.277 511.867 512.285 511.824 512.297 511.785 cv
512.305 511.75 512.32 511.715 512.34 511.684 cv
512.359 511.652 512.395 511.613 512.453 511.562 cv
512.504 511.516 512.598 511.449 512.734 511.367 cv
512.867 511.285 513.039 511.207 513.242 511.125 cv
513.445 511.047 513.668 510.977 513.914 510.922 cv
514.156 510.867 514.414 510.84 514.688 510.84 cv
515.113 510.84 515.488 510.902 515.813 511.023 cv
516.133 511.145 516.398 511.309 516.613 511.52 cv
516.824 511.73 516.984 511.977 517.09 512.25 cv
517.195 512.531 517.25 512.828 517.25 513.141 cv
517.25 513.43 517.223 513.711 517.172 513.988 cv
517.121 514.273 517.016 514.578 516.855 514.902 cv
516.691 515.23 516.457 515.594 516.152 515.992 cv
515.844 516.395 515.438 516.855 514.934 517.371 cv
513.527 518.84 li
517.387 518.84 li
517.418 518.844 517.453 518.855 517.492 518.871 cv
517.523 518.895 517.555 518.926 517.582 518.965 cv
517.605 519.008 517.625 519.059 517.637 519.117 cv
517.648 519.184 517.652 519.254 517.656 519.332 cv
cp
f
583.727 519.375 mo
583.723 519.465 583.715 519.535 583.703 519.594 cv
583.688 519.656 583.668 519.707 583.648 519.738 cv
583.625 519.777 583.602 519.801 583.57 519.816 cv
583.539 519.832 583.508 519.84 583.48 519.84 cv
578.844 519.84 li
578.809 519.84 578.781 519.832 578.754 519.816 cv
578.727 519.801 578.699 519.777 578.676 519.738 cv
578.648 519.707 578.629 519.656 578.617 519.594 cv
578.602 519.535 578.594 519.465 578.598 519.375 cv
578.594 519.297 578.602 519.223 578.617 519.16 cv
578.629 519.102 578.645 519.055 578.668 519.016 cv
578.684 518.98 578.711 518.949 578.742 518.926 cv
578.773 518.906 578.805 518.898 578.844 518.895 cv
580.695 518.895 li
580.695 512.148 li
578.98 513.168 li
578.891 513.219 578.82 513.246 578.773 513.254 cv
578.719 513.262 578.676 513.254 578.645 513.223 cv
578.609 513.195 578.59 513.145 578.578 513.074 cv
578.566 513.008 578.559 512.922 578.563 512.812 cv
578.559 512.738 578.563 512.672 578.574 512.613 cv
578.578 512.562 578.59 512.516 578.605 512.477 cv
578.617 512.441 578.637 512.41 578.66 512.383 cv
578.684 512.355 578.715 512.328 578.762 512.301 cv
580.805 510.988 li
580.82 510.977 580.84 510.965 580.871 510.957 cv
580.895 510.949 580.93 510.941 580.977 510.93 cv
581.016 510.922 581.066 510.914 581.121 510.91 cv
581.176 510.91 581.242 510.91 581.328 510.906 cv
581.434 510.91 581.527 510.914 581.602 510.922 cv
581.672 510.93 581.727 510.945 581.773 510.961 cv
581.813 510.98 581.84 511 581.855 511.023 cv
581.863 511.051 581.871 511.074 581.875 511.098 cv
581.875 518.895 li
583.48 518.895 li
583.516 518.898 583.551 518.906 583.582 518.926 cv
583.613 518.949 583.637 518.98 583.66 519.016 cv
583.676 519.055 583.691 519.102 583.707 519.16 cv
583.715 519.223 583.723 519.297 583.727 519.375 cv
cp
f
591.16 517.316 mo
591.156 517.469 591.133 517.59 591.09 517.676 cv
591.043 517.766 590.98 517.809 590.898 517.805 cv
589.898 517.805 li
589.898 519.668 li
589.898 519.707 589.887 519.738 589.871 519.762 cv
589.848 519.789 589.816 519.809 589.773 519.828 cv
589.723 519.844 589.66 519.855 589.59 519.867 cv
589.512 519.875 589.418 519.879 589.301 519.883 cv
589.184 519.879 589.086 519.875 589.016 519.867 cv
588.938 519.855 588.879 519.844 588.836 519.828 cv
588.789 519.809 588.758 519.789 588.742 519.762 cv
588.723 519.738 588.715 519.707 588.719 519.668 cv
588.719 517.805 li
585.09 517.805 li
585.031 517.809 584.988 517.801 584.953 517.785 cv
584.918 517.773 584.883 517.746 584.855 517.707 cv
584.824 517.672 584.805 517.621 584.793 517.551 cv
584.781 517.484 584.777 517.395 584.777 517.281 cv
584.777 517.199 584.777 517.121 584.785 517.051 cv
584.785 516.98 584.797 516.918 584.813 516.863 cv
584.824 516.809 584.84 516.754 584.867 516.699 cv
584.887 516.645 584.914 516.59 584.949 516.527 cv
588.109 511.141 li
588.129 511.105 588.164 511.074 588.211 511.047 cv
588.254 511.02 588.309 510.996 588.383 510.977 cv
588.449 510.961 588.535 510.949 588.641 510.937 cv
588.742 510.934 588.863 510.93 589.004 510.926 cv
589.152 510.93 589.289 510.934 589.406 510.945 cv
589.52 510.957 589.609 510.973 589.684 510.988 cv
589.75 511.008 589.805 511.031 589.844 511.062 cv
589.879 511.094 589.898 511.129 589.898 511.168 cv
589.898 516.832 li
590.898 516.832 li
590.973 516.836 591.035 516.875 591.086 516.953 cv
591.133 517.035 591.156 517.156 591.16 517.316 cv
cp
588.719 511.965 mo
588.707 511.965 li
585.855 516.832 li
588.719 516.832 li
cp
f
656.875 519.375 mo
656.871 519.465 656.863 519.535 656.852 519.594 cv
656.836 519.656 656.816 519.707 656.797 519.738 cv
656.773 519.777 656.75 519.801 656.719 519.816 cv
656.688 519.832 656.656 519.84 656.629 519.84 cv
651.992 519.84 li
651.957 519.84 651.93 519.832 651.902 519.816 cv
651.875 519.801 651.848 519.777 651.824 519.738 cv
651.797 519.707 651.777 519.656 651.766 519.594 cv
651.75 519.535 651.742 519.465 651.746 519.375 cv
651.742 519.297 651.75 519.223 651.766 519.16 cv
651.777 519.102 651.793 519.055 651.816 519.016 cv
651.832 518.98 651.859 518.949 651.891 518.926 cv
651.922 518.906 651.953 518.898 651.992 518.895 cv
653.844 518.895 li
653.844 512.148 li
652.129 513.168 li
652.039 513.219 651.969 513.246 651.922 513.254 cv
651.867 513.262 651.824 513.254 651.793 513.223 cv
651.758 513.195 651.738 513.145 651.727 513.074 cv
651.715 513.008 651.707 512.922 651.711 512.812 cv
651.707 512.738 651.711 512.672 651.723 512.613 cv
651.727 512.562 651.738 512.516 651.754 512.477 cv
651.766 512.441 651.785 512.41 651.809 512.383 cv
651.832 512.355 651.863 512.328 651.91 512.301 cv
653.953 510.988 li
653.969 510.977 653.988 510.965 654.02 510.957 cv
654.043 510.949 654.078 510.941 654.125 510.93 cv
654.164 510.922 654.215 510.914 654.27 510.91 cv
654.324 510.91 654.391 510.91 654.477 510.906 cv
654.582 510.91 654.676 510.914 654.75 510.922 cv
654.82 510.93 654.875 510.945 654.922 510.961 cv
654.961 510.98 654.988 511 655.004 511.023 cv
655.012 511.051 655.02 511.074 655.023 511.098 cv
655.023 518.895 li
656.629 518.895 li
656.664 518.898 656.699 518.906 656.73 518.926 cv
656.762 518.949 656.785 518.98 656.809 519.016 cv
656.824 519.055 656.84 519.102 656.855 519.16 cv
656.863 519.223 656.871 519.297 656.875 519.375 cv
cp
f
664.164 516.969 mo
664.164 517.359 664.102 517.738 663.984 518.098 cv
663.859 518.465 663.676 518.781 663.434 519.055 cv
663.184 519.332 662.871 519.555 662.496 519.719 cv
662.113 519.887 661.668 519.969 661.152 519.969 cv
660.781 519.969 660.453 519.926 660.172 519.832 cv
659.887 519.746 659.641 519.613 659.43 519.441 cv
659.219 519.273 659.043 519.066 658.906 518.82 cv
658.766 518.574 658.652 518.293 658.57 517.977 cv
658.484 517.664 658.426 517.32 658.391 516.941 cv
658.352 516.57 658.332 516.168 658.336 515.734 cv
658.332 515.355 658.352 514.973 658.395 514.582 cv
658.434 514.199 658.508 513.824 658.613 513.457 cv
658.719 513.098 658.863 512.758 659.043 512.441 cv
659.223 512.125 659.449 511.848 659.723 511.613 cv
659.996 511.379 660.32 511.191 660.699 511.051 cv
661.078 510.914 661.52 510.848 662.023 510.844 cv
662.191 510.848 662.363 510.855 662.535 510.875 cv
662.707 510.898 662.867 510.93 663.016 510.961 cv
663.164 511 663.285 511.035 663.387 511.074 cv
663.484 511.113 663.551 511.148 663.586 511.172 cv
663.613 511.199 663.637 511.227 663.656 511.254 cv
663.672 511.285 663.688 511.316 663.695 511.352 cv
663.703 511.387 663.707 511.426 663.715 511.469 cv
663.715 511.512 663.719 511.566 663.723 511.629 cv
663.719 511.715 663.719 511.785 663.719 511.84 cv
663.715 511.902 663.703 511.949 663.691 511.984 cv
663.672 512.023 663.652 512.051 663.629 512.066 cv
663.602 512.086 663.57 512.094 663.531 512.094 cv
663.48 512.094 663.41 512.078 663.324 512.047 cv
663.234 512.016 663.129 511.98 663.008 511.937 cv
662.883 511.902 662.734 511.867 662.559 511.832 cv
662.383 511.805 662.18 511.789 661.949 511.785 cv
661.52 511.789 661.152 511.875 660.848 512.047 cv
660.543 512.219 660.293 512.453 660.098 512.746 cv
659.902 513.039 659.758 513.379 659.668 513.762 cv
659.57 514.152 659.516 514.555 659.508 514.973 cv
659.625 514.906 659.762 514.84 659.91 514.77 cv
660.059 514.703 660.219 514.641 660.395 514.582 cv
660.57 514.531 660.758 514.484 660.953 514.449 cv
661.148 514.418 661.359 514.402 661.586 514.398 cv
662.063 514.402 662.465 514.469 662.797 514.594 cv
663.125 514.727 663.391 514.906 663.598 515.137 cv
663.797 515.367 663.941 515.637 664.031 515.949 cv
664.117 516.262 664.164 516.602 664.164 516.969 cv
cp
662.969 517.078 mo
662.969 516.816 662.941 516.574 662.891 516.355 cv
662.836 516.141 662.746 515.957 662.625 515.801 cv
662.5 515.652 662.336 515.535 662.133 515.453 cv
661.922 515.371 661.668 515.328 661.371 515.328 cv
661.199 515.328 661.031 515.344 660.863 515.375 cv
660.691 515.406 660.527 515.449 660.371 515.496 cv
660.211 515.551 660.063 515.613 659.922 515.684 cv
659.777 515.758 659.645 515.832 659.527 515.91 cv
659.523 516.504 659.563 517 659.641 517.395 cv
659.715 517.793 659.824 518.109 659.969 518.348 cv
660.113 518.59 660.293 518.762 660.508 518.863 cv
660.723 518.969 660.973 519.02 661.262 519.016 cv
661.551 519.02 661.805 518.965 662.02 518.852 cv
662.234 518.746 662.41 518.598 662.555 518.41 cv
662.695 518.227 662.801 518.02 662.867 517.789 cv
662.934 517.559 662.969 517.324 662.969 517.078 cv
cp
f
16.605 369.297 mo
16.703 369.301 16.785 369.305 16.852 369.312 cv
16.926 369.324 16.984 369.344 17.027 369.367 cv
17.078 369.395 17.113 369.426 17.129 369.457 cv
17.152 369.496 17.16 369.531 17.16 369.57 cv
17.16 374.41 li
17.16 374.531 17.121 374.645 17.039 374.75 cv
16.961 374.859 16.82 374.914 16.613 374.91 cv
7.621 374.91 li
7.418 374.914 7.277 374.859 7.195 374.75 cv
7.117 374.645 7.078 374.531 7.074 374.41 cv
7.074 369.625 li
7.078 369.586 7.086 369.547 7.105 369.512 cv
7.129 369.48 7.164 369.453 7.207 369.43 cv
7.258 369.41 7.316 369.395 7.383 369.379 cv
7.457 369.367 7.543 369.359 7.645 369.359 cv
7.738 369.359 7.82 369.367 7.891 369.379 cv
7.961 369.395 8.02 369.41 8.063 369.43 cv
8.109 369.453 8.141 369.48 8.16 369.512 cv
8.184 369.547 8.195 369.586 8.191 369.625 cv
8.191 373.57 li
11.355 373.57 li
11.355 370.187 li
11.359 370.148 11.371 370.109 11.391 370.074 cv
11.418 370.043 11.449 370.016 11.488 369.988 cv
11.531 369.969 11.59 369.953 11.66 369.937 cv
11.734 369.93 11.82 369.922 11.914 369.922 cv
12.012 369.922 12.09 369.93 12.156 369.937 cv
12.227 369.953 12.281 369.969 12.32 369.988 cv
12.363 370.016 12.395 370.043 12.41 370.074 cv
12.43 370.109 12.438 370.148 12.438 370.187 cv
12.438 373.57 li
16.047 373.57 li
16.047 369.57 li
16.047 369.531 16.059 369.496 16.078 369.457 cv
16.102 369.426 16.133 369.395 16.176 369.367 cv
16.223 369.344 16.281 369.324 16.348 369.312 cv
16.418 369.305 16.504 369.301 16.605 369.297 cv
cp
f
16.965 361.23 mo
17.012 361.23 17.047 361.242 17.07 361.262 cv
17.102 361.285 17.125 361.32 17.145 361.363 cv
17.164 361.414 17.176 361.477 17.191 361.559 cv
17.199 361.641 17.207 361.746 17.207 361.867 cv
17.207 362 17.199 362.105 17.191 362.187 cv
17.176 362.273 17.164 362.34 17.145 362.383 cv
17.125 362.434 17.102 362.465 17.07 362.484 cv
17.047 362.508 17.012 362.52 16.965 362.516 cv
12.859 362.516 li
12.461 362.52 12.141 362.551 11.895 362.609 cv
11.652 362.676 11.441 362.766 11.262 362.883 cv
11.086 363 10.949 363.156 10.855 363.344 cv
10.762 363.539 10.715 363.758 10.715 364.004 cv
10.715 364.328 10.832 364.652 11.059 364.973 cv
11.293 365.297 11.625 365.633 12.063 365.984 cv
16.965 365.984 li
17.012 365.988 17.047 366 17.07 366.016 cv
17.102 366.039 17.125 366.07 17.145 366.117 cv
17.164 366.164 17.176 366.23 17.191 366.309 cv
17.199 366.395 17.207 366.5 17.207 366.629 cv
17.207 366.758 17.199 366.863 17.191 366.941 cv
17.176 367.027 17.164 367.094 17.145 367.141 cv
17.125 367.195 17.102 367.227 17.07 367.242 cv
17.047 367.262 17.012 367.273 16.965 367.27 cv
9.953 367.27 li
9.914 367.273 9.879 367.266 9.848 367.246 cv
9.82 367.234 9.797 367.203 9.77 367.152 cv
9.75 367.109 9.734 367.047 9.723 366.973 cv
9.719 366.902 9.715 366.809 9.711 366.684 cv
9.715 366.574 9.719 366.477 9.723 366.398 cv
9.734 366.324 9.75 366.266 9.77 366.223 cv
9.797 366.184 9.82 366.156 9.848 366.137 cv
9.879 366.121 9.914 366.113 9.953 366.109 cv
10.879 366.109 li
10.438 365.719 10.117 365.324 9.91 364.93 cv
9.707 364.539 9.602 364.141 9.602 363.738 cv
9.602 363.27 9.684 362.879 9.84 362.559 cv
10.004 362.242 10.215 361.98 10.477 361.781 cv
10.742 361.586 11.051 361.445 11.406 361.359 cv
11.762 361.273 12.191 361.23 12.688 361.23 cv
cp
f
13.156 352.906 mo
13.359 352.91 13.5 352.961 13.586 353.059 cv
13.672 353.164 13.715 353.281 13.715 353.406 cv
13.715 358.023 li
14.105 358.027 14.457 357.988 14.77 357.906 cv
15.082 357.832 15.352 357.699 15.57 357.516 cv
15.797 357.336 15.969 357.102 16.086 356.805 cv
16.211 356.516 16.27 356.156 16.266 355.73 cv
16.27 355.398 16.242 355.102 16.184 354.84 cv
16.133 354.578 16.07 354.352 16 354.16 cv
15.934 353.973 15.875 353.816 15.816 353.691 cv
15.766 353.57 15.738 353.477 15.734 353.414 cv
15.738 353.379 15.746 353.348 15.762 353.316 cv
15.781 353.289 15.809 353.266 15.844 353.246 cv
15.883 353.234 15.934 353.223 15.996 353.211 cv
16.063 353.207 16.141 353.203 16.234 353.199 cv
16.305 353.203 16.363 353.207 16.41 353.207 cv
16.457 353.215 16.5 353.219 16.539 353.227 cv
16.578 353.234 16.613 353.25 16.645 353.266 cv
16.676 353.289 16.707 353.312 16.734 353.336 cv
16.766 353.367 16.813 353.449 16.875 353.59 cv
16.941 353.73 17.004 353.914 17.066 354.137 cv
17.129 354.363 17.184 354.621 17.234 354.914 cv
17.281 355.207 17.305 355.52 17.309 355.852 cv
17.305 356.43 17.227 356.937 17.066 357.367 cv
16.906 357.805 16.668 358.168 16.352 358.461 cv
16.035 358.762 15.641 358.984 15.16 359.133 cv
14.684 359.281 14.125 359.355 13.488 359.355 cv
12.891 359.355 12.352 359.281 11.867 359.125 cv
11.391 358.973 10.98 358.746 10.645 358.449 cv
10.309 358.156 10.051 357.801 9.871 357.387 cv
9.691 356.973 9.602 356.508 9.602 355.992 cv
9.602 355.441 9.691 354.973 9.867 354.586 cv
10.047 354.199 10.285 353.883 10.582 353.629 cv
10.883 353.383 11.234 353.199 11.633 353.082 cv
12.039 352.969 12.469 352.91 12.922 352.906 cv
cp
12.773 354.199 mo
12.098 354.184 11.566 354.336 11.184 354.652 cv
10.801 354.969 10.609 355.437 10.605 356.055 cv
10.609 356.379 10.668 356.66 10.785 356.898 cv
10.906 357.141 11.066 357.34 11.262 357.5 cv
11.461 357.664 11.691 357.789 11.953 357.875 cv
12.215 357.965 12.488 358.016 12.773 358.023 cv
cp
f
10.41 346.84 mo
10.527 346.844 10.625 346.844 10.699 346.848 cv
10.781 346.855 10.844 346.867 10.883 346.879 cv
10.93 346.898 10.961 346.918 10.984 346.937 cv
11.008 346.965 11.02 346.996 11.02 347.035 cv
11.02 347.078 11.008 347.129 10.984 347.187 cv
10.961 347.25 10.938 347.32 10.914 347.391 cv
10.891 347.469 10.871 347.551 10.848 347.645 cv
10.832 347.738 10.82 347.84 10.816 347.949 cv
10.82 348.082 10.848 348.211 10.895 348.332 cv
10.949 348.457 11.035 348.586 11.152 348.723 cv
11.277 348.863 11.434 349.008 11.629 349.156 cv
11.824 349.309 12.066 349.477 12.352 349.656 cv
16.965 349.656 li
17.012 349.66 17.047 349.672 17.07 349.687 cv
17.102 349.711 17.125 349.742 17.145 349.789 cv
17.164 349.836 17.176 349.902 17.191 349.98 cv
17.199 350.066 17.207 350.172 17.207 350.301 cv
17.207 350.43 17.199 350.535 17.191 350.613 cv
17.176 350.699 17.164 350.766 17.145 350.812 cv
17.125 350.867 17.102 350.898 17.07 350.914 cv
17.047 350.934 17.012 350.945 16.965 350.941 cv
9.953 350.941 li
9.914 350.945 9.879 350.937 9.848 350.918 cv
9.82 350.906 9.797 350.875 9.77 350.824 cv
9.75 350.781 9.734 350.719 9.723 350.645 cv
9.719 350.574 9.715 350.48 9.711 350.355 cv
9.715 350.246 9.719 350.148 9.723 350.07 cv
9.734 349.996 9.75 349.937 9.77 349.895 cv
9.797 349.855 9.82 349.828 9.848 349.809 cv
9.879 349.793 9.914 349.785 9.953 349.781 cv
10.973 349.781 li
10.691 349.594 10.465 349.41 10.289 349.238 cv
10.113 349.07 9.973 348.91 9.871 348.758 cv
9.77 348.609 9.699 348.461 9.66 348.312 cv
9.621 348.164 9.602 348.016 9.602 347.863 cv
9.602 347.797 9.605 347.719 9.613 347.633 cv
9.621 347.547 9.637 347.457 9.656 347.363 cv
9.68 347.27 9.703 347.187 9.727 347.109 cv
9.754 347.039 9.781 346.984 9.805 346.949 cv
9.836 346.922 9.859 346.902 9.879 346.887 cv
9.906 346.879 9.938 346.867 9.969 346.859 cv
10.008 346.852 10.059 346.848 10.129 346.844 cv
10.199 346.844 10.293 346.844 10.41 346.84 cv
cp
f
10.27 339.801 mo
10.453 339.805 10.586 339.828 10.664 339.875 cv
10.746 339.926 10.785 339.988 10.785 340.062 cv
10.785 341.07 li
10.973 340.891 11.18 340.762 11.406 340.687 cv
11.633 340.617 11.867 340.582 12.109 340.578 cv
12.516 340.582 12.875 340.648 13.188 340.773 cv
13.5 340.906 13.766 341.09 13.977 341.332 cv
14.195 341.574 14.359 341.863 14.473 342.191 cv
14.59 342.527 14.648 342.895 14.645 343.297 cv
14.648 343.586 14.609 343.859 14.531 344.113 cv
14.457 344.375 14.363 344.57 14.246 344.707 cv
14.344 344.801 14.449 344.879 14.566 344.937 cv
14.688 345 14.824 345.031 14.977 345.027 cv
15.16 345.031 15.313 344.945 15.43 344.773 cv
15.555 344.605 15.617 344.383 15.625 344.102 cv
15.703 342.27 li
15.715 341.922 15.762 341.605 15.848 341.312 cv
15.934 341.023 16.059 340.77 16.215 340.555 cv
16.375 340.344 16.566 340.176 16.797 340.055 cv
17.031 339.937 17.301 339.879 17.605 339.875 cv
17.926 339.879 18.23 339.945 18.523 340.078 cv
18.813 340.215 19.066 340.422 19.289 340.699 cv
19.508 340.98 19.684 341.336 19.813 341.766 cv
19.938 342.195 20 342.703 20.004 343.289 cv
20 343.859 19.953 344.344 19.859 344.738 cv
19.762 345.137 19.629 345.461 19.465 345.715 cv
19.297 345.969 19.102 346.152 18.871 346.266 cv
18.637 346.383 18.383 346.441 18.117 346.437 cv
17.945 346.441 17.781 346.422 17.621 346.375 cv
17.457 346.336 17.305 346.273 17.16 346.187 cv
17.016 346.105 16.879 345.996 16.742 345.867 cv
16.613 345.742 16.48 345.598 16.352 345.426 cv
16.223 345.684 16.059 345.871 15.859 345.992 cv
15.664 346.113 15.453 346.172 15.219 346.172 cv
14.906 346.172 14.621 346.109 14.371 345.98 cv
14.121 345.852 13.898 345.691 13.699 345.496 cv
13.508 345.66 13.293 345.785 13.051 345.879 cv
12.813 345.973 12.52 346.02 12.172 346.02 cv
11.777 346.02 11.418 345.953 11.098 345.816 cv
10.781 345.684 10.516 345.496 10.297 345.254 cv
10.082 345.016 9.914 344.73 9.793 344.395 cv
9.68 344.062 9.621 343.695 9.617 343.297 cv
9.621 343.086 9.633 342.887 9.652 342.703 cv
9.68 342.52 9.711 342.348 9.75 342.184 cv
9.75 340.062 li
9.754 339.977 9.797 339.91 9.879 339.867 cv
9.969 339.824 10.098 339.805 10.27 339.801 cv
cp
12.117 341.809 mo
11.645 341.812 11.273 341.945 11 342.203 cv
10.734 342.469 10.598 342.84 10.598 343.32 cv
10.598 343.574 10.641 343.793 10.723 343.973 cv
10.809 344.16 10.922 344.312 11.066 344.434 cv
11.215 344.555 11.383 344.645 11.57 344.703 cv
11.758 344.766 11.957 344.797 12.164 344.793 cv
12.629 344.797 12.992 344.664 13.258 344.402 cv
13.523 344.141 13.656 343.773 13.652 343.297 cv
13.656 343.047 13.617 342.828 13.531 342.637 cv
13.453 342.453 13.34 342.297 13.199 342.172 cv
13.059 342.051 12.895 341.961 12.703 341.898 cv
12.52 341.844 12.324 341.812 12.117 341.809 cv
cp
17.676 341.164 mo
17.371 341.168 17.141 341.293 16.977 341.535 cv
16.816 341.785 16.727 342.117 16.715 342.535 cv
16.652 344.352 li
16.785 344.52 16.91 344.656 17.023 344.758 cv
17.141 344.867 17.25 344.949 17.359 345.012 cv
17.465 345.074 17.57 345.117 17.676 345.141 cv
17.777 345.164 17.883 345.176 17.992 345.176 cv
18.328 345.176 18.582 345.008 18.762 344.664 cv
18.934 344.324 19.023 343.844 19.023 343.227 cv
19.023 342.84 18.984 342.516 18.91 342.25 cv
18.832 341.992 18.73 341.781 18.609 341.617 cv
18.48 341.461 18.34 341.344 18.18 341.27 cv
18.02 341.203 17.852 341.168 17.676 341.164 cv
cp
f
17.16 334.949 mo
19.738 335.883 li
19.82 335.918 19.883 335.996 19.93 336.121 cv
19.973 336.25 19.996 336.445 19.996 336.703 cv
19.996 336.844 19.988 336.953 19.977 337.031 cv
19.961 337.117 19.938 337.18 19.91 337.219 cv
19.875 337.266 19.836 337.289 19.785 337.293 cv
19.73 337.301 19.668 337.289 19.598 337.254 cv
17.16 336.289 li
17.141 336.336 17.109 336.383 17.059 336.422 cv
17.016 336.469 16.965 336.496 16.91 336.508 cv
10.207 339.008 li
10.102 339.051 10.016 339.074 9.953 339.07 cv
9.891 339.074 9.844 339.051 9.805 339.008 cv
9.773 338.969 9.746 338.902 9.73 338.805 cv
9.719 338.715 9.715 338.59 9.711 338.434 cv
9.715 338.277 9.719 338.156 9.723 338.066 cv
9.734 337.98 9.746 337.91 9.766 337.855 cv
9.789 337.805 9.82 337.766 9.855 337.742 cv
9.898 337.719 9.953 337.695 10.016 337.668 cv
15.641 335.664 li
15.641 335.641 li
9.984 333.711 li
9.887 333.68 9.824 333.645 9.793 333.598 cv
9.77 333.559 9.746 333.492 9.73 333.398 cv
9.719 333.312 9.715 333.184 9.711 333.016 cv
9.715 332.871 9.719 332.75 9.73 332.656 cv
9.746 332.562 9.773 332.496 9.805 332.449 cv
9.844 332.41 9.891 332.387 9.953 332.383 cv
10.016 332.387 10.094 332.402 10.184 332.43 cv
cp
f
15.734 320.312 mo
15.82 320.312 15.891 320.316 15.953 320.32 cv
16.016 320.328 16.07 320.336 16.117 320.348 cv
16.164 320.363 16.207 320.383 16.242 320.398 cv
16.281 320.422 16.324 320.457 16.375 320.508 cv
16.426 320.562 16.504 320.672 16.609 320.836 cv
16.719 321.004 16.824 321.211 16.922 321.457 cv
17.027 321.703 17.109 321.984 17.18 322.305 cv
17.246 322.625 17.281 322.977 17.285 323.352 cv
17.281 324.012 17.176 324.602 16.957 325.129 cv
16.742 325.656 16.422 326.105 15.992 326.477 cv
15.57 326.848 15.043 327.133 14.414 327.332 cv
13.789 327.531 13.066 327.633 12.25 327.629 cv
11.414 327.633 10.672 327.523 10.016 327.309 cv
9.363 327.094 8.809 326.793 8.352 326.402 cv
7.898 326.016 7.551 325.551 7.313 325.004 cv
7.074 324.465 6.953 323.859 6.953 323.195 cv
6.953 322.906 6.98 322.625 7.035 322.348 cv
7.09 322.074 7.16 321.82 7.238 321.586 cv
7.324 321.355 7.418 321.148 7.527 320.961 cv
7.637 320.781 7.727 320.652 7.797 320.582 cv
7.867 320.512 7.922 320.469 7.957 320.445 cv
7.996 320.43 8.039 320.41 8.086 320.395 cv
8.137 320.383 8.195 320.375 8.262 320.363 cv
8.332 320.359 8.414 320.355 8.504 320.352 cv
8.609 320.355 8.695 320.359 8.766 320.367 cv
8.84 320.379 8.902 320.395 8.949 320.414 cv
9.004 320.437 9.039 320.461 9.059 320.488 cv
9.086 320.52 9.098 320.555 9.094 320.594 cv
9.098 320.668 9.047 320.773 8.941 320.902 cv
8.844 321.035 8.734 321.203 8.609 321.406 cv
8.492 321.617 8.379 321.867 8.273 322.16 cv
8.176 322.457 8.125 322.809 8.121 323.219 cv
8.125 323.672 8.215 324.082 8.391 324.449 cv
8.57 324.816 8.832 325.133 9.18 325.391 cv
9.531 325.656 9.957 325.855 10.457 325.996 cv
10.957 326.141 11.531 326.215 12.172 326.211 cv
12.816 326.215 13.383 326.145 13.871 326.004 cv
14.363 325.867 14.773 325.668 15.102 325.41 cv
15.434 325.152 15.68 324.836 15.848 324.461 cv
16.02 324.086 16.105 323.66 16.102 323.18 cv
16.105 322.781 16.055 322.43 15.953 322.129 cv
15.855 321.828 15.746 321.574 15.621 321.359 cv
15.5 321.152 15.391 320.977 15.289 320.84 cv
15.195 320.703 15.145 320.598 15.141 320.516 cv
15.145 320.484 15.152 320.453 15.164 320.422 cv
15.184 320.398 15.215 320.375 15.254 320.359 cv
15.301 320.344 15.359 320.332 15.438 320.324 cv
15.516 320.316 15.617 320.312 15.734 320.312 cv
cp
f
13.379 312.164 mo
13.957 312.168 14.484 312.242 14.961 312.391 cv
15.445 312.543 15.859 312.77 16.203 313.066 cv
16.555 313.367 16.824 313.742 17.016 314.187 cv
17.211 314.641 17.305 315.16 17.309 315.75 cv
17.305 316.328 17.223 316.832 17.051 317.258 cv
16.883 317.687 16.633 318.043 16.305 318.328 cv
15.977 318.617 15.582 318.832 15.113 318.969 cv
14.648 319.109 14.117 319.176 13.52 319.176 cv
12.953 319.176 12.426 319.105 11.945 318.957 cv
11.465 318.812 11.051 318.586 10.699 318.285 cv
10.352 317.988 10.082 317.617 9.891 317.168 cv
9.699 316.723 9.602 316.199 9.602 315.602 cv
9.602 315.023 9.688 314.523 9.859 314.094 cv
10.031 313.668 10.281 313.309 10.609 313.023 cv
10.938 312.738 11.336 312.523 11.801 312.379 cv
12.27 312.238 12.797 312.168 13.379 312.164 cv
cp
13.465 313.496 mo
13.09 313.5 12.73 313.535 12.391 313.602 cv
12.055 313.676 11.762 313.793 11.504 313.953 cv
11.254 314.117 11.051 314.336 10.898 314.613 cv
10.754 314.895 10.68 315.242 10.676 315.652 cv
10.68 316.039 10.746 316.367 10.879 316.641 cv
11.016 316.918 11.207 317.145 11.453 317.32 cv
11.699 317.5 11.992 317.633 12.328 317.715 cv
12.668 317.805 13.035 317.848 13.434 317.844 cv
13.82 317.848 14.184 317.812 14.52 317.738 cv
14.859 317.672 15.152 317.555 15.402 317.387 cv
15.656 317.223 15.859 317 16.004 316.723 cv
16.156 316.445 16.23 316.098 16.227 315.684 cv
16.23 315.309 16.16 314.98 16.023 314.699 cv
15.891 314.422 15.703 314.195 15.453 314.016 cv
15.211 313.84 14.918 313.711 14.582 313.625 cv
14.246 313.543 13.875 313.5 13.465 313.496 cv
cp
f
16.965 304.238 mo
17.012 304.238 17.047 304.25 17.07 304.27 cv
17.102 304.293 17.125 304.328 17.145 304.371 cv
17.164 304.422 17.176 304.484 17.191 304.566 cv
17.199 304.648 17.207 304.754 17.207 304.875 cv
17.207 305.008 17.199 305.113 17.191 305.195 cv
17.176 305.281 17.164 305.348 17.145 305.391 cv
17.125 305.441 17.102 305.473 17.07 305.492 cv
17.047 305.516 17.012 305.527 16.965 305.523 cv
12.859 305.523 li
12.461 305.527 12.141 305.559 11.895 305.617 cv
11.652 305.684 11.441 305.773 11.262 305.891 cv
11.086 306.008 10.949 306.164 10.855 306.352 cv
10.762 306.547 10.715 306.766 10.715 307.012 cv
10.715 307.336 10.832 307.66 11.059 307.98 cv
11.293 308.305 11.625 308.641 12.063 308.992 cv
16.965 308.992 li
17.012 308.996 17.047 309.008 17.07 309.023 cv
17.102 309.047 17.125 309.078 17.145 309.125 cv
17.164 309.172 17.176 309.238 17.191 309.316 cv
17.199 309.402 17.207 309.508 17.207 309.637 cv
17.207 309.766 17.199 309.871 17.191 309.949 cv
17.176 310.035 17.164 310.102 17.145 310.148 cv
17.125 310.203 17.102 310.234 17.07 310.25 cv
17.047 310.27 17.012 310.281 16.965 310.277 cv
9.953 310.277 li
9.914 310.281 9.879 310.273 9.848 310.254 cv
9.82 310.242 9.797 310.211 9.77 310.16 cv
9.75 310.117 9.734 310.055 9.723 309.98 cv
9.719 309.91 9.715 309.816 9.711 309.691 cv
9.715 309.582 9.719 309.484 9.723 309.406 cv
9.734 309.332 9.75 309.273 9.77 309.23 cv
9.797 309.191 9.82 309.164 9.848 309.145 cv
9.879 309.129 9.914 309.121 9.953 309.117 cv
10.879 309.117 li
10.438 308.727 10.117 308.332 9.91 307.937 cv
9.707 307.547 9.602 307.148 9.602 306.746 cv
9.602 306.277 9.684 305.887 9.84 305.566 cv
10.004 305.25 10.215 304.988 10.477 304.789 cv
10.742 304.594 11.051 304.453 11.406 304.367 cv
11.762 304.281 12.191 304.238 12.688 304.238 cv
cp
f
15.055 297.496 mo
15.418 297.5 15.738 297.566 16.016 297.695 cv
16.297 297.828 16.531 298.016 16.723 298.258 cv
16.918 298.504 17.063 298.797 17.16 299.133 cv
17.258 299.473 17.305 299.844 17.309 300.246 cv
17.305 300.5 17.285 300.738 17.25 300.961 cv
17.207 301.187 17.16 301.387 17.102 301.566 cv
17.043 301.746 16.98 301.898 16.914 302.023 cv
16.852 302.148 16.793 302.242 16.738 302.297 cv
16.688 302.355 16.617 302.395 16.52 302.418 cv
16.43 302.445 16.301 302.457 16.141 302.457 cv
16.043 302.457 15.961 302.453 15.891 302.441 cv
15.824 302.434 15.77 302.422 15.727 302.402 cv
15.688 302.391 15.656 302.367 15.637 302.34 cv
15.621 302.312 15.613 302.281 15.609 302.242 cv
15.613 302.187 15.648 302.102 15.715 301.988 cv
15.789 301.879 15.867 301.742 15.945 301.574 cv
16.031 301.414 16.105 301.223 16.176 300.996 cv
16.246 300.777 16.281 300.52 16.281 300.223 cv
16.281 300.008 16.258 299.809 16.211 299.629 cv
16.164 299.453 16.098 299.301 16.004 299.172 cv
15.918 299.043 15.801 298.941 15.656 298.871 cv
15.52 298.801 15.352 298.766 15.156 298.766 cv
14.961 298.766 14.797 298.816 14.66 298.918 cv
14.527 299.02 14.406 299.156 14.301 299.32 cv
14.199 299.488 14.109 299.672 14.023 299.879 cv
13.945 300.09 13.859 300.305 13.77 300.523 cv
13.684 300.742 13.582 300.957 13.469 301.168 cv
13.359 301.379 13.227 301.57 13.063 301.734 cv
12.906 301.906 12.711 302.039 12.484 302.137 cv
12.262 302.242 11.996 302.293 11.684 302.289 cv
11.41 302.293 11.145 302.238 10.891 302.129 cv
10.641 302.023 10.422 301.863 10.23 301.648 cv
10.043 301.437 9.891 301.172 9.773 300.852 cv
9.66 300.531 9.602 300.16 9.602 299.73 cv
9.602 299.547 9.617 299.359 9.648 299.172 cv
9.68 298.988 9.719 298.82 9.766 298.664 cv
9.813 298.516 9.863 298.387 9.918 298.277 cv
9.973 298.176 10.023 298.094 10.063 298.035 cv
10.109 297.984 10.145 297.949 10.172 297.926 cv
10.203 297.91 10.238 297.895 10.273 297.887 cv
10.316 297.879 10.363 297.871 10.418 297.863 cv
10.477 297.855 10.547 297.852 10.629 297.852 cv
10.719 297.852 10.797 297.855 10.859 297.863 cv
10.93 297.871 10.98 297.887 11.02 297.902 cv
11.063 297.926 11.094 297.945 11.109 297.969 cv
11.129 297.996 11.137 298.027 11.137 298.055 cv
11.137 298.105 11.109 298.172 11.051 298.258 cv
10.996 298.348 10.934 298.461 10.867 298.602 cv
10.805 298.742 10.746 298.91 10.684 299.098 cv
10.629 299.289 10.598 299.504 10.598 299.746 cv
10.598 299.969 10.625 300.16 10.672 300.324 cv
10.727 300.492 10.797 300.629 10.883 300.734 cv
10.977 300.84 11.082 300.922 11.207 300.973 cv
11.332 301.031 11.469 301.059 11.613 301.055 cv
11.816 301.059 11.984 301.008 12.121 300.902 cv
12.262 300.801 12.383 300.664 12.484 300.496 cv
12.59 300.332 12.684 300.141 12.766 299.926 cv
12.852 299.715 12.938 299.5 13.023 299.277 cv
13.113 299.059 13.215 298.84 13.32 298.621 cv
13.43 298.406 13.559 298.215 13.715 298.047 cv
13.871 297.883 14.059 297.75 14.277 297.648 cv
14.496 297.551 14.758 297.5 15.055 297.496 cv
cp
f
16.965 289.648 mo
17.012 289.652 17.047 289.66 17.07 289.676 cv
17.102 289.695 17.125 289.73 17.145 289.773 cv
17.164 289.82 17.176 289.879 17.191 289.953 cv
17.199 290.031 17.207 290.125 17.207 290.23 cv
17.207 290.355 17.199 290.453 17.191 290.523 cv
17.176 290.602 17.164 290.66 17.145 290.703 cv
17.125 290.75 17.102 290.781 17.07 290.793 cv
17.047 290.812 17.012 290.82 16.965 290.816 cv
16.039 290.816 li
16.484 291.219 16.805 291.613 17.004 292 cv
17.207 292.395 17.305 292.789 17.309 293.184 cv
17.305 293.656 17.23 294.051 17.074 294.367 cv
16.922 294.687 16.711 294.945 16.441 295.141 cv
16.176 295.344 15.863 295.484 15.504 295.566 cv
15.148 295.656 14.715 295.699 14.207 295.695 cv
9.953 295.695 li
9.914 295.699 9.879 295.691 9.848 295.668 cv
9.82 295.652 9.797 295.617 9.77 295.562 cv
9.75 295.516 9.734 295.445 9.723 295.359 cv
9.719 295.277 9.715 295.176 9.711 295.047 cv
9.715 294.926 9.719 294.82 9.723 294.734 cv
9.734 294.652 9.75 294.586 9.77 294.539 cv
9.797 294.492 9.82 294.457 9.848 294.434 cv
9.879 294.414 9.914 294.406 9.953 294.402 cv
14.035 294.402 li
14.449 294.406 14.777 294.375 15.023 294.312 cv
15.27 294.254 15.48 294.164 15.652 294.039 cv
15.832 293.922 15.965 293.766 16.059 293.574 cv
16.156 293.391 16.207 293.172 16.203 292.922 cv
16.207 292.602 16.09 292.281 15.859 291.957 cv
15.633 291.641 15.297 291.301 14.852 290.941 cv
9.953 290.941 li
9.914 290.941 9.879 290.934 9.848 290.914 cv
9.82 290.898 9.797 290.863 9.77 290.809 cv
9.75 290.758 9.734 290.691 9.723 290.609 cv
9.719 290.531 9.715 290.426 9.711 290.293 cv
9.715 290.172 9.719 290.066 9.723 289.98 cv
9.734 289.898 9.75 289.836 9.77 289.789 cv
9.797 289.746 9.82 289.711 9.848 289.684 cv
9.879 289.664 9.914 289.652 9.953 289.648 cv
cp
f
16.965 276.871 mo
17.012 276.875 17.047 276.883 17.07 276.902 cv
17.102 276.926 17.125 276.961 17.145 277.004 cv
17.164 277.055 17.176 277.121 17.191 277.199 cv
17.199 277.285 17.207 277.387 17.207 277.512 cv
17.207 277.645 17.199 277.754 17.191 277.832 cv
17.176 277.918 17.164 277.984 17.145 278.031 cv
17.125 278.086 17.102 278.121 17.07 278.137 cv
17.047 278.16 17.012 278.168 16.965 278.168 cv
12.703 278.168 li
12.41 278.168 12.141 278.195 11.895 278.246 cv
11.652 278.301 11.441 278.383 11.262 278.496 cv
11.086 278.609 10.949 278.754 10.855 278.93 cv
10.762 279.109 10.715 279.32 10.715 279.555 cv
10.715 279.852 10.832 280.148 11.059 280.445 cv
11.293 280.75 11.625 281.078 12.063 281.434 cv
16.965 281.434 li
17.012 281.437 17.047 281.449 17.07 281.465 cv
17.102 281.488 17.125 281.52 17.145 281.566 cv
17.164 281.617 17.176 281.684 17.191 281.766 cv
17.199 281.852 17.207 281.957 17.207 282.078 cv
17.207 282.199 17.199 282.301 17.191 282.387 cv
17.176 282.473 17.164 282.543 17.145 282.59 cv
17.125 282.645 17.102 282.676 17.07 282.691 cv
17.047 282.711 17.012 282.723 16.965 282.719 cv
12.703 282.719 li
12.41 282.723 12.141 282.75 11.895 282.805 cv
11.652 282.863 11.441 282.949 11.262 283.062 cv
11.086 283.176 10.949 283.32 10.855 283.492 cv
10.762 283.672 10.715 283.879 10.715 284.113 cv
10.715 284.414 10.832 284.711 11.059 285.012 cv
11.293 285.312 11.625 285.641 12.063 285.992 cv
16.965 285.992 li
17.012 285.996 17.047 286.008 17.07 286.023 cv
17.102 286.047 17.125 286.078 17.145 286.125 cv
17.164 286.172 17.176 286.238 17.191 286.316 cv
17.199 286.402 17.207 286.508 17.207 286.637 cv
17.207 286.766 17.199 286.871 17.191 286.949 cv
17.176 287.035 17.164 287.102 17.145 287.148 cv
17.125 287.203 17.102 287.234 17.07 287.25 cv
17.047 287.27 17.012 287.281 16.965 287.277 cv
9.953 287.277 li
9.914 287.281 9.879 287.273 9.848 287.254 cv
9.82 287.242 9.797 287.211 9.77 287.16 cv
9.75 287.117 9.734 287.055 9.723 286.98 cv
9.719 286.91 9.715 286.816 9.711 286.691 cv
9.715 286.582 9.719 286.484 9.723 286.406 cv
9.734 286.332 9.75 286.273 9.77 286.23 cv
9.797 286.191 9.82 286.164 9.848 286.145 cv
9.879 286.129 9.914 286.121 9.953 286.117 cv
10.879 286.117 li
10.438 285.727 10.117 285.344 9.91 284.969 cv
9.707 284.602 9.602 284.223 9.602 283.84 cv
9.602 283.551 9.637 283.293 9.703 283.059 cv
9.773 282.832 9.867 282.625 9.988 282.445 cv
10.109 282.27 10.254 282.121 10.422 281.992 cv
10.594 281.871 10.785 281.766 10.988 281.68 cv
10.738 281.449 10.523 281.227 10.344 281.016 cv
10.172 280.805 10.027 280.602 9.914 280.406 cv
9.809 280.211 9.73 280.023 9.676 279.84 cv
9.629 279.656 9.602 279.469 9.602 279.281 cv
9.602 278.828 9.684 278.449 9.84 278.145 cv
10.004 277.84 10.215 277.594 10.477 277.398 cv
10.742 277.211 11.051 277.074 11.406 276.992 cv
11.762 276.914 12.137 276.875 12.531 276.871 cv
cp
f
13.348 268.074 mo
13.965 268.078 14.516 268.145 15.004 268.273 cv
15.492 268.41 15.906 268.605 16.246 268.859 cv
16.586 269.117 16.848 269.434 17.031 269.812 cv
17.215 270.191 17.305 270.625 17.309 271.113 cv
17.305 271.324 17.285 271.52 17.246 271.691 cv
17.203 271.871 17.141 272.043 17.051 272.207 cv
16.965 272.379 16.852 272.547 16.715 272.711 cv
16.582 272.883 16.426 273.059 16.242 273.242 cv
19.746 273.242 li
19.785 273.246 19.824 273.258 19.855 273.273 cv
19.887 273.297 19.91 273.328 19.934 273.375 cv
19.949 273.422 19.965 273.488 19.98 273.566 cv
19.988 273.652 19.996 273.758 19.996 273.887 cv
19.996 274.016 19.988 274.121 19.98 274.199 cv
19.965 274.285 19.949 274.352 19.934 274.398 cv
19.91 274.453 19.887 274.484 19.855 274.5 cv
19.824 274.52 19.785 274.531 19.746 274.527 cv
9.953 274.527 li
9.906 274.531 9.871 274.523 9.84 274.504 cv
9.816 274.492 9.789 274.461 9.766 274.41 cv
9.746 274.367 9.734 274.305 9.723 274.23 cv
9.719 274.16 9.715 274.074 9.711 273.965 cv
9.715 273.859 9.719 273.77 9.723 273.695 cv
9.734 273.629 9.746 273.57 9.766 273.52 cv
9.789 273.477 9.816 273.441 9.84 273.422 cv
9.871 273.406 9.906 273.398 9.953 273.395 cv
10.895 273.395 li
10.68 273.187 10.488 272.984 10.328 272.781 cv
10.168 272.586 10.035 272.387 9.926 272.184 cv
9.82 271.988 9.738 271.781 9.684 271.57 cv
9.629 271.359 9.602 271.137 9.602 270.902 cv
9.602 270.395 9.703 269.961 9.898 269.602 cv
10.098 269.242 10.367 268.953 10.707 268.727 cv
11.055 268.504 11.453 268.336 11.906 268.23 cv
12.363 268.129 12.844 268.078 13.348 268.074 cv
cp
13.496 269.406 mo
13.145 269.41 12.797 269.437 12.457 269.488 cv
12.125 269.547 11.828 269.641 11.566 269.773 cv
11.309 269.91 11.102 270.09 10.941 270.309 cv
10.789 270.535 10.711 270.812 10.707 271.148 cv
10.711 271.316 10.734 271.48 10.781 271.641 cv
10.832 271.805 10.91 271.973 11.016 272.137 cv
11.125 272.309 11.266 272.48 11.438 272.66 cv
11.613 272.844 11.828 273.039 12.078 273.242 cv
14.867 273.242 li
15.305 272.887 15.633 272.551 15.859 272.23 cv
16.09 271.914 16.207 271.578 16.203 271.227 cv
16.207 270.902 16.129 270.625 15.969 270.391 cv
15.816 270.164 15.605 269.977 15.344 269.828 cv
15.086 269.687 14.797 269.578 14.473 269.508 cv
14.152 269.441 13.828 269.41 13.496 269.406 cv
cp
f
16.449 262.578 mo
16.605 262.578 16.723 262.59 16.809 262.609 cv
16.898 262.633 16.965 262.664 17.004 262.703 cv
17.047 262.746 17.086 262.809 17.121 262.891 cv
17.156 262.977 17.184 263.07 17.211 263.176 cv
17.23 263.285 17.25 263.398 17.27 263.516 cv
17.281 263.633 17.289 263.754 17.293 263.871 cv
17.289 264.238 17.242 264.551 17.148 264.809 cv
17.055 265.07 16.91 265.281 16.711 265.445 cv
16.52 265.613 16.273 265.734 15.973 265.809 cv
15.676 265.887 15.324 265.926 14.914 265.922 cv
10.816 265.922 li
10.816 266.902 li
10.82 266.98 10.777 267.043 10.691 267.09 cv
10.609 267.137 10.477 267.16 10.285 267.16 cv
10.191 267.16 10.109 267.156 10.039 267.141 cv
9.977 267.133 9.918 267.113 9.871 267.09 cv
9.828 267.07 9.797 267.043 9.777 267.008 cv
9.762 266.977 9.754 266.941 9.75 266.895 cv
9.75 265.922 li
8.082 265.922 li
8.051 265.926 8.016 265.914 7.98 265.895 cv
7.953 265.879 7.926 265.848 7.898 265.793 cv
7.879 265.746 7.863 265.68 7.848 265.594 cv
7.84 265.516 7.832 265.41 7.832 265.281 cv
7.832 265.152 7.84 265.047 7.848 264.965 cv
7.863 264.883 7.879 264.816 7.898 264.77 cv
7.926 264.723 7.953 264.691 7.98 264.668 cv
8.016 264.652 8.051 264.641 8.082 264.637 cv
9.75 264.637 li
9.75 262.836 li
9.754 262.797 9.762 262.762 9.777 262.727 cv
9.797 262.699 9.828 262.672 9.871 262.645 cv
9.918 262.625 9.977 262.609 10.039 262.594 cv
10.109 262.586 10.191 262.578 10.285 262.578 cv
10.477 262.578 10.609 262.602 10.691 262.648 cv
10.777 262.695 10.82 262.758 10.816 262.836 cv
10.816 264.637 li
14.73 264.637 li
15.215 264.641 15.578 264.57 15.824 264.422 cv
16.074 264.281 16.199 264.023 16.195 263.652 cv
16.199 263.539 16.188 263.434 16.16 263.336 cv
16.141 263.246 16.117 263.164 16.086 263.086 cv
16.063 263.016 16.035 262.953 16.012 262.898 cv
15.988 262.852 15.977 262.805 15.977 262.758 cv
15.977 262.734 15.984 262.707 15.996 262.684 cv
16.012 262.66 16.035 262.645 16.07 262.629 cv
16.109 262.621 16.16 262.609 16.219 262.594 cv
16.285 262.586 16.363 262.578 16.449 262.578 cv
cp
f
16.965 259.562 mo
17.012 259.566 17.047 259.578 17.07 259.594 cv
17.102 259.617 17.125 259.648 17.145 259.695 cv
17.164 259.742 17.176 259.809 17.191 259.887 cv
17.199 259.973 17.207 260.078 17.207 260.207 cv
17.207 260.336 17.199 260.441 17.191 260.52 cv
17.176 260.605 17.164 260.672 17.145 260.719 cv
17.125 260.773 17.102 260.805 17.07 260.82 cv
17.047 260.84 17.012 260.852 16.965 260.848 cv
9.953 260.848 li
9.918 260.852 9.887 260.84 9.852 260.82 cv
9.824 260.805 9.797 260.773 9.773 260.719 cv
9.754 260.672 9.738 260.605 9.727 260.52 cv
9.719 260.441 9.715 260.336 9.711 260.207 cv
9.715 260.078 9.719 259.973 9.727 259.887 cv
9.738 259.809 9.754 259.742 9.773 259.695 cv
9.797 259.648 9.824 259.617 9.852 259.594 cv
9.887 259.578 9.918 259.566 9.953 259.562 cv
cp
7.582 259.414 mo
7.887 259.414 8.094 259.473 8.199 259.586 cv
8.313 259.699 8.367 259.91 8.363 260.215 cv
8.367 260.52 8.313 260.727 8.203 260.836 cv
8.098 260.953 7.895 261.008 7.598 261.004 cv
7.297 261.008 7.094 260.949 6.984 260.832 cv
6.879 260.719 6.824 260.508 6.82 260.199 cv
6.824 259.898 6.879 259.695 6.98 259.582 cv
7.09 259.473 7.289 259.414 7.582 259.414 cv
cp
f
13.379 250.621 mo
13.957 250.625 14.484 250.699 14.961 250.848 cv
15.445 251 15.859 251.227 16.203 251.523 cv
16.555 251.824 16.824 252.199 17.016 252.645 cv
17.211 253.098 17.305 253.617 17.309 254.207 cv
17.305 254.785 17.223 255.289 17.051 255.715 cv
16.883 256.145 16.633 256.5 16.305 256.785 cv
15.977 257.074 15.582 257.289 15.113 257.426 cv
14.648 257.566 14.117 257.633 13.52 257.633 cv
12.953 257.633 12.426 257.562 11.945 257.414 cv
11.465 257.27 11.051 257.043 10.699 256.742 cv
10.352 256.445 10.082 256.074 9.891 255.625 cv
9.699 255.18 9.602 254.656 9.602 254.059 cv
9.602 253.48 9.688 252.98 9.859 252.551 cv
10.031 252.125 10.281 251.766 10.609 251.48 cv
10.938 251.195 11.336 250.98 11.801 250.836 cv
12.27 250.695 12.797 250.625 13.379 250.621 cv
cp
13.465 251.953 mo
13.09 251.957 12.73 251.992 12.391 252.059 cv
12.055 252.133 11.762 252.25 11.504 252.41 cv
11.254 252.574 11.051 252.793 10.898 253.07 cv
10.754 253.352 10.68 253.699 10.676 254.109 cv
10.68 254.496 10.746 254.824 10.879 255.098 cv
11.016 255.375 11.207 255.602 11.453 255.777 cv
11.699 255.957 11.992 256.09 12.328 256.172 cv
12.668 256.262 13.035 256.305 13.434 256.301 cv
13.82 256.305 14.184 256.27 14.52 256.195 cv
14.859 256.129 15.152 256.012 15.402 255.844 cv
15.656 255.68 15.859 255.457 16.004 255.18 cv
16.156 254.902 16.23 254.555 16.227 254.141 cv
16.23 253.766 16.16 253.437 16.023 253.156 cv
15.891 252.879 15.703 252.652 15.453 252.473 cv
15.211 252.297 14.918 252.168 14.582 252.082 cv
14.246 252 13.875 251.957 13.465 251.953 cv
cp
f
16.965 242.695 mo
17.012 242.695 17.047 242.707 17.07 242.727 cv
17.102 242.75 17.125 242.785 17.145 242.828 cv
17.164 242.879 17.176 242.941 17.191 243.023 cv
17.199 243.105 17.207 243.211 17.207 243.332 cv
17.207 243.465 17.199 243.57 17.191 243.652 cv
17.176 243.738 17.164 243.805 17.145 243.848 cv
17.125 243.898 17.102 243.93 17.07 243.949 cv
17.047 243.973 17.012 243.984 16.965 243.98 cv
12.859 243.98 li
12.461 243.984 12.141 244.016 11.895 244.074 cv
11.652 244.141 11.441 244.23 11.262 244.348 cv
11.086 244.465 10.949 244.621 10.855 244.809 cv
10.762 245.004 10.715 245.223 10.715 245.469 cv
10.715 245.793 10.832 246.117 11.059 246.437 cv
11.293 246.762 11.625 247.098 12.063 247.449 cv
16.965 247.449 li
17.012 247.453 17.047 247.465 17.07 247.48 cv
17.102 247.504 17.125 247.535 17.145 247.582 cv
17.164 247.629 17.176 247.695 17.191 247.773 cv
17.199 247.859 17.207 247.965 17.207 248.094 cv
17.207 248.223 17.199 248.328 17.191 248.406 cv
17.176 248.492 17.164 248.559 17.145 248.605 cv
17.125 248.66 17.102 248.691 17.07 248.707 cv
17.047 248.727 17.012 248.738 16.965 248.734 cv
9.953 248.734 li
9.914 248.738 9.879 248.73 9.848 248.711 cv
9.82 248.699 9.797 248.668 9.77 248.617 cv
9.75 248.574 9.734 248.512 9.723 248.437 cv
9.719 248.367 9.715 248.273 9.711 248.148 cv
9.715 248.039 9.719 247.941 9.723 247.863 cv
9.734 247.789 9.75 247.73 9.77 247.687 cv
9.797 247.648 9.82 247.621 9.848 247.602 cv
9.879 247.586 9.914 247.578 9.953 247.574 cv
10.879 247.574 li
10.438 247.184 10.117 246.789 9.91 246.395 cv
9.707 246.004 9.602 245.605 9.602 245.203 cv
9.602 244.734 9.684 244.344 9.84 244.023 cv
10.004 243.707 10.215 243.445 10.477 243.246 cv
10.742 243.051 11.051 242.91 11.406 242.824 cv
11.762 242.738 12.191 242.695 12.688 242.695 cv
cp
f
6.422 233.859 mo
7.469 234.355 8.539 234.723 9.637 234.965 cv
10.738 235.207 11.844 235.328 12.953 235.328 cv
14.07 235.328 15.18 235.207 16.273 234.957 cv
17.371 234.715 18.441 234.352 19.496 233.875 cv
19.555 233.852 19.609 233.84 19.656 233.832 cv
19.699 233.832 19.734 233.848 19.766 233.883 cv
19.793 233.922 19.813 233.977 19.828 234.051 cv
19.836 234.129 19.844 234.234 19.848 234.359 cv
19.844 234.457 19.84 234.535 19.84 234.602 cv
19.832 234.672 19.824 234.73 19.809 234.777 cv
19.793 234.828 19.773 234.871 19.754 234.898 cv
19.73 234.934 19.707 234.957 19.684 234.969 cv
19.152 235.25 18.617 235.496 18.074 235.707 cv
17.531 235.926 16.98 236.105 16.422 236.246 cv
15.859 236.395 15.293 236.504 14.719 236.574 cv
14.145 236.652 13.563 236.687 12.977 236.684 cv
12.391 236.687 11.813 236.648 11.238 236.562 cv
10.668 236.484 10.102 236.367 9.535 236.219 cv
8.973 236.07 8.418 235.891 7.871 235.68 cv
7.328 235.469 6.785 235.23 6.25 234.961 cv
6.23 234.957 6.215 234.941 6.195 234.918 cv
6.184 234.895 6.168 234.863 6.148 234.82 cv
6.137 234.781 6.125 234.723 6.113 234.648 cv
6.109 234.578 6.105 234.484 6.102 234.367 cv
6.105 234.25 6.113 234.156 6.125 234.078 cv
6.145 234.008 6.164 233.949 6.188 233.906 cv
6.215 233.867 6.25 233.844 6.289 233.836 cv
6.336 233.832 6.379 233.84 6.422 233.859 cv
cp
f
16.941 224.965 mo
16.988 224.969 17.023 224.977 17.055 224.992 cv
17.09 225.012 17.117 225.047 17.137 225.098 cv
17.156 225.152 17.172 225.223 17.188 225.309 cv
17.199 225.398 17.207 225.512 17.207 225.652 cv
17.207 225.832 17.199 225.98 17.184 226.094 cv
17.168 226.211 17.141 226.297 17.098 226.352 cv
17.059 226.41 17.012 226.457 16.957 226.492 cv
11.914 230.203 li
16.957 230.203 li
16.996 230.207 17.031 230.215 17.063 230.234 cv
17.098 230.258 17.125 230.297 17.141 230.344 cv
17.16 230.398 17.172 230.465 17.188 230.551 cv
17.199 230.637 17.207 230.746 17.207 230.871 cv
17.207 231 17.199 231.105 17.188 231.191 cv
17.172 231.281 17.16 231.352 17.141 231.402 cv
17.125 231.457 17.098 231.492 17.063 231.512 cv
17.031 231.535 16.996 231.547 16.957 231.543 cv
7.277 231.543 li
7.238 231.547 7.203 231.535 7.168 231.512 cv
7.141 231.492 7.113 231.457 7.094 231.402 cv
7.078 231.352 7.063 231.281 7.047 231.191 cv
7.035 231.105 7.031 231 7.027 230.871 cv
7.031 230.746 7.035 230.637 7.047 230.551 cv
7.063 230.465 7.078 230.398 7.094 230.344 cv
7.113 230.297 7.141 230.258 7.168 230.234 cv
7.203 230.215 7.238 230.207 7.277 230.203 cv
11.758 230.203 li
7.277 226.633 li
7.234 226.605 7.195 226.57 7.16 226.523 cv
7.133 226.484 7.109 226.434 7.086 226.371 cv
7.07 226.316 7.055 226.242 7.043 226.152 cv
7.035 226.07 7.031 225.961 7.027 225.824 cv
7.031 225.691 7.035 225.582 7.047 225.496 cv
7.063 225.414 7.082 225.348 7.098 225.297 cv
7.121 225.25 7.145 225.215 7.176 225.195 cv
7.207 225.18 7.242 225.172 7.277 225.168 cv
7.348 225.172 7.414 225.187 7.48 225.219 cv
7.551 225.254 7.645 225.32 7.762 225.41 cv
11.758 228.754 li
16.543 225.152 li
16.684 225.066 16.773 225.012 16.82 224.992 cv
16.871 224.977 16.914 224.969 16.941 224.965 cv
cp
f
16.863 213.875 mo
16.938 213.898 16.996 213.93 17.039 213.969 cv
17.086 214.012 17.121 214.07 17.141 214.141 cv
17.164 214.219 17.176 214.309 17.191 214.41 cv
17.199 214.52 17.207 214.648 17.207 214.801 cv
17.207 214.965 17.199 215.102 17.191 215.211 cv
17.176 215.324 17.164 215.418 17.141 215.488 cv
17.121 215.566 17.086 215.621 17.039 215.652 cv
16.996 215.691 16.938 215.719 16.863 215.738 cv
9.25 217.852 li
9.25 217.863 li
16.863 219.812 li
16.938 219.832 16.996 219.855 17.039 219.891 cv
17.086 219.93 17.121 219.984 17.141 220.047 cv
17.164 220.117 17.176 220.203 17.191 220.309 cv
17.199 220.418 17.207 220.555 17.207 220.719 cv
17.207 220.891 17.199 221.031 17.191 221.145 cv
17.176 221.262 17.164 221.355 17.141 221.426 cv
17.121 221.5 17.086 221.559 17.039 221.594 cv
16.996 221.637 16.938 221.664 16.863 221.676 cv
7.551 224.34 li
7.434 224.375 7.34 224.391 7.27 224.391 cv
7.203 224.395 7.152 224.375 7.113 224.328 cv
7.078 224.285 7.055 224.215 7.043 224.117 cv
7.035 224.02 7.031 223.887 7.027 223.719 cv
7.031 223.559 7.035 223.43 7.039 223.336 cv
7.051 223.242 7.063 223.172 7.082 223.121 cv
7.105 223.074 7.137 223.039 7.168 223.02 cv
7.207 223.004 7.254 222.992 7.309 222.977 cv
15.758 220.711 li
15.758 220.703 li
7.324 218.551 li
7.27 218.539 7.223 218.52 7.18 218.492 cv
7.145 218.473 7.113 218.434 7.09 218.379 cv
7.07 218.328 7.055 218.254 7.043 218.156 cv
7.035 218.062 7.031 217.937 7.027 217.781 cv
7.031 217.637 7.035 217.523 7.043 217.434 cv
7.055 217.352 7.07 217.281 7.09 217.227 cv
7.113 217.176 7.145 217.137 7.18 217.113 cv
7.223 217.09 7.27 217.07 7.324 217.055 cv
15.758 214.738 li
15.758 214.727 li
7.316 212.504 li
7.266 212.492 7.223 212.477 7.18 212.457 cv
7.145 212.445 7.113 212.414 7.09 212.359 cv
7.07 212.312 7.055 212.242 7.043 212.148 cv
7.035 212.062 7.031 211.941 7.027 211.785 cv
7.031 211.637 7.035 211.512 7.047 211.418 cv
7.063 211.328 7.09 211.262 7.121 211.219 cv
7.16 211.18 7.211 211.16 7.277 211.16 cv
7.348 211.164 7.441 211.18 7.559 211.203 cv
cp
f
16.965 203.434 mo
17.012 203.434 17.047 203.445 17.07 203.465 cv
17.102 203.488 17.125 203.523 17.145 203.566 cv
17.164 203.617 17.176 203.68 17.191 203.762 cv
17.199 203.844 17.207 203.949 17.207 204.07 cv
17.207 204.203 17.199 204.309 17.191 204.391 cv
17.176 204.477 17.164 204.543 17.145 204.586 cv
17.125 204.637 17.102 204.668 17.07 204.687 cv
17.047 204.711 17.012 204.723 16.965 204.719 cv
12.859 204.719 li
12.461 204.723 12.141 204.754 11.895 204.812 cv
11.652 204.879 11.441 204.969 11.262 205.086 cv
11.086 205.203 10.949 205.359 10.855 205.547 cv
10.762 205.742 10.715 205.961 10.715 206.207 cv
10.715 206.531 10.832 206.855 11.059 207.176 cv
11.293 207.5 11.625 207.836 12.063 208.187 cv
16.965 208.187 li
17.012 208.191 17.047 208.203 17.07 208.219 cv
17.102 208.242 17.125 208.273 17.145 208.32 cv
17.164 208.367 17.176 208.434 17.191 208.512 cv
17.199 208.598 17.207 208.703 17.207 208.832 cv
17.207 208.961 17.199 209.066 17.191 209.145 cv
17.176 209.23 17.164 209.297 17.145 209.344 cv
17.125 209.398 17.102 209.43 17.07 209.445 cv
17.047 209.465 17.012 209.477 16.965 209.473 cv
6.555 209.473 li
6.516 209.477 6.48 209.465 6.445 209.445 cv
6.418 209.43 6.391 209.398 6.367 209.344 cv
6.348 209.297 6.332 209.23 6.32 209.145 cv
6.313 209.066 6.309 208.961 6.305 208.832 cv
6.309 208.703 6.313 208.598 6.32 208.512 cv
6.332 208.434 6.348 208.367 6.367 208.32 cv
6.391 208.273 6.418 208.242 6.445 208.219 cv
6.48 208.203 6.516 208.191 6.555 208.187 cv
10.754 208.187 li
10.367 207.82 10.078 207.449 9.887 207.074 cv
9.699 206.703 9.602 206.324 9.602 205.941 cv
9.602 205.473 9.684 205.082 9.84 204.762 cv
10.004 204.445 10.215 204.184 10.477 203.984 cv
10.742 203.789 11.051 203.648 11.406 203.562 cv
11.762 203.477 12.191 203.434 12.695 203.434 cv
cp
f
19.039 200.977 mo
19.105 201 19.16 201.027 19.199 201.059 cv
19.238 201.098 19.266 201.141 19.289 201.187 cv
19.305 201.242 19.32 201.305 19.336 201.379 cv
19.344 201.457 19.352 201.547 19.352 201.652 cv
19.352 201.785 19.34 201.895 19.324 201.977 cv
19.301 202.066 19.277 202.133 19.246 202.176 cv
19.211 202.227 19.168 202.254 19.121 202.262 cv
19.07 202.273 19.012 202.266 18.945 202.23 cv
6.016 197.516 li
5.949 197.496 5.898 197.469 5.855 197.434 cv
5.82 197.402 5.789 197.363 5.762 197.309 cv
5.742 197.262 5.727 197.195 5.715 197.117 cv
5.711 197.039 5.707 196.945 5.703 196.836 cv
5.707 196.711 5.715 196.605 5.73 196.52 cv
5.75 196.437 5.773 196.375 5.805 196.324 cv
5.836 196.281 5.879 196.25 5.93 196.238 cv
5.984 196.23 6.043 196.238 6.109 196.262 cv
cp
f
16.629 188.965 mo
16.73 188.969 16.813 188.977 16.879 188.988 cv
16.949 189.008 17.004 189.027 17.043 189.051 cv
17.086 189.078 17.117 189.109 17.133 189.141 cv
17.152 189.176 17.16 189.211 17.16 189.242 cv
17.16 194.512 li
17.16 194.551 17.152 194.586 17.133 194.613 cv
17.117 194.648 17.086 194.68 17.043 194.703 cv
17.004 194.734 16.949 194.754 16.879 194.77 cv
16.813 194.785 16.73 194.793 16.629 194.793 cv
16.539 194.793 16.461 194.785 16.391 194.77 cv
16.328 194.754 16.27 194.734 16.223 194.711 cv
16.18 194.687 16.148 194.66 16.121 194.625 cv
16.102 194.594 16.09 194.555 16.086 194.512 cv
16.086 192.406 li
8.418 192.406 li
9.578 194.355 li
9.633 194.457 9.664 194.535 9.672 194.594 cv
9.684 194.656 9.672 194.707 9.637 194.738 cv
9.605 194.777 9.551 194.801 9.469 194.812 cv
9.395 194.828 9.297 194.836 9.172 194.832 cv
9.086 194.836 9.008 194.832 8.945 194.82 cv
8.883 194.816 8.832 194.805 8.789 194.785 cv
8.75 194.773 8.715 194.75 8.68 194.719 cv
8.652 194.691 8.621 194.652 8.59 194.605 cv
7.098 192.285 li
7.086 192.266 7.07 192.242 7.059 192.207 cv
7.051 192.18 7.043 192.141 7.031 192.09 cv
7.023 192.047 7.016 191.992 7.012 191.926 cv
7.012 191.867 7.012 191.789 7.008 191.691 cv
7.012 191.57 7.016 191.465 7.023 191.379 cv
7.031 191.297 7.047 191.23 7.063 191.184 cv
7.086 191.137 7.109 191.105 7.133 191.09 cv
7.164 191.074 7.191 191.066 7.223 191.066 cv
16.086 191.066 li
16.086 189.242 li
16.09 189.203 16.102 189.164 16.121 189.129 cv
16.148 189.094 16.18 189.062 16.223 189.039 cv
16.27 189.016 16.328 189 16.391 188.984 cv
16.461 188.977 16.539 188.969 16.629 188.965 cv
cp
f
12.094 180.609 mo
12.871 180.609 13.578 180.672 14.215 180.793 cv
14.855 180.918 15.406 181.121 15.863 181.402 cv
16.324 181.687 16.68 182.059 16.93 182.512 cv
17.184 182.973 17.305 183.535 17.309 184.203 cv
17.305 184.84 17.195 185.375 16.969 185.805 cv
16.746 186.242 16.414 186.59 15.973 186.852 cv
15.535 187.121 14.996 187.309 14.352 187.418 cv
13.711 187.527 12.973 187.582 12.141 187.582 cv
11.375 187.582 10.672 187.523 10.027 187.398 cv
9.387 187.277 8.836 187.074 8.375 186.789 cv
7.918 186.512 7.563 186.141 7.309 185.684 cv
7.059 185.227 6.93 184.668 6.93 184 cv
6.93 183.363 7.043 182.824 7.27 182.391 cv
7.496 181.957 7.828 181.609 8.266 181.344 cv
8.703 181.082 9.246 180.895 9.887 180.777 cv
10.531 180.668 11.266 180.609 12.094 180.609 cv
cp
12.188 181.98 mo
11.688 181.98 11.234 182 10.832 182.035 cv
10.434 182.074 10.082 182.129 9.773 182.195 cv
9.469 182.27 9.203 182.359 8.98 182.469 cv
8.762 182.582 8.582 182.715 8.438 182.871 cv
8.297 183.027 8.191 183.207 8.125 183.402 cv
8.063 183.605 8.031 183.828 8.027 184.078 cv
8.031 184.52 8.137 184.879 8.34 185.152 cv
8.551 185.43 8.836 185.648 9.195 185.805 cv
9.563 185.965 9.988 186.07 10.477 186.125 cv
10.965 186.184 11.488 186.211 12.047 186.211 cv
12.805 186.211 13.445 186.172 13.973 186.094 cv
14.5 186.016 14.93 185.895 15.262 185.727 cv
15.594 185.559 15.836 185.344 15.984 185.078 cv
16.137 184.82 16.211 184.5 16.211 184.125 cv
16.211 183.836 16.164 183.582 16.07 183.355 cv
15.977 183.137 15.844 182.945 15.668 182.789 cv
15.496 182.633 15.289 182.504 15.043 182.395 cv
14.801 182.293 14.527 182.207 14.23 182.145 cv
13.934 182.082 13.613 182.039 13.27 182.016 cv
12.926 181.992 12.566 181.98 12.188 181.98 cv
cp
f
9.727 177.109 mo
9.867 177.113 9.961 177.129 10.008 177.156 cv
10.063 177.191 10.086 177.238 10.086 177.293 cv
10.086 179.473 li
10.086 179.539 10.063 179.586 10.008 179.613 cv
9.957 179.648 9.863 179.664 9.727 179.66 cv
9.598 179.664 9.504 179.648 9.449 179.613 cv
9.398 179.586 9.371 179.539 9.371 179.473 cv
9.371 177.293 li
9.371 177.27 9.379 177.242 9.387 177.219 cv
9.402 177.195 9.422 177.176 9.449 177.16 cv
9.48 177.145 9.516 177.133 9.559 177.125 cv
9.605 177.117 9.664 177.113 9.727 177.109 cv
cp
f
10.43 171.996 mo
10.742 172 11.02 172.055 11.27 172.16 cv
11.52 172.27 11.734 172.422 11.906 172.621 cv
12.086 172.824 12.223 173.074 12.316 173.367 cv
12.41 173.664 12.453 173.996 12.457 174.367 cv
12.453 174.598 12.434 174.809 12.402 175.004 cv
12.363 175.199 12.324 175.375 12.273 175.527 cv
12.227 175.68 12.176 175.805 12.117 175.906 cv
12.066 176.008 12.027 176.074 12 176.098 cv
11.98 176.129 11.957 176.148 11.93 176.156 cv
11.906 176.172 11.875 176.184 11.84 176.191 cv
11.805 176.207 11.762 176.215 11.711 176.215 cv
11.66 176.223 11.598 176.223 11.523 176.223 cv
11.402 176.223 11.316 176.211 11.266 176.187 cv
11.219 176.164 11.195 176.129 11.191 176.082 cv
11.195 176.051 11.223 175.988 11.277 175.891 cv
11.336 175.801 11.395 175.68 11.457 175.527 cv
11.52 175.383 11.582 175.211 11.637 175.008 cv
11.695 174.812 11.723 174.59 11.719 174.348 cv
11.723 174.113 11.691 173.906 11.629 173.727 cv
11.57 173.547 11.488 173.398 11.379 173.277 cv
11.277 173.156 11.148 173.066 10.996 173.004 cv
10.852 172.949 10.691 172.918 10.512 172.914 cv
10.324 172.918 10.152 172.957 10 173.031 cv
9.848 173.109 9.715 173.223 9.602 173.367 cv
9.492 173.52 9.406 173.703 9.348 173.918 cv
9.289 174.137 9.262 174.383 9.258 174.656 cv
9.258 175.32 li
9.262 175.352 9.254 175.383 9.238 175.406 cv
9.227 175.437 9.207 175.461 9.18 175.477 cv
9.152 175.5 9.117 175.516 9.07 175.523 cv
9.027 175.539 8.965 175.543 8.891 175.543 cv
8.828 175.543 8.773 175.539 8.727 175.527 cv
8.684 175.52 8.648 175.504 8.621 175.484 cv
8.598 175.465 8.582 175.445 8.566 175.418 cv
8.559 175.395 8.551 175.363 8.547 175.332 cv
8.547 174.742 li
8.551 174.516 8.523 174.309 8.461 174.125 cv
8.406 173.945 8.32 173.793 8.203 173.664 cv
8.094 173.539 7.961 173.441 7.805 173.371 cv
7.652 173.305 7.477 173.27 7.285 173.27 cv
7.148 173.27 7.016 173.293 6.887 173.336 cv
6.762 173.383 6.652 173.449 6.555 173.539 cv
6.465 173.633 6.391 173.75 6.336 173.887 cv
6.281 174.031 6.254 174.195 6.254 174.375 cv
6.254 174.578 6.285 174.762 6.344 174.93 cv
6.406 175.098 6.473 175.246 6.539 175.379 cv
6.613 175.512 6.68 175.625 6.738 175.711 cv
6.801 175.801 6.828 175.859 6.828 175.891 cv
6.828 175.918 6.824 175.941 6.816 175.957 cv
6.809 175.98 6.793 175.996 6.762 176.004 cv
6.738 176.02 6.699 176.027 6.652 176.027 cv
6.605 176.035 6.543 176.035 6.465 176.035 cv
6.414 176.035 6.371 176.035 6.328 176.031 cv
6.293 176.031 6.258 176.023 6.227 176.012 cv
6.199 176.004 6.172 175.992 6.145 175.977 cv
6.121 175.961 6.094 175.937 6.059 175.906 cv
6.027 175.875 5.977 175.809 5.914 175.703 cv
5.852 175.605 5.793 175.48 5.73 175.332 cv
5.672 175.184 5.617 175.016 5.574 174.82 cv
5.535 174.633 5.516 174.422 5.512 174.195 cv
5.516 173.883 5.555 173.609 5.633 173.371 cv
5.715 173.137 5.828 172.941 5.973 172.781 cv
6.121 172.625 6.297 172.504 6.496 172.426 cv
6.703 172.348 6.93 172.309 7.172 172.309 cv
7.387 172.309 7.582 172.34 7.762 172.395 cv
7.945 172.453 8.105 172.531 8.246 172.637 cv
8.387 172.746 8.508 172.879 8.609 173.035 cv
8.711 173.191 8.781 173.371 8.813 173.574 cv
8.824 173.574 li
8.852 173.344 8.91 173.133 9 172.937 cv
9.094 172.746 9.207 172.582 9.348 172.441 cv
9.488 172.305 9.652 172.195 9.836 172.113 cv
10.023 172.039 10.223 172 10.43 171.996 cv
cp
f
12.977 167.562 mo
13.563 167.562 14.145 167.602 14.719 167.672 cv
15.293 167.75 15.859 167.859 16.422 168 cv
16.98 168.148 17.531 168.324 18.074 168.535 cv
18.617 168.746 19.152 168.992 19.684 169.27 cv
19.707 169.289 19.73 169.312 19.754 169.34 cv
19.773 169.375 19.793 169.414 19.809 169.461 cv
19.824 169.512 19.832 169.57 19.84 169.637 cv
19.84 169.707 19.844 169.789 19.848 169.879 cv
19.844 170.016 19.836 170.121 19.828 170.195 cv
19.813 170.273 19.793 170.328 19.766 170.359 cv
19.734 170.395 19.699 170.41 19.656 170.406 cv
19.609 170.406 19.555 170.391 19.496 170.363 cv
18.445 169.887 17.375 169.527 16.277 169.281 cv
15.18 169.039 14.07 168.918 12.953 168.914 cv
11.844 168.918 10.738 169.039 9.637 169.281 cv
8.539 169.527 7.469 169.895 6.422 170.379 cv
6.379 170.402 6.336 170.41 6.289 170.402 cv
6.25 170.402 6.215 170.379 6.188 170.332 cv
6.164 170.293 6.145 170.234 6.125 170.16 cv
6.113 170.09 6.105 169.992 6.102 169.871 cv
6.105 169.762 6.109 169.672 6.113 169.598 cv
6.125 169.527 6.137 169.469 6.148 169.422 cv
6.168 169.379 6.184 169.348 6.195 169.324 cv
6.215 169.309 6.23 169.293 6.25 169.277 cv
7.316 168.746 8.414 168.324 9.535 168.02 cv
10.664 167.715 11.809 167.562 12.977 167.562 cv
cp
f
303.285 541.199 mo
303.285 541.305 303.266 541.395 303.23 541.465 cv
303.195 541.543 303.148 541.602 303.094 541.645 cv
303.031 541.695 302.969 541.73 302.902 541.746 cv
302.832 541.77 302.762 541.777 302.695 541.777 cv
302.25 541.777 li
302.105 541.777 301.984 541.766 301.883 541.734 cv
301.777 541.711 301.68 541.656 301.586 541.578 cv
301.492 541.504 301.395 541.402 301.301 541.27 cv
301.203 541.141 301.105 540.973 301.004 540.77 cv
297.922 535.027 li
297.758 534.73 297.594 534.422 297.434 534.094 cv
297.266 533.773 297.113 533.457 296.977 533.145 cv
296.961 533.145 li
296.969 533.523 296.977 533.906 296.984 534.293 cv
296.988 534.687 296.992 535.074 296.992 535.457 cv
296.992 541.551 li
296.992 541.59 296.98 541.625 296.957 541.656 cv
296.934 541.691 296.895 541.719 296.848 541.734 cv
296.793 541.754 296.727 541.766 296.641 541.781 cv
296.555 541.793 296.445 541.801 296.316 541.801 cv
296.184 541.801 296.074 541.793 295.992 541.781 cv
295.902 541.766 295.836 541.754 295.789 541.734 cv
295.738 541.719 295.703 541.691 295.684 541.656 cv
295.66 541.625 295.648 541.59 295.652 541.551 cv
295.652 532.23 li
295.648 532.027 295.707 531.879 295.828 531.789 cv
295.941 531.703 296.07 531.66 296.215 531.656 cv
296.875 531.656 li
297.031 531.66 297.16 531.672 297.266 531.695 cv
297.367 531.723 297.461 531.766 297.547 531.824 cv
297.629 531.887 297.711 531.969 297.789 532.074 cv
297.867 532.18 297.949 532.312 298.035 532.473 cv
300.402 536.906 li
300.547 537.18 300.688 537.441 300.824 537.699 cv
300.961 537.957 301.09 538.211 301.219 538.461 cv
301.34 538.711 301.465 538.957 301.59 539.199 cv
301.711 539.441 301.832 539.684 301.957 539.926 cv
301.965 539.926 li
301.953 539.52 301.945 539.094 301.945 538.645 cv
301.938 538.203 301.938 537.773 301.941 537.359 cv
301.941 531.883 li
301.938 531.848 301.949 531.812 301.973 531.781 cv
301.996 531.75 302.031 531.723 302.086 531.699 cv
302.133 531.676 302.203 531.66 302.289 531.648 cv
302.375 531.641 302.484 531.637 302.625 531.633 cv
302.742 531.637 302.848 531.641 302.938 531.648 cv
303.023 531.66 303.094 531.676 303.145 531.699 cv
303.191 531.723 303.227 531.75 303.25 531.781 cv
303.273 531.812 303.285 531.848 303.285 531.883 cv
cp
f
311.848 541.559 mo
311.844 541.605 311.836 541.641 311.82 541.664 cv
311.801 541.695 311.766 541.719 311.723 541.738 cv
311.672 541.758 311.613 541.77 311.539 541.785 cv
311.461 541.793 311.367 541.801 311.262 541.801 cv
311.141 541.801 311.043 541.793 310.969 541.785 cv
310.891 541.77 310.832 541.758 310.789 541.738 cv
310.742 541.719 310.711 541.695 310.699 541.664 cv
310.68 541.641 310.672 541.605 310.676 541.559 cv
310.676 540.629 li
310.273 541.074 309.879 541.398 309.492 541.598 cv
309.098 541.801 308.703 541.898 308.305 541.902 cv
307.836 541.898 307.441 541.824 307.121 541.668 cv
306.801 541.516 306.539 541.305 306.344 541.031 cv
306.145 540.766 306.004 540.453 305.922 540.098 cv
305.832 539.742 305.789 539.309 305.793 538.797 cv
305.793 534.535 li
305.789 534.496 305.801 534.461 305.82 534.43 cv
305.836 534.402 305.871 534.379 305.926 534.352 cv
305.977 534.332 306.043 534.316 306.129 534.305 cv
306.211 534.301 306.316 534.297 306.441 534.293 cv
306.563 534.297 306.664 534.301 306.75 534.305 cv
306.832 534.316 306.898 534.332 306.949 534.352 cv
306.996 534.379 307.031 534.402 307.055 534.43 cv
307.074 534.461 307.086 534.496 307.086 534.535 cv
307.086 538.625 li
307.086 539.039 307.113 539.371 307.176 539.613 cv
307.23 539.863 307.324 540.07 307.449 540.242 cv
307.57 540.418 307.723 540.555 307.914 540.648 cv
308.098 540.746 308.316 540.793 308.57 540.793 cv
308.891 540.793 309.215 540.68 309.535 540.449 cv
309.855 540.223 310.191 539.887 310.551 539.445 cv
310.551 534.535 li
310.547 534.496 310.559 534.461 310.578 534.43 cv
310.594 534.402 310.629 534.379 310.684 534.352 cv
310.734 534.332 310.801 534.316 310.883 534.305 cv
310.961 534.301 311.066 534.297 311.199 534.293 cv
311.324 534.297 311.426 534.301 311.512 534.305 cv
311.59 534.316 311.656 534.332 311.707 534.352 cv
311.75 534.379 311.785 534.402 311.813 534.43 cv
311.832 534.461 311.844 534.496 311.848 534.535 cv
cp
f
324.641 541.559 mo
324.641 541.605 324.629 541.641 324.609 541.664 cv
324.586 541.695 324.551 541.719 324.508 541.738 cv
324.457 541.758 324.395 541.77 324.313 541.785 cv
324.227 541.793 324.121 541.801 324 541.801 cv
323.867 541.801 323.762 541.793 323.68 541.785 cv
323.594 541.77 323.527 541.758 323.48 541.738 cv
323.43 541.719 323.395 541.695 323.375 541.664 cv
323.352 541.641 323.34 541.605 323.344 541.559 cv
323.344 537.289 li
323.34 536.992 323.313 536.723 323.266 536.477 cv
323.211 536.234 323.129 536.023 323.016 535.848 cv
322.898 535.672 322.754 535.539 322.578 535.441 cv
322.402 535.352 322.195 535.305 321.957 535.301 cv
321.66 535.305 321.359 535.418 321.063 535.645 cv
320.758 535.875 320.43 536.211 320.074 536.648 cv
320.074 541.559 li
320.07 541.605 320.059 541.641 320.043 541.664 cv
320.02 541.695 319.984 541.719 319.938 541.738 cv
319.883 541.758 319.816 541.77 319.738 541.785 cv
319.652 541.793 319.551 541.801 319.426 541.801 cv
319.305 541.801 319.199 541.793 319.117 541.785 cv
319.027 541.77 318.961 541.758 318.914 541.738 cv
318.863 541.719 318.832 541.695 318.816 541.664 cv
318.797 541.641 318.785 541.605 318.789 541.559 cv
318.789 537.289 li
318.785 536.992 318.758 536.723 318.703 536.477 cv
318.645 536.234 318.559 536.023 318.445 535.848 cv
318.328 535.672 318.184 535.539 318.012 535.441 cv
317.836 535.352 317.629 535.305 317.391 535.301 cv
317.09 535.305 316.789 535.418 316.492 535.645 cv
316.188 535.875 315.859 536.211 315.508 536.648 cv
315.508 541.559 li
315.504 541.605 315.496 541.641 315.477 541.664 cv
315.453 541.695 315.418 541.719 315.375 541.738 cv
315.324 541.758 315.258 541.77 315.18 541.785 cv
315.094 541.793 314.988 541.801 314.863 541.801 cv
314.734 541.801 314.633 541.793 314.551 541.785 cv
314.465 541.77 314.398 541.758 314.352 541.738 cv
314.301 541.719 314.266 541.695 314.25 541.664 cv
314.23 541.641 314.223 541.605 314.223 541.559 cv
314.223 534.535 li
314.223 534.496 314.23 534.461 314.246 534.43 cv
314.262 534.402 314.293 534.379 314.34 534.352 cv
314.387 534.332 314.445 534.316 314.52 534.305 cv
314.59 534.301 314.688 534.297 314.809 534.293 cv
314.922 534.297 315.016 534.301 315.09 534.305 cv
315.164 534.316 315.223 534.332 315.266 534.352 cv
315.305 534.379 315.332 534.402 315.355 534.43 cv
315.371 534.461 315.383 534.496 315.383 534.535 cv
315.383 535.465 li
315.777 535.027 316.16 534.703 316.535 534.492 cv
316.906 534.289 317.281 534.184 317.664 534.184 cv
317.953 534.184 318.215 534.219 318.449 534.285 cv
318.676 534.355 318.879 534.449 319.059 534.57 cv
319.23 534.695 319.383 534.844 319.512 535.008 cv
319.633 535.18 319.738 535.367 319.824 535.574 cv
320.059 535.32 320.281 535.105 320.492 534.926 cv
320.703 534.754 320.906 534.609 321.102 534.496 cv
321.297 534.391 321.484 534.312 321.672 534.258 cv
321.852 534.211 322.039 534.184 322.23 534.184 cv
322.68 534.184 323.059 534.266 323.367 534.422 cv
323.672 534.586 323.922 534.797 324.113 535.059 cv
324.301 535.328 324.434 535.641 324.52 535.992 cv
324.598 536.352 324.641 536.727 324.641 537.117 cv
cp
f
333.453 537.953 mo
333.449 538.566 333.383 539.113 333.254 539.598 cv
333.117 540.082 332.922 540.496 332.668 540.84 cv
332.406 541.184 332.09 541.449 331.719 541.629 cv
331.344 541.812 330.914 541.898 330.434 541.902 cv
330.207 541.898 330 541.879 329.813 541.836 cv
329.617 541.789 329.434 541.719 329.254 541.621 cv
329.07 541.523 328.887 541.398 328.707 541.246 cv
328.523 541.098 328.332 540.914 328.129 540.699 cv
328.129 541.559 li
328.129 541.605 328.117 541.641 328.098 541.668 cv
328.074 541.703 328.039 541.727 327.996 541.742 cv
327.945 541.758 327.887 541.77 327.82 541.785 cv
327.75 541.793 327.664 541.801 327.555 541.801 cv
327.449 541.801 327.359 541.793 327.289 541.785 cv
327.215 541.77 327.156 541.758 327.109 541.742 cv
327.063 541.727 327.031 541.703 327.016 541.668 cv
327 541.641 326.992 541.605 326.992 541.559 cv
326.992 531.133 li
326.992 531.094 327 531.059 327.02 531.023 cv
327.035 530.996 327.07 530.969 327.121 530.945 cv
327.168 530.926 327.234 530.91 327.32 530.898 cv
327.402 530.891 327.504 530.887 327.633 530.883 cv
327.758 530.887 327.863 530.891 327.949 530.898 cv
328.027 530.91 328.094 530.926 328.145 530.945 cv
328.188 530.969 328.223 530.996 328.246 531.023 cv
328.266 531.059 328.273 531.094 328.277 531.133 cv
328.277 535.34 li
328.48 535.129 328.684 534.949 328.883 534.801 cv
329.074 534.656 329.266 534.539 329.457 534.445 cv
329.641 534.359 329.828 534.293 330.02 534.246 cv
330.203 534.207 330.402 534.184 330.613 534.184 cv
331.121 534.184 331.555 534.285 331.918 534.488 cv
332.277 534.691 332.57 534.965 332.801 535.305 cv
333.023 535.648 333.191 536.047 333.297 536.504 cv
333.398 536.961 333.449 537.445 333.453 537.953 cv
cp
332.117 538.102 mo
332.113 537.746 332.086 537.395 332.035 537.055 cv
331.977 536.719 331.883 536.422 331.75 536.16 cv
331.613 535.902 331.43 535.691 331.207 535.531 cv
330.98 535.375 330.703 535.297 330.367 535.293 cv
330.199 535.297 330.031 535.32 329.871 535.363 cv
329.707 535.414 329.543 535.492 329.375 535.598 cv
329.207 535.711 329.035 535.852 328.855 536.02 cv
328.676 536.191 328.48 536.406 328.277 536.664 cv
328.277 539.469 li
328.629 539.898 328.969 540.227 329.297 540.453 cv
329.617 540.68 329.957 540.793 330.313 540.793 cv
330.637 540.793 330.914 540.715 331.145 540.559 cv
331.375 540.402 331.563 540.199 331.707 539.941 cv
331.848 539.687 331.953 539.398 332.02 539.074 cv
332.082 538.758 332.113 538.434 332.117 538.102 cv
cp
f
341.379 537.742 mo
341.375 537.949 341.324 538.094 341.227 538.176 cv
341.121 538.266 341.004 538.309 340.879 538.305 cv
336.25 538.305 li
336.246 538.699 336.285 539.051 336.367 539.359 cv
336.445 539.672 336.578 539.937 336.762 540.16 cv
336.941 540.387 337.18 540.559 337.473 540.676 cv
337.766 540.797 338.125 540.859 338.551 540.855 cv
338.883 540.859 339.18 540.832 339.441 540.773 cv
339.703 540.723 339.93 540.66 340.121 540.59 cv
340.313 540.523 340.469 540.461 340.594 540.406 cv
340.715 540.352 340.809 540.324 340.871 540.324 cv
340.906 540.324 340.938 540.336 340.969 540.352 cv
340.996 540.375 341.02 540.402 341.035 540.434 cv
341.051 540.473 341.063 540.523 341.07 540.586 cv
341.078 540.656 341.082 540.734 341.082 540.824 cv
341.082 540.895 341.078 540.953 341.074 541 cv
341.066 541.051 341.059 541.094 341.055 541.133 cv
341.043 541.172 341.031 541.207 341.016 541.238 cv
340.996 541.27 340.973 541.301 340.945 541.328 cv
340.914 541.359 340.828 541.406 340.691 541.469 cv
340.547 541.535 340.367 541.598 340.145 541.66 cv
339.922 541.723 339.664 541.777 339.371 541.828 cv
339.074 541.875 338.758 541.898 338.43 541.902 cv
337.848 541.898 337.344 541.82 336.91 541.66 cv
336.473 541.5 336.105 541.262 335.813 540.941 cv
335.516 540.625 335.293 540.227 335.145 539.75 cv
334.992 539.273 334.918 538.719 334.918 538.078 cv
334.918 537.477 334.996 536.934 335.152 536.453 cv
335.309 535.973 335.531 535.562 335.824 535.227 cv
336.117 534.891 336.473 534.633 336.891 534.453 cv
337.305 534.273 337.77 534.184 338.289 534.184 cv
338.836 534.184 339.305 534.273 339.695 534.449 cv
340.078 534.629 340.398 534.867 340.652 535.164 cv
340.898 535.465 341.082 535.816 341.203 536.219 cv
341.316 536.621 341.375 537.051 341.379 537.508 cv
cp
340.082 537.359 mo
340.094 536.684 339.945 536.156 339.629 535.77 cv
339.313 535.387 338.844 535.191 338.223 535.191 cv
337.902 535.191 337.621 535.254 337.379 535.371 cv
337.137 535.496 336.934 535.652 336.777 535.848 cv
336.613 536.043 336.488 536.273 336.398 536.535 cv
336.309 536.801 336.258 537.074 336.25 537.359 cv
cp
f
347.387 534.996 mo
347.383 535.113 347.379 535.207 347.379 535.285 cv
347.371 535.363 347.363 535.426 347.348 535.469 cv
347.332 535.516 347.313 535.551 347.289 535.57 cv
347.266 535.598 347.23 535.609 347.191 535.605 cv
347.145 535.609 347.094 535.598 347.039 535.57 cv
346.977 535.551 346.91 535.527 346.836 535.5 cv
346.758 535.48 346.672 535.457 346.582 535.434 cv
346.484 535.414 346.383 535.402 346.277 535.402 cv
346.145 535.402 346.02 535.43 345.895 535.48 cv
345.77 535.535 345.637 535.621 345.5 535.738 cv
345.359 535.859 345.215 536.016 345.066 536.211 cv
344.914 536.41 344.746 536.652 344.566 536.937 cv
344.566 541.559 li
344.563 541.605 344.555 541.641 344.535 541.664 cv
344.512 541.695 344.477 541.719 344.434 541.738 cv
344.383 541.758 344.316 541.77 344.238 541.785 cv
344.152 541.793 344.047 541.801 343.922 541.801 cv
343.793 541.801 343.691 541.793 343.609 541.785 cv
343.523 541.77 343.457 541.758 343.41 541.738 cv
343.359 541.719 343.324 541.695 343.309 541.664 cv
343.289 541.641 343.281 541.605 343.281 541.559 cv
343.281 534.535 li
343.281 534.496 343.289 534.461 343.305 534.43 cv
343.32 534.402 343.352 534.379 343.398 534.352 cv
343.445 534.332 343.504 534.316 343.578 534.305 cv
343.648 534.301 343.746 534.297 343.867 534.293 cv
343.98 534.297 344.074 534.301 344.148 534.305 cv
344.223 534.316 344.281 534.332 344.324 534.352 cv
344.363 534.379 344.391 534.402 344.414 534.43 cv
344.43 534.461 344.441 534.496 344.441 534.535 cv
344.441 535.559 li
344.633 535.281 344.813 535.051 344.984 534.871 cv
345.152 534.695 345.313 534.555 345.465 534.453 cv
345.613 534.352 345.762 534.281 345.914 534.242 cv
346.059 534.203 346.211 534.184 346.363 534.184 cv
346.43 534.184 346.504 534.187 346.594 534.195 cv
346.676 534.203 346.766 534.219 346.863 534.238 cv
346.953 534.262 347.039 534.285 347.117 534.309 cv
347.191 534.336 347.246 534.363 347.277 534.387 cv
347.309 534.418 347.328 534.441 347.34 534.461 cv
347.348 534.488 347.355 534.52 347.367 534.551 cv
347.371 534.59 347.379 534.641 347.383 534.711 cv
347.383 534.781 347.383 534.879 347.387 534.996 cv
cp
f
359.148 537.969 mo
359.145 538.543 359.07 539.07 358.922 539.551 cv
358.77 540.031 358.543 540.445 358.246 540.793 cv
357.945 541.145 357.57 541.418 357.121 541.609 cv
356.672 541.805 356.152 541.898 355.559 541.902 cv
354.98 541.898 354.477 541.816 354.047 541.645 cv
353.617 541.477 353.258 541.227 352.973 540.895 cv
352.688 540.57 352.477 540.172 352.336 539.703 cv
352.195 539.234 352.125 538.703 352.125 538.109 cv
352.125 537.539 352.199 537.016 352.348 536.531 cv
352.496 536.055 352.719 535.637 353.016 535.285 cv
353.313 534.937 353.684 534.668 354.137 534.473 cv
354.582 534.281 355.105 534.184 355.707 534.184 cv
356.281 534.184 356.785 534.27 357.215 534.441 cv
357.641 534.613 358 534.863 358.289 535.191 cv
358.574 535.52 358.789 535.918 358.934 536.387 cv
359.074 536.855 359.145 537.383 359.148 537.969 cv
cp
357.813 538.055 mo
357.809 537.68 357.773 537.32 357.707 536.977 cv
357.633 536.641 357.516 536.344 357.355 536.09 cv
357.191 535.836 356.973 535.633 356.695 535.484 cv
356.414 535.336 356.066 535.262 355.656 535.262 cv
355.27 535.262 354.941 535.332 354.668 535.465 cv
354.391 535.605 354.16 535.797 353.984 536.039 cv
353.805 536.289 353.672 536.578 353.586 536.914 cv
353.496 537.254 353.453 537.625 353.457 538.023 cv
353.453 538.41 353.488 538.773 353.563 539.109 cv
353.633 539.453 353.754 539.746 353.918 539.996 cv
354.082 540.246 354.305 540.445 354.586 540.594 cv
354.863 540.742 355.207 540.816 355.625 540.816 cv
356 540.816 356.328 540.75 356.609 540.613 cv
356.883 540.48 357.113 540.293 357.293 540.047 cv
357.473 539.805 357.602 539.512 357.688 539.172 cv
357.766 538.836 357.809 538.465 357.813 538.055 cv
cp
f
364.887 531.648 mo
364.883 531.75 364.879 531.828 364.871 531.887 cv
364.859 531.949 364.848 532 364.836 532.031 cv
364.82 532.07 364.801 532.094 364.785 532.102 cv
364.762 532.117 364.738 532.121 364.707 532.121 cv
364.668 532.121 364.621 532.109 364.57 532.086 cv
364.512 532.062 364.445 532.039 364.371 532.012 cv
364.289 531.984 364.195 531.957 364.094 531.934 cv
363.984 531.91 363.863 531.898 363.723 531.898 cv
363.527 531.898 363.363 531.93 363.23 531.992 cv
363.094 532.055 362.984 532.152 362.902 532.281 cv
362.816 532.418 362.754 532.59 362.723 532.797 cv
362.684 533.012 362.668 533.27 362.668 533.566 cv
362.668 534.332 li
364.238 534.332 li
364.277 534.336 364.313 534.344 364.344 534.359 cv
364.371 534.379 364.395 534.41 364.422 534.453 cv
364.441 534.5 364.461 534.559 364.477 534.621 cv
364.488 534.691 364.496 534.773 364.496 534.871 cv
364.496 535.062 364.473 535.199 364.426 535.277 cv
364.379 535.363 364.316 535.402 364.238 535.402 cv
362.668 535.402 li
362.668 541.559 li
362.668 541.605 362.656 541.641 362.637 541.664 cv
362.613 541.695 362.578 541.719 362.531 541.738 cv
362.48 541.758 362.414 541.77 362.332 541.785 cv
362.246 541.793 362.141 541.801 362.02 541.801 cv
361.891 541.801 361.789 541.793 361.707 541.785 cv
361.625 541.77 361.559 541.758 361.512 541.738 cv
361.461 541.719 361.426 541.695 361.406 541.664 cv
361.383 541.641 361.371 541.605 361.375 541.559 cv
361.375 535.402 li
360.383 535.402 li
360.297 535.402 360.234 535.363 360.195 535.277 cv
360.152 535.199 360.129 535.062 360.133 534.871 cv
360.129 534.773 360.137 534.691 360.148 534.621 cv
360.156 534.559 360.172 534.5 360.195 534.453 cv
360.215 534.41 360.238 534.379 360.273 534.359 cv
360.301 534.344 360.34 534.336 360.383 534.332 cv
361.375 534.332 li
361.375 533.605 li
361.371 533.117 361.418 532.699 361.512 532.348 cv
361.602 532 361.738 531.711 361.926 531.484 cv
362.109 531.262 362.348 531.098 362.633 530.988 cv
362.914 530.887 363.246 530.832 363.637 530.828 cv
363.816 530.832 363.996 530.848 364.168 530.879 cv
364.34 530.914 364.473 530.953 364.566 530.988 cv
364.66 531.031 364.723 531.066 364.754 531.094 cv
364.785 531.129 364.809 531.168 364.832 531.215 cv
364.848 531.266 364.863 531.324 364.875 531.395 cv
364.879 531.465 364.883 531.551 364.887 531.648 cv
cp
f
375.098 538.922 mo
375.094 539.398 375.008 539.82 374.836 540.187 cv
374.66 540.559 374.418 540.871 374.109 541.125 cv
373.801 541.387 373.438 541.578 373.02 541.707 cv
372.598 541.836 372.145 541.898 371.664 541.902 cv
371.324 541.898 371.012 541.871 370.723 541.816 cv
370.434 541.758 370.176 541.691 369.949 541.605 cv
369.723 541.527 369.531 541.441 369.383 541.348 cv
369.227 541.262 369.121 541.184 369.063 541.121 cv
369 541.059 368.957 540.98 368.93 540.883 cv
368.898 540.789 368.883 540.66 368.887 540.496 cv
368.883 540.383 368.887 540.289 368.902 540.211 cv
368.91 540.141 368.926 540.078 368.949 540.027 cv
368.965 539.984 368.992 539.953 369.027 539.93 cv
369.055 539.914 369.09 539.902 369.137 539.902 cv
369.207 539.902 369.313 539.949 369.445 540.035 cv
369.578 540.129 369.746 540.223 369.957 540.324 cv
370.16 540.43 370.41 540.527 370.707 540.617 cv
370.996 540.711 371.336 540.758 371.727 540.754 cv
372.016 540.758 372.285 540.719 372.527 540.637 cv
372.77 540.562 372.977 540.453 373.152 540.305 cv
373.324 540.164 373.457 539.988 373.555 539.781 cv
373.645 539.574 373.691 539.336 373.695 539.07 cv
373.691 538.785 373.629 538.543 373.5 538.336 cv
373.367 538.137 373.195 537.957 372.984 537.801 cv
372.77 537.648 372.523 537.508 372.254 537.379 cv
371.977 537.254 371.699 537.125 371.414 536.988 cv
371.125 536.859 370.844 536.711 370.578 536.547 cv
370.305 536.387 370.066 536.199 369.855 535.98 cv
369.641 535.766 369.465 535.508 369.336 535.211 cv
369.199 534.918 369.133 534.566 369.137 534.152 cv
369.133 533.734 369.211 533.355 369.367 533.023 cv
369.52 532.695 369.73 532.422 370.004 532.195 cv
370.273 531.977 370.602 531.805 370.98 531.684 cv
371.355 531.57 371.762 531.512 372.203 531.508 cv
372.426 531.512 372.652 531.531 372.879 531.566 cv
373.105 531.609 373.316 531.66 373.52 531.723 cv
373.715 531.789 373.895 531.863 374.051 531.941 cv
374.207 532.023 374.309 532.086 374.359 532.133 cv
374.406 532.184 374.438 532.223 374.457 532.25 cv
374.469 532.281 374.484 532.32 374.496 532.359 cv
374.504 532.406 374.512 532.457 374.52 532.52 cv
374.523 532.582 374.523 532.664 374.527 532.762 cv
374.523 532.859 374.52 532.941 374.516 533.012 cv
374.504 533.086 374.492 533.148 374.48 533.195 cv
374.461 533.246 374.441 533.281 374.414 533.305 cv
374.383 533.328 374.348 533.34 374.316 533.34 cv
374.254 533.34 374.164 533.305 374.047 533.23 cv
373.922 533.16 373.773 533.078 373.602 532.984 cv
373.422 532.895 373.215 532.812 372.973 532.734 cv
372.73 532.664 372.457 532.625 372.156 532.621 cv
371.871 532.625 371.625 532.664 371.422 532.734 cv
371.211 532.812 371.039 532.91 370.906 533.035 cv
370.766 533.16 370.664 533.309 370.602 533.48 cv
370.531 533.652 370.5 533.836 370.5 534.027 cv
370.5 534.312 370.563 534.555 370.695 534.754 cv
370.82 534.961 370.996 535.141 371.215 535.293 cv
371.43 535.453 371.676 535.598 371.953 535.723 cv
372.227 535.855 372.508 535.984 372.797 536.113 cv
373.082 536.25 373.363 536.395 373.641 536.551 cv
373.914 536.711 374.156 536.898 374.375 537.113 cv
374.586 537.332 374.762 537.59 374.898 537.879 cv
375.027 538.176 375.094 538.523 375.098 538.922 cv
cp
f
382.879 541.559 mo
382.875 541.605 382.867 541.641 382.852 541.664 cv
382.832 541.695 382.797 541.719 382.754 541.738 cv
382.703 541.758 382.645 541.77 382.57 541.785 cv
382.492 541.793 382.398 541.801 382.293 541.801 cv
382.172 541.801 382.074 541.793 382 541.785 cv
381.922 541.77 381.863 541.758 381.82 541.738 cv
381.773 541.719 381.742 541.695 381.73 541.664 cv
381.711 541.641 381.703 541.605 381.707 541.559 cv
381.707 540.629 li
381.305 541.074 380.91 541.398 380.523 541.598 cv
380.129 541.801 379.734 541.898 379.336 541.902 cv
378.867 541.898 378.473 541.824 378.152 541.668 cv
377.832 541.516 377.57 541.305 377.375 541.031 cv
377.176 540.766 377.035 540.453 376.953 540.098 cv
376.863 539.742 376.82 539.309 376.824 538.797 cv
376.824 534.535 li
376.82 534.496 376.832 534.461 376.852 534.43 cv
376.867 534.402 376.902 534.379 376.957 534.352 cv
377.008 534.332 377.074 534.316 377.16 534.305 cv
377.242 534.301 377.348 534.297 377.473 534.293 cv
377.594 534.297 377.695 534.301 377.781 534.305 cv
377.863 534.316 377.93 534.332 377.98 534.352 cv
378.027 534.379 378.063 534.402 378.086 534.43 cv
378.105 534.461 378.117 534.496 378.117 534.535 cv
378.117 538.625 li
378.117 539.039 378.145 539.371 378.207 539.613 cv
378.262 539.863 378.355 540.07 378.48 540.242 cv
378.602 540.418 378.754 540.555 378.945 540.648 cv
379.129 540.746 379.348 540.793 379.602 540.793 cv
379.922 540.793 380.246 540.68 380.566 540.449 cv
380.887 540.223 381.223 539.887 381.582 539.445 cv
381.582 534.535 li
381.578 534.496 381.59 534.461 381.609 534.43 cv
381.625 534.402 381.66 534.379 381.715 534.352 cv
381.766 534.332 381.832 534.316 381.914 534.305 cv
381.992 534.301 382.098 534.297 382.23 534.293 cv
382.355 534.297 382.457 534.301 382.543 534.305 cv
382.621 534.316 382.688 534.332 382.738 534.352 cv
382.781 534.379 382.816 534.402 382.844 534.43 cv
382.863 534.461 382.875 534.496 382.879 534.535 cv
cp
f
391.715 537.953 mo
391.711 538.566 391.645 539.113 391.516 539.598 cv
391.379 540.082 391.184 540.496 390.93 540.84 cv
390.668 541.184 390.352 541.449 389.98 541.629 cv
389.605 541.812 389.176 541.898 388.695 541.902 cv
388.469 541.898 388.262 541.879 388.074 541.836 cv
387.879 541.789 387.695 541.719 387.516 541.621 cv
387.332 541.523 387.148 541.398 386.969 541.246 cv
386.785 541.098 386.594 540.914 386.391 540.699 cv
386.391 541.559 li
386.391 541.605 386.379 541.641 386.359 541.668 cv
386.336 541.703 386.301 541.727 386.258 541.742 cv
386.207 541.758 386.148 541.77 386.082 541.785 cv
386.012 541.793 385.926 541.801 385.816 541.801 cv
385.711 541.801 385.621 541.793 385.551 541.785 cv
385.477 541.77 385.418 541.758 385.371 541.742 cv
385.324 541.727 385.293 541.703 385.277 541.668 cv
385.262 541.641 385.254 541.605 385.254 541.559 cv
385.254 531.133 li
385.254 531.094 385.262 531.059 385.281 531.023 cv
385.297 530.996 385.332 530.969 385.383 530.945 cv
385.43 530.926 385.496 530.91 385.582 530.898 cv
385.664 530.891 385.766 530.887 385.895 530.883 cv
386.02 530.887 386.125 530.891 386.211 530.898 cv
386.289 530.91 386.355 530.926 386.406 530.945 cv
386.449 530.969 386.484 530.996 386.508 531.023 cv
386.527 531.059 386.535 531.094 386.539 531.133 cv
386.539 535.34 li
386.742 535.129 386.945 534.949 387.145 534.801 cv
387.336 534.656 387.527 534.539 387.719 534.445 cv
387.902 534.359 388.09 534.293 388.281 534.246 cv
388.465 534.207 388.664 534.184 388.875 534.184 cv
389.383 534.184 389.816 534.285 390.18 534.488 cv
390.539 534.691 390.832 534.965 391.063 535.305 cv
391.285 535.648 391.453 536.047 391.559 536.504 cv
391.66 536.961 391.711 537.445 391.715 537.953 cv
cp
390.379 538.102 mo
390.375 537.746 390.348 537.395 390.297 537.055 cv
390.238 536.719 390.145 536.422 390.012 536.16 cv
389.875 535.902 389.691 535.691 389.469 535.531 cv
389.242 535.375 388.965 535.297 388.629 535.293 cv
388.461 535.297 388.293 535.32 388.133 535.363 cv
387.969 535.414 387.805 535.492 387.637 535.598 cv
387.469 535.711 387.297 535.852 387.117 536.02 cv
386.938 536.191 386.742 536.406 386.539 536.664 cv
386.539 539.469 li
386.891 539.898 387.23 540.227 387.559 540.453 cv
387.879 540.68 388.219 540.793 388.574 540.793 cv
388.898 540.793 389.176 540.715 389.406 540.559 cv
389.637 540.402 389.824 540.199 389.969 539.941 cv
390.109 539.687 390.215 539.398 390.281 539.074 cv
390.344 538.758 390.375 538.434 390.379 538.102 cv
cp
f
396.855 537.812 mo
396.852 538.02 396.828 538.16 396.785 538.234 cv
396.734 538.316 396.668 538.355 396.582 538.352 cv
393.32 538.352 li
393.227 538.355 393.156 538.316 393.109 538.23 cv
393.063 538.152 393.039 538.012 393.039 537.812 cv
393.039 537.617 393.063 537.48 393.109 537.398 cv
393.156 537.324 393.227 537.285 393.32 537.281 cv
396.582 537.281 li
396.621 537.285 396.66 537.293 396.695 537.305 cv
396.727 537.324 396.754 537.352 396.781 537.395 cv
396.801 537.441 396.82 537.5 396.836 537.562 cv
396.848 537.633 396.852 537.715 396.855 537.812 cv
cp
f
400.105 541.551 mo
400.105 541.594 400.094 541.629 400.074 541.66 cv
400.051 541.691 400.016 541.719 399.965 541.734 cv
399.91 541.754 399.84 541.766 399.758 541.781 cv
399.668 541.793 399.559 541.801 399.434 541.801 cv
399.309 541.801 399.203 541.793 399.117 541.781 cv
399.023 541.766 398.953 541.754 398.906 541.734 cv
398.852 541.719 398.816 541.691 398.797 541.66 cv
398.773 541.629 398.762 541.594 398.766 541.551 cv
398.766 531.859 li
398.762 531.82 398.773 531.785 398.801 531.75 cv
398.82 531.723 398.859 531.695 398.918 531.676 cv
398.969 531.66 399.039 531.645 399.129 531.629 cv
399.211 531.617 399.313 531.613 399.434 531.609 cv
399.559 531.613 399.668 531.617 399.758 531.629 cv
399.84 531.645 399.91 531.66 399.965 531.676 cv
400.016 531.695 400.051 531.723 400.074 531.75 cv
400.094 531.785 400.105 531.82 400.105 531.859 cv
cp
f
413.094 541.559 mo
413.094 541.605 413.082 541.641 413.063 541.664 cv
413.039 541.695 413.004 541.719 412.961 541.738 cv
412.91 541.758 412.848 541.77 412.766 541.785 cv
412.68 541.793 412.574 541.801 412.453 541.801 cv
412.32 541.801 412.215 541.793 412.133 541.785 cv
412.047 541.77 411.98 541.758 411.934 541.738 cv
411.883 541.719 411.848 541.695 411.828 541.664 cv
411.805 541.641 411.793 541.605 411.797 541.559 cv
411.797 537.289 li
411.793 536.992 411.766 536.723 411.719 536.477 cv
411.664 536.234 411.582 536.023 411.469 535.848 cv
411.352 535.672 411.207 535.539 411.031 535.441 cv
410.855 535.352 410.648 535.305 410.41 535.301 cv
410.113 535.305 409.813 535.418 409.516 535.645 cv
409.211 535.875 408.883 536.211 408.527 536.648 cv
408.527 541.559 li
408.523 541.605 408.512 541.641 408.496 541.664 cv
408.473 541.695 408.438 541.719 408.391 541.738 cv
408.336 541.758 408.27 541.77 408.191 541.785 cv
408.105 541.793 408.004 541.801 407.879 541.801 cv
407.758 541.801 407.652 541.793 407.57 541.785 cv
407.48 541.77 407.414 541.758 407.367 541.738 cv
407.316 541.719 407.285 541.695 407.27 541.664 cv
407.25 541.641 407.238 541.605 407.242 541.559 cv
407.242 537.289 li
407.238 536.992 407.211 536.723 407.156 536.477 cv
407.098 536.234 407.012 536.023 406.898 535.848 cv
406.781 535.672 406.637 535.539 406.465 535.441 cv
406.289 535.352 406.082 535.305 405.844 535.301 cv
405.543 535.305 405.242 535.418 404.945 535.645 cv
404.641 535.875 404.313 536.211 403.961 536.648 cv
403.961 541.559 li
403.957 541.605 403.949 541.641 403.93 541.664 cv
403.906 541.695 403.871 541.719 403.828 541.738 cv
403.777 541.758 403.711 541.77 403.633 541.785 cv
403.547 541.793 403.441 541.801 403.316 541.801 cv
403.188 541.801 403.086 541.793 403.004 541.785 cv
402.918 541.77 402.852 541.758 402.805 541.738 cv
402.754 541.719 402.719 541.695 402.703 541.664 cv
402.684 541.641 402.676 541.605 402.676 541.559 cv
402.676 534.535 li
402.676 534.496 402.684 534.461 402.699 534.43 cv
402.715 534.402 402.746 534.379 402.793 534.352 cv
402.84 534.332 402.898 534.316 402.973 534.305 cv
403.043 534.301 403.141 534.297 403.262 534.293 cv
403.375 534.297 403.469 534.301 403.543 534.305 cv
403.617 534.316 403.676 534.332 403.719 534.352 cv
403.758 534.379 403.785 534.402 403.809 534.43 cv
403.824 534.461 403.836 534.496 403.836 534.535 cv
403.836 535.465 li
404.23 535.027 404.613 534.703 404.988 534.492 cv
405.359 534.289 405.734 534.184 406.117 534.184 cv
406.406 534.184 406.668 534.219 406.902 534.285 cv
407.129 534.355 407.332 534.449 407.512 534.57 cv
407.684 534.695 407.836 534.844 407.965 535.008 cv
408.086 535.18 408.191 535.367 408.277 535.574 cv
408.512 535.32 408.734 535.105 408.945 534.926 cv
409.156 534.754 409.359 534.609 409.555 534.496 cv
409.75 534.391 409.938 534.312 410.125 534.258 cv
410.305 534.211 410.492 534.184 410.684 534.184 cv
411.133 534.184 411.512 534.266 411.82 534.422 cv
412.125 534.586 412.375 534.797 412.566 535.059 cv
412.754 535.328 412.887 535.641 412.973 535.992 cv
413.051 536.352 413.094 536.727 413.094 537.117 cv
cp
f
420.734 541.566 mo
420.73 541.629 420.711 541.676 420.672 541.707 cv
420.629 541.738 420.57 541.762 420.5 541.777 cv
420.426 541.793 420.32 541.801 420.18 541.801 cv
420.047 541.801 419.938 541.793 419.859 541.777 cv
419.773 541.762 419.715 541.738 419.684 541.707 cv
419.645 541.676 419.629 541.629 419.629 541.566 cv
419.629 540.863 li
419.32 541.191 418.977 541.449 418.602 541.629 cv
418.223 541.812 417.824 541.898 417.402 541.902 cv
417.031 541.898 416.695 541.852 416.398 541.758 cv
416.098 541.66 415.844 541.523 415.637 541.34 cv
415.422 541.16 415.258 540.937 415.145 540.668 cv
415.023 540.406 414.965 540.105 414.969 539.766 cv
414.965 539.375 415.047 539.031 415.211 538.734 cv
415.371 538.445 415.602 538.203 415.902 538.008 cv
416.203 537.82 416.57 537.676 417.012 537.574 cv
417.445 537.48 417.938 537.43 418.488 537.43 cv
419.457 537.43 li
419.457 536.883 li
419.453 536.617 419.426 536.379 419.371 536.168 cv
419.313 535.965 419.219 535.789 419.094 535.648 cv
418.965 535.512 418.801 535.41 418.598 535.336 cv
418.395 535.27 418.145 535.234 417.848 535.23 cv
417.527 535.234 417.242 535.27 416.992 535.344 cv
416.738 535.422 416.516 535.508 416.328 535.594 cv
416.137 535.687 415.98 535.77 415.855 535.844 cv
415.727 535.918 415.629 535.953 415.57 535.953 cv
415.523 535.953 415.488 535.945 415.461 535.926 cv
415.426 535.906 415.398 535.875 415.379 535.832 cv
415.352 535.793 415.336 535.738 415.328 535.672 cv
415.316 535.609 415.309 535.539 415.313 535.457 cv
415.309 535.328 415.32 535.227 415.34 535.148 cv
415.355 535.078 415.398 535.004 415.473 534.934 cv
415.539 534.867 415.66 534.789 415.836 534.695 cv
416.004 534.605 416.199 534.523 416.426 534.445 cv
416.645 534.375 416.891 534.312 417.16 534.258 cv
417.422 534.211 417.691 534.184 417.965 534.184 cv
418.469 534.184 418.898 534.242 419.254 534.355 cv
419.605 534.473 419.891 534.641 420.109 534.859 cv
420.328 535.082 420.484 535.355 420.586 535.684 cv
420.68 536.012 420.73 536.395 420.734 536.828 cv
cp
419.457 538.359 mo
418.355 538.359 li
418 538.363 417.691 538.391 417.434 538.449 cv
417.168 538.512 416.953 538.602 416.785 538.715 cv
416.609 538.836 416.484 538.977 416.406 539.137 cv
416.324 539.305 416.281 539.492 416.285 539.703 cv
416.281 540.066 416.398 540.355 416.633 540.57 cv
416.863 540.789 417.188 540.898 417.605 540.895 cv
417.941 540.898 418.254 540.812 418.547 540.637 cv
418.832 540.469 419.137 540.207 419.457 539.848 cv
cp
f
428.969 534.855 mo
428.965 535.043 428.941 535.172 428.895 535.25 cv
428.844 535.332 428.781 535.375 428.703 535.371 cv
427.699 535.371 li
427.875 535.562 428 535.77 428.078 535.992 cv
428.148 536.219 428.188 536.453 428.188 536.695 cv
428.188 537.105 428.121 537.465 427.992 537.773 cv
427.859 538.09 427.672 538.352 427.434 538.566 cv
427.191 538.785 426.906 538.953 426.574 539.062 cv
426.238 539.18 425.867 539.234 425.465 539.234 cv
425.176 539.234 424.906 539.199 424.648 539.121 cv
424.391 539.051 424.191 538.953 424.051 538.836 cv
423.957 538.93 423.879 539.039 423.82 539.156 cv
423.762 539.281 423.734 539.418 423.734 539.57 cv
423.734 539.754 423.816 539.902 423.984 540.02 cv
424.152 540.141 424.379 540.207 424.66 540.215 cv
426.496 540.293 li
426.84 540.309 427.16 540.355 427.453 540.437 cv
427.742 540.527 427.996 540.648 428.211 540.805 cv
428.422 540.965 428.586 541.16 428.711 541.391 cv
428.828 541.625 428.891 541.895 428.891 542.199 cv
428.891 542.52 428.82 542.824 428.688 543.121 cv
428.547 543.41 428.34 543.668 428.066 543.887 cv
427.785 544.105 427.434 544.277 427.004 544.41 cv
426.57 544.535 426.059 544.602 425.473 544.602 cv
424.902 544.602 424.418 544.551 424.023 544.457 cv
423.625 544.355 423.301 544.227 423.047 544.062 cv
422.789 543.895 422.605 543.695 422.492 543.465 cv
422.375 543.234 422.316 542.984 422.32 542.715 cv
422.316 542.543 422.336 542.375 422.383 542.215 cv
422.422 542.051 422.488 541.898 422.574 541.754 cv
422.66 541.609 422.766 541.473 422.895 541.336 cv
423.02 541.207 423.168 541.074 423.336 540.941 cv
423.078 540.812 422.887 540.648 422.77 540.449 cv
422.645 540.254 422.586 540.039 422.586 539.809 cv
422.586 539.496 422.648 539.215 422.781 538.961 cv
422.906 538.715 423.07 538.492 423.266 538.289 cv
423.102 538.102 422.973 537.883 422.883 537.637 cv
422.785 537.398 422.738 537.105 422.742 536.758 cv
422.738 536.359 422.805 536 422.945 535.684 cv
423.078 535.367 423.266 535.102 423.504 534.879 cv
423.742 534.664 424.031 534.496 424.367 534.375 cv
424.703 534.262 425.066 534.203 425.465 534.199 cv
425.676 534.203 425.875 534.215 426.063 534.234 cv
426.242 534.262 426.418 534.293 426.582 534.332 cv
428.703 534.332 li
428.789 534.336 428.855 534.379 428.902 534.461 cv
428.945 534.551 428.965 534.684 428.969 534.855 cv
cp
426.957 536.703 mo
426.957 536.227 426.824 535.855 426.563 535.586 cv
426.297 535.32 425.922 535.187 425.441 535.184 cv
425.188 535.187 424.973 535.227 424.789 535.309 cv
424.602 535.395 424.445 535.512 424.328 535.652 cv
424.203 535.801 424.113 535.969 424.055 536.156 cv
423.992 536.348 423.961 536.543 423.965 536.75 cv
423.961 537.215 424.094 537.582 424.359 537.844 cv
424.621 538.113 424.988 538.246 425.465 538.242 cv
425.715 538.246 425.938 538.203 426.129 538.121 cv
426.313 538.043 426.469 537.934 426.594 537.785 cv
426.715 537.645 426.805 537.477 426.867 537.289 cv
426.926 537.102 426.957 536.906 426.957 536.703 cv
cp
427.605 542.27 mo
427.602 541.965 427.477 541.734 427.234 541.57 cv
426.984 541.41 426.652 541.32 426.23 541.309 cv
424.41 541.246 li
424.238 541.379 424.102 541.504 424 541.617 cv
423.891 541.734 423.809 541.844 423.75 541.953 cv
423.684 542.059 423.641 542.164 423.621 542.27 cv
423.594 542.371 423.582 542.477 423.586 542.59 cv
423.582 542.926 423.754 543.184 424.098 543.359 cv
424.441 543.531 424.918 543.617 425.535 543.621 cv
425.922 543.617 426.25 543.578 426.516 543.508 cv
426.777 543.43 426.988 543.332 427.152 543.207 cv
427.309 543.082 427.426 542.937 427.5 542.777 cv
427.566 542.613 427.602 542.445 427.605 542.27 cv
cp
f
436.527 537.742 mo
436.523 537.949 436.473 538.094 436.375 538.176 cv
436.27 538.266 436.152 538.309 436.027 538.305 cv
431.398 538.305 li
431.395 538.699 431.434 539.051 431.516 539.359 cv
431.594 539.672 431.727 539.937 431.91 540.16 cv
432.09 540.387 432.328 540.559 432.621 540.676 cv
432.914 540.797 433.273 540.859 433.699 540.855 cv
434.031 540.859 434.328 540.832 434.59 540.773 cv
434.852 540.723 435.078 540.66 435.27 540.59 cv
435.461 540.523 435.617 540.461 435.742 540.406 cv
435.863 540.352 435.957 540.324 436.02 540.324 cv
436.055 540.324 436.086 540.336 436.117 540.352 cv
436.145 540.375 436.168 540.402 436.184 540.434 cv
436.199 540.473 436.211 540.523 436.219 540.586 cv
436.227 540.656 436.23 540.734 436.23 540.824 cv
436.23 540.895 436.227 540.953 436.223 541 cv
436.215 541.051 436.207 541.094 436.203 541.133 cv
436.191 541.172 436.18 541.207 436.164 541.238 cv
436.145 541.27 436.121 541.301 436.094 541.328 cv
436.063 541.359 435.977 541.406 435.84 541.469 cv
435.695 541.535 435.516 541.598 435.293 541.66 cv
435.07 541.723 434.813 541.777 434.52 541.828 cv
434.223 541.875 433.906 541.898 433.578 541.902 cv
432.996 541.898 432.492 541.82 432.059 541.66 cv
431.621 541.5 431.254 541.262 430.961 540.941 cv
430.664 540.625 430.441 540.227 430.293 539.75 cv
430.141 539.273 430.066 538.719 430.066 538.078 cv
430.066 537.477 430.145 536.934 430.301 536.453 cv
430.457 535.973 430.68 535.562 430.973 535.227 cv
431.266 534.891 431.621 534.633 432.039 534.453 cv
432.453 534.273 432.918 534.184 433.438 534.184 cv
433.984 534.184 434.453 534.273 434.844 534.449 cv
435.227 534.629 435.547 534.867 435.801 535.164 cv
436.047 535.465 436.23 535.816 436.352 536.219 cv
436.465 536.621 436.523 537.051 436.527 537.508 cv
cp
435.23 537.359 mo
435.242 536.684 435.094 536.156 434.777 535.77 cv
434.461 535.387 433.992 535.191 433.371 535.191 cv
433.051 535.191 432.77 535.254 432.527 535.371 cv
432.285 535.496 432.082 535.652 431.926 535.848 cv
431.762 536.043 431.637 536.273 431.547 536.535 cv
431.457 536.801 431.406 537.074 431.398 537.359 cv
cp
f
442.906 539.648 mo
442.902 540.008 442.836 540.324 442.707 540.605 cv
442.57 540.887 442.383 541.125 442.141 541.316 cv
441.895 541.512 441.602 541.656 441.266 541.754 cv
440.926 541.852 440.555 541.898 440.148 541.902 cv
439.898 541.898 439.66 541.879 439.434 541.844 cv
439.207 541.801 439.004 541.754 438.828 541.695 cv
438.645 541.637 438.492 541.574 438.371 541.508 cv
438.242 541.445 438.152 541.387 438.098 541.332 cv
438.039 541.281 437.996 541.211 437.973 541.113 cv
437.945 541.023 437.934 540.895 437.934 540.73 cv
437.934 540.633 437.938 540.551 437.949 540.48 cv
437.957 540.418 437.969 540.363 437.988 540.316 cv
438 540.277 438.023 540.246 438.055 540.227 cv
438.082 540.211 438.113 540.203 438.152 540.199 cv
438.207 540.203 438.293 540.238 438.406 540.305 cv
438.516 540.379 438.652 540.453 438.82 540.535 cv
438.98 540.621 439.176 540.699 439.398 540.766 cv
439.621 540.84 439.879 540.875 440.172 540.871 cv
440.391 540.875 440.586 540.852 440.766 540.801 cv
440.938 540.758 441.094 540.687 441.227 540.594 cv
441.355 540.504 441.453 540.391 441.527 540.246 cv
441.594 540.109 441.629 539.941 441.633 539.75 cv
441.629 539.555 441.578 539.391 441.48 539.25 cv
441.375 539.117 441.242 538.996 441.078 538.891 cv
440.91 538.789 440.723 538.695 440.516 538.613 cv
440.305 538.535 440.09 538.453 439.871 538.359 cv
439.648 538.273 439.434 538.172 439.223 538.059 cv
439.012 537.949 438.824 537.812 438.66 537.648 cv
438.492 537.488 438.355 537.297 438.258 537.07 cv
438.152 536.852 438.102 536.582 438.105 536.266 cv
438.102 535.996 438.156 535.734 438.266 535.477 cv
438.371 535.227 438.531 535.004 438.746 534.812 cv
438.957 534.625 439.223 534.473 439.543 534.355 cv
439.859 534.242 440.234 534.184 440.664 534.184 cv
440.852 534.184 441.039 534.199 441.227 534.23 cv
441.414 534.262 441.582 534.301 441.734 534.348 cv
441.883 534.395 442.012 534.445 442.121 534.5 cv
442.227 534.555 442.309 534.605 442.363 534.645 cv
442.418 534.691 442.453 534.727 442.473 534.754 cv
442.488 534.789 442.5 534.824 442.512 534.859 cv
442.516 534.902 442.523 534.949 442.535 535.004 cv
442.539 535.062 442.543 535.133 442.547 535.215 cv
442.543 535.305 442.539 535.383 442.535 535.445 cv
442.523 535.512 442.512 535.566 442.496 535.605 cv
442.477 535.652 442.453 535.68 442.43 535.695 cv
442.398 535.715 442.371 535.727 442.344 535.723 cv
442.293 535.727 442.227 535.695 442.141 535.637 cv
442.051 535.582 441.934 535.523 441.797 535.453 cv
441.652 535.391 441.488 535.328 441.301 535.27 cv
441.109 535.215 440.891 535.187 440.648 535.184 cv
440.426 535.187 440.234 535.211 440.07 535.258 cv
439.902 535.309 439.766 535.379 439.66 535.469 cv
439.551 535.562 439.469 535.672 439.418 535.793 cv
439.359 535.918 439.332 536.051 439.336 536.195 cv
439.332 536.402 439.387 536.574 439.492 536.707 cv
439.594 536.848 439.727 536.969 439.898 537.07 cv
440.063 537.18 440.254 537.273 440.469 537.352 cv
440.68 537.437 440.898 537.523 441.121 537.609 cv
441.34 537.703 441.559 537.801 441.777 537.906 cv
441.992 538.02 442.184 538.152 442.352 538.305 cv
442.516 538.465 442.648 538.652 442.754 538.867 cv
442.852 539.09 442.902 539.352 442.906 539.648 cv
cp
f
250.555 16.34 mo
250.551 16.492 250.547 16.617 250.535 16.715 cv
250.52 16.82 250.5 16.902 250.477 16.961 cv
250.453 17.027 250.422 17.074 250.383 17.098 cv
250.344 17.129 250.301 17.141 250.254 17.141 cv
245.188 17.141 li
245.012 17.141 244.867 17.09 244.754 16.988 cv
244.633 16.887 244.574 16.723 244.578 16.492 cv
244.578 7.703 li
244.574 7.47699 244.633 7.31201 244.754 7.20697 cv
244.867 7.10901 245.012 7.05902 245.188 7.05499 cv
250.223 7.05499 li
250.266 7.05902 250.309 7.07001 250.348 7.09399 cv
250.383 7.12097 250.414 7.16803 250.441 7.22998 cv
250.465 7.30103 250.48 7.383 250.496 7.47998 cv
250.504 7.586 250.512 7.71503 250.516 7.867 cv
250.512 8.01599 250.504 8.14099 250.496 8.23798 cv
250.48 8.34399 250.465 8.42603 250.441 8.48401 cv
250.414 8.547 250.383 8.59003 250.348 8.617 cv
250.309 8.64801 250.266 8.664 250.223 8.65997 cv
246.621 8.65997 li
246.621 11.125 li
249.668 11.125 li
249.715 11.129 249.758 11.145 249.797 11.168 cv
249.836 11.199 249.867 11.242 249.895 11.301 cv
249.918 11.363 249.938 11.445 249.953 11.543 cv
249.965 11.645 249.973 11.766 249.973 11.91 cv
249.973 12.062 249.965 12.187 249.953 12.285 cv
249.938 12.387 249.918 12.465 249.895 12.523 cv
249.867 12.586 249.836 12.629 249.797 12.652 cv
249.758 12.68 249.715 12.695 249.668 12.691 cv
246.621 12.691 li
246.621 15.535 li
250.254 15.535 li
250.301 15.535 250.344 15.551 250.383 15.578 cv
250.422 15.609 250.453 15.656 250.477 15.715 cv
250.5 15.781 250.52 15.863 250.535 15.961 cv
250.547 16.066 250.551 16.191 250.555 16.34 cv
cp
f
258.891 16.875 mo
258.887 16.93 258.871 16.973 258.844 17.012 cv
258.809 17.051 258.758 17.086 258.688 17.109 cv
258.613 17.137 258.512 17.152 258.387 17.168 cv
258.258 17.18 258.102 17.187 257.918 17.187 cv
257.723 17.187 257.563 17.18 257.438 17.168 cv
257.309 17.152 257.207 17.137 257.137 17.109 cv
257.059 17.086 257.008 17.051 256.98 17.012 cv
256.945 16.973 256.93 16.93 256.934 16.875 cv
256.934 12.91 li
256.93 12.574 256.906 12.309 256.859 12.113 cv
256.809 11.922 256.734 11.758 256.645 11.621 cv
256.551 11.484 256.434 11.379 256.285 11.301 cv
256.137 11.227 255.961 11.187 255.766 11.187 cv
255.512 11.187 255.262 11.281 255.008 11.461 cv
254.754 11.645 254.488 11.906 254.215 12.254 cv
254.215 16.875 li
254.211 16.93 254.195 16.973 254.168 17.012 cv
254.133 17.051 254.078 17.086 254.008 17.109 cv
253.93 17.137 253.832 17.152 253.707 17.168 cv
253.582 17.18 253.422 17.187 253.234 17.187 cv
253.039 17.187 252.883 17.18 252.758 17.168 cv
252.633 17.152 252.531 17.137 252.457 17.109 cv
252.379 17.086 252.324 17.051 252.297 17.012 cv
252.262 16.973 252.246 16.93 252.25 16.875 cv
252.25 9.92603 li
252.246 9.87903 252.262 9.83197 252.289 9.789 cv
252.313 9.75403 252.359 9.72302 252.43 9.69098 cv
252.496 9.66803 252.582 9.64801 252.691 9.633 cv
252.797 9.625 252.93 9.617 253.094 9.61298 cv
253.258 9.617 253.395 9.625 253.504 9.633 cv
253.609 9.64801 253.695 9.66803 253.758 9.69098 cv
253.816 9.72302 253.859 9.75403 253.887 9.789 cv
253.91 9.83197 253.922 9.87903 253.926 9.92603 cv
253.926 10.727 li
254.309 10.316 254.699 10.004 255.098 9.79303 cv
255.492 9.586 255.91 9.48401 256.344 9.47998 cv
256.813 9.48401 257.211 9.56201 257.539 9.71503 cv
257.863 9.875 258.125 10.086 258.324 10.352 cv
258.523 10.621 258.668 10.934 258.758 11.289 cv
258.844 11.648 258.887 12.078 258.891 12.582 cv
cp
f
267.242 13.199 mo
267.238 13.437 267.188 13.613 267.082 13.727 cv
266.973 13.844 266.824 13.902 266.645 13.898 cv
262.41 13.898 li
262.406 14.199 262.441 14.469 262.516 14.707 cv
262.582 14.949 262.695 15.152 262.852 15.32 cv
263.004 15.492 263.199 15.621 263.441 15.707 cv
263.68 15.797 263.969 15.84 264.313 15.84 cv
264.652 15.84 264.953 15.816 265.215 15.766 cv
265.473 15.719 265.699 15.664 265.891 15.602 cv
266.078 15.543 266.234 15.488 266.363 15.437 cv
266.484 15.391 266.586 15.367 266.668 15.363 cv
266.711 15.367 266.75 15.375 266.785 15.391 cv
266.813 15.41 266.84 15.441 266.859 15.488 cv
266.879 15.535 266.891 15.602 266.902 15.687 cv
266.906 15.773 266.91 15.883 266.914 16.012 cv
266.91 16.129 266.91 16.227 266.906 16.305 cv
266.898 16.387 266.891 16.453 266.883 16.508 cv
266.871 16.566 266.855 16.617 266.836 16.652 cv
266.816 16.695 266.789 16.73 266.758 16.766 cv
266.723 16.805 266.629 16.855 266.48 16.914 cv
266.324 16.98 266.133 17.043 265.902 17.098 cv
265.664 17.16 265.395 17.207 265.098 17.254 cv
264.793 17.293 264.473 17.316 264.133 17.32 cv
263.512 17.316 262.969 17.242 262.508 17.086 cv
262.039 16.934 261.652 16.695 261.344 16.379 cv
261.027 16.062 260.793 15.664 260.645 15.18 cv
260.488 14.699 260.414 14.133 260.418 13.477 cv
260.414 12.863 260.492 12.305 260.656 11.809 cv
260.813 11.312 261.047 10.895 261.359 10.547 cv
261.664 10.203 262.039 9.93701 262.477 9.75403 cv
262.914 9.57397 263.406 9.48401 263.961 9.47998 cv
264.539 9.48401 265.039 9.57001 265.453 9.73798 cv
265.867 9.914 266.203 10.152 266.469 10.453 cv
266.73 10.758 266.926 11.117 267.055 11.531 cv
267.176 11.949 267.238 12.398 267.242 12.887 cv
cp
265.34 12.637 mo
265.352 12.086 265.242 11.652 265.008 11.34 cv
264.773 11.027 264.406 10.871 263.914 10.867 cv
263.664 10.871 263.449 10.918 263.266 11.008 cv
263.078 11.105 262.926 11.23 262.805 11.387 cv
262.68 11.547 262.586 11.734 262.523 11.949 cv
262.457 12.164 262.418 12.395 262.41 12.637 cv
cp
f
273.316 10.57 mo
273.316 10.762 273.309 10.914 273.301 11.031 cv
273.285 11.152 273.27 11.246 273.254 11.312 cv
273.23 11.383 273.203 11.43 273.172 11.453 cv
273.133 11.48 273.09 11.492 273.043 11.492 cv
272.996 11.492 272.949 11.484 272.902 11.465 cv
272.848 11.449 272.789 11.43 272.727 11.406 cv
272.656 11.387 272.586 11.367 272.512 11.348 cv
272.43 11.332 272.344 11.324 272.254 11.32 cv
272.141 11.324 272.031 11.344 271.926 11.387 cv
271.816 11.434 271.703 11.504 271.59 11.594 cv
271.469 11.687 271.348 11.812 271.223 11.965 cv
271.094 12.125 270.957 12.316 270.813 12.543 cv
270.813 16.875 li
270.809 16.93 270.793 16.973 270.766 17.012 cv
270.73 17.051 270.676 17.086 270.605 17.109 cv
270.527 17.137 270.43 17.152 270.305 17.168 cv
270.18 17.18 270.02 17.187 269.832 17.187 cv
269.637 17.187 269.48 17.18 269.355 17.168 cv
269.23 17.152 269.129 17.137 269.055 17.109 cv
268.977 17.086 268.922 17.051 268.895 17.012 cv
268.859 16.973 268.844 16.93 268.848 16.875 cv
268.848 9.92603 li
268.844 9.87903 268.859 9.83197 268.887 9.789 cv
268.91 9.75403 268.957 9.72302 269.027 9.69098 cv
269.094 9.66803 269.18 9.64801 269.289 9.633 cv
269.395 9.625 269.527 9.617 269.691 9.61298 cv
269.855 9.617 269.992 9.625 270.102 9.633 cv
270.207 9.64801 270.293 9.66803 270.355 9.69098 cv
270.414 9.72302 270.457 9.75403 270.484 9.789 cv
270.508 9.83197 270.52 9.87903 270.523 9.92603 cv
270.523 10.789 li
270.703 10.531 270.875 10.32 271.039 10.148 cv
271.195 9.98401 271.352 9.84802 271.5 9.74597 cv
271.645 9.64801 271.789 9.58197 271.934 9.539 cv
272.078 9.50403 272.223 9.48401 272.371 9.47998 cv
272.438 9.48401 272.512 9.48798 272.59 9.492 cv
272.668 9.50403 272.746 9.51599 272.832 9.53101 cv
272.91 9.55103 272.984 9.57001 273.051 9.59399 cv
273.109 9.617 273.156 9.64502 273.188 9.66803 cv
273.215 9.69897 273.234 9.72699 273.25 9.75403 cv
273.262 9.789 273.273 9.83197 273.285 9.883 cv
273.293 9.94098 273.301 10.023 273.309 10.129 cv
273.313 10.238 273.316 10.387 273.316 10.57 cv
cp
f
280.492 10.406 mo
280.488 10.66 280.461 10.844 280.406 10.961 cv
280.348 11.082 280.277 11.141 280.199 11.141 cv
279.379 11.141 li
279.492 11.266 279.574 11.41 279.625 11.566 cv
279.672 11.727 279.695 11.891 279.699 12.059 cv
279.695 12.469 279.629 12.828 279.496 13.141 cv
279.359 13.457 279.164 13.723 278.914 13.934 cv
278.66 14.152 278.359 14.316 278.004 14.426 cv
277.645 14.543 277.246 14.598 276.816 14.594 cv
276.59 14.598 276.379 14.57 276.176 14.512 cv
275.973 14.461 275.816 14.398 275.707 14.32 cv
275.645 14.391 275.586 14.469 275.539 14.562 cv
275.488 14.656 275.465 14.762 275.469 14.871 cv
275.465 15.027 275.531 15.148 275.664 15.242 cv
275.793 15.34 275.98 15.395 276.223 15.402 cv
277.914 15.465 li
278.309 15.48 278.66 15.539 278.969 15.633 cv
279.277 15.734 279.539 15.867 279.75 16.039 cv
279.961 16.215 280.121 16.426 280.23 16.668 cv
280.34 16.914 280.395 17.187 280.398 17.5 cv
280.395 17.836 280.32 18.16 280.172 18.469 cv
280.023 18.77 279.797 19.031 279.496 19.258 cv
279.191 19.477 278.813 19.656 278.359 19.789 cv
277.902 19.918 277.371 19.98 276.77 19.984 cv
276.172 19.98 275.668 19.934 275.25 19.844 cv
274.832 19.746 274.488 19.617 274.223 19.453 cv
273.953 19.285 273.758 19.086 273.641 18.859 cv
273.516 18.625 273.457 18.371 273.457 18.098 cv
273.457 17.926 273.477 17.766 273.523 17.609 cv
273.563 17.453 273.629 17.301 273.719 17.16 cv
273.801 17.016 273.906 16.883 274.031 16.75 cv
274.156 16.621 274.297 16.496 274.461 16.375 cv
274.234 16.262 274.063 16.102 273.941 15.891 cv
273.82 15.687 273.762 15.461 273.762 15.215 cv
273.762 14.914 273.828 14.637 273.969 14.379 cv
274.105 14.129 274.289 13.898 274.516 13.695 cv
274.332 13.516 274.188 13.301 274.078 13.043 cv
273.969 12.793 273.914 12.473 273.918 12.09 cv
273.914 11.687 273.984 11.328 274.129 11.004 cv
274.27 10.687 274.469 10.418 274.727 10.195 cv
274.98 9.97699 275.285 9.80499 275.637 9.68701 cv
275.988 9.57001 276.379 9.51202 276.809 9.51202 cv
277.027 9.51202 277.234 9.52698 277.434 9.55103 cv
277.633 9.58197 277.82 9.617 277.992 9.65997 cv
280.199 9.65997 li
280.281 9.664 280.352 9.72302 280.41 9.83197 cv
280.461 9.94897 280.488 10.141 280.492 10.406 cv
cp
277.977 12.051 mo
277.973 11.68 277.871 11.391 277.664 11.18 cv
277.453 10.977 277.16 10.871 276.785 10.867 cv
276.59 10.871 276.418 10.902 276.277 10.965 cv
276.129 11.031 276.008 11.121 275.914 11.23 cv
275.813 11.344 275.742 11.473 275.699 11.621 cv
275.648 11.77 275.625 11.926 275.629 12.082 cv
275.625 12.441 275.73 12.719 275.941 12.922 cv
276.148 13.129 276.438 13.234 276.809 13.23 cv
277.004 13.234 277.172 13.203 277.32 13.137 cv
277.461 13.078 277.582 12.992 277.684 12.879 cv
277.777 12.773 277.852 12.645 277.902 12.5 cv
277.949 12.359 277.973 12.211 277.977 12.051 cv
cp
278.438 17.602 mo
278.438 17.363 278.344 17.187 278.156 17.062 cv
277.969 16.941 277.711 16.871 277.383 16.859 cv
275.988 16.82 li
275.852 16.922 275.742 17.016 275.664 17.105 cv
275.582 17.195 275.52 17.281 275.473 17.367 cv
275.422 17.449 275.387 17.531 275.375 17.609 cv
275.355 17.687 275.348 17.766 275.352 17.852 cv
275.348 18.105 275.48 18.305 275.742 18.441 cv
276.004 18.574 276.375 18.641 276.855 18.645 cv
277.148 18.641 277.395 18.609 277.602 18.555 cv
277.801 18.492 277.965 18.414 278.094 18.316 cv
278.215 18.215 278.305 18.105 278.359 17.984 cv
278.41 17.863 278.438 17.734 278.438 17.602 cv
cp
f
285.82 17.141 mo
284.977 19.602 li
284.926 19.73 284.801 19.824 284.594 19.883 cv
284.387 19.937 284.082 19.965 283.684 19.969 cv
283.473 19.965 283.305 19.957 283.184 19.941 cv
283.059 19.922 282.969 19.891 282.906 19.852 cv
282.844 19.809 282.809 19.758 282.805 19.695 cv
282.797 19.633 282.813 19.559 282.852 19.473 cv
283.777 17.141 li
283.707 17.109 283.645 17.062 283.594 16.996 cv
283.535 16.934 283.496 16.863 283.473 16.789 cv
281.082 10.398 li
281.012 10.219 280.977 10.082 280.98 9.98401 cv
280.977 9.89099 281.008 9.81201 281.074 9.758 cv
281.133 9.703 281.238 9.66803 281.387 9.64502 cv
281.531 9.62903 281.727 9.617 281.977 9.61298 cv
282.195 9.617 282.375 9.62097 282.508 9.625 cv
282.637 9.63702 282.738 9.65601 282.813 9.68402 cv
282.883 9.71899 282.938 9.76599 282.977 9.828 cv
283.012 9.89502 283.047 9.98798 283.086 10.105 cv
284.719 14.758 li
284.742 14.758 li
286.242 10.012 li
286.266 9.87903 286.305 9.789 286.359 9.742 cv
286.406 9.69897 286.488 9.66803 286.605 9.64502 cv
286.715 9.62903 286.918 9.617 287.207 9.61298 cv
287.43 9.617 287.613 9.62903 287.762 9.64502 cv
287.906 9.66803 288.016 9.70697 288.09 9.76202 cv
288.156 9.82397 288.191 9.89801 288.195 9.992 cv
288.191 10.086 288.172 10.199 288.133 10.328 cv
cp
f
300.266 15.613 mo
300.266 15.746 300.262 15.855 300.254 15.945 cv
300.246 16.039 300.234 16.117 300.219 16.18 cv
300.203 16.246 300.18 16.305 300.156 16.348 cv
300.125 16.395 300.086 16.445 300.031 16.504 cv
299.973 16.566 299.859 16.645 299.699 16.734 cv
299.531 16.832 299.332 16.922 299.098 17.004 cv
298.859 17.094 298.59 17.16 298.289 17.219 cv
297.98 17.273 297.652 17.305 297.305 17.305 cv
296.609 17.305 295.984 17.199 295.43 16.984 cv
294.871 16.773 294.398 16.457 294.012 16.031 cv
293.621 15.609 293.324 15.078 293.117 14.445 cv
292.91 13.812 292.805 13.074 292.809 12.23 cv
292.805 11.375 292.918 10.617 293.148 9.94897 cv
293.375 9.28497 293.695 8.72699 294.105 8.27301 cv
294.516 7.82397 295.008 7.47998 295.582 7.24597 cv
296.156 7.01599 296.789 6.89801 297.484 6.89502 cv
297.758 6.89801 298.027 6.922 298.293 6.96503 cv
298.551 7.01202 298.793 7.07001 299.012 7.14502 cv
299.23 7.22302 299.43 7.31201 299.609 7.40601 cv
299.785 7.508 299.906 7.59003 299.98 7.65997 cv
300.047 7.72998 300.098 7.789 300.125 7.836 cv
300.148 7.883 300.168 7.94501 300.188 8.01599 cv
300.199 8.09399 300.211 8.17999 300.223 8.27301 cv
300.227 8.375 300.23 8.49597 300.234 8.63702 cv
300.23 8.797 300.227 8.92999 300.219 9.03497 cv
300.207 9.14801 300.188 9.23401 300.164 9.30103 cv
300.137 9.37097 300.105 9.422 300.07 9.44897 cv
300.031 9.48401 299.988 9.5 299.945 9.49597 cv
299.863 9.5 299.766 9.453 299.648 9.35901 cv
299.527 9.27002 299.371 9.16803 299.184 9.05499 cv
298.992 8.94501 298.77 8.84399 298.508 8.75 cv
298.242 8.65997 297.93 8.617 297.57 8.61298 cv
297.168 8.617 296.809 8.69897 296.496 8.85901 cv
296.18 9.02698 295.914 9.26202 295.695 9.56201 cv
295.473 9.87097 295.305 10.238 295.191 10.668 cv
295.074 11.102 295.016 11.586 295.02 12.121 cv
295.016 12.719 295.078 13.234 295.203 13.664 cv
295.324 14.102 295.496 14.457 295.727 14.734 cv
295.949 15.016 296.223 15.223 296.543 15.359 cv
296.859 15.5 297.219 15.57 297.625 15.566 cv
297.984 15.57 298.301 15.527 298.566 15.437 cv
298.832 15.355 299.059 15.262 299.246 15.152 cv
299.434 15.051 299.59 14.957 299.715 14.875 cv
299.836 14.793 299.93 14.75 300 14.75 cv
300.051 14.75 300.094 14.762 300.125 14.781 cv
300.156 14.801 300.18 14.84 300.203 14.902 cv
300.219 14.965 300.234 15.055 300.25 15.164 cv
300.258 15.281 300.266 15.43 300.266 15.613 cv
cp
f
308.645 13.328 mo
308.641 13.926 308.563 14.469 308.41 14.953 cv
308.25 15.445 308.016 15.863 307.699 16.215 cv
307.383 16.566 306.984 16.84 306.508 17.031 cv
306.027 17.223 305.469 17.316 304.832 17.32 cv
304.211 17.316 303.672 17.234 303.219 17.062 cv
302.758 16.895 302.379 16.645 302.082 16.316 cv
301.777 15.992 301.555 15.59 301.41 15.109 cv
301.266 14.633 301.195 14.086 301.195 13.469 cv
301.195 12.879 301.273 12.34 301.43 11.848 cv
301.586 11.359 301.824 10.937 302.145 10.586 cv
302.461 10.238 302.855 9.96503 303.332 9.77002 cv
303.805 9.578 304.363 9.48401 305.004 9.47998 cv
305.629 9.48401 306.168 9.56598 306.625 9.73401 cv
307.082 9.90601 307.461 10.156 307.758 10.48 cv
308.055 10.809 308.277 11.211 308.426 11.687 cv
308.57 12.168 308.641 12.715 308.645 13.328 cv
cp
306.625 13.406 mo
306.621 13.07 306.594 12.754 306.543 12.461 cv
306.484 12.176 306.391 11.926 306.266 11.711 cv
306.133 11.5 305.961 11.332 305.75 11.211 cv
305.531 11.094 305.262 11.035 304.934 11.031 cv
304.645 11.035 304.391 11.09 304.172 11.191 cv
303.953 11.301 303.773 11.457 303.633 11.66 cv
303.492 11.867 303.387 12.113 303.316 12.398 cv
303.246 12.691 303.211 13.02 303.211 13.383 cv
303.211 13.73 303.238 14.047 303.297 14.332 cv
303.352 14.625 303.445 14.875 303.574 15.086 cv
303.699 15.301 303.871 15.465 304.094 15.578 cv
304.309 15.699 304.578 15.758 304.902 15.754 cv
305.195 15.758 305.453 15.703 305.676 15.594 cv
305.891 15.488 306.07 15.336 306.211 15.129 cv
306.352 14.93 306.453 14.684 306.523 14.395 cv
306.586 14.109 306.621 13.781 306.625 13.406 cv
cp
f
316.84 16.875 mo
316.836 16.93 316.82 16.973 316.793 17.012 cv
316.758 17.051 316.707 17.086 316.637 17.109 cv
316.563 17.137 316.461 17.152 316.336 17.168 cv
316.207 17.18 316.051 17.187 315.867 17.187 cv
315.672 17.187 315.512 17.18 315.387 17.168 cv
315.258 17.152 315.156 17.137 315.086 17.109 cv
315.008 17.086 314.957 17.051 314.93 17.012 cv
314.895 16.973 314.879 16.93 314.883 16.875 cv
314.883 12.91 li
314.879 12.574 314.855 12.309 314.809 12.113 cv
314.758 11.922 314.684 11.758 314.594 11.621 cv
314.5 11.484 314.383 11.379 314.234 11.301 cv
314.086 11.227 313.91 11.187 313.715 11.187 cv
313.461 11.187 313.211 11.281 312.957 11.461 cv
312.703 11.645 312.438 11.906 312.164 12.254 cv
312.164 16.875 li
312.16 16.93 312.145 16.973 312.117 17.012 cv
312.082 17.051 312.027 17.086 311.957 17.109 cv
311.879 17.137 311.781 17.152 311.656 17.168 cv
311.531 17.18 311.371 17.187 311.184 17.187 cv
310.988 17.187 310.832 17.18 310.707 17.168 cv
310.582 17.152 310.48 17.137 310.406 17.109 cv
310.328 17.086 310.273 17.051 310.246 17.012 cv
310.211 16.973 310.195 16.93 310.199 16.875 cv
310.199 9.92603 li
310.195 9.87903 310.211 9.83197 310.238 9.789 cv
310.262 9.75403 310.309 9.72302 310.379 9.69098 cv
310.445 9.66803 310.531 9.64801 310.641 9.633 cv
310.746 9.625 310.879 9.617 311.043 9.61298 cv
311.207 9.617 311.344 9.625 311.453 9.633 cv
311.559 9.64801 311.645 9.66803 311.707 9.69098 cv
311.766 9.72302 311.809 9.75403 311.836 9.789 cv
311.859 9.83197 311.871 9.87903 311.875 9.92603 cv
311.875 10.727 li
312.258 10.316 312.648 10.004 313.047 9.79303 cv
313.441 9.586 313.859 9.48401 314.293 9.47998 cv
314.762 9.48401 315.16 9.56201 315.488 9.71503 cv
315.813 9.875 316.074 10.086 316.273 10.352 cv
316.473 10.621 316.617 10.934 316.707 11.289 cv
316.793 11.648 316.836 12.078 316.84 12.582 cv
cp
f
323.664 14.91 mo
323.66 15.309 323.586 15.656 323.441 15.957 cv
323.293 16.258 323.086 16.512 322.816 16.711 cv
322.543 16.918 322.223 17.066 321.855 17.168 cv
321.488 17.266 321.086 17.316 320.656 17.32 cv
320.391 17.316 320.145 17.297 319.91 17.262 cv
319.676 17.219 319.465 17.172 319.277 17.113 cv
319.09 17.055 318.934 16.992 318.809 16.93 cv
318.684 16.867 318.59 16.809 318.535 16.754 cv
318.477 16.699 318.434 16.617 318.406 16.5 cv
318.371 16.387 318.355 16.211 318.359 15.98 cv
318.355 15.832 318.363 15.711 318.375 15.617 cv
318.383 15.527 318.398 15.457 318.422 15.398 cv
318.441 15.348 318.465 15.309 318.5 15.289 cv
318.527 15.273 318.566 15.266 318.613 15.262 cv
318.668 15.266 318.754 15.297 318.867 15.359 cv
318.977 15.426 319.113 15.5 319.285 15.574 cv
319.449 15.656 319.645 15.727 319.863 15.793 cv
320.082 15.863 320.332 15.898 320.617 15.895 cv
320.793 15.898 320.949 15.879 321.09 15.84 cv
321.223 15.805 321.344 15.754 321.449 15.684 cv
321.547 15.617 321.621 15.531 321.676 15.426 cv
321.723 15.324 321.75 15.203 321.754 15.066 cv
321.75 14.91 321.703 14.777 321.609 14.668 cv
321.516 14.559 321.387 14.461 321.23 14.375 cv
321.066 14.293 320.887 14.215 320.691 14.141 cv
320.488 14.07 320.285 13.992 320.074 13.898 cv
319.863 13.812 319.656 13.711 319.461 13.594 cv
319.258 13.484 319.078 13.344 318.922 13.176 cv
318.758 13.012 318.633 12.812 318.539 12.574 cv
318.445 12.344 318.398 12.062 318.398 11.73 cv
318.398 11.402 318.461 11.098 318.59 10.816 cv
318.719 10.543 318.906 10.305 319.152 10.105 cv
319.395 9.90997 319.691 9.758 320.043 9.64502 cv
320.391 9.539 320.785 9.48401 321.227 9.47998 cv
321.441 9.48401 321.652 9.5 321.859 9.52698 cv
322.063 9.56201 322.25 9.60199 322.418 9.64502 cv
322.582 9.69501 322.723 9.74597 322.84 9.797 cv
322.953 9.85498 323.035 9.90198 323.086 9.93701 cv
323.133 9.97998 323.168 10.02 323.191 10.055 cv
323.211 10.098 323.223 10.145 323.234 10.195 cv
323.242 10.25 323.254 10.316 323.262 10.395 cv
323.27 10.48 323.273 10.578 323.273 10.695 cv
323.273 10.836 323.27 10.953 323.262 11.039 cv
323.254 11.133 323.238 11.203 323.223 11.25 cv
323.203 11.305 323.18 11.34 323.152 11.355 cv
323.117 11.379 323.082 11.387 323.043 11.383 cv
322.992 11.387 322.918 11.359 322.824 11.301 cv
322.723 11.25 322.602 11.191 322.453 11.125 cv
322.305 11.066 322.133 11.008 321.938 10.949 cv
321.742 10.898 321.52 10.871 321.273 10.867 cv
321.094 10.871 320.941 10.891 320.813 10.922 cv
320.68 10.961 320.57 11.012 320.492 11.078 cv
320.406 11.148 320.344 11.227 320.305 11.316 cv
320.258 11.41 320.238 11.508 320.242 11.609 cv
320.238 11.77 320.289 11.906 320.391 12.012 cv
320.488 12.125 320.617 12.219 320.781 12.301 cv
320.941 12.387 321.125 12.465 321.332 12.535 cv
321.535 12.609 321.742 12.691 321.953 12.773 cv
322.16 12.863 322.367 12.961 322.578 13.074 cv
322.781 13.187 322.965 13.328 323.125 13.492 cv
323.285 13.66 323.414 13.859 323.516 14.09 cv
323.609 14.324 323.66 14.598 323.664 14.91 cv
cp
f
331.73 16.875 mo
331.727 16.93 331.715 16.973 331.691 17.012 cv
331.664 17.051 331.617 17.086 331.555 17.109 cv
331.488 17.137 331.402 17.152 331.297 17.168 cv
331.191 17.18 331.059 17.187 330.898 17.187 cv
330.723 17.187 330.582 17.18 330.48 17.168 cv
330.371 17.152 330.289 17.137 330.227 17.109 cv
330.164 17.086 330.117 17.051 330.094 17.012 cv
330.063 16.973 330.051 16.93 330.055 16.875 cv
330.055 16.074 li
329.668 16.488 329.277 16.801 328.883 17.008 cv
328.48 17.215 328.07 17.316 327.648 17.32 cv
327.168 17.316 326.766 17.242 326.441 17.086 cv
326.117 16.934 325.855 16.719 325.656 16.449 cv
325.453 16.18 325.309 15.867 325.227 15.508 cv
325.137 15.152 325.094 14.711 325.098 14.18 cv
325.098 9.92603 li
325.094 9.87903 325.109 9.83197 325.141 9.789 cv
325.168 9.75403 325.219 9.72302 325.297 9.69098 cv
325.371 9.66803 325.473 9.64801 325.602 9.633 cv
325.727 9.625 325.883 9.617 326.074 9.61298 cv
326.262 9.617 326.422 9.625 326.547 9.633 cv
326.672 9.64801 326.77 9.66803 326.848 9.69098 cv
326.918 9.72302 326.973 9.75403 327.008 9.789 cv
327.035 9.83197 327.051 9.87903 327.055 9.92603 cv
327.055 13.852 li
327.051 14.219 327.074 14.496 327.125 14.687 cv
327.168 14.879 327.238 15.043 327.34 15.18 cv
327.434 15.32 327.559 15.426 327.707 15.5 cv
327.855 15.578 328.027 15.617 328.223 15.613 cv
328.473 15.617 328.723 15.527 328.977 15.34 cv
329.227 15.16 329.496 14.895 329.781 14.547 cv
329.781 9.92603 li
329.781 9.87903 329.793 9.83197 329.824 9.789 cv
329.848 9.75403 329.902 9.72302 329.98 9.69098 cv
330.055 9.66803 330.152 9.64801 330.281 9.633 cv
330.402 9.625 330.563 9.617 330.758 9.61298 cv
330.949 9.617 331.105 9.625 331.23 9.633 cv
331.352 9.64801 331.453 9.66803 331.527 9.69098 cv
331.598 9.72302 331.648 9.75403 331.684 9.789 cv
331.711 9.83197 331.727 9.87903 331.73 9.92603 cv
cp
f
344.672 16.875 mo
344.668 16.93 344.652 16.973 344.625 17.012 cv
344.59 17.051 344.539 17.086 344.469 17.109 cv
344.395 17.137 344.293 17.152 344.172 17.168 cv
344.047 17.18 343.891 17.187 343.699 17.187 cv
343.5 17.187 343.34 17.18 343.215 17.168 cv
343.09 17.152 342.988 17.137 342.914 17.109 cv
342.836 17.086 342.785 17.051 342.758 17.012 cv
342.73 16.973 342.715 16.93 342.719 16.875 cv
342.719 12.754 li
342.715 12.523 342.695 12.309 342.652 12.113 cv
342.605 11.922 342.535 11.758 342.449 11.621 cv
342.355 11.484 342.242 11.379 342.105 11.301 cv
341.965 11.227 341.801 11.187 341.609 11.187 cv
341.375 11.187 341.137 11.281 340.898 11.461 cv
340.66 11.645 340.402 11.906 340.121 12.254 cv
340.121 16.875 li
340.121 16.93 340.105 16.973 340.074 17.012 cv
340.043 17.051 339.988 17.086 339.914 17.109 cv
339.836 17.137 339.734 17.152 339.613 17.168 cv
339.488 17.18 339.336 17.187 339.148 17.187 cv
338.953 17.187 338.793 17.18 338.672 17.168 cv
338.543 17.152 338.441 17.137 338.371 17.109 cv
338.293 17.086 338.242 17.051 338.211 17.012 cv
338.18 16.973 338.164 16.93 338.164 16.875 cv
338.164 12.754 li
338.164 12.523 338.141 12.309 338.098 12.113 cv
338.055 11.922 337.988 11.758 337.902 11.621 cv
337.809 11.484 337.695 11.379 337.559 11.301 cv
337.414 11.227 337.25 11.187 337.066 11.187 cv
336.824 11.187 336.586 11.281 336.348 11.461 cv
336.109 11.645 335.852 11.906 335.578 12.254 cv
335.578 16.875 li
335.574 16.93 335.559 16.973 335.531 17.012 cv
335.496 17.051 335.441 17.086 335.371 17.109 cv
335.293 17.137 335.195 17.152 335.07 17.168 cv
334.945 17.18 334.785 17.187 334.598 17.187 cv
334.402 17.187 334.246 17.18 334.121 17.168 cv
333.996 17.152 333.895 17.137 333.82 17.109 cv
333.742 17.086 333.688 17.051 333.66 17.012 cv
333.625 16.973 333.609 16.93 333.613 16.875 cv
333.613 9.92603 li
333.609 9.87903 333.625 9.83197 333.652 9.789 cv
333.676 9.75403 333.723 9.72302 333.793 9.69098 cv
333.859 9.66803 333.945 9.64801 334.055 9.633 cv
334.16 9.625 334.293 9.617 334.457 9.61298 cv
334.621 9.617 334.758 9.625 334.867 9.633 cv
334.973 9.64801 335.059 9.66803 335.121 9.69098 cv
335.18 9.72302 335.223 9.75403 335.25 9.789 cv
335.273 9.83197 335.285 9.87903 335.289 9.92603 cv
335.289 10.727 li
335.672 10.316 336.055 10.004 336.438 9.79303 cv
336.816 9.586 337.219 9.48401 337.637 9.47998 cv
337.922 9.48401 338.176 9.51202 338.406 9.57001 cv
338.633 9.633 338.84 9.71899 339.02 9.828 cv
339.199 9.94098 339.352 10.078 339.48 10.23 cv
339.609 10.387 339.719 10.559 339.809 10.75 cv
340.016 10.527 340.219 10.336 340.422 10.176 cv
340.617 10.016 340.816 9.883 341.012 9.78101 cv
341.207 9.67999 341.402 9.60498 341.598 9.55499 cv
341.793 9.508 341.992 9.48401 342.195 9.47998 cv
342.656 9.48401 343.043 9.56201 343.363 9.71503 cv
343.676 9.875 343.934 10.086 344.129 10.352 cv
344.324 10.621 344.461 10.934 344.547 11.289 cv
344.625 11.648 344.668 12.027 344.672 12.426 cv
cp
f
353.59 13.297 mo
353.59 13.918 353.523 14.477 353.391 14.973 cv
353.258 15.469 353.063 15.891 352.809 16.238 cv
352.555 16.586 352.238 16.855 351.859 17.039 cv
351.477 17.227 351.043 17.316 350.559 17.32 cv
350.352 17.316 350.164 17.297 350 17.262 cv
349.828 17.219 349.664 17.16 349.508 17.082 cv
349.348 17.004 349.191 16.906 349.039 16.781 cv
348.879 16.664 348.719 16.523 348.555 16.359 cv
348.555 19.633 li
348.551 19.68 348.535 19.727 348.508 19.773 cv
348.473 19.812 348.418 19.848 348.348 19.879 cv
348.27 19.902 348.172 19.926 348.047 19.945 cv
347.922 19.957 347.762 19.965 347.574 19.969 cv
347.379 19.965 347.223 19.957 347.098 19.945 cv
346.973 19.926 346.871 19.902 346.797 19.879 cv
346.719 19.848 346.664 19.812 346.637 19.773 cv
346.602 19.727 346.586 19.68 346.59 19.633 cv
346.59 9.92603 li
346.586 9.87903 346.602 9.83197 346.629 9.789 cv
346.652 9.75403 346.695 9.72302 346.766 9.69098 cv
346.828 9.66803 346.914 9.64801 347.023 9.633 cv
347.125 9.625 347.262 9.617 347.426 9.61298 cv
347.582 9.617 347.711 9.625 347.816 9.633 cv
347.922 9.64801 348.008 9.66803 348.074 9.69098 cv
348.137 9.72302 348.184 9.75403 348.211 9.789 cv
348.234 9.83197 348.246 9.87903 348.25 9.92603 cv
348.25 10.742 li
348.449 10.535 348.648 10.355 348.848 10.195 cv
349.039 10.039 349.238 9.90601 349.441 9.797 cv
349.645 9.69501 349.852 9.61298 350.07 9.55902 cv
350.281 9.508 350.512 9.48401 350.762 9.47998 cv
351.266 9.48401 351.699 9.58197 352.063 9.78101 cv
352.418 9.98401 352.711 10.262 352.938 10.605 cv
353.16 10.957 353.324 11.359 353.434 11.82 cv
353.535 12.281 353.59 12.773 353.59 13.297 cv
cp
351.547 13.437 mo
351.543 13.145 351.523 12.863 351.48 12.586 cv
351.434 12.316 351.355 12.074 351.254 11.859 cv
351.145 11.648 351.004 11.477 350.832 11.348 cv
350.656 11.223 350.441 11.16 350.184 11.156 cv
350.051 11.16 349.922 11.18 349.797 11.215 cv
349.668 11.258 349.539 11.32 349.406 11.406 cv
349.273 11.496 349.137 11.609 349 11.75 cv
348.855 11.891 348.707 12.066 348.555 12.27 cv
348.555 14.562 li
348.828 14.91 349.09 15.18 349.34 15.367 cv
349.586 15.559 349.848 15.652 350.121 15.652 cv
350.375 15.652 350.59 15.59 350.773 15.457 cv
350.949 15.332 351.098 15.16 351.211 14.949 cv
351.324 14.738 351.406 14.5 351.465 14.234 cv
351.516 13.969 351.543 13.703 351.547 13.437 cv
cp
f
359.086 16.191 mo
359.086 16.418 359.07 16.594 359.043 16.715 cv
359.012 16.84 358.973 16.926 358.93 16.973 cv
358.879 17.023 358.813 17.066 358.723 17.105 cv
358.629 17.145 358.52 17.176 358.402 17.207 cv
358.277 17.23 358.145 17.254 358.004 17.273 cv
357.859 17.285 357.719 17.293 357.574 17.297 cv
357.184 17.293 356.844 17.242 356.559 17.148 cv
356.273 17.047 356.039 16.898 355.852 16.691 cv
355.664 16.488 355.523 16.23 355.438 15.918 cv
355.344 15.609 355.301 15.238 355.305 14.809 cv
355.305 11.25 li
354.473 11.25 li
354.371 11.254 354.297 11.191 354.246 11.066 cv
354.191 10.945 354.164 10.742 354.168 10.453 cv
354.164 10.305 354.172 10.176 354.188 10.074 cv
354.199 9.97302 354.219 9.89099 354.246 9.828 cv
354.27 9.77002 354.301 9.72699 354.344 9.69897 cv
354.379 9.67603 354.426 9.664 354.48 9.65997 cv
355.305 9.65997 li
355.305 8.10901 li
355.301 8.06201 355.316 8.01599 355.348 7.96899 cv
355.375 7.92999 355.426 7.89502 355.504 7.86298 cv
355.578 7.84003 355.68 7.81598 355.809 7.80103 cv
355.934 7.789 356.09 7.78497 356.281 7.78101 cv
356.469 7.78497 356.629 7.789 356.758 7.80103 cv
356.883 7.81598 356.984 7.84003 357.059 7.86298 cv
357.129 7.89502 357.18 7.92999 357.215 7.96899 cv
357.242 8.01599 357.258 8.06201 357.262 8.10901 cv
357.262 9.65997 li
358.773 9.65997 li
358.824 9.664 358.871 9.67603 358.91 9.69897 cv
358.949 9.72699 358.98 9.77002 359.008 9.828 cv
359.031 9.89099 359.051 9.97302 359.066 10.074 cv
359.078 10.176 359.086 10.305 359.086 10.453 cv
359.086 10.742 359.059 10.945 359.008 11.066 cv
358.953 11.191 358.879 11.254 358.781 11.25 cv
357.262 11.25 li
357.262 14.516 li
357.258 14.895 357.316 15.18 357.441 15.367 cv
357.559 15.559 357.773 15.652 358.078 15.652 cv
358.18 15.652 358.273 15.645 358.359 15.625 cv
358.441 15.609 358.516 15.59 358.582 15.562 cv
358.645 15.543 358.699 15.52 358.746 15.5 cv
358.789 15.484 358.828 15.477 358.867 15.473 cv
358.895 15.477 358.926 15.484 358.957 15.5 cv
358.984 15.52 359.004 15.559 359.023 15.609 cv
359.035 15.668 359.051 15.742 359.066 15.832 cv
359.078 15.93 359.086 16.047 359.086 16.191 cv
cp
f
362.469 16.875 mo
362.465 16.93 362.449 16.973 362.422 17.012 cv
362.387 17.051 362.332 17.086 362.262 17.109 cv
362.184 17.137 362.086 17.152 361.961 17.168 cv
361.836 17.18 361.676 17.187 361.488 17.187 cv
361.293 17.187 361.137 17.18 361.012 17.168 cv
360.887 17.152 360.785 17.137 360.711 17.109 cv
360.633 17.086 360.578 17.051 360.551 17.012 cv
360.516 16.973 360.5 16.93 360.504 16.875 cv
360.504 9.94098 li
360.5 9.89099 360.516 9.84399 360.551 9.80499 cv
360.578 9.76599 360.633 9.73401 360.711 9.703 cv
360.785 9.67999 360.887 9.65601 361.012 9.63702 cv
361.137 9.625 361.293 9.617 361.488 9.61298 cv
361.676 9.617 361.836 9.625 361.961 9.63702 cv
362.086 9.65601 362.184 9.67999 362.262 9.703 cv
362.332 9.73401 362.387 9.76599 362.422 9.80499 cv
362.449 9.84399 362.465 9.89099 362.469 9.94098 cv
cp
362.617 7.57001 mo
362.617 7.96899 362.535 8.242 362.375 8.39099 cv
362.211 8.54303 361.914 8.617 361.48 8.61298 cv
361.035 8.617 360.734 8.54303 360.586 8.39801 cv
360.43 8.25403 360.355 7.992 360.355 7.60901 cv
360.355 7.21503 360.434 6.94098 360.594 6.789 cv
360.75 6.63702 361.051 6.55902 361.496 6.55902 cv
361.93 6.55902 362.227 6.633 362.383 6.78101 cv
362.539 6.92999 362.617 7.19501 362.617 7.57001 cv
cp
f
371.465 13.328 mo
371.461 13.926 371.383 14.469 371.23 14.953 cv
371.07 15.445 370.836 15.863 370.52 16.215 cv
370.203 16.566 369.805 16.84 369.328 17.031 cv
368.848 17.223 368.289 17.316 367.652 17.32 cv
367.031 17.316 366.492 17.234 366.039 17.062 cv
365.578 16.895 365.199 16.645 364.902 16.316 cv
364.598 15.992 364.375 15.59 364.23 15.109 cv
364.086 14.633 364.016 14.086 364.016 13.469 cv
364.016 12.879 364.094 12.34 364.25 11.848 cv
364.406 11.359 364.645 10.937 364.965 10.586 cv
365.281 10.238 365.676 9.96503 366.152 9.77002 cv
366.625 9.578 367.184 9.48401 367.824 9.47998 cv
368.449 9.48401 368.988 9.56598 369.445 9.73401 cv
369.902 9.90601 370.281 10.156 370.578 10.48 cv
370.875 10.809 371.098 11.211 371.246 11.687 cv
371.391 12.168 371.461 12.715 371.465 13.328 cv
cp
369.445 13.406 mo
369.441 13.07 369.414 12.754 369.363 12.461 cv
369.305 12.176 369.211 11.926 369.086 11.711 cv
368.953 11.5 368.781 11.332 368.57 11.211 cv
368.352 11.094 368.082 11.035 367.754 11.031 cv
367.465 11.035 367.211 11.09 366.992 11.191 cv
366.773 11.301 366.594 11.457 366.453 11.66 cv
366.313 11.867 366.207 12.113 366.137 12.398 cv
366.066 12.691 366.031 13.02 366.031 13.383 cv
366.031 13.73 366.059 14.047 366.117 14.332 cv
366.172 14.625 366.266 14.875 366.395 15.086 cv
366.52 15.301 366.691 15.465 366.914 15.578 cv
367.129 15.699 367.398 15.758 367.723 15.754 cv
368.016 15.758 368.273 15.703 368.496 15.594 cv
368.711 15.488 368.891 15.336 369.031 15.129 cv
369.172 14.93 369.273 14.684 369.344 14.395 cv
369.406 14.109 369.441 13.781 369.445 13.406 cv
cp
f
379.707 16.875 mo
379.703 16.93 379.688 16.973 379.66 17.012 cv
379.625 17.051 379.574 17.086 379.504 17.109 cv
379.43 17.137 379.328 17.152 379.203 17.168 cv
379.074 17.18 378.918 17.187 378.734 17.187 cv
378.539 17.187 378.379 17.18 378.254 17.168 cv
378.125 17.152 378.023 17.137 377.953 17.109 cv
377.875 17.086 377.824 17.051 377.797 17.012 cv
377.762 16.973 377.746 16.93 377.75 16.875 cv
377.75 12.91 li
377.746 12.574 377.723 12.309 377.676 12.113 cv
377.625 11.922 377.551 11.758 377.461 11.621 cv
377.367 11.484 377.25 11.379 377.102 11.301 cv
376.953 11.227 376.777 11.187 376.582 11.187 cv
376.328 11.187 376.078 11.281 375.824 11.461 cv
375.57 11.645 375.305 11.906 375.031 12.254 cv
375.031 16.875 li
375.027 16.93 375.012 16.973 374.984 17.012 cv
374.949 17.051 374.895 17.086 374.824 17.109 cv
374.746 17.137 374.648 17.152 374.523 17.168 cv
374.398 17.18 374.238 17.187 374.051 17.187 cv
373.855 17.187 373.699 17.18 373.574 17.168 cv
373.449 17.152 373.348 17.137 373.273 17.109 cv
373.195 17.086 373.141 17.051 373.113 17.012 cv
373.078 16.973 373.063 16.93 373.066 16.875 cv
373.066 9.92603 li
373.063 9.87903 373.078 9.83197 373.105 9.789 cv
373.129 9.75403 373.176 9.72302 373.246 9.69098 cv
373.313 9.66803 373.398 9.64801 373.508 9.633 cv
373.613 9.625 373.746 9.617 373.91 9.61298 cv
374.074 9.617 374.211 9.625 374.32 9.633 cv
374.426 9.64801 374.512 9.66803 374.574 9.69098 cv
374.633 9.72302 374.676 9.75403 374.703 9.789 cv
374.727 9.83197 374.738 9.87903 374.742 9.92603 cv
374.742 10.727 li
375.125 10.316 375.516 10.004 375.914 9.79303 cv
376.309 9.586 376.727 9.48401 377.16 9.47998 cv
377.629 9.48401 378.027 9.56201 378.355 9.71503 cv
378.68 9.875 378.941 10.086 379.141 10.352 cv
379.34 10.621 379.484 10.934 379.574 11.289 cv
379.66 11.648 379.703 12.078 379.707 12.582 cv
cp
f
389.047 13.223 mo
389.043 13.523 389.016 13.734 388.961 13.852 cv
388.902 13.977 388.813 14.035 388.688 14.031 cv
385.445 14.031 li
385.316 14.035 385.223 13.973 385.168 13.848 cv
385.105 13.727 385.078 13.52 385.082 13.223 cv
385.078 12.934 385.105 12.727 385.168 12.605 cv
385.223 12.488 385.316 12.43 385.445 12.426 cv
388.688 12.426 li
388.75 12.43 388.801 12.441 388.848 12.465 cv
388.887 12.492 388.926 12.539 388.961 12.598 cv
388.988 12.664 389.012 12.746 389.027 12.848 cv
389.039 12.953 389.043 13.078 389.047 13.223 cv
cp
f
399.781 16.285 mo
399.777 16.441 399.773 16.574 399.762 16.676 cv
399.746 16.785 399.727 16.871 399.703 16.941 cv
399.676 17.012 399.641 17.062 399.605 17.094 cv
399.563 17.125 399.52 17.141 399.469 17.141 cv
394.848 17.141 li
394.672 17.141 394.527 17.09 394.414 16.988 cv
394.293 16.887 394.234 16.723 394.238 16.492 cv
394.238 7.336 li
394.234 7.289 394.254 7.242 394.289 7.19501 cv
394.32 7.15601 394.375 7.12097 394.457 7.09399 cv
394.531 7.07001 394.637 7.05103 394.773 7.03101 cv
394.902 7.02002 395.066 7.01202 395.27 7.008 cv
395.465 7.01202 395.633 7.02002 395.766 7.03101 cv
395.895 7.05103 395.996 7.07001 396.078 7.09399 cv
396.152 7.12097 396.211 7.15601 396.246 7.19501 cv
396.277 7.242 396.293 7.289 396.297 7.336 cv
396.297 15.449 li
399.469 15.449 li
399.52 15.453 399.563 15.469 399.605 15.492 cv
399.641 15.523 399.676 15.57 399.703 15.633 cv
399.727 15.703 399.746 15.789 399.762 15.891 cv
399.773 16 399.777 16.129 399.781 16.285 cv
cp
f
407.902 13.328 mo
407.898 13.926 407.82 14.469 407.668 14.953 cv
407.508 15.445 407.273 15.863 406.957 16.215 cv
406.641 16.566 406.242 16.84 405.766 17.031 cv
405.285 17.223 404.727 17.316 404.09 17.32 cv
403.469 17.316 402.93 17.234 402.477 17.062 cv
402.016 16.895 401.637 16.645 401.34 16.316 cv
401.035 15.992 400.813 15.59 400.668 15.109 cv
400.523 14.633 400.453 14.086 400.453 13.469 cv
400.453 12.879 400.531 12.34 400.688 11.848 cv
400.844 11.359 401.082 10.937 401.402 10.586 cv
401.719 10.238 402.113 9.96503 402.59 9.77002 cv
403.063 9.578 403.621 9.48401 404.262 9.47998 cv
404.887 9.48401 405.426 9.56598 405.883 9.73401 cv
406.34 9.90601 406.719 10.156 407.016 10.48 cv
407.313 10.809 407.535 11.211 407.684 11.687 cv
407.828 12.168 407.898 12.715 407.902 13.328 cv
cp
405.883 13.406 mo
405.879 13.07 405.852 12.754 405.801 12.461 cv
405.742 12.176 405.648 11.926 405.523 11.711 cv
405.391 11.5 405.219 11.332 405.008 11.211 cv
404.789 11.094 404.52 11.035 404.191 11.031 cv
403.902 11.035 403.648 11.09 403.43 11.191 cv
403.211 11.301 403.031 11.457 402.891 11.66 cv
402.75 11.867 402.645 12.113 402.574 12.398 cv
402.504 12.691 402.469 13.02 402.469 13.383 cv
402.469 13.73 402.496 14.047 402.555 14.332 cv
402.609 14.625 402.703 14.875 402.832 15.086 cv
402.957 15.301 403.129 15.465 403.352 15.578 cv
403.566 15.699 403.836 15.758 404.16 15.754 cv
404.453 15.758 404.711 15.703 404.934 15.594 cv
405.148 15.488 405.328 15.336 405.469 15.129 cv
405.609 14.93 405.711 14.684 405.781 14.395 cv
405.844 14.109 405.879 13.781 405.883 13.406 cv
cp
f
414.719 15.77 mo
414.715 15.906 414.711 16.02 414.707 16.109 cv
414.695 16.203 414.688 16.281 414.676 16.34 cv
414.66 16.402 414.645 16.453 414.629 16.488 cv
414.609 16.531 414.566 16.578 414.508 16.637 cv
414.441 16.699 414.336 16.773 414.188 16.855 cv
414.035 16.945 413.863 17.023 413.672 17.086 cv
413.48 17.156 413.273 17.207 413.047 17.25 cv
412.82 17.289 412.586 17.309 412.352 17.312 cv
411.813 17.309 411.34 17.23 410.926 17.062 cv
410.512 16.898 410.164 16.652 409.887 16.328 cv
409.602 16.004 409.391 15.609 409.25 15.141 cv
409.109 14.676 409.039 14.137 409.039 13.531 cv
409.039 12.836 409.125 12.238 409.297 11.73 cv
409.469 11.227 409.711 10.805 410.027 10.473 cv
410.336 10.141 410.703 9.89502 411.133 9.72998 cv
411.555 9.57001 412.023 9.48798 412.535 9.48798 cv
412.742 9.48798 412.945 9.508 413.148 9.54303 cv
413.344 9.58197 413.531 9.633 413.707 9.69098 cv
413.879 9.758 414.035 9.828 414.176 9.90198 cv
414.313 9.98401 414.41 10.051 414.469 10.105 cv
414.523 10.164 414.563 10.211 414.59 10.246 cv
414.609 10.289 414.629 10.34 414.645 10.398 cv
414.656 10.465 414.668 10.543 414.676 10.629 cv
414.684 10.723 414.688 10.832 414.688 10.961 cv
414.688 11.266 414.66 11.477 414.609 11.598 cv
414.555 11.719 414.488 11.781 414.406 11.777 cv
414.316 11.781 414.223 11.746 414.125 11.672 cv
414.023 11.602 413.906 11.52 413.773 11.43 cv
413.641 11.344 413.48 11.262 413.293 11.187 cv
413.105 11.117 412.879 11.082 412.621 11.078 cv
412.109 11.082 411.723 11.277 411.453 11.668 cv
411.18 12.059 411.043 12.633 411.047 13.391 cv
411.043 13.766 411.078 14.098 411.148 14.383 cv
411.215 14.668 411.313 14.906 411.449 15.098 cv
411.578 15.293 411.746 15.437 411.949 15.531 cv
412.148 15.629 412.379 15.676 412.645 15.676 cv
412.91 15.676 413.145 15.637 413.344 15.555 cv
413.535 15.477 413.703 15.387 413.852 15.285 cv
413.992 15.187 414.117 15.098 414.219 15.016 cv
414.316 14.937 414.398 14.898 414.469 14.895 cv
414.512 14.898 414.551 14.91 414.586 14.934 cv
414.613 14.961 414.637 15.008 414.66 15.078 cv
414.676 15.148 414.691 15.238 414.703 15.348 cv
414.711 15.457 414.715 15.598 414.719 15.77 cv
cp
f
422.008 16.898 mo
422.004 16.977 421.977 17.031 421.93 17.07 cv
421.875 17.113 421.793 17.141 421.684 17.16 cv
421.566 17.176 421.402 17.187 421.188 17.187 cv
420.949 17.187 420.777 17.176 420.676 17.16 cv
420.566 17.141 420.492 17.113 420.453 17.07 cv
420.406 17.031 420.387 16.977 420.387 16.898 cv
420.387 16.348 li
420.098 16.656 419.77 16.895 419.406 17.062 cv
419.039 17.234 418.633 17.316 418.188 17.32 cv
417.816 17.316 417.477 17.27 417.168 17.176 cv
416.859 17.082 416.594 16.941 416.367 16.746 cv
416.141 16.559 415.965 16.324 415.84 16.043 cv
415.715 15.766 415.652 15.437 415.656 15.059 cv
415.652 14.66 415.73 14.309 415.891 14.004 cv
416.047 13.707 416.285 13.461 416.602 13.266 cv
416.914 13.074 417.305 12.93 417.773 12.832 cv
418.242 12.742 418.785 12.695 419.402 12.691 cv
420.082 12.691 li
420.082 12.27 li
420.082 12.055 420.059 11.863 420.016 11.699 cv
419.969 11.539 419.895 11.402 419.797 11.289 cv
419.691 11.184 419.559 11.102 419.391 11.047 cv
419.219 10.996 419.008 10.973 418.766 10.969 cv
418.434 10.973 418.141 11.008 417.887 11.078 cv
417.625 11.152 417.398 11.234 417.203 11.32 cv
417.004 11.414 416.84 11.492 416.711 11.562 cv
416.574 11.637 416.465 11.676 416.387 11.672 cv
416.324 11.676 416.273 11.656 416.234 11.617 cv
416.188 11.582 416.152 11.531 416.125 11.461 cv
416.094 11.398 416.07 11.312 416.059 11.211 cv
416.039 11.113 416.031 11.004 416.035 10.883 cv
416.031 10.723 416.047 10.598 416.074 10.5 cv
416.098 10.41 416.145 10.324 416.223 10.246 cv
416.293 10.172 416.422 10.09 416.605 10 cv
416.785 9.90997 416.996 9.82397 417.242 9.74597 cv
417.484 9.66803 417.754 9.60498 418.043 9.55499 cv
418.332 9.508 418.629 9.48401 418.938 9.47998 cv
419.48 9.48401 419.945 9.53497 420.332 9.64099 cv
420.719 9.75 421.039 9.914 421.289 10.133 cv
421.539 10.352 421.719 10.637 421.836 10.984 cv
421.945 11.336 422.004 11.75 422.008 12.223 cv
cp
420.082 13.922 mo
419.332 13.922 li
419.016 13.926 418.746 13.949 418.523 13.992 cv
418.297 14.043 418.113 14.113 417.977 14.203 cv
417.832 14.301 417.73 14.414 417.668 14.543 cv
417.602 14.68 417.566 14.828 417.57 14.996 cv
417.566 15.289 417.66 15.52 417.848 15.684 cv
418.031 15.852 418.289 15.934 418.617 15.934 cv
418.891 15.934 419.141 15.863 419.375 15.723 cv
419.602 15.582 419.84 15.379 420.082 15.105 cv
cp
f
425.93 16.875 mo
425.926 16.93 425.91 16.973 425.883 17.012 cv
425.848 17.051 425.793 17.086 425.723 17.109 cv
425.645 17.137 425.547 17.152 425.422 17.168 cv
425.297 17.18 425.137 17.187 424.949 17.187 cv
424.754 17.187 424.598 17.18 424.473 17.168 cv
424.348 17.152 424.246 17.137 424.172 17.109 cv
424.094 17.086 424.039 17.051 424.012 17.012 cv
423.977 16.973 423.961 16.93 423.965 16.875 cv
423.965 6.62903 li
423.961 6.578 423.977 6.53101 424.012 6.48798 cv
424.039 6.44897 424.094 6.414 424.172 6.383 cv
424.246 6.35498 424.348 6.336 424.473 6.31598 cv
424.598 6.30499 424.754 6.297 424.949 6.29303 cv
425.137 6.297 425.297 6.30499 425.422 6.31598 cv
425.547 6.336 425.645 6.35498 425.723 6.383 cv
425.793 6.414 425.848 6.44897 425.883 6.48798 cv
425.91 6.53101 425.926 6.578 425.93 6.62903 cv
cp
f
443.418 16.859 mo
443.414 16.914 443.402 16.961 443.375 17 cv
443.344 17.043 443.289 17.078 443.219 17.102 cv
443.141 17.129 443.043 17.148 442.918 17.164 cv
442.793 17.18 442.633 17.187 442.441 17.187 cv
442.254 17.187 442.098 17.18 441.977 17.164 cv
441.848 17.148 441.75 17.129 441.68 17.102 cv
441.605 17.078 441.555 17.043 441.523 17 cv
441.492 16.961 441.477 16.914 441.477 16.859 cv
441.477 8.65198 li
441.461 8.65198 li
438.539 16.852 li
438.516 16.922 438.48 16.977 438.438 17.02 cv
438.387 17.066 438.324 17.102 438.246 17.125 cv
438.164 17.152 438.063 17.168 437.938 17.176 cv
437.813 17.184 437.66 17.187 437.488 17.187 cv
437.309 17.187 437.16 17.18 437.035 17.168 cv
436.91 17.152 436.805 17.133 436.727 17.105 cv
436.641 17.078 436.578 17.043 436.535 17 cv
436.484 16.961 436.453 16.914 436.441 16.852 cv
433.621 8.65198 li
433.605 8.65198 li
433.605 16.859 li
433.602 16.914 433.586 16.961 433.563 17 cv
433.531 17.043 433.48 17.078 433.402 17.102 cv
433.324 17.129 433.223 17.148 433.102 17.164 cv
432.977 17.18 432.82 17.187 432.633 17.187 cv
432.441 17.187 432.285 17.18 432.164 17.164 cv
432.035 17.148 431.934 17.129 431.863 17.102 cv
431.785 17.078 431.734 17.043 431.707 17 cv
431.676 16.961 431.66 16.914 431.664 16.859 cv
431.664 7.875 li
431.66 7.61298 431.73 7.40997 431.875 7.26599 cv
432.012 7.12903 432.199 7.05902 432.438 7.05499 cv
433.777 7.05499 li
434.016 7.05902 434.219 7.078 434.391 7.11298 cv
434.559 7.15601 434.707 7.21899 434.836 7.30902 cv
434.957 7.40198 435.063 7.52301 435.148 7.66803 cv
435.23 7.82001 435.301 8.00403 435.367 8.21899 cv
437.551 14.227 li
437.582 14.227 li
439.84 8.23401 li
439.906 8.01599 439.98 7.83197 440.063 7.67999 cv
440.141 7.53101 440.234 7.40997 440.344 7.31201 cv
440.449 7.22302 440.574 7.15601 440.719 7.11298 cv
440.863 7.078 441.031 7.05902 441.227 7.05499 cv
442.605 7.05499 li
442.742 7.05902 442.863 7.07397 442.969 7.10901 cv
443.066 7.14801 443.148 7.203 443.219 7.27002 cv
443.281 7.34399 443.332 7.42999 443.367 7.52698 cv
443.398 7.633 443.414 7.75 443.418 7.875 cv
cp
f
452.527 13.328 mo
452.523 13.926 452.445 14.469 452.293 14.953 cv
452.133 15.445 451.898 15.863 451.582 16.215 cv
451.266 16.566 450.867 16.84 450.391 17.031 cv
449.91 17.223 449.352 17.316 448.715 17.32 cv
448.094 17.316 447.555 17.234 447.102 17.062 cv
446.641 16.895 446.262 16.645 445.965 16.316 cv
445.66 15.992 445.438 15.59 445.293 15.109 cv
445.148 14.633 445.078 14.086 445.078 13.469 cv
445.078 12.879 445.156 12.34 445.313 11.848 cv
445.469 11.359 445.707 10.937 446.027 10.586 cv
446.344 10.238 446.738 9.96503 447.215 9.77002 cv
447.688 9.578 448.246 9.48401 448.887 9.47998 cv
449.512 9.48401 450.051 9.56598 450.508 9.73401 cv
450.965 9.90601 451.344 10.156 451.641 10.48 cv
451.938 10.809 452.16 11.211 452.309 11.687 cv
452.453 12.168 452.523 12.715 452.527 13.328 cv
cp
450.508 13.406 mo
450.504 13.07 450.477 12.754 450.426 12.461 cv
450.367 12.176 450.273 11.926 450.148 11.711 cv
450.016 11.5 449.844 11.332 449.633 11.211 cv
449.414 11.094 449.145 11.035 448.816 11.031 cv
448.527 11.035 448.273 11.09 448.055 11.191 cv
447.836 11.301 447.656 11.457 447.516 11.66 cv
447.375 11.867 447.27 12.113 447.199 12.398 cv
447.129 12.691 447.094 13.02 447.094 13.383 cv
447.094 13.73 447.121 14.047 447.18 14.332 cv
447.234 14.625 447.328 14.875 447.457 15.086 cv
447.582 15.301 447.754 15.465 447.977 15.578 cv
448.191 15.699 448.461 15.758 448.785 15.754 cv
449.078 15.758 449.336 15.703 449.559 15.594 cv
449.773 15.488 449.953 15.336 450.094 15.129 cv
450.234 14.93 450.336 14.684 450.406 14.395 cv
450.469 14.109 450.504 13.781 450.508 13.406 cv
cp
f
460.676 16.875 mo
460.672 16.937 460.66 16.984 460.637 17.02 cv
460.609 17.062 460.563 17.094 460.504 17.117 cv
460.438 17.141 460.355 17.156 460.25 17.172 cv
460.145 17.18 460.012 17.187 459.859 17.187 cv
459.688 17.187 459.555 17.18 459.453 17.172 cv
459.348 17.156 459.262 17.141 459.199 17.117 cv
459.133 17.094 459.086 17.062 459.059 17.02 cv
459.027 16.984 459.012 16.937 459.016 16.875 cv
459.016 16.105 li
458.656 16.492 458.281 16.789 457.891 17 cv
457.492 17.211 457.059 17.316 456.586 17.32 cv
456.051 17.316 455.602 17.215 455.238 17.012 cv
454.871 16.809 454.574 16.535 454.344 16.184 cv
454.109 15.84 453.941 15.434 453.84 14.965 cv
453.738 14.504 453.688 14.012 453.688 13.492 cv
453.688 12.879 453.75 12.324 453.883 11.828 cv
454.012 11.336 454.207 10.914 454.465 10.566 cv
454.719 10.219 455.035 9.953 455.414 9.76202 cv
455.793 9.578 456.23 9.48401 456.727 9.47998 cv
457.113 9.48401 457.465 9.56201 457.785 9.71899 cv
458.098 9.87903 458.414 10.109 458.727 10.414 cv
458.727 6.65198 li
458.727 6.60199 458.738 6.55499 458.77 6.51202 cv
458.793 6.47302 458.848 6.43701 458.926 6.40601 cv
459 6.37903 459.098 6.35901 459.227 6.34003 cv
459.348 6.328 459.508 6.32001 459.703 6.31598 cv
459.895 6.32001 460.051 6.328 460.176 6.34003 cv
460.297 6.35901 460.398 6.37903 460.473 6.40601 cv
460.543 6.43701 460.594 6.47302 460.629 6.51202 cv
460.656 6.55499 460.672 6.60199 460.676 6.65198 cv
cp
458.727 12.23 mo
458.445 11.879 458.176 11.609 457.922 11.422 cv
457.66 11.234 457.391 11.141 457.113 11.141 cv
456.859 11.141 456.641 11.207 456.457 11.332 cv
456.27 11.465 456.121 11.633 456.012 11.844 cv
455.898 12.055 455.816 12.293 455.762 12.555 cv
455.707 12.82 455.68 13.09 455.68 13.359 cv
455.68 13.656 455.703 13.937 455.75 14.211 cv
455.797 14.488 455.871 14.734 455.98 14.949 cv
456.082 15.164 456.227 15.336 456.406 15.465 cv
456.582 15.598 456.805 15.664 457.074 15.66 cv
457.207 15.664 457.336 15.645 457.469 15.602 cv
457.594 15.566 457.727 15.504 457.859 15.41 cv
457.992 15.324 458.129 15.207 458.27 15.062 cv
458.41 14.922 458.563 14.746 458.727 14.539 cv
cp
f
469.074 13.199 mo
469.07 13.437 469.02 13.613 468.914 13.727 cv
468.805 13.844 468.656 13.902 468.477 13.898 cv
464.242 13.898 li
464.238 14.199 464.273 14.469 464.348 14.707 cv
464.414 14.949 464.527 15.152 464.684 15.32 cv
464.836 15.492 465.031 15.621 465.273 15.707 cv
465.512 15.797 465.801 15.84 466.145 15.84 cv
466.484 15.84 466.785 15.816 467.047 15.766 cv
467.305 15.719 467.531 15.664 467.723 15.602 cv
467.91 15.543 468.066 15.488 468.195 15.437 cv
468.316 15.391 468.418 15.367 468.5 15.363 cv
468.543 15.367 468.582 15.375 468.617 15.391 cv
468.645 15.41 468.672 15.441 468.691 15.488 cv
468.711 15.535 468.723 15.602 468.734 15.687 cv
468.738 15.773 468.742 15.883 468.746 16.012 cv
468.742 16.129 468.742 16.227 468.738 16.305 cv
468.73 16.387 468.723 16.453 468.715 16.508 cv
468.703 16.566 468.688 16.617 468.668 16.652 cv
468.648 16.695 468.621 16.73 468.59 16.766 cv
468.555 16.805 468.461 16.855 468.313 16.914 cv
468.156 16.98 467.965 17.043 467.734 17.098 cv
467.496 17.16 467.227 17.207 466.93 17.254 cv
466.625 17.293 466.305 17.316 465.965 17.32 cv
465.344 17.316 464.801 17.242 464.34 17.086 cv
463.871 16.934 463.484 16.695 463.176 16.379 cv
462.859 16.062 462.625 15.664 462.477 15.18 cv
462.32 14.699 462.246 14.133 462.25 13.477 cv
462.246 12.863 462.324 12.305 462.488 11.809 cv
462.645 11.312 462.879 10.895 463.191 10.547 cv
463.496 10.203 463.871 9.93701 464.309 9.75403 cv
464.746 9.57397 465.238 9.48401 465.793 9.47998 cv
466.371 9.48401 466.871 9.57001 467.285 9.73798 cv
467.699 9.914 468.035 10.152 468.301 10.453 cv
468.563 10.758 468.758 11.117 468.887 11.531 cv
469.008 11.949 469.07 12.398 469.074 12.887 cv
cp
467.172 12.637 mo
467.184 12.086 467.074 11.652 466.84 11.34 cv
466.605 11.027 466.238 10.871 465.746 10.867 cv
465.496 10.871 465.281 10.918 465.098 11.008 cv
464.91 11.105 464.758 11.23 464.637 11.387 cv
464.512 11.547 464.418 11.734 464.355 11.949 cv
464.289 12.164 464.25 12.395 464.242 12.637 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
