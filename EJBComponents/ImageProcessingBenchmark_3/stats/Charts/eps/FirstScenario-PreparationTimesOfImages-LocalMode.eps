%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FirstScenario-PreparationTimesOfImages-LocalMode.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 3:59:28 p.m.
%%BoundingBox: 0 0 693 551
%%HiResBoundingBox: 0 0 692.5500 550.2001
%%CropBox: 0 0 692.5500 550.2001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -550.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 550.2 li
692.55 550.2 li
692.55 0 li
cp
clp
gsave
0 550.2 mo
693 550.2 li
693 -.799988 li
0 -.799988 li
cp
clp
0 0 mo
692.551 0 li
692.551 550.199 li
0 550.199 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
55.801 478.93 mo
678.711 478.93 li
55.801 439.512 mo
678.711 439.512 li
55.801 400.09 mo
678.711 400.09 li
55.801 360.73 mo
678.711 360.73 li
55.801 321.309 mo
678.711 321.309 li
55.801 281.949 mo
678.711 281.949 li
55.801 242.531 mo
678.711 242.531 li
55.801 203.109 mo
678.711 203.109 li
55.801 163.75 mo
678.711 163.75 li
55.801 124.328 mo
678.711 124.328 li
55.801 84.969 mo
678.711 84.969 li
55.801 45.551 mo
678.711 45.551 li
.135805 .104005 .108583 0 cmyk
@
55.801 459.191 mo
678.711 459.191 li
55.801 419.828 mo
678.711 419.828 li
55.801 380.41 mo
678.711 380.41 li
55.801 340.988 mo
678.711 340.988 li
55.801 301.629 mo
678.711 301.629 li
55.801 262.211 mo
678.711 262.211 li
55.801 222.852 mo
678.711 222.852 li
55.801 183.43 mo
678.711 183.43 li
55.801 144.012 mo
678.711 144.012 li
55.801 104.648 mo
678.711 104.648 li
55.801 65.23 mo
678.711 65.23 li
55.801 25.852 mo
678.711 25.852 li
.326574 .281529 .277562 0 cmyk
@
65.852 25.852 mo
65.852 498.602 li
85.949 25.852 mo
85.949 498.602 li
106.051 25.852 mo
106.051 498.602 li
126.148 25.852 mo
126.148 498.602 li
146.25 25.852 mo
146.25 498.602 li
166.289 25.852 mo
166.289 498.602 li
186.391 25.852 mo
186.391 498.602 li
206.488 25.852 mo
206.488 498.602 li
226.59 25.852 mo
226.59 498.602 li
246.691 25.852 mo
246.691 498.602 li
266.789 25.852 mo
266.789 498.602 li
286.891 25.852 mo
286.891 498.602 li
306.988 25.852 mo
306.988 498.602 li
327.09 25.852 mo
327.09 498.602 li
347.191 25.852 mo
347.191 498.602 li
367.23 25.852 mo
367.23 498.602 li
387.328 25.852 mo
387.328 498.602 li
407.43 25.852 mo
407.43 498.602 li
427.531 25.852 mo
427.531 498.602 li
447.629 25.852 mo
447.629 498.602 li
467.73 25.852 mo
467.73 498.602 li
487.828 25.852 mo
487.828 498.602 li
507.93 25.852 mo
507.93 498.602 li
528.031 25.852 mo
528.031 498.602 li
548.129 25.852 mo
548.129 498.602 li
568.172 25.852 mo
568.172 498.602 li
588.27 25.852 mo
588.27 498.602 li
608.371 25.852 mo
608.371 498.602 li
628.469 25.852 mo
628.469 498.602 li
648.57 25.852 mo
648.57 498.602 li
668.672 25.852 mo
668.672 498.602 li
.175235 .144778 .143648 0 cmyk
@
55.801 25.852 mo
55.801 498.602 li
75.871 25.852 mo
75.871 498.602 li
95.969 25.852 mo
95.969 498.602 li
116.07 25.852 mo
116.07 498.602 li
136.172 25.852 mo
136.172 498.602 li
156.27 25.852 mo
156.27 498.602 li
176.371 25.852 mo
176.371 498.602 li
196.469 25.852 mo
196.469 498.602 li
216.57 25.852 mo
216.57 498.602 li
236.672 25.852 mo
236.672 498.602 li
256.711 25.852 mo
256.711 498.602 li
276.809 25.852 mo
276.809 498.602 li
296.91 25.852 mo
296.91 498.602 li
317.012 25.852 mo
317.012 498.602 li
337.109 25.852 mo
337.109 498.602 li
357.211 25.852 mo
357.211 498.602 li
377.309 25.852 mo
377.309 498.602 li
397.41 25.852 mo
397.41 498.602 li
417.512 25.852 mo
417.512 498.602 li
437.609 25.852 mo
437.609 498.602 li
457.648 25.852 mo
457.648 498.602 li
477.75 25.852 mo
477.75 498.602 li
497.852 25.852 mo
497.852 498.602 li
517.949 25.852 mo
517.949 498.602 li
538.051 25.852 mo
538.051 498.602 li
558.148 25.852 mo
558.148 498.602 li
578.25 25.852 mo
578.25 498.602 li
598.352 25.852 mo
598.352 498.602 li
618.449 25.852 mo
618.449 498.602 li
638.551 25.852 mo
638.551 498.602 li
658.59 25.852 mo
658.59 498.602 li
678.711 25.852 mo
678.711 498.602 li
.326574 .281529 .277562 0 cmyk
@
35.715 489.285 mo
42.809 489.285 li
42.809 506.375 li
35.715 506.375 li
cp
0 0 0 0 cmyk
ef
35.715 449.891 mo
42.809 449.891 li
42.809 466.981 li
35.715 466.981 li
cp
ef
35.715 410.488 mo
42.809 410.488 li
42.809 427.578 li
35.715 427.578 li
cp
ef
28.617 371.102 mo
42.808 371.102 li
42.808 388.192 li
28.617 388.192 li
cp
ef
28.617 331.699 mo
42.808 331.699 li
42.808 348.789 li
28.617 348.789 li
cp
ef
28.617 292.301 mo
42.808 292.301 li
42.808 309.391 li
28.617 309.391 li
cp
ef
28.617 252.91 mo
42.808 252.91 li
42.808 270 li
28.617 270 li
cp
ef
28.617 213.512 mo
42.808 213.512 li
42.808 230.602 li
28.617 230.602 li
cp
ef
28.617 174.121 mo
42.808 174.121 li
42.808 191.211 li
28.617 191.211 li
cp
ef
28.617 134.719 mo
42.808 134.719 li
42.808 151.809 li
28.617 151.809 li
cp
ef
28.617 95.32 mo
42.808 95.32 li
42.808 112.41 li
28.617 112.41 li
cp
ef
28.617 55.93 mo
42.808 55.93 li
42.808 73.02 li
28.617 73.02 li
cp
ef
28.617 16.531 mo
42.808 16.531 li
42.808 33.621 li
28.617 33.621 li
cp
ef
1 lw
55.801 498.602 mo
678.711 498.602 li
.369879 .299321 .304356 .000976577 cmyk
@
55.801 498.602 mo
55.801 503.047 li
75.871 498.602 mo
75.871 503.047 li
95.969 498.602 mo
95.969 503.047 li
116.07 498.602 mo
116.07 503.047 li
136.172 498.602 mo
136.172 503.047 li
156.27 498.602 mo
156.27 503.047 li
176.371 498.602 mo
176.371 503.047 li
196.469 498.602 mo
196.469 503.047 li
216.57 498.602 mo
216.57 503.047 li
236.672 498.602 mo
236.672 503.047 li
256.711 498.602 mo
256.711 503.047 li
276.809 498.602 mo
276.809 503.047 li
296.91 498.602 mo
296.91 503.047 li
317.012 498.602 mo
317.012 503.047 li
337.109 498.602 mo
337.109 503.047 li
357.211 498.602 mo
357.211 503.047 li
377.309 498.602 mo
377.309 503.047 li
397.41 498.602 mo
397.41 503.047 li
417.512 498.602 mo
417.512 503.047 li
437.609 498.602 mo
437.609 503.047 li
457.648 498.602 mo
457.648 503.047 li
477.75 498.602 mo
477.75 503.047 li
497.852 498.602 mo
497.852 503.047 li
517.949 498.602 mo
517.949 503.047 li
538.051 498.602 mo
538.051 503.047 li
558.148 498.602 mo
558.148 503.047 li
578.25 498.602 mo
578.25 503.047 li
598.352 498.602 mo
598.352 503.047 li
618.449 498.602 mo
618.449 503.047 li
638.551 498.602 mo
638.551 503.047 li
658.59 498.602 mo
658.59 503.047 li
678.711 498.602 mo
678.711 503.047 li
@
gsave
55.77 25.809 mo
679.411 25.809 li
679.411 499.329 li
55.77 499.329 li
cp
clp
1 lc
55.801 428.809 mo
75.871 187.449 li
95.969 231.73 li
116.07 47.379 li
136.172 48.672 li
156.27 47.828 li
176.371 48.07 li
196.469 47.828 li
216.57 47.949 li
236.672 101.949 li
256.711 101.531 li
276.809 102.129 li
296.91 101.891 li
317.012 101.531 li
337.109 102.129 li
357.211 101.352 li
377.309 101.531 li
417.512 101.531 li
437.609 101.77 li
457.648 101.949 li
477.75 101.648 li
497.852 101.289 li
517.949 101.352 li
538.051 101.41 li
558.148 101.531 li
578.25 101.41 li
598.352 101.648 li
618.449 101.531 li
638.551 101.711 li
658.59 101.352 li
678.711 101.59 li
.62829 .284672 0 0 cmyk
@
grestore
1.02 lw
60.84 433.801 mo
50.82 423.781 li
50.82 433.801 mo
60.84 423.781 li
.62829 .284672 0 0 cmyk
@
80.941 192.422 mo
70.922 182.398 li
70.922 192.422 mo
80.941 182.398 li
@
101.039 236.762 mo
91.02 226.738 li
91.02 236.762 mo
101.039 226.738 li
@
121.141 52.379 mo
111.121 42.359 li
111.121 52.379 mo
121.141 42.359 li
@
141.238 53.699 mo
131.219 43.68 li
131.219 53.699 mo
141.238 43.68 li
@
161.281 52.801 mo
151.262 42.781 li
151.262 52.801 mo
161.281 42.781 li
@
181.379 53.102 mo
171.359 43.078 li
171.359 53.102 mo
181.379 43.078 li
@
201.48 52.801 mo
191.461 42.781 li
191.461 52.801 mo
201.48 42.781 li
@
221.578 52.922 mo
211.559 42.898 li
211.559 52.922 mo
221.578 42.898 li
@
241.68 106.922 mo
231.66 96.898 li
231.66 106.922 mo
241.68 96.898 li
@
261.781 106.5 mo
251.762 96.48 li
251.762 106.5 mo
261.781 96.48 li
@
281.879 107.102 mo
271.859 97.078 li
271.859 107.102 mo
281.879 97.078 li
@
301.98 106.922 mo
291.961 96.898 li
291.961 106.922 mo
301.98 96.898 li
@
322.078 106.5 mo
312.059 96.48 li
312.059 106.5 mo
322.078 96.48 li
@
342.18 107.102 mo
332.16 97.078 li
332.16 107.102 mo
342.18 97.078 li
@
362.219 106.379 mo
352.199 96.359 li
352.199 106.379 mo
362.219 96.359 li
@
382.32 106.559 mo
372.301 96.539 li
372.301 106.559 mo
382.32 96.539 li
@
402.422 106.559 mo
392.398 96.539 li
392.398 106.559 mo
402.422 96.539 li
@
422.52 106.5 mo
412.5 96.48 li
412.5 106.5 mo
422.52 96.48 li
@
442.621 106.801 mo
432.602 96.781 li
432.602 106.801 mo
442.621 96.781 li
@
462.719 106.922 mo
452.699 96.898 li
452.699 106.922 mo
462.719 96.898 li
@
482.82 106.621 mo
472.801 96.602 li
472.801 106.621 mo
482.82 96.602 li
@
502.922 106.262 mo
492.898 96.238 li
492.898 106.262 mo
502.922 96.238 li
@
523.02 106.379 mo
513 96.359 li
513 106.379 mo
523.02 96.359 li
@
543.121 106.379 mo
533.102 96.359 li
533.102 106.379 mo
543.121 96.359 li
@
563.16 106.5 mo
553.141 96.48 li
553.141 106.5 mo
563.16 96.48 li
@
583.262 106.441 mo
573.238 96.422 li
573.238 106.441 mo
583.262 96.422 li
@
603.359 106.68 mo
593.34 96.66 li
593.34 106.68 mo
603.359 96.66 li
@
623.461 106.5 mo
613.441 96.48 li
613.441 106.5 mo
623.461 96.48 li
@
643.559 106.68 mo
633.539 96.66 li
633.539 106.68 mo
643.559 96.66 li
@
663.66 106.32 mo
653.641 96.301 li
653.641 106.32 mo
663.66 96.301 li
@
683.762 106.559 mo
673.738 96.539 li
673.738 106.559 mo
683.762 96.539 li
@
gsave
55.77 25.809 mo
679.411 25.809 li
679.411 499.329 li
55.77 499.329 li
cp
clp
1 lw
1 lc
[3 4 ] 0 dsh
55.801 428.949 mo
75.871 189.371 li
95.969 233.891 li
116.07 50.59 li
136.172 50.41 li
156.27 50.141 li
176.371 51.309 li
196.469 50.949 li
216.57 50.469 li
236.672 104.23 li
256.711 104.711 li
276.809 104.648 li
296.91 104.648 li
317.012 104.531 li
337.109 104.711 li
357.211 104.289 li
377.309 104.531 li
397.41 104.289 li
417.512 104.59 li
437.609 103.27 li
457.648 103.512 li
477.75 103.871 li
497.852 104.109 li
517.949 103.93 li
538.051 103.988 li
558.148 104.77 li
578.25 104.172 li
598.352 103.988 li
618.449 104.289 li
638.551 104.949 li
658.59 104.59 li
678.711 104.23 li
@
grestore
60.84 433.922 mo
50.82 423.898 li
50.82 433.922 mo
60.84 423.898 li
@
80.941 194.34 mo
70.922 184.32 li
70.922 194.34 mo
80.941 184.32 li
@
101.039 238.922 mo
91.02 228.898 li
91.02 238.922 mo
101.039 228.898 li
@
121.141 55.621 mo
111.121 45.602 li
111.121 55.621 mo
121.141 45.602 li
@
141.238 55.379 mo
131.219 45.359 li
131.219 55.379 mo
141.238 45.359 li
@
161.281 55.141 mo
151.262 45.121 li
151.262 55.141 mo
161.281 45.121 li
@
181.379 56.34 mo
171.359 46.32 li
171.359 56.34 mo
181.379 46.32 li
@
201.48 55.922 mo
191.461 45.898 li
191.461 55.922 mo
201.48 45.898 li
@
221.578 55.5 mo
211.559 45.48 li
211.559 55.5 mo
221.578 45.48 li
@
241.68 109.262 mo
231.66 99.238 li
231.66 109.262 mo
241.68 99.238 li
@
261.781 109.738 mo
251.762 99.719 li
251.762 109.738 mo
261.781 99.719 li
@
281.879 109.621 mo
271.859 99.602 li
271.859 109.621 mo
281.879 99.602 li
@
301.98 109.621 mo
291.961 99.602 li
291.961 109.621 mo
301.98 99.602 li
@
322.078 109.5 mo
312.059 99.48 li
312.059 109.5 mo
322.078 99.48 li
@
342.18 109.68 mo
332.16 99.66 li
332.16 109.68 mo
342.18 99.66 li
@
362.219 109.262 mo
352.199 99.238 li
352.199 109.262 mo
362.219 99.238 li
@
382.32 109.5 mo
372.301 99.48 li
372.301 109.5 mo
382.32 99.48 li
@
402.422 109.262 mo
392.398 99.238 li
392.398 109.262 mo
402.422 99.238 li
@
422.52 109.621 mo
412.5 99.602 li
412.5 109.621 mo
422.52 99.602 li
@
442.621 108.238 mo
432.602 98.219 li
432.602 108.238 mo
442.621 98.219 li
@
462.719 108.48 mo
452.699 98.461 li
452.699 108.48 mo
462.719 98.461 li
@
482.82 108.84 mo
472.801 98.82 li
472.801 108.84 mo
482.82 98.82 li
@
502.922 109.141 mo
492.898 99.121 li
492.898 109.141 mo
502.922 99.121 li
@
523.02 108.961 mo
513 98.941 li
513 108.961 mo
523.02 98.941 li
@
543.121 108.961 mo
533.102 98.941 li
533.102 108.961 mo
543.121 98.941 li
@
563.16 109.738 mo
553.141 99.719 li
553.141 109.738 mo
563.16 99.719 li
@
583.262 109.199 mo
573.238 99.18 li
573.238 109.199 mo
583.262 99.18 li
@
603.359 109.02 mo
593.34 99 li
593.34 109.02 mo
603.359 99 li
@
623.461 109.32 mo
613.441 99.301 li
613.441 109.32 mo
623.461 99.301 li
@
643.559 109.98 mo
633.539 99.961 li
633.539 109.98 mo
643.559 99.961 li
@
663.66 109.559 mo
653.641 99.539 li
653.641 109.559 mo
663.66 99.539 li
@
683.762 109.262 mo
673.738 99.238 li
673.738 109.262 mo
683.762 99.238 li
@
gsave
55.77 25.809 mo
679.411 25.809 li
679.411 499.329 li
55.77 499.329 li
cp
clp
1 lw
1 lc
55.801 429.07 mo
75.871 388.75 li
95.969 442.68 li
116.07 387.91 li
136.172 387.73 li
156.27 387.551 li
176.371 387.488 li
196.469 387.488 li
216.57 387.379 li
236.672 442.512 li
256.711 442.512 li
276.809 442.328 li
296.91 442.449 li
317.012 442.449 li
337.109 442.57 li
377.309 442.57 li
397.41 442.512 li
417.512 442.629 li
437.609 442.449 li
457.648 442.09 li
477.75 442.449 li
497.852 442.57 li
517.949 442.211 li
538.051 442.27 li
558.148 442.391 li
578.25 442.629 li
598.352 442.57 li
618.449 442.57 li
638.551 442.211 li
658.59 442.629 li
678.711 442.512 li
0 .993988 1 0 cmyk
@
grestore
60.84 434.102 mo
50.82 424.078 li
50.82 434.102 mo
60.84 424.078 li
0 .993988 1 0 cmyk
@
80.941 393.719 mo
70.922 383.699 li
70.922 393.719 mo
80.941 383.699 li
@
101.039 447.66 mo
91.02 437.641 li
91.02 447.66 mo
101.039 437.641 li
@
121.141 392.941 mo
111.121 382.922 li
111.121 392.941 mo
121.141 382.922 li
@
141.238 392.762 mo
131.219 382.738 li
131.219 392.762 mo
141.238 382.738 li
@
161.281 392.578 mo
151.262 382.559 li
151.262 392.578 mo
161.281 382.559 li
@
181.379 392.461 mo
171.359 382.441 li
171.359 392.461 mo
181.379 382.441 li
@
201.48 392.461 mo
191.461 382.441 li
191.461 392.461 mo
201.48 382.441 li
@
221.578 392.398 mo
211.559 382.379 li
211.559 392.398 mo
221.578 382.379 li
@
241.68 447.539 mo
231.66 437.52 li
231.66 447.539 mo
241.68 437.52 li
@
261.781 447.48 mo
251.762 437.461 li
251.762 447.48 mo
261.781 437.461 li
@
281.879 447.359 mo
271.859 437.34 li
271.859 447.359 mo
281.879 437.34 li
@
301.98 447.422 mo
291.961 437.398 li
291.961 447.422 mo
301.98 437.398 li
@
322.078 447.422 mo
312.059 437.398 li
312.059 447.422 mo
322.078 437.398 li
@
342.18 447.602 mo
332.16 437.578 li
332.16 447.602 mo
342.18 437.578 li
@
362.219 447.602 mo
352.199 437.578 li
352.199 447.602 mo
362.219 437.578 li
@
382.32 447.602 mo
372.301 437.578 li
372.301 447.602 mo
382.32 437.578 li
@
402.422 447.539 mo
392.398 437.52 li
392.398 447.539 mo
402.422 437.52 li
@
422.52 447.602 mo
412.5 437.578 li
412.5 447.602 mo
422.52 437.578 li
@
442.621 447.422 mo
432.602 437.398 li
432.602 447.422 mo
442.621 437.398 li
@
462.719 447.121 mo
452.699 437.102 li
452.699 447.121 mo
462.719 437.102 li
@
482.82 447.422 mo
472.801 437.398 li
472.801 447.422 mo
482.82 437.398 li
@
502.922 447.539 mo
492.898 437.52 li
492.898 447.539 mo
502.922 437.52 li
@
523.02 447.238 mo
513 437.219 li
513 447.238 mo
523.02 437.219 li
@
543.121 447.301 mo
533.102 437.281 li
533.102 447.301 mo
543.121 437.281 li
@
563.16 447.422 mo
553.141 437.398 li
553.141 447.422 mo
563.16 437.398 li
@
583.262 447.66 mo
573.238 437.641 li
573.238 447.66 mo
583.262 437.641 li
@
603.359 447.539 mo
593.34 437.52 li
593.34 447.539 mo
603.359 437.52 li
@
623.461 447.602 mo
613.441 437.578 li
613.441 447.602 mo
623.461 437.578 li
@
643.559 447.18 mo
633.539 437.16 li
633.539 447.18 mo
643.559 437.16 li
@
663.66 447.602 mo
653.641 437.578 li
653.641 447.602 mo
663.66 437.578 li
@
683.762 447.539 mo
673.738 437.52 li
673.738 447.539 mo
683.762 437.52 li
@
gsave
55.77 25.809 mo
679.411 25.809 li
679.411 499.329 li
55.77 499.329 li
cp
clp
1 lw
1 lc
[3 4 ] 0 dsh
55.801 475.031 mo
75.871 476.77 li
95.969 476.711 li
116.07 478.148 li
136.172 481.117 li
156.27 477.43 li
176.371 476.531 li
196.469 479.41 li
216.57 476.828 li
236.672 476.711 li
256.711 476.172 li
276.809 477.91 li
296.91 476.59 li
317.012 481.117 li
337.109 476.891 li
357.211 480.969 li
377.309 476.648 li
397.41 476.172 li
417.512 476.891 li
437.609 476.41 li
457.648 479.828 li
477.75 476.828 li
497.852 481.031 li
517.949 481.09 li
538.051 481.031 li
558.148 476.77 li
578.25 479.648 li
598.352 479.051 li
618.449 476.891 li
638.551 476.711 li
658.59 476.949 li
678.711 475.988 li
@
grestore
60.84 480.059 mo
50.82 470.039 li
50.82 480.059 mo
60.84 470.039 li
@
80.941 481.801 mo
70.922 471.781 li
70.922 481.801 mo
80.941 471.781 li
@
101.039 481.738 mo
91.02 471.719 li
91.02 481.738 mo
101.039 471.719 li
@
121.141 483.121 mo
111.121 473.102 li
111.121 483.121 mo
121.141 473.102 li
@
141.238 486.121 mo
131.219 476.102 li
131.219 486.121 mo
141.238 476.102 li
@
161.281 482.461 mo
151.262 472.441 li
151.262 482.461 mo
161.281 472.441 li
@
181.379 481.5 mo
171.359 471.48 li
171.359 481.5 mo
181.379 471.48 li
@
201.48 484.441 mo
191.461 474.422 li
191.461 484.441 mo
201.48 474.422 li
@
221.578 481.801 mo
211.559 471.781 li
211.559 481.801 mo
221.578 471.781 li
@
241.68 481.738 mo
231.66 471.719 li
231.66 481.738 mo
241.68 471.719 li
@
261.781 481.141 mo
251.762 471.121 li
251.762 481.141 mo
261.781 471.121 li
@
281.879 482.879 mo
271.859 472.859 li
271.859 482.879 mo
281.879 472.859 li
@
301.98 481.621 mo
291.961 471.602 li
291.961 481.621 mo
301.98 471.602 li
@
322.078 486.121 mo
312.059 476.102 li
312.059 486.121 mo
322.078 476.102 li
@
342.18 481.922 mo
332.16 471.898 li
332.16 481.922 mo
342.18 471.898 li
@
362.219 485.941 mo
352.199 475.922 li
352.199 485.941 mo
362.219 475.922 li
@
382.32 481.621 mo
372.301 471.602 li
372.301 481.621 mo
382.32 471.602 li
@
402.422 481.199 mo
392.398 471.18 li
392.398 481.199 mo
402.422 471.18 li
@
422.52 481.859 mo
412.5 471.84 li
412.5 481.859 mo
422.52 471.84 li
@
442.621 481.379 mo
432.602 471.359 li
432.602 481.379 mo
442.621 471.359 li
@
462.719 484.801 mo
452.699 474.781 li
452.699 484.801 mo
462.719 474.781 li
@
482.82 481.801 mo
472.801 471.781 li
472.801 481.801 mo
482.82 471.781 li
@
502.922 486.059 mo
492.898 476.039 li
492.898 486.059 mo
502.922 476.039 li
@
523.02 486.059 mo
513 476.039 li
513 486.059 mo
523.02 476.039 li
@
543.121 486 mo
533.102 475.98 li
533.102 486 mo
543.121 475.98 li
@
563.16 481.801 mo
553.141 471.781 li
553.141 481.801 mo
563.16 471.781 li
@
583.262 484.621 mo
573.238 474.602 li
573.238 484.621 mo
583.262 474.602 li
@
603.359 484.078 mo
593.34 474.059 li
593.34 484.078 mo
603.359 474.059 li
@
623.461 481.859 mo
613.441 471.84 li
613.441 481.859 mo
623.461 471.84 li
@
643.559 481.738 mo
633.539 471.719 li
633.539 481.738 mo
643.559 471.719 li
@
663.66 481.922 mo
653.641 471.898 li
653.641 481.922 mo
663.66 471.898 li
@
683.762 481.02 mo
673.738 471 li
673.738 481.02 mo
683.762 471 li
@
35.715 489.285 mo
42.809 489.285 li
42.809 506.375 li
35.715 506.375 li
cp
0 0 0 0 cmyk
ef
42.332 498.234 mo
42.328 498.918 42.273 499.535 42.172 500.094 cv
42.063 500.652 41.887 501.133 41.637 501.535 cv
41.387 501.941 41.063 502.254 40.664 502.473 cv
40.266 502.691 39.77 502.801 39.184 502.801 cv
38.625 502.801 38.16 502.703 37.781 502.504 cv
37.398 502.309 37.09 502.02 36.863 501.633 cv
36.629 501.25 36.465 500.773 36.367 500.211 cv
36.27 499.648 36.223 499.004 36.223 498.277 cv
36.223 497.605 36.277 496.988 36.387 496.422 cv
36.496 495.863 36.672 495.383 36.918 494.977 cv
37.16 494.578 37.484 494.266 37.887 494.043 cv
38.285 493.824 38.777 493.715 39.363 493.711 cv
39.922 493.715 40.391 493.812 40.77 494.008 cv
41.148 494.207 41.453 494.5 41.688 494.883 cv
41.918 495.27 42.082 495.742 42.184 496.301 cv
42.277 496.867 42.328 497.512 42.332 498.234 cv
cp
41.129 498.316 mo
41.125 497.879 41.109 497.48 41.082 497.129 cv
41.047 496.777 41 496.469 40.941 496.199 cv
40.879 495.934 40.801 495.703 40.703 495.508 cv
40.602 495.316 40.484 495.156 40.352 495.031 cv
40.215 494.906 40.059 494.816 39.883 494.758 cv
39.707 494.703 39.512 494.676 39.293 494.672 cv
38.906 494.676 38.59 494.766 38.352 494.945 cv
38.105 495.129 37.918 495.379 37.781 495.695 cv
37.641 496.016 37.543 496.391 37.496 496.816 cv
37.441 497.246 37.418 497.703 37.422 498.195 cv
37.418 498.855 37.453 499.418 37.523 499.879 cv
37.594 500.344 37.699 500.719 37.848 501.008 cv
37.992 501.297 38.184 501.508 38.414 501.641 cv
38.645 501.773 38.922 501.84 39.254 501.84 cv
39.504 501.84 39.73 501.801 39.926 501.719 cv
40.117 501.637 40.281 501.52 40.422 501.367 cv
40.559 501.215 40.676 501.031 40.77 500.816 cv
40.859 500.605 40.93 500.367 40.988 500.105 cv
41.039 499.848 41.078 499.566 41.098 499.262 cv
41.117 498.961 41.125 498.648 41.129 498.316 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
35.715 449.891 mo
42.809 449.891 li
42.809 466.981 li
35.715 466.981 li
cp
0 0 0 0 cmyk
ef
42.414 460.758 mo
42.41 460.91 42.387 461.027 42.344 461.113 cv
42.297 461.199 42.234 461.242 42.152 461.242 cv
41.156 461.242 li
41.156 463.098 li
41.156 463.137 41.145 463.168 41.129 463.191 cv
41.105 463.223 41.074 463.242 41.031 463.258 cv
40.98 463.273 40.918 463.285 40.848 463.293 cv
40.77 463.301 40.676 463.305 40.559 463.309 cv
40.445 463.305 40.352 463.301 40.277 463.293 cv
40.199 463.285 40.137 463.273 40.098 463.258 cv
40.051 463.242 40.023 463.223 40.008 463.191 cv
39.992 463.168 39.984 463.137 39.984 463.098 cv
39.984 461.242 li
36.371 461.242 li
36.313 461.242 36.27 461.238 36.234 461.223 cv
36.195 461.215 36.16 461.187 36.137 461.148 cv
36.105 461.113 36.086 461.062 36.074 460.992 cv
36.063 460.926 36.059 460.836 36.059 460.723 cv
36.059 460.641 36.059 460.562 36.063 460.492 cv
36.066 460.426 36.074 460.363 36.09 460.305 cv
36.102 460.25 36.121 460.195 36.145 460.141 cv
36.164 460.09 36.191 460.035 36.227 459.973 cv
39.375 454.605 li
39.398 454.57 39.43 454.539 39.477 454.512 cv
39.516 454.484 39.574 454.461 39.645 454.441 cv
39.715 454.426 39.801 454.414 39.902 454.406 cv
40.004 454.402 40.125 454.398 40.266 454.395 cv
40.418 454.398 40.551 454.406 40.664 454.414 cv
40.777 454.43 40.867 454.441 40.941 454.457 cv
41.008 454.477 41.063 454.504 41.102 454.531 cv
41.137 454.562 41.156 454.594 41.156 454.633 cv
41.156 460.273 li
42.152 460.273 li
42.23 460.277 42.293 460.316 42.34 460.395 cv
42.387 460.477 42.41 460.598 42.414 460.758 cv
cp
39.984 455.426 mo
39.969 455.426 li
37.129 460.273 li
39.984 460.273 li
cp
.629236 .549432 .540154 .282963 cmyk
f
35.715 410.488 mo
42.809 410.488 li
42.809 427.578 li
35.715 427.578 li
cp
0 0 0 0 cmyk
ef
42.242 421.605 mo
42.238 421.992 42.172 422.332 42.035 422.629 cv
41.898 422.926 41.699 423.18 41.445 423.383 cv
41.188 423.59 40.871 423.742 40.496 423.844 cv
40.113 423.949 39.684 424 39.199 424 cv
38.742 424 38.332 423.953 37.977 423.859 cv
37.613 423.766 37.309 423.625 37.063 423.437 cv
36.809 423.25 36.617 423.02 36.488 422.746 cv
36.352 422.473 36.285 422.16 36.289 421.809 cv
36.285 421.535 36.332 421.281 36.426 421.047 cv
36.516 420.812 36.645 420.598 36.816 420.402 cv
36.984 420.207 37.195 420.027 37.449 419.855 cv
37.695 419.687 37.98 419.523 38.297 419.367 cv
38.023 419.227 37.781 419.078 37.57 418.918 cv
37.359 418.766 37.18 418.594 37.039 418.406 cv
36.891 418.223 36.781 418.027 36.711 417.816 cv
36.633 417.613 36.598 417.383 36.598 417.133 cv
36.598 416.824 36.652 416.535 36.766 416.262 cv
36.875 415.992 37.043 415.758 37.27 415.559 cv
37.492 415.359 37.777 415.203 38.129 415.086 cv
38.473 414.973 38.879 414.914 39.348 414.91 cv
39.789 414.914 40.176 414.965 40.504 415.07 cv
40.828 415.18 41.098 415.328 41.309 415.508 cv
41.52 415.695 41.676 415.91 41.777 416.156 cv
41.879 416.41 41.93 416.68 41.93 416.965 cv
41.93 417.199 41.891 417.422 41.816 417.633 cv
41.738 417.848 41.629 418.051 41.484 418.242 cv
41.336 418.434 41.156 418.613 40.949 418.777 cv
40.734 418.945 40.492 419.098 40.223 419.242 cv
40.543 419.402 40.832 419.566 41.086 419.734 cv
41.336 419.906 41.547 420.09 41.719 420.277 cv
41.891 420.473 42.02 420.676 42.109 420.891 cv
42.195 421.109 42.238 421.348 42.242 421.605 cv
cp
40.77 417.07 mo
40.77 416.883 40.734 416.711 40.668 416.555 cv
40.602 416.402 40.504 416.27 40.379 416.156 cv
40.246 416.051 40.09 415.969 39.902 415.91 cv
39.715 415.855 39.5 415.828 39.258 415.824 cv
38.766 415.828 38.395 415.937 38.145 416.16 cv
37.891 416.383 37.762 416.687 37.766 417.07 cv
37.762 417.254 37.793 417.422 37.855 417.57 cv
37.914 417.727 38.012 417.871 38.145 418.004 cv
38.273 418.145 38.438 418.277 38.637 418.402 cv
38.832 418.535 39.066 418.668 39.34 418.805 cv
39.801 418.57 40.152 418.309 40.398 418.02 cv
40.645 417.734 40.77 417.418 40.77 417.07 cv
cp
41.055 421.727 mo
41.051 421.52 41.012 421.332 40.938 421.16 cv
40.859 420.992 40.742 420.832 40.586 420.68 cv
40.426 420.535 40.23 420.391 40 420.25 cv
39.762 420.113 39.488 419.969 39.184 419.816 cv
38.895 419.957 38.645 420.102 38.43 420.242 cv
38.211 420.387 38.035 420.531 37.898 420.68 cv
37.758 420.832 37.652 420.988 37.582 421.152 cv
37.512 421.316 37.477 421.5 37.477 421.699 cv
37.477 422.145 37.625 422.488 37.93 422.727 cv
38.23 422.969 38.684 423.086 39.285 423.086 cv
39.867 423.086 40.309 422.965 40.605 422.723 cv
40.902 422.48 41.051 422.148 41.055 421.727 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
28.617 371.102 mo
42.808 371.102 li
42.808 388.192 li
28.617 388.192 li
cp
0 0 0 0 cmyk
ef
34.957 384.004 mo
34.957 384.094 34.949 384.164 34.934 384.223 cv
34.918 384.285 34.898 384.336 34.879 384.367 cv
34.855 384.406 34.828 384.43 34.801 384.445 cv
34.77 384.461 34.742 384.469 34.711 384.469 cv
30.098 384.469 li
30.063 384.469 30.031 384.461 30.008 384.445 cv
29.977 384.43 29.953 384.406 29.93 384.367 cv
29.902 384.336 29.883 384.285 29.871 384.223 cv
29.855 384.164 29.848 384.094 29.852 384.004 cv
29.848 383.926 29.855 383.855 29.871 383.793 cv
29.883 383.738 29.898 383.687 29.922 383.648 cv
29.941 383.609 29.965 383.582 29.996 383.559 cv
30.023 383.543 30.059 383.531 30.098 383.527 cv
31.941 383.527 li
31.941 376.809 li
30.234 377.828 li
30.145 377.875 30.074 377.902 30.023 377.91 cv
29.969 377.922 29.926 377.91 29.898 377.879 cv
29.863 377.852 29.84 377.801 29.832 377.73 cv
29.816 377.664 29.813 377.578 29.816 377.473 cv
29.813 377.395 29.816 377.328 29.824 377.273 cv
29.832 377.219 29.84 377.176 29.855 377.137 cv
29.867 377.105 29.887 377.074 29.914 377.043 cv
29.938 377.02 29.973 376.992 30.016 376.961 cv
32.047 375.656 li
32.063 375.645 32.086 375.637 32.113 375.625 cv
32.141 375.617 32.176 375.605 32.219 375.598 cv
32.258 375.59 32.305 375.586 32.363 375.578 cv
32.414 375.578 32.484 375.574 32.566 375.574 cv
32.676 375.574 32.766 375.582 32.84 375.59 cv
32.91 375.602 32.969 375.613 33.012 375.625 cv
33.051 375.645 33.078 375.664 33.094 375.687 cv
33.105 375.715 33.109 375.742 33.113 375.766 cv
33.113 383.527 li
34.711 383.527 li
34.746 383.531 34.777 383.543 34.813 383.559 cv
34.84 383.582 34.867 383.609 34.891 383.648 cv
34.91 383.687 34.926 383.738 34.938 383.793 cv
34.949 383.855 34.957 383.926 34.957 384.004 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
42.02 383.965 mo
42.016 384.047 42.008 384.121 42 384.184 cv
41.984 384.25 41.969 384.305 41.953 384.344 cv
41.93 384.391 41.902 384.422 41.871 384.437 cv
41.832 384.461 41.797 384.469 41.758 384.469 cv
36.879 384.469 li
36.809 384.469 36.754 384.461 36.711 384.445 cv
36.66 384.43 36.617 384.406 36.586 384.367 cv
36.547 384.336 36.523 384.281 36.512 384.211 cv
36.492 384.141 36.484 384.059 36.488 383.957 cv
36.484 383.871 36.488 383.789 36.5 383.719 cv
36.504 383.652 36.52 383.594 36.547 383.539 cv
36.566 383.488 36.594 383.434 36.633 383.379 cv
36.664 383.328 36.711 383.273 36.77 383.211 cv
38.535 381.398 li
38.941 380.98 39.266 380.605 39.516 380.273 cv
39.758 379.941 39.949 379.641 40.086 379.363 cv
40.219 379.094 40.309 378.844 40.352 378.621 cv
40.391 378.398 40.41 378.191 40.414 377.992 cv
40.41 377.797 40.379 377.609 40.316 377.434 cv
40.25 377.262 40.152 377.109 40.031 376.977 cv
39.902 376.848 39.746 376.742 39.563 376.66 cv
39.371 376.586 39.156 376.547 38.914 376.543 cv
38.625 376.547 38.367 376.586 38.141 376.66 cv
37.91 376.742 37.711 376.828 37.543 376.914 cv
37.367 377.008 37.223 377.09 37.113 377.164 cv
36.996 377.246 36.91 377.285 36.855 377.281 cv
36.82 377.285 36.793 377.277 36.77 377.254 cv
36.742 377.238 36.719 377.207 36.703 377.164 cv
36.684 377.125 36.672 377.07 36.664 377 cv
36.652 376.934 36.648 376.852 36.652 376.754 cv
36.648 376.687 36.652 376.629 36.66 376.578 cv
36.664 376.531 36.672 376.488 36.684 376.449 cv
36.691 376.414 36.703 376.379 36.727 376.348 cv
36.742 376.316 36.781 376.277 36.836 376.227 cv
36.891 376.184 36.984 376.121 37.117 376.035 cv
37.25 375.957 37.418 375.875 37.625 375.789 cv
37.824 375.711 38.047 375.645 38.293 375.59 cv
38.535 375.539 38.793 375.512 39.063 375.508 cv
39.488 375.512 39.859 375.57 40.184 375.687 cv
40.504 375.809 40.773 375.973 40.984 376.184 cv
41.195 376.395 41.352 376.641 41.457 376.914 cv
41.563 377.195 41.617 377.488 41.617 377.801 cv
41.617 378.082 41.59 378.363 41.539 378.645 cv
41.488 378.926 41.383 379.23 41.223 379.551 cv
41.059 379.879 40.824 380.238 40.523 380.637 cv
40.215 381.035 39.813 381.496 39.309 382.012 cv
37.91 383.473 li
41.754 383.473 li
41.785 383.473 41.82 383.484 41.859 383.504 cv
41.891 383.527 41.922 383.559 41.945 383.598 cv
41.969 383.641 41.984 383.691 42 383.75 cv
42.008 383.812 42.016 383.883 42.02 383.965 cv
cp
f
28.617 331.699 mo
42.808 331.699 li
42.808 348.789 li
28.617 348.789 li
cp
0 0 0 0 cmyk
ef
34.957 344.605 mo
34.957 344.695 34.949 344.766 34.934 344.824 cv
34.918 344.887 34.898 344.937 34.879 344.969 cv
34.855 345.008 34.828 345.031 34.801 345.047 cv
34.77 345.062 34.742 345.07 34.711 345.07 cv
30.098 345.07 li
30.063 345.07 30.031 345.062 30.008 345.047 cv
29.977 345.031 29.953 345.008 29.93 344.969 cv
29.902 344.937 29.883 344.887 29.871 344.824 cv
29.855 344.766 29.848 344.695 29.852 344.605 cv
29.848 344.527 29.855 344.457 29.871 344.395 cv
29.883 344.34 29.898 344.289 29.922 344.25 cv
29.941 344.211 29.965 344.184 29.996 344.16 cv
30.023 344.145 30.059 344.133 30.098 344.129 cv
31.941 344.129 li
31.941 337.41 li
30.234 338.43 li
30.145 338.477 30.074 338.504 30.023 338.512 cv
29.969 338.523 29.926 338.512 29.898 338.48 cv
29.863 338.453 29.84 338.402 29.832 338.332 cv
29.816 338.266 29.813 338.18 29.816 338.074 cv
29.813 337.996 29.816 337.93 29.824 337.875 cv
29.832 337.82 29.84 337.777 29.855 337.738 cv
29.867 337.707 29.887 337.676 29.914 337.645 cv
29.938 337.621 29.973 337.594 30.016 337.562 cv
32.047 336.258 li
32.063 336.246 32.086 336.238 32.113 336.227 cv
32.141 336.219 32.176 336.207 32.219 336.199 cv
32.258 336.191 32.305 336.187 32.363 336.18 cv
32.414 336.18 32.484 336.176 32.566 336.176 cv
32.676 336.176 32.766 336.184 32.84 336.191 cv
32.91 336.203 32.969 336.215 33.012 336.227 cv
33.051 336.246 33.078 336.266 33.094 336.289 cv
33.105 336.316 33.109 336.344 33.113 336.367 cv
33.113 344.129 li
34.711 344.129 li
34.746 344.133 34.777 344.145 34.813 344.16 cv
34.84 344.184 34.867 344.211 34.891 344.25 cv
34.91 344.289 34.926 344.34 34.938 344.395 cv
34.949 344.457 34.957 344.527 34.957 344.605 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
42.242 342.211 mo
42.238 342.598 42.18 342.973 42.063 343.332 cv
41.945 343.695 41.762 344.016 41.52 344.289 cv
41.27 344.57 40.961 344.789 40.586 344.953 cv
40.207 345.117 39.758 345.199 39.246 345.199 cv
38.875 345.199 38.551 345.156 38.27 345.062 cv
37.984 344.977 37.738 344.848 37.531 344.676 cv
37.32 344.512 37.148 344.305 37.012 344.055 cv
36.871 343.812 36.758 343.531 36.676 343.215 cv
36.59 342.902 36.531 342.559 36.496 342.184 cv
36.457 341.812 36.438 341.41 36.441 340.98 cv
36.438 340.605 36.457 340.227 36.5 339.836 cv
36.539 339.453 36.613 339.078 36.719 338.715 cv
36.824 338.359 36.965 338.023 37.148 337.703 cv
37.324 337.391 37.551 337.113 37.824 336.875 cv
38.094 336.645 38.418 336.461 38.797 336.32 cv
39.172 336.187 39.609 336.117 40.113 336.113 cv
40.277 336.117 40.449 336.129 40.625 336.145 cv
40.797 336.168 40.957 336.195 41.102 336.227 cv
41.246 336.266 41.367 336.301 41.469 336.34 cv
41.566 336.383 41.633 336.418 41.668 336.441 cv
41.699 336.469 41.723 336.496 41.742 336.523 cv
41.754 336.555 41.766 336.586 41.777 336.617 cv
41.785 336.652 41.793 336.691 41.801 336.734 cv
41.801 336.777 41.805 336.828 41.809 336.891 cv
41.805 336.977 41.805 337.051 41.805 337.105 cv
41.801 337.168 41.789 337.215 41.777 337.246 cv
41.758 337.285 41.738 337.312 41.715 337.328 cv
41.688 337.352 41.656 337.359 41.617 337.355 cv
41.563 337.359 41.492 337.344 41.41 337.309 cv
41.32 337.281 41.215 337.246 41.098 337.203 cv
40.973 337.168 40.824 337.133 40.648 337.098 cv
40.473 337.07 40.27 337.055 40.039 337.051 cv
39.613 337.055 39.25 337.141 38.945 337.309 cv
38.641 337.484 38.391 337.715 38.199 338.004 cv
38.004 338.297 37.859 338.637 37.77 339.02 cv
37.672 339.406 37.621 339.809 37.609 340.223 cv
37.727 340.16 37.859 340.09 38.008 340.02 cv
38.156 339.953 38.316 339.895 38.492 339.836 cv
38.664 339.785 38.848 339.738 39.047 339.703 cv
39.242 339.668 39.453 339.652 39.676 339.648 cv
40.152 339.652 40.555 339.715 40.883 339.844 cv
41.207 339.977 41.473 340.16 41.68 340.387 cv
41.879 340.621 42.023 340.891 42.113 341.199 cv
42.195 341.512 42.238 341.848 42.242 342.211 cv
cp
41.055 342.32 mo
41.055 342.059 41.027 341.816 40.977 341.598 cv
40.922 341.383 40.836 341.199 40.715 341.051 cv
40.59 340.902 40.426 340.789 40.223 340.703 cv
40.016 340.625 39.762 340.582 39.465 340.578 cv
39.293 340.582 39.125 340.598 38.957 340.625 cv
38.789 340.656 38.625 340.695 38.473 340.746 cv
38.313 340.801 38.164 340.863 38.02 340.93 cv
37.875 341.004 37.742 341.082 37.629 341.16 cv
37.625 341.75 37.664 342.238 37.742 342.633 cv
37.816 343.031 37.926 343.352 38.07 343.586 cv
38.211 343.828 38.391 343.996 38.605 344.098 cv
38.816 344.199 39.066 344.25 39.355 344.25 cv
39.645 344.25 39.895 344.195 40.113 344.086 cv
40.324 343.977 40.504 343.832 40.645 343.648 cv
40.785 343.465 40.887 343.258 40.957 343.027 cv
41.02 342.797 41.055 342.562 41.055 342.32 cv
cp
f
28.617 292.301 mo
42.808 292.301 li
42.808 309.391 li
28.617 309.391 li
cp
0 0 0 0 cmyk
ef
34.938 305.168 mo
34.934 305.25 34.926 305.324 34.918 305.387 cv
34.902 305.453 34.887 305.508 34.871 305.547 cv
34.848 305.594 34.82 305.625 34.789 305.641 cv
34.75 305.664 34.715 305.672 34.676 305.672 cv
29.797 305.672 li
29.727 305.672 29.672 305.664 29.629 305.648 cv
29.578 305.633 29.535 305.609 29.504 305.57 cv
29.465 305.539 29.441 305.484 29.43 305.414 cv
29.41 305.344 29.402 305.262 29.406 305.16 cv
29.402 305.074 29.406 304.992 29.418 304.922 cv
29.422 304.855 29.438 304.797 29.465 304.742 cv
29.484 304.691 29.512 304.637 29.551 304.582 cv
29.582 304.531 29.629 304.477 29.688 304.414 cv
31.453 302.602 li
31.859 302.184 32.184 301.809 32.434 301.477 cv
32.676 301.145 32.867 300.844 33.004 300.566 cv
33.137 300.297 33.227 300.047 33.27 299.824 cv
33.309 299.602 33.328 299.395 33.332 299.195 cv
33.328 299 33.297 298.812 33.234 298.637 cv
33.168 298.465 33.07 298.312 32.949 298.18 cv
32.82 298.051 32.664 297.945 32.48 297.863 cv
32.289 297.789 32.074 297.75 31.832 297.746 cv
31.543 297.75 31.285 297.789 31.059 297.863 cv
30.828 297.945 30.629 298.031 30.461 298.117 cv
30.285 298.211 30.141 298.293 30.031 298.367 cv
29.914 298.449 29.828 298.488 29.773 298.484 cv
29.738 298.488 29.711 298.48 29.688 298.457 cv
29.66 298.441 29.637 298.41 29.621 298.367 cv
29.602 298.328 29.59 298.273 29.582 298.203 cv
29.57 298.137 29.566 298.055 29.57 297.957 cv
29.566 297.891 29.57 297.832 29.578 297.781 cv
29.582 297.734 29.59 297.691 29.602 297.652 cv
29.609 297.617 29.621 297.582 29.645 297.551 cv
29.66 297.52 29.699 297.48 29.754 297.43 cv
29.809 297.387 29.902 297.324 30.035 297.238 cv
30.168 297.16 30.336 297.078 30.543 296.992 cv
30.742 296.914 30.965 296.848 31.211 296.793 cv
31.453 296.742 31.711 296.715 31.98 296.711 cv
32.406 296.715 32.777 296.773 33.102 296.891 cv
33.422 297.012 33.691 297.176 33.902 297.387 cv
34.113 297.598 34.27 297.844 34.375 298.117 cv
34.48 298.398 34.535 298.691 34.535 299.004 cv
34.535 299.285 34.508 299.566 34.457 299.848 cv
34.406 300.129 34.301 300.434 34.141 300.754 cv
33.977 301.082 33.742 301.441 33.441 301.84 cv
33.133 302.238 32.73 302.699 32.227 303.215 cv
30.828 304.676 li
34.672 304.676 li
34.703 304.676 34.738 304.687 34.777 304.707 cv
34.809 304.73 34.84 304.762 34.863 304.801 cv
34.887 304.844 34.902 304.895 34.918 304.953 cv
34.926 305.016 34.934 305.086 34.938 305.168 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
42.313 301.234 mo
42.309 301.918 42.254 302.535 42.152 303.094 cv
42.043 303.652 41.867 304.133 41.617 304.535 cv
41.367 304.941 41.043 305.254 40.645 305.473 cv
40.246 305.691 39.75 305.801 39.164 305.801 cv
38.605 305.801 38.141 305.703 37.762 305.504 cv
37.379 305.309 37.07 305.02 36.844 304.633 cv
36.609 304.25 36.445 303.773 36.348 303.211 cv
36.25 302.648 36.203 302.004 36.203 301.277 cv
36.203 300.605 36.258 299.988 36.367 299.422 cv
36.477 298.863 36.652 298.383 36.898 297.977 cv
37.141 297.578 37.465 297.266 37.867 297.043 cv
38.266 296.824 38.758 296.715 39.344 296.711 cv
39.902 296.715 40.371 296.812 40.75 297.008 cv
41.129 297.207 41.434 297.5 41.668 297.883 cv
41.898 298.27 42.063 298.742 42.164 299.301 cv
42.258 299.867 42.309 300.512 42.313 301.234 cv
cp
41.109 301.316 mo
41.105 300.879 41.09 300.48 41.063 300.129 cv
41.027 299.777 40.98 299.469 40.922 299.199 cv
40.859 298.934 40.781 298.703 40.684 298.508 cv
40.582 298.316 40.465 298.156 40.332 298.031 cv
40.195 297.906 40.039 297.816 39.863 297.758 cv
39.688 297.703 39.492 297.676 39.273 297.672 cv
38.887 297.676 38.57 297.766 38.332 297.945 cv
38.086 298.129 37.898 298.379 37.762 298.695 cv
37.621 299.016 37.523 299.391 37.477 299.816 cv
37.422 300.246 37.398 300.703 37.402 301.195 cv
37.398 301.855 37.434 302.418 37.504 302.879 cv
37.574 303.344 37.68 303.719 37.828 304.008 cv
37.973 304.297 38.164 304.508 38.395 304.641 cv
38.625 304.773 38.902 304.84 39.234 304.84 cv
39.484 304.84 39.711 304.801 39.906 304.719 cv
40.098 304.637 40.262 304.52 40.402 304.367 cv
40.539 304.215 40.656 304.031 40.75 303.816 cv
40.84 303.605 40.91 303.367 40.969 303.105 cv
41.02 302.848 41.059 302.566 41.078 302.262 cv
41.098 301.961 41.105 301.648 41.109 301.316 cv
cp
f
28.617 252.91 mo
42.808 252.91 li
42.808 270 li
28.617 270 li
cp
0 0 0 0 cmyk
ef
34.938 265.766 mo
34.934 265.848 34.926 265.922 34.918 265.984 cv
34.902 266.051 34.887 266.105 34.871 266.145 cv
34.848 266.191 34.82 266.223 34.789 266.238 cv
34.75 266.262 34.715 266.27 34.676 266.27 cv
29.797 266.27 li
29.727 266.27 29.672 266.262 29.629 266.246 cv
29.578 266.23 29.535 266.207 29.504 266.168 cv
29.465 266.137 29.441 266.082 29.43 266.012 cv
29.41 265.941 29.402 265.859 29.406 265.758 cv
29.402 265.672 29.406 265.59 29.418 265.52 cv
29.422 265.453 29.438 265.395 29.465 265.34 cv
29.484 265.289 29.512 265.234 29.551 265.18 cv
29.582 265.129 29.629 265.074 29.688 265.012 cv
31.453 263.199 li
31.859 262.781 32.184 262.406 32.434 262.074 cv
32.676 261.742 32.867 261.441 33.004 261.164 cv
33.137 260.895 33.227 260.645 33.27 260.422 cv
33.309 260.199 33.328 259.992 33.332 259.793 cv
33.328 259.598 33.297 259.41 33.234 259.234 cv
33.168 259.062 33.07 258.91 32.949 258.777 cv
32.82 258.648 32.664 258.543 32.48 258.461 cv
32.289 258.387 32.074 258.348 31.832 258.344 cv
31.543 258.348 31.285 258.387 31.059 258.461 cv
30.828 258.543 30.629 258.629 30.461 258.715 cv
30.285 258.809 30.141 258.891 30.031 258.965 cv
29.914 259.047 29.828 259.086 29.773 259.082 cv
29.738 259.086 29.711 259.078 29.688 259.055 cv
29.66 259.039 29.637 259.008 29.621 258.965 cv
29.602 258.926 29.59 258.871 29.582 258.801 cv
29.57 258.734 29.566 258.652 29.57 258.555 cv
29.566 258.488 29.57 258.43 29.578 258.379 cv
29.582 258.332 29.59 258.289 29.602 258.25 cv
29.609 258.215 29.621 258.18 29.645 258.148 cv
29.66 258.117 29.699 258.078 29.754 258.027 cv
29.809 257.984 29.902 257.922 30.035 257.836 cv
30.168 257.758 30.336 257.676 30.543 257.59 cv
30.742 257.512 30.965 257.445 31.211 257.391 cv
31.453 257.34 31.711 257.312 31.98 257.309 cv
32.406 257.312 32.777 257.371 33.102 257.488 cv
33.422 257.609 33.691 257.773 33.902 257.984 cv
34.113 258.195 34.27 258.441 34.375 258.715 cv
34.48 258.996 34.535 259.289 34.535 259.602 cv
34.535 259.883 34.508 260.164 34.457 260.445 cv
34.406 260.727 34.301 261.031 34.141 261.352 cv
33.977 261.68 33.742 262.039 33.441 262.437 cv
33.133 262.836 32.73 263.297 32.227 263.812 cv
30.828 265.273 li
34.672 265.273 li
34.703 265.273 34.738 265.285 34.777 265.305 cv
34.809 265.328 34.84 265.359 34.863 265.398 cv
34.887 265.441 34.902 265.492 34.918 265.551 cv
34.926 265.613 34.934 265.684 34.938 265.766 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
42.395 263.758 mo
42.391 263.91 42.367 264.027 42.324 264.113 cv
42.277 264.199 42.215 264.242 42.133 264.242 cv
41.137 264.242 li
41.137 266.098 li
41.137 266.137 41.125 266.168 41.109 266.191 cv
41.086 266.223 41.055 266.242 41.012 266.258 cv
40.961 266.273 40.898 266.285 40.828 266.293 cv
40.75 266.301 40.656 266.305 40.539 266.309 cv
40.426 266.305 40.332 266.301 40.258 266.293 cv
40.18 266.285 40.117 266.273 40.078 266.258 cv
40.031 266.242 40.004 266.223 39.988 266.191 cv
39.973 266.168 39.965 266.137 39.965 266.098 cv
39.965 264.242 li
36.352 264.242 li
36.293 264.242 36.25 264.238 36.215 264.223 cv
36.176 264.215 36.141 264.187 36.117 264.148 cv
36.086 264.113 36.066 264.062 36.055 263.992 cv
36.043 263.926 36.039 263.836 36.039 263.723 cv
36.039 263.641 36.039 263.562 36.043 263.492 cv
36.047 263.426 36.055 263.363 36.07 263.305 cv
36.082 263.25 36.102 263.195 36.125 263.141 cv
36.145 263.09 36.172 263.035 36.207 262.973 cv
39.355 257.605 li
39.379 257.57 39.41 257.539 39.457 257.512 cv
39.496 257.484 39.555 257.461 39.625 257.441 cv
39.695 257.426 39.781 257.414 39.883 257.406 cv
39.984 257.402 40.105 257.398 40.246 257.395 cv
40.398 257.398 40.531 257.406 40.645 257.414 cv
40.758 257.43 40.848 257.441 40.922 257.457 cv
40.988 257.477 41.043 257.504 41.082 257.531 cv
41.117 257.562 41.137 257.594 41.137 257.633 cv
41.137 263.273 li
42.133 263.273 li
42.211 263.277 42.273 263.316 42.32 263.395 cv
42.367 263.477 42.391 263.598 42.395 263.758 cv
cp
39.965 258.426 mo
39.949 258.426 li
37.109 263.273 li
39.965 263.273 li
cp
f
28.617 213.512 mo
42.808 213.512 li
42.808 230.602 li
28.617 230.602 li
cp
0 0 0 0 cmyk
ef
34.938 226.367 mo
34.934 226.449 34.926 226.523 34.918 226.586 cv
34.902 226.652 34.887 226.707 34.871 226.746 cv
34.848 226.793 34.82 226.824 34.789 226.84 cv
34.75 226.863 34.715 226.871 34.676 226.871 cv
29.797 226.871 li
29.727 226.871 29.672 226.863 29.629 226.848 cv
29.578 226.832 29.535 226.809 29.504 226.77 cv
29.465 226.738 29.441 226.684 29.43 226.613 cv
29.41 226.543 29.402 226.461 29.406 226.359 cv
29.402 226.273 29.406 226.191 29.418 226.121 cv
29.422 226.055 29.438 225.996 29.465 225.941 cv
29.484 225.891 29.512 225.836 29.551 225.781 cv
29.582 225.73 29.629 225.676 29.688 225.613 cv
31.453 223.801 li
31.859 223.383 32.184 223.008 32.434 222.676 cv
32.676 222.344 32.867 222.043 33.004 221.766 cv
33.137 221.496 33.227 221.246 33.27 221.023 cv
33.309 220.801 33.328 220.594 33.332 220.395 cv
33.328 220.199 33.297 220.012 33.234 219.836 cv
33.168 219.664 33.07 219.512 32.949 219.379 cv
32.82 219.25 32.664 219.145 32.48 219.062 cv
32.289 218.988 32.074 218.949 31.832 218.945 cv
31.543 218.949 31.285 218.988 31.059 219.062 cv
30.828 219.145 30.629 219.23 30.461 219.316 cv
30.285 219.41 30.141 219.492 30.031 219.566 cv
29.914 219.648 29.828 219.687 29.773 219.684 cv
29.738 219.687 29.711 219.68 29.688 219.656 cv
29.66 219.641 29.637 219.609 29.621 219.566 cv
29.602 219.527 29.59 219.473 29.582 219.402 cv
29.57 219.336 29.566 219.254 29.57 219.156 cv
29.566 219.09 29.57 219.031 29.578 218.98 cv
29.582 218.934 29.59 218.891 29.602 218.852 cv
29.609 218.816 29.621 218.781 29.645 218.75 cv
29.66 218.719 29.699 218.68 29.754 218.629 cv
29.809 218.586 29.902 218.523 30.035 218.437 cv
30.168 218.359 30.336 218.277 30.543 218.191 cv
30.742 218.113 30.965 218.047 31.211 217.992 cv
31.453 217.941 31.711 217.914 31.98 217.91 cv
32.406 217.914 32.777 217.973 33.102 218.09 cv
33.422 218.211 33.691 218.375 33.902 218.586 cv
34.113 218.797 34.27 219.043 34.375 219.316 cv
34.48 219.598 34.535 219.891 34.535 220.203 cv
34.535 220.484 34.508 220.766 34.457 221.047 cv
34.406 221.328 34.301 221.633 34.141 221.953 cv
33.977 222.281 33.742 222.641 33.441 223.039 cv
33.133 223.437 32.73 223.898 32.227 224.414 cv
30.828 225.875 li
34.672 225.875 li
34.703 225.875 34.738 225.887 34.777 225.906 cv
34.809 225.93 34.84 225.961 34.863 226 cv
34.887 226.043 34.902 226.094 34.918 226.152 cv
34.926 226.215 34.934 226.285 34.938 226.367 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
42.223 224.605 mo
42.219 224.992 42.152 225.332 42.016 225.629 cv
41.879 225.926 41.68 226.18 41.426 226.383 cv
41.168 226.59 40.852 226.742 40.477 226.844 cv
40.094 226.949 39.664 227 39.18 227 cv
38.723 227 38.313 226.953 37.957 226.859 cv
37.594 226.766 37.289 226.625 37.043 226.437 cv
36.789 226.25 36.598 226.02 36.469 225.746 cv
36.332 225.473 36.266 225.16 36.27 224.809 cv
36.266 224.535 36.313 224.281 36.406 224.047 cv
36.496 223.812 36.625 223.598 36.797 223.402 cv
36.965 223.207 37.176 223.027 37.43 222.855 cv
37.676 222.687 37.961 222.523 38.277 222.367 cv
38.004 222.227 37.762 222.078 37.551 221.918 cv
37.34 221.766 37.16 221.594 37.02 221.406 cv
36.871 221.223 36.762 221.027 36.691 220.816 cv
36.613 220.613 36.578 220.383 36.578 220.133 cv
36.578 219.824 36.633 219.535 36.746 219.262 cv
36.855 218.992 37.023 218.758 37.25 218.559 cv
37.473 218.359 37.758 218.203 38.109 218.086 cv
38.453 217.973 38.859 217.914 39.328 217.91 cv
39.77 217.914 40.156 217.965 40.484 218.07 cv
40.809 218.18 41.078 218.328 41.289 218.508 cv
41.5 218.695 41.656 218.91 41.758 219.156 cv
41.859 219.41 41.91 219.68 41.91 219.965 cv
41.91 220.199 41.871 220.422 41.797 220.633 cv
41.719 220.848 41.609 221.051 41.465 221.242 cv
41.316 221.434 41.137 221.613 40.93 221.777 cv
40.715 221.945 40.473 222.098 40.203 222.242 cv
40.523 222.402 40.813 222.566 41.066 222.734 cv
41.316 222.906 41.527 223.09 41.699 223.277 cv
41.871 223.473 42 223.676 42.09 223.891 cv
42.176 224.109 42.219 224.348 42.223 224.605 cv
cp
40.75 220.07 mo
40.75 219.883 40.715 219.711 40.648 219.555 cv
40.582 219.402 40.484 219.27 40.359 219.156 cv
40.227 219.051 40.07 218.969 39.883 218.91 cv
39.695 218.855 39.48 218.828 39.238 218.824 cv
38.746 218.828 38.375 218.937 38.125 219.16 cv
37.871 219.383 37.742 219.687 37.746 220.07 cv
37.742 220.254 37.773 220.422 37.836 220.57 cv
37.895 220.727 37.992 220.871 38.125 221.004 cv
38.254 221.145 38.418 221.277 38.617 221.402 cv
38.813 221.535 39.047 221.668 39.32 221.805 cv
39.781 221.57 40.133 221.309 40.379 221.02 cv
40.625 220.734 40.75 220.418 40.75 220.07 cv
cp
41.035 224.727 mo
41.031 224.52 40.992 224.332 40.918 224.16 cv
40.84 223.992 40.723 223.832 40.566 223.68 cv
40.406 223.535 40.211 223.391 39.98 223.25 cv
39.742 223.113 39.469 222.969 39.164 222.816 cv
38.875 222.957 38.625 223.102 38.41 223.242 cv
38.191 223.387 38.016 223.531 37.879 223.68 cv
37.738 223.832 37.633 223.988 37.563 224.152 cv
37.492 224.316 37.457 224.5 37.457 224.699 cv
37.457 225.145 37.605 225.488 37.91 225.727 cv
38.211 225.969 38.664 226.086 39.266 226.086 cv
39.848 226.086 40.289 225.965 40.586 225.723 cv
40.883 225.48 41.031 225.148 41.035 224.727 cv
cp
f
28.617 174.121 mo
42.808 174.121 li
42.808 191.211 li
28.617 191.211 li
cp
0 0 0 0 cmyk
ef
34.867 184.941 mo
34.863 185.352 34.793 185.715 34.656 186.039 cv
34.512 186.367 34.309 186.648 34.047 186.875 cv
33.781 187.109 33.457 187.285 33.07 187.41 cv
32.684 187.535 32.246 187.598 31.762 187.598 cv
31.465 187.598 31.188 187.574 30.934 187.527 cv
30.672 187.48 30.445 187.426 30.246 187.359 cv
30.043 187.293 29.875 187.223 29.746 187.152 cv
29.613 187.082 29.531 187.031 29.5 187 cv
29.465 186.969 29.438 186.937 29.422 186.902 cv
29.398 186.875 29.383 186.836 29.371 186.789 cv
29.355 186.742 29.344 186.687 29.34 186.621 cv
29.332 186.555 29.332 186.473 29.332 186.375 cv
29.332 186.215 29.348 186.102 29.379 186.035 cv
29.41 185.977 29.457 185.945 29.52 185.941 cv
29.563 185.945 29.645 185.98 29.77 186.051 cv
29.891 186.121 30.051 186.199 30.246 186.285 cv
30.438 186.371 30.66 186.449 30.922 186.52 cv
31.18 186.594 31.469 186.633 31.789 186.629 cv
32.094 186.633 32.367 186.594 32.602 186.516 cv
32.836 186.441 33.031 186.332 33.191 186.187 cv
33.348 186.047 33.465 185.879 33.547 185.684 cv
33.625 185.492 33.668 185.281 33.668 185.051 cv
33.668 184.805 33.617 184.578 33.516 184.375 cv
33.414 184.176 33.266 184.004 33.07 183.859 cv
32.875 183.715 32.633 183.605 32.352 183.523 cv
32.063 183.449 31.742 183.41 31.383 183.406 cv
30.516 183.406 li
30.477 183.41 30.438 183.402 30.402 183.383 cv
30.367 183.371 30.336 183.344 30.313 183.305 cv
30.285 183.27 30.266 183.223 30.25 183.164 cv
30.23 183.105 30.223 183.027 30.227 182.93 cv
30.223 182.848 30.23 182.777 30.246 182.715 cv
30.258 182.66 30.277 182.613 30.305 182.578 cv
30.328 182.547 30.355 182.523 30.391 182.504 cv
30.418 182.492 30.453 182.484 30.5 182.48 cv
31.27 182.48 li
31.57 182.484 31.84 182.445 32.078 182.363 cv
32.316 182.289 32.52 182.176 32.688 182.027 cv
32.852 181.883 32.98 181.711 33.07 181.508 cv
33.156 181.309 33.199 181.082 33.203 180.828 cv
33.199 180.648 33.168 180.473 33.113 180.305 cv
33.051 180.141 32.965 179.996 32.848 179.871 cv
32.73 179.75 32.578 179.652 32.395 179.582 cv
32.207 179.512 31.992 179.477 31.754 179.477 cv
31.488 179.477 31.246 179.52 31.027 179.598 cv
30.801 179.68 30.605 179.762 30.438 179.852 cv
30.262 179.945 30.117 180.031 30.008 180.109 cv
29.891 180.187 29.813 180.227 29.77 180.227 cv
29.734 180.227 29.707 180.223 29.684 180.211 cv
29.656 180.199 29.633 180.176 29.621 180.141 cv
29.602 180.109 29.59 180.062 29.586 180 cv
29.578 179.941 29.578 179.859 29.578 179.754 cv
29.578 179.687 29.578 179.629 29.582 179.574 cv
29.586 179.527 29.594 179.48 29.609 179.437 cv
29.621 179.402 29.641 179.367 29.66 179.332 cv
29.676 179.305 29.703 179.27 29.75 179.223 cv
29.789 179.184 29.879 179.121 30.012 179.035 cv
30.145 178.957 30.305 178.875 30.5 178.789 cv
30.691 178.711 30.918 178.645 31.172 178.59 cv
31.422 178.539 31.691 178.512 31.988 178.508 cv
32.395 178.512 32.754 178.562 33.066 178.664 cv
33.371 178.77 33.629 178.918 33.84 179.109 cv
34.043 179.301 34.199 179.527 34.305 179.793 cv
34.402 180.059 34.453 180.355 34.457 180.676 cv
34.453 180.957 34.418 181.215 34.348 181.453 cv
34.273 181.691 34.164 181.902 34.027 182.086 cv
33.883 182.273 33.711 182.43 33.508 182.559 cv
33.301 182.687 33.066 182.777 32.801 182.828 cv
32.801 182.84 li
33.105 182.871 33.383 182.949 33.637 183.07 cv
33.887 183.191 34.105 183.344 34.289 183.523 cv
34.469 183.711 34.609 183.922 34.715 184.164 cv
34.813 184.406 34.863 184.668 34.867 184.941 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
42.02 186.965 mo
42.016 187.047 42.008 187.121 42 187.184 cv
41.984 187.25 41.969 187.305 41.953 187.344 cv
41.93 187.391 41.902 187.422 41.871 187.437 cv
41.832 187.461 41.797 187.469 41.758 187.469 cv
36.879 187.469 li
36.809 187.469 36.754 187.461 36.711 187.445 cv
36.66 187.43 36.617 187.406 36.586 187.367 cv
36.547 187.336 36.523 187.281 36.512 187.211 cv
36.492 187.141 36.484 187.059 36.488 186.957 cv
36.484 186.871 36.488 186.789 36.5 186.719 cv
36.504 186.652 36.52 186.594 36.547 186.539 cv
36.566 186.488 36.594 186.434 36.633 186.379 cv
36.664 186.328 36.711 186.273 36.77 186.211 cv
38.535 184.398 li
38.941 183.98 39.266 183.605 39.516 183.273 cv
39.758 182.941 39.949 182.641 40.086 182.363 cv
40.219 182.094 40.309 181.844 40.352 181.621 cv
40.391 181.398 40.41 181.191 40.414 180.992 cv
40.41 180.797 40.379 180.609 40.316 180.434 cv
40.25 180.262 40.152 180.109 40.031 179.977 cv
39.902 179.848 39.746 179.742 39.563 179.66 cv
39.371 179.586 39.156 179.547 38.914 179.543 cv
38.625 179.547 38.367 179.586 38.141 179.66 cv
37.91 179.742 37.711 179.828 37.543 179.914 cv
37.367 180.008 37.223 180.09 37.113 180.164 cv
36.996 180.246 36.91 180.285 36.855 180.281 cv
36.82 180.285 36.793 180.277 36.77 180.254 cv
36.742 180.238 36.719 180.207 36.703 180.164 cv
36.684 180.125 36.672 180.07 36.664 180 cv
36.652 179.934 36.648 179.852 36.652 179.754 cv
36.648 179.687 36.652 179.629 36.66 179.578 cv
36.664 179.531 36.672 179.488 36.684 179.449 cv
36.691 179.414 36.703 179.379 36.727 179.348 cv
36.742 179.316 36.781 179.277 36.836 179.227 cv
36.891 179.184 36.984 179.121 37.117 179.035 cv
37.25 178.957 37.418 178.875 37.625 178.789 cv
37.824 178.711 38.047 178.645 38.293 178.59 cv
38.535 178.539 38.793 178.512 39.063 178.508 cv
39.488 178.512 39.859 178.57 40.184 178.687 cv
40.504 178.809 40.773 178.973 40.984 179.184 cv
41.195 179.395 41.352 179.641 41.457 179.914 cv
41.563 180.195 41.617 180.488 41.617 180.801 cv
41.617 181.082 41.59 181.363 41.539 181.645 cv
41.488 181.926 41.383 182.23 41.223 182.551 cv
41.059 182.879 40.824 183.238 40.523 183.637 cv
40.215 184.035 39.813 184.496 39.309 185.012 cv
37.91 186.473 li
41.754 186.473 li
41.785 186.473 41.82 186.484 41.859 186.504 cv
41.891 186.527 41.922 186.559 41.945 186.598 cv
41.969 186.641 41.984 186.691 42 186.75 cv
42.008 186.812 42.016 186.883 42.02 186.965 cv
cp
f
28.617 134.719 mo
42.808 134.719 li
42.808 151.809 li
28.617 151.809 li
cp
0 0 0 0 cmyk
ef
34.867 145.543 mo
34.863 145.953 34.793 146.316 34.656 146.641 cv
34.512 146.969 34.309 147.25 34.047 147.477 cv
33.781 147.711 33.457 147.887 33.07 148.012 cv
32.684 148.137 32.246 148.199 31.762 148.199 cv
31.465 148.199 31.188 148.176 30.934 148.129 cv
30.672 148.082 30.445 148.027 30.246 147.961 cv
30.043 147.895 29.875 147.824 29.746 147.754 cv
29.613 147.684 29.531 147.633 29.5 147.602 cv
29.465 147.57 29.438 147.539 29.422 147.504 cv
29.398 147.477 29.383 147.437 29.371 147.391 cv
29.355 147.344 29.344 147.289 29.34 147.223 cv
29.332 147.156 29.332 147.074 29.332 146.977 cv
29.332 146.816 29.348 146.703 29.379 146.637 cv
29.41 146.578 29.457 146.547 29.52 146.543 cv
29.563 146.547 29.645 146.582 29.77 146.652 cv
29.891 146.723 30.051 146.801 30.246 146.887 cv
30.438 146.973 30.66 147.051 30.922 147.121 cv
31.18 147.195 31.469 147.234 31.789 147.23 cv
32.094 147.234 32.367 147.195 32.602 147.117 cv
32.836 147.043 33.031 146.934 33.191 146.789 cv
33.348 146.648 33.465 146.48 33.547 146.285 cv
33.625 146.094 33.668 145.883 33.668 145.652 cv
33.668 145.406 33.617 145.18 33.516 144.977 cv
33.414 144.777 33.266 144.605 33.07 144.461 cv
32.875 144.316 32.633 144.207 32.352 144.125 cv
32.063 144.051 31.742 144.012 31.383 144.008 cv
30.516 144.008 li
30.477 144.012 30.438 144.004 30.402 143.984 cv
30.367 143.973 30.336 143.945 30.313 143.906 cv
30.285 143.871 30.266 143.824 30.25 143.766 cv
30.23 143.707 30.223 143.629 30.227 143.531 cv
30.223 143.449 30.23 143.379 30.246 143.316 cv
30.258 143.262 30.277 143.215 30.305 143.18 cv
30.328 143.148 30.355 143.125 30.391 143.105 cv
30.418 143.094 30.453 143.086 30.5 143.082 cv
31.27 143.082 li
31.57 143.086 31.84 143.047 32.078 142.965 cv
32.316 142.891 32.52 142.777 32.688 142.629 cv
32.852 142.484 32.98 142.312 33.07 142.109 cv
33.156 141.91 33.199 141.684 33.203 141.43 cv
33.199 141.25 33.168 141.074 33.113 140.906 cv
33.051 140.742 32.965 140.598 32.848 140.473 cv
32.73 140.352 32.578 140.254 32.395 140.184 cv
32.207 140.113 31.992 140.078 31.754 140.078 cv
31.488 140.078 31.246 140.121 31.027 140.199 cv
30.801 140.281 30.605 140.363 30.438 140.453 cv
30.262 140.547 30.117 140.633 30.008 140.711 cv
29.891 140.789 29.813 140.828 29.77 140.828 cv
29.734 140.828 29.707 140.824 29.684 140.812 cv
29.656 140.801 29.633 140.777 29.621 140.742 cv
29.602 140.711 29.59 140.664 29.586 140.602 cv
29.578 140.543 29.578 140.461 29.578 140.355 cv
29.578 140.289 29.578 140.23 29.582 140.176 cv
29.586 140.129 29.594 140.082 29.609 140.039 cv
29.621 140.004 29.641 139.969 29.66 139.934 cv
29.676 139.906 29.703 139.871 29.75 139.824 cv
29.789 139.785 29.879 139.723 30.012 139.637 cv
30.145 139.559 30.305 139.477 30.5 139.391 cv
30.691 139.312 30.918 139.246 31.172 139.191 cv
31.422 139.141 31.691 139.113 31.988 139.109 cv
32.395 139.113 32.754 139.164 33.066 139.266 cv
33.371 139.371 33.629 139.52 33.84 139.711 cv
34.043 139.902 34.199 140.129 34.305 140.395 cv
34.402 140.66 34.453 140.957 34.457 141.277 cv
34.453 141.559 34.418 141.816 34.348 142.055 cv
34.273 142.293 34.164 142.504 34.027 142.687 cv
33.883 142.875 33.711 143.031 33.508 143.16 cv
33.301 143.289 33.066 143.379 32.801 143.43 cv
32.801 143.441 li
33.105 143.473 33.383 143.551 33.637 143.672 cv
33.887 143.793 34.105 143.945 34.289 144.125 cv
34.469 144.312 34.609 144.523 34.715 144.766 cv
34.813 145.008 34.863 145.27 34.867 145.543 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
42.242 145.211 mo
42.238 145.598 42.18 145.973 42.063 146.332 cv
41.945 146.695 41.762 147.016 41.52 147.289 cv
41.27 147.57 40.961 147.789 40.586 147.953 cv
40.207 148.117 39.758 148.199 39.246 148.199 cv
38.875 148.199 38.551 148.156 38.27 148.062 cv
37.984 147.977 37.738 147.848 37.531 147.676 cv
37.32 147.512 37.148 147.305 37.012 147.055 cv
36.871 146.812 36.758 146.531 36.676 146.215 cv
36.59 145.902 36.531 145.559 36.496 145.184 cv
36.457 144.812 36.438 144.41 36.441 143.98 cv
36.438 143.605 36.457 143.227 36.5 142.836 cv
36.539 142.453 36.613 142.078 36.719 141.715 cv
36.824 141.359 36.965 141.023 37.148 140.703 cv
37.324 140.391 37.551 140.113 37.824 139.875 cv
38.094 139.645 38.418 139.461 38.797 139.32 cv
39.172 139.187 39.609 139.117 40.113 139.113 cv
40.277 139.117 40.449 139.129 40.625 139.145 cv
40.797 139.168 40.957 139.195 41.102 139.227 cv
41.246 139.266 41.367 139.301 41.469 139.34 cv
41.566 139.383 41.633 139.418 41.668 139.441 cv
41.699 139.469 41.723 139.496 41.742 139.523 cv
41.754 139.555 41.766 139.586 41.777 139.617 cv
41.785 139.652 41.793 139.691 41.801 139.734 cv
41.801 139.777 41.805 139.828 41.809 139.891 cv
41.805 139.977 41.805 140.051 41.805 140.105 cv
41.801 140.168 41.789 140.215 41.777 140.246 cv
41.758 140.285 41.738 140.312 41.715 140.328 cv
41.688 140.352 41.656 140.359 41.617 140.355 cv
41.563 140.359 41.492 140.344 41.41 140.309 cv
41.32 140.281 41.215 140.246 41.098 140.203 cv
40.973 140.168 40.824 140.133 40.648 140.098 cv
40.473 140.07 40.27 140.055 40.039 140.051 cv
39.613 140.055 39.25 140.141 38.945 140.309 cv
38.641 140.484 38.391 140.715 38.199 141.004 cv
38.004 141.297 37.859 141.637 37.77 142.02 cv
37.672 142.406 37.621 142.809 37.609 143.223 cv
37.727 143.16 37.859 143.09 38.008 143.02 cv
38.156 142.953 38.316 142.895 38.492 142.836 cv
38.664 142.785 38.848 142.738 39.047 142.703 cv
39.242 142.668 39.453 142.652 39.676 142.648 cv
40.152 142.652 40.555 142.715 40.883 142.844 cv
41.207 142.977 41.473 143.16 41.68 143.387 cv
41.879 143.621 42.023 143.891 42.113 144.199 cv
42.195 144.512 42.238 144.848 42.242 145.211 cv
cp
41.055 145.32 mo
41.055 145.059 41.027 144.816 40.977 144.598 cv
40.922 144.383 40.836 144.199 40.715 144.051 cv
40.59 143.902 40.426 143.789 40.223 143.703 cv
40.016 143.625 39.762 143.582 39.465 143.578 cv
39.293 143.582 39.125 143.598 38.957 143.625 cv
38.789 143.656 38.625 143.695 38.473 143.746 cv
38.313 143.801 38.164 143.863 38.02 143.93 cv
37.875 144.004 37.742 144.082 37.629 144.16 cv
37.625 144.75 37.664 145.238 37.742 145.633 cv
37.816 146.031 37.926 146.352 38.07 146.586 cv
38.211 146.828 38.391 146.996 38.605 147.098 cv
38.816 147.199 39.066 147.25 39.355 147.25 cv
39.645 147.25 39.895 147.195 40.113 147.086 cv
40.324 146.977 40.504 146.832 40.645 146.648 cv
40.785 146.465 40.887 146.258 40.957 146.027 cv
41.02 145.797 41.055 145.562 41.055 145.32 cv
cp
f
28.617 95.32 mo
42.808 95.32 li
42.808 112.41 li
28.617 112.41 li
cp
0 0 0 0 cmyk
ef
35.32 106.133 mo
35.32 106.289 35.297 106.406 35.25 106.488 cv
35.203 106.578 35.141 106.621 35.063 106.617 cv
34.063 106.617 li
34.063 108.477 li
34.059 108.516 34.051 108.547 34.035 108.57 cv
34.016 108.602 33.984 108.621 33.938 108.637 cv
33.891 108.652 33.828 108.664 33.754 108.676 cv
33.676 108.68 33.578 108.684 33.465 108.687 cv
33.348 108.684 33.254 108.68 33.184 108.676 cv
33.105 108.664 33.047 108.652 33.004 108.637 cv
32.957 108.621 32.926 108.602 32.91 108.57 cv
32.891 108.547 32.883 108.516 32.887 108.477 cv
32.887 106.617 li
29.27 106.617 li
29.211 106.621 29.168 106.613 29.133 106.598 cv
29.094 106.586 29.059 106.562 29.035 106.523 cv
29.004 106.488 28.984 106.437 28.973 106.367 cv
28.961 106.301 28.957 106.211 28.957 106.098 cv
28.957 106.016 28.957 105.937 28.961 105.867 cv
28.965 105.801 28.973 105.738 28.988 105.68 cv
29 105.625 29.02 105.57 29.043 105.516 cv
29.063 105.465 29.09 105.41 29.125 105.348 cv
32.277 99.973 li
32.297 99.937 32.332 99.906 32.379 99.879 cv
32.422 99.852 32.477 99.828 32.551 99.809 cv
32.617 99.793 32.703 99.781 32.809 99.773 cv
32.906 99.77 33.027 99.766 33.172 99.762 cv
33.32 99.766 33.453 99.773 33.57 99.781 cv
33.68 99.797 33.773 99.809 33.848 99.824 cv
33.914 99.844 33.969 99.867 34.008 99.895 cv
34.043 99.926 34.059 99.961 34.063 100 cv
34.063 105.648 li
35.063 105.648 li
35.137 105.648 35.195 105.691 35.246 105.77 cv
35.293 105.852 35.32 105.973 35.32 106.133 cv
cp
32.887 100.793 mo
32.875 100.793 li
30.031 105.648 li
32.887 105.648 li
cp
.629236 .549432 .540154 .282963 cmyk
f
42.32 104.203 mo
42.32 104.887 42.266 105.508 42.16 106.066 cv
42.051 106.629 41.871 107.109 41.625 107.512 cv
41.375 107.918 41.051 108.23 40.652 108.449 cv
40.246 108.668 39.754 108.777 39.172 108.777 cv
38.613 108.777 38.145 108.68 37.766 108.48 cv
37.383 108.285 37.074 107.992 36.844 107.605 cv
36.609 107.223 36.445 106.75 36.348 106.184 cv
36.25 105.625 36.203 104.98 36.203 104.246 cv
36.203 103.574 36.258 102.953 36.367 102.391 cv
36.477 101.828 36.652 101.348 36.898 100.941 cv
37.145 100.543 37.469 100.23 37.871 100.004 cv
38.27 99.785 38.762 99.672 39.348 99.672 cv
39.906 99.672 40.375 99.773 40.758 99.969 cv
41.133 100.172 41.441 100.461 41.676 100.844 cv
41.91 101.23 42.074 101.707 42.172 102.266 cv
42.27 102.832 42.32 103.477 42.32 104.203 cv
cp
41.117 104.289 mo
41.113 103.848 41.098 103.453 41.07 103.098 cv
41.035 102.75 40.988 102.437 40.93 102.168 cv
40.863 101.902 40.781 101.672 40.688 101.477 cv
40.586 101.281 40.469 101.121 40.336 100.996 cv
40.195 100.871 40.043 100.781 39.871 100.723 cv
39.695 100.668 39.496 100.641 39.281 100.637 cv
38.891 100.641 38.578 100.73 38.336 100.91 cv
38.094 101.094 37.902 101.344 37.762 101.664 cv
37.621 101.984 37.527 102.359 37.48 102.785 cv
37.43 103.215 37.402 103.676 37.406 104.164 cv
37.402 104.828 37.438 105.391 37.508 105.852 cv
37.574 106.316 37.684 106.691 37.832 106.98 cv
37.98 107.273 38.168 107.484 38.398 107.617 cv
38.629 107.75 38.91 107.816 39.238 107.812 cv
39.492 107.816 39.715 107.777 39.91 107.691 cv
40.102 107.613 40.27 107.496 40.41 107.34 cv
40.547 107.191 40.66 107.008 40.754 106.789 cv
40.844 106.578 40.918 106.34 40.973 106.078 cv
41.027 105.82 41.063 105.539 41.086 105.234 cv
41.102 104.934 41.113 104.617 41.117 104.289 cv
cp
f
28.617 55.93 mo
42.808 55.93 li
42.808 73.02 li
28.617 73.02 li
cp
0 0 0 0 cmyk
ef
35.313 66.738 mo
35.309 66.891 35.285 67.008 35.242 67.094 cv
35.195 67.18 35.133 67.223 35.051 67.223 cv
34.055 67.223 li
34.055 69.078 li
34.055 69.117 34.043 69.148 34.027 69.172 cv
34.004 69.203 33.973 69.223 33.93 69.238 cv
33.879 69.254 33.816 69.266 33.746 69.273 cv
33.668 69.281 33.574 69.285 33.457 69.289 cv
33.344 69.285 33.25 69.281 33.176 69.273 cv
33.098 69.266 33.035 69.254 32.996 69.238 cv
32.949 69.223 32.922 69.203 32.906 69.172 cv
32.891 69.148 32.883 69.117 32.883 69.078 cv
32.883 67.223 li
29.27 67.223 li
29.211 67.223 29.168 67.219 29.133 67.203 cv
29.094 67.195 29.059 67.168 29.035 67.129 cv
29.004 67.094 28.984 67.043 28.973 66.973 cv
28.961 66.906 28.957 66.816 28.957 66.703 cv
28.957 66.621 28.957 66.543 28.961 66.473 cv
28.965 66.406 28.973 66.344 28.988 66.285 cv
29 66.23 29.02 66.176 29.043 66.121 cv
29.063 66.07 29.09 66.016 29.125 65.953 cv
32.273 60.586 li
32.297 60.551 32.328 60.52 32.375 60.492 cv
32.414 60.465 32.473 60.441 32.543 60.422 cv
32.613 60.406 32.699 60.395 32.801 60.387 cv
32.902 60.383 33.023 60.379 33.164 60.375 cv
33.316 60.379 33.449 60.387 33.563 60.395 cv
33.676 60.41 33.766 60.422 33.84 60.437 cv
33.906 60.457 33.961 60.484 34 60.512 cv
34.035 60.543 34.055 60.574 34.055 60.613 cv
34.055 66.254 li
35.051 66.254 li
35.129 66.258 35.191 66.297 35.238 66.375 cv
35.285 66.457 35.309 66.578 35.313 66.738 cv
cp
32.883 61.406 mo
32.867 61.406 li
30.027 66.254 li
32.883 66.254 li
cp
.629236 .549432 .540154 .282963 cmyk
f
42.395 66.738 mo
42.391 66.891 42.367 67.008 42.324 67.094 cv
42.277 67.18 42.215 67.223 42.133 67.223 cv
41.137 67.223 li
41.137 69.078 li
41.137 69.117 41.125 69.148 41.109 69.172 cv
41.086 69.203 41.055 69.223 41.012 69.238 cv
40.961 69.254 40.898 69.266 40.828 69.273 cv
40.75 69.281 40.656 69.285 40.539 69.289 cv
40.426 69.285 40.332 69.281 40.258 69.273 cv
40.18 69.266 40.117 69.254 40.078 69.238 cv
40.031 69.223 40.004 69.203 39.988 69.172 cv
39.973 69.148 39.965 69.117 39.965 69.078 cv
39.965 67.223 li
36.352 67.223 li
36.293 67.223 36.25 67.219 36.215 67.203 cv
36.176 67.195 36.141 67.168 36.117 67.129 cv
36.086 67.094 36.066 67.043 36.055 66.973 cv
36.043 66.906 36.039 66.816 36.039 66.703 cv
36.039 66.621 36.039 66.543 36.043 66.473 cv
36.047 66.406 36.055 66.344 36.07 66.285 cv
36.082 66.23 36.102 66.176 36.125 66.121 cv
36.145 66.07 36.172 66.016 36.207 65.953 cv
39.355 60.586 li
39.379 60.551 39.41 60.52 39.457 60.492 cv
39.496 60.465 39.555 60.441 39.625 60.422 cv
39.695 60.406 39.781 60.395 39.883 60.387 cv
39.984 60.383 40.105 60.379 40.246 60.375 cv
40.398 60.379 40.531 60.387 40.645 60.395 cv
40.758 60.41 40.848 60.422 40.922 60.437 cv
40.988 60.457 41.043 60.484 41.082 60.512 cv
41.117 60.543 41.137 60.574 41.137 60.613 cv
41.137 66.254 li
42.133 66.254 li
42.211 66.258 42.273 66.297 42.32 66.375 cv
42.367 66.457 42.391 66.578 42.395 66.738 cv
cp
39.965 61.406 mo
39.949 61.406 li
37.109 66.254 li
39.965 66.254 li
cp
f
28.617 16.531 mo
42.808 16.531 li
42.808 33.621 li
28.617 33.621 li
cp
0 0 0 0 cmyk
ef
35.313 27.34 mo
35.309 27.492 35.285 27.609 35.242 27.695 cv
35.195 27.781 35.133 27.824 35.051 27.824 cv
34.055 27.824 li
34.055 29.68 li
34.055 29.719 34.043 29.75 34.027 29.773 cv
34.004 29.805 33.973 29.824 33.93 29.84 cv
33.879 29.855 33.816 29.867 33.746 29.875 cv
33.668 29.883 33.574 29.887 33.457 29.891 cv
33.344 29.887 33.25 29.883 33.176 29.875 cv
33.098 29.867 33.035 29.855 32.996 29.84 cv
32.949 29.824 32.922 29.805 32.906 29.773 cv
32.891 29.75 32.883 29.719 32.883 29.68 cv
32.883 27.824 li
29.27 27.824 li
29.211 27.824 29.168 27.82 29.133 27.805 cv
29.094 27.797 29.059 27.77 29.035 27.73 cv
29.004 27.695 28.984 27.645 28.973 27.574 cv
28.961 27.508 28.957 27.418 28.957 27.305 cv
28.957 27.223 28.957 27.145 28.961 27.074 cv
28.965 27.008 28.973 26.945 28.988 26.887 cv
29 26.832 29.02 26.777 29.043 26.723 cv
29.063 26.672 29.09 26.617 29.125 26.555 cv
32.273 21.187 li
32.297 21.152 32.328 21.121 32.375 21.094 cv
32.414 21.066 32.473 21.043 32.543 21.023 cv
32.613 21.008 32.699 20.996 32.801 20.988 cv
32.902 20.984 33.023 20.98 33.164 20.977 cv
33.316 20.98 33.449 20.988 33.563 20.996 cv
33.676 21.012 33.766 21.023 33.84 21.039 cv
33.906 21.059 33.961 21.086 34 21.113 cv
34.035 21.145 34.055 21.176 34.055 21.215 cv
34.055 26.855 li
35.051 26.855 li
35.129 26.859 35.191 26.898 35.238 26.977 cv
35.285 27.059 35.309 27.18 35.313 27.34 cv
cp
32.883 22.008 mo
32.867 22.008 li
30.027 26.855 li
32.883 26.855 li
cp
.629236 .549432 .540154 .282963 cmyk
f
42.223 27.586 mo
42.219 27.973 42.152 28.312 42.016 28.609 cv
41.879 28.906 41.68 29.16 41.426 29.363 cv
41.168 29.57 40.852 29.723 40.477 29.824 cv
40.094 29.93 39.664 29.98 39.18 29.98 cv
38.723 29.98 38.313 29.934 37.957 29.84 cv
37.594 29.746 37.289 29.605 37.043 29.418 cv
36.789 29.23 36.598 29 36.469 28.727 cv
36.332 28.453 36.266 28.141 36.27 27.789 cv
36.266 27.516 36.313 27.262 36.406 27.027 cv
36.496 26.793 36.625 26.578 36.797 26.383 cv
36.965 26.187 37.176 26.008 37.43 25.836 cv
37.676 25.668 37.961 25.504 38.277 25.348 cv
38.004 25.207 37.762 25.059 37.551 24.898 cv
37.34 24.746 37.16 24.574 37.02 24.387 cv
36.871 24.203 36.762 24.008 36.691 23.797 cv
36.613 23.594 36.578 23.363 36.578 23.113 cv
36.578 22.805 36.633 22.516 36.746 22.242 cv
36.855 21.973 37.023 21.738 37.25 21.539 cv
37.473 21.34 37.758 21.184 38.109 21.066 cv
38.453 20.953 38.859 20.895 39.328 20.891 cv
39.77 20.895 40.156 20.945 40.484 21.051 cv
40.809 21.16 41.078 21.309 41.289 21.488 cv
41.5 21.676 41.656 21.891 41.758 22.137 cv
41.859 22.391 41.91 22.66 41.91 22.945 cv
41.91 23.18 41.871 23.402 41.797 23.613 cv
41.719 23.828 41.609 24.031 41.465 24.223 cv
41.316 24.414 41.137 24.594 40.93 24.758 cv
40.715 24.926 40.473 25.078 40.203 25.223 cv
40.523 25.383 40.813 25.547 41.066 25.715 cv
41.316 25.887 41.527 26.07 41.699 26.258 cv
41.871 26.453 42 26.656 42.09 26.871 cv
42.176 27.09 42.219 27.328 42.223 27.586 cv
cp
40.75 23.051 mo
40.75 22.863 40.715 22.691 40.648 22.535 cv
40.582 22.383 40.484 22.25 40.359 22.137 cv
40.227 22.031 40.07 21.949 39.883 21.891 cv
39.695 21.836 39.48 21.809 39.238 21.805 cv
38.746 21.809 38.375 21.918 38.125 22.141 cv
37.871 22.363 37.742 22.668 37.746 23.051 cv
37.742 23.234 37.773 23.402 37.836 23.551 cv
37.895 23.707 37.992 23.852 38.125 23.984 cv
38.254 24.125 38.418 24.258 38.617 24.383 cv
38.813 24.516 39.047 24.648 39.32 24.785 cv
39.781 24.551 40.133 24.289 40.379 24 cv
40.625 23.715 40.75 23.398 40.75 23.051 cv
cp
41.035 27.707 mo
41.031 27.5 40.992 27.312 40.918 27.141 cv
40.84 26.973 40.723 26.812 40.566 26.66 cv
40.406 26.516 40.211 26.371 39.98 26.23 cv
39.742 26.094 39.469 25.949 39.164 25.797 cv
38.875 25.937 38.625 26.082 38.41 26.223 cv
38.191 26.367 38.016 26.512 37.879 26.66 cv
37.738 26.812 37.633 26.969 37.563 27.133 cv
37.492 27.297 37.457 27.48 37.457 27.68 cv
37.457 28.125 37.605 28.469 37.91 28.707 cv
38.211 28.949 38.664 29.066 39.266 29.066 cv
39.848 29.066 40.289 28.945 40.586 28.703 cv
40.883 28.461 41.031 28.129 41.035 27.707 cv
cp
f
58.578 520.406 mo
58.578 520.496 58.57 520.566 58.555 520.625 cv
58.539 520.687 58.52 520.738 58.5 520.77 cv
58.477 520.809 58.449 520.832 58.422 520.848 cv
58.391 520.863 58.363 520.871 58.332 520.871 cv
53.719 520.871 li
53.684 520.871 53.652 520.863 53.629 520.848 cv
53.598 520.832 53.574 520.809 53.551 520.77 cv
53.523 520.738 53.504 520.687 53.492 520.625 cv
53.477 520.566 53.469 520.496 53.473 520.406 cv
53.469 520.328 53.477 520.258 53.492 520.195 cv
53.504 520.141 53.52 520.09 53.543 520.051 cv
53.563 520.012 53.586 519.984 53.617 519.961 cv
53.645 519.945 53.68 519.934 53.719 519.93 cv
55.563 519.93 li
55.563 513.211 li
53.855 514.23 li
53.766 514.277 53.695 514.305 53.645 514.312 cv
53.59 514.324 53.547 514.312 53.52 514.281 cv
53.484 514.254 53.461 514.203 53.453 514.133 cv
53.438 514.066 53.434 513.98 53.438 513.875 cv
53.434 513.797 53.438 513.73 53.445 513.676 cv
53.453 513.621 53.461 513.578 53.477 513.539 cv
53.488 513.508 53.508 513.477 53.535 513.445 cv
53.559 513.422 53.594 513.395 53.637 513.363 cv
55.668 512.059 li
55.684 512.047 55.707 512.039 55.734 512.027 cv
55.762 512.02 55.797 512.008 55.84 512 cv
55.879 511.992 55.926 511.988 55.984 511.98 cv
56.035 511.98 56.105 511.977 56.188 511.977 cv
56.297 511.977 56.387 511.984 56.461 511.992 cv
56.531 512.004 56.59 512.016 56.633 512.027 cv
56.672 512.047 56.699 512.066 56.715 512.09 cv
56.727 512.117 56.73 512.145 56.734 512.168 cv
56.734 519.93 li
58.332 519.93 li
58.367 519.934 58.398 519.945 58.434 519.961 cv
58.461 519.984 58.488 520.012 58.512 520.051 cv
58.531 520.09 58.547 520.141 58.559 520.195 cv
58.57 520.258 58.578 520.328 58.578 520.406 cv
cp
f
78.66 520.367 mo
78.656 520.449 78.648 520.523 78.641 520.586 cv
78.625 520.652 78.609 520.707 78.594 520.746 cv
78.57 520.793 78.543 520.824 78.512 520.84 cv
78.473 520.863 78.438 520.871 78.398 520.871 cv
73.52 520.871 li
73.449 520.871 73.395 520.863 73.352 520.848 cv
73.301 520.832 73.258 520.809 73.227 520.77 cv
73.188 520.738 73.164 520.684 73.152 520.613 cv
73.133 520.543 73.125 520.461 73.129 520.359 cv
73.125 520.273 73.129 520.191 73.141 520.121 cv
73.145 520.055 73.16 519.996 73.188 519.941 cv
73.207 519.891 73.234 519.836 73.273 519.781 cv
73.305 519.73 73.352 519.676 73.41 519.613 cv
75.176 517.801 li
75.582 517.383 75.906 517.008 76.156 516.676 cv
76.398 516.344 76.59 516.043 76.727 515.766 cv
76.859 515.496 76.949 515.246 76.992 515.023 cv
77.031 514.801 77.051 514.594 77.055 514.395 cv
77.051 514.199 77.02 514.012 76.957 513.836 cv
76.891 513.664 76.793 513.512 76.672 513.379 cv
76.543 513.25 76.387 513.145 76.203 513.062 cv
76.012 512.988 75.797 512.949 75.555 512.945 cv
75.266 512.949 75.008 512.988 74.781 513.062 cv
74.551 513.145 74.352 513.23 74.184 513.316 cv
74.008 513.41 73.863 513.492 73.754 513.566 cv
73.637 513.648 73.551 513.687 73.496 513.684 cv
73.461 513.687 73.434 513.68 73.41 513.656 cv
73.383 513.641 73.359 513.609 73.344 513.566 cv
73.324 513.527 73.313 513.473 73.305 513.402 cv
73.293 513.336 73.289 513.254 73.293 513.156 cv
73.289 513.09 73.293 513.031 73.301 512.98 cv
73.305 512.934 73.313 512.891 73.324 512.852 cv
73.332 512.816 73.344 512.781 73.367 512.75 cv
73.383 512.719 73.422 512.68 73.477 512.629 cv
73.531 512.586 73.625 512.523 73.758 512.437 cv
73.891 512.359 74.059 512.277 74.266 512.191 cv
74.465 512.113 74.688 512.047 74.934 511.992 cv
75.176 511.941 75.434 511.914 75.703 511.91 cv
76.129 511.914 76.5 511.973 76.824 512.09 cv
77.145 512.211 77.414 512.375 77.625 512.586 cv
77.836 512.797 77.992 513.043 78.098 513.316 cv
78.203 513.598 78.258 513.891 78.258 514.203 cv
78.258 514.484 78.23 514.766 78.18 515.047 cv
78.129 515.328 78.023 515.633 77.863 515.953 cv
77.699 516.281 77.465 516.641 77.164 517.039 cv
76.855 517.437 76.453 517.898 75.949 518.414 cv
74.551 519.875 li
78.395 519.875 li
78.426 519.875 78.461 519.887 78.5 519.906 cv
78.531 519.93 78.563 519.961 78.586 520 cv
78.609 520.043 78.625 520.094 78.641 520.152 cv
78.648 520.215 78.656 520.285 78.66 520.367 cv
cp
f
98.688 518.344 mo
98.684 518.754 98.613 519.117 98.477 519.441 cv
98.332 519.77 98.129 520.051 97.867 520.277 cv
97.602 520.512 97.277 520.687 96.891 520.812 cv
96.504 520.937 96.066 521 95.582 521 cv
95.285 521 95.008 520.977 94.754 520.93 cv
94.492 520.883 94.266 520.828 94.066 520.762 cv
93.863 520.695 93.695 520.625 93.566 520.555 cv
93.434 520.484 93.352 520.434 93.32 520.402 cv
93.285 520.371 93.258 520.34 93.242 520.305 cv
93.219 520.277 93.203 520.238 93.191 520.191 cv
93.176 520.145 93.164 520.09 93.16 520.023 cv
93.152 519.957 93.152 519.875 93.152 519.777 cv
93.152 519.617 93.168 519.504 93.199 519.437 cv
93.23 519.379 93.277 519.348 93.34 519.344 cv
93.383 519.348 93.465 519.383 93.59 519.453 cv
93.711 519.523 93.871 519.602 94.066 519.687 cv
94.258 519.773 94.48 519.852 94.742 519.922 cv
95 519.996 95.289 520.035 95.609 520.031 cv
95.914 520.035 96.188 519.996 96.422 519.918 cv
96.656 519.844 96.852 519.734 97.012 519.59 cv
97.168 519.449 97.285 519.281 97.367 519.086 cv
97.445 518.895 97.488 518.684 97.488 518.453 cv
97.488 518.207 97.438 517.98 97.336 517.777 cv
97.234 517.578 97.086 517.406 96.891 517.262 cv
96.695 517.117 96.453 517.008 96.172 516.926 cv
95.883 516.852 95.563 516.812 95.203 516.809 cv
94.336 516.809 li
94.297 516.812 94.258 516.805 94.223 516.785 cv
94.188 516.773 94.156 516.746 94.133 516.707 cv
94.105 516.672 94.086 516.625 94.07 516.566 cv
94.051 516.508 94.043 516.43 94.047 516.332 cv
94.043 516.25 94.051 516.18 94.066 516.117 cv
94.078 516.062 94.098 516.016 94.125 515.98 cv
94.148 515.949 94.176 515.926 94.211 515.906 cv
94.238 515.895 94.273 515.887 94.32 515.883 cv
95.09 515.883 li
95.391 515.887 95.66 515.848 95.898 515.766 cv
96.137 515.691 96.34 515.578 96.508 515.43 cv
96.672 515.285 96.801 515.113 96.891 514.91 cv
96.977 514.711 97.02 514.484 97.023 514.23 cv
97.02 514.051 96.988 513.875 96.934 513.707 cv
96.871 513.543 96.785 513.398 96.668 513.273 cv
96.551 513.152 96.398 513.055 96.215 512.984 cv
96.027 512.914 95.813 512.879 95.574 512.879 cv
95.309 512.879 95.066 512.922 94.848 513 cv
94.621 513.082 94.426 513.164 94.258 513.254 cv
94.082 513.348 93.938 513.434 93.828 513.512 cv
93.711 513.59 93.633 513.629 93.59 513.629 cv
93.555 513.629 93.527 513.625 93.504 513.613 cv
93.477 513.602 93.453 513.578 93.441 513.543 cv
93.422 513.512 93.41 513.465 93.406 513.402 cv
93.398 513.344 93.398 513.262 93.398 513.156 cv
93.398 513.09 93.398 513.031 93.402 512.977 cv
93.406 512.93 93.414 512.883 93.43 512.84 cv
93.441 512.805 93.461 512.77 93.48 512.734 cv
93.496 512.707 93.523 512.672 93.57 512.625 cv
93.609 512.586 93.699 512.523 93.832 512.437 cv
93.965 512.359 94.125 512.277 94.32 512.191 cv
94.512 512.113 94.738 512.047 94.992 511.992 cv
95.242 511.941 95.512 511.914 95.809 511.91 cv
96.215 511.914 96.574 511.965 96.887 512.066 cv
97.191 512.172 97.449 512.32 97.66 512.512 cv
97.863 512.703 98.02 512.93 98.125 513.195 cv
98.223 513.461 98.273 513.758 98.277 514.078 cv
98.273 514.359 98.238 514.617 98.168 514.855 cv
98.094 515.094 97.984 515.305 97.848 515.488 cv
97.703 515.676 97.531 515.832 97.328 515.961 cv
97.121 516.09 96.887 516.18 96.621 516.23 cv
96.621 516.242 li
96.926 516.273 97.203 516.352 97.457 516.473 cv
97.707 516.594 97.926 516.746 98.109 516.926 cv
98.289 517.113 98.43 517.324 98.535 517.566 cv
98.633 517.809 98.684 518.07 98.688 518.344 cv
cp
f
119.234 518.359 mo
119.23 518.512 119.207 518.629 119.164 518.715 cv
119.117 518.801 119.055 518.844 118.973 518.844 cv
117.977 518.844 li
117.977 520.699 li
117.977 520.738 117.965 520.77 117.949 520.793 cv
117.926 520.824 117.895 520.844 117.852 520.859 cv
117.801 520.875 117.738 520.887 117.668 520.895 cv
117.59 520.902 117.496 520.906 117.379 520.91 cv
117.266 520.906 117.172 520.902 117.098 520.895 cv
117.02 520.887 116.957 520.875 116.918 520.859 cv
116.871 520.844 116.844 520.824 116.828 520.793 cv
116.813 520.77 116.805 520.738 116.805 520.699 cv
116.805 518.844 li
113.191 518.844 li
113.133 518.844 113.09 518.84 113.055 518.824 cv
113.016 518.816 112.98 518.789 112.957 518.75 cv
112.926 518.715 112.906 518.664 112.895 518.594 cv
112.883 518.527 112.879 518.437 112.879 518.324 cv
112.879 518.242 112.879 518.164 112.883 518.094 cv
112.887 518.027 112.895 517.965 112.91 517.906 cv
112.922 517.852 112.941 517.797 112.965 517.742 cv
112.984 517.691 113.012 517.637 113.047 517.574 cv
116.195 512.207 li
116.219 512.172 116.25 512.141 116.297 512.113 cv
116.336 512.086 116.395 512.062 116.465 512.043 cv
116.535 512.027 116.621 512.016 116.723 512.008 cv
116.824 512.004 116.945 512 117.086 511.996 cv
117.238 512 117.371 512.008 117.484 512.016 cv
117.598 512.031 117.688 512.043 117.762 512.059 cv
117.828 512.078 117.883 512.105 117.922 512.133 cv
117.957 512.164 117.977 512.195 117.977 512.234 cv
117.977 517.875 li
118.973 517.875 li
119.051 517.879 119.113 517.918 119.16 517.996 cv
119.207 518.078 119.23 518.199 119.234 518.359 cv
cp
116.805 513.027 mo
116.789 513.027 li
113.949 517.875 li
116.805 517.875 li
cp
f
138.914 518.031 mo
138.91 518.508 138.832 518.93 138.676 519.297 cv
138.516 519.668 138.289 519.977 138 520.227 cv
137.703 520.48 137.355 520.676 136.957 520.805 cv
136.551 520.937 136.105 521 135.617 521 cv
135.34 521 135.082 520.98 134.84 520.941 cv
134.594 520.902 134.375 520.855 134.184 520.801 cv
133.992 520.746 133.832 520.691 133.711 520.633 cv
133.586 520.582 133.508 520.539 133.477 520.504 cv
133.438 520.473 133.414 520.441 133.406 520.414 cv
133.391 520.387 133.379 520.355 133.367 520.316 cv
133.355 520.281 133.348 520.23 133.344 520.168 cv
133.336 520.109 133.332 520.039 133.336 519.957 cv
133.332 519.879 133.336 519.812 133.348 519.75 cv
133.352 519.691 133.367 519.641 133.387 519.598 cv
133.402 519.562 133.422 519.531 133.449 519.512 cv
133.473 519.496 133.5 519.488 133.535 519.484 cv
133.578 519.488 133.648 519.516 133.746 519.57 cv
133.84 519.629 133.969 519.691 134.133 519.758 cv
134.289 519.824 134.492 519.887 134.734 519.945 cv
134.973 520.004 135.254 520.035 135.582 520.031 cv
135.887 520.035 136.168 519.996 136.422 519.922 cv
136.676 519.852 136.895 519.738 137.082 519.582 cv
137.266 519.426 137.41 519.23 137.516 518.996 cv
137.617 518.762 137.668 518.477 137.672 518.141 cv
137.668 517.859 137.625 517.613 137.539 517.395 cv
137.449 517.184 137.313 517.004 137.129 516.855 cv
136.941 516.715 136.707 516.605 136.43 516.535 cv
136.145 516.465 135.809 516.43 135.418 516.426 cv
135.141 516.43 134.902 516.445 134.703 516.469 cv
134.5 516.5 134.313 516.512 134.145 516.508 cv
134.012 516.512 133.922 516.484 133.871 516.422 cv
133.813 516.367 133.785 516.25 133.789 516.078 cv
133.789 512.48 li
133.785 512.332 133.82 512.223 133.895 512.148 cv
133.961 512.078 134.063 512.043 134.199 512.039 cv
138.109 512.039 li
138.145 512.043 138.18 512.051 138.215 512.07 cv
138.246 512.09 138.273 512.121 138.301 512.16 cv
138.32 512.203 138.336 512.258 138.352 512.32 cv
138.359 512.387 138.367 512.461 138.367 512.543 cv
138.367 512.711 138.344 512.836 138.301 512.926 cv
138.258 513.02 138.199 513.066 138.121 513.062 cv
134.961 513.062 li
134.961 515.539 li
135.113 515.516 135.27 515.504 135.43 515.5 cv
135.59 515.496 135.777 515.492 135.988 515.492 cv
136.473 515.492 136.895 515.555 137.262 515.676 cv
137.621 515.797 137.926 515.969 138.172 516.187 cv
138.414 516.41 138.598 516.676 138.727 516.988 cv
138.848 517.305 138.91 517.652 138.914 518.031 cv
cp
f
159.262 518.012 mo
159.258 518.398 159.199 518.773 159.082 519.133 cv
158.965 519.496 158.781 519.816 158.539 520.09 cv
158.289 520.371 157.98 520.59 157.605 520.754 cv
157.227 520.918 156.777 521 156.266 521 cv
155.895 521 155.57 520.957 155.289 520.863 cv
155.004 520.777 154.758 520.648 154.551 520.477 cv
154.34 520.312 154.168 520.105 154.031 519.855 cv
153.891 519.613 153.777 519.332 153.695 519.016 cv
153.609 518.703 153.551 518.359 153.516 517.984 cv
153.477 517.613 153.457 517.211 153.461 516.781 cv
153.457 516.406 153.477 516.027 153.52 515.637 cv
153.559 515.254 153.633 514.879 153.738 514.516 cv
153.844 514.16 153.984 513.824 154.168 513.504 cv
154.344 513.191 154.57 512.914 154.844 512.676 cv
155.113 512.445 155.438 512.262 155.816 512.121 cv
156.191 511.988 156.629 511.918 157.133 511.914 cv
157.297 511.918 157.469 511.93 157.645 511.945 cv
157.816 511.969 157.977 511.996 158.121 512.027 cv
158.266 512.066 158.387 512.102 158.488 512.141 cv
158.586 512.184 158.652 512.219 158.688 512.242 cv
158.719 512.27 158.742 512.297 158.762 512.324 cv
158.773 512.355 158.785 512.387 158.797 512.418 cv
158.805 512.453 158.813 512.492 158.82 512.535 cv
158.82 512.578 158.824 512.629 158.828 512.691 cv
158.824 512.777 158.824 512.852 158.824 512.906 cv
158.82 512.969 158.809 513.016 158.797 513.047 cv
158.777 513.086 158.758 513.113 158.734 513.129 cv
158.707 513.152 158.676 513.16 158.637 513.156 cv
158.582 513.16 158.512 513.145 158.43 513.109 cv
158.34 513.082 158.234 513.047 158.117 513.004 cv
157.992 512.969 157.844 512.934 157.668 512.898 cv
157.492 512.871 157.289 512.855 157.059 512.852 cv
156.633 512.855 156.27 512.941 155.965 513.109 cv
155.66 513.285 155.41 513.516 155.219 513.805 cv
155.023 514.098 154.879 514.437 154.789 514.82 cv
154.691 515.207 154.641 515.609 154.629 516.023 cv
154.746 515.961 154.879 515.891 155.027 515.82 cv
155.176 515.754 155.336 515.695 155.512 515.637 cv
155.684 515.586 155.867 515.539 156.066 515.504 cv
156.262 515.469 156.473 515.453 156.695 515.449 cv
157.172 515.453 157.574 515.516 157.902 515.645 cv
158.227 515.777 158.492 515.961 158.699 516.187 cv
158.898 516.422 159.043 516.691 159.133 517 cv
159.215 517.312 159.258 517.648 159.262 518.012 cv
cp
158.074 518.121 mo
158.074 517.859 158.047 517.617 157.996 517.398 cv
157.941 517.184 157.855 517 157.734 516.852 cv
157.609 516.703 157.445 516.59 157.242 516.504 cv
157.035 516.426 156.781 516.383 156.484 516.379 cv
156.313 516.383 156.145 516.398 155.977 516.426 cv
155.809 516.457 155.645 516.496 155.492 516.547 cv
155.332 516.602 155.184 516.664 155.039 516.73 cv
154.895 516.805 154.762 516.883 154.648 516.961 cv
154.645 517.551 154.684 518.039 154.762 518.434 cv
154.836 518.832 154.945 519.152 155.09 519.387 cv
155.23 519.629 155.41 519.797 155.625 519.898 cv
155.836 520 156.086 520.051 156.375 520.051 cv
156.664 520.051 156.914 519.996 157.133 519.887 cv
157.344 519.777 157.523 519.633 157.664 519.449 cv
157.805 519.266 157.906 519.059 157.977 518.828 cv
158.039 518.598 158.074 518.363 158.074 518.121 cv
cp
f
179.266 512.543 mo
179.262 512.629 179.258 512.703 179.254 512.766 cv
179.246 512.836 179.238 512.898 179.227 512.957 cv
179.215 513.02 179.199 513.078 179.18 513.133 cv
179.156 513.191 179.133 513.254 179.109 513.316 cv
175.926 520.645 li
175.902 520.703 175.875 520.75 175.84 520.781 cv
175.805 520.82 175.762 520.848 175.711 520.863 cv
175.656 520.883 175.586 520.891 175.508 520.898 cv
175.422 520.902 175.324 520.906 175.211 520.91 cv
175.051 520.906 174.93 520.898 174.848 520.891 cv
174.758 520.875 174.695 520.859 174.66 520.828 cv
174.617 520.801 174.602 520.762 174.609 520.719 cv
174.613 520.676 174.629 520.625 174.656 520.562 cv
178.004 513.07 li
173.762 513.07 li
173.672 513.074 173.609 513.027 173.566 512.934 cv
173.523 512.844 173.5 512.715 173.504 512.551 cv
173.5 512.465 173.508 512.391 173.52 512.328 cv
173.531 512.266 173.547 512.211 173.57 512.164 cv
173.59 512.121 173.617 512.09 173.652 512.07 cv
173.684 512.051 173.719 512.043 173.762 512.039 cv
178.91 512.039 li
178.973 512.043 179.027 512.047 179.074 512.059 cv
179.121 512.074 179.156 512.102 179.184 512.141 cv
179.207 512.184 179.227 512.238 179.242 512.301 cv
179.254 512.367 179.262 512.449 179.266 512.543 cv
cp
f
199.441 518.605 mo
199.438 518.992 199.371 519.332 199.234 519.629 cv
199.098 519.926 198.898 520.18 198.645 520.383 cv
198.387 520.59 198.07 520.742 197.695 520.844 cv
197.313 520.949 196.883 521 196.398 521 cv
195.941 521 195.531 520.953 195.176 520.859 cv
194.813 520.766 194.508 520.625 194.262 520.437 cv
194.008 520.25 193.816 520.02 193.688 519.746 cv
193.551 519.473 193.484 519.16 193.488 518.809 cv
193.484 518.535 193.531 518.281 193.625 518.047 cv
193.715 517.812 193.844 517.598 194.016 517.402 cv
194.184 517.207 194.395 517.027 194.648 516.855 cv
194.895 516.687 195.18 516.523 195.496 516.367 cv
195.223 516.227 194.98 516.078 194.77 515.918 cv
194.559 515.766 194.379 515.594 194.238 515.406 cv
194.09 515.223 193.98 515.027 193.91 514.816 cv
193.832 514.613 193.797 514.383 193.797 514.133 cv
193.797 513.824 193.852 513.535 193.965 513.262 cv
194.074 512.992 194.242 512.758 194.469 512.559 cv
194.691 512.359 194.977 512.203 195.328 512.086 cv
195.672 511.973 196.078 511.914 196.547 511.91 cv
196.988 511.914 197.375 511.965 197.703 512.07 cv
198.027 512.18 198.297 512.328 198.508 512.508 cv
198.719 512.695 198.875 512.91 198.977 513.156 cv
199.078 513.41 199.129 513.68 199.129 513.965 cv
199.129 514.199 199.09 514.422 199.016 514.633 cv
198.938 514.848 198.828 515.051 198.684 515.242 cv
198.535 515.434 198.355 515.613 198.148 515.777 cv
197.934 515.945 197.691 516.098 197.422 516.242 cv
197.742 516.402 198.031 516.566 198.285 516.734 cv
198.535 516.906 198.746 517.09 198.918 517.277 cv
199.09 517.473 199.219 517.676 199.309 517.891 cv
199.395 518.109 199.438 518.348 199.441 518.605 cv
cp
197.969 514.07 mo
197.969 513.883 197.934 513.711 197.867 513.555 cv
197.801 513.402 197.703 513.27 197.578 513.156 cv
197.445 513.051 197.289 512.969 197.102 512.91 cv
196.914 512.855 196.699 512.828 196.457 512.824 cv
195.965 512.828 195.594 512.937 195.344 513.16 cv
195.09 513.383 194.961 513.687 194.965 514.07 cv
194.961 514.254 194.992 514.422 195.055 514.57 cv
195.113 514.727 195.211 514.871 195.344 515.004 cv
195.473 515.145 195.637 515.277 195.836 515.402 cv
196.031 515.535 196.266 515.668 196.539 515.805 cv
197 515.57 197.352 515.309 197.598 515.02 cv
197.844 514.734 197.969 514.418 197.969 514.07 cv
cp
198.254 518.727 mo
198.25 518.52 198.211 518.332 198.137 518.16 cv
198.059 517.992 197.941 517.832 197.785 517.68 cv
197.625 517.535 197.43 517.391 197.199 517.25 cv
196.961 517.113 196.688 516.969 196.383 516.816 cv
196.094 516.957 195.844 517.102 195.629 517.242 cv
195.41 517.387 195.234 517.531 195.098 517.68 cv
194.957 517.832 194.852 517.988 194.781 518.152 cv
194.711 518.316 194.676 518.5 194.676 518.699 cv
194.676 519.145 194.824 519.488 195.129 519.727 cv
195.43 519.969 195.883 520.086 196.484 520.086 cv
197.066 520.086 197.508 519.965 197.805 519.723 cv
198.102 519.48 198.25 519.148 198.254 518.727 cv
cp
f
219.406 516.105 mo
219.406 516.492 219.383 516.879 219.336 517.27 cv
219.289 517.664 219.211 518.039 219.105 518.398 cv
218.992 518.758 218.844 519.098 218.664 519.414 cv
218.477 519.73 218.246 520.008 217.969 520.242 cv
217.688 520.484 217.355 520.668 216.973 520.801 cv
216.586 520.934 216.141 521 215.633 521 cv
215.438 521 215.246 520.984 215.063 520.961 cv
214.875 520.934 214.707 520.906 214.563 520.871 cv
214.414 520.836 214.293 520.801 214.191 520.758 cv
214.09 520.719 214.016 520.676 213.973 520.633 cv
213.926 520.594 213.895 520.539 213.875 520.465 cv
213.852 520.398 213.84 520.305 213.844 520.184 cv
213.84 520.086 213.844 520.004 213.852 519.945 cv
213.859 519.887 213.867 519.844 213.883 519.809 cv
213.895 519.777 213.914 519.754 213.941 519.742 cv
213.965 519.73 213.996 519.723 214.035 519.723 cv
214.082 519.723 214.152 519.742 214.246 519.777 cv
214.332 519.812 214.449 519.852 214.59 519.891 cv
214.73 519.934 214.891 519.969 215.078 520 cv
215.262 520.035 215.473 520.051 215.707 520.051 cv
216.148 520.051 216.527 519.969 216.844 519.797 cv
217.156 519.629 217.414 519.398 217.617 519.109 cv
217.816 518.824 217.965 518.492 218.066 518.113 cv
218.164 517.738 218.223 517.34 218.234 516.918 cv
217.992 517.062 217.699 517.187 217.363 517.293 cv
217.023 517.406 216.641 517.461 216.207 517.457 cv
215.715 517.461 215.301 517.395 214.965 517.258 cv
214.629 517.125 214.359 516.941 214.16 516.707 cv
213.953 516.477 213.809 516.203 213.723 515.883 cv
213.633 515.566 213.586 515.215 213.59 514.836 cv
213.586 514.445 213.645 514.074 213.762 513.723 cv
213.875 513.371 214.051 513.062 214.293 512.789 cv
214.531 512.523 214.84 512.309 215.215 512.148 cv
215.586 511.992 216.031 511.914 216.555 511.91 cv
216.918 511.914 217.246 511.961 217.531 512.051 cv
217.816 512.145 218.063 512.277 218.273 512.453 cv
218.48 512.629 218.656 512.84 218.805 513.086 cv
218.945 513.336 219.063 513.617 219.156 513.93 cv
219.242 514.246 219.309 514.586 219.348 514.949 cv
219.387 515.32 219.406 515.707 219.406 516.105 cv
cp
218.211 515.977 mo
218.211 515.398 218.172 514.906 218.094 514.508 cv
218.016 514.109 217.902 513.789 217.754 513.543 cv
217.605 513.297 217.422 513.117 217.203 513.008 cv
216.984 512.898 216.73 512.844 216.445 512.844 cv
216.145 512.844 215.891 512.898 215.684 513.004 cv
215.473 513.113 215.301 513.258 215.168 513.434 cv
215.031 513.617 214.934 513.82 214.871 514.047 cv
214.809 514.277 214.777 514.512 214.777 514.746 cv
214.777 515.02 214.805 515.266 214.863 515.488 cv
214.918 515.711 215.012 515.898 215.141 516.055 cv
215.266 516.211 215.43 516.332 215.637 516.41 cv
215.84 516.496 216.094 516.535 216.398 516.535 cv
216.738 516.535 217.066 516.484 217.387 516.383 cv
217.699 516.281 217.977 516.148 218.211 515.977 cv
cp
f
235.898 520.406 mo
235.898 520.496 235.891 520.566 235.875 520.625 cv
235.859 520.687 235.84 520.738 235.82 520.77 cv
235.797 520.809 235.77 520.832 235.742 520.848 cv
235.711 520.863 235.684 520.871 235.652 520.871 cv
231.039 520.871 li
231.004 520.871 230.973 520.863 230.949 520.848 cv
230.918 520.832 230.895 520.809 230.871 520.77 cv
230.844 520.738 230.824 520.687 230.813 520.625 cv
230.797 520.566 230.789 520.496 230.793 520.406 cv
230.789 520.328 230.797 520.258 230.813 520.195 cv
230.824 520.141 230.84 520.09 230.863 520.051 cv
230.883 520.012 230.906 519.984 230.938 519.961 cv
230.965 519.945 231 519.934 231.039 519.93 cv
232.883 519.93 li
232.883 513.211 li
231.176 514.23 li
231.086 514.277 231.016 514.305 230.965 514.312 cv
230.91 514.324 230.867 514.312 230.84 514.281 cv
230.805 514.254 230.781 514.203 230.773 514.133 cv
230.758 514.066 230.754 513.98 230.758 513.875 cv
230.754 513.797 230.758 513.73 230.766 513.676 cv
230.773 513.621 230.781 513.578 230.797 513.539 cv
230.809 513.508 230.828 513.477 230.855 513.445 cv
230.879 513.422 230.914 513.395 230.957 513.363 cv
232.988 512.059 li
233.004 512.047 233.027 512.039 233.055 512.027 cv
233.082 512.02 233.117 512.008 233.16 512 cv
233.199 511.992 233.246 511.988 233.305 511.98 cv
233.355 511.98 233.426 511.977 233.508 511.977 cv
233.617 511.977 233.707 511.984 233.781 511.992 cv
233.852 512.004 233.91 512.016 233.953 512.027 cv
233.992 512.047 234.02 512.066 234.035 512.09 cv
234.047 512.117 234.051 512.145 234.055 512.168 cv
234.055 519.93 li
235.652 519.93 li
235.688 519.934 235.719 519.945 235.754 519.961 cv
235.781 519.984 235.809 520.012 235.832 520.051 cv
235.852 520.09 235.867 520.141 235.879 520.195 cv
235.891 520.258 235.898 520.328 235.898 520.406 cv
cp
f
243.25 516.434 mo
243.246 517.117 243.191 517.734 243.09 518.293 cv
242.98 518.852 242.805 519.332 242.555 519.734 cv
242.305 520.141 241.98 520.453 241.582 520.672 cv
241.184 520.891 240.688 521 240.102 521 cv
239.543 521 239.078 520.902 238.699 520.703 cv
238.316 520.508 238.008 520.219 237.781 519.832 cv
237.547 519.449 237.383 518.973 237.285 518.41 cv
237.188 517.848 237.141 517.203 237.141 516.477 cv
237.141 515.805 237.195 515.187 237.305 514.621 cv
237.414 514.062 237.59 513.582 237.836 513.176 cv
238.078 512.777 238.402 512.465 238.805 512.242 cv
239.203 512.023 239.695 511.914 240.281 511.91 cv
240.84 511.914 241.309 512.012 241.688 512.207 cv
242.066 512.406 242.371 512.699 242.605 513.082 cv
242.836 513.469 243 513.941 243.102 514.5 cv
243.195 515.066 243.246 515.711 243.25 516.434 cv
cp
242.047 516.516 mo
242.043 516.078 242.027 515.68 242 515.328 cv
241.965 514.977 241.918 514.668 241.859 514.398 cv
241.797 514.133 241.719 513.902 241.621 513.707 cv
241.52 513.516 241.402 513.355 241.27 513.23 cv
241.133 513.105 240.977 513.016 240.801 512.957 cv
240.625 512.902 240.43 512.875 240.211 512.871 cv
239.824 512.875 239.508 512.965 239.27 513.145 cv
239.023 513.328 238.836 513.578 238.699 513.895 cv
238.559 514.215 238.461 514.59 238.414 515.016 cv
238.359 515.445 238.336 515.902 238.34 516.395 cv
238.336 517.055 238.371 517.617 238.441 518.078 cv
238.512 518.543 238.617 518.918 238.766 519.207 cv
238.91 519.496 239.102 519.707 239.332 519.84 cv
239.563 519.973 239.84 520.039 240.172 520.039 cv
240.422 520.039 240.648 520 240.844 519.918 cv
241.035 519.836 241.199 519.719 241.34 519.566 cv
241.477 519.414 241.594 519.23 241.688 519.016 cv
241.777 518.805 241.848 518.566 241.906 518.305 cv
241.957 518.047 241.996 517.766 242.016 517.461 cv
242.035 517.16 242.043 516.848 242.047 516.516 cv
cp
f
256 520.406 mo
256 520.496 255.992 520.566 255.977 520.625 cv
255.961 520.687 255.941 520.738 255.922 520.77 cv
255.898 520.809 255.871 520.832 255.844 520.848 cv
255.813 520.863 255.785 520.871 255.754 520.871 cv
251.141 520.871 li
251.105 520.871 251.074 520.863 251.051 520.848 cv
251.02 520.832 250.996 520.809 250.973 520.77 cv
250.945 520.738 250.926 520.687 250.914 520.625 cv
250.898 520.566 250.891 520.496 250.895 520.406 cv
250.891 520.328 250.898 520.258 250.914 520.195 cv
250.926 520.141 250.941 520.09 250.965 520.051 cv
250.984 520.012 251.008 519.984 251.039 519.961 cv
251.066 519.945 251.102 519.934 251.141 519.93 cv
252.984 519.93 li
252.984 513.211 li
251.277 514.23 li
251.188 514.277 251.117 514.305 251.066 514.312 cv
251.012 514.324 250.969 514.312 250.941 514.281 cv
250.906 514.254 250.883 514.203 250.875 514.133 cv
250.859 514.066 250.855 513.98 250.859 513.875 cv
250.855 513.797 250.859 513.73 250.867 513.676 cv
250.875 513.621 250.883 513.578 250.898 513.539 cv
250.91 513.508 250.93 513.477 250.957 513.445 cv
250.98 513.422 251.016 513.395 251.059 513.363 cv
253.09 512.059 li
253.105 512.047 253.129 512.039 253.156 512.027 cv
253.184 512.02 253.219 512.008 253.262 512 cv
253.301 511.992 253.348 511.988 253.406 511.98 cv
253.457 511.98 253.527 511.977 253.609 511.977 cv
253.719 511.977 253.809 511.984 253.883 511.992 cv
253.953 512.004 254.012 512.016 254.055 512.027 cv
254.094 512.047 254.121 512.066 254.137 512.09 cv
254.148 512.117 254.152 512.145 254.156 512.168 cv
254.156 519.93 li
255.754 519.93 li
255.789 519.934 255.82 519.945 255.855 519.961 cv
255.883 519.984 255.91 520.012 255.934 520.051 cv
255.953 520.09 255.969 520.141 255.98 520.195 cv
255.992 520.258 256 520.328 256 520.406 cv
cp
f
263.078 520.406 mo
263.078 520.496 263.07 520.566 263.055 520.625 cv
263.039 520.687 263.02 520.738 263 520.77 cv
262.977 520.809 262.949 520.832 262.922 520.848 cv
262.891 520.863 262.863 520.871 262.832 520.871 cv
258.219 520.871 li
258.184 520.871 258.152 520.863 258.129 520.848 cv
258.098 520.832 258.074 520.809 258.051 520.77 cv
258.023 520.738 258.004 520.687 257.992 520.625 cv
257.977 520.566 257.969 520.496 257.973 520.406 cv
257.969 520.328 257.977 520.258 257.992 520.195 cv
258.004 520.141 258.02 520.09 258.043 520.051 cv
258.063 520.012 258.086 519.984 258.117 519.961 cv
258.145 519.945 258.18 519.934 258.219 519.93 cv
260.063 519.93 li
260.063 513.211 li
258.355 514.23 li
258.266 514.277 258.195 514.305 258.145 514.312 cv
258.09 514.324 258.047 514.312 258.02 514.281 cv
257.984 514.254 257.961 514.203 257.953 514.133 cv
257.938 514.066 257.934 513.98 257.938 513.875 cv
257.934 513.797 257.938 513.73 257.945 513.676 cv
257.953 513.621 257.961 513.578 257.977 513.539 cv
257.988 513.508 258.008 513.477 258.035 513.445 cv
258.059 513.422 258.094 513.395 258.137 513.363 cv
260.168 512.059 li
260.184 512.047 260.207 512.039 260.234 512.027 cv
260.262 512.02 260.297 512.008 260.34 512 cv
260.379 511.992 260.426 511.988 260.484 511.98 cv
260.535 511.98 260.605 511.977 260.688 511.977 cv
260.797 511.977 260.887 511.984 260.961 511.992 cv
261.031 512.004 261.09 512.016 261.133 512.027 cv
261.172 512.047 261.199 512.066 261.215 512.09 cv
261.227 512.117 261.23 512.145 261.234 512.168 cv
261.234 519.93 li
262.832 519.93 li
262.867 519.934 262.898 519.945 262.934 519.961 cv
262.961 519.984 262.988 520.012 263.012 520.051 cv
263.031 520.09 263.047 520.141 263.059 520.195 cv
263.07 520.258 263.078 520.328 263.078 520.406 cv
cp
f
276.098 520.406 mo
276.098 520.496 276.09 520.566 276.074 520.625 cv
276.059 520.687 276.039 520.738 276.02 520.77 cv
275.996 520.809 275.969 520.832 275.941 520.848 cv
275.91 520.863 275.883 520.871 275.852 520.871 cv
271.238 520.871 li
271.203 520.871 271.172 520.863 271.148 520.848 cv
271.117 520.832 271.094 520.809 271.07 520.77 cv
271.043 520.738 271.023 520.687 271.012 520.625 cv
270.996 520.566 270.988 520.496 270.992 520.406 cv
270.988 520.328 270.996 520.258 271.012 520.195 cv
271.023 520.141 271.039 520.09 271.063 520.051 cv
271.082 520.012 271.105 519.984 271.137 519.961 cv
271.164 519.945 271.199 519.934 271.238 519.93 cv
273.082 519.93 li
273.082 513.211 li
271.375 514.23 li
271.285 514.277 271.215 514.305 271.164 514.312 cv
271.109 514.324 271.066 514.312 271.039 514.281 cv
271.004 514.254 270.98 514.203 270.973 514.133 cv
270.957 514.066 270.953 513.98 270.957 513.875 cv
270.953 513.797 270.957 513.73 270.965 513.676 cv
270.973 513.621 270.98 513.578 270.996 513.539 cv
271.008 513.508 271.027 513.477 271.055 513.445 cv
271.078 513.422 271.113 513.395 271.156 513.363 cv
273.188 512.059 li
273.203 512.047 273.227 512.039 273.254 512.027 cv
273.281 512.02 273.316 512.008 273.359 512 cv
273.398 511.992 273.445 511.988 273.504 511.98 cv
273.555 511.98 273.625 511.977 273.707 511.977 cv
273.816 511.977 273.906 511.984 273.98 511.992 cv
274.051 512.004 274.109 512.016 274.152 512.027 cv
274.191 512.047 274.219 512.066 274.234 512.09 cv
274.246 512.117 274.25 512.145 274.254 512.168 cv
274.254 519.93 li
275.852 519.93 li
275.887 519.934 275.918 519.945 275.953 519.961 cv
275.98 519.984 276.008 520.012 276.031 520.051 cv
276.051 520.09 276.066 520.141 276.078 520.195 cv
276.09 520.258 276.098 520.328 276.098 520.406 cv
cp
f
283.16 520.367 mo
283.156 520.449 283.148 520.523 283.141 520.586 cv
283.125 520.652 283.109 520.707 283.094 520.746 cv
283.07 520.793 283.043 520.824 283.012 520.84 cv
282.973 520.863 282.938 520.871 282.898 520.871 cv
278.02 520.871 li
277.949 520.871 277.895 520.863 277.852 520.848 cv
277.801 520.832 277.758 520.809 277.727 520.77 cv
277.688 520.738 277.664 520.684 277.652 520.613 cv
277.633 520.543 277.625 520.461 277.629 520.359 cv
277.625 520.273 277.629 520.191 277.641 520.121 cv
277.645 520.055 277.66 519.996 277.688 519.941 cv
277.707 519.891 277.734 519.836 277.773 519.781 cv
277.805 519.73 277.852 519.676 277.91 519.613 cv
279.676 517.801 li
280.082 517.383 280.406 517.008 280.656 516.676 cv
280.898 516.344 281.09 516.043 281.227 515.766 cv
281.359 515.496 281.449 515.246 281.492 515.023 cv
281.531 514.801 281.551 514.594 281.555 514.395 cv
281.551 514.199 281.52 514.012 281.457 513.836 cv
281.391 513.664 281.293 513.512 281.172 513.379 cv
281.043 513.25 280.887 513.145 280.703 513.062 cv
280.512 512.988 280.297 512.949 280.055 512.945 cv
279.766 512.949 279.508 512.988 279.281 513.062 cv
279.051 513.145 278.852 513.23 278.684 513.316 cv
278.508 513.41 278.363 513.492 278.254 513.566 cv
278.137 513.648 278.051 513.687 277.996 513.684 cv
277.961 513.687 277.934 513.68 277.91 513.656 cv
277.883 513.641 277.859 513.609 277.844 513.566 cv
277.824 513.527 277.813 513.473 277.805 513.402 cv
277.793 513.336 277.789 513.254 277.793 513.156 cv
277.789 513.09 277.793 513.031 277.801 512.98 cv
277.805 512.934 277.813 512.891 277.824 512.852 cv
277.832 512.816 277.844 512.781 277.867 512.75 cv
277.883 512.719 277.922 512.68 277.977 512.629 cv
278.031 512.586 278.125 512.523 278.258 512.437 cv
278.391 512.359 278.559 512.277 278.766 512.191 cv
278.965 512.113 279.188 512.047 279.434 511.992 cv
279.676 511.941 279.934 511.914 280.203 511.91 cv
280.629 511.914 281 511.973 281.324 512.09 cv
281.645 512.211 281.914 512.375 282.125 512.586 cv
282.336 512.797 282.492 513.043 282.598 513.316 cv
282.703 513.598 282.758 513.891 282.758 514.203 cv
282.758 514.484 282.73 514.766 282.68 515.047 cv
282.629 515.328 282.523 515.633 282.363 515.953 cv
282.199 516.281 281.965 516.641 281.664 517.039 cv
281.355 517.437 280.953 517.898 280.449 518.414 cv
279.051 519.875 li
282.895 519.875 li
282.926 519.875 282.961 519.887 283 519.906 cv
283.031 519.93 283.063 519.961 283.086 520 cv
283.109 520.043 283.125 520.094 283.141 520.152 cv
283.148 520.215 283.156 520.285 283.16 520.367 cv
cp
f
296.18 520.406 mo
296.18 520.496 296.172 520.566 296.156 520.625 cv
296.141 520.687 296.121 520.738 296.102 520.77 cv
296.078 520.809 296.051 520.832 296.023 520.848 cv
295.992 520.863 295.965 520.871 295.934 520.871 cv
291.32 520.871 li
291.285 520.871 291.254 520.863 291.23 520.848 cv
291.199 520.832 291.176 520.809 291.152 520.77 cv
291.125 520.738 291.105 520.687 291.094 520.625 cv
291.078 520.566 291.07 520.496 291.074 520.406 cv
291.07 520.328 291.078 520.258 291.094 520.195 cv
291.105 520.141 291.121 520.09 291.145 520.051 cv
291.164 520.012 291.188 519.984 291.219 519.961 cv
291.246 519.945 291.281 519.934 291.32 519.93 cv
293.164 519.93 li
293.164 513.211 li
291.457 514.23 li
291.367 514.277 291.297 514.305 291.246 514.312 cv
291.191 514.324 291.148 514.312 291.121 514.281 cv
291.086 514.254 291.063 514.203 291.055 514.133 cv
291.039 514.066 291.035 513.98 291.039 513.875 cv
291.035 513.797 291.039 513.73 291.047 513.676 cv
291.055 513.621 291.063 513.578 291.078 513.539 cv
291.09 513.508 291.109 513.477 291.137 513.445 cv
291.16 513.422 291.195 513.395 291.238 513.363 cv
293.27 512.059 li
293.285 512.047 293.309 512.039 293.336 512.027 cv
293.363 512.02 293.398 512.008 293.441 512 cv
293.48 511.992 293.527 511.988 293.586 511.98 cv
293.637 511.98 293.707 511.977 293.789 511.977 cv
293.898 511.977 293.988 511.984 294.063 511.992 cv
294.133 512.004 294.191 512.016 294.234 512.027 cv
294.273 512.047 294.301 512.066 294.316 512.09 cv
294.328 512.117 294.332 512.145 294.336 512.168 cv
294.336 519.93 li
295.934 519.93 li
295.969 519.934 296 519.945 296.035 519.961 cv
296.063 519.984 296.09 520.012 296.113 520.051 cv
296.133 520.09 296.148 520.141 296.16 520.195 cv
296.172 520.258 296.18 520.328 296.18 520.406 cv
cp
f
303.168 518.344 mo
303.164 518.754 303.094 519.117 302.957 519.441 cv
302.813 519.77 302.609 520.051 302.348 520.277 cv
302.082 520.512 301.758 520.687 301.371 520.812 cv
300.984 520.937 300.547 521 300.063 521 cv
299.766 521 299.488 520.977 299.234 520.93 cv
298.973 520.883 298.746 520.828 298.547 520.762 cv
298.344 520.695 298.176 520.625 298.047 520.555 cv
297.914 520.484 297.832 520.434 297.801 520.402 cv
297.766 520.371 297.738 520.34 297.723 520.305 cv
297.699 520.277 297.684 520.238 297.672 520.191 cv
297.656 520.145 297.645 520.09 297.641 520.023 cv
297.633 519.957 297.633 519.875 297.633 519.777 cv
297.633 519.617 297.648 519.504 297.68 519.437 cv
297.711 519.379 297.758 519.348 297.82 519.344 cv
297.863 519.348 297.945 519.383 298.07 519.453 cv
298.191 519.523 298.352 519.602 298.547 519.687 cv
298.738 519.773 298.961 519.852 299.223 519.922 cv
299.48 519.996 299.77 520.035 300.09 520.031 cv
300.395 520.035 300.668 519.996 300.902 519.918 cv
301.137 519.844 301.332 519.734 301.492 519.59 cv
301.648 519.449 301.766 519.281 301.848 519.086 cv
301.926 518.895 301.969 518.684 301.969 518.453 cv
301.969 518.207 301.918 517.98 301.816 517.777 cv
301.715 517.578 301.566 517.406 301.371 517.262 cv
301.176 517.117 300.934 517.008 300.652 516.926 cv
300.363 516.852 300.043 516.812 299.684 516.809 cv
298.816 516.809 li
298.777 516.812 298.738 516.805 298.703 516.785 cv
298.668 516.773 298.637 516.746 298.613 516.707 cv
298.586 516.672 298.566 516.625 298.551 516.566 cv
298.531 516.508 298.523 516.43 298.527 516.332 cv
298.523 516.25 298.531 516.18 298.547 516.117 cv
298.559 516.062 298.578 516.016 298.605 515.98 cv
298.629 515.949 298.656 515.926 298.691 515.906 cv
298.719 515.895 298.754 515.887 298.801 515.883 cv
299.57 515.883 li
299.871 515.887 300.141 515.848 300.379 515.766 cv
300.617 515.691 300.82 515.578 300.988 515.43 cv
301.152 515.285 301.281 515.113 301.371 514.91 cv
301.457 514.711 301.5 514.484 301.504 514.23 cv
301.5 514.051 301.469 513.875 301.414 513.707 cv
301.352 513.543 301.266 513.398 301.148 513.273 cv
301.031 513.152 300.879 513.055 300.695 512.984 cv
300.508 512.914 300.293 512.879 300.055 512.879 cv
299.789 512.879 299.547 512.922 299.328 513 cv
299.102 513.082 298.906 513.164 298.738 513.254 cv
298.563 513.348 298.418 513.434 298.309 513.512 cv
298.191 513.59 298.113 513.629 298.07 513.629 cv
298.035 513.629 298.008 513.625 297.984 513.613 cv
297.957 513.602 297.934 513.578 297.922 513.543 cv
297.902 513.512 297.891 513.465 297.887 513.402 cv
297.879 513.344 297.879 513.262 297.879 513.156 cv
297.879 513.09 297.879 513.031 297.883 512.977 cv
297.887 512.93 297.895 512.883 297.91 512.84 cv
297.922 512.805 297.941 512.77 297.961 512.734 cv
297.977 512.707 298.004 512.672 298.051 512.625 cv
298.09 512.586 298.18 512.523 298.313 512.437 cv
298.445 512.359 298.605 512.277 298.801 512.191 cv
298.992 512.113 299.219 512.047 299.473 511.992 cv
299.723 511.941 299.992 511.914 300.289 511.91 cv
300.695 511.914 301.055 511.965 301.367 512.066 cv
301.672 512.172 301.93 512.32 302.141 512.512 cv
302.344 512.703 302.5 512.93 302.605 513.195 cv
302.703 513.461 302.754 513.758 302.758 514.078 cv
302.754 514.359 302.719 514.617 302.648 514.855 cv
302.574 515.094 302.465 515.305 302.328 515.488 cv
302.184 515.676 302.012 515.832 301.809 515.961 cv
301.602 516.09 301.367 516.18 301.102 516.23 cv
301.102 516.242 li
301.406 516.273 301.684 516.352 301.938 516.473 cv
302.188 516.594 302.406 516.746 302.59 516.926 cv
302.77 517.113 302.91 517.324 303.016 517.566 cv
303.113 517.809 303.164 518.07 303.168 518.344 cv
cp
f
316.277 520.406 mo
316.277 520.496 316.27 520.566 316.254 520.625 cv
316.238 520.687 316.219 520.738 316.199 520.77 cv
316.176 520.809 316.148 520.832 316.121 520.848 cv
316.09 520.863 316.063 520.871 316.031 520.871 cv
311.418 520.871 li
311.383 520.871 311.352 520.863 311.328 520.848 cv
311.297 520.832 311.273 520.809 311.25 520.77 cv
311.223 520.738 311.203 520.687 311.191 520.625 cv
311.176 520.566 311.168 520.496 311.172 520.406 cv
311.168 520.328 311.176 520.258 311.191 520.195 cv
311.203 520.141 311.219 520.09 311.242 520.051 cv
311.262 520.012 311.285 519.984 311.316 519.961 cv
311.344 519.945 311.379 519.934 311.418 519.93 cv
313.262 519.93 li
313.262 513.211 li
311.555 514.23 li
311.465 514.277 311.395 514.305 311.344 514.312 cv
311.289 514.324 311.246 514.312 311.219 514.281 cv
311.184 514.254 311.16 514.203 311.152 514.133 cv
311.137 514.066 311.133 513.98 311.137 513.875 cv
311.133 513.797 311.137 513.73 311.145 513.676 cv
311.152 513.621 311.16 513.578 311.176 513.539 cv
311.188 513.508 311.207 513.477 311.234 513.445 cv
311.258 513.422 311.293 513.395 311.336 513.363 cv
313.367 512.059 li
313.383 512.047 313.406 512.039 313.434 512.027 cv
313.461 512.02 313.496 512.008 313.539 512 cv
313.578 511.992 313.625 511.988 313.684 511.98 cv
313.734 511.98 313.805 511.977 313.887 511.977 cv
313.996 511.977 314.086 511.984 314.16 511.992 cv
314.23 512.004 314.289 512.016 314.332 512.027 cv
314.371 512.047 314.398 512.066 314.414 512.09 cv
314.426 512.117 314.43 512.145 314.434 512.168 cv
314.434 519.93 li
316.031 519.93 li
316.066 519.934 316.098 519.945 316.133 519.961 cv
316.16 519.984 316.188 520.012 316.211 520.051 cv
316.23 520.09 316.246 520.141 316.258 520.195 cv
316.27 520.258 316.277 520.328 316.277 520.406 cv
cp
f
323.715 518.359 mo
323.711 518.512 323.688 518.629 323.645 518.715 cv
323.598 518.801 323.535 518.844 323.453 518.844 cv
322.457 518.844 li
322.457 520.699 li
322.457 520.738 322.445 520.77 322.43 520.793 cv
322.406 520.824 322.375 520.844 322.332 520.859 cv
322.281 520.875 322.219 520.887 322.148 520.895 cv
322.07 520.902 321.977 520.906 321.859 520.91 cv
321.746 520.906 321.652 520.902 321.578 520.895 cv
321.5 520.887 321.438 520.875 321.398 520.859 cv
321.352 520.844 321.324 520.824 321.309 520.793 cv
321.293 520.77 321.285 520.738 321.285 520.699 cv
321.285 518.844 li
317.672 518.844 li
317.613 518.844 317.57 518.84 317.535 518.824 cv
317.496 518.816 317.461 518.789 317.438 518.75 cv
317.406 518.715 317.387 518.664 317.375 518.594 cv
317.363 518.527 317.359 518.437 317.359 518.324 cv
317.359 518.242 317.359 518.164 317.363 518.094 cv
317.367 518.027 317.375 517.965 317.391 517.906 cv
317.402 517.852 317.422 517.797 317.445 517.742 cv
317.465 517.691 317.492 517.637 317.527 517.574 cv
320.676 512.207 li
320.699 512.172 320.73 512.141 320.777 512.113 cv
320.816 512.086 320.875 512.062 320.945 512.043 cv
321.016 512.027 321.102 512.016 321.203 512.008 cv
321.305 512.004 321.426 512 321.566 511.996 cv
321.719 512 321.852 512.008 321.965 512.016 cv
322.078 512.031 322.168 512.043 322.242 512.059 cv
322.309 512.078 322.363 512.105 322.402 512.133 cv
322.438 512.164 322.457 512.195 322.457 512.234 cv
322.457 517.875 li
323.453 517.875 li
323.531 517.879 323.594 517.918 323.641 517.996 cv
323.688 518.078 323.711 518.199 323.715 518.359 cv
cp
321.285 513.027 mo
321.27 513.027 li
318.43 517.875 li
321.285 517.875 li
cp
f
336.379 520.406 mo
336.379 520.496 336.371 520.566 336.355 520.625 cv
336.34 520.687 336.32 520.738 336.301 520.77 cv
336.277 520.809 336.25 520.832 336.223 520.848 cv
336.191 520.863 336.164 520.871 336.133 520.871 cv
331.52 520.871 li
331.484 520.871 331.453 520.863 331.43 520.848 cv
331.398 520.832 331.375 520.809 331.352 520.77 cv
331.324 520.738 331.305 520.687 331.293 520.625 cv
331.277 520.566 331.27 520.496 331.273 520.406 cv
331.27 520.328 331.277 520.258 331.293 520.195 cv
331.305 520.141 331.32 520.09 331.344 520.051 cv
331.363 520.012 331.387 519.984 331.418 519.961 cv
331.445 519.945 331.48 519.934 331.52 519.93 cv
333.363 519.93 li
333.363 513.211 li
331.656 514.23 li
331.566 514.277 331.496 514.305 331.445 514.312 cv
331.391 514.324 331.348 514.312 331.32 514.281 cv
331.285 514.254 331.262 514.203 331.254 514.133 cv
331.238 514.066 331.234 513.98 331.238 513.875 cv
331.234 513.797 331.238 513.73 331.246 513.676 cv
331.254 513.621 331.262 513.578 331.277 513.539 cv
331.289 513.508 331.309 513.477 331.336 513.445 cv
331.359 513.422 331.395 513.395 331.438 513.363 cv
333.469 512.059 li
333.484 512.047 333.508 512.039 333.535 512.027 cv
333.563 512.02 333.598 512.008 333.641 512 cv
333.68 511.992 333.727 511.988 333.785 511.98 cv
333.836 511.98 333.906 511.977 333.988 511.977 cv
334.098 511.977 334.188 511.984 334.262 511.992 cv
334.332 512.004 334.391 512.016 334.434 512.027 cv
334.473 512.047 334.5 512.066 334.516 512.09 cv
334.527 512.117 334.531 512.145 334.535 512.168 cv
334.535 519.93 li
336.133 519.93 li
336.168 519.934 336.199 519.945 336.234 519.961 cv
336.262 519.984 336.289 520.012 336.313 520.051 cv
336.332 520.09 336.348 520.141 336.359 520.195 cv
336.371 520.258 336.379 520.328 336.379 520.406 cv
cp
f
343.395 518.031 mo
343.391 518.508 343.313 518.93 343.156 519.297 cv
342.996 519.668 342.77 519.977 342.48 520.227 cv
342.184 520.48 341.836 520.676 341.438 520.805 cv
341.031 520.937 340.586 521 340.098 521 cv
339.82 521 339.563 520.98 339.32 520.941 cv
339.074 520.902 338.855 520.855 338.664 520.801 cv
338.473 520.746 338.313 520.691 338.191 520.633 cv
338.066 520.582 337.988 520.539 337.957 520.504 cv
337.918 520.473 337.895 520.441 337.887 520.414 cv
337.871 520.387 337.859 520.355 337.848 520.316 cv
337.836 520.281 337.828 520.23 337.824 520.168 cv
337.816 520.109 337.813 520.039 337.816 519.957 cv
337.813 519.879 337.816 519.812 337.828 519.75 cv
337.832 519.691 337.848 519.641 337.867 519.598 cv
337.883 519.562 337.902 519.531 337.93 519.512 cv
337.953 519.496 337.98 519.488 338.016 519.484 cv
338.059 519.488 338.129 519.516 338.227 519.57 cv
338.32 519.629 338.449 519.691 338.613 519.758 cv
338.77 519.824 338.973 519.887 339.215 519.945 cv
339.453 520.004 339.734 520.035 340.063 520.031 cv
340.367 520.035 340.648 519.996 340.902 519.922 cv
341.156 519.852 341.375 519.738 341.563 519.582 cv
341.746 519.426 341.891 519.23 341.996 518.996 cv
342.098 518.762 342.148 518.477 342.152 518.141 cv
342.148 517.859 342.105 517.613 342.02 517.395 cv
341.93 517.184 341.793 517.004 341.609 516.855 cv
341.422 516.715 341.188 516.605 340.91 516.535 cv
340.625 516.465 340.289 516.43 339.898 516.426 cv
339.621 516.43 339.383 516.445 339.184 516.469 cv
338.98 516.5 338.793 516.512 338.625 516.508 cv
338.492 516.512 338.402 516.484 338.352 516.422 cv
338.293 516.367 338.266 516.25 338.27 516.078 cv
338.27 512.48 li
338.266 512.332 338.301 512.223 338.375 512.148 cv
338.441 512.078 338.543 512.043 338.68 512.039 cv
342.59 512.039 li
342.625 512.043 342.66 512.051 342.695 512.07 cv
342.727 512.09 342.754 512.121 342.781 512.16 cv
342.801 512.203 342.816 512.258 342.832 512.32 cv
342.84 512.387 342.848 512.461 342.848 512.543 cv
342.848 512.711 342.824 512.836 342.781 512.926 cv
342.738 513.02 342.68 513.066 342.602 513.062 cv
339.441 513.062 li
339.441 515.539 li
339.594 515.516 339.75 515.504 339.91 515.5 cv
340.07 515.496 340.258 515.492 340.469 515.492 cv
340.953 515.492 341.375 515.555 341.742 515.676 cv
342.102 515.797 342.406 515.969 342.652 516.187 cv
342.895 516.41 343.078 516.676 343.207 516.988 cv
343.328 517.305 343.391 517.652 343.395 518.031 cv
cp
f
356.477 520.406 mo
356.477 520.496 356.469 520.566 356.453 520.625 cv
356.438 520.687 356.418 520.738 356.398 520.77 cv
356.375 520.809 356.348 520.832 356.32 520.848 cv
356.289 520.863 356.262 520.871 356.23 520.871 cv
351.617 520.871 li
351.582 520.871 351.551 520.863 351.527 520.848 cv
351.496 520.832 351.473 520.809 351.449 520.77 cv
351.422 520.738 351.402 520.687 351.391 520.625 cv
351.375 520.566 351.367 520.496 351.371 520.406 cv
351.367 520.328 351.375 520.258 351.391 520.195 cv
351.402 520.141 351.418 520.09 351.441 520.051 cv
351.461 520.012 351.484 519.984 351.516 519.961 cv
351.543 519.945 351.578 519.934 351.617 519.93 cv
353.461 519.93 li
353.461 513.211 li
351.754 514.23 li
351.664 514.277 351.594 514.305 351.543 514.312 cv
351.488 514.324 351.445 514.312 351.418 514.281 cv
351.383 514.254 351.359 514.203 351.352 514.133 cv
351.336 514.066 351.332 513.98 351.336 513.875 cv
351.332 513.797 351.336 513.73 351.344 513.676 cv
351.352 513.621 351.359 513.578 351.375 513.539 cv
351.387 513.508 351.406 513.477 351.434 513.445 cv
351.457 513.422 351.492 513.395 351.535 513.363 cv
353.566 512.059 li
353.582 512.047 353.605 512.039 353.633 512.027 cv
353.66 512.02 353.695 512.008 353.738 512 cv
353.777 511.992 353.824 511.988 353.883 511.98 cv
353.934 511.98 354.004 511.977 354.086 511.977 cv
354.195 511.977 354.285 511.984 354.359 511.992 cv
354.43 512.004 354.488 512.016 354.531 512.027 cv
354.57 512.047 354.598 512.066 354.613 512.09 cv
354.625 512.117 354.629 512.145 354.633 512.168 cv
354.633 519.93 li
356.23 519.93 li
356.266 519.934 356.297 519.945 356.332 519.961 cv
356.359 519.984 356.387 520.012 356.41 520.051 cv
356.43 520.09 356.445 520.141 356.457 520.195 cv
356.469 520.258 356.477 520.328 356.477 520.406 cv
cp
f
363.762 518.012 mo
363.758 518.398 363.699 518.773 363.582 519.133 cv
363.465 519.496 363.281 519.816 363.039 520.09 cv
362.789 520.371 362.48 520.59 362.105 520.754 cv
361.727 520.918 361.277 521 360.766 521 cv
360.395 521 360.07 520.957 359.789 520.863 cv
359.504 520.777 359.258 520.648 359.051 520.477 cv
358.84 520.312 358.668 520.105 358.531 519.855 cv
358.391 519.613 358.277 519.332 358.195 519.016 cv
358.109 518.703 358.051 518.359 358.016 517.984 cv
357.977 517.613 357.957 517.211 357.961 516.781 cv
357.957 516.406 357.977 516.027 358.02 515.637 cv
358.059 515.254 358.133 514.879 358.238 514.516 cv
358.344 514.16 358.484 513.824 358.668 513.504 cv
358.844 513.191 359.07 512.914 359.344 512.676 cv
359.613 512.445 359.938 512.262 360.316 512.121 cv
360.691 511.988 361.129 511.918 361.633 511.914 cv
361.797 511.918 361.969 511.93 362.145 511.945 cv
362.316 511.969 362.477 511.996 362.621 512.027 cv
362.766 512.066 362.887 512.102 362.988 512.141 cv
363.086 512.184 363.152 512.219 363.188 512.242 cv
363.219 512.27 363.242 512.297 363.262 512.324 cv
363.273 512.355 363.285 512.387 363.297 512.418 cv
363.305 512.453 363.313 512.492 363.32 512.535 cv
363.32 512.578 363.324 512.629 363.328 512.691 cv
363.324 512.777 363.324 512.852 363.324 512.906 cv
363.32 512.969 363.309 513.016 363.297 513.047 cv
363.277 513.086 363.258 513.113 363.234 513.129 cv
363.207 513.152 363.176 513.16 363.137 513.156 cv
363.082 513.16 363.012 513.145 362.93 513.109 cv
362.84 513.082 362.734 513.047 362.617 513.004 cv
362.492 512.969 362.344 512.934 362.168 512.898 cv
361.992 512.871 361.789 512.855 361.559 512.852 cv
361.133 512.855 360.77 512.941 360.465 513.109 cv
360.16 513.285 359.91 513.516 359.719 513.805 cv
359.523 514.098 359.379 514.437 359.289 514.82 cv
359.191 515.207 359.141 515.609 359.129 516.023 cv
359.246 515.961 359.379 515.891 359.527 515.82 cv
359.676 515.754 359.836 515.695 360.012 515.637 cv
360.184 515.586 360.367 515.539 360.566 515.504 cv
360.762 515.469 360.973 515.453 361.195 515.449 cv
361.672 515.453 362.074 515.516 362.402 515.645 cv
362.727 515.777 362.992 515.961 363.199 516.187 cv
363.398 516.422 363.543 516.691 363.633 517 cv
363.715 517.312 363.758 517.648 363.762 518.012 cv
cp
362.574 518.121 mo
362.574 517.859 362.547 517.617 362.496 517.398 cv
362.441 517.184 362.355 517 362.234 516.852 cv
362.109 516.703 361.945 516.59 361.742 516.504 cv
361.535 516.426 361.281 516.383 360.984 516.379 cv
360.813 516.383 360.645 516.398 360.477 516.426 cv
360.309 516.457 360.145 516.496 359.992 516.547 cv
359.832 516.602 359.684 516.664 359.539 516.73 cv
359.395 516.805 359.262 516.883 359.148 516.961 cv
359.145 517.551 359.184 518.039 359.262 518.434 cv
359.336 518.832 359.445 519.152 359.59 519.387 cv
359.73 519.629 359.91 519.797 360.125 519.898 cv
360.336 520 360.586 520.051 360.875 520.051 cv
361.164 520.051 361.414 519.996 361.633 519.887 cv
361.844 519.777 362.023 519.633 362.164 519.449 cv
362.305 519.266 362.406 519.059 362.477 518.828 cv
362.539 518.598 362.574 518.363 362.574 518.121 cv
cp
f
376.559 520.406 mo
376.559 520.496 376.551 520.566 376.535 520.625 cv
376.52 520.687 376.5 520.738 376.48 520.77 cv
376.457 520.809 376.43 520.832 376.402 520.848 cv
376.371 520.863 376.344 520.871 376.313 520.871 cv
371.699 520.871 li
371.664 520.871 371.633 520.863 371.609 520.848 cv
371.578 520.832 371.555 520.809 371.531 520.77 cv
371.504 520.738 371.484 520.687 371.473 520.625 cv
371.457 520.566 371.449 520.496 371.453 520.406 cv
371.449 520.328 371.457 520.258 371.473 520.195 cv
371.484 520.141 371.5 520.09 371.523 520.051 cv
371.543 520.012 371.566 519.984 371.598 519.961 cv
371.625 519.945 371.66 519.934 371.699 519.93 cv
373.543 519.93 li
373.543 513.211 li
371.836 514.23 li
371.746 514.277 371.676 514.305 371.625 514.312 cv
371.57 514.324 371.527 514.312 371.5 514.281 cv
371.465 514.254 371.441 514.203 371.434 514.133 cv
371.418 514.066 371.414 513.98 371.418 513.875 cv
371.414 513.797 371.418 513.73 371.426 513.676 cv
371.434 513.621 371.441 513.578 371.457 513.539 cv
371.469 513.508 371.488 513.477 371.516 513.445 cv
371.539 513.422 371.574 513.395 371.617 513.363 cv
373.648 512.059 li
373.664 512.047 373.688 512.039 373.715 512.027 cv
373.742 512.02 373.777 512.008 373.82 512 cv
373.859 511.992 373.906 511.988 373.965 511.98 cv
374.016 511.98 374.086 511.977 374.168 511.977 cv
374.277 511.977 374.367 511.984 374.441 511.992 cv
374.512 512.004 374.57 512.016 374.613 512.027 cv
374.652 512.047 374.68 512.066 374.695 512.09 cv
374.707 512.117 374.711 512.145 374.715 512.168 cv
374.715 519.93 li
376.313 519.93 li
376.348 519.934 376.379 519.945 376.414 519.961 cv
376.441 519.984 376.469 520.012 376.492 520.051 cv
376.512 520.09 376.527 520.141 376.539 520.195 cv
376.551 520.258 376.559 520.328 376.559 520.406 cv
cp
f
383.746 512.543 mo
383.742 512.629 383.738 512.703 383.734 512.766 cv
383.727 512.836 383.719 512.898 383.707 512.957 cv
383.695 513.02 383.68 513.078 383.66 513.133 cv
383.637 513.191 383.613 513.254 383.59 513.316 cv
380.406 520.645 li
380.383 520.703 380.355 520.75 380.32 520.781 cv
380.285 520.82 380.242 520.848 380.191 520.863 cv
380.137 520.883 380.066 520.891 379.988 520.898 cv
379.902 520.902 379.805 520.906 379.691 520.91 cv
379.531 520.906 379.41 520.898 379.328 520.891 cv
379.238 520.875 379.176 520.859 379.141 520.828 cv
379.098 520.801 379.082 520.762 379.09 520.719 cv
379.094 520.676 379.109 520.625 379.137 520.562 cv
382.484 513.07 li
378.242 513.07 li
378.152 513.074 378.09 513.027 378.047 512.934 cv
378.004 512.844 377.98 512.715 377.984 512.551 cv
377.98 512.465 377.988 512.391 378 512.328 cv
378.012 512.266 378.027 512.211 378.051 512.164 cv
378.07 512.121 378.098 512.09 378.133 512.07 cv
378.164 512.051 378.199 512.043 378.242 512.039 cv
383.391 512.039 li
383.453 512.043 383.508 512.047 383.555 512.059 cv
383.602 512.074 383.637 512.102 383.664 512.141 cv
383.688 512.184 383.707 512.238 383.723 512.301 cv
383.734 512.367 383.742 512.449 383.746 512.543 cv
cp
f
396.656 520.406 mo
396.656 520.496 396.648 520.566 396.633 520.625 cv
396.617 520.687 396.598 520.738 396.578 520.77 cv
396.555 520.809 396.527 520.832 396.5 520.848 cv
396.469 520.863 396.441 520.871 396.41 520.871 cv
391.797 520.871 li
391.762 520.871 391.73 520.863 391.707 520.848 cv
391.676 520.832 391.652 520.809 391.629 520.77 cv
391.602 520.738 391.582 520.687 391.57 520.625 cv
391.555 520.566 391.547 520.496 391.551 520.406 cv
391.547 520.328 391.555 520.258 391.57 520.195 cv
391.582 520.141 391.598 520.09 391.621 520.051 cv
391.641 520.012 391.664 519.984 391.695 519.961 cv
391.723 519.945 391.758 519.934 391.797 519.93 cv
393.641 519.93 li
393.641 513.211 li
391.934 514.23 li
391.844 514.277 391.773 514.305 391.723 514.312 cv
391.668 514.324 391.625 514.312 391.598 514.281 cv
391.563 514.254 391.539 514.203 391.531 514.133 cv
391.516 514.066 391.512 513.98 391.516 513.875 cv
391.512 513.797 391.516 513.73 391.523 513.676 cv
391.531 513.621 391.539 513.578 391.555 513.539 cv
391.566 513.508 391.586 513.477 391.613 513.445 cv
391.637 513.422 391.672 513.395 391.715 513.363 cv
393.746 512.059 li
393.762 512.047 393.785 512.039 393.813 512.027 cv
393.84 512.02 393.875 512.008 393.918 512 cv
393.957 511.992 394.004 511.988 394.063 511.98 cv
394.113 511.98 394.184 511.977 394.266 511.977 cv
394.375 511.977 394.465 511.984 394.539 511.992 cv
394.609 512.004 394.668 512.016 394.711 512.027 cv
394.75 512.047 394.777 512.066 394.793 512.09 cv
394.805 512.117 394.809 512.145 394.813 512.168 cv
394.813 519.93 li
396.41 519.93 li
396.445 519.934 396.477 519.945 396.512 519.961 cv
396.539 519.984 396.566 520.012 396.59 520.051 cv
396.609 520.09 396.625 520.141 396.637 520.195 cv
396.648 520.258 396.656 520.328 396.656 520.406 cv
cp
f
403.922 518.605 mo
403.918 518.992 403.852 519.332 403.715 519.629 cv
403.578 519.926 403.379 520.18 403.125 520.383 cv
402.867 520.59 402.551 520.742 402.176 520.844 cv
401.793 520.949 401.363 521 400.879 521 cv
400.422 521 400.012 520.953 399.656 520.859 cv
399.293 520.766 398.988 520.625 398.742 520.437 cv
398.488 520.25 398.297 520.02 398.168 519.746 cv
398.031 519.473 397.965 519.16 397.969 518.809 cv
397.965 518.535 398.012 518.281 398.105 518.047 cv
398.195 517.812 398.324 517.598 398.496 517.402 cv
398.664 517.207 398.875 517.027 399.129 516.855 cv
399.375 516.687 399.66 516.523 399.977 516.367 cv
399.703 516.227 399.461 516.078 399.25 515.918 cv
399.039 515.766 398.859 515.594 398.719 515.406 cv
398.57 515.223 398.461 515.027 398.391 514.816 cv
398.313 514.613 398.277 514.383 398.277 514.133 cv
398.277 513.824 398.332 513.535 398.445 513.262 cv
398.555 512.992 398.723 512.758 398.949 512.559 cv
399.172 512.359 399.457 512.203 399.809 512.086 cv
400.152 511.973 400.559 511.914 401.027 511.91 cv
401.469 511.914 401.855 511.965 402.184 512.07 cv
402.508 512.18 402.777 512.328 402.988 512.508 cv
403.199 512.695 403.355 512.91 403.457 513.156 cv
403.559 513.41 403.609 513.68 403.609 513.965 cv
403.609 514.199 403.57 514.422 403.496 514.633 cv
403.418 514.848 403.309 515.051 403.164 515.242 cv
403.016 515.434 402.836 515.613 402.629 515.777 cv
402.414 515.945 402.172 516.098 401.902 516.242 cv
402.223 516.402 402.512 516.566 402.766 516.734 cv
403.016 516.906 403.227 517.09 403.398 517.277 cv
403.57 517.473 403.699 517.676 403.789 517.891 cv
403.875 518.109 403.918 518.348 403.922 518.605 cv
cp
402.449 514.07 mo
402.449 513.883 402.414 513.711 402.348 513.555 cv
402.281 513.402 402.184 513.27 402.059 513.156 cv
401.926 513.051 401.77 512.969 401.582 512.91 cv
401.395 512.855 401.18 512.828 400.938 512.824 cv
400.445 512.828 400.074 512.937 399.824 513.16 cv
399.57 513.383 399.441 513.687 399.445 514.07 cv
399.441 514.254 399.473 514.422 399.535 514.57 cv
399.594 514.727 399.691 514.871 399.824 515.004 cv
399.953 515.145 400.117 515.277 400.316 515.402 cv
400.512 515.535 400.746 515.668 401.02 515.805 cv
401.48 515.57 401.832 515.309 402.078 515.02 cv
402.324 514.734 402.449 514.418 402.449 514.07 cv
cp
402.734 518.727 mo
402.73 518.52 402.691 518.332 402.617 518.16 cv
402.539 517.992 402.422 517.832 402.266 517.68 cv
402.105 517.535 401.91 517.391 401.68 517.25 cv
401.441 517.113 401.168 516.969 400.863 516.816 cv
400.574 516.957 400.324 517.102 400.109 517.242 cv
399.891 517.387 399.715 517.531 399.578 517.68 cv
399.438 517.832 399.332 517.988 399.262 518.152 cv
399.191 518.316 399.156 518.5 399.156 518.699 cv
399.156 519.145 399.305 519.488 399.609 519.727 cv
399.91 519.969 400.363 520.086 400.965 520.086 cv
401.547 520.086 401.988 519.965 402.285 519.723 cv
402.582 519.48 402.73 519.148 402.734 518.727 cv
cp
f
416.758 520.406 mo
416.758 520.496 416.75 520.566 416.734 520.625 cv
416.719 520.687 416.699 520.738 416.68 520.77 cv
416.656 520.809 416.629 520.832 416.602 520.848 cv
416.57 520.863 416.543 520.871 416.512 520.871 cv
411.898 520.871 li
411.863 520.871 411.832 520.863 411.809 520.848 cv
411.777 520.832 411.754 520.809 411.73 520.77 cv
411.703 520.738 411.684 520.687 411.672 520.625 cv
411.656 520.566 411.648 520.496 411.652 520.406 cv
411.648 520.328 411.656 520.258 411.672 520.195 cv
411.684 520.141 411.699 520.09 411.723 520.051 cv
411.742 520.012 411.766 519.984 411.797 519.961 cv
411.824 519.945 411.859 519.934 411.898 519.93 cv
413.742 519.93 li
413.742 513.211 li
412.035 514.23 li
411.945 514.277 411.875 514.305 411.824 514.312 cv
411.77 514.324 411.727 514.312 411.699 514.281 cv
411.664 514.254 411.641 514.203 411.633 514.133 cv
411.617 514.066 411.613 513.98 411.617 513.875 cv
411.613 513.797 411.617 513.73 411.625 513.676 cv
411.633 513.621 411.641 513.578 411.656 513.539 cv
411.668 513.508 411.688 513.477 411.715 513.445 cv
411.738 513.422 411.773 513.395 411.816 513.363 cv
413.848 512.059 li
413.863 512.047 413.887 512.039 413.914 512.027 cv
413.941 512.02 413.977 512.008 414.02 512 cv
414.059 511.992 414.105 511.988 414.164 511.98 cv
414.215 511.98 414.285 511.977 414.367 511.977 cv
414.477 511.977 414.566 511.984 414.641 511.992 cv
414.711 512.004 414.77 512.016 414.813 512.027 cv
414.852 512.047 414.879 512.066 414.895 512.09 cv
414.906 512.117 414.91 512.145 414.914 512.168 cv
414.914 519.93 li
416.512 519.93 li
416.547 519.934 416.578 519.945 416.613 519.961 cv
416.641 519.984 416.668 520.012 416.691 520.051 cv
416.711 520.09 416.727 520.141 416.738 520.195 cv
416.75 520.258 416.758 520.328 416.758 520.406 cv
cp
f
423.887 516.105 mo
423.887 516.492 423.863 516.879 423.816 517.27 cv
423.77 517.664 423.691 518.039 423.586 518.398 cv
423.473 518.758 423.324 519.098 423.145 519.414 cv
422.957 519.73 422.727 520.008 422.449 520.242 cv
422.168 520.484 421.836 520.668 421.453 520.801 cv
421.066 520.934 420.621 521 420.113 521 cv
419.918 521 419.727 520.984 419.543 520.961 cv
419.355 520.934 419.188 520.906 419.043 520.871 cv
418.895 520.836 418.773 520.801 418.672 520.758 cv
418.57 520.719 418.496 520.676 418.453 520.633 cv
418.406 520.594 418.375 520.539 418.355 520.465 cv
418.332 520.398 418.32 520.305 418.324 520.184 cv
418.32 520.086 418.324 520.004 418.332 519.945 cv
418.34 519.887 418.348 519.844 418.363 519.809 cv
418.375 519.777 418.395 519.754 418.422 519.742 cv
418.445 519.73 418.477 519.723 418.516 519.723 cv
418.563 519.723 418.633 519.742 418.727 519.777 cv
418.813 519.812 418.93 519.852 419.07 519.891 cv
419.211 519.934 419.371 519.969 419.559 520 cv
419.742 520.035 419.953 520.051 420.188 520.051 cv
420.629 520.051 421.008 519.969 421.324 519.797 cv
421.637 519.629 421.895 519.398 422.098 519.109 cv
422.297 518.824 422.445 518.492 422.547 518.113 cv
422.645 517.738 422.703 517.34 422.715 516.918 cv
422.473 517.062 422.18 517.187 421.844 517.293 cv
421.504 517.406 421.121 517.461 420.688 517.457 cv
420.195 517.461 419.781 517.395 419.445 517.258 cv
419.109 517.125 418.84 516.941 418.641 516.707 cv
418.434 516.477 418.289 516.203 418.203 515.883 cv
418.113 515.566 418.066 515.215 418.07 514.836 cv
418.066 514.445 418.125 514.074 418.242 513.723 cv
418.355 513.371 418.531 513.062 418.773 512.789 cv
419.012 512.523 419.32 512.309 419.695 512.148 cv
420.066 511.992 420.512 511.914 421.035 511.91 cv
421.398 511.914 421.727 511.961 422.012 512.051 cv
422.297 512.145 422.543 512.277 422.754 512.453 cv
422.961 512.629 423.137 512.84 423.285 513.086 cv
423.426 513.336 423.543 513.617 423.637 513.93 cv
423.723 514.246 423.789 514.586 423.828 514.949 cv
423.867 515.32 423.887 515.707 423.887 516.105 cv
cp
422.691 515.977 mo
422.691 515.398 422.652 514.906 422.574 514.508 cv
422.496 514.109 422.383 513.789 422.234 513.543 cv
422.086 513.297 421.902 513.117 421.684 513.008 cv
421.465 512.898 421.211 512.844 420.926 512.844 cv
420.625 512.844 420.371 512.898 420.164 513.004 cv
419.953 513.113 419.781 513.258 419.648 513.434 cv
419.512 513.617 419.414 513.82 419.352 514.047 cv
419.289 514.277 419.258 514.512 419.258 514.746 cv
419.258 515.02 419.285 515.266 419.344 515.488 cv
419.398 515.711 419.492 515.898 419.621 516.055 cv
419.746 516.211 419.91 516.332 420.117 516.41 cv
420.32 516.496 420.574 516.535 420.879 516.535 cv
421.219 516.535 421.547 516.484 421.867 516.383 cv
422.18 516.281 422.457 516.148 422.691 515.977 cv
cp
f
436.84 520.367 mo
436.836 520.449 436.828 520.523 436.82 520.586 cv
436.805 520.652 436.789 520.707 436.773 520.746 cv
436.75 520.793 436.723 520.824 436.691 520.84 cv
436.652 520.863 436.617 520.871 436.578 520.871 cv
431.699 520.871 li
431.629 520.871 431.574 520.863 431.531 520.848 cv
431.48 520.832 431.438 520.809 431.406 520.77 cv
431.367 520.738 431.344 520.684 431.332 520.613 cv
431.313 520.543 431.305 520.461 431.309 520.359 cv
431.305 520.273 431.309 520.191 431.32 520.121 cv
431.324 520.055 431.34 519.996 431.367 519.941 cv
431.387 519.891 431.414 519.836 431.453 519.781 cv
431.484 519.73 431.531 519.676 431.59 519.613 cv
433.355 517.801 li
433.762 517.383 434.086 517.008 434.336 516.676 cv
434.578 516.344 434.77 516.043 434.906 515.766 cv
435.039 515.496 435.129 515.246 435.172 515.023 cv
435.211 514.801 435.23 514.594 435.234 514.395 cv
435.23 514.199 435.199 514.012 435.137 513.836 cv
435.07 513.664 434.973 513.512 434.852 513.379 cv
434.723 513.25 434.566 513.145 434.383 513.062 cv
434.191 512.988 433.977 512.949 433.734 512.945 cv
433.445 512.949 433.188 512.988 432.961 513.062 cv
432.73 513.145 432.531 513.23 432.363 513.316 cv
432.188 513.41 432.043 513.492 431.934 513.566 cv
431.816 513.648 431.73 513.687 431.676 513.684 cv
431.641 513.687 431.613 513.68 431.59 513.656 cv
431.563 513.641 431.539 513.609 431.523 513.566 cv
431.504 513.527 431.492 513.473 431.484 513.402 cv
431.473 513.336 431.469 513.254 431.473 513.156 cv
431.469 513.09 431.473 513.031 431.48 512.98 cv
431.484 512.934 431.492 512.891 431.504 512.852 cv
431.512 512.816 431.523 512.781 431.547 512.75 cv
431.563 512.719 431.602 512.68 431.656 512.629 cv
431.711 512.586 431.805 512.523 431.938 512.437 cv
432.07 512.359 432.238 512.277 432.445 512.191 cv
432.645 512.113 432.867 512.047 433.113 511.992 cv
433.355 511.941 433.613 511.914 433.883 511.91 cv
434.309 511.914 434.68 511.973 435.004 512.09 cv
435.324 512.211 435.594 512.375 435.805 512.586 cv
436.016 512.797 436.172 513.043 436.277 513.316 cv
436.383 513.598 436.438 513.891 436.438 514.203 cv
436.438 514.484 436.41 514.766 436.359 515.047 cv
436.309 515.328 436.203 515.633 436.043 515.953 cv
435.879 516.281 435.645 516.641 435.344 517.039 cv
435.035 517.437 434.633 517.898 434.129 518.414 cv
432.73 519.875 li
436.574 519.875 li
436.605 519.875 436.641 519.887 436.68 519.906 cv
436.711 519.93 436.742 519.961 436.766 520 cv
436.789 520.043 436.805 520.094 436.82 520.152 cv
436.828 520.215 436.836 520.285 436.84 520.367 cv
cp
f
444.211 516.434 mo
444.207 517.117 444.152 517.734 444.051 518.293 cv
443.941 518.852 443.766 519.332 443.516 519.734 cv
443.266 520.141 442.941 520.453 442.543 520.672 cv
442.145 520.891 441.648 521 441.063 521 cv
440.504 521 440.039 520.902 439.66 520.703 cv
439.277 520.508 438.969 520.219 438.742 519.832 cv
438.508 519.449 438.344 518.973 438.246 518.41 cv
438.148 517.848 438.102 517.203 438.102 516.477 cv
438.102 515.805 438.156 515.187 438.266 514.621 cv
438.375 514.062 438.551 513.582 438.797 513.176 cv
439.039 512.777 439.363 512.465 439.766 512.242 cv
440.164 512.023 440.656 511.914 441.242 511.91 cv
441.801 511.914 442.27 512.012 442.648 512.207 cv
443.027 512.406 443.332 512.699 443.566 513.082 cv
443.797 513.469 443.961 513.941 444.063 514.5 cv
444.156 515.066 444.207 515.711 444.211 516.434 cv
cp
443.008 516.516 mo
443.004 516.078 442.988 515.68 442.961 515.328 cv
442.926 514.977 442.879 514.668 442.82 514.398 cv
442.758 514.133 442.68 513.902 442.582 513.707 cv
442.48 513.516 442.363 513.355 442.23 513.23 cv
442.094 513.105 441.938 513.016 441.762 512.957 cv
441.586 512.902 441.391 512.875 441.172 512.871 cv
440.785 512.875 440.469 512.965 440.23 513.145 cv
439.984 513.328 439.797 513.578 439.66 513.895 cv
439.52 514.215 439.422 514.59 439.375 515.016 cv
439.32 515.445 439.297 515.902 439.301 516.395 cv
439.297 517.055 439.332 517.617 439.402 518.078 cv
439.473 518.543 439.578 518.918 439.727 519.207 cv
439.871 519.496 440.063 519.707 440.293 519.84 cv
440.523 519.973 440.801 520.039 441.133 520.039 cv
441.383 520.039 441.609 520 441.805 519.918 cv
441.996 519.836 442.16 519.719 442.301 519.566 cv
442.438 519.414 442.555 519.23 442.648 519.016 cv
442.738 518.805 442.809 518.566 442.867 518.305 cv
442.918 518.047 442.957 517.766 442.977 517.461 cv
442.996 517.16 443.004 516.848 443.008 516.516 cv
cp
f
456.938 520.367 mo
456.934 520.449 456.926 520.523 456.918 520.586 cv
456.902 520.652 456.887 520.707 456.871 520.746 cv
456.848 520.793 456.82 520.824 456.789 520.84 cv
456.75 520.863 456.715 520.871 456.676 520.871 cv
451.797 520.871 li
451.727 520.871 451.672 520.863 451.629 520.848 cv
451.578 520.832 451.535 520.809 451.504 520.77 cv
451.465 520.738 451.441 520.684 451.43 520.613 cv
451.41 520.543 451.402 520.461 451.406 520.359 cv
451.402 520.273 451.406 520.191 451.418 520.121 cv
451.422 520.055 451.438 519.996 451.465 519.941 cv
451.484 519.891 451.512 519.836 451.551 519.781 cv
451.582 519.73 451.629 519.676 451.688 519.613 cv
453.453 517.801 li
453.859 517.383 454.184 517.008 454.434 516.676 cv
454.676 516.344 454.867 516.043 455.004 515.766 cv
455.137 515.496 455.227 515.246 455.27 515.023 cv
455.309 514.801 455.328 514.594 455.332 514.395 cv
455.328 514.199 455.297 514.012 455.234 513.836 cv
455.168 513.664 455.07 513.512 454.949 513.379 cv
454.82 513.25 454.664 513.145 454.48 513.062 cv
454.289 512.988 454.074 512.949 453.832 512.945 cv
453.543 512.949 453.285 512.988 453.059 513.062 cv
452.828 513.145 452.629 513.23 452.461 513.316 cv
452.285 513.41 452.141 513.492 452.031 513.566 cv
451.914 513.648 451.828 513.687 451.773 513.684 cv
451.738 513.687 451.711 513.68 451.688 513.656 cv
451.66 513.641 451.637 513.609 451.621 513.566 cv
451.602 513.527 451.59 513.473 451.582 513.402 cv
451.57 513.336 451.566 513.254 451.57 513.156 cv
451.566 513.09 451.57 513.031 451.578 512.98 cv
451.582 512.934 451.59 512.891 451.602 512.852 cv
451.609 512.816 451.621 512.781 451.645 512.75 cv
451.66 512.719 451.699 512.68 451.754 512.629 cv
451.809 512.586 451.902 512.523 452.035 512.437 cv
452.168 512.359 452.336 512.277 452.543 512.191 cv
452.742 512.113 452.965 512.047 453.211 511.992 cv
453.453 511.941 453.711 511.914 453.98 511.91 cv
454.406 511.914 454.777 511.973 455.102 512.09 cv
455.422 512.211 455.691 512.375 455.902 512.586 cv
456.113 512.797 456.27 513.043 456.375 513.316 cv
456.48 513.598 456.535 513.891 456.535 514.203 cv
456.535 514.484 456.508 514.766 456.457 515.047 cv
456.406 515.328 456.301 515.633 456.141 515.953 cv
455.977 516.281 455.742 516.641 455.441 517.039 cv
455.133 517.437 454.73 517.898 454.227 518.414 cv
452.828 519.875 li
456.672 519.875 li
456.703 519.875 456.738 519.887 456.777 519.906 cv
456.809 519.93 456.84 519.961 456.863 520 cv
456.887 520.043 456.902 520.094 456.918 520.152 cv
456.926 520.215 456.934 520.285 456.938 520.367 cv
cp
f
464.039 520.406 mo
464.039 520.496 464.031 520.566 464.016 520.625 cv
464 520.687 463.98 520.738 463.961 520.77 cv
463.938 520.809 463.91 520.832 463.883 520.848 cv
463.852 520.863 463.824 520.871 463.793 520.871 cv
459.18 520.871 li
459.145 520.871 459.113 520.863 459.09 520.848 cv
459.059 520.832 459.035 520.809 459.012 520.77 cv
458.984 520.738 458.965 520.687 458.953 520.625 cv
458.938 520.566 458.93 520.496 458.934 520.406 cv
458.93 520.328 458.938 520.258 458.953 520.195 cv
458.965 520.141 458.98 520.09 459.004 520.051 cv
459.023 520.012 459.047 519.984 459.078 519.961 cv
459.105 519.945 459.141 519.934 459.18 519.93 cv
461.023 519.93 li
461.023 513.211 li
459.316 514.23 li
459.227 514.277 459.156 514.305 459.105 514.312 cv
459.051 514.324 459.008 514.312 458.98 514.281 cv
458.945 514.254 458.922 514.203 458.914 514.133 cv
458.898 514.066 458.895 513.98 458.898 513.875 cv
458.895 513.797 458.898 513.73 458.906 513.676 cv
458.914 513.621 458.922 513.578 458.938 513.539 cv
458.949 513.508 458.969 513.477 458.996 513.445 cv
459.02 513.422 459.055 513.395 459.098 513.363 cv
461.129 512.059 li
461.145 512.047 461.168 512.039 461.195 512.027 cv
461.223 512.02 461.258 512.008 461.301 512 cv
461.34 511.992 461.387 511.988 461.445 511.98 cv
461.496 511.98 461.566 511.977 461.648 511.977 cv
461.758 511.977 461.848 511.984 461.922 511.992 cv
461.992 512.004 462.051 512.016 462.094 512.027 cv
462.133 512.047 462.16 512.066 462.176 512.09 cv
462.188 512.117 462.191 512.145 462.195 512.168 cv
462.195 519.93 li
463.793 519.93 li
463.828 519.934 463.859 519.945 463.895 519.961 cv
463.922 519.984 463.949 520.012 463.973 520.051 cv
463.992 520.09 464.008 520.141 464.02 520.195 cv
464.031 520.258 464.039 520.328 464.039 520.406 cv
cp
f
477.02 520.367 mo
477.016 520.449 477.008 520.523 477 520.586 cv
476.984 520.652 476.969 520.707 476.953 520.746 cv
476.93 520.793 476.902 520.824 476.871 520.84 cv
476.832 520.863 476.797 520.871 476.758 520.871 cv
471.879 520.871 li
471.809 520.871 471.754 520.863 471.711 520.848 cv
471.66 520.832 471.617 520.809 471.586 520.77 cv
471.547 520.738 471.523 520.684 471.512 520.613 cv
471.492 520.543 471.484 520.461 471.488 520.359 cv
471.484 520.273 471.488 520.191 471.5 520.121 cv
471.504 520.055 471.52 519.996 471.547 519.941 cv
471.566 519.891 471.594 519.836 471.633 519.781 cv
471.664 519.73 471.711 519.676 471.77 519.613 cv
473.535 517.801 li
473.941 517.383 474.266 517.008 474.516 516.676 cv
474.758 516.344 474.949 516.043 475.086 515.766 cv
475.219 515.496 475.309 515.246 475.352 515.023 cv
475.391 514.801 475.41 514.594 475.414 514.395 cv
475.41 514.199 475.379 514.012 475.316 513.836 cv
475.25 513.664 475.152 513.512 475.031 513.379 cv
474.902 513.25 474.746 513.145 474.563 513.062 cv
474.371 512.988 474.156 512.949 473.914 512.945 cv
473.625 512.949 473.367 512.988 473.141 513.062 cv
472.91 513.145 472.711 513.23 472.543 513.316 cv
472.367 513.41 472.223 513.492 472.113 513.566 cv
471.996 513.648 471.91 513.687 471.855 513.684 cv
471.82 513.687 471.793 513.68 471.77 513.656 cv
471.742 513.641 471.719 513.609 471.703 513.566 cv
471.684 513.527 471.672 513.473 471.664 513.402 cv
471.652 513.336 471.648 513.254 471.652 513.156 cv
471.648 513.09 471.652 513.031 471.66 512.98 cv
471.664 512.934 471.672 512.891 471.684 512.852 cv
471.691 512.816 471.703 512.781 471.727 512.75 cv
471.742 512.719 471.781 512.68 471.836 512.629 cv
471.891 512.586 471.984 512.523 472.117 512.437 cv
472.25 512.359 472.418 512.277 472.625 512.191 cv
472.824 512.113 473.047 512.047 473.293 511.992 cv
473.535 511.941 473.793 511.914 474.063 511.91 cv
474.488 511.914 474.859 511.973 475.184 512.09 cv
475.504 512.211 475.773 512.375 475.984 512.586 cv
476.195 512.797 476.352 513.043 476.457 513.316 cv
476.563 513.598 476.617 513.891 476.617 514.203 cv
476.617 514.484 476.59 514.766 476.539 515.047 cv
476.488 515.328 476.383 515.633 476.223 515.953 cv
476.059 516.281 475.824 516.641 475.523 517.039 cv
475.215 517.437 474.813 517.898 474.309 518.414 cv
472.91 519.875 li
476.754 519.875 li
476.785 519.875 476.82 519.887 476.859 519.906 cv
476.891 519.93 476.922 519.961 476.945 520 cv
476.969 520.043 476.984 520.094 477 520.152 cv
477.008 520.215 477.016 520.285 477.02 520.367 cv
cp
f
484.098 520.367 mo
484.094 520.449 484.086 520.523 484.078 520.586 cv
484.063 520.652 484.047 520.707 484.031 520.746 cv
484.008 520.793 483.98 520.824 483.949 520.84 cv
483.91 520.863 483.875 520.871 483.836 520.871 cv
478.957 520.871 li
478.887 520.871 478.832 520.863 478.789 520.848 cv
478.738 520.832 478.695 520.809 478.664 520.77 cv
478.625 520.738 478.602 520.684 478.59 520.613 cv
478.57 520.543 478.563 520.461 478.566 520.359 cv
478.563 520.273 478.566 520.191 478.578 520.121 cv
478.582 520.055 478.598 519.996 478.625 519.941 cv
478.645 519.891 478.672 519.836 478.711 519.781 cv
478.742 519.73 478.789 519.676 478.848 519.613 cv
480.613 517.801 li
481.02 517.383 481.344 517.008 481.594 516.676 cv
481.836 516.344 482.027 516.043 482.164 515.766 cv
482.297 515.496 482.387 515.246 482.43 515.023 cv
482.469 514.801 482.488 514.594 482.492 514.395 cv
482.488 514.199 482.457 514.012 482.395 513.836 cv
482.328 513.664 482.23 513.512 482.109 513.379 cv
481.98 513.25 481.824 513.145 481.641 513.062 cv
481.449 512.988 481.234 512.949 480.992 512.945 cv
480.703 512.949 480.445 512.988 480.219 513.062 cv
479.988 513.145 479.789 513.23 479.621 513.316 cv
479.445 513.41 479.301 513.492 479.191 513.566 cv
479.074 513.648 478.988 513.687 478.934 513.684 cv
478.898 513.687 478.871 513.68 478.848 513.656 cv
478.82 513.641 478.797 513.609 478.781 513.566 cv
478.762 513.527 478.75 513.473 478.742 513.402 cv
478.73 513.336 478.727 513.254 478.73 513.156 cv
478.727 513.09 478.73 513.031 478.738 512.98 cv
478.742 512.934 478.75 512.891 478.762 512.852 cv
478.77 512.816 478.781 512.781 478.805 512.75 cv
478.82 512.719 478.859 512.68 478.914 512.629 cv
478.969 512.586 479.063 512.523 479.195 512.437 cv
479.328 512.359 479.496 512.277 479.703 512.191 cv
479.902 512.113 480.125 512.047 480.371 511.992 cv
480.613 511.941 480.871 511.914 481.141 511.91 cv
481.566 511.914 481.938 511.973 482.262 512.09 cv
482.582 512.211 482.852 512.375 483.063 512.586 cv
483.273 512.797 483.43 513.043 483.535 513.316 cv
483.641 513.598 483.695 513.891 483.695 514.203 cv
483.695 514.484 483.668 514.766 483.617 515.047 cv
483.566 515.328 483.461 515.633 483.301 515.953 cv
483.137 516.281 482.902 516.641 482.602 517.039 cv
482.293 517.437 481.891 517.898 481.387 518.414 cv
479.988 519.875 li
483.832 519.875 li
483.863 519.875 483.898 519.887 483.938 519.906 cv
483.969 519.93 484 519.961 484.023 520 cv
484.047 520.043 484.063 520.094 484.078 520.152 cv
484.086 520.215 484.094 520.285 484.098 520.367 cv
cp
f
497.117 520.367 mo
497.113 520.449 497.105 520.523 497.098 520.586 cv
497.082 520.652 497.066 520.707 497.051 520.746 cv
497.027 520.793 497 520.824 496.969 520.84 cv
496.93 520.863 496.895 520.871 496.855 520.871 cv
491.977 520.871 li
491.906 520.871 491.852 520.863 491.809 520.848 cv
491.758 520.832 491.715 520.809 491.684 520.77 cv
491.645 520.738 491.621 520.684 491.609 520.613 cv
491.59 520.543 491.582 520.461 491.586 520.359 cv
491.582 520.273 491.586 520.191 491.598 520.121 cv
491.602 520.055 491.617 519.996 491.645 519.941 cv
491.664 519.891 491.691 519.836 491.73 519.781 cv
491.762 519.73 491.809 519.676 491.867 519.613 cv
493.633 517.801 li
494.039 517.383 494.363 517.008 494.613 516.676 cv
494.855 516.344 495.047 516.043 495.184 515.766 cv
495.316 515.496 495.406 515.246 495.449 515.023 cv
495.488 514.801 495.508 514.594 495.512 514.395 cv
495.508 514.199 495.477 514.012 495.414 513.836 cv
495.348 513.664 495.25 513.512 495.129 513.379 cv
495 513.25 494.844 513.145 494.66 513.062 cv
494.469 512.988 494.254 512.949 494.012 512.945 cv
493.723 512.949 493.465 512.988 493.238 513.062 cv
493.008 513.145 492.809 513.23 492.641 513.316 cv
492.465 513.41 492.32 513.492 492.211 513.566 cv
492.094 513.648 492.008 513.687 491.953 513.684 cv
491.918 513.687 491.891 513.68 491.867 513.656 cv
491.84 513.641 491.816 513.609 491.801 513.566 cv
491.781 513.527 491.77 513.473 491.762 513.402 cv
491.75 513.336 491.746 513.254 491.75 513.156 cv
491.746 513.09 491.75 513.031 491.758 512.98 cv
491.762 512.934 491.77 512.891 491.781 512.852 cv
491.789 512.816 491.801 512.781 491.824 512.75 cv
491.84 512.719 491.879 512.68 491.934 512.629 cv
491.988 512.586 492.082 512.523 492.215 512.437 cv
492.348 512.359 492.516 512.277 492.723 512.191 cv
492.922 512.113 493.145 512.047 493.391 511.992 cv
493.633 511.941 493.891 511.914 494.16 511.91 cv
494.586 511.914 494.957 511.973 495.281 512.09 cv
495.602 512.211 495.871 512.375 496.082 512.586 cv
496.293 512.797 496.449 513.043 496.555 513.316 cv
496.66 513.598 496.715 513.891 496.715 514.203 cv
496.715 514.484 496.688 514.766 496.637 515.047 cv
496.586 515.328 496.48 515.633 496.32 515.953 cv
496.156 516.281 495.922 516.641 495.621 517.039 cv
495.313 517.437 494.91 517.898 494.406 518.414 cv
493.008 519.875 li
496.852 519.875 li
496.883 519.875 496.918 519.887 496.957 519.906 cv
496.988 519.93 497.02 519.961 497.043 520 cv
497.066 520.043 497.082 520.094 497.098 520.152 cv
497.105 520.215 497.113 520.285 497.117 520.367 cv
cp
f
504.129 518.344 mo
504.125 518.754 504.055 519.117 503.918 519.441 cv
503.773 519.77 503.57 520.051 503.309 520.277 cv
503.043 520.512 502.719 520.687 502.332 520.812 cv
501.945 520.937 501.508 521 501.023 521 cv
500.727 521 500.449 520.977 500.195 520.93 cv
499.934 520.883 499.707 520.828 499.508 520.762 cv
499.305 520.695 499.137 520.625 499.008 520.555 cv
498.875 520.484 498.793 520.434 498.762 520.402 cv
498.727 520.371 498.699 520.34 498.684 520.305 cv
498.66 520.277 498.645 520.238 498.633 520.191 cv
498.617 520.145 498.605 520.09 498.602 520.023 cv
498.594 519.957 498.594 519.875 498.594 519.777 cv
498.594 519.617 498.609 519.504 498.641 519.437 cv
498.672 519.379 498.719 519.348 498.781 519.344 cv
498.824 519.348 498.906 519.383 499.031 519.453 cv
499.152 519.523 499.313 519.602 499.508 519.687 cv
499.699 519.773 499.922 519.852 500.184 519.922 cv
500.441 519.996 500.73 520.035 501.051 520.031 cv
501.355 520.035 501.629 519.996 501.863 519.918 cv
502.098 519.844 502.293 519.734 502.453 519.59 cv
502.609 519.449 502.727 519.281 502.809 519.086 cv
502.887 518.895 502.93 518.684 502.93 518.453 cv
502.93 518.207 502.879 517.98 502.777 517.777 cv
502.676 517.578 502.527 517.406 502.332 517.262 cv
502.137 517.117 501.895 517.008 501.613 516.926 cv
501.324 516.852 501.004 516.812 500.645 516.809 cv
499.777 516.809 li
499.738 516.812 499.699 516.805 499.664 516.785 cv
499.629 516.773 499.598 516.746 499.574 516.707 cv
499.547 516.672 499.527 516.625 499.512 516.566 cv
499.492 516.508 499.484 516.43 499.488 516.332 cv
499.484 516.25 499.492 516.18 499.508 516.117 cv
499.52 516.062 499.539 516.016 499.566 515.98 cv
499.59 515.949 499.617 515.926 499.652 515.906 cv
499.68 515.895 499.715 515.887 499.762 515.883 cv
500.531 515.883 li
500.832 515.887 501.102 515.848 501.34 515.766 cv
501.578 515.691 501.781 515.578 501.949 515.43 cv
502.113 515.285 502.242 515.113 502.332 514.91 cv
502.418 514.711 502.461 514.484 502.465 514.23 cv
502.461 514.051 502.43 513.875 502.375 513.707 cv
502.313 513.543 502.227 513.398 502.109 513.273 cv
501.992 513.152 501.84 513.055 501.656 512.984 cv
501.469 512.914 501.254 512.879 501.016 512.879 cv
500.75 512.879 500.508 512.922 500.289 513 cv
500.063 513.082 499.867 513.164 499.699 513.254 cv
499.523 513.348 499.379 513.434 499.27 513.512 cv
499.152 513.59 499.074 513.629 499.031 513.629 cv
498.996 513.629 498.969 513.625 498.945 513.613 cv
498.918 513.602 498.895 513.578 498.883 513.543 cv
498.863 513.512 498.852 513.465 498.848 513.402 cv
498.84 513.344 498.84 513.262 498.84 513.156 cv
498.84 513.09 498.84 513.031 498.844 512.977 cv
498.848 512.93 498.855 512.883 498.871 512.84 cv
498.883 512.805 498.902 512.77 498.922 512.734 cv
498.938 512.707 498.965 512.672 499.012 512.625 cv
499.051 512.586 499.141 512.523 499.273 512.437 cv
499.406 512.359 499.566 512.277 499.762 512.191 cv
499.953 512.113 500.18 512.047 500.434 511.992 cv
500.684 511.941 500.953 511.914 501.25 511.91 cv
501.656 511.914 502.016 511.965 502.328 512.066 cv
502.633 512.172 502.891 512.32 503.102 512.512 cv
503.305 512.703 503.461 512.93 503.566 513.195 cv
503.664 513.461 503.715 513.758 503.719 514.078 cv
503.715 514.359 503.68 514.617 503.609 514.855 cv
503.535 515.094 503.426 515.305 503.289 515.488 cv
503.145 515.676 502.973 515.832 502.77 515.961 cv
502.563 516.09 502.328 516.18 502.063 516.23 cv
502.063 516.242 li
502.367 516.273 502.645 516.352 502.898 516.473 cv
503.148 516.594 503.367 516.746 503.551 516.926 cv
503.73 517.113 503.871 517.324 503.977 517.566 cv
504.074 517.809 504.125 518.07 504.129 518.344 cv
cp
f
517.219 520.367 mo
517.215 520.449 517.207 520.523 517.199 520.586 cv
517.184 520.652 517.168 520.707 517.152 520.746 cv
517.129 520.793 517.102 520.824 517.07 520.84 cv
517.031 520.863 516.996 520.871 516.957 520.871 cv
512.078 520.871 li
512.008 520.871 511.953 520.863 511.91 520.848 cv
511.859 520.832 511.816 520.809 511.785 520.77 cv
511.746 520.738 511.723 520.684 511.711 520.613 cv
511.691 520.543 511.684 520.461 511.688 520.359 cv
511.684 520.273 511.688 520.191 511.699 520.121 cv
511.703 520.055 511.719 519.996 511.746 519.941 cv
511.766 519.891 511.793 519.836 511.832 519.781 cv
511.863 519.73 511.91 519.676 511.969 519.613 cv
513.734 517.801 li
514.141 517.383 514.465 517.008 514.715 516.676 cv
514.957 516.344 515.148 516.043 515.285 515.766 cv
515.418 515.496 515.508 515.246 515.551 515.023 cv
515.59 514.801 515.609 514.594 515.613 514.395 cv
515.609 514.199 515.578 514.012 515.516 513.836 cv
515.449 513.664 515.352 513.512 515.23 513.379 cv
515.102 513.25 514.945 513.145 514.762 513.062 cv
514.57 512.988 514.355 512.949 514.113 512.945 cv
513.824 512.949 513.566 512.988 513.34 513.062 cv
513.109 513.145 512.91 513.23 512.742 513.316 cv
512.566 513.41 512.422 513.492 512.313 513.566 cv
512.195 513.648 512.109 513.687 512.055 513.684 cv
512.02 513.687 511.992 513.68 511.969 513.656 cv
511.941 513.641 511.918 513.609 511.902 513.566 cv
511.883 513.527 511.871 513.473 511.863 513.402 cv
511.852 513.336 511.848 513.254 511.852 513.156 cv
511.848 513.09 511.852 513.031 511.859 512.98 cv
511.863 512.934 511.871 512.891 511.883 512.852 cv
511.891 512.816 511.902 512.781 511.926 512.75 cv
511.941 512.719 511.98 512.68 512.035 512.629 cv
512.09 512.586 512.184 512.523 512.316 512.437 cv
512.449 512.359 512.617 512.277 512.824 512.191 cv
513.023 512.113 513.246 512.047 513.492 511.992 cv
513.734 511.941 513.992 511.914 514.262 511.91 cv
514.688 511.914 515.059 511.973 515.383 512.09 cv
515.703 512.211 515.973 512.375 516.184 512.586 cv
516.395 512.797 516.551 513.043 516.656 513.316 cv
516.762 513.598 516.816 513.891 516.816 514.203 cv
516.816 514.484 516.789 514.766 516.738 515.047 cv
516.688 515.328 516.582 515.633 516.422 515.953 cv
516.258 516.281 516.023 516.641 515.723 517.039 cv
515.414 517.437 515.012 517.898 514.508 518.414 cv
513.109 519.875 li
516.953 519.875 li
516.984 519.875 517.02 519.887 517.059 519.906 cv
517.09 519.93 517.121 519.961 517.145 520 cv
517.168 520.043 517.184 520.094 517.199 520.152 cv
517.207 520.215 517.215 520.285 517.219 520.367 cv
cp
f
524.672 518.359 mo
524.668 518.512 524.645 518.629 524.602 518.715 cv
524.555 518.801 524.492 518.844 524.41 518.844 cv
523.414 518.844 li
523.414 520.699 li
523.414 520.738 523.402 520.77 523.387 520.793 cv
523.363 520.824 523.332 520.844 523.289 520.859 cv
523.238 520.875 523.176 520.887 523.105 520.895 cv
523.027 520.902 522.934 520.906 522.816 520.91 cv
522.703 520.906 522.609 520.902 522.535 520.895 cv
522.457 520.887 522.395 520.875 522.355 520.859 cv
522.309 520.844 522.281 520.824 522.266 520.793 cv
522.25 520.77 522.242 520.738 522.242 520.699 cv
522.242 518.844 li
518.629 518.844 li
518.57 518.844 518.527 518.84 518.492 518.824 cv
518.453 518.816 518.418 518.789 518.395 518.75 cv
518.363 518.715 518.344 518.664 518.332 518.594 cv
518.32 518.527 518.316 518.437 518.316 518.324 cv
518.316 518.242 518.316 518.164 518.32 518.094 cv
518.324 518.027 518.332 517.965 518.348 517.906 cv
518.359 517.852 518.379 517.797 518.402 517.742 cv
518.422 517.691 518.449 517.637 518.484 517.574 cv
521.633 512.207 li
521.656 512.172 521.688 512.141 521.734 512.113 cv
521.773 512.086 521.832 512.062 521.902 512.043 cv
521.973 512.027 522.059 512.016 522.16 512.008 cv
522.262 512.004 522.383 512 522.523 511.996 cv
522.676 512 522.809 512.008 522.922 512.016 cv
523.035 512.031 523.125 512.043 523.199 512.059 cv
523.266 512.078 523.32 512.105 523.359 512.133 cv
523.395 512.164 523.414 512.195 523.414 512.234 cv
523.414 517.875 li
524.41 517.875 li
524.488 517.879 524.551 517.918 524.598 517.996 cv
524.645 518.078 524.668 518.199 524.672 518.359 cv
cp
522.242 513.027 mo
522.227 513.027 li
519.387 517.875 li
522.242 517.875 li
cp
f
537.32 520.367 mo
537.316 520.449 537.309 520.523 537.301 520.586 cv
537.285 520.652 537.27 520.707 537.254 520.746 cv
537.23 520.793 537.203 520.824 537.172 520.84 cv
537.133 520.863 537.098 520.871 537.059 520.871 cv
532.18 520.871 li
532.109 520.871 532.055 520.863 532.012 520.848 cv
531.961 520.832 531.918 520.809 531.887 520.77 cv
531.848 520.738 531.824 520.684 531.813 520.613 cv
531.793 520.543 531.785 520.461 531.789 520.359 cv
531.785 520.273 531.789 520.191 531.801 520.121 cv
531.805 520.055 531.82 519.996 531.848 519.941 cv
531.867 519.891 531.895 519.836 531.934 519.781 cv
531.965 519.73 532.012 519.676 532.07 519.613 cv
533.836 517.801 li
534.242 517.383 534.566 517.008 534.816 516.676 cv
535.059 516.344 535.25 516.043 535.387 515.766 cv
535.52 515.496 535.609 515.246 535.652 515.023 cv
535.691 514.801 535.711 514.594 535.715 514.395 cv
535.711 514.199 535.68 514.012 535.617 513.836 cv
535.551 513.664 535.453 513.512 535.332 513.379 cv
535.203 513.25 535.047 513.145 534.863 513.062 cv
534.672 512.988 534.457 512.949 534.215 512.945 cv
533.926 512.949 533.668 512.988 533.441 513.062 cv
533.211 513.145 533.012 513.23 532.844 513.316 cv
532.668 513.41 532.523 513.492 532.414 513.566 cv
532.297 513.648 532.211 513.687 532.156 513.684 cv
532.121 513.687 532.094 513.68 532.07 513.656 cv
532.043 513.641 532.02 513.609 532.004 513.566 cv
531.984 513.527 531.973 513.473 531.965 513.402 cv
531.953 513.336 531.949 513.254 531.953 513.156 cv
531.949 513.09 531.953 513.031 531.961 512.98 cv
531.965 512.934 531.973 512.891 531.984 512.852 cv
531.992 512.816 532.004 512.781 532.027 512.75 cv
532.043 512.719 532.082 512.68 532.137 512.629 cv
532.191 512.586 532.285 512.523 532.418 512.437 cv
532.551 512.359 532.719 512.277 532.926 512.191 cv
533.125 512.113 533.348 512.047 533.594 511.992 cv
533.836 511.941 534.094 511.914 534.363 511.91 cv
534.789 511.914 535.16 511.973 535.484 512.09 cv
535.805 512.211 536.074 512.375 536.285 512.586 cv
536.496 512.797 536.652 513.043 536.758 513.316 cv
536.863 513.598 536.918 513.891 536.918 514.203 cv
536.918 514.484 536.891 514.766 536.84 515.047 cv
536.789 515.328 536.684 515.633 536.523 515.953 cv
536.359 516.281 536.125 516.641 535.824 517.039 cv
535.516 517.437 535.113 517.898 534.609 518.414 cv
533.211 519.875 li
537.055 519.875 li
537.086 519.875 537.121 519.887 537.16 519.906 cv
537.191 519.93 537.223 519.961 537.246 520 cv
537.27 520.043 537.285 520.094 537.301 520.152 cv
537.309 520.215 537.316 520.285 537.32 520.367 cv
cp
f
544.355 518.031 mo
544.352 518.508 544.273 518.93 544.117 519.297 cv
543.957 519.668 543.73 519.977 543.441 520.227 cv
543.145 520.48 542.797 520.676 542.398 520.805 cv
541.992 520.937 541.547 521 541.059 521 cv
540.781 521 540.523 520.98 540.281 520.941 cv
540.035 520.902 539.816 520.855 539.625 520.801 cv
539.434 520.746 539.273 520.691 539.152 520.633 cv
539.027 520.582 538.949 520.539 538.918 520.504 cv
538.879 520.473 538.855 520.441 538.848 520.414 cv
538.832 520.387 538.82 520.355 538.809 520.316 cv
538.797 520.281 538.789 520.23 538.785 520.168 cv
538.777 520.109 538.773 520.039 538.777 519.957 cv
538.773 519.879 538.777 519.812 538.789 519.75 cv
538.793 519.691 538.809 519.641 538.828 519.598 cv
538.844 519.562 538.863 519.531 538.891 519.512 cv
538.914 519.496 538.941 519.488 538.977 519.484 cv
539.02 519.488 539.09 519.516 539.188 519.57 cv
539.281 519.629 539.41 519.691 539.574 519.758 cv
539.73 519.824 539.934 519.887 540.176 519.945 cv
540.414 520.004 540.695 520.035 541.023 520.031 cv
541.328 520.035 541.609 519.996 541.863 519.922 cv
542.117 519.852 542.336 519.738 542.523 519.582 cv
542.707 519.426 542.852 519.23 542.957 518.996 cv
543.059 518.762 543.109 518.477 543.113 518.141 cv
543.109 517.859 543.066 517.613 542.98 517.395 cv
542.891 517.184 542.754 517.004 542.57 516.855 cv
542.383 516.715 542.148 516.605 541.871 516.535 cv
541.586 516.465 541.25 516.43 540.859 516.426 cv
540.582 516.43 540.344 516.445 540.145 516.469 cv
539.941 516.5 539.754 516.512 539.586 516.508 cv
539.453 516.512 539.363 516.484 539.313 516.422 cv
539.254 516.367 539.227 516.25 539.23 516.078 cv
539.23 512.48 li
539.227 512.332 539.262 512.223 539.336 512.148 cv
539.402 512.078 539.504 512.043 539.641 512.039 cv
543.551 512.039 li
543.586 512.043 543.621 512.051 543.656 512.07 cv
543.688 512.09 543.715 512.121 543.742 512.16 cv
543.762 512.203 543.777 512.258 543.793 512.32 cv
543.801 512.387 543.809 512.461 543.809 512.543 cv
543.809 512.711 543.785 512.836 543.742 512.926 cv
543.699 513.02 543.641 513.066 543.563 513.062 cv
540.402 513.062 li
540.402 515.539 li
540.555 515.516 540.711 515.504 540.871 515.5 cv
541.031 515.496 541.219 515.492 541.43 515.492 cv
541.914 515.492 542.336 515.555 542.703 515.676 cv
543.063 515.797 543.367 515.969 543.613 516.187 cv
543.855 516.41 544.039 516.676 544.168 516.988 cv
544.289 517.305 544.352 517.652 544.355 518.031 cv
cp
f
557.398 520.367 mo
557.395 520.449 557.387 520.523 557.379 520.586 cv
557.363 520.652 557.348 520.707 557.332 520.746 cv
557.309 520.793 557.281 520.824 557.25 520.84 cv
557.211 520.863 557.176 520.871 557.137 520.871 cv
552.258 520.871 li
552.188 520.871 552.133 520.863 552.09 520.848 cv
552.039 520.832 551.996 520.809 551.965 520.77 cv
551.926 520.738 551.902 520.684 551.891 520.613 cv
551.871 520.543 551.863 520.461 551.867 520.359 cv
551.863 520.273 551.867 520.191 551.879 520.121 cv
551.883 520.055 551.898 519.996 551.926 519.941 cv
551.945 519.891 551.973 519.836 552.012 519.781 cv
552.043 519.73 552.09 519.676 552.148 519.613 cv
553.914 517.801 li
554.32 517.383 554.645 517.008 554.895 516.676 cv
555.137 516.344 555.328 516.043 555.465 515.766 cv
555.598 515.496 555.688 515.246 555.73 515.023 cv
555.77 514.801 555.789 514.594 555.793 514.395 cv
555.789 514.199 555.758 514.012 555.695 513.836 cv
555.629 513.664 555.531 513.512 555.41 513.379 cv
555.281 513.25 555.125 513.145 554.941 513.062 cv
554.75 512.988 554.535 512.949 554.293 512.945 cv
554.004 512.949 553.746 512.988 553.52 513.062 cv
553.289 513.145 553.09 513.23 552.922 513.316 cv
552.746 513.41 552.602 513.492 552.492 513.566 cv
552.375 513.648 552.289 513.687 552.234 513.684 cv
552.199 513.687 552.172 513.68 552.148 513.656 cv
552.121 513.641 552.098 513.609 552.082 513.566 cv
552.063 513.527 552.051 513.473 552.043 513.402 cv
552.031 513.336 552.027 513.254 552.031 513.156 cv
552.027 513.09 552.031 513.031 552.039 512.98 cv
552.043 512.934 552.051 512.891 552.063 512.852 cv
552.07 512.816 552.082 512.781 552.105 512.75 cv
552.121 512.719 552.16 512.68 552.215 512.629 cv
552.27 512.586 552.363 512.523 552.496 512.437 cv
552.629 512.359 552.797 512.277 553.004 512.191 cv
553.203 512.113 553.426 512.047 553.672 511.992 cv
553.914 511.941 554.172 511.914 554.441 511.91 cv
554.867 511.914 555.238 511.973 555.563 512.09 cv
555.883 512.211 556.152 512.375 556.363 512.586 cv
556.574 512.797 556.73 513.043 556.836 513.316 cv
556.941 513.598 556.996 513.891 556.996 514.203 cv
556.996 514.484 556.969 514.766 556.918 515.047 cv
556.867 515.328 556.762 515.633 556.602 515.953 cv
556.438 516.281 556.203 516.641 555.902 517.039 cv
555.594 517.437 555.191 517.898 554.688 518.414 cv
553.289 519.875 li
557.133 519.875 li
557.164 519.875 557.199 519.887 557.238 519.906 cv
557.27 519.93 557.301 519.961 557.324 520 cv
557.348 520.043 557.363 520.094 557.379 520.152 cv
557.387 520.215 557.395 520.285 557.398 520.367 cv
cp
f
564.703 518.012 mo
564.699 518.398 564.641 518.773 564.523 519.133 cv
564.406 519.496 564.223 519.816 563.98 520.09 cv
563.73 520.371 563.422 520.59 563.047 520.754 cv
562.668 520.918 562.219 521 561.707 521 cv
561.336 521 561.012 520.957 560.73 520.863 cv
560.445 520.777 560.199 520.648 559.992 520.477 cv
559.781 520.312 559.609 520.105 559.473 519.855 cv
559.332 519.613 559.219 519.332 559.137 519.016 cv
559.051 518.703 558.992 518.359 558.957 517.984 cv
558.918 517.613 558.898 517.211 558.902 516.781 cv
558.898 516.406 558.918 516.027 558.961 515.637 cv
559 515.254 559.074 514.879 559.18 514.516 cv
559.285 514.16 559.426 513.824 559.609 513.504 cv
559.785 513.191 560.012 512.914 560.285 512.676 cv
560.555 512.445 560.879 512.262 561.258 512.121 cv
561.633 511.988 562.07 511.918 562.574 511.914 cv
562.738 511.918 562.91 511.93 563.086 511.945 cv
563.258 511.969 563.418 511.996 563.563 512.027 cv
563.707 512.066 563.828 512.102 563.93 512.141 cv
564.027 512.184 564.094 512.219 564.129 512.242 cv
564.16 512.27 564.184 512.297 564.203 512.324 cv
564.215 512.355 564.227 512.387 564.238 512.418 cv
564.246 512.453 564.254 512.492 564.262 512.535 cv
564.262 512.578 564.266 512.629 564.27 512.691 cv
564.266 512.777 564.266 512.852 564.266 512.906 cv
564.262 512.969 564.25 513.016 564.238 513.047 cv
564.219 513.086 564.199 513.113 564.176 513.129 cv
564.148 513.152 564.117 513.16 564.078 513.156 cv
564.023 513.16 563.953 513.145 563.871 513.109 cv
563.781 513.082 563.676 513.047 563.559 513.004 cv
563.434 512.969 563.285 512.934 563.109 512.898 cv
562.934 512.871 562.73 512.855 562.5 512.852 cv
562.074 512.855 561.711 512.941 561.406 513.109 cv
561.102 513.285 560.852 513.516 560.66 513.805 cv
560.465 514.098 560.32 514.437 560.23 514.82 cv
560.133 515.207 560.082 515.609 560.07 516.023 cv
560.188 515.961 560.32 515.891 560.469 515.82 cv
560.617 515.754 560.777 515.695 560.953 515.637 cv
561.125 515.586 561.309 515.539 561.508 515.504 cv
561.703 515.469 561.914 515.453 562.137 515.449 cv
562.613 515.453 563.016 515.516 563.344 515.645 cv
563.668 515.777 563.934 515.961 564.141 516.187 cv
564.34 516.422 564.484 516.691 564.574 517 cv
564.656 517.312 564.699 517.648 564.703 518.012 cv
cp
563.516 518.121 mo
563.516 517.859 563.488 517.617 563.438 517.398 cv
563.383 517.184 563.297 517 563.176 516.852 cv
563.051 516.703 562.887 516.59 562.684 516.504 cv
562.477 516.426 562.223 516.383 561.926 516.379 cv
561.754 516.383 561.586 516.398 561.418 516.426 cv
561.25 516.457 561.086 516.496 560.934 516.547 cv
560.773 516.602 560.625 516.664 560.48 516.73 cv
560.336 516.805 560.203 516.883 560.09 516.961 cv
560.086 517.551 560.125 518.039 560.203 518.434 cv
560.277 518.832 560.387 519.152 560.531 519.387 cv
560.672 519.629 560.852 519.797 561.066 519.898 cv
561.277 520 561.527 520.051 561.816 520.051 cv
562.105 520.051 562.355 519.996 562.574 519.887 cv
562.785 519.777 562.965 519.633 563.105 519.449 cv
563.246 519.266 563.348 519.059 563.418 518.828 cv
563.48 518.598 563.516 518.363 563.516 518.121 cv
cp
f
577.5 520.367 mo
577.496 520.449 577.488 520.523 577.48 520.586 cv
577.465 520.652 577.449 520.707 577.434 520.746 cv
577.41 520.793 577.383 520.824 577.352 520.84 cv
577.313 520.863 577.277 520.871 577.238 520.871 cv
572.359 520.871 li
572.289 520.871 572.234 520.863 572.191 520.848 cv
572.141 520.832 572.098 520.809 572.066 520.77 cv
572.027 520.738 572.004 520.684 571.992 520.613 cv
571.973 520.543 571.965 520.461 571.969 520.359 cv
571.965 520.273 571.969 520.191 571.98 520.121 cv
571.984 520.055 572 519.996 572.027 519.941 cv
572.047 519.891 572.074 519.836 572.113 519.781 cv
572.145 519.73 572.191 519.676 572.25 519.613 cv
574.016 517.801 li
574.422 517.383 574.746 517.008 574.996 516.676 cv
575.238 516.344 575.43 516.043 575.566 515.766 cv
575.699 515.496 575.789 515.246 575.832 515.023 cv
575.871 514.801 575.891 514.594 575.895 514.395 cv
575.891 514.199 575.859 514.012 575.797 513.836 cv
575.73 513.664 575.633 513.512 575.512 513.379 cv
575.383 513.25 575.227 513.145 575.043 513.062 cv
574.852 512.988 574.637 512.949 574.395 512.945 cv
574.105 512.949 573.848 512.988 573.621 513.062 cv
573.391 513.145 573.191 513.23 573.023 513.316 cv
572.848 513.41 572.703 513.492 572.594 513.566 cv
572.477 513.648 572.391 513.687 572.336 513.684 cv
572.301 513.687 572.273 513.68 572.25 513.656 cv
572.223 513.641 572.199 513.609 572.184 513.566 cv
572.164 513.527 572.152 513.473 572.145 513.402 cv
572.133 513.336 572.129 513.254 572.133 513.156 cv
572.129 513.09 572.133 513.031 572.141 512.98 cv
572.145 512.934 572.152 512.891 572.164 512.852 cv
572.172 512.816 572.184 512.781 572.207 512.75 cv
572.223 512.719 572.262 512.68 572.316 512.629 cv
572.371 512.586 572.465 512.523 572.598 512.437 cv
572.73 512.359 572.898 512.277 573.105 512.191 cv
573.305 512.113 573.527 512.047 573.773 511.992 cv
574.016 511.941 574.273 511.914 574.543 511.91 cv
574.969 511.914 575.34 511.973 575.664 512.09 cv
575.984 512.211 576.254 512.375 576.465 512.586 cv
576.676 512.797 576.832 513.043 576.938 513.316 cv
577.043 513.598 577.098 513.891 577.098 514.203 cv
577.098 514.484 577.07 514.766 577.02 515.047 cv
576.969 515.328 576.863 515.633 576.703 515.953 cv
576.539 516.281 576.305 516.641 576.004 517.039 cv
575.695 517.437 575.293 517.898 574.789 518.414 cv
573.391 519.875 li
577.234 519.875 li
577.266 519.875 577.301 519.887 577.34 519.906 cv
577.371 519.93 577.402 519.961 577.426 520 cv
577.449 520.043 577.465 520.094 577.48 520.152 cv
577.488 520.215 577.496 520.285 577.5 520.367 cv
cp
f
584.707 512.543 mo
584.703 512.629 584.699 512.703 584.695 512.766 cv
584.688 512.836 584.68 512.898 584.668 512.957 cv
584.656 513.02 584.641 513.078 584.621 513.133 cv
584.598 513.191 584.574 513.254 584.551 513.316 cv
581.367 520.645 li
581.344 520.703 581.316 520.75 581.281 520.781 cv
581.246 520.82 581.203 520.848 581.152 520.863 cv
581.098 520.883 581.027 520.891 580.949 520.898 cv
580.863 520.902 580.766 520.906 580.652 520.91 cv
580.492 520.906 580.371 520.898 580.289 520.891 cv
580.199 520.875 580.137 520.859 580.102 520.828 cv
580.059 520.801 580.043 520.762 580.051 520.719 cv
580.055 520.676 580.07 520.625 580.098 520.562 cv
583.445 513.07 li
579.203 513.07 li
579.113 513.074 579.051 513.027 579.008 512.934 cv
578.965 512.844 578.941 512.715 578.945 512.551 cv
578.941 512.465 578.949 512.391 578.961 512.328 cv
578.973 512.266 578.988 512.211 579.012 512.164 cv
579.031 512.121 579.059 512.09 579.094 512.07 cv
579.125 512.051 579.16 512.043 579.203 512.039 cv
584.352 512.039 li
584.414 512.043 584.469 512.047 584.516 512.059 cv
584.563 512.074 584.598 512.102 584.625 512.141 cv
584.648 512.184 584.668 512.238 584.684 512.301 cv
584.695 512.367 584.703 512.449 584.707 512.543 cv
cp
f
597.598 520.367 mo
597.594 520.449 597.586 520.523 597.578 520.586 cv
597.563 520.652 597.547 520.707 597.531 520.746 cv
597.508 520.793 597.48 520.824 597.449 520.84 cv
597.41 520.863 597.375 520.871 597.336 520.871 cv
592.457 520.871 li
592.387 520.871 592.332 520.863 592.289 520.848 cv
592.238 520.832 592.195 520.809 592.164 520.77 cv
592.125 520.738 592.102 520.684 592.09 520.613 cv
592.07 520.543 592.063 520.461 592.066 520.359 cv
592.063 520.273 592.066 520.191 592.078 520.121 cv
592.082 520.055 592.098 519.996 592.125 519.941 cv
592.145 519.891 592.172 519.836 592.211 519.781 cv
592.242 519.73 592.289 519.676 592.348 519.613 cv
594.113 517.801 li
594.52 517.383 594.844 517.008 595.094 516.676 cv
595.336 516.344 595.527 516.043 595.664 515.766 cv
595.797 515.496 595.887 515.246 595.93 515.023 cv
595.969 514.801 595.988 514.594 595.992 514.395 cv
595.988 514.199 595.957 514.012 595.895 513.836 cv
595.828 513.664 595.73 513.512 595.609 513.379 cv
595.48 513.25 595.324 513.145 595.141 513.062 cv
594.949 512.988 594.734 512.949 594.492 512.945 cv
594.203 512.949 593.945 512.988 593.719 513.062 cv
593.488 513.145 593.289 513.23 593.121 513.316 cv
592.945 513.41 592.801 513.492 592.691 513.566 cv
592.574 513.648 592.488 513.687 592.434 513.684 cv
592.398 513.687 592.371 513.68 592.348 513.656 cv
592.32 513.641 592.297 513.609 592.281 513.566 cv
592.262 513.527 592.25 513.473 592.242 513.402 cv
592.23 513.336 592.227 513.254 592.23 513.156 cv
592.227 513.09 592.23 513.031 592.238 512.98 cv
592.242 512.934 592.25 512.891 592.262 512.852 cv
592.27 512.816 592.281 512.781 592.305 512.75 cv
592.32 512.719 592.359 512.68 592.414 512.629 cv
592.469 512.586 592.563 512.523 592.695 512.437 cv
592.828 512.359 592.996 512.277 593.203 512.191 cv
593.402 512.113 593.625 512.047 593.871 511.992 cv
594.113 511.941 594.371 511.914 594.641 511.91 cv
595.066 511.914 595.438 511.973 595.762 512.09 cv
596.082 512.211 596.352 512.375 596.563 512.586 cv
596.773 512.797 596.93 513.043 597.035 513.316 cv
597.141 513.598 597.195 513.891 597.195 514.203 cv
597.195 514.484 597.168 514.766 597.117 515.047 cv
597.066 515.328 596.961 515.633 596.801 515.953 cv
596.637 516.281 596.402 516.641 596.102 517.039 cv
595.793 517.437 595.391 517.898 594.887 518.414 cv
593.488 519.875 li
597.332 519.875 li
597.363 519.875 597.398 519.887 597.438 519.906 cv
597.469 519.93 597.5 519.961 597.523 520 cv
597.547 520.043 597.563 520.094 597.578 520.152 cv
597.586 520.215 597.594 520.285 597.598 520.367 cv
cp
f
604.883 518.605 mo
604.879 518.992 604.813 519.332 604.676 519.629 cv
604.539 519.926 604.34 520.18 604.086 520.383 cv
603.828 520.59 603.512 520.742 603.137 520.844 cv
602.754 520.949 602.324 521 601.84 521 cv
601.383 521 600.973 520.953 600.617 520.859 cv
600.254 520.766 599.949 520.625 599.703 520.437 cv
599.449 520.25 599.258 520.02 599.129 519.746 cv
598.992 519.473 598.926 519.16 598.93 518.809 cv
598.926 518.535 598.973 518.281 599.066 518.047 cv
599.156 517.812 599.285 517.598 599.457 517.402 cv
599.625 517.207 599.836 517.027 600.09 516.855 cv
600.336 516.687 600.621 516.523 600.938 516.367 cv
600.664 516.227 600.422 516.078 600.211 515.918 cv
600 515.766 599.82 515.594 599.68 515.406 cv
599.531 515.223 599.422 515.027 599.352 514.816 cv
599.273 514.613 599.238 514.383 599.238 514.133 cv
599.238 513.824 599.293 513.535 599.406 513.262 cv
599.516 512.992 599.684 512.758 599.91 512.559 cv
600.133 512.359 600.418 512.203 600.77 512.086 cv
601.113 511.973 601.52 511.914 601.988 511.91 cv
602.43 511.914 602.816 511.965 603.145 512.07 cv
603.469 512.18 603.738 512.328 603.949 512.508 cv
604.16 512.695 604.316 512.91 604.418 513.156 cv
604.52 513.41 604.57 513.68 604.57 513.965 cv
604.57 514.199 604.531 514.422 604.457 514.633 cv
604.379 514.848 604.27 515.051 604.125 515.242 cv
603.977 515.434 603.797 515.613 603.59 515.777 cv
603.375 515.945 603.133 516.098 602.863 516.242 cv
603.184 516.402 603.473 516.566 603.727 516.734 cv
603.977 516.906 604.188 517.09 604.359 517.277 cv
604.531 517.473 604.66 517.676 604.75 517.891 cv
604.836 518.109 604.879 518.348 604.883 518.605 cv
cp
603.41 514.07 mo
603.41 513.883 603.375 513.711 603.309 513.555 cv
603.242 513.402 603.145 513.27 603.02 513.156 cv
602.887 513.051 602.73 512.969 602.543 512.91 cv
602.355 512.855 602.141 512.828 601.898 512.824 cv
601.406 512.828 601.035 512.937 600.785 513.16 cv
600.531 513.383 600.402 513.687 600.406 514.07 cv
600.402 514.254 600.434 514.422 600.496 514.57 cv
600.555 514.727 600.652 514.871 600.785 515.004 cv
600.914 515.145 601.078 515.277 601.277 515.402 cv
601.473 515.535 601.707 515.668 601.98 515.805 cv
602.441 515.57 602.793 515.309 603.039 515.02 cv
603.285 514.734 603.41 514.418 603.41 514.07 cv
cp
603.695 518.727 mo
603.691 518.52 603.652 518.332 603.578 518.16 cv
603.5 517.992 603.383 517.832 603.227 517.68 cv
603.066 517.535 602.871 517.391 602.641 517.25 cv
602.402 517.113 602.129 516.969 601.824 516.816 cv
601.535 516.957 601.285 517.102 601.07 517.242 cv
600.852 517.387 600.676 517.531 600.539 517.68 cv
600.398 517.832 600.293 517.988 600.223 518.152 cv
600.152 518.316 600.117 518.5 600.117 518.699 cv
600.117 519.145 600.266 519.488 600.57 519.727 cv
600.871 519.969 601.324 520.086 601.926 520.086 cv
602.508 520.086 602.949 519.965 603.246 519.723 cv
603.543 519.48 603.691 519.148 603.695 518.727 cv
cp
f
617.699 520.367 mo
617.695 520.449 617.688 520.523 617.68 520.586 cv
617.664 520.652 617.648 520.707 617.633 520.746 cv
617.609 520.793 617.582 520.824 617.551 520.84 cv
617.512 520.863 617.477 520.871 617.438 520.871 cv
612.559 520.871 li
612.488 520.871 612.434 520.863 612.391 520.848 cv
612.34 520.832 612.297 520.809 612.266 520.77 cv
612.227 520.738 612.203 520.684 612.191 520.613 cv
612.172 520.543 612.164 520.461 612.168 520.359 cv
612.164 520.273 612.168 520.191 612.18 520.121 cv
612.184 520.055 612.199 519.996 612.227 519.941 cv
612.246 519.891 612.273 519.836 612.313 519.781 cv
612.344 519.73 612.391 519.676 612.449 519.613 cv
614.215 517.801 li
614.621 517.383 614.945 517.008 615.195 516.676 cv
615.438 516.344 615.629 516.043 615.766 515.766 cv
615.898 515.496 615.988 515.246 616.031 515.023 cv
616.07 514.801 616.09 514.594 616.094 514.395 cv
616.09 514.199 616.059 514.012 615.996 513.836 cv
615.93 513.664 615.832 513.512 615.711 513.379 cv
615.582 513.25 615.426 513.145 615.242 513.062 cv
615.051 512.988 614.836 512.949 614.594 512.945 cv
614.305 512.949 614.047 512.988 613.82 513.062 cv
613.59 513.145 613.391 513.23 613.223 513.316 cv
613.047 513.41 612.902 513.492 612.793 513.566 cv
612.676 513.648 612.59 513.687 612.535 513.684 cv
612.5 513.687 612.473 513.68 612.449 513.656 cv
612.422 513.641 612.398 513.609 612.383 513.566 cv
612.363 513.527 612.352 513.473 612.344 513.402 cv
612.332 513.336 612.328 513.254 612.332 513.156 cv
612.328 513.09 612.332 513.031 612.34 512.98 cv
612.344 512.934 612.352 512.891 612.363 512.852 cv
612.371 512.816 612.383 512.781 612.406 512.75 cv
612.422 512.719 612.461 512.68 612.516 512.629 cv
612.57 512.586 612.664 512.523 612.797 512.437 cv
612.93 512.359 613.098 512.277 613.305 512.191 cv
613.504 512.113 613.727 512.047 613.973 511.992 cv
614.215 511.941 614.473 511.914 614.742 511.91 cv
615.168 511.914 615.539 511.973 615.863 512.09 cv
616.184 512.211 616.453 512.375 616.664 512.586 cv
616.875 512.797 617.031 513.043 617.137 513.316 cv
617.242 513.598 617.297 513.891 617.297 514.203 cv
617.297 514.484 617.27 514.766 617.219 515.047 cv
617.168 515.328 617.063 515.633 616.902 515.953 cv
616.738 516.281 616.504 516.641 616.203 517.039 cv
615.895 517.437 615.492 517.898 614.988 518.414 cv
613.59 519.875 li
617.434 519.875 li
617.465 519.875 617.5 519.887 617.539 519.906 cv
617.57 519.93 617.602 519.961 617.625 520 cv
617.648 520.043 617.664 520.094 617.68 520.152 cv
617.688 520.215 617.695 520.285 617.699 520.367 cv
cp
f
624.844 516.105 mo
624.844 516.492 624.82 516.879 624.773 517.27 cv
624.727 517.664 624.648 518.039 624.543 518.398 cv
624.43 518.758 624.281 519.098 624.102 519.414 cv
623.914 519.73 623.684 520.008 623.406 520.242 cv
623.125 520.484 622.793 520.668 622.41 520.801 cv
622.023 520.934 621.578 521 621.07 521 cv
620.875 521 620.684 520.984 620.5 520.961 cv
620.313 520.934 620.145 520.906 620 520.871 cv
619.852 520.836 619.73 520.801 619.629 520.758 cv
619.527 520.719 619.453 520.676 619.41 520.633 cv
619.363 520.594 619.332 520.539 619.313 520.465 cv
619.289 520.398 619.277 520.305 619.281 520.184 cv
619.277 520.086 619.281 520.004 619.289 519.945 cv
619.297 519.887 619.305 519.844 619.32 519.809 cv
619.332 519.777 619.352 519.754 619.379 519.742 cv
619.402 519.73 619.434 519.723 619.473 519.723 cv
619.52 519.723 619.59 519.742 619.684 519.777 cv
619.77 519.812 619.887 519.852 620.027 519.891 cv
620.168 519.934 620.328 519.969 620.516 520 cv
620.699 520.035 620.91 520.051 621.145 520.051 cv
621.586 520.051 621.965 519.969 622.281 519.797 cv
622.594 519.629 622.852 519.398 623.055 519.109 cv
623.254 518.824 623.402 518.492 623.504 518.113 cv
623.602 517.738 623.66 517.34 623.672 516.918 cv
623.43 517.062 623.137 517.187 622.801 517.293 cv
622.461 517.406 622.078 517.461 621.645 517.457 cv
621.152 517.461 620.738 517.395 620.402 517.258 cv
620.066 517.125 619.797 516.941 619.598 516.707 cv
619.391 516.477 619.246 516.203 619.16 515.883 cv
619.07 515.566 619.023 515.215 619.027 514.836 cv
619.023 514.445 619.082 514.074 619.199 513.723 cv
619.313 513.371 619.488 513.062 619.73 512.789 cv
619.969 512.523 620.277 512.309 620.652 512.148 cv
621.023 511.992 621.469 511.914 621.992 511.91 cv
622.355 511.914 622.684 511.961 622.969 512.051 cv
623.254 512.145 623.5 512.277 623.711 512.453 cv
623.918 512.629 624.094 512.84 624.242 513.086 cv
624.383 513.336 624.5 513.617 624.594 513.93 cv
624.68 514.246 624.746 514.586 624.785 514.949 cv
624.824 515.32 624.844 515.707 624.844 516.105 cv
cp
623.648 515.977 mo
623.648 515.398 623.609 514.906 623.531 514.508 cv
623.453 514.109 623.34 513.789 623.191 513.543 cv
623.043 513.297 622.859 513.117 622.641 513.008 cv
622.422 512.898 622.168 512.844 621.883 512.844 cv
621.582 512.844 621.328 512.898 621.121 513.004 cv
620.91 513.113 620.738 513.258 620.605 513.434 cv
620.469 513.617 620.371 513.82 620.309 514.047 cv
620.246 514.277 620.215 514.512 620.215 514.746 cv
620.215 515.02 620.242 515.266 620.301 515.488 cv
620.355 515.711 620.449 515.898 620.578 516.055 cv
620.703 516.211 620.867 516.332 621.074 516.41 cv
621.277 516.496 621.531 516.535 621.836 516.535 cv
622.176 516.535 622.504 516.484 622.824 516.383 cv
623.137 516.281 623.414 516.148 623.648 515.977 cv
cp
f
637.727 518.344 mo
637.723 518.754 637.652 519.117 637.516 519.441 cv
637.371 519.77 637.168 520.051 636.906 520.277 cv
636.641 520.512 636.316 520.687 635.93 520.812 cv
635.543 520.937 635.105 521 634.621 521 cv
634.324 521 634.047 520.977 633.793 520.93 cv
633.531 520.883 633.305 520.828 633.105 520.762 cv
632.902 520.695 632.734 520.625 632.605 520.555 cv
632.473 520.484 632.391 520.434 632.359 520.402 cv
632.324 520.371 632.297 520.34 632.281 520.305 cv
632.258 520.277 632.242 520.238 632.23 520.191 cv
632.215 520.145 632.203 520.09 632.199 520.023 cv
632.191 519.957 632.191 519.875 632.191 519.777 cv
632.191 519.617 632.207 519.504 632.238 519.437 cv
632.27 519.379 632.316 519.348 632.379 519.344 cv
632.422 519.348 632.504 519.383 632.629 519.453 cv
632.75 519.523 632.91 519.602 633.105 519.687 cv
633.297 519.773 633.52 519.852 633.781 519.922 cv
634.039 519.996 634.328 520.035 634.648 520.031 cv
634.953 520.035 635.227 519.996 635.461 519.918 cv
635.695 519.844 635.891 519.734 636.051 519.59 cv
636.207 519.449 636.324 519.281 636.406 519.086 cv
636.484 518.895 636.527 518.684 636.527 518.453 cv
636.527 518.207 636.477 517.98 636.375 517.777 cv
636.273 517.578 636.125 517.406 635.93 517.262 cv
635.734 517.117 635.492 517.008 635.211 516.926 cv
634.922 516.852 634.602 516.812 634.242 516.809 cv
633.375 516.809 li
633.336 516.812 633.297 516.805 633.262 516.785 cv
633.227 516.773 633.195 516.746 633.172 516.707 cv
633.145 516.672 633.125 516.625 633.109 516.566 cv
633.09 516.508 633.082 516.43 633.086 516.332 cv
633.082 516.25 633.09 516.18 633.105 516.117 cv
633.117 516.062 633.137 516.016 633.164 515.98 cv
633.188 515.949 633.215 515.926 633.25 515.906 cv
633.277 515.895 633.313 515.887 633.359 515.883 cv
634.129 515.883 li
634.43 515.887 634.699 515.848 634.938 515.766 cv
635.176 515.691 635.379 515.578 635.547 515.43 cv
635.711 515.285 635.84 515.113 635.93 514.91 cv
636.016 514.711 636.059 514.484 636.063 514.23 cv
636.059 514.051 636.027 513.875 635.973 513.707 cv
635.91 513.543 635.824 513.398 635.707 513.273 cv
635.59 513.152 635.438 513.055 635.254 512.984 cv
635.066 512.914 634.852 512.879 634.613 512.879 cv
634.348 512.879 634.105 512.922 633.887 513 cv
633.66 513.082 633.465 513.164 633.297 513.254 cv
633.121 513.348 632.977 513.434 632.867 513.512 cv
632.75 513.59 632.672 513.629 632.629 513.629 cv
632.594 513.629 632.566 513.625 632.543 513.613 cv
632.516 513.602 632.492 513.578 632.48 513.543 cv
632.461 513.512 632.449 513.465 632.445 513.402 cv
632.438 513.344 632.438 513.262 632.438 513.156 cv
632.438 513.09 632.438 513.031 632.441 512.977 cv
632.445 512.93 632.453 512.883 632.469 512.84 cv
632.48 512.805 632.5 512.77 632.52 512.734 cv
632.535 512.707 632.563 512.672 632.609 512.625 cv
632.648 512.586 632.738 512.523 632.871 512.437 cv
633.004 512.359 633.164 512.277 633.359 512.191 cv
633.551 512.113 633.777 512.047 634.031 511.992 cv
634.281 511.941 634.551 511.914 634.848 511.91 cv
635.254 511.914 635.613 511.965 635.926 512.066 cv
636.23 512.172 636.488 512.32 636.699 512.512 cv
636.902 512.703 637.059 512.93 637.164 513.195 cv
637.262 513.461 637.313 513.758 637.316 514.078 cv
637.313 514.359 637.277 514.617 637.207 514.855 cv
637.133 515.094 637.023 515.305 636.887 515.488 cv
636.742 515.676 636.57 515.832 636.367 515.961 cv
636.16 516.09 635.926 516.18 635.66 516.23 cv
635.66 516.242 li
635.965 516.273 636.242 516.352 636.496 516.473 cv
636.746 516.594 636.965 516.746 637.148 516.926 cv
637.328 517.113 637.469 517.324 637.574 517.566 cv
637.672 517.809 637.723 518.07 637.727 518.344 cv
cp
f
645.172 516.434 mo
645.168 517.117 645.113 517.734 645.012 518.293 cv
644.902 518.852 644.727 519.332 644.477 519.734 cv
644.227 520.141 643.902 520.453 643.504 520.672 cv
643.105 520.891 642.609 521 642.023 521 cv
641.465 521 641 520.902 640.621 520.703 cv
640.238 520.508 639.93 520.219 639.703 519.832 cv
639.469 519.449 639.305 518.973 639.207 518.41 cv
639.109 517.848 639.063 517.203 639.063 516.477 cv
639.063 515.805 639.117 515.187 639.227 514.621 cv
639.336 514.062 639.512 513.582 639.758 513.176 cv
640 512.777 640.324 512.465 640.727 512.242 cv
641.125 512.023 641.617 511.914 642.203 511.91 cv
642.762 511.914 643.23 512.012 643.609 512.207 cv
643.988 512.406 644.293 512.699 644.527 513.082 cv
644.758 513.469 644.922 513.941 645.023 514.5 cv
645.117 515.066 645.168 515.711 645.172 516.434 cv
cp
643.969 516.516 mo
643.965 516.078 643.949 515.68 643.922 515.328 cv
643.887 514.977 643.84 514.668 643.781 514.398 cv
643.719 514.133 643.641 513.902 643.543 513.707 cv
643.441 513.516 643.324 513.355 643.191 513.23 cv
643.055 513.105 642.898 513.016 642.723 512.957 cv
642.547 512.902 642.352 512.875 642.133 512.871 cv
641.746 512.875 641.43 512.965 641.191 513.145 cv
640.945 513.328 640.758 513.578 640.621 513.895 cv
640.48 514.215 640.383 514.59 640.336 515.016 cv
640.281 515.445 640.258 515.902 640.262 516.395 cv
640.258 517.055 640.293 517.617 640.363 518.078 cv
640.434 518.543 640.539 518.918 640.688 519.207 cv
640.832 519.496 641.023 519.707 641.254 519.84 cv
641.484 519.973 641.762 520.039 642.094 520.039 cv
642.344 520.039 642.57 520 642.766 519.918 cv
642.957 519.836 643.121 519.719 643.262 519.566 cv
643.398 519.414 643.516 519.23 643.609 519.016 cv
643.699 518.805 643.77 518.566 643.828 518.305 cv
643.879 518.047 643.918 517.766 643.938 517.461 cv
643.957 517.16 643.965 516.848 643.969 516.516 cv
cp
f
657.809 518.344 mo
657.805 518.754 657.734 519.117 657.598 519.441 cv
657.453 519.77 657.25 520.051 656.988 520.277 cv
656.723 520.512 656.398 520.687 656.012 520.812 cv
655.625 520.937 655.188 521 654.703 521 cv
654.406 521 654.129 520.977 653.875 520.93 cv
653.613 520.883 653.387 520.828 653.188 520.762 cv
652.984 520.695 652.816 520.625 652.688 520.555 cv
652.555 520.484 652.473 520.434 652.441 520.402 cv
652.406 520.371 652.379 520.34 652.363 520.305 cv
652.34 520.277 652.324 520.238 652.313 520.191 cv
652.297 520.145 652.285 520.09 652.281 520.023 cv
652.273 519.957 652.273 519.875 652.273 519.777 cv
652.273 519.617 652.289 519.504 652.32 519.437 cv
652.352 519.379 652.398 519.348 652.461 519.344 cv
652.504 519.348 652.586 519.383 652.711 519.453 cv
652.832 519.523 652.992 519.602 653.188 519.687 cv
653.379 519.773 653.602 519.852 653.863 519.922 cv
654.121 519.996 654.41 520.035 654.73 520.031 cv
655.035 520.035 655.309 519.996 655.543 519.918 cv
655.777 519.844 655.973 519.734 656.133 519.59 cv
656.289 519.449 656.406 519.281 656.488 519.086 cv
656.566 518.895 656.609 518.684 656.609 518.453 cv
656.609 518.207 656.559 517.98 656.457 517.777 cv
656.355 517.578 656.207 517.406 656.012 517.262 cv
655.816 517.117 655.574 517.008 655.293 516.926 cv
655.004 516.852 654.684 516.812 654.324 516.809 cv
653.457 516.809 li
653.418 516.812 653.379 516.805 653.344 516.785 cv
653.309 516.773 653.277 516.746 653.254 516.707 cv
653.227 516.672 653.207 516.625 653.191 516.566 cv
653.172 516.508 653.164 516.43 653.168 516.332 cv
653.164 516.25 653.172 516.18 653.188 516.117 cv
653.199 516.062 653.219 516.016 653.246 515.98 cv
653.27 515.949 653.297 515.926 653.332 515.906 cv
653.359 515.895 653.395 515.887 653.441 515.883 cv
654.211 515.883 li
654.512 515.887 654.781 515.848 655.02 515.766 cv
655.258 515.691 655.461 515.578 655.629 515.43 cv
655.793 515.285 655.922 515.113 656.012 514.91 cv
656.098 514.711 656.141 514.484 656.145 514.23 cv
656.141 514.051 656.109 513.875 656.055 513.707 cv
655.992 513.543 655.906 513.398 655.789 513.273 cv
655.672 513.152 655.52 513.055 655.336 512.984 cv
655.148 512.914 654.934 512.879 654.695 512.879 cv
654.43 512.879 654.188 512.922 653.969 513 cv
653.742 513.082 653.547 513.164 653.379 513.254 cv
653.203 513.348 653.059 513.434 652.949 513.512 cv
652.832 513.59 652.754 513.629 652.711 513.629 cv
652.676 513.629 652.648 513.625 652.625 513.613 cv
652.598 513.602 652.574 513.578 652.563 513.543 cv
652.543 513.512 652.531 513.465 652.527 513.402 cv
652.52 513.344 652.52 513.262 652.52 513.156 cv
652.52 513.09 652.52 513.031 652.523 512.977 cv
652.527 512.93 652.535 512.883 652.551 512.84 cv
652.563 512.805 652.582 512.77 652.602 512.734 cv
652.617 512.707 652.645 512.672 652.691 512.625 cv
652.73 512.586 652.82 512.523 652.953 512.437 cv
653.086 512.359 653.246 512.277 653.441 512.191 cv
653.633 512.113 653.859 512.047 654.113 511.992 cv
654.363 511.941 654.633 511.914 654.93 511.91 cv
655.336 511.914 655.695 511.965 656.008 512.066 cv
656.313 512.172 656.57 512.32 656.781 512.512 cv
656.984 512.703 657.141 512.93 657.246 513.195 cv
657.344 513.461 657.395 513.758 657.398 514.078 cv
657.395 514.359 657.359 514.617 657.289 514.855 cv
657.215 515.094 657.105 515.305 656.969 515.488 cv
656.824 515.676 656.652 515.832 656.449 515.961 cv
656.242 516.09 656.008 516.18 655.742 516.23 cv
655.742 516.242 li
656.047 516.273 656.324 516.352 656.578 516.473 cv
656.828 516.594 657.047 516.746 657.23 516.926 cv
657.41 517.113 657.551 517.324 657.656 517.566 cv
657.754 517.809 657.805 518.07 657.809 518.344 cv
cp
f
664.977 520.406 mo
664.977 520.496 664.969 520.566 664.953 520.625 cv
664.938 520.687 664.918 520.738 664.898 520.77 cv
664.875 520.809 664.848 520.832 664.82 520.848 cv
664.789 520.863 664.762 520.871 664.73 520.871 cv
660.117 520.871 li
660.082 520.871 660.051 520.863 660.027 520.848 cv
659.996 520.832 659.973 520.809 659.949 520.77 cv
659.922 520.738 659.902 520.687 659.891 520.625 cv
659.875 520.566 659.867 520.496 659.871 520.406 cv
659.867 520.328 659.875 520.258 659.891 520.195 cv
659.902 520.141 659.918 520.09 659.941 520.051 cv
659.961 520.012 659.984 519.984 660.016 519.961 cv
660.043 519.945 660.078 519.934 660.117 519.93 cv
661.961 519.93 li
661.961 513.211 li
660.254 514.23 li
660.164 514.277 660.094 514.305 660.043 514.312 cv
659.988 514.324 659.945 514.312 659.918 514.281 cv
659.883 514.254 659.859 514.203 659.852 514.133 cv
659.836 514.066 659.832 513.98 659.836 513.875 cv
659.832 513.797 659.836 513.73 659.844 513.676 cv
659.852 513.621 659.859 513.578 659.875 513.539 cv
659.887 513.508 659.906 513.477 659.934 513.445 cv
659.957 513.422 659.992 513.395 660.035 513.363 cv
662.066 512.059 li
662.082 512.047 662.105 512.039 662.133 512.027 cv
662.16 512.02 662.195 512.008 662.238 512 cv
662.277 511.992 662.324 511.988 662.383 511.98 cv
662.434 511.98 662.504 511.977 662.586 511.977 cv
662.695 511.977 662.785 511.984 662.859 511.992 cv
662.93 512.004 662.988 512.016 663.031 512.027 cv
663.07 512.047 663.098 512.066 663.113 512.09 cv
663.125 512.117 663.129 512.145 663.133 512.168 cv
663.133 519.93 li
664.73 519.93 li
664.766 519.934 664.797 519.945 664.832 519.961 cv
664.859 519.984 664.887 520.012 664.91 520.051 cv
664.93 520.09 664.945 520.141 664.957 520.195 cv
664.969 520.258 664.977 520.328 664.977 520.406 cv
cp
f
677.91 518.344 mo
677.906 518.754 677.836 519.117 677.699 519.441 cv
677.555 519.77 677.352 520.051 677.09 520.277 cv
676.824 520.512 676.5 520.687 676.113 520.812 cv
675.727 520.937 675.289 521 674.805 521 cv
674.508 521 674.23 520.977 673.977 520.93 cv
673.715 520.883 673.488 520.828 673.289 520.762 cv
673.086 520.695 672.918 520.625 672.789 520.555 cv
672.656 520.484 672.574 520.434 672.543 520.402 cv
672.508 520.371 672.48 520.34 672.465 520.305 cv
672.441 520.277 672.426 520.238 672.414 520.191 cv
672.398 520.145 672.387 520.09 672.383 520.023 cv
672.375 519.957 672.375 519.875 672.375 519.777 cv
672.375 519.617 672.391 519.504 672.422 519.437 cv
672.453 519.379 672.5 519.348 672.563 519.344 cv
672.605 519.348 672.688 519.383 672.813 519.453 cv
672.934 519.523 673.094 519.602 673.289 519.687 cv
673.48 519.773 673.703 519.852 673.965 519.922 cv
674.223 519.996 674.512 520.035 674.832 520.031 cv
675.137 520.035 675.41 519.996 675.645 519.918 cv
675.879 519.844 676.074 519.734 676.234 519.59 cv
676.391 519.449 676.508 519.281 676.59 519.086 cv
676.668 518.895 676.711 518.684 676.711 518.453 cv
676.711 518.207 676.66 517.98 676.559 517.777 cv
676.457 517.578 676.309 517.406 676.113 517.262 cv
675.918 517.117 675.676 517.008 675.395 516.926 cv
675.105 516.852 674.785 516.812 674.426 516.809 cv
673.559 516.809 li
673.52 516.812 673.48 516.805 673.445 516.785 cv
673.41 516.773 673.379 516.746 673.355 516.707 cv
673.328 516.672 673.309 516.625 673.293 516.566 cv
673.273 516.508 673.266 516.43 673.27 516.332 cv
673.266 516.25 673.273 516.18 673.289 516.117 cv
673.301 516.062 673.32 516.016 673.348 515.98 cv
673.371 515.949 673.398 515.926 673.434 515.906 cv
673.461 515.895 673.496 515.887 673.543 515.883 cv
674.313 515.883 li
674.613 515.887 674.883 515.848 675.121 515.766 cv
675.359 515.691 675.563 515.578 675.73 515.43 cv
675.895 515.285 676.023 515.113 676.113 514.91 cv
676.199 514.711 676.242 514.484 676.246 514.23 cv
676.242 514.051 676.211 513.875 676.156 513.707 cv
676.094 513.543 676.008 513.398 675.891 513.273 cv
675.773 513.152 675.621 513.055 675.438 512.984 cv
675.25 512.914 675.035 512.879 674.797 512.879 cv
674.531 512.879 674.289 512.922 674.07 513 cv
673.844 513.082 673.648 513.164 673.48 513.254 cv
673.305 513.348 673.16 513.434 673.051 513.512 cv
672.934 513.59 672.855 513.629 672.813 513.629 cv
672.777 513.629 672.75 513.625 672.727 513.613 cv
672.699 513.602 672.676 513.578 672.664 513.543 cv
672.645 513.512 672.633 513.465 672.629 513.402 cv
672.621 513.344 672.621 513.262 672.621 513.156 cv
672.621 513.09 672.621 513.031 672.625 512.977 cv
672.629 512.93 672.637 512.883 672.652 512.84 cv
672.664 512.805 672.684 512.77 672.703 512.734 cv
672.719 512.707 672.746 512.672 672.793 512.625 cv
672.832 512.586 672.922 512.523 673.055 512.437 cv
673.188 512.359 673.348 512.277 673.543 512.191 cv
673.734 512.113 673.961 512.047 674.215 511.992 cv
674.465 511.941 674.734 511.914 675.031 511.91 cv
675.438 511.914 675.797 511.965 676.109 512.066 cv
676.414 512.172 676.672 512.32 676.883 512.512 cv
677.086 512.703 677.242 512.93 677.348 513.195 cv
677.445 513.461 677.496 513.758 677.5 514.078 cv
677.496 514.359 677.461 514.617 677.391 514.855 cv
677.316 515.094 677.207 515.305 677.07 515.488 cv
676.926 515.676 676.754 515.832 676.551 515.961 cv
676.344 516.09 676.109 516.18 675.844 516.23 cv
675.844 516.242 li
676.148 516.273 676.426 516.352 676.68 516.473 cv
676.93 516.594 677.148 516.746 677.332 516.926 cv
677.512 517.113 677.652 517.324 677.758 517.566 cv
677.855 517.809 677.906 518.07 677.91 518.344 cv
cp
f
685.059 520.367 mo
685.055 520.449 685.047 520.523 685.039 520.586 cv
685.023 520.652 685.008 520.707 684.992 520.746 cv
684.969 520.793 684.941 520.824 684.91 520.84 cv
684.871 520.863 684.836 520.871 684.797 520.871 cv
679.918 520.871 li
679.848 520.871 679.793 520.863 679.75 520.848 cv
679.699 520.832 679.656 520.809 679.625 520.77 cv
679.586 520.738 679.563 520.684 679.551 520.613 cv
679.531 520.543 679.523 520.461 679.527 520.359 cv
679.523 520.273 679.527 520.191 679.539 520.121 cv
679.543 520.055 679.559 519.996 679.586 519.941 cv
679.605 519.891 679.633 519.836 679.672 519.781 cv
679.703 519.73 679.75 519.676 679.809 519.613 cv
681.574 517.801 li
681.98 517.383 682.305 517.008 682.555 516.676 cv
682.797 516.344 682.988 516.043 683.125 515.766 cv
683.258 515.496 683.348 515.246 683.391 515.023 cv
683.43 514.801 683.449 514.594 683.453 514.395 cv
683.449 514.199 683.418 514.012 683.355 513.836 cv
683.289 513.664 683.191 513.512 683.07 513.379 cv
682.941 513.25 682.785 513.145 682.602 513.062 cv
682.41 512.988 682.195 512.949 681.953 512.945 cv
681.664 512.949 681.406 512.988 681.18 513.062 cv
680.949 513.145 680.75 513.23 680.582 513.316 cv
680.406 513.41 680.262 513.492 680.152 513.566 cv
680.035 513.648 679.949 513.687 679.895 513.684 cv
679.859 513.687 679.832 513.68 679.809 513.656 cv
679.781 513.641 679.758 513.609 679.742 513.566 cv
679.723 513.527 679.711 513.473 679.703 513.402 cv
679.691 513.336 679.688 513.254 679.691 513.156 cv
679.688 513.09 679.691 513.031 679.699 512.98 cv
679.703 512.934 679.711 512.891 679.723 512.852 cv
679.73 512.816 679.742 512.781 679.766 512.75 cv
679.781 512.719 679.82 512.68 679.875 512.629 cv
679.93 512.586 680.023 512.523 680.156 512.437 cv
680.289 512.359 680.457 512.277 680.664 512.191 cv
680.863 512.113 681.086 512.047 681.332 511.992 cv
681.574 511.941 681.832 511.914 682.102 511.91 cv
682.527 511.914 682.898 511.973 683.223 512.09 cv
683.543 512.211 683.813 512.375 684.023 512.586 cv
684.234 512.797 684.391 513.043 684.496 513.316 cv
684.602 513.598 684.656 513.891 684.656 514.203 cv
684.656 514.484 684.629 514.766 684.578 515.047 cv
684.527 515.328 684.422 515.633 684.262 515.953 cv
684.098 516.281 683.863 516.641 683.563 517.039 cv
683.254 517.437 682.852 517.898 682.348 518.414 cv
680.949 519.875 li
684.793 519.875 li
684.824 519.875 684.859 519.887 684.898 519.906 cv
684.93 519.93 684.961 519.961 684.984 520 cv
685.008 520.043 685.023 520.094 685.039 520.152 cv
685.047 520.215 685.055 520.285 685.059 520.367 cv
cp
f
7.648 308.383 mo
7.75 308.383 7.836 308.391 7.906 308.398 cv
7.98 308.414 8.039 308.43 8.082 308.449 cv
8.129 308.477 8.16 308.504 8.18 308.535 cv
8.203 308.57 8.215 308.609 8.211 308.648 cv
8.211 311.496 li
16.988 311.496 li
17.031 311.5 17.066 311.512 17.098 311.527 cv
17.129 311.551 17.156 311.586 17.172 311.637 cv
17.191 311.691 17.203 311.762 17.219 311.844 cv
17.23 311.934 17.238 312.039 17.238 312.168 cv
17.238 312.293 17.23 312.402 17.219 312.488 cv
17.203 312.582 17.191 312.652 17.172 312.699 cv
17.156 312.754 17.129 312.789 17.098 312.809 cv
17.066 312.832 17.031 312.844 16.988 312.84 cv
8.211 312.84 li
8.211 315.687 li
8.215 315.734 8.203 315.77 8.18 315.801 cv
8.16 315.836 8.129 315.863 8.082 315.883 cv
8.039 315.906 7.98 315.926 7.906 315.934 cv
7.836 315.949 7.75 315.953 7.648 315.953 cv
7.551 315.953 7.465 315.949 7.387 315.934 cv
7.316 315.926 7.254 315.906 7.203 315.883 cv
7.16 315.863 7.125 315.836 7.102 315.801 cv
7.082 315.77 7.074 315.734 7.07 315.687 cv
7.07 308.648 li
7.074 308.609 7.082 308.57 7.102 308.535 cv
7.125 308.504 7.16 308.477 7.203 308.449 cv
7.254 308.43 7.316 308.414 7.387 308.398 cv
7.465 308.391 7.551 308.383 7.648 308.383 cv
cp
f
16.996 305.781 mo
17.043 305.785 17.078 305.797 17.102 305.812 cv
17.133 305.836 17.156 305.867 17.176 305.914 cv
17.195 305.961 17.207 306.027 17.223 306.109 cv
17.23 306.195 17.238 306.301 17.238 306.43 cv
17.238 306.555 17.23 306.66 17.223 306.746 cv
17.207 306.832 17.195 306.898 17.176 306.945 cv
17.156 306.996 17.133 307.031 17.102 307.047 cv
17.078 307.066 17.043 307.074 16.996 307.074 cv
9.957 307.074 li
9.922 307.074 9.887 307.066 9.855 307.047 cv
9.824 307.031 9.801 306.996 9.777 306.945 cv
9.762 306.898 9.746 306.832 9.73 306.746 cv
9.723 306.66 9.715 306.555 9.715 306.43 cv
9.715 306.301 9.723 306.195 9.73 306.109 cv
9.746 306.027 9.762 305.961 9.777 305.914 cv
9.801 305.867 9.824 305.836 9.855 305.812 cv
9.887 305.797 9.922 305.785 9.957 305.781 cv
cp
7.578 305.633 mo
7.883 305.633 8.09 305.691 8.195 305.805 cv
8.309 305.922 8.363 306.133 8.359 306.437 cv
8.363 306.746 8.309 306.953 8.199 307.062 cv
8.094 307.176 7.891 307.234 7.594 307.23 cv
7.293 307.234 7.09 307.176 6.977 307.059 cv
6.871 306.945 6.816 306.734 6.813 306.422 cv
6.816 306.125 6.867 305.918 6.973 305.801 cv
7.082 305.691 7.285 305.633 7.578 305.633 cv
cp
f
16.996 292.941 mo
17.043 292.945 17.078 292.957 17.102 292.973 cv
17.133 292.996 17.156 293.027 17.176 293.074 cv
17.195 293.121 17.207 293.187 17.223 293.27 cv
17.23 293.355 17.238 293.461 17.238 293.582 cv
17.238 293.719 17.23 293.824 17.223 293.906 cv
17.207 293.992 17.195 294.059 17.176 294.105 cv
17.156 294.156 17.133 294.191 17.102 294.211 cv
17.078 294.234 17.043 294.246 16.996 294.242 cv
12.719 294.242 li
12.422 294.246 12.148 294.273 11.902 294.32 cv
11.66 294.375 11.449 294.457 11.27 294.57 cv
11.094 294.687 10.957 294.832 10.863 295.008 cv
10.77 295.187 10.723 295.398 10.723 295.633 cv
10.723 295.934 10.84 296.23 11.066 296.531 cv
11.301 296.832 11.637 297.164 12.074 297.52 cv
16.996 297.52 li
17.043 297.523 17.078 297.531 17.102 297.551 cv
17.133 297.574 17.156 297.609 17.176 297.656 cv
17.195 297.707 17.207 297.773 17.223 297.855 cv
17.23 297.941 17.238 298.047 17.238 298.168 cv
17.238 298.289 17.23 298.391 17.223 298.477 cv
17.207 298.562 17.195 298.633 17.176 298.68 cv
17.156 298.734 17.133 298.766 17.102 298.781 cv
17.078 298.801 17.043 298.812 16.996 298.809 cv
12.719 298.809 li
12.422 298.812 12.148 298.84 11.902 298.895 cv
11.66 298.953 11.449 299.039 11.27 299.152 cv
11.094 299.27 10.957 299.414 10.863 299.586 cv
10.77 299.762 10.723 299.969 10.723 300.211 cv
10.723 300.508 10.84 300.809 11.066 301.109 cv
11.301 301.414 11.637 301.742 12.074 302.094 cv
16.996 302.094 li
17.043 302.098 17.078 302.109 17.102 302.125 cv
17.133 302.148 17.156 302.18 17.176 302.227 cv
17.195 302.273 17.207 302.34 17.223 302.422 cv
17.23 302.508 17.238 302.613 17.238 302.742 cv
17.238 302.867 17.23 302.973 17.223 303.059 cv
17.207 303.145 17.195 303.211 17.176 303.258 cv
17.156 303.309 17.133 303.344 17.102 303.359 cv
17.078 303.379 17.043 303.387 16.996 303.387 cv
9.957 303.387 li
9.918 303.387 9.883 303.379 9.852 303.363 cv
9.824 303.348 9.797 303.316 9.773 303.27 cv
9.75 303.223 9.734 303.164 9.727 303.09 cv
9.719 303.016 9.715 302.918 9.715 302.797 cv
9.715 302.684 9.719 302.59 9.727 302.512 cv
9.734 302.441 9.75 302.383 9.773 302.336 cv
9.797 302.297 9.824 302.266 9.852 302.246 cv
9.883 302.23 9.918 302.223 9.957 302.219 cv
10.887 302.219 li
10.445 301.828 10.121 301.441 9.914 301.066 cv
9.711 300.695 9.609 300.32 9.605 299.937 cv
9.609 299.645 9.645 299.383 9.707 299.148 cv
9.777 298.922 9.871 298.715 9.992 298.535 cv
10.117 298.359 10.262 298.211 10.43 298.082 cv
10.602 297.961 10.793 297.855 10.996 297.77 cv
10.746 297.539 10.527 297.316 10.348 297.102 cv
10.172 296.895 10.031 296.691 9.918 296.492 cv
9.813 296.297 9.73 296.105 9.68 295.918 cv
9.633 295.734 9.609 295.547 9.605 295.359 cv
9.609 294.906 9.688 294.527 9.844 294.219 cv
10.004 293.914 10.219 293.664 10.48 293.473 cv
10.75 293.281 11.059 293.145 11.414 293.062 cv
11.773 292.984 12.152 292.945 12.547 292.941 cv
cp
f
13.172 284.582 mo
13.375 284.586 13.52 284.637 13.605 284.734 cv
13.691 284.84 13.734 284.953 13.734 285.082 cv
13.734 289.719 li
14.125 289.723 14.477 289.684 14.789 289.602 cv
15.102 289.527 15.371 289.398 15.598 289.211 cv
15.824 289.031 15.996 288.793 16.113 288.496 cv
16.234 288.207 16.297 287.848 16.293 287.418 cv
16.297 287.086 16.27 286.785 16.211 286.523 cv
16.16 286.262 16.098 286.035 16.027 285.844 cv
15.961 285.652 15.898 285.496 15.844 285.371 cv
15.789 285.25 15.762 285.156 15.762 285.09 cv
15.762 285.055 15.773 285.023 15.789 284.992 cv
15.813 284.969 15.84 284.945 15.871 284.926 cv
15.91 284.914 15.961 284.902 16.023 284.891 cv
16.094 284.887 16.172 284.883 16.262 284.879 cv
16.332 284.883 16.391 284.887 16.438 284.887 cv
16.488 284.895 16.531 284.898 16.57 284.906 cv
16.609 284.914 16.645 284.93 16.676 284.945 cv
16.707 284.969 16.738 284.992 16.766 285.016 cv
16.797 285.047 16.844 285.129 16.906 285.27 cv
16.973 285.41 17.035 285.594 17.098 285.816 cv
17.16 286.043 17.215 286.301 17.266 286.594 cv
17.313 286.891 17.336 287.207 17.34 287.539 cv
17.336 288.121 17.258 288.629 17.098 289.059 cv
16.938 289.496 16.699 289.863 16.379 290.16 cv
16.063 290.461 15.664 290.684 15.184 290.832 cv
14.703 290.984 14.145 291.059 13.508 291.059 cv
12.906 291.059 12.363 290.98 11.879 290.824 cv
11.398 290.668 10.988 290.445 10.648 290.148 cv
10.316 289.855 10.059 289.496 9.875 289.078 cv
9.699 288.664 9.609 288.199 9.605 287.68 cv
9.609 287.129 9.699 286.656 9.871 286.266 cv
10.051 285.879 10.289 285.562 10.586 285.309 cv
10.891 285.062 11.242 284.879 11.641 284.758 cv
12.047 284.645 12.477 284.586 12.938 284.582 cv
cp
12.789 285.879 mo
12.113 285.863 11.578 286.016 11.191 286.332 cv
10.809 286.652 10.617 287.125 10.613 287.746 cv
10.617 288.07 10.676 288.352 10.793 288.59 cv
10.914 288.832 11.074 289.031 11.27 289.195 cv
11.469 289.359 11.699 289.484 11.961 289.57 cv
12.227 289.66 12.504 289.711 12.789 289.719 cv
cp
f
6.414 276.379 mo
7.465 276.875 8.539 277.242 9.641 277.484 cv
10.746 277.727 11.855 277.848 12.969 277.848 cv
14.09 277.848 15.199 277.727 16.301 277.477 cv
17.398 277.234 18.477 276.871 19.539 276.395 cv
19.598 276.371 19.652 276.359 19.699 276.352 cv
19.742 276.352 19.777 276.367 19.809 276.402 cv
19.836 276.441 19.855 276.496 19.871 276.57 cv
19.879 276.648 19.887 276.754 19.891 276.879 cv
19.887 276.977 19.883 277.055 19.883 277.121 cv
19.875 277.191 19.867 277.25 19.852 277.297 cv
19.836 277.348 19.816 277.391 19.797 277.418 cv
19.773 277.453 19.75 277.477 19.727 277.488 cv
19.191 277.773 18.652 278.02 18.109 278.23 cv
17.563 278.445 17.012 278.625 16.449 278.773 cv
15.887 278.922 15.316 279.031 14.738 279.102 cv
14.164 279.176 13.582 279.215 12.992 279.211 cv
12.402 279.215 11.82 279.172 11.246 279.09 cv
10.676 279.012 10.105 278.898 9.539 278.746 cv
8.973 278.598 8.418 278.414 7.867 278.199 cv
7.324 277.988 6.781 277.75 6.238 277.48 cv
6.223 277.477 6.203 277.461 6.184 277.437 cv
6.172 277.414 6.156 277.383 6.137 277.34 cv
6.125 277.301 6.113 277.242 6.102 277.168 cv
6.098 277.098 6.094 277.004 6.09 276.887 cv
6.094 276.77 6.102 276.676 6.113 276.598 cv
6.133 276.527 6.152 276.469 6.176 276.426 cv
6.203 276.387 6.238 276.363 6.281 276.355 cv
6.324 276.352 6.371 276.359 6.414 276.379 cv
cp
f
14.352 268.613 mo
14.828 268.617 15.25 268.703 15.621 268.875 cv
15.992 269.051 16.309 269.293 16.563 269.602 cv
16.824 269.914 17.016 270.281 17.145 270.699 cv
17.273 271.121 17.336 271.57 17.34 272.055 cv
17.336 272.395 17.309 272.711 17.254 272.996 cv
17.195 273.289 17.129 273.547 17.043 273.773 cv
16.965 274.004 16.879 274.195 16.785 274.344 cv
16.699 274.5 16.621 274.605 16.559 274.664 cv
16.496 274.727 16.418 274.77 16.32 274.797 cv
16.227 274.828 16.098 274.844 15.934 274.84 cv
15.82 274.844 15.727 274.84 15.648 274.824 cv
15.574 274.816 15.512 274.801 15.461 274.777 cv
15.418 274.762 15.383 274.734 15.363 274.699 cv
15.348 274.672 15.34 274.637 15.336 274.59 cv
15.34 274.52 15.383 274.414 15.469 274.281 cv
15.559 274.148 15.656 273.98 15.762 273.77 cv
15.867 273.562 15.965 273.309 16.055 273.012 cv
16.148 272.719 16.195 272.379 16.191 271.992 cv
16.195 271.703 16.156 271.437 16.074 271.191 cv
16 270.953 15.891 270.742 15.742 270.566 cv
15.602 270.391 15.422 270.258 15.211 270.16 cv
15.004 270.07 14.77 270.023 14.5 270.02 cv
14.219 270.023 13.973 270.086 13.766 270.215 cv
13.566 270.348 13.387 270.523 13.23 270.734 cv
13.078 270.953 12.938 271.195 12.809 271.465 cv
12.684 271.742 12.555 272.023 12.418 272.305 cv
12.285 272.594 12.137 272.871 11.973 273.141 cv
11.813 273.414 11.621 273.656 11.402 273.871 cv
11.184 274.086 10.93 274.262 10.633 274.391 cv
10.344 274.527 9.988 274.594 9.574 274.59 cv
9.152 274.594 8.777 274.516 8.441 274.359 cv
8.113 274.207 7.836 273.992 7.609 273.719 cv
7.391 273.445 7.219 273.121 7.098 272.738 cv
6.984 272.363 6.926 271.953 6.922 271.516 cv
6.926 271.293 6.945 271.07 6.98 270.84 cv
7.023 270.613 7.074 270.398 7.137 270.195 cv
7.203 270 7.277 269.82 7.355 269.66 cv
7.438 269.508 7.504 269.406 7.551 269.352 cv
7.605 269.305 7.645 269.27 7.668 269.254 cv
7.699 269.238 7.734 269.227 7.777 269.215 cv
7.824 269.207 7.879 269.199 7.938 269.191 cv
8.004 269.187 8.082 269.184 8.18 269.184 cv
8.273 269.184 8.359 269.187 8.43 269.195 cv
8.508 269.203 8.566 269.215 8.613 269.23 cv
8.664 269.246 8.703 269.27 8.723 269.297 cv
8.75 269.328 8.762 269.359 8.758 269.395 cv
8.762 269.453 8.723 269.543 8.648 269.664 cv
8.578 269.789 8.496 269.941 8.402 270.113 cv
8.313 270.293 8.23 270.504 8.152 270.746 cv
8.078 270.992 8.039 271.262 8.039 271.562 cv
8.039 271.844 8.078 272.09 8.152 272.297 cv
8.23 272.508 8.332 272.68 8.453 272.812 cv
8.582 272.949 8.73 273.051 8.898 273.117 cv
9.074 273.187 9.258 273.223 9.449 273.219 cv
9.734 273.223 9.977 273.156 10.176 273.023 cv
10.383 272.895 10.563 272.723 10.715 272.504 cv
10.875 272.293 11.016 272.047 11.145 271.766 cv
11.277 271.492 11.41 271.211 11.539 270.922 cv
11.676 270.637 11.82 270.352 11.977 270.074 cv
12.137 269.801 12.328 269.555 12.543 269.336 cv
12.762 269.121 13.016 268.949 13.309 268.812 cv
13.605 268.684 13.953 268.617 14.352 268.613 cv
cp
f
13.172 260.84 mo
13.375 260.844 13.52 260.895 13.605 260.992 cv
13.691 261.098 13.734 261.211 13.734 261.34 cv
13.734 265.977 li
14.125 265.98 14.477 265.941 14.789 265.859 cv
15.102 265.785 15.371 265.656 15.598 265.469 cv
15.824 265.289 15.996 265.051 16.113 264.754 cv
16.234 264.465 16.297 264.105 16.293 263.676 cv
16.297 263.344 16.27 263.043 16.211 262.781 cv
16.16 262.52 16.098 262.293 16.027 262.102 cv
15.961 261.91 15.898 261.754 15.844 261.629 cv
15.789 261.508 15.762 261.414 15.762 261.348 cv
15.762 261.312 15.773 261.281 15.789 261.25 cv
15.813 261.227 15.84 261.203 15.871 261.184 cv
15.91 261.172 15.961 261.16 16.023 261.148 cv
16.094 261.145 16.172 261.141 16.262 261.137 cv
16.332 261.141 16.391 261.145 16.438 261.145 cv
16.488 261.152 16.531 261.156 16.57 261.164 cv
16.609 261.172 16.645 261.187 16.676 261.203 cv
16.707 261.227 16.738 261.25 16.766 261.273 cv
16.797 261.305 16.844 261.387 16.906 261.527 cv
16.973 261.668 17.035 261.852 17.098 262.074 cv
17.16 262.301 17.215 262.559 17.266 262.852 cv
17.313 263.148 17.336 263.465 17.34 263.797 cv
17.336 264.379 17.258 264.887 17.098 265.316 cv
16.938 265.754 16.699 266.121 16.379 266.418 cv
16.063 266.719 15.664 266.941 15.184 267.09 cv
14.703 267.242 14.145 267.316 13.508 267.316 cv
12.906 267.316 12.363 267.238 11.879 267.082 cv
11.398 266.926 10.988 266.703 10.648 266.406 cv
10.316 266.113 10.059 265.754 9.875 265.336 cv
9.699 264.922 9.609 264.457 9.605 263.937 cv
9.609 263.387 9.699 262.914 9.871 262.523 cv
10.051 262.137 10.289 261.82 10.586 261.566 cv
10.891 261.32 11.242 261.137 11.641 261.016 cv
12.047 260.902 12.477 260.844 12.938 260.84 cv
cp
12.789 262.137 mo
12.113 262.121 11.578 262.273 11.191 262.59 cv
10.809 262.91 10.617 263.383 10.613 264.004 cv
10.617 264.328 10.676 264.609 10.793 264.848 cv
10.914 265.09 11.074 265.289 11.27 265.453 cv
11.469 265.617 11.699 265.742 11.961 265.828 cv
12.227 265.918 12.504 265.969 12.789 265.977 cv
cp
f
15.926 253.805 mo
16.016 253.805 16.094 253.809 16.156 253.812 cv
16.223 253.82 16.277 253.828 16.32 253.84 cv
16.367 253.855 16.406 253.871 16.438 253.887 cv
16.473 253.906 16.523 253.949 16.586 254.012 cv
16.656 254.078 16.734 254.187 16.828 254.344 cv
16.926 254.5 17.012 254.676 17.086 254.871 cv
17.16 255.066 17.219 255.281 17.27 255.512 cv
17.313 255.742 17.336 255.98 17.34 256.223 cv
17.336 256.73 17.258 257.176 17.09 257.566 cv
16.926 257.957 16.68 258.285 16.359 258.551 cv
16.039 258.816 15.648 259.02 15.18 259.152 cv
14.715 259.293 14.176 259.359 13.563 259.359 cv
12.875 259.359 12.277 259.277 11.777 259.105 cv
11.277 258.941 10.871 258.707 10.551 258.41 cv
10.238 258.113 10 257.766 9.844 257.367 cv
9.691 256.969 9.617 256.539 9.613 256.074 cv
9.617 255.852 9.637 255.633 9.676 255.422 cv
9.719 255.211 9.773 255.016 9.84 254.836 cv
9.91 254.66 9.988 254.504 10.074 254.363 cv
10.164 254.227 10.238 254.125 10.301 254.062 cv
10.363 254 10.414 253.957 10.449 253.934 cv
10.488 253.91 10.531 253.891 10.578 253.875 cv
10.629 253.859 10.684 253.852 10.746 253.844 cv
10.809 253.844 10.887 253.84 10.98 253.836 cv
11.184 253.84 11.328 253.863 11.406 253.906 cv
11.492 253.957 11.531 254.016 11.527 254.078 cv
11.531 254.16 11.488 254.25 11.398 254.348 cv
11.316 254.453 11.223 254.582 11.113 254.734 cv
11.012 254.895 10.914 255.082 10.828 255.305 cv
10.742 255.527 10.699 255.789 10.699 256.09 cv
10.699 256.711 10.938 257.187 11.414 257.516 cv
11.891 257.848 12.586 258.012 13.492 258.012 cv
13.949 258.012 14.344 257.969 14.684 257.883 cv
15.027 257.797 15.316 257.672 15.543 257.504 cv
15.777 257.34 15.945 257.137 16.055 256.891 cv
16.168 256.652 16.227 256.375 16.223 256.059 cv
16.227 255.766 16.18 255.504 16.082 255.277 cv
15.992 255.055 15.887 254.859 15.773 254.691 cv
15.66 254.531 15.559 254.395 15.465 254.277 cv
15.375 254.168 15.328 254.078 15.328 254.016 cv
15.328 253.98 15.34 253.949 15.359 253.922 cv
15.383 253.898 15.418 253.879 15.465 253.855 cv
15.516 253.84 15.578 253.824 15.656 253.816 cv
15.734 253.809 15.824 253.805 15.926 253.805 cv
cp
f
13.398 245.625 mo
13.977 245.629 14.504 245.703 14.984 245.852 cv
15.469 246.004 15.883 246.23 16.23 246.527 cv
16.582 246.832 16.855 247.207 17.047 247.652 cv
17.242 248.105 17.336 248.629 17.34 249.223 cv
17.336 249.805 17.254 250.309 17.082 250.734 cv
16.914 251.168 16.664 251.527 16.332 251.812 cv
16.008 252.102 15.609 252.312 15.137 252.453 cv
14.668 252.594 14.137 252.664 13.539 252.664 cv
12.969 252.664 12.441 252.59 11.957 252.441 cv
11.477 252.293 11.059 252.07 10.707 251.77 cv
10.359 251.469 10.09 251.094 9.895 250.645 cv
9.707 250.199 9.609 249.676 9.605 249.074 cv
9.609 248.496 9.695 247.992 9.863 247.559 cv
10.039 247.133 10.289 246.773 10.613 246.484 cv
10.945 246.199 11.344 245.984 11.813 245.84 cv
12.281 245.699 12.813 245.629 13.398 245.625 cv
cp
13.484 246.961 mo
13.105 246.965 12.746 247 12.406 247.07 cv
12.066 247.145 11.77 247.262 11.512 247.422 cv
11.262 247.586 11.059 247.805 10.906 248.082 cv
10.762 248.363 10.688 248.711 10.684 249.125 cv
10.688 249.508 10.754 249.84 10.887 250.113 cv
11.023 250.395 11.215 250.621 11.461 250.797 cv
11.711 250.98 12.008 251.113 12.344 251.195 cv
12.688 251.285 13.055 251.328 13.453 251.324 cv
13.84 251.328 14.203 251.293 14.539 251.219 cv
14.879 251.152 15.176 251.035 15.43 250.863 cv
15.684 250.699 15.883 250.477 16.031 250.195 cv
16.18 249.922 16.254 249.574 16.254 249.156 cv
16.254 248.777 16.188 248.449 16.051 248.168 cv
15.918 247.895 15.727 247.664 15.48 247.484 cv
15.234 247.305 14.941 247.176 14.602 247.09 cv
14.266 247.008 13.895 246.965 13.484 246.961 cv
cp
f
16.996 237.668 mo
17.043 237.672 17.078 237.684 17.102 237.699 cv
17.133 237.723 17.156 237.754 17.176 237.801 cv
17.195 237.848 17.207 237.914 17.223 237.996 cv
17.23 238.082 17.238 238.187 17.238 238.309 cv
17.238 238.441 17.23 238.547 17.223 238.629 cv
17.207 238.715 17.195 238.781 17.176 238.824 cv
17.156 238.875 17.133 238.906 17.102 238.926 cv
17.078 238.949 17.043 238.961 16.996 238.957 cv
12.875 238.957 li
12.473 238.961 12.148 238.992 11.902 239.051 cv
11.66 239.117 11.449 239.207 11.27 239.324 cv
11.094 239.445 10.957 239.602 10.863 239.789 cv
10.77 239.98 10.723 240.203 10.723 240.453 cv
10.723 240.781 10.84 241.102 11.066 241.422 cv
11.301 241.746 11.637 242.086 12.074 242.437 cv
16.996 242.437 li
17.043 242.441 17.078 242.453 17.102 242.469 cv
17.133 242.492 17.156 242.523 17.176 242.57 cv
17.195 242.617 17.207 242.684 17.223 242.766 cv
17.23 242.852 17.238 242.957 17.238 243.086 cv
17.238 243.211 17.23 243.316 17.223 243.402 cv
17.207 243.488 17.195 243.555 17.176 243.602 cv
17.156 243.652 17.133 243.687 17.102 243.703 cv
17.078 243.723 17.043 243.73 16.996 243.73 cv
9.957 243.73 li
9.918 243.73 9.883 243.723 9.852 243.707 cv
9.824 243.691 9.797 243.66 9.773 243.613 cv
9.75 243.566 9.734 243.508 9.727 243.434 cv
9.719 243.359 9.715 243.262 9.715 243.141 cv
9.715 243.027 9.719 242.934 9.727 242.855 cv
9.734 242.785 9.75 242.727 9.773 242.68 cv
9.797 242.641 9.824 242.609 9.852 242.59 cv
9.883 242.574 9.918 242.566 9.957 242.562 cv
10.887 242.562 li
10.445 242.172 10.121 241.777 9.914 241.379 cv
9.711 240.988 9.609 240.59 9.605 240.184 cv
9.609 239.719 9.688 239.324 9.844 239 cv
10.004 238.684 10.219 238.422 10.48 238.223 cv
10.75 238.027 11.059 237.887 11.414 237.797 cv
11.773 237.715 12.203 237.672 12.703 237.668 cv
cp
f
16.996 229.289 mo
17.043 229.293 17.078 229.301 17.105 229.316 cv
17.141 229.336 17.164 229.367 17.18 229.41 cv
17.195 229.457 17.207 229.516 17.223 229.586 cv
17.23 229.66 17.238 229.75 17.238 229.852 cv
17.238 229.965 17.23 230.055 17.223 230.125 cv
17.207 230.199 17.195 230.258 17.18 230.305 cv
17.164 230.352 17.141 230.387 17.105 230.406 cv
17.078 230.43 17.043 230.441 16.996 230.437 cv
16.066 230.437 li
16.469 230.812 16.781 231.195 17.004 231.594 cv
17.227 231.992 17.336 232.43 17.34 232.902 cv
17.336 233.422 17.238 233.863 17.039 234.223 cv
16.84 234.59 16.57 234.887 16.227 235.113 cv
15.887 235.344 15.484 235.508 15.023 235.609 cv
14.563 235.715 14.078 235.766 13.563 235.766 cv
12.961 235.766 12.414 235.703 11.926 235.57 cv
11.438 235.445 11.02 235.25 10.676 234.992 cv
10.332 234.734 10.07 234.418 9.883 234.039 cv
9.703 233.664 9.609 233.227 9.605 232.73 cv
9.609 232.32 9.699 231.945 9.875 231.602 cv
10.059 231.262 10.324 230.922 10.668 230.586 cv
6.578 230.586 li
6.547 230.586 6.512 230.578 6.473 230.559 cv
6.441 230.543 6.414 230.508 6.395 230.453 cv
6.379 230.402 6.363 230.336 6.348 230.254 cv
6.336 230.176 6.328 230.074 6.328 229.945 cv
6.328 229.82 6.336 229.711 6.348 229.625 cv
6.363 229.543 6.379 229.48 6.395 229.43 cv
6.414 229.387 6.441 229.352 6.473 229.324 cv
6.512 229.305 6.547 229.293 6.578 229.289 cv
cp
12.043 230.586 mo
11.613 230.937 11.285 231.277 11.055 231.602 cv
10.832 231.93 10.719 232.27 10.715 232.621 cv
10.719 232.953 10.797 233.23 10.949 233.457 cv
11.109 233.687 11.313 233.875 11.566 234.016 cv
11.824 234.16 12.117 234.266 12.438 234.328 cv
12.766 234.398 13.094 234.43 13.422 234.426 cv
13.781 234.43 14.125 234.402 14.461 234.344 cv
14.801 234.293 15.105 234.199 15.367 234.059 cv
15.633 233.926 15.844 233.746 16 233.52 cv
16.164 233.301 16.242 233.02 16.238 232.676 cv
16.242 232.508 16.219 232.34 16.168 232.18 cv
16.125 232.023 16.047 231.863 15.934 231.691 cv
15.828 231.527 15.688 231.352 15.508 231.164 cv
15.336 230.984 15.117 230.789 14.859 230.586 cv
cp
f
15.078 222.488 mo
15.441 222.492 15.762 222.559 16.043 222.687 cv
16.324 222.824 16.563 223.016 16.754 223.258 cv
16.949 223.508 17.094 223.797 17.191 224.133 cv
17.289 224.473 17.336 224.848 17.34 225.25 cv
17.336 225.504 17.316 225.742 17.281 225.965 cv
17.238 226.195 17.191 226.398 17.133 226.578 cv
17.074 226.762 17.012 226.914 16.945 227.035 cv
16.883 227.164 16.824 227.254 16.77 227.309 cv
16.719 227.367 16.648 227.41 16.551 227.434 cv
16.461 227.461 16.332 227.473 16.168 227.473 cv
16.07 227.473 15.988 227.469 15.918 227.457 cv
15.855 227.449 15.801 227.437 15.754 227.418 cv
15.715 227.406 15.684 227.383 15.664 227.352 cv
15.648 227.324 15.641 227.293 15.637 227.254 cv
15.641 227.199 15.676 227.113 15.742 227 cv
15.816 226.891 15.891 226.754 15.973 226.586 cv
16.059 226.422 16.137 226.227 16.203 226 cv
16.277 225.781 16.313 225.523 16.309 225.227 cv
16.313 225.012 16.289 224.812 16.238 224.633 cv
16.195 224.457 16.125 224.305 16.031 224.172 cv
15.941 224.047 15.828 223.945 15.684 223.871 cv
15.543 223.805 15.375 223.77 15.18 223.766 cv
14.984 223.77 14.816 223.82 14.68 223.918 cv
14.547 224.023 14.426 224.156 14.32 224.32 cv
14.219 224.488 14.129 224.676 14.043 224.883 cv
13.965 225.094 13.879 225.309 13.789 225.527 cv
13.703 225.75 13.602 225.969 13.488 226.176 cv
13.379 226.391 13.242 226.578 13.078 226.746 cv
12.918 226.914 12.727 227.051 12.5 227.148 cv
12.277 227.254 12.008 227.305 11.691 227.301 cv
11.418 227.305 11.152 227.25 10.898 227.141 cv
10.648 227.035 10.43 226.875 10.234 226.66 cv
10.047 226.445 9.895 226.176 9.777 225.855 cv
9.668 225.535 9.609 225.164 9.605 224.734 cv
9.609 224.551 9.625 224.363 9.652 224.172 cv
9.688 223.988 9.727 223.816 9.77 223.664 cv
9.82 223.516 9.871 223.387 9.922 223.277 cv
9.98 223.168 10.027 223.086 10.066 223.031 cv
10.109 222.977 10.148 222.941 10.176 222.922 cv
10.211 222.906 10.246 222.895 10.281 222.883 cv
10.324 222.879 10.371 222.871 10.426 222.859 cv
10.484 222.855 10.555 222.852 10.637 222.848 cv
10.727 222.852 10.805 222.855 10.867 222.859 cv
10.938 222.871 10.988 222.883 11.027 222.898 cv
11.07 222.918 11.102 222.941 11.117 222.965 cv
11.137 222.996 11.145 223.023 11.145 223.051 cv
11.145 223.102 11.117 223.168 11.059 223.254 cv
11.004 223.344 10.941 223.461 10.875 223.602 cv
10.813 223.746 10.754 223.91 10.691 224.098 cv
10.637 224.289 10.605 224.508 10.605 224.75 cv
10.605 224.973 10.633 225.164 10.68 225.328 cv
10.734 225.496 10.805 225.633 10.891 225.738 cv
10.984 225.848 11.09 225.93 11.215 225.98 cv
11.34 226.039 11.477 226.066 11.621 226.062 cv
11.828 226.066 12 226.016 12.133 225.906 cv
12.273 225.805 12.395 225.668 12.5 225.5 cv
12.605 225.336 12.699 225.145 12.781 224.93 cv
12.867 224.719 12.953 224.504 13.039 224.277 cv
13.129 224.059 13.227 223.84 13.336 223.621 cv
13.445 223.406 13.578 223.211 13.734 223.043 cv
13.891 222.879 14.078 222.746 14.297 222.641 cv
14.516 222.543 14.777 222.492 15.078 222.488 cv
cp
f
12.992 218.031 mo
13.582 218.031 14.164 218.07 14.738 218.141 cv
15.316 218.219 15.887 218.328 16.449 218.469 cv
17.012 218.617 17.563 218.793 18.109 219.004 cv
18.652 219.215 19.191 219.461 19.727 219.742 cv
19.75 219.758 19.773 219.781 19.797 219.812 cv
19.816 219.844 19.836 219.887 19.852 219.934 cv
19.867 219.988 19.875 220.047 19.883 220.109 cv
19.883 220.18 19.887 220.262 19.891 220.355 cv
19.887 220.496 19.879 220.602 19.871 220.672 cv
19.855 220.75 19.836 220.805 19.809 220.836 cv
19.777 220.875 19.742 220.891 19.699 220.883 cv
19.652 220.883 19.598 220.867 19.539 220.84 cv
18.48 220.359 17.406 219.996 16.305 219.75 cv
15.203 219.508 14.09 219.387 12.969 219.383 cv
11.855 219.387 10.746 219.508 9.641 219.75 cv
8.539 219.996 7.465 220.363 6.414 220.855 cv
6.371 220.879 6.324 220.887 6.281 220.879 cv
6.238 220.875 6.203 220.852 6.176 220.809 cv
6.152 220.77 6.133 220.715 6.113 220.637 cv
6.102 220.566 6.094 220.469 6.09 220.348 cv
6.094 220.238 6.098 220.145 6.102 220.07 cv
6.113 220 6.125 219.941 6.137 219.895 cv
6.156 219.852 6.172 219.82 6.184 219.797 cv
6.203 219.777 6.223 219.762 6.238 219.75 cv
7.313 219.215 8.41 218.793 9.539 218.488 cv
10.668 218.184 11.82 218.031 12.992 218.031 cv
cp
f
342.586 544.266 mo
342.586 544.309 342.574 544.344 342.555 544.375 cv
342.531 544.406 342.496 544.434 342.445 544.449 cv
342.391 544.469 342.32 544.48 342.234 544.496 cv
342.148 544.508 342.039 544.516 341.91 544.516 cv
341.781 544.516 341.676 544.508 341.59 544.496 cv
341.5 544.48 341.43 544.469 341.379 544.449 cv
341.324 544.434 341.285 544.406 341.27 544.375 cv
341.246 544.344 341.238 544.309 341.238 544.266 cv
341.238 534.539 li
341.238 534.5 341.25 534.465 341.273 534.43 cv
341.297 534.402 341.336 534.375 341.391 534.355 cv
341.445 534.34 341.516 534.324 341.602 534.309 cv
341.688 534.297 341.789 534.293 341.91 534.289 cv
342.039 534.293 342.148 534.297 342.234 534.309 cv
342.32 534.324 342.391 534.34 342.445 534.355 cv
342.496 534.375 342.531 534.402 342.555 534.43 cv
342.574 534.465 342.586 534.5 342.586 534.539 cv
cp
f
355.586 544.273 mo
355.582 544.32 355.57 544.355 355.555 544.379 cv
355.531 544.41 355.5 544.434 355.453 544.453 cv
355.406 544.473 355.34 544.484 355.258 544.5 cv
355.172 544.508 355.066 544.516 354.945 544.516 cv
354.813 544.516 354.707 544.508 354.625 544.5 cv
354.539 544.484 354.473 544.473 354.426 544.453 cv
354.375 544.434 354.34 544.41 354.32 544.379 cv
354.297 544.355 354.285 544.32 354.289 544.273 cv
354.289 539.988 li
354.285 539.695 354.262 539.426 354.211 539.176 cv
354.156 538.934 354.07 538.719 353.957 538.539 cv
353.84 538.363 353.695 538.23 353.52 538.133 cv
353.34 538.043 353.129 537.996 352.895 537.992 cv
352.59 537.996 352.293 538.109 351.996 538.336 cv
351.695 538.566 351.363 538.902 351.008 539.348 cv
351.008 544.273 li
351.004 544.32 350.992 544.355 350.973 544.379 cv
350.949 544.41 350.914 544.434 350.867 544.453 cv
350.813 544.473 350.746 544.484 350.668 544.5 cv
350.582 544.508 350.48 544.516 350.355 544.516 cv
350.234 544.516 350.129 544.508 350.047 544.5 cv
349.957 544.484 349.891 544.473 349.844 544.453 cv
349.793 544.434 349.758 544.41 349.742 544.379 cv
349.719 544.355 349.711 544.32 349.715 544.273 cv
349.715 539.988 li
349.711 539.695 349.684 539.426 349.629 539.176 cv
349.57 538.934 349.48 538.719 349.367 538.539 cv
349.25 538.363 349.105 538.23 348.934 538.133 cv
348.754 538.043 348.547 537.996 348.313 537.992 cv
348.012 537.996 347.711 538.109 347.41 538.336 cv
347.105 538.566 346.777 538.902 346.426 539.348 cv
346.426 544.273 li
346.422 544.32 346.414 544.355 346.395 544.379 cv
346.371 544.41 346.336 544.434 346.289 544.453 cv
346.242 544.473 346.176 544.484 346.094 544.5 cv
346.008 544.508 345.902 544.516 345.773 544.516 cv
345.648 544.516 345.543 544.508 345.461 544.5 cv
345.375 544.484 345.309 544.473 345.262 544.453 cv
345.211 544.434 345.176 544.41 345.16 544.379 cv
345.137 544.355 345.129 544.32 345.133 544.273 cv
345.133 537.223 li
345.129 537.184 345.137 537.148 345.156 537.117 cv
345.168 537.09 345.199 537.062 345.25 537.039 cv
345.293 537.016 345.352 537 345.43 536.992 cv
345.5 536.984 345.598 536.98 345.719 536.98 cv
345.832 536.98 345.926 536.984 346.004 536.992 cv
346.074 537 346.133 537.016 346.18 537.039 cv
346.219 537.062 346.25 537.09 346.27 537.117 cv
346.289 537.148 346.301 537.184 346.301 537.223 cv
346.301 538.156 li
346.695 537.719 347.078 537.395 347.453 537.184 cv
347.824 536.98 348.203 536.875 348.586 536.871 cv
348.875 536.875 349.137 536.91 349.371 536.973 cv
349.605 537.043 349.809 537.137 349.988 537.262 cv
350.16 537.387 350.313 537.535 350.441 537.699 cv
350.563 537.871 350.668 538.059 350.754 538.266 cv
350.988 538.012 351.211 537.797 351.426 537.617 cv
351.633 537.441 351.836 537.297 352.035 537.184 cv
352.227 537.078 352.418 536.996 352.605 536.945 cv
352.793 536.898 352.98 536.875 353.168 536.871 cv
353.621 536.875 354 536.953 354.309 537.109 cv
354.617 537.27 354.867 537.484 355.059 537.75 cv
355.246 538.02 355.383 538.332 355.465 538.687 cv
355.543 539.047 355.582 539.422 355.586 539.816 cv
cp
f
363.191 544.281 mo
363.188 544.344 363.168 544.391 363.129 544.422 cv
363.086 544.453 363.027 544.477 362.957 544.492 cv
362.883 544.508 362.777 544.516 362.637 544.516 cv
362.5 544.516 362.391 544.508 362.313 544.492 cv
362.23 544.477 362.172 544.453 362.133 544.422 cv
362.094 544.391 362.074 544.344 362.078 544.281 cv
362.078 543.574 li
361.77 543.906 361.426 544.164 361.047 544.344 cv
360.668 544.527 360.27 544.613 359.848 544.617 cv
359.477 544.613 359.141 544.566 358.84 544.473 cv
358.539 544.375 358.281 544.238 358.074 544.055 cv
357.859 543.875 357.695 543.652 357.578 543.383 cv
357.457 543.117 357.398 542.812 357.402 542.473 cv
357.398 542.078 357.48 541.734 357.645 541.437 cv
357.809 541.148 358.039 540.906 358.344 540.711 cv
358.641 540.52 359.012 540.371 359.453 540.273 cv
359.891 540.18 360.387 540.133 360.938 540.129 cv
361.906 540.129 li
361.906 539.582 li
361.902 539.312 361.875 539.074 361.82 538.863 cv
361.762 538.656 361.668 538.48 361.543 538.34 cv
361.41 538.203 361.246 538.102 361.047 538.027 cv
360.84 537.961 360.59 537.926 360.293 537.922 cv
359.973 537.926 359.688 537.961 359.438 538.035 cv
359.184 538.113 358.961 538.199 358.77 538.285 cv
358.578 538.379 358.418 538.461 358.293 538.535 cv
358.164 538.613 358.07 538.652 358.008 538.648 cv
357.965 538.652 357.926 538.641 357.898 538.617 cv
357.863 538.598 357.836 538.566 357.816 538.523 cv
357.789 538.484 357.773 538.43 357.766 538.363 cv
357.754 538.301 357.75 538.23 357.75 538.148 cv
357.75 538.02 357.758 537.918 357.777 537.84 cv
357.793 537.77 357.836 537.695 357.91 537.625 cv
357.977 537.559 358.098 537.48 358.273 537.387 cv
358.441 537.297 358.641 537.211 358.867 537.133 cv
359.09 537.059 359.336 536.996 359.605 536.945 cv
359.867 536.898 360.137 536.875 360.41 536.871 cv
360.918 536.875 361.348 536.934 361.703 537.043 cv
362.059 537.16 362.348 537.328 362.566 537.551 cv
362.785 537.773 362.941 538.047 363.043 538.375 cv
363.137 538.703 363.188 539.09 363.191 539.527 cv
cp
361.906 541.062 mo
360.805 541.062 li
360.445 541.066 360.137 541.094 359.879 541.152 cv
359.613 541.215 359.398 541.305 359.227 541.418 cv
359.055 541.539 358.926 541.68 358.848 541.84 cv
358.762 542.008 358.723 542.199 358.727 542.41 cv
358.723 542.777 358.84 543.066 359.074 543.281 cv
359.309 543.5 359.633 543.609 360.051 543.605 cv
360.387 543.609 360.699 543.523 360.992 543.348 cv
361.281 543.18 361.586 542.914 361.906 542.559 cv
cp
f
371.457 537.547 mo
371.457 537.734 371.43 537.863 371.379 537.941 cv
371.328 538.023 371.266 538.066 371.188 538.062 cv
370.18 538.062 li
370.359 538.254 370.484 538.461 370.563 538.687 cv
370.633 538.918 370.672 539.152 370.672 539.395 cv
370.672 539.801 370.605 540.164 370.477 540.477 cv
370.344 540.793 370.156 541.055 369.914 541.27 cv
369.668 541.488 369.379 541.656 369.051 541.766 cv
368.715 541.883 368.344 541.937 367.938 541.937 cv
367.648 541.937 367.379 541.902 367.121 541.824 cv
366.863 541.754 366.66 541.656 366.52 541.539 cv
366.422 541.633 366.348 541.742 366.289 541.859 cv
366.227 541.984 366.195 542.121 366.199 542.277 cv
366.195 542.461 366.281 542.613 366.453 542.73 cv
366.621 542.852 366.848 542.918 367.133 542.926 cv
368.973 543.004 li
369.32 543.016 369.641 543.066 369.934 543.148 cv
370.227 543.238 370.48 543.359 370.695 543.52 cv
370.906 543.68 371.07 543.875 371.195 544.105 cv
371.313 544.34 371.375 544.609 371.375 544.914 cv
371.375 545.238 371.305 545.547 371.172 545.84 cv
371.031 546.129 370.824 546.383 370.551 546.609 cv
370.27 546.828 369.914 547.004 369.48 547.137 cv
369.047 547.262 368.535 547.328 367.945 547.328 cv
367.375 547.328 366.891 547.277 366.492 547.184 cv
366.09 547.082 365.762 546.949 365.508 546.785 cv
365.25 546.613 365.066 546.414 364.953 546.187 cv
364.836 545.953 364.777 545.703 364.781 545.434 cv
364.777 545.258 364.797 545.09 364.844 544.93 cv
364.883 544.766 364.949 544.613 365.035 544.469 cv
365.121 544.324 365.227 544.187 365.359 544.051 cv
365.484 543.922 365.633 543.789 365.801 543.652 cv
365.543 543.527 365.352 543.363 365.23 543.16 cv
365.105 542.965 365.047 542.75 365.047 542.52 cv
365.047 542.203 365.109 541.918 365.242 541.664 cv
365.371 541.418 365.535 541.195 365.73 540.992 cv
365.566 540.805 365.438 540.586 365.348 540.34 cv
365.25 540.098 365.203 539.805 365.207 539.457 cv
365.203 539.059 365.273 538.695 365.41 538.375 cv
365.543 538.059 365.73 537.793 365.973 537.57 cv
366.211 537.352 366.496 537.18 366.836 537.062 cv
367.172 536.945 367.539 536.887 367.938 536.887 cv
368.148 536.887 368.348 536.898 368.535 536.922 cv
368.719 536.945 368.895 536.98 369.059 537.02 cv
371.188 537.02 li
371.273 537.023 371.34 537.066 371.387 537.148 cv
371.434 537.238 371.457 537.371 371.457 537.547 cv
cp
369.434 539.402 mo
369.43 538.922 369.297 538.547 369.039 538.277 cv
368.773 538.012 368.398 537.879 367.914 537.875 cv
367.66 537.879 367.445 537.918 367.262 538 cv
367.074 538.086 366.918 538.203 366.797 538.344 cv
366.672 538.492 366.582 538.66 366.523 538.852 cv
366.461 539.043 366.43 539.242 366.434 539.449 cv
366.43 539.914 366.563 540.281 366.828 540.547 cv
367.094 540.816 367.461 540.949 367.938 540.945 cv
368.191 540.949 368.414 540.906 368.605 540.824 cv
368.789 540.746 368.945 540.637 369.07 540.488 cv
369.191 540.348 369.281 540.18 369.344 539.988 cv
369.398 539.805 369.43 539.609 369.434 539.402 cv
cp
370.086 544.984 mo
370.086 544.68 369.961 544.449 369.711 544.285 cv
369.461 544.125 369.125 544.035 368.707 544.023 cv
366.883 543.961 li
366.711 544.094 366.574 544.219 366.469 544.332 cv
366.359 544.449 366.273 544.559 366.215 544.668 cv
366.148 544.773 366.105 544.879 366.086 544.984 cv
366.059 545.086 366.047 545.191 366.051 545.309 cv
366.047 545.645 366.219 545.902 366.566 546.078 cv
366.91 546.25 367.391 546.336 368.008 546.34 cv
368.398 546.336 368.727 546.301 368.992 546.227 cv
369.25 546.148 369.465 546.047 369.629 545.926 cv
369.793 545.797 369.91 545.652 369.98 545.492 cv
370.051 545.328 370.086 545.16 370.086 544.984 cv
cp
f
379.023 540.441 mo
379.02 540.652 378.969 540.797 378.867 540.879 cv
378.762 540.969 378.645 541.012 378.52 541.008 cv
373.875 541.008 li
373.871 541.402 373.91 541.754 373.992 542.066 cv
374.07 542.379 374.203 542.648 374.387 542.871 cv
374.57 543.098 374.809 543.27 375.102 543.387 cv
375.395 543.508 375.754 543.566 376.184 543.566 cv
376.516 543.566 376.813 543.539 377.078 543.484 cv
377.336 543.43 377.563 543.371 377.758 543.301 cv
377.945 543.238 378.105 543.176 378.23 543.117 cv
378.355 543.066 378.449 543.039 378.512 543.035 cv
378.547 543.039 378.578 543.047 378.609 543.062 cv
378.637 543.082 378.66 543.109 378.676 543.145 cv
378.691 543.184 378.703 543.234 378.711 543.297 cv
378.719 543.363 378.723 543.445 378.723 543.535 cv
378.723 543.605 378.719 543.664 378.715 543.715 cv
378.707 543.766 378.699 543.809 378.695 543.848 cv
378.684 543.887 378.672 543.922 378.656 543.953 cv
378.637 543.984 378.613 544.016 378.586 544.043 cv
378.555 544.074 378.469 544.121 378.332 544.184 cv
378.188 544.25 378.008 544.312 377.785 544.375 cv
377.559 544.437 377.297 544.492 377.004 544.543 cv
376.707 544.59 376.395 544.613 376.063 544.617 cv
375.48 544.613 374.969 544.535 374.535 544.375 cv
374.098 544.215 373.734 543.977 373.438 543.656 cv
373.141 543.34 372.914 542.941 372.762 542.457 cv
372.609 541.98 372.535 541.422 372.535 540.781 cv
372.535 540.18 372.613 539.633 372.77 539.148 cv
372.926 538.664 373.152 538.254 373.449 537.918 cv
373.742 537.582 374.098 537.324 374.516 537.141 cv
374.934 536.965 375.402 536.875 375.922 536.871 cv
376.473 536.875 376.941 536.965 377.332 537.137 cv
377.719 537.316 378.039 537.555 378.293 537.855 cv
378.539 538.156 378.723 538.508 378.844 538.914 cv
378.961 539.32 379.02 539.754 379.023 540.207 cv
cp
377.723 540.059 mo
377.734 539.383 377.586 538.852 377.27 538.465 cv
376.949 538.078 376.477 537.883 375.855 537.883 cv
375.531 537.883 375.25 537.945 375.012 538.062 cv
374.766 538.187 374.563 538.344 374.402 538.539 cv
374.238 538.738 374.113 538.973 374.023 539.234 cv
373.934 539.5 373.883 539.773 373.875 540.059 cv
cp
f
386.023 544.266 mo
386.023 544.309 386.012 544.344 385.992 544.375 cv
385.969 544.406 385.934 544.434 385.883 544.449 cv
385.828 544.469 385.758 544.48 385.672 544.496 cv
385.586 544.508 385.477 544.516 385.348 544.516 cv
385.219 544.516 385.113 544.508 385.027 544.496 cv
384.938 544.48 384.867 544.469 384.816 544.449 cv
384.762 544.434 384.723 544.406 384.707 544.375 cv
384.684 544.344 384.676 544.309 384.676 544.266 cv
384.676 534.539 li
384.676 534.5 384.688 534.465 384.711 534.43 cv
384.734 534.402 384.773 534.375 384.828 534.355 cv
384.883 534.34 384.953 534.324 385.039 534.309 cv
385.125 534.297 385.227 534.293 385.348 534.289 cv
385.477 534.293 385.586 534.297 385.672 534.309 cv
385.758 534.324 385.828 534.34 385.883 534.355 cv
385.934 534.375 385.969 534.402 385.992 534.43 cv
386.012 534.465 386.023 534.5 386.023 534.539 cv
cp
f
394.637 544.273 mo
394.633 544.32 394.621 544.355 394.605 544.379 cv
394.582 544.41 394.551 544.434 394.504 544.453 cv
394.457 544.473 394.391 544.484 394.305 544.5 cv
394.219 544.508 394.113 544.516 393.992 544.516 cv
393.859 544.516 393.754 544.508 393.672 544.5 cv
393.586 544.484 393.52 544.473 393.477 544.453 cv
393.426 544.434 393.391 544.41 393.375 544.379 cv
393.352 544.355 393.344 544.32 393.344 544.273 cv
393.344 540.145 li
393.344 539.746 393.313 539.426 393.25 539.176 cv
393.188 538.934 393.094 538.719 392.973 538.539 cv
392.852 538.363 392.695 538.23 392.508 538.133 cv
392.313 538.043 392.094 537.996 391.848 537.992 cv
391.523 537.996 391.199 538.109 390.875 538.336 cv
390.551 538.566 390.211 538.902 389.859 539.348 cv
389.859 544.273 li
389.855 544.32 389.848 544.355 389.828 544.379 cv
389.805 544.41 389.77 544.434 389.723 544.453 cv
389.676 544.473 389.609 544.484 389.527 544.5 cv
389.441 544.508 389.336 544.516 389.207 544.516 cv
389.082 544.516 388.977 544.508 388.895 544.5 cv
388.809 544.484 388.742 544.473 388.695 544.453 cv
388.645 544.434 388.609 544.41 388.594 544.379 cv
388.57 544.355 388.563 544.32 388.566 544.273 cv
388.566 537.223 li
388.563 537.184 388.57 537.148 388.59 537.117 cv
388.602 537.09 388.633 537.062 388.684 537.039 cv
388.727 537.016 388.785 537 388.863 536.992 cv
388.934 536.984 389.031 536.98 389.152 536.98 cv
389.266 536.98 389.359 536.984 389.438 536.992 cv
389.508 537 389.566 537.016 389.613 537.039 cv
389.652 537.062 389.684 537.09 389.703 537.117 cv
389.723 537.148 389.734 537.184 389.734 537.223 cv
389.734 538.156 li
390.129 537.719 390.523 537.395 390.918 537.184 cv
391.313 536.98 391.711 536.875 392.113 536.871 cv
392.582 536.875 392.977 536.953 393.297 537.109 cv
393.617 537.27 393.875 537.484 394.078 537.75 cv
394.273 538.02 394.418 538.332 394.504 538.687 cv
394.59 539.047 394.633 539.477 394.637 539.973 cv
cp
f
403.027 544.273 mo
403.023 544.32 403.016 544.355 403 544.383 cv
402.98 544.418 402.949 544.441 402.902 544.457 cv
402.855 544.473 402.797 544.484 402.727 544.5 cv
402.652 544.508 402.563 544.516 402.461 544.516 cv
402.348 544.516 402.258 544.508 402.188 544.5 cv
402.113 544.484 402.051 544.473 402.008 544.457 cv
401.957 544.441 401.926 544.418 401.906 544.383 cv
401.883 544.355 401.871 544.32 401.875 544.273 cv
401.875 543.34 li
401.504 543.746 401.117 544.059 400.719 544.281 cv
400.316 544.504 399.879 544.613 399.406 544.617 cv
398.887 544.613 398.445 544.516 398.082 544.316 cv
397.715 544.117 397.422 543.848 397.195 543.504 cv
396.969 543.164 396.801 542.762 396.695 542.297 cv
396.59 541.836 396.539 541.348 396.539 540.836 cv
396.539 540.23 396.602 539.684 396.734 539.195 cv
396.863 538.707 397.059 538.293 397.316 537.945 cv
397.57 537.605 397.887 537.34 398.266 537.152 cv
398.645 536.969 399.082 536.875 399.578 536.871 cv
399.988 536.875 400.367 536.965 400.711 537.141 cv
401.051 537.324 401.387 537.59 401.727 537.937 cv
401.727 533.84 li
401.723 533.805 401.734 533.77 401.754 533.734 cv
401.77 533.703 401.805 533.68 401.859 533.656 cv
401.91 533.641 401.977 533.625 402.059 533.609 cv
402.137 533.602 402.238 533.594 402.367 533.59 cv
402.496 533.594 402.602 533.602 402.688 533.609 cv
402.766 533.625 402.832 533.641 402.883 533.656 cv
402.93 533.68 402.965 533.703 402.992 533.734 cv
403.012 533.77 403.023 533.805 403.027 533.84 cv
cp
401.727 539.316 mo
401.371 538.887 401.035 538.555 400.711 538.324 cv
400.383 538.102 400.039 537.988 399.688 537.984 cv
399.355 537.988 399.078 538.066 398.852 538.219 cv
398.621 538.379 398.434 538.586 398.289 538.84 cv
398.145 539.098 398.039 539.387 397.977 539.707 cv
397.906 540.031 397.875 540.359 397.879 540.695 cv
397.875 541.051 397.902 541.398 397.961 541.738 cv
398.012 542.078 398.105 542.379 398.246 542.641 cv
398.379 542.906 398.563 543.117 398.789 543.273 cv
399.012 543.434 399.293 543.516 399.633 543.512 cv
399.805 543.516 399.969 543.492 400.133 543.441 cv
400.289 543.398 400.453 543.32 400.621 543.207 cv
400.785 543.102 400.961 542.957 401.145 542.781 cv
401.328 542.609 401.52 542.395 401.727 542.137 cv
cp
f
411.359 540.441 mo
411.355 540.652 411.305 540.797 411.203 540.879 cv
411.098 540.969 410.98 541.012 410.855 541.008 cv
406.211 541.008 li
406.207 541.402 406.246 541.754 406.328 542.066 cv
406.406 542.379 406.539 542.648 406.723 542.871 cv
406.906 543.098 407.145 543.27 407.438 543.387 cv
407.73 543.508 408.09 543.566 408.52 543.566 cv
408.852 543.566 409.148 543.539 409.414 543.484 cv
409.672 543.43 409.898 543.371 410.094 543.301 cv
410.281 543.238 410.441 543.176 410.566 543.117 cv
410.691 543.066 410.785 543.039 410.848 543.035 cv
410.883 543.039 410.914 543.047 410.945 543.062 cv
410.973 543.082 410.996 543.109 411.012 543.145 cv
411.027 543.184 411.039 543.234 411.047 543.297 cv
411.055 543.363 411.059 543.445 411.059 543.535 cv
411.059 543.605 411.055 543.664 411.051 543.715 cv
411.043 543.766 411.035 543.809 411.031 543.848 cv
411.02 543.887 411.008 543.922 410.992 543.953 cv
410.973 543.984 410.949 544.016 410.922 544.043 cv
410.891 544.074 410.805 544.121 410.668 544.184 cv
410.523 544.25 410.344 544.312 410.121 544.375 cv
409.895 544.437 409.633 544.492 409.34 544.543 cv
409.043 544.59 408.73 544.613 408.398 544.617 cv
407.816 544.613 407.305 544.535 406.871 544.375 cv
406.434 544.215 406.07 543.977 405.773 543.656 cv
405.477 543.34 405.25 542.941 405.098 542.457 cv
404.945 541.98 404.871 541.422 404.871 540.781 cv
404.871 540.18 404.949 539.633 405.105 539.148 cv
405.262 538.664 405.488 538.254 405.785 537.918 cv
406.078 537.582 406.434 537.324 406.852 537.141 cv
407.27 536.965 407.738 536.875 408.258 536.871 cv
408.809 536.875 409.277 536.965 409.668 537.137 cv
410.055 537.316 410.375 537.555 410.629 537.855 cv
410.875 538.156 411.059 538.508 411.18 538.914 cv
411.297 539.32 411.355 539.754 411.359 540.207 cv
cp
410.059 540.059 mo
410.07 539.383 409.922 538.852 409.605 538.465 cv
409.285 538.078 408.813 537.883 408.191 537.883 cv
407.867 537.883 407.586 537.945 407.348 538.062 cv
407.102 538.187 406.898 538.344 406.738 538.539 cv
406.574 538.738 406.449 538.973 406.359 539.234 cv
406.27 539.5 406.219 539.773 406.211 540.059 cv
cp
f
418.434 544.125 mo
418.473 544.199 418.492 544.262 418.496 544.309 cv
418.492 544.363 418.469 544.402 418.422 544.43 cv
418.371 544.461 418.293 544.48 418.195 544.496 cv
418.09 544.508 417.961 544.516 417.801 544.516 cv
417.645 544.516 417.52 544.512 417.426 544.504 cv
417.332 544.496 417.258 544.484 417.207 544.465 cv
417.148 544.449 417.105 544.426 417.082 544.395 cv
417.051 544.367 417.027 544.336 417.008 544.297 cv
415.316 541.5 li
413.633 544.297 li
413.609 544.336 413.586 544.367 413.559 544.395 cv
413.527 544.426 413.484 544.449 413.434 544.465 cv
413.375 544.484 413.305 544.496 413.219 544.504 cv
413.129 544.512 413.012 544.516 412.867 544.516 cv
412.711 544.516 412.586 544.508 412.492 544.496 cv
412.395 544.48 412.324 544.461 412.281 544.43 cv
412.234 544.402 412.211 544.363 412.219 544.309 cv
412.219 544.262 412.246 544.199 412.293 544.125 cv
414.488 540.687 li
412.41 537.371 li
412.367 537.301 412.344 537.238 412.344 537.187 cv
412.34 537.141 412.363 537.098 412.414 537.062 cv
412.461 537.031 412.535 537.012 412.641 536.996 cv
412.742 536.988 412.879 536.98 413.047 536.98 cv
413.195 536.98 413.316 536.984 413.41 536.992 cv
413.5 537 413.57 537.012 413.625 537.027 cv
413.672 537.043 413.711 537.066 413.742 537.09 cv
413.766 537.121 413.789 537.152 413.813 537.184 cv
415.418 539.809 li
417.047 537.184 li
417.063 537.156 417.086 537.125 417.117 537.098 cv
417.141 537.074 417.176 537.055 417.223 537.031 cv
417.262 537.016 417.324 537 417.41 536.992 cv
417.488 536.984 417.602 536.98 417.746 536.98 cv
417.895 536.98 418.02 536.988 418.117 536.996 cv
418.211 537.012 418.281 537.031 418.332 537.055 cv
418.375 537.086 418.395 537.125 418.395 537.176 cv
418.387 537.23 418.363 537.297 418.316 537.371 cv
416.258 540.648 li
cp
f
235.984 9.703 mo
235.98 10.273 235.891 10.777 235.715 11.211 cv
235.535 11.652 235.277 12.02 234.941 12.32 cv
234.598 12.621 234.184 12.852 233.695 13.004 cv
233.199 13.164 232.617 13.242 231.953 13.238 cv
231.109 13.238 li
231.109 16.469 li
231.105 16.523 231.09 16.57 231.059 16.609 cv
231.023 16.652 230.969 16.687 230.891 16.711 cv
230.813 16.738 230.707 16.758 230.578 16.773 cv
230.445 16.789 230.277 16.797 230.078 16.797 cv
229.875 16.797 229.711 16.789 229.578 16.773 cv
229.445 16.758 229.34 16.738 229.262 16.711 cv
229.184 16.687 229.129 16.652 229.098 16.609 cv
229.066 16.57 229.051 16.523 229.051 16.469 cv
229.051 7.36298 li
229.051 7.12097 229.113 6.93701 229.242 6.81201 cv
229.367 6.69098 229.535 6.633 229.75 6.62903 cv
232.133 6.62903 li
232.371 6.633 232.598 6.64099 232.816 6.65601 cv
233.031 6.67603 233.293 6.71503 233.598 6.77301 cv
233.898 6.836 234.203 6.94501 234.516 7.10498 cv
234.824 7.27002 235.09 7.47699 235.309 7.71899 cv
235.527 7.96899 235.691 8.258 235.809 8.59003 cv
235.922 8.922 235.98 9.29303 235.984 9.703 cv
cp
233.832 9.85199 mo
233.832 9.5 233.77 9.20697 233.645 8.97699 cv
233.52 8.74597 233.363 8.57397 233.184 8.46503 cv
232.996 8.35498 232.805 8.289 232.605 8.258 cv
232.402 8.23401 232.195 8.21899 231.984 8.21503 cv
231.109 8.21503 li
231.109 11.648 li
232.031 11.648 li
232.355 11.652 232.629 11.609 232.855 11.516 cv
233.074 11.43 233.258 11.305 233.402 11.145 cv
233.539 10.988 233.645 10.797 233.723 10.574 cv
233.793 10.355 233.832 10.117 233.832 9.85199 cv
cp
f
241.941 10.156 mo
241.938 10.348 241.934 10.5 241.926 10.617 cv
241.914 10.738 241.898 10.832 241.879 10.898 cv
241.855 10.969 241.828 11.016 241.797 11.039 cv
241.762 11.066 241.719 11.078 241.668 11.078 cv
241.625 11.078 241.578 11.07 241.527 11.051 cv
241.473 11.035 241.414 11.016 241.352 10.992 cv
241.285 10.973 241.211 10.953 241.133 10.934 cv
241.051 10.918 240.965 10.91 240.875 10.906 cv
240.762 10.91 240.652 10.93 240.547 10.973 cv
240.434 11.02 240.32 11.09 240.207 11.18 cv
240.086 11.277 239.965 11.402 239.84 11.555 cv
239.711 11.715 239.574 11.91 239.43 12.137 cv
239.43 16.484 li
239.426 16.539 239.41 16.582 239.383 16.621 cv
239.348 16.66 239.293 16.695 239.223 16.719 cv
239.145 16.746 239.047 16.762 238.922 16.777 cv
238.797 16.789 238.637 16.797 238.445 16.797 cv
238.25 16.797 238.09 16.789 237.965 16.777 cv
237.836 16.762 237.734 16.746 237.664 16.719 cv
237.586 16.695 237.535 16.66 237.504 16.621 cv
237.473 16.582 237.457 16.539 237.457 16.484 cv
237.457 9.508 li
237.457 9.45697 237.469 9.414 237.496 9.37097 cv
237.52 9.336 237.566 9.30103 237.637 9.27301 cv
237.703 9.25 237.789 9.22998 237.898 9.21503 cv
238.004 9.203 238.141 9.19897 238.305 9.19501 cv
238.469 9.19897 238.605 9.203 238.719 9.21503 cv
238.824 9.22998 238.91 9.25 238.973 9.27301 cv
239.031 9.30103 239.074 9.336 239.102 9.37097 cv
239.125 9.414 239.137 9.45697 239.141 9.508 cv
239.141 10.375 li
239.32 10.117 239.492 9.90198 239.656 9.72998 cv
239.813 9.56201 239.969 9.42999 240.117 9.328 cv
240.262 9.22998 240.406 9.15997 240.555 9.12097 cv
240.699 9.08197 240.844 9.06201 240.992 9.06201 cv
241.055 9.06201 241.129 9.06598 241.211 9.07397 cv
241.289 9.08197 241.371 9.09802 241.457 9.11298 cv
241.539 9.13702 241.613 9.15601 241.676 9.17603 cv
241.738 9.203 241.781 9.22699 241.813 9.25 cv
241.836 9.27698 241.859 9.30902 241.875 9.336 cv
241.887 9.37097 241.898 9.414 241.91 9.46503 cv
241.918 9.52301 241.926 9.60498 241.934 9.711 cv
241.938 9.82397 241.938 9.97302 241.941 10.156 cv
cp
f
249.414 12.793 mo
249.414 13.035 249.359 13.211 249.254 13.324 cv
249.145 13.441 248.996 13.5 248.813 13.496 cv
244.566 13.496 li
244.563 13.797 244.598 14.066 244.672 14.305 cv
244.738 14.551 244.852 14.754 245.008 14.922 cv
245.16 15.094 245.355 15.227 245.602 15.312 cv
245.84 15.406 246.133 15.449 246.473 15.445 cv
246.816 15.449 247.117 15.426 247.383 15.371 cv
247.641 15.324 247.867 15.27 248.059 15.207 cv
248.246 15.148 248.402 15.09 248.531 15.039 cv
248.652 14.992 248.754 14.969 248.836 14.965 cv
248.879 14.969 248.918 14.977 248.953 14.992 cv
248.98 15.012 249.008 15.047 249.031 15.09 cv
249.051 15.141 249.066 15.207 249.074 15.293 cv
249.082 15.383 249.086 15.492 249.086 15.617 cv
249.086 15.734 249.082 15.832 249.078 15.91 cv
249.07 15.996 249.063 16.062 249.055 16.117 cv
249.043 16.176 249.027 16.227 249.008 16.262 cv
248.984 16.305 248.957 16.34 248.926 16.375 cv
248.891 16.414 248.797 16.465 248.648 16.523 cv
248.492 16.59 248.301 16.652 248.07 16.707 cv
247.832 16.77 247.563 16.816 247.266 16.863 cv
246.961 16.902 246.637 16.926 246.293 16.93 cv
245.668 16.926 245.125 16.852 244.664 16.695 cv
244.195 16.543 243.805 16.305 243.492 15.984 cv
243.176 15.668 242.945 15.266 242.793 14.781 cv
242.637 14.297 242.559 13.73 242.563 13.074 cv
242.559 12.457 242.641 11.898 242.805 11.398 cv
242.965 10.902 243.199 10.477 243.508 10.129 cv
243.816 9.78497 244.191 9.52301 244.633 9.336 cv
245.07 9.15601 245.566 9.06201 246.121 9.06201 cv
246.707 9.06201 247.207 9.14801 247.621 9.32001 cv
248.035 9.492 248.375 9.72998 248.641 10.035 cv
248.906 10.34 249.102 10.703 249.227 11.117 cv
249.352 11.539 249.414 11.992 249.414 12.48 cv
cp
247.508 12.23 mo
247.52 11.68 247.41 11.242 247.176 10.926 cv
246.938 10.613 246.57 10.457 246.074 10.453 cv
245.824 10.457 245.605 10.504 245.422 10.594 cv
245.234 10.691 245.082 10.816 244.961 10.973 cv
244.836 11.133 244.742 11.32 244.68 11.535 cv
244.613 11.754 244.574 11.988 244.566 12.23 cv
cp
f
258.055 12.895 mo
258.051 13.516 257.984 14.078 257.852 14.574 cv
257.715 15.074 257.52 15.496 257.27 15.844 cv
257.012 16.195 256.695 16.465 256.316 16.648 cv
255.934 16.836 255.5 16.926 255.012 16.93 cv
254.805 16.926 254.617 16.906 254.449 16.871 cv
254.277 16.828 254.113 16.77 253.957 16.691 cv
253.797 16.613 253.637 16.516 253.484 16.391 cv
253.324 16.273 253.164 16.133 253 15.969 cv
253 19.254 li
252.996 19.301 252.98 19.348 252.953 19.395 cv
252.918 19.434 252.863 19.469 252.793 19.5 cv
252.715 19.523 252.617 19.547 252.492 19.566 cv
252.367 19.578 252.207 19.586 252.016 19.59 cv
251.82 19.586 251.66 19.578 251.535 19.566 cv
251.406 19.547 251.305 19.523 251.234 19.5 cv
251.156 19.469 251.105 19.434 251.074 19.395 cv
251.043 19.348 251.027 19.301 251.027 19.254 cv
251.027 9.508 li
251.027 9.45697 251.039 9.414 251.066 9.37097 cv
251.09 9.336 251.137 9.30103 251.203 9.27301 cv
251.266 9.25 251.352 9.22998 251.461 9.21503 cv
251.57 9.203 251.703 9.19897 251.867 9.19501 cv
252.02 9.19897 252.152 9.203 252.262 9.21503 cv
252.367 9.22998 252.453 9.25 252.52 9.27301 cv
252.582 9.30103 252.629 9.336 252.656 9.37097 cv
252.68 9.414 252.691 9.45697 252.695 9.508 cv
252.695 10.328 li
252.895 10.121 253.094 9.93701 253.293 9.77698 cv
253.484 9.62097 253.684 9.48798 253.891 9.37903 cv
254.09 9.27301 254.301 9.19501 254.52 9.14099 cv
254.738 9.09003 254.969 9.06201 255.215 9.06201 cv
255.723 9.06201 256.156 9.164 256.52 9.36298 cv
256.875 9.56598 257.168 9.84003 257.398 10.187 cv
257.621 10.539 257.789 10.949 257.895 11.41 cv
258 11.879 258.051 12.371 258.055 12.895 cv
cp
256.004 13.035 mo
256 12.738 255.98 12.453 255.938 12.18 cv
255.891 11.906 255.813 11.664 255.711 11.445 cv
255.602 11.234 255.461 11.062 255.289 10.934 cv
255.109 10.809 254.891 10.746 254.633 10.742 cv
254.5 10.746 254.371 10.766 254.246 10.801 cv
254.113 10.844 253.984 10.906 253.855 10.992 cv
253.719 11.082 253.582 11.195 253.445 11.336 cv
253.301 11.477 253.152 11.652 253 11.859 cv
253 14.16 li
253.273 14.512 253.535 14.785 253.789 14.973 cv
254.035 15.168 254.297 15.262 254.57 15.258 cv
254.824 15.262 255.043 15.195 255.227 15.062 cv
255.402 14.93 255.551 14.758 255.668 14.547 cv
255.781 14.336 255.863 14.098 255.922 13.832 cv
255.973 13.566 256 13.301 256.004 13.035 cv
cp
f
265.574 16.508 mo
265.57 16.586 265.543 16.641 265.496 16.68 cv
265.441 16.723 265.359 16.75 265.25 16.77 cv
265.133 16.785 264.969 16.797 264.754 16.797 cv
264.516 16.797 264.344 16.785 264.242 16.77 cv
264.133 16.75 264.059 16.723 264.016 16.68 cv
263.969 16.641 263.945 16.586 263.949 16.508 cv
263.949 15.953 li
263.66 16.262 263.332 16.504 262.965 16.672 cv
262.594 16.844 262.188 16.926 261.742 16.93 cv
261.371 16.926 261.031 16.879 260.723 16.785 cv
260.41 16.691 260.141 16.551 259.914 16.355 cv
259.684 16.168 259.508 15.93 259.387 15.648 cv
259.258 15.367 259.195 15.039 259.199 14.66 cv
259.195 14.258 259.273 13.906 259.438 13.602 cv
259.594 13.305 259.832 13.055 260.148 12.859 cv
260.465 12.664 260.859 12.52 261.328 12.426 cv
261.797 12.332 262.34 12.285 262.961 12.285 cv
263.645 12.285 li
263.645 11.859 li
263.641 11.645 263.621 11.453 263.578 11.285 cv
263.531 11.125 263.457 10.988 263.355 10.875 cv
263.254 10.77 263.117 10.687 262.949 10.633 cv
262.777 10.582 262.566 10.559 262.32 10.555 cv
261.988 10.559 261.695 10.594 261.441 10.664 cv
261.18 10.738 260.953 10.82 260.758 10.906 cv
260.559 11 260.391 11.078 260.258 11.148 cv
260.121 11.223 260.016 11.262 259.934 11.258 cv
259.875 11.262 259.824 11.242 259.781 11.203 cv
259.734 11.168 259.695 11.117 259.672 11.047 cv
259.641 10.984 259.621 10.898 259.605 10.797 cv
259.59 10.699 259.582 10.59 259.582 10.469 cv
259.582 10.309 259.594 10.184 259.621 10.086 cv
259.645 9.99597 259.695 9.90997 259.77 9.83197 cv
259.84 9.758 259.965 9.67603 260.152 9.58197 cv
260.332 9.49597 260.547 9.40997 260.797 9.328 cv
261.039 9.25403 261.309 9.19098 261.598 9.13702 cv
261.887 9.09003 262.184 9.06201 262.492 9.06201 cv
263.035 9.06201 263.504 9.117 263.895 9.22302 cv
264.285 9.33197 264.605 9.49597 264.855 9.71503 cv
265.105 9.93701 265.285 10.223 265.402 10.57 cv
265.512 10.922 265.57 11.336 265.574 11.812 cv
cp
263.645 13.52 mo
262.891 13.52 li
262.57 13.523 262.301 13.547 262.078 13.59 cv
261.852 13.641 261.668 13.711 261.531 13.801 cv
261.387 13.898 261.285 14.012 261.223 14.141 cv
261.156 14.277 261.121 14.43 261.125 14.598 cv
261.121 14.895 261.215 15.125 261.402 15.289 cv
261.586 15.461 261.844 15.543 262.172 15.539 cv
262.445 15.543 262.699 15.473 262.934 15.328 cv
263.164 15.187 263.398 14.98 263.645 14.707 cv
cp
f
272.027 10.156 mo
272.023 10.348 272.02 10.5 272.012 10.617 cv
272 10.738 271.984 10.832 271.965 10.898 cv
271.941 10.969 271.914 11.016 271.883 11.039 cv
271.848 11.066 271.805 11.078 271.754 11.078 cv
271.711 11.078 271.664 11.07 271.613 11.051 cv
271.559 11.035 271.5 11.016 271.438 10.992 cv
271.371 10.973 271.297 10.953 271.219 10.934 cv
271.137 10.918 271.051 10.91 270.961 10.906 cv
270.848 10.91 270.738 10.93 270.633 10.973 cv
270.52 11.02 270.406 11.09 270.293 11.18 cv
270.172 11.277 270.051 11.402 269.926 11.555 cv
269.797 11.715 269.66 11.91 269.516 12.137 cv
269.516 16.484 li
269.512 16.539 269.496 16.582 269.469 16.621 cv
269.434 16.66 269.379 16.695 269.309 16.719 cv
269.23 16.746 269.133 16.762 269.008 16.777 cv
268.883 16.789 268.723 16.797 268.531 16.797 cv
268.336 16.797 268.176 16.789 268.051 16.777 cv
267.922 16.762 267.82 16.746 267.75 16.719 cv
267.672 16.695 267.621 16.66 267.59 16.621 cv
267.559 16.582 267.543 16.539 267.543 16.484 cv
267.543 9.508 li
267.543 9.45697 267.555 9.414 267.582 9.37097 cv
267.605 9.336 267.652 9.30103 267.723 9.27301 cv
267.789 9.25 267.875 9.22998 267.984 9.21503 cv
268.09 9.203 268.227 9.19897 268.391 9.19501 cv
268.555 9.19897 268.691 9.203 268.805 9.21503 cv
268.91 9.22998 268.996 9.25 269.059 9.27301 cv
269.117 9.30103 269.16 9.336 269.188 9.37097 cv
269.211 9.414 269.223 9.45697 269.227 9.508 cv
269.227 10.375 li
269.406 10.117 269.578 9.90198 269.742 9.72998 cv
269.898 9.56201 270.055 9.42999 270.203 9.328 cv
270.348 9.22998 270.492 9.15997 270.641 9.12097 cv
270.785 9.08197 270.93 9.06201 271.078 9.06201 cv
271.141 9.06201 271.215 9.06598 271.297 9.07397 cv
271.375 9.08197 271.457 9.09802 271.543 9.11298 cv
271.625 9.13702 271.699 9.15601 271.762 9.17603 cv
271.824 9.203 271.867 9.22699 271.898 9.25 cv
271.922 9.27698 271.945 9.30902 271.961 9.336 cv
271.973 9.37097 271.984 9.414 271.996 9.46503 cv
272.004 9.52301 272.012 9.60498 272.02 9.711 cv
272.023 9.82397 272.023 9.97302 272.027 10.156 cv
cp
f
278.789 16.508 mo
278.785 16.586 278.758 16.641 278.711 16.68 cv
278.656 16.723 278.574 16.75 278.465 16.77 cv
278.348 16.785 278.184 16.797 277.969 16.797 cv
277.73 16.797 277.559 16.785 277.457 16.77 cv
277.348 16.75 277.273 16.723 277.23 16.68 cv
277.184 16.641 277.16 16.586 277.164 16.508 cv
277.164 15.953 li
276.875 16.262 276.547 16.504 276.18 16.672 cv
275.809 16.844 275.402 16.926 274.957 16.93 cv
274.586 16.926 274.246 16.879 273.938 16.785 cv
273.625 16.691 273.355 16.551 273.129 16.355 cv
272.898 16.168 272.723 15.93 272.602 15.648 cv
272.473 15.367 272.41 15.039 272.414 14.66 cv
272.41 14.258 272.488 13.906 272.652 13.602 cv
272.809 13.305 273.047 13.055 273.363 12.859 cv
273.68 12.664 274.074 12.52 274.543 12.426 cv
275.012 12.332 275.555 12.285 276.176 12.285 cv
276.859 12.285 li
276.859 11.859 li
276.855 11.645 276.836 11.453 276.793 11.285 cv
276.746 11.125 276.672 10.988 276.57 10.875 cv
276.469 10.77 276.332 10.687 276.164 10.633 cv
275.992 10.582 275.781 10.559 275.535 10.555 cv
275.203 10.559 274.91 10.594 274.656 10.664 cv
274.395 10.738 274.168 10.82 273.973 10.906 cv
273.773 11 273.605 11.078 273.473 11.148 cv
273.336 11.223 273.23 11.262 273.148 11.258 cv
273.09 11.262 273.039 11.242 272.996 11.203 cv
272.949 11.168 272.91 11.117 272.887 11.047 cv
272.855 10.984 272.836 10.898 272.82 10.797 cv
272.805 10.699 272.797 10.59 272.797 10.469 cv
272.797 10.309 272.809 10.184 272.836 10.086 cv
272.859 9.99597 272.91 9.90997 272.984 9.83197 cv
273.055 9.758 273.18 9.67603 273.367 9.58197 cv
273.547 9.49597 273.762 9.40997 274.012 9.328 cv
274.254 9.25403 274.523 9.19098 274.813 9.13702 cv
275.102 9.09003 275.398 9.06201 275.707 9.06201 cv
276.25 9.06201 276.719 9.117 277.109 9.22302 cv
277.5 9.33197 277.82 9.49597 278.07 9.71503 cv
278.32 9.93701 278.5 10.223 278.617 10.57 cv
278.727 10.922 278.785 11.336 278.789 11.812 cv
cp
276.859 13.52 mo
276.105 13.52 li
275.785 13.523 275.516 13.547 275.293 13.59 cv
275.066 13.641 274.883 13.711 274.746 13.801 cv
274.602 13.898 274.5 14.012 274.438 14.141 cv
274.371 14.277 274.336 14.43 274.34 14.598 cv
274.336 14.895 274.43 15.125 274.617 15.289 cv
274.801 15.461 275.059 15.543 275.387 15.539 cv
275.66 15.543 275.914 15.473 276.148 15.328 cv
276.379 15.187 276.613 14.98 276.859 14.707 cv
cp
f
284.715 15.797 mo
284.711 16.027 284.699 16.203 284.672 16.324 cv
284.641 16.449 284.602 16.535 284.559 16.582 cv
284.508 16.633 284.438 16.676 284.348 16.715 cv
284.254 16.754 284.148 16.785 284.027 16.816 cv
283.902 16.84 283.77 16.863 283.629 16.883 cv
283.484 16.895 283.34 16.902 283.195 16.906 cv
282.805 16.902 282.465 16.852 282.18 16.758 cv
281.891 16.656 281.652 16.508 281.469 16.301 cv
281.277 16.098 281.141 15.84 281.051 15.523 cv
280.961 15.211 280.914 14.84 280.918 14.41 cv
280.918 10.836 li
280.082 10.836 li
279.98 10.84 279.906 10.777 279.855 10.652 cv
279.801 10.531 279.773 10.328 279.777 10.039 cv
279.773 9.89099 279.781 9.76202 279.797 9.65601 cv
279.809 9.55499 279.828 9.47302 279.855 9.40997 cv
279.879 9.35199 279.91 9.30902 279.953 9.28101 cv
279.988 9.258 280.035 9.24597 280.09 9.242 cv
280.918 9.242 li
280.918 7.68402 li
280.914 7.63702 280.93 7.59003 280.961 7.54303 cv
280.988 7.50403 281.039 7.46899 281.117 7.43701 cv
281.191 7.414 281.297 7.39099 281.426 7.375 cv
281.551 7.36298 281.707 7.35901 281.898 7.35498 cv
282.09 7.35901 282.25 7.36298 282.379 7.375 cv
282.504 7.39099 282.605 7.414 282.68 7.43701 cv
282.75 7.46899 282.801 7.50403 282.836 7.54303 cv
282.863 7.59003 282.879 7.63702 282.883 7.68402 cv
282.883 9.242 li
284.402 9.242 li
284.453 9.24597 284.496 9.258 284.539 9.28101 cv
284.574 9.30902 284.609 9.35199 284.637 9.40997 cv
284.66 9.47302 284.68 9.55499 284.695 9.65601 cv
284.707 9.76202 284.711 9.89099 284.715 10.039 cv
284.711 10.328 284.688 10.531 284.637 10.652 cv
284.582 10.777 284.504 10.84 284.41 10.836 cv
282.883 10.836 li
282.883 14.113 li
282.879 14.496 282.938 14.785 283.063 14.973 cv
283.18 15.168 283.395 15.262 283.703 15.258 cv
283.805 15.262 283.898 15.254 283.984 15.23 cv
284.066 15.215 284.141 15.191 284.207 15.168 cv
284.273 15.145 284.328 15.125 284.375 15.102 cv
284.414 15.086 284.457 15.074 284.496 15.074 cv
284.527 15.074 284.555 15.086 284.586 15.102 cv
284.609 15.125 284.633 15.16 284.652 15.215 cv
284.664 15.27 284.68 15.344 284.695 15.437 cv
284.707 15.531 284.711 15.652 284.715 15.797 cv
cp
f
288.113 16.484 mo
288.109 16.539 288.094 16.582 288.066 16.621 cv
288.031 16.66 287.977 16.695 287.906 16.719 cv
287.828 16.746 287.73 16.762 287.605 16.777 cv
287.48 16.789 287.32 16.797 287.129 16.797 cv
286.934 16.797 286.773 16.789 286.648 16.777 cv
286.52 16.762 286.418 16.746 286.348 16.719 cv
286.27 16.695 286.219 16.66 286.188 16.621 cv
286.156 16.582 286.141 16.539 286.141 16.484 cv
286.141 9.52301 li
286.141 9.47699 286.156 9.42999 286.188 9.38702 cv
286.219 9.35199 286.27 9.31598 286.348 9.28497 cv
286.418 9.258 286.52 9.23798 286.648 9.21899 cv
286.773 9.20697 286.934 9.19897 287.129 9.19501 cv
287.32 9.19897 287.48 9.20697 287.605 9.21899 cv
287.73 9.23798 287.828 9.258 287.906 9.28497 cv
287.977 9.31598 288.031 9.35199 288.066 9.38702 cv
288.094 9.42999 288.109 9.47699 288.113 9.52301 cv
cp
288.262 7.14502 mo
288.262 7.54303 288.18 7.81598 288.02 7.96503 cv
287.855 8.12097 287.555 8.19501 287.121 8.19098 cv
286.672 8.19501 286.375 8.12097 286.223 7.97302 cv
286.066 7.828 285.988 7.56598 285.992 7.18402 cv
285.988 6.789 286.066 6.51599 286.23 6.35901 cv
286.387 6.211 286.691 6.133 287.137 6.12903 cv
287.574 6.133 287.871 6.20697 288.027 6.35199 cv
288.184 6.50403 288.262 6.77002 288.262 7.14502 cv
cp
f
297.141 12.926 mo
297.137 13.523 297.059 14.066 296.902 14.555 cv
296.746 15.047 296.508 15.469 296.191 15.82 cv
295.871 16.176 295.473 16.449 294.996 16.641 cv
294.516 16.832 293.953 16.926 293.313 16.93 cv
292.688 16.926 292.148 16.844 291.695 16.672 cv
291.234 16.504 290.855 16.254 290.551 15.922 cv
290.246 15.598 290.02 15.191 289.879 14.711 cv
289.73 14.23 289.66 13.684 289.66 13.066 cv
289.66 12.477 289.738 11.934 289.898 11.437 cv
290.055 10.945 290.293 10.523 290.613 10.168 cv
290.93 9.82001 291.328 9.547 291.809 9.35199 cv
292.281 9.15997 292.84 9.06201 293.484 9.06201 cv
294.109 9.06201 294.652 9.14801 295.113 9.31598 cv
295.57 9.48798 295.949 9.73798 296.25 10.062 cv
296.547 10.395 296.77 10.797 296.918 11.273 cv
297.063 11.754 297.137 12.305 297.141 12.926 cv
cp
295.113 13.004 mo
295.109 12.664 295.082 12.348 295.031 12.055 cv
294.973 11.766 294.879 11.512 294.754 11.297 cv
294.621 11.086 294.449 10.918 294.234 10.797 cv
294.016 10.68 293.742 10.621 293.414 10.617 cv
293.121 10.621 292.867 10.676 292.648 10.777 cv
292.43 10.887 292.25 11.043 292.109 11.246 cv
291.969 11.457 291.863 11.703 291.793 11.992 cv
291.723 12.281 291.688 12.613 291.688 12.98 cv
291.688 13.328 291.715 13.645 291.773 13.93 cv
291.828 14.223 291.922 14.473 292.051 14.684 cv
292.176 14.898 292.348 15.066 292.57 15.184 cv
292.785 15.305 293.055 15.363 293.383 15.359 cv
293.68 15.363 293.941 15.309 294.16 15.199 cv
294.379 15.094 294.559 14.937 294.699 14.73 cv
294.84 14.531 294.941 14.285 295.012 13.992 cv
295.074 13.707 295.109 13.379 295.113 13.004 cv
cp
f
305.414 16.484 mo
305.41 16.539 305.395 16.582 305.367 16.621 cv
305.332 16.66 305.281 16.695 305.211 16.719 cv
305.137 16.746 305.035 16.762 304.91 16.777 cv
304.777 16.789 304.621 16.797 304.438 16.797 cv
304.242 16.797 304.082 16.789 303.957 16.777 cv
303.828 16.762 303.727 16.746 303.656 16.719 cv
303.578 16.695 303.527 16.66 303.5 16.621 cv
303.465 16.582 303.449 16.539 303.453 16.484 cv
303.453 12.504 li
303.449 12.164 303.426 11.898 303.379 11.703 cv
303.328 11.516 303.254 11.348 303.164 11.207 cv
303.066 11.07 302.945 10.965 302.801 10.887 cv
302.648 10.812 302.477 10.773 302.277 10.773 cv
302.027 10.773 301.773 10.867 301.52 11.047 cv
301.262 11.234 300.996 11.5 300.723 11.844 cv
300.723 16.484 li
300.719 16.539 300.703 16.582 300.676 16.621 cv
300.641 16.66 300.586 16.695 300.516 16.719 cv
300.438 16.746 300.34 16.762 300.215 16.777 cv
300.09 16.789 299.93 16.797 299.738 16.797 cv
299.543 16.797 299.383 16.789 299.258 16.777 cv
299.129 16.762 299.027 16.746 298.957 16.719 cv
298.879 16.695 298.828 16.66 298.797 16.621 cv
298.766 16.582 298.75 16.539 298.75 16.484 cv
298.75 9.508 li
298.75 9.45697 298.762 9.414 298.789 9.37097 cv
298.813 9.336 298.859 9.30103 298.93 9.27301 cv
298.996 9.25 299.082 9.22998 299.191 9.21503 cv
299.297 9.203 299.434 9.19897 299.598 9.19501 cv
299.762 9.19897 299.898 9.203 300.012 9.21503 cv
300.117 9.22998 300.203 9.25 300.266 9.27301 cv
300.324 9.30103 300.367 9.336 300.395 9.37097 cv
300.418 9.414 300.43 9.45697 300.434 9.508 cv
300.434 10.312 li
300.816 9.89801 301.211 9.586 301.609 9.375 cv
302.008 9.16803 302.422 9.06201 302.859 9.06201 cv
303.328 9.06201 303.73 9.14099 304.059 9.297 cv
304.383 9.453 304.645 9.66803 304.848 9.93402 cv
305.047 10.207 305.191 10.52 305.281 10.875 cv
305.367 11.238 305.41 11.672 305.414 12.176 cv
cp
f
317.73 7.47302 mo
317.73 7.62903 317.723 7.758 317.707 7.85901 cv
317.691 7.96899 317.672 8.05499 317.648 8.117 cv
317.621 8.18701 317.586 8.23401 317.551 8.26202 cv
317.508 8.297 317.465 8.31201 317.422 8.30902 cv
314.891 8.30902 li
314.891 16.469 li
314.887 16.523 314.871 16.57 314.84 16.609 cv
314.805 16.652 314.746 16.687 314.668 16.711 cv
314.586 16.738 314.48 16.758 314.352 16.773 cv
314.215 16.789 314.051 16.797 313.855 16.797 cv
313.656 16.797 313.492 16.789 313.359 16.773 cv
313.227 16.758 313.121 16.738 313.043 16.711 cv
312.965 16.687 312.906 16.652 312.875 16.609 cv
312.836 16.57 312.82 16.523 312.824 16.469 cv
312.824 8.30902 li
310.289 8.30902 li
310.234 8.31201 310.188 8.297 310.156 8.26202 cv
310.117 8.23401 310.086 8.18701 310.063 8.117 cv
310.031 8.05499 310.012 7.96899 310.004 7.85901 cv
309.988 7.758 309.984 7.62903 309.984 7.47302 cv
309.984 7.32001 309.988 7.18701 310.004 7.07397 cv
310.012 6.96899 310.031 6.87903 310.063 6.81201 cv
310.086 6.75 310.117 6.703 310.156 6.672 cv
310.188 6.64502 310.234 6.633 310.289 6.62903 cv
317.422 6.62903 li
317.465 6.633 317.508 6.64502 317.551 6.672 cv
317.586 6.703 317.621 6.75 317.648 6.81201 cv
317.672 6.87903 317.691 6.96899 317.707 7.07397 cv
317.723 7.18701 317.73 7.32001 317.73 7.47302 cv
cp
f
320.777 16.484 mo
320.773 16.539 320.758 16.582 320.73 16.621 cv
320.695 16.66 320.641 16.695 320.57 16.719 cv
320.492 16.746 320.395 16.762 320.27 16.777 cv
320.145 16.789 319.984 16.797 319.793 16.797 cv
319.598 16.797 319.438 16.789 319.313 16.777 cv
319.184 16.762 319.082 16.746 319.012 16.719 cv
318.934 16.695 318.883 16.66 318.852 16.621 cv
318.82 16.582 318.805 16.539 318.805 16.484 cv
318.805 9.52301 li
318.805 9.47699 318.82 9.42999 318.852 9.38702 cv
318.883 9.35199 318.934 9.31598 319.012 9.28497 cv
319.082 9.258 319.184 9.23798 319.313 9.21899 cv
319.438 9.20697 319.598 9.19897 319.793 9.19501 cv
319.984 9.19897 320.145 9.20697 320.27 9.21899 cv
320.395 9.23798 320.492 9.258 320.57 9.28497 cv
320.641 9.31598 320.695 9.35199 320.73 9.38702 cv
320.758 9.42999 320.773 9.47699 320.777 9.52301 cv
cp
320.926 7.14502 mo
320.926 7.54303 320.844 7.81598 320.684 7.96503 cv
320.52 8.12097 320.219 8.19501 319.785 8.19098 cv
319.336 8.19501 319.039 8.12097 318.887 7.97302 cv
318.73 7.828 318.652 7.56598 318.656 7.18402 cv
318.652 6.789 318.73 6.51599 318.895 6.35901 cv
319.051 6.211 319.355 6.133 319.801 6.12903 cv
320.238 6.133 320.535 6.20697 320.691 6.35199 cv
320.848 6.50403 320.926 6.77002 320.926 7.14502 cv
cp
f
333.848 16.484 mo
333.844 16.539 333.828 16.582 333.801 16.621 cv
333.766 16.66 333.715 16.695 333.645 16.719 cv
333.57 16.746 333.469 16.762 333.348 16.777 cv
333.219 16.789 333.063 16.797 332.871 16.797 cv
332.668 16.797 332.504 16.789 332.383 16.777 cv
332.254 16.762 332.152 16.746 332.082 16.719 cv
332.004 16.695 331.953 16.66 331.926 16.621 cv
331.895 16.582 331.879 16.539 331.883 16.484 cv
331.883 12.348 li
331.879 12.113 331.859 11.898 331.816 11.703 cv
331.77 11.516 331.699 11.348 331.613 11.207 cv
331.52 11.07 331.406 10.965 331.27 10.887 cv
331.129 10.812 330.965 10.773 330.773 10.773 cv
330.539 10.773 330.301 10.867 330.063 11.047 cv
329.82 11.234 329.559 11.5 329.277 11.844 cv
329.277 16.484 li
329.273 16.539 329.258 16.582 329.23 16.621 cv
329.195 16.66 329.141 16.695 329.07 16.719 cv
328.992 16.746 328.895 16.762 328.77 16.777 cv
328.645 16.789 328.488 16.797 328.301 16.797 cv
328.105 16.797 327.945 16.789 327.824 16.777 cv
327.695 16.762 327.594 16.746 327.523 16.719 cv
327.445 16.695 327.395 16.66 327.363 16.621 cv
327.332 16.582 327.316 16.539 327.316 16.484 cv
327.316 12.348 li
327.316 12.113 327.293 11.898 327.25 11.703 cv
327.203 11.516 327.137 11.348 327.051 11.207 cv
326.961 11.07 326.848 10.965 326.707 10.887 cv
326.566 10.812 326.398 10.773 326.211 10.773 cv
325.969 10.773 325.73 10.867 325.492 11.047 cv
325.25 11.234 324.992 11.5 324.719 11.844 cv
324.719 16.484 li
324.715 16.539 324.699 16.582 324.672 16.621 cv
324.637 16.66 324.582 16.695 324.512 16.719 cv
324.434 16.746 324.336 16.762 324.211 16.777 cv
324.086 16.789 323.926 16.797 323.734 16.797 cv
323.539 16.797 323.379 16.789 323.254 16.777 cv
323.125 16.762 323.023 16.746 322.953 16.719 cv
322.875 16.695 322.824 16.66 322.793 16.621 cv
322.762 16.582 322.746 16.539 322.746 16.484 cv
322.746 9.508 li
322.746 9.45697 322.758 9.414 322.785 9.37097 cv
322.809 9.336 322.855 9.30103 322.926 9.27301 cv
322.992 9.25 323.078 9.22998 323.188 9.21503 cv
323.293 9.203 323.43 9.19897 323.594 9.19501 cv
323.758 9.19897 323.895 9.203 324.008 9.21503 cv
324.113 9.22998 324.199 9.25 324.262 9.27301 cv
324.32 9.30103 324.363 9.336 324.391 9.37097 cv
324.414 9.414 324.426 9.45697 324.43 9.508 cv
324.43 10.312 li
324.813 9.89801 325.199 9.586 325.582 9.375 cv
325.965 9.16803 326.363 9.06201 326.785 9.06201 cv
327.066 9.06201 327.324 9.09399 327.559 9.15198 cv
327.785 9.21503 327.992 9.30103 328.172 9.40997 cv
328.352 9.52301 328.504 9.65601 328.637 9.81201 cv
328.762 9.96899 328.871 10.145 328.965 10.336 cv
329.168 10.113 329.375 9.922 329.578 9.758 cv
329.781 9.60199 329.98 9.46899 330.176 9.36298 cv
330.371 9.26599 330.566 9.19098 330.762 9.13702 cv
330.957 9.09003 331.156 9.06201 331.359 9.06201 cv
331.82 9.06201 332.211 9.14099 332.531 9.297 cv
332.852 9.453 333.109 9.66803 333.305 9.93402 cv
333.5 10.207 333.637 10.52 333.723 10.875 cv
333.801 11.238 333.844 11.617 333.848 12.016 cv
cp
f
342.219 12.793 mo
342.219 13.035 342.164 13.211 342.059 13.324 cv
341.949 13.441 341.801 13.5 341.617 13.496 cv
337.371 13.496 li
337.367 13.797 337.402 14.066 337.477 14.305 cv
337.543 14.551 337.656 14.754 337.813 14.922 cv
337.965 15.094 338.16 15.227 338.406 15.312 cv
338.645 15.406 338.938 15.449 339.277 15.445 cv
339.621 15.449 339.922 15.426 340.188 15.371 cv
340.445 15.324 340.672 15.27 340.863 15.207 cv
341.051 15.148 341.207 15.09 341.336 15.039 cv
341.457 14.992 341.559 14.969 341.641 14.965 cv
341.684 14.969 341.723 14.977 341.758 14.992 cv
341.785 15.012 341.813 15.047 341.836 15.09 cv
341.855 15.141 341.871 15.207 341.879 15.293 cv
341.887 15.383 341.891 15.492 341.891 15.617 cv
341.891 15.734 341.887 15.832 341.883 15.91 cv
341.875 15.996 341.867 16.062 341.859 16.117 cv
341.848 16.176 341.832 16.227 341.813 16.262 cv
341.789 16.305 341.762 16.34 341.73 16.375 cv
341.695 16.414 341.602 16.465 341.453 16.523 cv
341.297 16.59 341.105 16.652 340.875 16.707 cv
340.637 16.77 340.367 16.816 340.07 16.863 cv
339.766 16.902 339.441 16.926 339.098 16.93 cv
338.473 16.926 337.93 16.852 337.469 16.695 cv
337 16.543 336.609 16.305 336.297 15.984 cv
335.98 15.668 335.75 15.266 335.598 14.781 cv
335.441 14.297 335.363 13.73 335.367 13.074 cv
335.363 12.457 335.445 11.898 335.609 11.398 cv
335.77 10.902 336.004 10.477 336.313 10.129 cv
336.621 9.78497 336.996 9.52301 337.438 9.336 cv
337.875 9.15601 338.371 9.06201 338.926 9.06201 cv
339.512 9.06201 340.012 9.14801 340.426 9.32001 cv
340.84 9.492 341.18 9.72998 341.445 10.035 cv
341.711 10.34 341.906 10.703 342.031 11.117 cv
342.156 11.539 342.219 11.992 342.219 12.48 cv
cp
340.313 12.23 mo
340.324 11.68 340.215 11.242 339.98 10.926 cv
339.742 10.613 339.375 10.457 338.879 10.453 cv
338.629 10.457 338.41 10.504 338.227 10.594 cv
338.039 10.691 337.887 10.816 337.766 10.973 cv
337.641 11.133 337.547 11.32 337.484 11.535 cv
337.418 11.754 337.379 11.988 337.371 12.23 cv
cp
f
348.742 14.512 mo
348.738 14.91 348.664 15.262 348.52 15.562 cv
348.367 15.867 348.156 16.121 347.887 16.32 cv
347.613 16.527 347.293 16.676 346.926 16.777 cv
346.555 16.875 346.152 16.926 345.723 16.93 cv
345.457 16.926 345.211 16.906 344.977 16.871 cv
344.738 16.828 344.523 16.781 344.336 16.723 cv
344.145 16.664 343.988 16.602 343.867 16.539 cv
343.738 16.477 343.648 16.418 343.594 16.363 cv
343.535 16.309 343.488 16.223 343.461 16.105 cv
343.426 15.988 343.41 15.816 343.414 15.586 cv
343.41 15.437 343.418 15.316 343.43 15.223 cv
343.438 15.133 343.453 15.059 343.477 15 cv
343.496 14.949 343.52 14.914 343.555 14.891 cv
343.582 14.875 343.621 14.863 343.672 14.863 cv
343.727 14.863 343.813 14.898 343.926 14.961 cv
344.035 15.031 344.176 15.102 344.344 15.18 cv
344.512 15.258 344.707 15.332 344.93 15.398 cv
345.148 15.469 345.398 15.504 345.684 15.5 cv
345.859 15.504 346.016 15.484 346.156 15.445 cv
346.289 15.41 346.41 15.359 346.516 15.289 cv
346.613 15.227 346.691 15.141 346.746 15.031 cv
346.797 14.93 346.82 14.809 346.824 14.668 cv
346.82 14.516 346.773 14.379 346.68 14.266 cv
346.582 14.156 346.453 14.059 346.297 13.973 cv
346.133 13.891 345.953 13.812 345.758 13.738 cv
345.555 13.668 345.352 13.59 345.141 13.496 cv
344.93 13.41 344.723 13.309 344.52 13.191 cv
344.316 13.082 344.137 12.941 343.98 12.77 cv
343.82 12.605 343.691 12.402 343.598 12.168 cv
343.5 11.934 343.453 11.652 343.453 11.32 cv
343.453 10.988 343.516 10.684 343.648 10.402 cv
343.773 10.129 343.961 9.89099 344.211 9.68701 cv
344.453 9.492 344.754 9.336 345.109 9.22699 cv
345.457 9.117 345.852 9.06201 346.293 9.06201 cv
346.508 9.06201 346.719 9.078 346.93 9.10901 cv
347.133 9.14099 347.32 9.17999 347.488 9.22699 cv
347.656 9.27301 347.797 9.32397 347.914 9.37903 cv
348.023 9.43402 348.105 9.47998 348.16 9.52002 cv
348.207 9.55902 348.242 9.59802 348.266 9.63702 cv
348.281 9.67603 348.297 9.72302 348.313 9.77698 cv
348.32 9.83197 348.332 9.90198 348.34 9.97998 cv
348.348 10.066 348.352 10.164 348.352 10.281 cv
348.352 10.422 348.348 10.539 348.34 10.625 cv
348.332 10.719 348.316 10.789 348.301 10.836 cv
348.277 10.891 348.254 10.926 348.227 10.941 cv
348.191 10.965 348.156 10.973 348.117 10.969 cv
348.07 10.973 347.996 10.945 347.898 10.887 cv
347.797 10.836 347.672 10.777 347.523 10.711 cv
347.371 10.652 347.199 10.594 347.008 10.535 cv
346.809 10.484 346.586 10.457 346.34 10.453 cv
346.16 10.457 346.008 10.477 345.879 10.508 cv
345.746 10.547 345.637 10.598 345.559 10.664 cv
345.473 10.734 345.41 10.812 345.371 10.902 cv
345.324 10.996 345.305 11.094 345.309 11.195 cv
345.305 11.359 345.355 11.496 345.457 11.602 cv
345.555 11.715 345.684 11.812 345.848 11.891 cv
346.008 11.977 346.191 12.055 346.398 12.129 cv
346.602 12.203 346.809 12.281 347.023 12.367 cv
347.23 12.453 347.441 12.555 347.648 12.668 cv
347.855 12.785 348.039 12.926 348.203 13.09 cv
348.363 13.258 348.492 13.457 348.594 13.687 cv
348.688 13.922 348.738 14.195 348.742 14.512 cv
cp
f
360.836 12.926 mo
360.832 13.523 360.754 14.066 360.598 14.555 cv
360.441 15.047 360.203 15.469 359.887 15.82 cv
359.566 16.176 359.168 16.449 358.691 16.641 cv
358.211 16.832 357.648 16.926 357.008 16.93 cv
356.383 16.926 355.844 16.844 355.391 16.672 cv
354.93 16.504 354.551 16.254 354.246 15.922 cv
353.941 15.598 353.715 15.191 353.574 14.711 cv
353.426 14.23 353.355 13.684 353.355 13.066 cv
353.355 12.477 353.434 11.934 353.594 11.437 cv
353.75 10.945 353.988 10.523 354.309 10.168 cv
354.625 9.82001 355.023 9.547 355.504 9.35199 cv
355.977 9.15997 356.535 9.06201 357.18 9.06201 cv
357.805 9.06201 358.348 9.14801 358.809 9.31598 cv
359.266 9.48798 359.645 9.73798 359.945 10.062 cv
360.242 10.395 360.465 10.797 360.613 11.273 cv
360.758 11.754 360.832 12.305 360.836 12.926 cv
cp
358.809 13.004 mo
358.805 12.664 358.777 12.348 358.727 12.055 cv
358.668 11.766 358.574 11.512 358.449 11.297 cv
358.316 11.086 358.145 10.918 357.93 10.797 cv
357.711 10.68 357.438 10.621 357.109 10.617 cv
356.816 10.621 356.563 10.676 356.344 10.777 cv
356.125 10.887 355.945 11.043 355.805 11.246 cv
355.664 11.457 355.559 11.703 355.488 11.992 cv
355.418 12.281 355.383 12.613 355.383 12.98 cv
355.383 13.328 355.41 13.645 355.469 13.93 cv
355.523 14.223 355.617 14.473 355.746 14.684 cv
355.871 14.898 356.043 15.066 356.266 15.184 cv
356.48 15.305 356.75 15.363 357.078 15.359 cv
357.375 15.363 357.637 15.309 357.855 15.199 cv
358.074 15.094 358.254 14.937 358.395 14.73 cv
358.535 14.531 358.637 14.285 358.707 13.992 cv
358.77 13.707 358.805 13.379 358.809 13.004 cv
cp
f
366.609 6.84802 mo
366.605 7 366.602 7.12097 366.594 7.211 cv
366.582 7.30499 366.566 7.375 366.547 7.422 cv
366.523 7.47302 366.5 7.508 366.477 7.52301 cv
366.449 7.54303 366.418 7.55103 366.391 7.55103 cv
366.352 7.55103 366.313 7.54303 366.27 7.52301 cv
366.223 7.508 366.168 7.48798 366.102 7.46503 cv
366.035 7.44501 365.957 7.42603 365.871 7.40601 cv
365.781 7.39099 365.676 7.383 365.559 7.37903 cv
365.414 7.383 365.293 7.40198 365.195 7.44501 cv
365.09 7.492 365.008 7.56201 364.941 7.65601 cv
364.871 7.75403 364.82 7.87903 364.793 8.03101 cv
364.758 8.18701 364.742 8.37903 364.746 8.59802 cv
364.746 9.242 li
366.02 9.242 li
366.066 9.24597 366.109 9.258 366.148 9.28101 cv
366.188 9.30902 366.219 9.35199 366.25 9.40997 cv
366.273 9.47302 366.293 9.55499 366.309 9.65601 cv
366.316 9.76202 366.324 9.89099 366.328 10.039 cv
366.324 10.328 366.297 10.531 366.25 10.652 cv
366.195 10.777 366.121 10.84 366.02 10.836 cv
364.746 10.836 li
364.746 16.484 li
364.742 16.539 364.727 16.582 364.699 16.621 cv
364.664 16.66 364.613 16.695 364.543 16.719 cv
364.469 16.746 364.367 16.762 364.238 16.777 cv
364.105 16.789 363.945 16.797 363.762 16.797 cv
363.57 16.797 363.414 16.789 363.289 16.777 cv
363.16 16.762 363.055 16.746 362.98 16.719 cv
362.902 16.695 362.852 16.66 362.824 16.621 cv
362.793 16.582 362.777 16.539 362.781 16.484 cv
362.781 10.836 li
361.906 10.836 li
361.805 10.84 361.73 10.777 361.684 10.652 cv
361.633 10.531 361.605 10.328 361.609 10.039 cv
361.605 9.89099 361.613 9.76202 361.629 9.65601 cv
361.641 9.55499 361.66 9.47302 361.684 9.40997 cv
361.707 9.35199 361.738 9.30902 361.777 9.28101 cv
361.816 9.258 361.859 9.24597 361.914 9.242 cv
362.781 9.242 li
362.781 8.65198 li
362.777 8.17999 362.824 7.76599 362.922 7.40601 cv
363.016 7.05103 363.164 6.75403 363.367 6.51599 cv
363.563 6.28101 363.82 6.10199 364.133 5.97998 cv
364.441 5.85901 364.805 5.80103 365.23 5.797 cv
365.43 5.80103 365.625 5.81598 365.809 5.85199 cv
365.988 5.88702 366.129 5.92603 366.238 5.961 cv
366.34 6.00403 366.414 6.039 366.453 6.07001 cv
366.488 6.10498 366.516 6.15601 366.543 6.21899 cv
366.563 6.289 366.582 6.37097 366.594 6.46899 cv
366.602 6.57397 366.605 6.69897 366.609 6.84802 cv
cp
f
373.262 16.469 mo
373.258 16.523 373.242 16.57 373.211 16.609 cv
373.176 16.652 373.117 16.687 373.043 16.711 cv
372.961 16.738 372.859 16.758 372.73 16.773 cv
372.598 16.789 372.43 16.797 372.23 16.797 cv
372.031 16.797 371.863 16.789 371.73 16.773 cv
371.594 16.758 371.488 16.738 371.414 16.711 cv
371.332 16.687 371.277 16.652 371.246 16.609 cv
371.211 16.57 371.195 16.523 371.195 16.469 cv
371.195 6.90997 li
371.195 6.86298 371.211 6.81598 371.246 6.77002 cv
371.277 6.72998 371.336 6.69501 371.418 6.66803 cv
371.496 6.64502 371.602 6.625 371.734 6.60498 cv
371.867 6.59399 372.031 6.586 372.23 6.58197 cv
372.43 6.586 372.598 6.59399 372.73 6.60498 cv
372.859 6.625 372.961 6.64502 373.043 6.66803 cv
373.117 6.69501 373.176 6.72998 373.211 6.77002 cv
373.242 6.81598 373.258 6.86298 373.262 6.90997 cv
cp
f
386.457 16.484 mo
386.453 16.539 386.438 16.582 386.41 16.621 cv
386.375 16.66 386.324 16.695 386.254 16.719 cv
386.18 16.746 386.078 16.762 385.957 16.777 cv
385.828 16.789 385.672 16.797 385.48 16.797 cv
385.277 16.797 385.113 16.789 384.992 16.777 cv
384.863 16.762 384.762 16.746 384.691 16.719 cv
384.613 16.695 384.563 16.66 384.535 16.621 cv
384.504 16.582 384.488 16.539 384.492 16.484 cv
384.492 12.348 li
384.488 12.113 384.469 11.898 384.426 11.703 cv
384.379 11.516 384.309 11.348 384.223 11.207 cv
384.129 11.07 384.016 10.965 383.879 10.887 cv
383.738 10.812 383.574 10.773 383.383 10.773 cv
383.148 10.773 382.91 10.867 382.672 11.047 cv
382.43 11.234 382.168 11.5 381.887 11.844 cv
381.887 16.484 li
381.883 16.539 381.867 16.582 381.84 16.621 cv
381.805 16.66 381.75 16.695 381.68 16.719 cv
381.602 16.746 381.504 16.762 381.379 16.777 cv
381.254 16.789 381.098 16.797 380.91 16.797 cv
380.715 16.797 380.555 16.789 380.434 16.777 cv
380.305 16.762 380.203 16.746 380.133 16.719 cv
380.055 16.695 380.004 16.66 379.973 16.621 cv
379.941 16.582 379.926 16.539 379.926 16.484 cv
379.926 12.348 li
379.926 12.113 379.902 11.898 379.859 11.703 cv
379.813 11.516 379.746 11.348 379.66 11.207 cv
379.57 11.07 379.457 10.965 379.316 10.887 cv
379.176 10.812 379.008 10.773 378.82 10.773 cv
378.578 10.773 378.34 10.867 378.102 11.047 cv
377.859 11.234 377.602 11.5 377.328 11.844 cv
377.328 16.484 li
377.324 16.539 377.309 16.582 377.281 16.621 cv
377.246 16.66 377.191 16.695 377.121 16.719 cv
377.043 16.746 376.945 16.762 376.82 16.777 cv
376.695 16.789 376.535 16.797 376.344 16.797 cv
376.148 16.797 375.988 16.789 375.863 16.777 cv
375.734 16.762 375.633 16.746 375.563 16.719 cv
375.484 16.695 375.434 16.66 375.402 16.621 cv
375.371 16.582 375.355 16.539 375.355 16.484 cv
375.355 9.508 li
375.355 9.45697 375.367 9.414 375.395 9.37097 cv
375.418 9.336 375.465 9.30103 375.535 9.27301 cv
375.602 9.25 375.688 9.22998 375.797 9.21503 cv
375.902 9.203 376.039 9.19897 376.203 9.19501 cv
376.367 9.19897 376.504 9.203 376.617 9.21503 cv
376.723 9.22998 376.809 9.25 376.871 9.27301 cv
376.93 9.30103 376.973 9.336 377 9.37097 cv
377.023 9.414 377.035 9.45697 377.039 9.508 cv
377.039 10.312 li
377.422 9.89801 377.809 9.586 378.191 9.375 cv
378.574 9.16803 378.973 9.06201 379.395 9.06201 cv
379.676 9.06201 379.934 9.09399 380.168 9.15198 cv
380.395 9.21503 380.602 9.30103 380.781 9.40997 cv
380.961 9.52301 381.113 9.65601 381.246 9.81201 cv
381.371 9.96899 381.48 10.145 381.574 10.336 cv
381.777 10.113 381.984 9.922 382.188 9.758 cv
382.391 9.60199 382.59 9.46899 382.785 9.36298 cv
382.98 9.26599 383.176 9.19098 383.371 9.13702 cv
383.566 9.09003 383.766 9.06201 383.969 9.06201 cv
384.43 9.06201 384.82 9.14099 385.141 9.297 cv
385.461 9.453 385.719 9.66803 385.914 9.93402 cv
386.109 10.207 386.246 10.52 386.332 10.875 cv
386.41 11.238 386.453 11.617 386.457 12.016 cv
cp
f
394.328 16.508 mo
394.324 16.586 394.297 16.641 394.25 16.68 cv
394.195 16.723 394.113 16.75 394.004 16.77 cv
393.887 16.785 393.723 16.797 393.508 16.797 cv
393.27 16.797 393.098 16.785 392.996 16.77 cv
392.887 16.75 392.813 16.723 392.77 16.68 cv
392.723 16.641 392.699 16.586 392.703 16.508 cv
392.703 15.953 li
392.414 16.262 392.086 16.504 391.719 16.672 cv
391.348 16.844 390.941 16.926 390.496 16.93 cv
390.125 16.926 389.785 16.879 389.477 16.785 cv
389.164 16.691 388.895 16.551 388.668 16.355 cv
388.438 16.168 388.262 15.93 388.141 15.648 cv
388.012 15.367 387.949 15.039 387.953 14.66 cv
387.949 14.258 388.027 13.906 388.191 13.602 cv
388.348 13.305 388.586 13.055 388.902 12.859 cv
389.219 12.664 389.613 12.52 390.082 12.426 cv
390.551 12.332 391.094 12.285 391.715 12.285 cv
392.398 12.285 li
392.398 11.859 li
392.395 11.645 392.375 11.453 392.332 11.285 cv
392.285 11.125 392.211 10.988 392.109 10.875 cv
392.008 10.77 391.871 10.687 391.703 10.633 cv
391.531 10.582 391.32 10.559 391.074 10.555 cv
390.742 10.559 390.449 10.594 390.195 10.664 cv
389.934 10.738 389.707 10.82 389.512 10.906 cv
389.313 11 389.145 11.078 389.012 11.148 cv
388.875 11.223 388.77 11.262 388.688 11.258 cv
388.629 11.262 388.578 11.242 388.535 11.203 cv
388.488 11.168 388.449 11.117 388.426 11.047 cv
388.395 10.984 388.375 10.898 388.359 10.797 cv
388.344 10.699 388.336 10.59 388.336 10.469 cv
388.336 10.309 388.348 10.184 388.375 10.086 cv
388.398 9.99597 388.449 9.90997 388.523 9.83197 cv
388.594 9.758 388.719 9.67603 388.906 9.58197 cv
389.086 9.49597 389.301 9.40997 389.551 9.328 cv
389.793 9.25403 390.063 9.19098 390.352 9.13702 cv
390.641 9.09003 390.938 9.06201 391.246 9.06201 cv
391.789 9.06201 392.258 9.117 392.648 9.22302 cv
393.039 9.33197 393.359 9.49597 393.609 9.71503 cv
393.859 9.93701 394.039 10.223 394.156 10.57 cv
394.266 10.922 394.324 11.336 394.328 11.812 cv
cp
392.398 13.52 mo
391.645 13.52 li
391.324 13.523 391.055 13.547 390.832 13.59 cv
390.605 13.641 390.422 13.711 390.285 13.801 cv
390.141 13.898 390.039 14.012 389.977 14.141 cv
389.91 14.277 389.875 14.43 389.879 14.598 cv
389.875 14.895 389.969 15.125 390.156 15.289 cv
390.34 15.461 390.598 15.543 390.926 15.539 cv
391.199 15.543 391.453 15.473 391.688 15.328 cv
391.918 15.187 392.152 14.98 392.398 14.707 cv
cp
f
402.586 9.992 mo
402.582 10.246 402.555 10.43 402.5 10.547 cv
402.441 10.668 402.371 10.727 402.289 10.727 cv
401.469 10.727 li
401.582 10.852 401.664 10.996 401.715 11.152 cv
401.762 11.316 401.785 11.48 401.789 11.648 cv
401.785 12.059 401.719 12.422 401.586 12.734 cv
401.449 13.055 401.254 13.32 401.004 13.531 cv
400.746 13.75 400.441 13.914 400.086 14.023 cv
399.727 14.141 399.328 14.195 398.895 14.191 cv
398.668 14.195 398.457 14.168 398.254 14.109 cv
398.051 14.059 397.895 13.996 397.785 13.918 cv
397.723 13.988 397.664 14.066 397.617 14.16 cv
397.563 14.254 397.539 14.359 397.543 14.473 cv
397.539 14.625 397.605 14.75 397.742 14.844 cv
397.871 14.945 398.059 14.996 398.301 15.004 cv
399.996 15.066 li
400.391 15.086 400.746 15.141 401.059 15.238 cv
401.367 15.336 401.629 15.473 401.84 15.645 cv
402.051 15.82 402.211 16.031 402.324 16.273 cv
402.434 16.523 402.488 16.797 402.492 17.109 cv
402.488 17.449 402.414 17.773 402.266 18.082 cv
402.113 18.387 401.887 18.652 401.586 18.879 cv
401.281 19.098 400.902 19.277 400.445 19.41 cv
399.988 19.539 399.453 19.602 398.848 19.605 cv
398.25 19.602 397.742 19.555 397.324 19.465 cv
396.902 19.367 396.559 19.238 396.293 19.074 cv
396.02 18.906 395.824 18.707 395.707 18.473 cv
395.582 18.238 395.523 17.984 395.523 17.711 cv
395.523 17.539 395.543 17.375 395.59 17.219 cv
395.629 17.062 395.695 16.91 395.785 16.77 cv
395.867 16.625 395.973 16.492 396.102 16.359 cv
396.223 16.23 396.367 16.105 396.531 15.984 cv
396.305 15.867 396.129 15.703 396.012 15.496 cv
395.887 15.293 395.828 15.066 395.828 14.816 cv
395.828 14.512 395.898 14.234 396.039 13.977 cv
396.18 13.727 396.359 13.496 396.586 13.293 cv
396.398 13.113 396.254 12.895 396.148 12.637 cv
396.035 12.383 395.98 12.066 395.984 11.68 cv
395.98 11.277 396.051 10.914 396.199 10.59 cv
396.34 10.273 396.539 10 396.797 9.77698 cv
397.051 9.55902 397.359 9.39099 397.715 9.27002 cv
398.066 9.15601 398.457 9.09802 398.887 9.09399 cv
399.105 9.09802 399.313 9.10901 399.516 9.133 cv
399.711 9.15997 399.898 9.19897 400.078 9.242 cv
402.289 9.242 li
402.375 9.24597 402.445 9.30103 402.504 9.414 cv
402.555 9.53101 402.582 9.72699 402.586 9.992 cv
cp
400.063 11.641 mo
400.059 11.266 399.953 10.977 399.746 10.766 cv
399.535 10.562 399.242 10.457 398.863 10.453 cv
398.668 10.457 398.496 10.488 398.355 10.551 cv
398.207 10.617 398.086 10.707 397.992 10.816 cv
397.891 10.93 397.82 11.059 397.777 11.207 cv
397.727 11.355 397.703 11.512 397.707 11.672 cv
397.703 12.031 397.809 12.312 398.02 12.516 cv
398.227 12.723 398.516 12.824 398.887 12.824 cv
399.082 12.824 399.254 12.793 399.402 12.73 cv
399.547 12.668 399.668 12.582 399.766 12.473 cv
399.859 12.363 399.93 12.238 399.984 12.094 cv
400.031 11.949 400.059 11.797 400.063 11.641 cv
cp
400.523 17.211 mo
400.52 16.973 400.426 16.797 400.238 16.672 cv
400.047 16.551 399.789 16.48 399.465 16.469 cv
398.066 16.43 li
397.93 16.531 397.82 16.625 397.742 16.715 cv
397.66 16.805 397.594 16.891 397.547 16.977 cv
397.492 17.059 397.461 17.141 397.449 17.219 cv
397.43 17.297 397.422 17.375 397.426 17.461 cv
397.422 17.719 397.555 17.918 397.82 18.055 cv
398.082 18.187 398.453 18.254 398.934 18.258 cv
399.23 18.254 399.48 18.227 399.684 18.168 cv
399.887 18.105 400.051 18.023 400.176 17.93 cv
400.301 17.828 400.391 17.719 400.445 17.598 cv
400.496 17.473 400.52 17.344 400.523 17.211 cv
cp
f
410.141 12.793 mo
410.141 13.035 410.086 13.211 409.98 13.324 cv
409.871 13.441 409.723 13.5 409.539 13.496 cv
405.293 13.496 li
405.289 13.797 405.324 14.066 405.398 14.305 cv
405.465 14.551 405.578 14.754 405.734 14.922 cv
405.887 15.094 406.082 15.227 406.328 15.312 cv
406.566 15.406 406.859 15.449 407.199 15.445 cv
407.543 15.449 407.844 15.426 408.109 15.371 cv
408.367 15.324 408.594 15.27 408.785 15.207 cv
408.973 15.148 409.129 15.09 409.258 15.039 cv
409.379 14.992 409.48 14.969 409.563 14.965 cv
409.605 14.969 409.645 14.977 409.68 14.992 cv
409.707 15.012 409.734 15.047 409.758 15.09 cv
409.777 15.141 409.793 15.207 409.801 15.293 cv
409.809 15.383 409.813 15.492 409.813 15.617 cv
409.813 15.734 409.809 15.832 409.805 15.91 cv
409.797 15.996 409.789 16.062 409.781 16.117 cv
409.77 16.176 409.754 16.227 409.734 16.262 cv
409.711 16.305 409.684 16.34 409.652 16.375 cv
409.617 16.414 409.523 16.465 409.375 16.523 cv
409.219 16.59 409.027 16.652 408.797 16.707 cv
408.559 16.77 408.289 16.816 407.992 16.863 cv
407.688 16.902 407.363 16.926 407.02 16.93 cv
406.395 16.926 405.852 16.852 405.391 16.695 cv
404.922 16.543 404.531 16.305 404.219 15.984 cv
403.902 15.668 403.672 15.266 403.52 14.781 cv
403.363 14.297 403.285 13.73 403.289 13.074 cv
403.285 12.457 403.367 11.898 403.531 11.398 cv
403.691 10.902 403.926 10.477 404.234 10.129 cv
404.543 9.78497 404.918 9.52301 405.359 9.336 cv
405.797 9.15601 406.293 9.06201 406.848 9.06201 cv
407.434 9.06201 407.934 9.14801 408.348 9.32001 cv
408.762 9.492 409.102 9.72998 409.367 10.035 cv
409.633 10.34 409.828 10.703 409.953 11.117 cv
410.078 11.539 410.141 11.992 410.141 12.48 cv
cp
408.234 12.23 mo
408.246 11.68 408.137 11.242 407.902 10.926 cv
407.664 10.613 407.297 10.457 406.801 10.453 cv
406.551 10.457 406.332 10.504 406.148 10.594 cv
405.961 10.691 405.809 10.816 405.688 10.973 cv
405.563 11.133 405.469 11.32 405.406 11.535 cv
405.34 11.754 405.301 11.988 405.293 12.23 cv
cp
f
416.668 14.512 mo
416.664 14.91 416.59 15.262 416.445 15.562 cv
416.293 15.867 416.082 16.121 415.813 16.32 cv
415.539 16.527 415.219 16.676 414.852 16.777 cv
414.48 16.875 414.078 16.926 413.648 16.93 cv
413.383 16.926 413.137 16.906 412.902 16.871 cv
412.664 16.828 412.449 16.781 412.262 16.723 cv
412.07 16.664 411.914 16.602 411.793 16.539 cv
411.664 16.477 411.574 16.418 411.52 16.363 cv
411.461 16.309 411.414 16.223 411.387 16.105 cv
411.352 15.988 411.336 15.816 411.34 15.586 cv
411.336 15.437 411.344 15.316 411.355 15.223 cv
411.363 15.133 411.379 15.059 411.402 15 cv
411.422 14.949 411.445 14.914 411.48 14.891 cv
411.508 14.875 411.547 14.863 411.598 14.863 cv
411.652 14.863 411.738 14.898 411.852 14.961 cv
411.961 15.031 412.102 15.102 412.27 15.18 cv
412.438 15.258 412.633 15.332 412.855 15.398 cv
413.074 15.469 413.324 15.504 413.609 15.5 cv
413.785 15.504 413.941 15.484 414.082 15.445 cv
414.215 15.41 414.336 15.359 414.441 15.289 cv
414.539 15.227 414.617 15.141 414.672 15.031 cv
414.723 14.93 414.746 14.809 414.75 14.668 cv
414.746 14.516 414.699 14.379 414.605 14.266 cv
414.508 14.156 414.379 14.059 414.223 13.973 cv
414.059 13.891 413.879 13.812 413.684 13.738 cv
413.48 13.668 413.277 13.59 413.066 13.496 cv
412.855 13.41 412.648 13.309 412.445 13.191 cv
412.242 13.082 412.063 12.941 411.906 12.77 cv
411.746 12.605 411.617 12.402 411.523 12.168 cv
411.426 11.934 411.379 11.652 411.379 11.32 cv
411.379 10.988 411.441 10.684 411.574 10.402 cv
411.699 10.129 411.887 9.89099 412.137 9.68701 cv
412.379 9.492 412.68 9.336 413.035 9.22699 cv
413.383 9.117 413.777 9.06201 414.219 9.06201 cv
414.434 9.06201 414.645 9.078 414.855 9.10901 cv
415.059 9.14099 415.246 9.17999 415.414 9.22699 cv
415.582 9.27301 415.723 9.32397 415.84 9.37903 cv
415.949 9.43402 416.031 9.47998 416.086 9.52002 cv
416.133 9.55902 416.168 9.59802 416.191 9.63702 cv
416.207 9.67603 416.223 9.72302 416.238 9.77698 cv
416.246 9.83197 416.258 9.90198 416.266 9.97998 cv
416.273 10.066 416.277 10.164 416.277 10.281 cv
416.277 10.422 416.273 10.539 416.266 10.625 cv
416.258 10.719 416.242 10.789 416.227 10.836 cv
416.203 10.891 416.18 10.926 416.152 10.941 cv
416.117 10.965 416.082 10.973 416.043 10.969 cv
415.996 10.973 415.922 10.945 415.824 10.887 cv
415.723 10.836 415.598 10.777 415.449 10.711 cv
415.297 10.652 415.125 10.594 414.934 10.535 cv
414.734 10.484 414.512 10.457 414.266 10.453 cv
414.086 10.457 413.934 10.477 413.805 10.508 cv
413.672 10.547 413.563 10.598 413.484 10.664 cv
413.398 10.734 413.336 10.812 413.297 10.902 cv
413.25 10.996 413.23 11.094 413.234 11.195 cv
413.23 11.359 413.281 11.496 413.383 11.602 cv
413.48 11.715 413.609 11.812 413.773 11.891 cv
413.934 11.977 414.117 12.055 414.324 12.129 cv
414.527 12.203 414.734 12.281 414.949 12.367 cv
415.156 12.453 415.367 12.555 415.574 12.668 cv
415.781 12.785 415.965 12.926 416.129 13.09 cv
416.289 13.258 416.418 13.457 416.52 13.687 cv
416.613 13.922 416.664 14.195 416.668 14.512 cv
cp
f
425.172 12.816 mo
425.172 13.121 425.141 13.332 425.086 13.449 cv
425.023 13.574 424.934 13.633 424.813 13.629 cv
421.559 13.629 li
421.426 13.633 421.332 13.57 421.277 13.445 cv
421.215 13.324 421.188 13.117 421.191 12.816 cv
421.188 12.527 421.215 12.32 421.277 12.199 cv
421.332 12.078 421.426 12.016 421.559 12.016 cv
424.813 12.016 li
424.871 12.016 424.926 12.031 424.973 12.059 cv
425.016 12.086 425.051 12.129 425.086 12.191 cv
425.113 12.254 425.137 12.34 425.152 12.441 cv
425.164 12.551 425.172 12.676 425.172 12.816 cv
cp
f
435.914 15.891 mo
435.91 16.051 435.906 16.184 435.895 16.285 cv
435.879 16.395 435.859 16.48 435.836 16.551 cv
435.809 16.621 435.773 16.672 435.738 16.703 cv
435.695 16.734 435.652 16.75 435.602 16.75 cv
430.965 16.75 li
430.789 16.75 430.645 16.699 430.527 16.598 cv
430.41 16.496 430.352 16.332 430.352 16.102 cv
430.352 6.90997 li
430.352 6.86298 430.367 6.81598 430.402 6.77002 cv
430.434 6.72998 430.488 6.69501 430.57 6.66803 cv
430.645 6.64502 430.75 6.625 430.887 6.60498 cv
431.02 6.59399 431.188 6.586 431.387 6.58197 cv
431.586 6.586 431.754 6.59399 431.887 6.60498 cv
432.016 6.625 432.117 6.64502 432.199 6.66803 cv
432.273 6.69501 432.332 6.72998 432.367 6.77002 cv
432.398 6.81598 432.414 6.86298 432.418 6.90997 cv
432.418 15.051 li
435.602 15.051 li
435.652 15.051 435.695 15.066 435.738 15.094 cv
435.773 15.125 435.809 15.172 435.836 15.238 cv
435.859 15.305 435.879 15.391 435.895 15.496 cv
435.906 15.605 435.91 15.738 435.914 15.891 cv
cp
f
444.07 12.926 mo
444.066 13.523 443.988 14.066 443.832 14.555 cv
443.676 15.047 443.438 15.469 443.121 15.82 cv
442.801 16.176 442.402 16.449 441.926 16.641 cv
441.445 16.832 440.883 16.926 440.242 16.93 cv
439.617 16.926 439.078 16.844 438.625 16.672 cv
438.164 16.504 437.785 16.254 437.48 15.922 cv
437.176 15.598 436.949 15.191 436.809 14.711 cv
436.66 14.23 436.59 13.684 436.59 13.066 cv
436.59 12.477 436.668 11.934 436.828 11.437 cv
436.984 10.945 437.223 10.523 437.543 10.168 cv
437.859 9.82001 438.258 9.547 438.738 9.35199 cv
439.211 9.15997 439.77 9.06201 440.414 9.06201 cv
441.039 9.06201 441.582 9.14801 442.043 9.31598 cv
442.5 9.48798 442.879 9.73798 443.18 10.062 cv
443.477 10.395 443.699 10.797 443.848 11.273 cv
443.992 11.754 444.066 12.305 444.07 12.926 cv
cp
442.043 13.004 mo
442.039 12.664 442.012 12.348 441.961 12.055 cv
441.902 11.766 441.809 11.512 441.684 11.297 cv
441.551 11.086 441.379 10.918 441.164 10.797 cv
440.945 10.68 440.672 10.621 440.344 10.617 cv
440.051 10.621 439.797 10.676 439.578 10.777 cv
439.359 10.887 439.18 11.043 439.039 11.246 cv
438.898 11.457 438.793 11.703 438.723 11.992 cv
438.652 12.281 438.617 12.613 438.617 12.98 cv
438.617 13.328 438.645 13.645 438.703 13.93 cv
438.758 14.223 438.852 14.473 438.98 14.684 cv
439.105 14.898 439.277 15.066 439.5 15.184 cv
439.715 15.305 439.984 15.363 440.313 15.359 cv
440.609 15.363 440.871 15.309 441.09 15.199 cv
441.309 15.094 441.488 14.937 441.629 14.73 cv
441.77 14.531 441.871 14.285 441.941 13.992 cv
442.004 13.707 442.039 13.379 442.043 13.004 cv
cp
f
450.91 15.375 mo
450.906 15.512 450.902 15.625 450.898 15.715 cv
450.887 15.809 450.879 15.887 450.867 15.945 cv
450.852 16.012 450.836 16.062 450.82 16.098 cv
450.801 16.141 450.758 16.187 450.699 16.246 cv
450.633 16.309 450.527 16.383 450.379 16.465 cv
450.227 16.555 450.055 16.633 449.863 16.695 cv
449.668 16.766 449.457 16.816 449.23 16.859 cv
449 16.898 448.766 16.918 448.531 16.922 cv
447.992 16.918 447.52 16.84 447.105 16.672 cv
446.691 16.508 446.34 16.262 446.059 15.934 cv
445.773 15.613 445.563 15.215 445.422 14.742 cv
445.277 14.273 445.207 13.734 445.207 13.129 cv
445.207 12.434 445.293 11.832 445.469 11.32 cv
445.641 10.812 445.883 10.391 446.199 10.055 cv
446.512 9.72302 446.883 9.47699 447.313 9.31201 cv
447.734 9.15601 448.203 9.07397 448.719 9.07001 cv
448.922 9.07397 449.129 9.09399 449.332 9.125 cv
449.535 9.164 449.723 9.211 449.898 9.27301 cv
450.07 9.336 450.227 9.40601 450.367 9.48401 cv
450.504 9.56201 450.602 9.633 450.66 9.68701 cv
450.715 9.75 450.754 9.797 450.781 9.83197 cv
450.801 9.875 450.82 9.92603 450.836 9.98401 cv
450.848 10.051 450.859 10.129 450.867 10.215 cv
450.875 10.309 450.879 10.418 450.879 10.547 cv
450.879 10.852 450.852 11.062 450.801 11.184 cv
450.746 11.309 450.68 11.371 450.598 11.367 cv
450.508 11.371 450.414 11.336 450.316 11.258 cv
450.215 11.187 450.098 11.105 449.965 11.016 cv
449.828 10.93 449.664 10.848 449.477 10.773 cv
449.285 10.703 449.063 10.668 448.805 10.664 cv
448.293 10.668 447.902 10.863 447.633 11.254 cv
447.359 11.648 447.223 12.227 447.227 12.988 cv
447.223 13.363 447.258 13.695 447.328 13.98 cv
447.395 14.27 447.492 14.508 447.629 14.699 cv
447.758 14.895 447.926 15.043 448.129 15.137 cv
448.328 15.238 448.563 15.285 448.828 15.281 cv
449.098 15.285 449.328 15.246 449.527 15.16 cv
449.723 15.082 449.895 14.988 450.043 14.887 cv
450.184 14.789 450.309 14.699 450.41 14.617 cv
450.508 14.539 450.59 14.5 450.66 14.496 cv
450.703 14.5 450.742 14.512 450.777 14.535 cv
450.805 14.562 450.828 14.613 450.852 14.68 cv
450.867 14.754 450.883 14.844 450.895 14.949 cv
450.902 15.062 450.906 15.203 450.91 15.375 cv
cp
f
458.207 16.508 mo
458.203 16.586 458.176 16.641 458.129 16.68 cv
458.074 16.723 457.992 16.75 457.883 16.77 cv
457.766 16.785 457.602 16.797 457.387 16.797 cv
457.148 16.797 456.977 16.785 456.875 16.77 cv
456.766 16.75 456.691 16.723 456.648 16.68 cv
456.602 16.641 456.578 16.586 456.582 16.508 cv
456.582 15.953 li
456.293 16.262 455.965 16.504 455.598 16.672 cv
455.227 16.844 454.82 16.926 454.375 16.93 cv
454.004 16.926 453.664 16.879 453.355 16.785 cv
453.043 16.691 452.773 16.551 452.547 16.355 cv
452.316 16.168 452.141 15.93 452.02 15.648 cv
451.891 15.367 451.828 15.039 451.832 14.66 cv
451.828 14.258 451.906 13.906 452.07 13.602 cv
452.227 13.305 452.465 13.055 452.781 12.859 cv
453.098 12.664 453.492 12.52 453.961 12.426 cv
454.43 12.332 454.973 12.285 455.594 12.285 cv
456.277 12.285 li
456.277 11.859 li
456.273 11.645 456.254 11.453 456.211 11.285 cv
456.164 11.125 456.09 10.988 455.988 10.875 cv
455.887 10.77 455.75 10.687 455.582 10.633 cv
455.41 10.582 455.199 10.559 454.953 10.555 cv
454.621 10.559 454.328 10.594 454.074 10.664 cv
453.813 10.738 453.586 10.82 453.391 10.906 cv
453.191 11 453.023 11.078 452.891 11.148 cv
452.754 11.223 452.648 11.262 452.566 11.258 cv
452.508 11.262 452.457 11.242 452.414 11.203 cv
452.367 11.168 452.328 11.117 452.305 11.047 cv
452.273 10.984 452.254 10.898 452.238 10.797 cv
452.223 10.699 452.215 10.59 452.215 10.469 cv
452.215 10.309 452.227 10.184 452.254 10.086 cv
452.277 9.99597 452.328 9.90997 452.402 9.83197 cv
452.473 9.758 452.598 9.67603 452.785 9.58197 cv
452.965 9.49597 453.18 9.40997 453.43 9.328 cv
453.672 9.25403 453.941 9.19098 454.23 9.13702 cv
454.52 9.09003 454.816 9.06201 455.125 9.06201 cv
455.668 9.06201 456.137 9.117 456.527 9.22302 cv
456.918 9.33197 457.238 9.49597 457.488 9.71503 cv
457.738 9.93701 457.918 10.223 458.035 10.57 cv
458.145 10.922 458.203 11.336 458.207 11.812 cv
cp
456.277 13.52 mo
455.523 13.52 li
455.203 13.523 454.934 13.547 454.711 13.59 cv
454.484 13.641 454.301 13.711 454.164 13.801 cv
454.02 13.898 453.918 14.012 453.855 14.141 cv
453.789 14.277 453.754 14.43 453.758 14.598 cv
453.754 14.895 453.848 15.125 454.035 15.289 cv
454.219 15.461 454.477 15.543 454.805 15.539 cv
455.078 15.543 455.332 15.473 455.566 15.328 cv
455.797 15.187 456.031 14.98 456.277 14.707 cv
cp
f
462.148 16.484 mo
462.145 16.539 462.129 16.582 462.102 16.621 cv
462.066 16.66 462.012 16.695 461.941 16.719 cv
461.863 16.746 461.766 16.762 461.641 16.777 cv
461.516 16.789 461.355 16.797 461.164 16.797 cv
460.969 16.797 460.809 16.789 460.684 16.777 cv
460.555 16.762 460.453 16.746 460.383 16.719 cv
460.305 16.695 460.254 16.66 460.223 16.621 cv
460.191 16.582 460.176 16.539 460.176 16.484 cv
460.176 6.19897 li
460.176 6.14801 460.191 6.10199 460.223 6.05902 cv
460.254 6.02002 460.305 5.98401 460.383 5.953 cv
460.453 5.92603 460.555 5.90198 460.684 5.88702 cv
460.809 5.87097 460.969 5.86298 461.164 5.86298 cv
461.355 5.86298 461.516 5.87097 461.641 5.88702 cv
461.766 5.90198 461.863 5.92603 461.941 5.953 cv
462.012 5.98401 462.066 6.02002 462.102 6.05902 cv
462.129 6.10199 462.145 6.14801 462.148 6.19897 cv
cp
f
479.539 16.469 mo
479.535 16.523 479.523 16.57 479.496 16.609 cv
479.465 16.652 479.41 16.687 479.34 16.711 cv
479.262 16.738 479.164 16.758 479.039 16.773 cv
478.914 16.789 478.754 16.797 478.563 16.797 cv
478.371 16.797 478.215 16.789 478.094 16.773 cv
477.965 16.758 477.867 16.738 477.797 16.711 cv
477.723 16.687 477.668 16.652 477.641 16.609 cv
477.605 16.57 477.59 16.523 477.594 16.469 cv
477.594 8.22998 li
477.574 8.22998 li
474.645 16.461 li
474.621 16.531 474.586 16.586 474.543 16.629 cv
474.492 16.676 474.426 16.711 474.348 16.734 cv
474.262 16.762 474.16 16.777 474.039 16.785 cv
473.91 16.793 473.758 16.797 473.586 16.797 cv
473.406 16.797 473.258 16.789 473.133 16.777 cv
473.008 16.762 472.902 16.742 472.824 16.715 cv
472.738 16.687 472.676 16.652 472.633 16.609 cv
472.582 16.57 472.551 16.523 472.539 16.461 cv
469.707 8.22998 li
469.691 8.22998 li
469.691 16.469 li
469.688 16.523 469.672 16.57 469.648 16.609 cv
469.617 16.652 469.566 16.687 469.488 16.711 cv
469.41 16.738 469.309 16.758 469.188 16.773 cv
469.063 16.789 468.906 16.797 468.715 16.797 cv
468.527 16.797 468.367 16.789 468.242 16.773 cv
468.113 16.758 468.016 16.738 467.941 16.711 cv
467.863 16.687 467.809 16.652 467.785 16.609 cv
467.754 16.57 467.742 16.523 467.742 16.469 cv
467.742 7.44897 li
467.742 7.18701 467.813 6.98401 467.953 6.84003 cv
468.094 6.703 468.281 6.633 468.52 6.62903 cv
469.863 6.62903 li
470.102 6.633 470.305 6.65198 470.48 6.68701 cv
470.648 6.72998 470.797 6.79303 470.926 6.883 cv
471.047 6.97699 471.152 7.09802 471.238 7.242 cv
471.32 7.39502 471.395 7.578 471.461 7.79303 cv
473.648 13.824 li
473.68 13.824 li
475.949 7.80902 li
476.016 7.59003 476.09 7.40601 476.172 7.25403 cv
476.25 7.10498 476.344 6.98401 476.453 6.88702 cv
476.559 6.797 476.684 6.72998 476.832 6.68701 cv
476.973 6.65198 477.145 6.633 477.34 6.62903 cv
478.727 6.62903 li
478.863 6.633 478.984 6.64801 479.09 6.68402 cv
479.188 6.72302 479.27 6.77698 479.34 6.84399 cv
479.402 6.91803 479.453 7.00403 479.488 7.10199 cv
479.52 7.20697 479.535 7.32397 479.539 7.44897 cv
cp
f
488.684 12.926 mo
488.68 13.523 488.602 14.066 488.445 14.555 cv
488.289 15.047 488.051 15.469 487.734 15.82 cv
487.414 16.176 487.016 16.449 486.539 16.641 cv
486.059 16.832 485.496 16.926 484.855 16.93 cv
484.23 16.926 483.691 16.844 483.238 16.672 cv
482.777 16.504 482.398 16.254 482.094 15.922 cv
481.789 15.598 481.563 15.191 481.422 14.711 cv
481.273 14.23 481.203 13.684 481.203 13.066 cv
481.203 12.477 481.281 11.934 481.441 11.437 cv
481.598 10.945 481.836 10.523 482.156 10.168 cv
482.473 9.82001 482.871 9.547 483.352 9.35199 cv
483.824 9.15997 484.383 9.06201 485.027 9.06201 cv
485.652 9.06201 486.195 9.14801 486.656 9.31598 cv
487.113 9.48798 487.492 9.73798 487.793 10.062 cv
488.09 10.395 488.313 10.797 488.461 11.273 cv
488.605 11.754 488.68 12.305 488.684 12.926 cv
cp
486.656 13.004 mo
486.652 12.664 486.625 12.348 486.574 12.055 cv
486.516 11.766 486.422 11.512 486.297 11.297 cv
486.164 11.086 485.992 10.918 485.777 10.797 cv
485.559 10.68 485.285 10.621 484.957 10.617 cv
484.664 10.621 484.41 10.676 484.191 10.777 cv
483.973 10.887 483.793 11.043 483.652 11.246 cv
483.512 11.457 483.406 11.703 483.336 11.992 cv
483.266 12.281 483.23 12.613 483.23 12.98 cv
483.23 13.328 483.258 13.645 483.316 13.93 cv
483.371 14.223 483.465 14.473 483.594 14.684 cv
483.719 14.898 483.891 15.066 484.113 15.184 cv
484.328 15.305 484.598 15.363 484.926 15.359 cv
485.223 15.363 485.484 15.309 485.703 15.199 cv
485.922 15.094 486.102 14.937 486.242 14.73 cv
486.383 14.531 486.484 14.285 486.555 13.992 cv
486.617 13.707 486.652 13.379 486.656 13.004 cv
cp
f
496.863 16.484 mo
496.859 16.547 496.848 16.594 496.824 16.629 cv
496.797 16.672 496.754 16.703 496.691 16.727 cv
496.629 16.75 496.543 16.766 496.438 16.781 cv
496.328 16.789 496.195 16.797 496.043 16.797 cv
495.871 16.797 495.738 16.789 495.637 16.781 cv
495.531 16.766 495.445 16.75 495.383 16.727 cv
495.316 16.703 495.27 16.672 495.242 16.629 cv
495.211 16.594 495.195 16.547 495.199 16.484 cv
495.199 15.711 li
494.836 16.102 494.461 16.398 494.066 16.609 cv
493.672 16.82 493.234 16.926 492.758 16.93 cv
492.223 16.926 491.773 16.824 491.41 16.621 cv
491.039 16.418 490.738 16.141 490.508 15.789 cv
490.273 15.441 490.105 15.035 490.004 14.566 cv
489.898 14.102 489.848 13.609 489.848 13.09 cv
489.848 12.473 489.914 11.914 490.047 11.418 cv
490.18 10.922 490.371 10.5 490.629 10.148 cv
490.883 9.80103 491.203 9.53101 491.586 9.34399 cv
491.965 9.15601 492.402 9.06201 492.898 9.06201 cv
493.285 9.06201 493.641 9.14502 493.961 9.30103 cv
494.281 9.46503 494.598 9.69501 494.91 10 cv
494.91 6.22302 li
494.91 6.172 494.922 6.125 494.953 6.08197 cv
494.977 6.04303 495.031 6.008 495.109 5.97699 cv
495.184 5.94897 495.281 5.92603 495.41 5.90997 cv
495.531 5.89502 495.691 5.88702 495.887 5.88702 cv
496.078 5.88702 496.238 5.89502 496.363 5.90997 cv
496.488 5.92603 496.586 5.94897 496.66 5.97699 cv
496.73 6.008 496.781 6.04303 496.816 6.08197 cv
496.844 6.125 496.859 6.172 496.863 6.22302 cv
cp
494.91 11.82 mo
494.629 11.469 494.355 11.195 494.098 11.008 cv
493.836 10.82 493.566 10.727 493.289 10.727 cv
493.031 10.727 492.813 10.793 492.629 10.918 cv
492.441 11.051 492.293 11.219 492.184 11.43 cv
492.07 11.645 491.988 11.887 491.934 12.148 cv
491.879 12.414 491.852 12.684 491.852 12.957 cv
491.852 13.254 491.875 13.535 491.922 13.809 cv
491.969 14.086 492.043 14.332 492.152 14.547 cv
492.254 14.766 492.398 14.941 492.578 15.07 cv
492.754 15.203 492.977 15.27 493.25 15.266 cv
493.383 15.27 493.516 15.25 493.645 15.207 cv
493.77 15.168 493.898 15.102 494.035 15.012 cv
494.168 14.926 494.305 14.809 494.449 14.664 cv
494.586 14.523 494.742 14.348 494.91 14.137 cv
cp
f
505.293 12.793 mo
505.293 13.035 505.238 13.211 505.133 13.324 cv
505.023 13.441 504.875 13.5 504.691 13.496 cv
500.445 13.496 li
500.441 13.797 500.477 14.066 500.551 14.305 cv
500.617 14.551 500.73 14.754 500.887 14.922 cv
501.039 15.094 501.234 15.227 501.48 15.312 cv
501.719 15.406 502.012 15.449 502.352 15.445 cv
502.695 15.449 502.996 15.426 503.262 15.371 cv
503.52 15.324 503.746 15.27 503.938 15.207 cv
504.125 15.148 504.281 15.09 504.41 15.039 cv
504.531 14.992 504.633 14.969 504.715 14.965 cv
504.758 14.969 504.797 14.977 504.832 14.992 cv
504.859 15.012 504.887 15.047 504.91 15.09 cv
504.93 15.141 504.945 15.207 504.953 15.293 cv
504.961 15.383 504.965 15.492 504.965 15.617 cv
504.965 15.734 504.961 15.832 504.957 15.91 cv
504.949 15.996 504.941 16.062 504.934 16.117 cv
504.922 16.176 504.906 16.227 504.887 16.262 cv
504.863 16.305 504.836 16.34 504.805 16.375 cv
504.77 16.414 504.676 16.465 504.527 16.523 cv
504.371 16.59 504.18 16.652 503.949 16.707 cv
503.711 16.77 503.441 16.816 503.145 16.863 cv
502.84 16.902 502.516 16.926 502.172 16.93 cv
501.547 16.926 501.004 16.852 500.543 16.695 cv
500.074 16.543 499.684 16.305 499.371 15.984 cv
499.055 15.668 498.824 15.266 498.672 14.781 cv
498.516 14.297 498.438 13.73 498.441 13.074 cv
498.438 12.457 498.52 11.898 498.684 11.398 cv
498.844 10.902 499.078 10.477 499.387 10.129 cv
499.695 9.78497 500.07 9.52301 500.512 9.336 cv
500.949 9.15601 501.445 9.06201 502 9.06201 cv
502.586 9.06201 503.086 9.14801 503.5 9.32001 cv
503.914 9.492 504.254 9.72998 504.52 10.035 cv
504.785 10.34 504.98 10.703 505.105 11.117 cv
505.23 11.539 505.293 11.992 505.293 12.48 cv
cp
503.387 12.23 mo
503.398 11.68 503.289 11.242 503.055 10.926 cv
502.816 10.613 502.449 10.457 501.953 10.453 cv
501.703 10.457 501.484 10.504 501.301 10.594 cv
501.113 10.691 500.961 10.816 500.84 10.973 cv
500.715 11.133 500.621 11.32 500.559 11.535 cv
500.492 11.754 500.453 11.988 500.445 12.23 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
