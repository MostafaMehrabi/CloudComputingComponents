%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FirstScenario-PreparationTimesOfImages-LocalMode.pdf
%%Creator: Adobe Acrobat 15.23.0
%%For: mehra
%%CreationDate: 12/8/2018, 12:53:53 PM
%%BoundingBox: 0 0 673 551
%%HiResBoundingBox: 0 0 672.7201 550.2001
%%CropBox: 0 0 672.7201 550.2001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -550.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 550.2 li
672.72 550.2 li
672.72 0 li
cp
clp
gsave
0 550.2 mo
673 550.2 li
673 -.799988 li
0 -.799988 li
cp
clp
0 0 mo
672.719 0 li
672.719 550.199 li
0 550.199 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
48.359 484.68 mo
659.281 484.68 li
48.359 444.719 mo
659.281 444.719 li
48.359 404.879 mo
659.281 404.879 li
48.359 364.922 mo
659.281 364.922 li
48.359 325.078 mo
659.281 325.078 li
48.359 285.121 mo
659.281 285.121 li
48.359 245.281 mo
659.281 245.281 li
48.359 205.441 mo
659.281 205.441 li
48.359 165.48 mo
659.281 165.48 li
48.359 125.641 mo
659.281 125.641 li
48.359 85.68 mo
659.281 85.68 li
48.359 45.84 mo
659.281 45.84 li
.140414 .108034 .108034 0 cmyk
@
48.359 464.762 mo
659.281 464.762 li
48.359 424.801 mo
659.281 424.801 li
48.359 384.961 mo
659.281 384.961 li
48.359 345 mo
659.281 345 li
48.359 305.16 mo
659.281 305.16 li
48.359 265.199 mo
659.281 265.199 li
48.359 225.359 mo
659.281 225.359 li
48.359 185.398 mo
659.281 185.398 li
48.359 145.559 mo
659.281 145.559 li
48.359 105.602 mo
659.281 105.602 li
48.359 65.762 mo
659.281 65.762 li
48.359 25.801 mo
659.281 25.801 li
.328344 .284215 .278569 .000915541 cmyk
@
58.199 25.801 mo
58.199 504.602 li
77.879 25.801 mo
77.879 504.602 li
97.68 25.801 mo
97.68 504.602 li
117.359 25.801 mo
117.359 504.602 li
137.039 25.801 mo
137.039 504.602 li
156.719 25.801 mo
156.719 504.602 li
176.52 25.801 mo
176.52 504.602 li
196.199 25.801 mo
196.199 504.602 li
215.879 25.801 mo
215.879 504.602 li
235.559 25.801 mo
235.559 504.602 li
255.238 25.801 mo
255.238 504.602 li
275.039 25.801 mo
275.039 504.602 li
294.719 25.801 mo
294.719 504.602 li
314.398 25.801 mo
314.398 504.602 li
334.078 25.801 mo
334.078 504.602 li
353.762 25.801 mo
353.762 504.602 li
373.559 25.801 mo
373.559 504.602 li
393.238 25.801 mo
393.238 504.602 li
412.922 25.801 mo
412.922 504.602 li
432.602 25.801 mo
432.602 504.602 li
452.398 25.801 mo
452.398 504.602 li
472.078 25.801 mo
472.078 504.602 li
491.762 25.801 mo
491.762 504.602 li
511.441 25.801 mo
511.441 504.602 li
531.121 25.801 mo
531.121 504.602 li
550.922 25.801 mo
550.922 504.602 li
570.602 25.801 mo
570.602 504.602 li
590.281 25.801 mo
590.281 504.602 li
609.961 25.801 mo
609.961 504.602 li
629.762 25.801 mo
629.762 504.602 li
649.441 25.801 mo
649.441 504.602 li
.178592 .148898 .143923 0 cmyk
@
48.359 25.801 mo
48.359 504.602 li
68.039 25.801 mo
68.039 504.602 li
87.84 25.801 mo
87.84 504.602 li
107.52 25.801 mo
107.52 504.602 li
127.199 25.801 mo
127.199 504.602 li
146.879 25.801 mo
146.879 504.602 li
166.559 25.801 mo
166.559 504.602 li
186.359 25.801 mo
186.359 504.602 li
206.039 25.801 mo
206.039 504.602 li
225.719 25.801 mo
225.719 504.602 li
245.398 25.801 mo
245.398 504.602 li
265.078 25.801 mo
265.078 504.602 li
284.879 25.801 mo
284.879 504.602 li
304.559 25.801 mo
304.559 504.602 li
324.238 25.801 mo
324.238 504.602 li
343.922 25.801 mo
343.922 504.602 li
363.719 25.801 mo
363.719 504.602 li
383.398 25.801 mo
383.398 504.602 li
403.078 25.801 mo
403.078 504.602 li
422.762 25.801 mo
422.762 504.602 li
442.441 25.801 mo
442.441 504.602 li
462.238 25.801 mo
462.238 504.602 li
481.922 25.801 mo
481.922 504.602 li
501.602 25.801 mo
501.602 504.602 li
521.281 25.801 mo
521.281 504.602 li
541.078 25.801 mo
541.078 504.602 li
560.762 25.801 mo
560.762 504.602 li
580.441 25.801 mo
580.441 504.602 li
600.121 25.801 mo
600.121 504.602 li
619.801 25.801 mo
619.801 504.602 li
639.602 25.801 mo
639.602 504.602 li
659.281 25.801 mo
659.281 504.602 li
.328344 .284215 .278569 .000915541 cmyk
@
31.199 496.559 mo
37.199 496.559 li
37.199 511.321 li
31.199 511.321 li
cp
0 0 0 0 cmyk
ef
31.199 456.719 mo
37.199 456.719 li
37.199 471.36 li
31.199 471.36 li
cp
ef
31.199 416.879 mo
37.199 416.879 li
37.199 431.52 li
31.199 431.52 li
cp
ef
25.078 376.922 mo
37.199 376.922 li
37.199 391.559 li
25.078 391.559 li
cp
ef
25.078 337.078 mo
37.199 337.078 li
37.199 351.719 li
25.078 351.719 li
cp
ef
25.078 297.121 mo
37.199 297.121 li
37.199 311.762 li
25.078 311.762 li
cp
ef
25.078 257.281 mo
37.199 257.281 li
37.199 271.922 li
25.078 271.922 li
cp
ef
25.078 217.32 mo
37.199 217.32 li
37.199 231.961 li
25.078 231.961 li
cp
ef
25.078 177.48 mo
37.199 177.48 li
37.199 192.121 li
25.078 192.121 li
cp
ef
25.078 137.52 mo
37.199 137.52 li
37.199 152.161 li
25.078 152.161 li
cp
ef
25.078 97.68 mo
37.199 97.68 li
37.199 112.321 li
25.078 112.321 li
cp
ef
25.078 57.719 mo
37.199 57.719 li
37.199 72.36 li
25.078 72.36 li
cp
ef
25.078 17.879 mo
37.199 17.879 li
37.199 32.52 li
25.078 32.52 li
cp
ef
.96 lw
48.359 504.602 mo
659.281 504.602 li
.367803 .29575 .300999 .00198367 cmyk
@
48.359 504.602 mo
48.359 508.441 li
68.039 504.602 mo
68.039 508.441 li
87.84 504.602 mo
87.84 508.441 li
107.52 504.602 mo
107.52 508.441 li
127.199 504.602 mo
127.199 508.441 li
146.879 504.602 mo
146.879 508.441 li
166.559 504.602 mo
166.559 508.441 li
186.359 504.602 mo
186.359 508.441 li
206.039 504.602 mo
206.039 508.441 li
225.719 504.602 mo
225.719 508.441 li
245.398 504.602 mo
245.398 508.441 li
265.078 504.602 mo
265.078 508.441 li
284.879 504.602 mo
284.879 508.441 li
304.559 504.602 mo
304.559 508.441 li
324.238 504.602 mo
324.238 508.441 li
343.922 504.602 mo
343.922 508.441 li
363.719 504.602 mo
363.719 508.441 li
383.398 504.602 mo
383.398 508.441 li
403.078 504.602 mo
403.078 508.441 li
422.762 504.602 mo
422.762 508.441 li
442.441 504.602 mo
442.441 508.441 li
462.238 504.602 mo
462.238 508.441 li
481.922 504.602 mo
481.922 508.441 li
501.602 504.602 mo
501.602 508.441 li
521.281 504.602 mo
521.281 508.441 li
541.078 504.602 mo
541.078 508.441 li
560.762 504.602 mo
560.762 508.441 li
580.441 504.602 mo
580.441 508.441 li
600.121 504.602 mo
600.121 508.441 li
619.801 504.602 mo
619.801 508.441 li
639.602 504.602 mo
639.602 508.441 li
659.281 504.602 mo
659.281 508.441 li
@
gsave
48.359 25.801 mo
659.879 25.801 li
659.879 505.321 li
48.359 505.321 li
cp
clp
1 lc
48.359 433.922 mo
68.039 189.48 li
87.84 234.359 li
107.52 47.641 li
127.199 48.961 li
146.879 48.121 li
166.559 48.359 li
186.359 48.121 li
206.039 48.238 li
225.719 102.84 li
245.398 102.48 li
265.078 103.078 li
284.879 102.84 li
304.559 102.48 li
324.238 103.078 li
343.922 102.359 li
363.719 102.48 li
403.078 102.48 li
422.762 102.719 li
442.441 102.961 li
462.238 102.602 li
481.922 102.238 li
501.602 102.359 li
521.281 102.359 li
541.078 102.48 li
560.762 102.359 li
580.441 102.602 li
600.121 102.48 li
619.801 102.719 li
639.602 102.238 li
659.281 102.602 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
53.352 439 mo
43.27 428.922 li
43.27 439 mo
53.352 428.922 li
.62768 .285466 0 0 cmyk
@
73.031 194.559 mo
62.949 184.48 li
62.949 194.559 mo
73.031 184.48 li
@
92.711 239.441 mo
82.629 229.359 li
82.629 239.441 mo
92.711 229.359 li
@
112.391 52.719 mo
102.309 42.641 li
102.309 52.719 mo
112.391 42.641 li
@
132.07 54.039 mo
121.988 43.961 li
121.988 54.039 mo
132.07 43.961 li
@
151.871 53.078 mo
141.789 43 li
141.789 53.078 mo
151.871 43 li
@
171.551 53.441 mo
161.469 43.359 li
161.469 53.441 mo
171.551 43.359 li
@
191.23 53.078 mo
181.148 43 li
181.148 53.078 mo
191.23 43 li
@
210.91 53.199 mo
200.828 43.121 li
200.828 53.199 mo
210.91 43.121 li
@
230.711 107.922 mo
220.629 97.84 li
220.629 107.922 mo
230.711 97.84 li
@
250.391 107.559 mo
240.309 97.48 li
240.309 107.559 mo
250.391 97.48 li
@
270.07 108.16 mo
259.988 98.078 li
259.988 108.16 mo
270.07 98.078 li
@
289.75 107.922 mo
279.672 97.84 li
279.672 107.922 mo
289.75 97.84 li
@
309.43 107.441 mo
299.352 97.359 li
299.352 107.441 mo
309.43 97.359 li
@
329.23 108.16 mo
319.148 98.078 li
319.148 108.16 mo
329.23 98.078 li
@
348.91 107.32 mo
338.828 97.238 li
338.828 107.32 mo
348.91 97.238 li
@
368.59 107.559 mo
358.512 97.48 li
358.512 107.559 mo
368.59 97.48 li
@
388.27 107.559 mo
378.191 97.48 li
378.191 107.559 mo
388.27 97.48 li
@
408.07 107.441 mo
397.988 97.359 li
397.988 107.441 mo
408.07 97.359 li
@
427.75 107.801 mo
417.672 97.719 li
417.672 107.801 mo
427.75 97.719 li
@
447.43 107.922 mo
437.352 97.84 li
437.352 107.922 mo
447.43 97.84 li
@
467.109 107.559 mo
457.031 97.48 li
457.031 107.559 mo
467.109 97.48 li
@
486.789 107.199 mo
476.711 97.121 li
476.711 107.199 mo
486.789 97.121 li
@
506.59 107.32 mo
496.512 97.238 li
496.512 107.32 mo
506.59 97.238 li
@
526.27 107.32 mo
516.191 97.238 li
516.191 107.32 mo
526.27 97.238 li
@
545.949 107.441 mo
535.871 97.359 li
535.871 107.441 mo
545.949 97.359 li
@
565.629 107.441 mo
555.551 97.359 li
555.551 107.441 mo
565.629 97.359 li
@
585.309 107.68 mo
575.23 97.602 li
575.23 107.68 mo
585.309 97.602 li
@
605.109 107.441 mo
595.031 97.359 li
595.031 107.441 mo
605.109 97.359 li
@
624.789 107.68 mo
614.711 97.602 li
614.711 107.68 mo
624.789 97.602 li
@
644.469 107.32 mo
634.391 97.238 li
634.391 107.32 mo
644.469 97.238 li
@
664.148 107.559 mo
654.07 97.48 li
654.07 107.559 mo
664.148 97.48 li
@
gsave
48.359 25.801 mo
659.879 25.801 li
659.879 505.321 li
48.359 505.321 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
48.359 434.039 mo
68.039 191.398 li
87.84 236.52 li
107.52 50.879 li
127.199 50.641 li
146.879 50.398 li
166.559 51.602 li
186.359 51.238 li
206.039 50.762 li
225.719 105.238 li
245.398 105.719 li
265.078 105.602 li
284.879 105.602 li
304.559 105.48 li
324.238 105.719 li
343.922 105.238 li
363.719 105.48 li
383.398 105.238 li
403.078 105.602 li
422.762 104.281 li
442.441 104.52 li
462.238 104.879 li
481.922 105.121 li
501.602 105 li
521.281 105 li
541.078 105.719 li
560.762 105.238 li
580.441 105 li
600.121 105.359 li
619.801 105.961 li
639.602 105.602 li
659.281 105.238 li
@
grestore
53.352 439.121 mo
43.27 429.039 li
43.27 439.121 mo
53.352 429.039 li
@
73.031 196.48 mo
62.949 186.398 li
62.949 196.48 mo
73.031 186.398 li
@
92.711 241.602 mo
82.629 231.52 li
82.629 241.602 mo
92.711 231.52 li
@
112.391 55.961 mo
102.309 45.879 li
102.309 55.961 mo
112.391 45.879 li
@
132.07 55.719 mo
121.988 45.641 li
121.988 55.719 mo
132.07 45.641 li
@
151.871 55.48 mo
141.789 45.398 li
141.789 55.48 mo
151.871 45.398 li
@
171.551 56.68 mo
161.469 46.602 li
161.469 56.68 mo
171.551 46.602 li
@
191.23 56.32 mo
181.148 46.238 li
181.148 56.32 mo
191.23 46.238 li
@
210.91 55.84 mo
200.828 45.762 li
200.828 55.84 mo
210.91 45.762 li
@
230.711 110.199 mo
220.629 100.121 li
220.629 110.199 mo
230.711 100.121 li
@
250.391 110.801 mo
240.309 100.719 li
240.309 110.801 mo
250.391 100.719 li
@
270.07 110.68 mo
259.988 100.602 li
259.988 110.68 mo
270.07 100.602 li
@
289.75 110.68 mo
279.672 100.602 li
279.672 110.68 mo
289.75 100.602 li
@
309.43 110.559 mo
299.352 100.48 li
299.352 110.559 mo
309.43 100.48 li
@
329.23 110.68 mo
319.148 100.602 li
319.148 110.68 mo
329.23 100.602 li
@
348.91 110.32 mo
338.828 100.238 li
338.828 110.32 mo
348.91 100.238 li
@
368.59 110.559 mo
358.512 100.48 li
358.512 110.559 mo
368.59 100.48 li
@
388.27 110.32 mo
378.191 100.238 li
378.191 110.32 mo
388.27 100.238 li
@
408.07 110.559 mo
397.988 100.48 li
397.988 110.559 mo
408.07 100.48 li
@
427.75 109.238 mo
417.672 99.16 li
417.672 109.238 mo
427.75 99.16 li
@
447.43 109.48 mo
437.352 99.398 li
437.352 109.48 mo
447.43 99.398 li
@
467.109 109.84 mo
457.031 99.762 li
457.031 109.84 mo
467.109 99.762 li
@
486.789 110.199 mo
476.711 100.121 li
476.711 110.199 mo
486.789 100.121 li
@
506.59 109.961 mo
496.512 99.879 li
496.512 109.961 mo
506.59 99.879 li
@
526.27 109.961 mo
516.191 99.879 li
516.191 109.961 mo
526.27 99.879 li
@
545.949 110.801 mo
535.871 100.719 li
535.871 110.801 mo
545.949 100.719 li
@
565.629 110.199 mo
555.551 100.121 li
555.551 110.199 mo
565.629 100.121 li
@
585.309 110.078 mo
575.23 100 li
575.23 110.078 mo
585.309 100 li
@
605.109 110.32 mo
595.031 100.238 li
595.031 110.32 mo
605.109 100.238 li
@
624.789 111.039 mo
614.711 100.961 li
614.711 111.039 mo
624.789 100.961 li
@
644.469 110.559 mo
634.391 100.48 li
634.391 110.559 mo
644.469 100.48 li
@
664.148 110.32 mo
654.07 100.238 li
654.07 110.32 mo
664.148 100.238 li
@
gsave
48.359 25.801 mo
659.879 25.801 li
659.879 505.321 li
48.359 505.321 li
cp
clp
.96 lw
1 lc
48.359 434.16 mo
68.039 393.359 li
87.84 447.961 li
107.52 392.52 li
127.199 392.281 li
166.559 392.039 li
186.359 392.039 li
206.039 391.922 li
225.719 447.84 li
245.398 447.84 li
265.078 447.602 li
284.879 447.719 li
304.559 447.719 li
324.238 447.84 li
383.398 447.84 li
403.078 447.961 li
422.762 447.719 li
442.441 447.359 li
462.238 447.719 li
481.922 447.84 li
501.602 447.48 li
521.281 447.602 li
541.078 447.719 li
560.762 447.961 li
580.441 447.84 li
600.121 447.84 li
619.801 447.48 li
639.602 447.84 li
659.281 447.84 li
0 .990631 1 .000396735 cmyk
@
grestore
53.352 439.238 mo
43.27 429.16 li
43.27 439.238 mo
53.352 429.16 li
0 .990631 1 .000396735 cmyk
@
73.031 398.32 mo
62.949 388.238 li
62.949 398.32 mo
73.031 388.238 li
@
92.711 453.039 mo
82.629 442.961 li
82.629 453.039 mo
92.711 442.961 li
@
112.391 397.602 mo
102.309 387.52 li
102.309 397.602 mo
112.391 387.52 li
@
132.07 397.359 mo
121.988 387.281 li
121.988 397.359 mo
132.07 387.281 li
@
151.871 397.238 mo
141.789 387.16 li
141.789 397.238 mo
151.871 387.16 li
@
171.551 397.121 mo
161.469 387.039 li
161.469 397.121 mo
171.551 387.039 li
@
191.23 397.121 mo
181.148 387.039 li
181.148 397.121 mo
191.23 387.039 li
@
210.91 397 mo
200.828 386.922 li
200.828 397 mo
210.91 386.922 li
@
230.711 452.801 mo
220.629 442.719 li
220.629 452.801 mo
230.711 442.719 li
@
250.391 452.801 mo
240.309 442.719 li
240.309 452.801 mo
250.391 442.719 li
@
270.07 452.68 mo
259.988 442.602 li
259.988 452.68 mo
270.07 442.602 li
@
289.75 452.68 mo
279.672 442.602 li
279.672 452.68 mo
289.75 442.602 li
@
309.43 452.801 mo
299.352 442.719 li
299.352 452.801 mo
309.43 442.719 li
@
329.23 452.922 mo
319.148 442.84 li
319.148 452.922 mo
329.23 442.84 li
@
348.91 452.922 mo
338.828 442.84 li
338.828 452.922 mo
348.91 442.84 li
@
368.59 452.922 mo
358.512 442.84 li
358.512 452.922 mo
368.59 442.84 li
@
388.27 452.801 mo
378.191 442.719 li
378.191 452.801 mo
388.27 442.719 li
@
408.07 452.922 mo
397.988 442.84 li
397.988 452.922 mo
408.07 442.84 li
@
427.75 452.68 mo
417.672 442.602 li
417.672 452.68 mo
427.75 442.602 li
@
447.43 452.441 mo
437.352 442.359 li
437.352 452.441 mo
447.43 442.359 li
@
467.109 452.801 mo
457.031 442.719 li
457.031 452.801 mo
467.109 442.719 li
@
486.789 452.922 mo
476.711 442.84 li
476.711 452.922 mo
486.789 442.84 li
@
506.59 452.559 mo
496.512 442.48 li
496.512 452.559 mo
506.59 442.48 li
@
526.27 452.559 mo
516.191 442.48 li
516.191 452.559 mo
526.27 442.48 li
@
545.949 452.68 mo
535.871 442.602 li
535.871 452.68 mo
545.949 442.602 li
@
565.629 452.922 mo
555.551 442.84 li
555.551 452.922 mo
565.629 442.84 li
@
585.309 452.922 mo
575.23 442.84 li
575.23 452.922 mo
585.309 442.84 li
@
605.109 452.922 mo
595.031 442.84 li
595.031 452.922 mo
605.109 442.84 li
@
624.789 452.441 mo
614.711 442.359 li
614.711 452.441 mo
624.789 442.359 li
@
644.469 452.922 mo
634.391 442.84 li
634.391 452.922 mo
644.469 442.84 li
@
664.148 452.801 mo
654.07 442.719 li
654.07 452.801 mo
664.148 442.719 li
@
gsave
48.359 25.801 mo
659.879 25.801 li
659.879 505.321 li
48.359 505.321 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
48.359 480.719 mo
68.039 482.52 li
87.84 482.398 li
107.52 483.84 li
127.199 486.84 li
146.879 483.121 li
166.559 482.281 li
186.359 485.16 li
206.039 482.52 li
225.719 482.398 li
245.398 481.922 li
265.078 483.602 li
284.879 482.281 li
304.559 486.84 li
324.238 482.641 li
343.922 486.719 li
363.719 482.398 li
383.398 481.922 li
403.078 482.641 li
422.762 482.16 li
442.441 485.641 li
462.238 482.52 li
481.922 486.84 li
521.281 486.84 li
541.078 482.52 li
560.762 485.398 li
580.441 484.801 li
600.121 482.641 li
619.801 482.398 li
639.602 482.641 li
659.281 481.68 li
@
grestore
53.352 485.801 mo
43.27 475.719 li
43.27 485.801 mo
53.352 475.719 li
@
73.031 487.48 mo
62.949 477.398 li
62.949 487.48 mo
73.031 477.398 li
@
92.711 487.48 mo
82.629 477.398 li
82.629 487.48 mo
92.711 477.398 li
@
112.391 488.922 mo
102.309 478.84 li
102.309 488.922 mo
112.391 478.84 li
@
132.07 491.922 mo
121.988 481.84 li
121.988 491.922 mo
132.07 481.84 li
@
151.871 488.199 mo
141.789 478.121 li
141.789 488.199 mo
151.871 478.121 li
@
171.551 487.238 mo
161.469 477.16 li
161.469 487.238 mo
171.551 477.16 li
@
191.23 490.238 mo
181.148 480.16 li
181.148 490.238 mo
191.23 480.16 li
@
210.91 487.602 mo
200.828 477.52 li
200.828 487.602 mo
210.91 477.52 li
@
230.711 487.48 mo
220.629 477.398 li
220.629 487.48 mo
230.711 477.398 li
@
250.391 486.879 mo
240.309 476.801 li
240.309 486.879 mo
250.391 476.801 li
@
270.07 488.68 mo
259.988 478.602 li
259.988 488.68 mo
270.07 478.602 li
@
289.75 487.359 mo
279.672 477.281 li
279.672 487.359 mo
289.75 477.281 li
@
309.43 491.922 mo
299.352 481.84 li
299.352 491.922 mo
309.43 481.84 li
@
329.23 487.602 mo
319.148 477.52 li
319.148 487.602 mo
329.23 477.52 li
@
348.91 491.801 mo
338.828 481.719 li
338.828 491.801 mo
348.91 481.719 li
@
368.59 487.359 mo
358.512 477.281 li
358.512 487.359 mo
368.59 477.281 li
@
388.27 486.879 mo
378.191 476.801 li
378.191 486.879 mo
388.27 476.801 li
@
408.07 487.602 mo
397.988 477.52 li
397.988 487.602 mo
408.07 477.52 li
@
427.75 487.121 mo
417.672 477.039 li
417.672 487.121 mo
427.75 477.039 li
@
447.43 490.602 mo
437.352 480.52 li
437.352 490.602 mo
447.43 480.52 li
@
467.109 487.602 mo
457.031 477.52 li
457.031 487.602 mo
467.109 477.52 li
@
486.789 491.801 mo
476.711 481.719 li
476.711 491.801 mo
486.789 481.719 li
@
506.59 491.922 mo
496.512 481.84 li
496.512 491.922 mo
506.59 481.84 li
@
526.27 491.801 mo
516.191 481.719 li
516.191 491.801 mo
526.27 481.719 li
@
545.949 487.48 mo
535.871 477.398 li
535.871 487.48 mo
545.949 477.398 li
@
565.629 490.48 mo
555.551 480.398 li
555.551 490.48 mo
565.629 480.398 li
@
585.309 489.879 mo
575.23 479.801 li
575.23 489.879 mo
585.309 479.801 li
@
605.109 487.602 mo
595.031 477.52 li
595.031 487.602 mo
605.109 477.52 li
@
624.789 487.48 mo
614.711 477.398 li
614.711 487.48 mo
624.789 477.398 li
@
644.469 487.719 mo
634.391 477.641 li
634.391 487.719 mo
644.469 477.641 li
@
664.148 486.762 mo
654.07 476.68 li
654.07 486.762 mo
664.148 476.68 li
@
31.109 496.652 mo
37.191 496.652 li
37.191 511.304 li
31.109 511.304 li
cp
0 0 0 0 cmyk
ef
36.793 504.344 mo
36.789 504.926 36.742 505.457 36.656 505.937 cv
36.563 506.422 36.41 506.836 36.199 507.18 cv
35.98 507.523 35.703 507.793 35.363 507.98 cv
35.016 508.168 34.594 508.258 34.094 508.262 cv
33.617 508.258 33.215 508.176 32.891 508.008 cv
32.563 507.84 32.301 507.59 32.102 507.258 cv
31.898 506.93 31.754 506.523 31.676 506.039 cv
31.59 505.559 31.551 505.004 31.551 504.379 cv
31.551 503.801 31.598 503.273 31.691 502.789 cv
31.785 502.312 31.938 501.898 32.148 501.547 cv
32.359 501.203 32.637 500.934 32.98 500.742 cv
33.324 500.555 33.746 500.461 34.246 500.457 cv
34.723 500.461 35.125 500.547 35.453 500.715 cv
35.781 500.887 36.043 501.137 36.242 501.465 cv
36.441 501.797 36.582 502.203 36.668 502.684 cv
36.746 503.168 36.789 503.719 36.793 504.344 cv
cp
35.762 504.414 mo
35.758 504.039 35.746 503.699 35.723 503.395 cv
35.695 503.094 35.652 502.828 35.602 502.598 cv
35.547 502.371 35.48 502.176 35.395 502.004 cv
35.309 501.84 35.207 501.703 35.094 501.594 cv
34.973 501.492 34.84 501.414 34.691 501.359 cv
34.543 501.312 34.375 501.285 34.188 501.285 cv
33.855 501.285 33.586 501.363 33.379 501.52 cv
33.168 501.676 33.004 501.891 32.887 502.164 cv
32.77 502.437 32.688 502.758 32.645 503.125 cv
32.602 503.492 32.582 503.887 32.582 504.309 cv
32.582 504.879 32.609 505.363 32.668 505.754 cv
32.727 506.152 32.82 506.473 32.945 506.723 cv
33.07 506.973 33.23 507.156 33.434 507.27 cv
33.629 507.383 33.871 507.437 34.152 507.437 cv
34.371 507.437 34.563 507.402 34.73 507.332 cv
34.895 507.262 35.035 507.164 35.156 507.031 cv
35.273 506.902 35.375 506.742 35.453 506.559 cv
35.531 506.379 35.594 506.176 35.641 505.949 cv
35.688 505.727 35.719 505.488 35.734 505.227 cv
35.75 504.969 35.758 504.695 35.762 504.414 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
31.109 456.762 mo
37.191 456.762 li
37.191 471.41 li
31.109 471.41 li
cp
0 0 0 0 cmyk
ef
36.863 466.082 mo
36.859 466.215 36.84 466.316 36.805 466.387 cv
36.762 466.461 36.707 466.5 36.645 466.496 cv
35.785 466.496 li
35.785 468.09 li
35.781 468.125 35.773 468.152 35.762 468.172 cv
35.742 468.195 35.715 468.211 35.676 468.227 cv
35.637 468.242 35.582 468.254 35.52 468.262 cv
35.453 468.27 35.371 468.273 35.273 468.273 cv
35.172 468.273 35.094 468.27 35.031 468.262 cv
34.969 468.254 34.918 468.242 34.879 468.227 cv
34.84 468.211 34.813 468.195 34.797 468.172 cv
34.781 468.152 34.773 468.125 34.777 468.09 cv
34.777 466.496 li
31.676 466.496 li
31.629 466.5 31.594 466.492 31.563 466.48 cv
31.531 466.473 31.5 466.453 31.477 466.418 cv
31.445 466.391 31.43 466.344 31.422 466.281 cv
31.414 466.223 31.41 466.148 31.41 466.051 cv
31.41 465.98 31.41 465.914 31.414 465.855 cv
31.418 465.797 31.426 465.742 31.438 465.695 cv
31.449 465.648 31.465 465.602 31.484 465.555 cv
31.504 465.508 31.527 465.461 31.555 465.41 cv
34.258 460.801 li
34.277 460.773 34.305 460.746 34.344 460.719 cv
34.379 460.699 34.43 460.68 34.492 460.66 cv
34.551 460.648 34.621 460.637 34.711 460.629 cv
34.797 460.625 34.902 460.621 35.023 460.621 cv
35.152 460.621 35.266 460.629 35.363 460.637 cv
35.461 460.652 35.539 460.664 35.602 460.676 cv
35.656 460.695 35.703 460.715 35.738 460.738 cv
35.766 460.762 35.781 460.793 35.785 460.824 cv
35.785 465.668 li
36.645 465.668 li
36.707 465.672 36.762 465.707 36.801 465.77 cv
36.84 465.84 36.859 465.941 36.863 466.082 cv
cp
34.777 461.504 mo
34.77 461.504 li
32.332 465.668 li
34.777 465.668 li
cp
.629114 .553033 .543389 .289647 cmyk
f
31.109 416.859 mo
37.191 416.859 li
37.191 431.511 li
31.109 431.511 li
cp
0 0 0 0 cmyk
ef
36.719 426.406 mo
36.719 426.734 36.66 427.027 36.543 427.281 cv
36.426 427.539 36.254 427.754 36.035 427.93 cv
35.813 428.109 35.543 428.242 35.219 428.328 cv
34.891 428.414 34.52 428.457 34.105 428.461 cv
33.715 428.457 33.363 428.418 33.055 428.34 cv
32.746 428.262 32.484 428.141 32.27 427.977 cv
32.055 427.816 31.891 427.621 31.777 427.383 cv
31.664 427.152 31.609 426.883 31.609 426.582 cv
31.609 426.348 31.648 426.129 31.727 425.926 cv
31.805 425.727 31.914 425.543 32.063 425.375 cv
32.207 425.211 32.391 425.055 32.605 424.906 cv
32.816 424.758 33.059 424.617 33.332 424.484 cv
33.098 424.367 32.891 424.242 32.711 424.102 cv
32.531 423.969 32.379 423.82 32.254 423.66 cv
32.129 423.504 32.031 423.336 31.969 423.152 cv
31.898 422.977 31.867 422.781 31.871 422.57 cv
31.867 422.309 31.914 422.059 32.016 421.824 cv
32.109 421.59 32.254 421.387 32.449 421.215 cv
32.637 421.043 32.883 420.91 33.188 420.809 cv
33.484 420.711 33.836 420.66 34.234 420.656 cv
34.617 420.66 34.945 420.707 35.227 420.797 cv
35.5 420.891 35.73 421.016 35.918 421.172 cv
36.098 421.332 36.234 421.516 36.32 421.73 cv
36.406 421.949 36.449 422.18 36.449 422.422 cv
36.449 422.621 36.414 422.812 36.352 422.996 cv
36.281 423.184 36.188 423.359 36.066 423.52 cv
35.938 423.687 35.785 423.84 35.605 423.98 cv
35.426 424.121 35.219 424.254 34.984 424.379 cv
35.262 424.52 35.508 424.66 35.727 424.801 cv
35.941 424.945 36.121 425.102 36.27 425.266 cv
36.41 425.434 36.523 425.609 36.602 425.793 cv
36.68 425.98 36.719 426.184 36.719 426.406 cv
cp
35.453 422.516 mo
35.453 422.352 35.422 422.203 35.367 422.07 cv
35.309 421.937 35.227 421.824 35.121 421.73 cv
35.008 421.637 34.871 421.566 34.711 421.52 cv
34.547 421.473 34.363 421.449 34.16 421.445 cv
33.734 421.449 33.414 421.543 33.199 421.73 cv
32.98 421.922 32.875 422.184 32.875 422.516 cv
32.875 422.668 32.898 422.812 32.953 422.941 cv
33.004 423.074 33.086 423.195 33.199 423.312 cv
33.309 423.43 33.449 423.547 33.621 423.656 cv
33.789 423.77 33.992 423.883 34.23 424.004 cv
34.621 423.801 34.926 423.578 35.137 423.332 cv
35.348 423.086 35.453 422.812 35.453 422.516 cv
cp
35.699 426.512 mo
35.699 426.332 35.664 426.172 35.598 426.023 cv
35.531 425.883 35.43 425.746 35.297 425.613 cv
35.16 425.488 34.992 425.363 34.793 425.242 cv
34.59 425.125 34.359 425 34.094 424.871 cv
33.844 424.996 33.625 425.117 33.445 425.234 cv
33.258 425.355 33.105 425.48 32.988 425.609 cv
32.863 425.742 32.773 425.879 32.719 426.02 cv
32.656 426.16 32.629 426.316 32.629 426.488 cv
32.629 426.867 32.758 427.16 33.02 427.367 cv
33.277 427.578 33.664 427.684 34.184 427.68 cv
34.68 427.684 35.059 427.578 35.316 427.367 cv
35.57 427.156 35.699 426.871 35.699 426.512 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
25.031 376.969 mo
37.191 376.969 li
37.191 391.621 li
25.031 391.621 li
cp
0 0 0 0 cmyk
ef
30.461 388.043 mo
30.457 388.117 30.453 388.18 30.445 388.23 cv
30.434 388.285 30.418 388.328 30.398 388.355 cv
30.375 388.391 30.352 388.414 30.328 388.422 cv
30.305 388.437 30.277 388.441 30.25 388.441 cv
26.289 388.441 li
26.262 388.441 26.238 388.437 26.215 388.422 cv
26.191 388.414 26.168 388.391 26.148 388.355 cv
26.125 388.328 26.109 388.285 26.098 388.23 cv
26.082 388.18 26.074 388.117 26.078 388.043 cv
26.074 387.973 26.082 387.914 26.098 387.863 cv
26.109 387.812 26.121 387.77 26.141 387.734 cv
26.156 387.703 26.18 387.68 26.203 387.66 cv
26.227 387.645 26.254 387.633 26.289 387.633 cv
27.875 387.633 li
27.875 381.867 li
26.406 382.738 li
26.332 382.785 26.273 382.809 26.23 382.812 cv
26.184 382.824 26.148 382.816 26.121 382.785 cv
26.09 382.762 26.07 382.719 26.063 382.66 cv
26.055 382.602 26.051 382.527 26.051 382.434 cv
26.051 382.371 26.051 382.312 26.059 382.266 cv
26.063 382.219 26.074 382.18 26.086 382.148 cv
26.094 382.117 26.109 382.09 26.133 382.066 cv
26.156 382.043 26.184 382.02 26.219 381.996 cv
27.969 380.879 li
27.98 380.867 28 380.855 28.027 380.848 cv
28.047 380.84 28.078 380.832 28.113 380.824 cv
28.145 380.816 28.184 380.812 28.234 380.812 cv
28.277 380.812 28.336 380.812 28.414 380.809 cv
28.504 380.812 28.582 380.816 28.648 380.82 cv
28.707 380.832 28.758 380.844 28.793 380.852 cv
28.824 380.867 28.848 380.883 28.863 380.902 cv
28.875 380.926 28.879 380.949 28.883 380.973 cv
28.883 387.633 li
30.25 387.633 li
30.277 387.633 30.309 387.645 30.34 387.66 cv
30.367 387.68 30.387 387.703 30.406 387.734 cv
30.422 387.77 30.438 387.812 30.445 387.863 cv
30.453 387.914 30.457 387.973 30.461 388.043 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.563 388.008 mo
36.563 388.078 36.555 388.141 36.547 388.195 cv
36.531 388.25 36.52 388.297 36.504 388.332 cv
36.488 388.371 36.465 388.398 36.434 388.414 cv
36.402 388.434 36.371 388.441 36.34 388.441 cv
32.148 388.441 li
32.094 388.441 32.047 388.437 32.008 388.422 cv
31.965 388.414 31.93 388.391 31.902 388.355 cv
31.871 388.328 31.848 388.281 31.836 388.219 cv
31.82 388.16 31.816 388.09 31.816 388.004 cv
31.816 387.93 31.816 387.859 31.824 387.797 cv
31.828 387.738 31.844 387.687 31.863 387.641 cv
31.883 387.598 31.906 387.555 31.938 387.508 cv
31.965 387.469 32.004 387.418 32.059 387.363 cv
33.574 385.805 li
33.922 385.445 34.199 385.125 34.414 384.84 cv
34.625 384.555 34.789 384.293 34.906 384.059 cv
35.016 383.824 35.094 383.613 35.133 383.422 cv
35.168 383.23 35.184 383.051 35.188 382.879 cv
35.184 382.715 35.156 382.555 35.102 382.402 cv
35.043 382.254 34.961 382.121 34.855 382.008 cv
34.746 381.898 34.613 381.809 34.453 381.738 cv
34.289 381.672 34.102 381.641 33.898 381.637 cv
33.648 381.641 33.43 381.672 33.234 381.738 cv
33.039 381.809 32.867 381.883 32.719 381.957 cv
32.57 382.039 32.445 382.109 32.352 382.172 cv
32.25 382.238 32.18 382.273 32.133 382.27 cv
32.102 382.273 32.074 382.266 32.055 382.246 cv
32.031 382.234 32.012 382.207 32 382.172 cv
31.984 382.141 31.977 382.094 31.969 382.031 cv
31.961 381.973 31.957 381.902 31.957 381.82 cv
31.957 381.762 31.957 381.711 31.961 381.668 cv
31.965 381.629 31.973 381.594 31.984 381.559 cv
31.992 381.531 32.004 381.5 32.023 381.469 cv
32.035 381.441 32.066 381.41 32.117 381.367 cv
32.16 381.328 32.242 381.27 32.359 381.199 cv
32.473 381.129 32.617 381.062 32.793 380.992 cv
32.965 380.926 33.156 380.867 33.367 380.816 cv
33.574 380.773 33.793 380.75 34.023 380.746 cv
34.391 380.75 34.711 380.801 34.988 380.902 cv
35.262 381.008 35.492 381.148 35.672 381.328 cv
35.852 381.508 35.988 381.719 36.082 381.957 cv
36.172 382.195 36.215 382.449 36.219 382.715 cv
36.215 382.965 36.195 383.207 36.152 383.441 cv
36.105 383.684 36.012 383.941 35.879 384.219 cv
35.738 384.5 35.539 384.812 35.277 385.152 cv
35.016 385.496 34.668 385.887 34.234 386.332 cv
33.035 387.586 li
36.336 387.586 li
36.363 387.586 36.395 387.598 36.426 387.613 cv
36.453 387.633 36.477 387.656 36.5 387.691 cv
36.516 387.73 36.531 387.777 36.547 387.824 cv
36.555 387.879 36.563 387.937 36.563 388.008 cv
cp
f
25.031 337.07 mo
37.191 337.07 li
37.191 351.718 li
25.031 351.718 li
cp
0 0 0 0 cmyk
ef
30.461 348.133 mo
30.457 348.207 30.453 348.27 30.445 348.32 cv
30.434 348.375 30.418 348.418 30.398 348.445 cv
30.375 348.48 30.352 348.504 30.328 348.512 cv
30.305 348.527 30.277 348.531 30.25 348.531 cv
26.289 348.531 li
26.262 348.531 26.238 348.527 26.215 348.512 cv
26.191 348.504 26.168 348.48 26.148 348.445 cv
26.125 348.418 26.109 348.375 26.098 348.32 cv
26.082 348.27 26.074 348.207 26.078 348.133 cv
26.074 348.062 26.082 348.004 26.098 347.953 cv
26.109 347.902 26.121 347.859 26.141 347.824 cv
26.156 347.793 26.18 347.77 26.203 347.75 cv
26.227 347.734 26.254 347.723 26.289 347.723 cv
27.875 347.723 li
27.875 341.957 li
26.406 342.828 li
26.332 342.875 26.273 342.898 26.23 342.902 cv
26.184 342.914 26.148 342.906 26.121 342.875 cv
26.09 342.852 26.07 342.809 26.063 342.75 cv
26.055 342.691 26.051 342.617 26.051 342.523 cv
26.051 342.461 26.051 342.402 26.059 342.355 cv
26.063 342.309 26.074 342.27 26.086 342.238 cv
26.094 342.207 26.109 342.18 26.133 342.156 cv
26.156 342.133 26.184 342.109 26.219 342.086 cv
27.969 340.969 li
27.98 340.957 28 340.945 28.027 340.937 cv
28.047 340.93 28.078 340.922 28.113 340.914 cv
28.145 340.906 28.184 340.902 28.234 340.902 cv
28.277 340.902 28.336 340.902 28.414 340.898 cv
28.504 340.902 28.582 340.906 28.648 340.91 cv
28.707 340.922 28.758 340.934 28.793 340.941 cv
28.824 340.957 28.848 340.973 28.863 340.992 cv
28.875 341.016 28.879 341.039 28.883 341.062 cv
28.883 347.723 li
30.25 347.723 li
30.277 347.723 30.309 347.734 30.34 347.75 cv
30.367 347.77 30.387 347.793 30.406 347.824 cv
30.422 347.859 30.438 347.902 30.445 347.953 cv
30.453 348.004 30.457 348.062 30.461 348.133 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.758 346.078 mo
36.754 346.41 36.703 346.73 36.605 347.043 cv
36.5 347.355 36.344 347.629 36.137 347.863 cv
35.922 348.098 35.656 348.289 35.332 348.43 cv
35.004 348.57 34.621 348.637 34.184 348.641 cv
33.867 348.637 33.586 348.602 33.348 348.523 cv
33.102 348.449 32.891 348.336 32.715 348.191 cv
32.531 348.051 32.383 347.875 32.266 347.66 cv
32.145 347.453 32.047 347.211 31.977 346.937 cv
31.898 346.668 31.848 346.375 31.82 346.051 cv
31.785 345.734 31.77 345.391 31.773 345.023 cv
31.77 344.699 31.789 344.371 31.828 344.039 cv
31.863 343.707 31.926 343.387 32.016 343.078 cv
32.102 342.77 32.223 342.48 32.379 342.207 cv
32.535 341.937 32.727 341.699 32.961 341.496 cv
33.191 341.297 33.473 341.137 33.797 341.02 cv
34.117 340.902 34.492 340.844 34.93 340.844 cv
35.07 340.844 35.219 340.855 35.367 340.871 cv
35.516 340.895 35.652 340.918 35.777 340.941 cv
35.902 340.973 36.008 341.004 36.094 341.039 cv
36.18 341.074 36.234 341.102 36.262 341.125 cv
36.289 341.148 36.309 341.172 36.324 341.195 cv
36.332 341.219 36.344 341.246 36.355 341.277 cv
36.359 341.309 36.367 341.344 36.375 341.375 cv
36.379 341.414 36.379 341.457 36.383 341.512 cv
36.379 341.582 36.379 341.645 36.379 341.695 cv
36.375 341.746 36.367 341.785 36.355 341.816 cv
36.34 341.848 36.32 341.871 36.301 341.887 cv
36.277 341.902 36.25 341.91 36.219 341.91 cv
36.172 341.91 36.113 341.898 36.039 341.871 cv
35.965 341.844 35.875 341.812 35.77 341.777 cv
35.664 341.746 35.535 341.715 35.387 341.687 cv
35.234 341.664 35.063 341.652 34.863 341.648 cv
34.5 341.652 34.188 341.727 33.926 341.871 cv
33.66 342.023 33.445 342.223 33.281 342.469 cv
33.117 342.723 32.992 343.012 32.914 343.34 cv
32.832 343.668 32.789 344.012 32.777 344.371 cv
32.879 344.312 32.992 344.254 33.121 344.195 cv
33.246 344.141 33.383 344.09 33.535 344.039 cv
33.684 343.996 33.844 343.957 34.012 343.926 cv
34.18 343.895 34.359 343.879 34.555 343.879 cv
34.961 343.879 35.309 343.937 35.59 344.047 cv
35.871 344.16 36.098 344.312 36.27 344.508 cv
36.441 344.707 36.566 344.941 36.645 345.207 cv
36.719 345.48 36.754 345.77 36.758 346.078 cv
cp
35.734 346.172 mo
35.73 345.945 35.707 345.738 35.668 345.551 cv
35.621 345.367 35.547 345.211 35.441 345.082 cv
35.336 344.953 35.195 344.852 35.02 344.781 cv
34.844 344.711 34.629 344.676 34.371 344.676 cv
34.227 344.676 34.082 344.691 33.938 344.715 cv
33.789 344.742 33.648 344.777 33.516 344.82 cv
33.383 344.867 33.254 344.918 33.129 344.98 cv
33.004 345.043 32.891 345.109 32.797 345.172 cv
32.793 345.68 32.824 346.102 32.891 346.441 cv
32.953 346.781 33.047 347.055 33.172 347.258 cv
33.293 347.465 33.449 347.609 33.633 347.695 cv
33.813 347.785 34.027 347.828 34.277 347.828 cv
34.527 347.828 34.742 347.781 34.926 347.687 cv
35.109 347.594 35.262 347.469 35.383 347.309 cv
35.504 347.152 35.594 346.977 35.648 346.777 cv
35.703 346.582 35.73 346.379 35.734 346.172 cv
cp
f
25.031 297.172 mo
37.191 297.172 li
37.191 311.82 li
25.031 311.82 li
cp
0 0 0 0 cmyk
ef
30.445 308.207 mo
30.445 308.277 30.438 308.34 30.43 308.395 cv
30.414 308.449 30.402 308.496 30.387 308.531 cv
30.371 308.57 30.348 308.598 30.316 308.613 cv
30.285 308.633 30.254 308.641 30.223 308.641 cv
26.031 308.641 li
25.977 308.641 25.93 308.637 25.891 308.621 cv
25.848 308.613 25.813 308.59 25.785 308.555 cv
25.754 308.527 25.73 308.48 25.719 308.418 cv
25.703 308.359 25.699 308.289 25.699 308.203 cv
25.699 308.129 25.699 308.059 25.707 307.996 cv
25.711 307.937 25.727 307.887 25.746 307.84 cv
25.766 307.797 25.789 307.754 25.82 307.707 cv
25.848 307.668 25.887 307.617 25.941 307.562 cv
27.457 306.004 li
27.805 305.645 28.082 305.324 28.297 305.039 cv
28.508 304.754 28.672 304.492 28.789 304.258 cv
28.898 304.023 28.977 303.812 29.016 303.621 cv
29.051 303.43 29.066 303.25 29.07 303.078 cv
29.066 302.914 29.039 302.754 28.984 302.602 cv
28.926 302.453 28.844 302.32 28.738 302.207 cv
28.629 302.098 28.496 302.008 28.336 301.937 cv
28.172 301.871 27.984 301.84 27.781 301.836 cv
27.531 301.84 27.313 301.871 27.117 301.937 cv
26.922 302.008 26.75 302.082 26.602 302.156 cv
26.453 302.238 26.328 302.309 26.234 302.371 cv
26.133 302.437 26.063 302.473 26.016 302.469 cv
25.984 302.473 25.957 302.465 25.938 302.445 cv
25.914 302.434 25.895 302.406 25.883 302.371 cv
25.867 302.34 25.859 302.293 25.852 302.23 cv
25.844 302.172 25.84 302.102 25.84 302.02 cv
25.84 301.961 25.84 301.91 25.844 301.867 cv
25.848 301.828 25.855 301.793 25.867 301.758 cv
25.875 301.73 25.887 301.699 25.906 301.668 cv
25.918 301.641 25.949 301.609 26 301.566 cv
26.043 301.527 26.125 301.469 26.242 301.398 cv
26.355 301.328 26.5 301.262 26.676 301.191 cv
26.848 301.125 27.039 301.066 27.25 301.016 cv
27.457 300.973 27.676 300.949 27.906 300.945 cv
28.273 300.949 28.594 301 28.871 301.102 cv
29.145 301.207 29.375 301.348 29.555 301.527 cv
29.734 301.707 29.871 301.918 29.965 302.156 cv
30.055 302.395 30.098 302.648 30.102 302.914 cv
30.098 303.164 30.078 303.406 30.035 303.641 cv
29.988 303.883 29.895 304.141 29.762 304.418 cv
29.621 304.699 29.422 305.012 29.16 305.352 cv
28.898 305.695 28.551 306.086 28.117 306.531 cv
26.918 307.785 li
30.219 307.785 li
30.246 307.785 30.277 307.797 30.309 307.812 cv
30.336 307.832 30.359 307.855 30.383 307.891 cv
30.398 307.93 30.414 307.977 30.43 308.023 cv
30.438 308.078 30.445 308.137 30.445 308.207 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.813 304.832 mo
36.809 305.414 36.762 305.945 36.676 306.426 cv
36.582 306.91 36.43 307.324 36.219 307.668 cv
36 308.012 35.723 308.281 35.383 308.469 cv
35.035 308.656 34.613 308.746 34.113 308.75 cv
33.637 308.746 33.234 308.664 32.91 308.496 cv
32.582 308.328 32.32 308.078 32.121 307.746 cv
31.918 307.418 31.773 307.012 31.695 306.527 cv
31.609 306.047 31.57 305.492 31.57 304.867 cv
31.57 304.289 31.617 303.762 31.711 303.277 cv
31.805 302.801 31.957 302.387 32.168 302.035 cv
32.379 301.691 32.656 301.422 33 301.23 cv
33.344 301.043 33.766 300.949 34.266 300.945 cv
34.742 300.949 35.145 301.035 35.473 301.203 cv
35.801 301.375 36.063 301.625 36.262 301.953 cv
36.461 302.285 36.602 302.691 36.688 303.172 cv
36.766 303.656 36.809 304.207 36.813 304.832 cv
cp
35.781 304.902 mo
35.777 304.527 35.766 304.187 35.742 303.883 cv
35.715 303.582 35.672 303.316 35.621 303.086 cv
35.566 302.859 35.5 302.664 35.414 302.492 cv
35.328 302.328 35.227 302.191 35.113 302.082 cv
34.992 301.98 34.859 301.902 34.711 301.848 cv
34.563 301.801 34.395 301.773 34.207 301.773 cv
33.875 301.773 33.605 301.852 33.398 302.008 cv
33.188 302.164 33.023 302.379 32.906 302.652 cv
32.789 302.926 32.707 303.246 32.664 303.613 cv
32.621 303.98 32.602 304.375 32.602 304.797 cv
32.602 305.367 32.629 305.852 32.688 306.242 cv
32.746 306.641 32.84 306.961 32.965 307.211 cv
33.09 307.461 33.25 307.645 33.453 307.758 cv
33.648 307.871 33.891 307.926 34.172 307.926 cv
34.391 307.926 34.582 307.891 34.75 307.82 cv
34.914 307.75 35.055 307.652 35.176 307.52 cv
35.293 307.391 35.395 307.23 35.473 307.047 cv
35.551 306.867 35.613 306.664 35.66 306.437 cv
35.707 306.215 35.738 305.977 35.754 305.715 cv
35.77 305.457 35.777 305.184 35.781 304.902 cv
cp
f
25.031 257.281 mo
37.191 257.281 li
37.191 271.929 li
25.031 271.929 li
cp
0 0 0 0 cmyk
ef
30.445 268.297 mo
30.445 268.367 30.438 268.43 30.43 268.484 cv
30.414 268.539 30.402 268.586 30.387 268.621 cv
30.371 268.66 30.348 268.687 30.316 268.703 cv
30.285 268.723 30.254 268.73 30.223 268.73 cv
26.031 268.73 li
25.977 268.73 25.93 268.727 25.891 268.711 cv
25.848 268.703 25.813 268.68 25.785 268.645 cv
25.754 268.617 25.73 268.57 25.719 268.508 cv
25.703 268.449 25.699 268.379 25.699 268.293 cv
25.699 268.219 25.699 268.148 25.707 268.086 cv
25.711 268.027 25.727 267.977 25.746 267.93 cv
25.766 267.887 25.789 267.844 25.82 267.797 cv
25.848 267.758 25.887 267.707 25.941 267.652 cv
27.457 266.094 li
27.805 265.734 28.082 265.414 28.297 265.129 cv
28.508 264.844 28.672 264.582 28.789 264.348 cv
28.898 264.113 28.977 263.902 29.016 263.711 cv
29.051 263.52 29.066 263.34 29.07 263.168 cv
29.066 263.004 29.039 262.844 28.984 262.691 cv
28.926 262.543 28.844 262.41 28.738 262.297 cv
28.629 262.187 28.496 262.098 28.336 262.027 cv
28.172 261.961 27.984 261.93 27.781 261.926 cv
27.531 261.93 27.313 261.961 27.117 262.027 cv
26.922 262.098 26.75 262.172 26.602 262.246 cv
26.453 262.328 26.328 262.398 26.234 262.461 cv
26.133 262.527 26.063 262.562 26.016 262.559 cv
25.984 262.562 25.957 262.555 25.938 262.535 cv
25.914 262.523 25.895 262.496 25.883 262.461 cv
25.867 262.43 25.859 262.383 25.852 262.32 cv
25.844 262.262 25.84 262.191 25.84 262.109 cv
25.84 262.051 25.84 262 25.844 261.957 cv
25.848 261.918 25.855 261.883 25.867 261.848 cv
25.875 261.82 25.887 261.789 25.906 261.758 cv
25.918 261.73 25.949 261.699 26 261.656 cv
26.043 261.617 26.125 261.559 26.242 261.488 cv
26.355 261.418 26.5 261.352 26.676 261.281 cv
26.848 261.215 27.039 261.156 27.25 261.105 cv
27.457 261.062 27.676 261.039 27.906 261.035 cv
28.273 261.039 28.594 261.09 28.871 261.191 cv
29.145 261.297 29.375 261.437 29.555 261.617 cv
29.734 261.797 29.871 262.008 29.965 262.246 cv
30.055 262.484 30.098 262.738 30.102 263.004 cv
30.098 263.254 30.078 263.496 30.035 263.73 cv
29.988 263.973 29.895 264.23 29.762 264.508 cv
29.621 264.789 29.422 265.102 29.16 265.441 cv
28.898 265.785 28.551 266.176 28.117 266.621 cv
26.918 267.875 li
30.219 267.875 li
30.246 267.875 30.277 267.887 30.309 267.902 cv
30.336 267.922 30.359 267.945 30.383 267.98 cv
30.398 268.02 30.414 268.066 30.43 268.113 cv
30.438 268.168 30.445 268.227 30.445 268.297 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.883 266.574 mo
36.879 266.707 36.859 266.809 36.824 266.879 cv
36.781 266.953 36.727 266.992 36.664 266.988 cv
35.805 266.988 li
35.805 268.582 li
35.801 268.617 35.793 268.645 35.781 268.664 cv
35.762 268.687 35.734 268.703 35.695 268.719 cv
35.656 268.734 35.602 268.746 35.539 268.754 cv
35.473 268.762 35.391 268.766 35.293 268.766 cv
35.191 268.766 35.113 268.762 35.051 268.754 cv
34.988 268.746 34.938 268.734 34.898 268.719 cv
34.859 268.703 34.832 268.687 34.816 268.664 cv
34.801 268.645 34.793 268.617 34.797 268.582 cv
34.797 266.988 li
31.695 266.988 li
31.648 266.992 31.613 266.984 31.582 266.973 cv
31.551 266.965 31.52 266.945 31.496 266.91 cv
31.465 266.883 31.449 266.836 31.441 266.773 cv
31.434 266.715 31.43 266.641 31.43 266.543 cv
31.43 266.473 31.43 266.406 31.434 266.348 cv
31.438 266.289 31.445 266.234 31.457 266.187 cv
31.469 266.141 31.484 266.094 31.504 266.047 cv
31.523 266 31.547 265.953 31.574 265.902 cv
34.277 261.293 li
34.297 261.266 34.324 261.238 34.363 261.211 cv
34.398 261.191 34.449 261.172 34.512 261.152 cv
34.57 261.141 34.641 261.129 34.73 261.121 cv
34.816 261.117 34.922 261.113 35.043 261.113 cv
35.172 261.113 35.285 261.121 35.383 261.129 cv
35.48 261.145 35.559 261.156 35.621 261.168 cv
35.676 261.187 35.723 261.207 35.758 261.23 cv
35.785 261.254 35.801 261.285 35.805 261.316 cv
35.805 266.16 li
36.664 266.16 li
36.727 266.164 36.781 266.199 36.82 266.262 cv
36.859 266.332 36.879 266.434 36.883 266.574 cv
cp
34.797 261.996 mo
34.789 261.996 li
32.352 266.16 li
34.797 266.16 li
cp
f
25.031 217.379 mo
37.191 217.379 li
37.191 232.031 li
25.031 232.031 li
cp
0 0 0 0 cmyk
ef
30.445 228.387 mo
30.445 228.457 30.438 228.52 30.43 228.574 cv
30.414 228.629 30.402 228.676 30.387 228.711 cv
30.371 228.75 30.348 228.777 30.316 228.793 cv
30.285 228.812 30.254 228.82 30.223 228.82 cv
26.031 228.82 li
25.977 228.82 25.93 228.816 25.891 228.801 cv
25.848 228.793 25.813 228.77 25.785 228.734 cv
25.754 228.707 25.73 228.66 25.719 228.598 cv
25.703 228.539 25.699 228.469 25.699 228.383 cv
25.699 228.309 25.699 228.238 25.707 228.176 cv
25.711 228.117 25.727 228.066 25.746 228.02 cv
25.766 227.977 25.789 227.934 25.82 227.887 cv
25.848 227.848 25.887 227.797 25.941 227.742 cv
27.457 226.184 li
27.805 225.824 28.082 225.504 28.297 225.219 cv
28.508 224.934 28.672 224.672 28.789 224.437 cv
28.898 224.203 28.977 223.992 29.016 223.801 cv
29.051 223.609 29.066 223.43 29.07 223.258 cv
29.066 223.094 29.039 222.934 28.984 222.781 cv
28.926 222.633 28.844 222.5 28.738 222.387 cv
28.629 222.277 28.496 222.187 28.336 222.117 cv
28.172 222.051 27.984 222.02 27.781 222.016 cv
27.531 222.02 27.313 222.051 27.117 222.117 cv
26.922 222.187 26.75 222.262 26.602 222.336 cv
26.453 222.418 26.328 222.488 26.234 222.551 cv
26.133 222.617 26.063 222.652 26.016 222.648 cv
25.984 222.652 25.957 222.645 25.938 222.625 cv
25.914 222.613 25.895 222.586 25.883 222.551 cv
25.867 222.52 25.859 222.473 25.852 222.41 cv
25.844 222.352 25.84 222.281 25.84 222.199 cv
25.84 222.141 25.84 222.09 25.844 222.047 cv
25.848 222.008 25.855 221.973 25.867 221.937 cv
25.875 221.91 25.887 221.879 25.906 221.848 cv
25.918 221.82 25.949 221.789 26 221.746 cv
26.043 221.707 26.125 221.648 26.242 221.578 cv
26.355 221.508 26.5 221.441 26.676 221.371 cv
26.848 221.305 27.039 221.246 27.25 221.195 cv
27.457 221.152 27.676 221.129 27.906 221.125 cv
28.273 221.129 28.594 221.18 28.871 221.281 cv
29.145 221.387 29.375 221.527 29.555 221.707 cv
29.734 221.887 29.871 222.098 29.965 222.336 cv
30.055 222.574 30.098 222.828 30.102 223.094 cv
30.098 223.344 30.078 223.586 30.035 223.82 cv
29.988 224.062 29.895 224.32 29.762 224.598 cv
29.621 224.879 29.422 225.191 29.16 225.531 cv
28.898 225.875 28.551 226.266 28.117 226.711 cv
26.918 227.965 li
30.219 227.965 li
30.246 227.965 30.277 227.977 30.309 227.992 cv
30.336 228.012 30.359 228.035 30.383 228.07 cv
30.398 228.109 30.414 228.156 30.43 228.203 cv
30.438 228.258 30.445 228.316 30.445 228.387 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.738 226.875 mo
36.738 227.203 36.68 227.496 36.563 227.75 cv
36.445 228.008 36.273 228.223 36.055 228.398 cv
35.832 228.578 35.563 228.711 35.238 228.797 cv
34.91 228.883 34.539 228.926 34.125 228.93 cv
33.734 228.926 33.383 228.887 33.074 228.809 cv
32.766 228.73 32.504 228.609 32.289 228.445 cv
32.074 228.285 31.91 228.09 31.797 227.852 cv
31.684 227.621 31.629 227.352 31.629 227.051 cv
31.629 226.816 31.668 226.598 31.746 226.395 cv
31.824 226.195 31.934 226.012 32.082 225.844 cv
32.227 225.68 32.41 225.523 32.625 225.375 cv
32.836 225.227 33.078 225.086 33.352 224.953 cv
33.117 224.836 32.91 224.711 32.73 224.57 cv
32.551 224.437 32.398 224.289 32.273 224.129 cv
32.148 223.973 32.051 223.805 31.988 223.621 cv
31.918 223.445 31.887 223.25 31.891 223.039 cv
31.887 222.777 31.934 222.527 32.035 222.293 cv
32.129 222.059 32.273 221.855 32.469 221.684 cv
32.656 221.512 32.902 221.379 33.207 221.277 cv
33.504 221.18 33.855 221.129 34.254 221.125 cv
34.637 221.129 34.965 221.176 35.246 221.266 cv
35.52 221.359 35.75 221.484 35.938 221.641 cv
36.117 221.801 36.254 221.984 36.34 222.199 cv
36.426 222.418 36.469 222.648 36.469 222.891 cv
36.469 223.09 36.434 223.281 36.371 223.465 cv
36.301 223.652 36.207 223.828 36.086 223.988 cv
35.957 224.156 35.805 224.309 35.625 224.449 cv
35.445 224.59 35.238 224.723 35.004 224.848 cv
35.281 224.988 35.527 225.129 35.746 225.27 cv
35.961 225.414 36.141 225.57 36.289 225.734 cv
36.43 225.902 36.543 226.078 36.621 226.262 cv
36.699 226.449 36.738 226.652 36.738 226.875 cv
cp
35.473 222.984 mo
35.473 222.82 35.441 222.672 35.387 222.539 cv
35.328 222.406 35.246 222.293 35.141 222.199 cv
35.027 222.105 34.891 222.035 34.73 221.988 cv
34.566 221.941 34.383 221.918 34.18 221.914 cv
33.754 221.918 33.434 222.012 33.219 222.199 cv
33 222.391 32.895 222.652 32.895 222.984 cv
32.895 223.137 32.918 223.281 32.973 223.41 cv
33.023 223.543 33.105 223.664 33.219 223.781 cv
33.328 223.898 33.469 224.016 33.641 224.125 cv
33.809 224.238 34.012 224.352 34.25 224.473 cv
34.641 224.27 34.945 224.047 35.156 223.801 cv
35.367 223.555 35.473 223.281 35.473 222.984 cv
cp
35.719 226.98 mo
35.719 226.801 35.684 226.641 35.617 226.492 cv
35.551 226.352 35.449 226.215 35.316 226.082 cv
35.18 225.957 35.012 225.832 34.813 225.711 cv
34.609 225.594 34.379 225.469 34.113 225.34 cv
33.863 225.465 33.645 225.586 33.465 225.703 cv
33.277 225.824 33.125 225.949 33.008 226.078 cv
32.883 226.211 32.793 226.348 32.738 226.488 cv
32.676 226.629 32.648 226.785 32.648 226.957 cv
32.648 227.336 32.777 227.629 33.039 227.836 cv
33.297 228.047 33.684 228.152 34.203 228.148 cv
34.699 228.152 35.078 228.047 35.336 227.836 cv
35.59 227.625 35.719 227.34 35.719 226.98 cv
cp
f
25.031 177.488 mo
37.191 177.488 li
37.191 192.14 li
25.031 192.14 li
cp
0 0 0 0 cmyk
ef
30.387 186.762 mo
30.387 187.109 30.324 187.426 30.203 187.703 cv
30.082 187.984 29.91 188.223 29.684 188.422 cv
29.457 188.621 29.176 188.773 28.844 188.879 cv
28.512 188.984 28.137 189.035 27.719 189.039 cv
27.465 189.035 27.227 189.016 27.008 188.977 cv
26.785 188.937 26.59 188.891 26.422 188.836 cv
26.246 188.781 26.105 188.723 25.992 188.66 cv
25.875 188.598 25.801 188.555 25.777 188.527 cv
25.746 188.5 25.727 188.473 25.711 188.445 cv
25.695 188.418 25.68 188.383 25.668 188.344 cv
25.656 188.305 25.648 188.258 25.641 188.203 cv
25.633 188.148 25.629 188.078 25.633 187.992 cv
25.629 187.852 25.645 187.754 25.676 187.699 cv
25.703 187.645 25.742 187.617 25.797 187.617 cv
25.832 187.617 25.902 187.648 26.008 187.711 cv
26.113 187.773 26.25 187.844 26.418 187.914 cv
26.582 187.992 26.777 188.059 27 188.117 cv
27.223 188.184 27.469 188.215 27.746 188.211 cv
28.004 188.215 28.238 188.18 28.441 188.109 cv
28.641 188.043 28.809 187.949 28.945 187.828 cv
29.082 187.711 29.184 187.57 29.254 187.398 cv
29.32 187.234 29.355 187.051 29.355 186.855 cv
29.355 186.641 29.309 186.449 29.223 186.273 cv
29.133 186.105 29.008 185.957 28.844 185.828 cv
28.676 185.707 28.469 185.609 28.227 185.543 cv
27.977 185.48 27.699 185.449 27.395 185.445 cv
26.652 185.445 li
26.617 185.449 26.586 185.441 26.555 185.426 cv
26.523 185.41 26.496 185.387 26.477 185.355 cv
26.453 185.324 26.434 185.285 26.422 185.234 cv
26.406 185.184 26.402 185.117 26.402 185.031 cv
26.402 184.961 26.406 184.898 26.418 184.848 cv
26.43 184.801 26.445 184.762 26.469 184.73 cv
26.484 184.703 26.512 184.684 26.543 184.668 cv
26.57 184.66 26.602 184.652 26.637 184.648 cv
27.297 184.648 li
27.555 184.652 27.785 184.617 27.992 184.547 cv
28.195 184.48 28.371 184.387 28.512 184.258 cv
28.652 184.137 28.762 183.988 28.84 183.812 cv
28.918 183.641 28.957 183.445 28.957 183.227 cv
28.957 183.074 28.93 182.926 28.879 182.781 cv
28.828 182.641 28.754 182.516 28.652 182.41 cv
28.551 182.305 28.418 182.223 28.262 182.16 cv
28.098 182.105 27.918 182.074 27.715 182.07 cv
27.488 182.074 27.277 182.109 27.09 182.172 cv
26.895 182.242 26.727 182.312 26.582 182.391 cv
26.43 182.469 26.309 182.543 26.215 182.609 cv
26.117 182.68 26.047 182.715 26.008 182.711 cv
25.98 182.715 25.957 182.711 25.938 182.699 cv
25.914 182.691 25.895 182.672 25.883 182.641 cv
25.867 182.613 25.859 182.57 25.852 182.516 cv
25.844 182.465 25.84 182.395 25.844 182.309 cv
25.84 182.25 25.844 182.199 25.852 182.152 cv
25.855 182.109 25.863 182.07 25.875 182.035 cv
25.883 182.004 25.895 181.973 25.914 181.945 cv
25.926 181.922 25.953 181.891 25.992 181.852 cv
26.031 181.812 26.105 181.758 26.219 181.687 cv
26.332 181.617 26.473 181.551 26.641 181.48 cv
26.805 181.414 26.996 181.355 27.215 181.305 cv
27.43 181.262 27.664 181.238 27.914 181.234 cv
28.266 181.238 28.574 181.281 28.84 181.371 cv
29.105 181.465 29.324 181.594 29.504 181.754 cv
29.68 181.922 29.813 182.117 29.902 182.344 cv
29.988 182.57 30.035 182.824 30.035 183.102 cv
30.035 183.34 30.004 183.562 29.941 183.766 cv
29.879 183.973 29.785 184.152 29.664 184.309 cv
29.543 184.469 29.395 184.605 29.219 184.715 cv
29.043 184.832 28.84 184.906 28.609 184.945 cv
28.609 184.957 li
28.871 184.988 29.109 185.055 29.328 185.156 cv
29.543 185.258 29.73 185.387 29.891 185.543 cv
30.043 185.699 30.164 185.883 30.254 186.094 cv
30.34 186.305 30.387 186.527 30.387 186.762 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.563 188.496 mo
36.563 188.566 36.555 188.629 36.547 188.684 cv
36.531 188.738 36.52 188.785 36.504 188.82 cv
36.488 188.859 36.465 188.887 36.434 188.902 cv
36.402 188.922 36.371 188.93 36.34 188.93 cv
32.148 188.93 li
32.094 188.93 32.047 188.926 32.008 188.91 cv
31.965 188.902 31.93 188.879 31.902 188.844 cv
31.871 188.816 31.848 188.77 31.836 188.707 cv
31.82 188.648 31.816 188.578 31.816 188.492 cv
31.816 188.418 31.816 188.348 31.824 188.285 cv
31.828 188.227 31.844 188.176 31.863 188.129 cv
31.883 188.086 31.906 188.043 31.938 187.996 cv
31.965 187.957 32.004 187.906 32.059 187.852 cv
33.574 186.293 li
33.922 185.934 34.199 185.613 34.414 185.328 cv
34.625 185.043 34.789 184.781 34.906 184.547 cv
35.016 184.312 35.094 184.102 35.133 183.91 cv
35.168 183.719 35.184 183.539 35.188 183.367 cv
35.184 183.203 35.156 183.043 35.102 182.891 cv
35.043 182.742 34.961 182.609 34.855 182.496 cv
34.746 182.387 34.613 182.297 34.453 182.227 cv
34.289 182.16 34.102 182.129 33.898 182.125 cv
33.648 182.129 33.43 182.16 33.234 182.227 cv
33.039 182.297 32.867 182.371 32.719 182.445 cv
32.57 182.527 32.445 182.598 32.352 182.66 cv
32.25 182.727 32.18 182.762 32.133 182.758 cv
32.102 182.762 32.074 182.754 32.055 182.734 cv
32.031 182.723 32.012 182.695 32 182.66 cv
31.984 182.629 31.977 182.582 31.969 182.52 cv
31.961 182.461 31.957 182.391 31.957 182.309 cv
31.957 182.25 31.957 182.199 31.961 182.156 cv
31.965 182.117 31.973 182.082 31.984 182.047 cv
31.992 182.02 32.004 181.988 32.023 181.957 cv
32.035 181.93 32.066 181.898 32.117 181.855 cv
32.16 181.816 32.242 181.758 32.359 181.687 cv
32.473 181.617 32.617 181.551 32.793 181.48 cv
32.965 181.414 33.156 181.355 33.367 181.305 cv
33.574 181.262 33.793 181.238 34.023 181.234 cv
34.391 181.238 34.711 181.289 34.988 181.391 cv
35.262 181.496 35.492 181.637 35.672 181.816 cv
35.852 181.996 35.988 182.207 36.082 182.445 cv
36.172 182.684 36.215 182.937 36.219 183.203 cv
36.215 183.453 36.195 183.695 36.152 183.93 cv
36.105 184.172 36.012 184.43 35.879 184.707 cv
35.738 184.988 35.539 185.301 35.277 185.641 cv
35.016 185.984 34.668 186.375 34.234 186.82 cv
33.035 188.074 li
36.336 188.074 li
36.363 188.074 36.395 188.086 36.426 188.102 cv
36.453 188.121 36.477 188.145 36.5 188.18 cv
36.516 188.219 36.531 188.266 36.547 188.312 cv
36.555 188.367 36.563 188.426 36.563 188.496 cv
cp
f
25.031 137.59 mo
37.191 137.59 li
37.191 152.238 li
25.031 152.238 li
cp
0 0 0 0 cmyk
ef
30.387 146.852 mo
30.387 147.199 30.324 147.516 30.203 147.793 cv
30.082 148.074 29.91 148.312 29.684 148.512 cv
29.457 148.711 29.176 148.863 28.844 148.969 cv
28.512 149.074 28.137 149.125 27.719 149.129 cv
27.465 149.125 27.227 149.105 27.008 149.066 cv
26.785 149.027 26.59 148.98 26.422 148.926 cv
26.246 148.871 26.105 148.812 25.992 148.75 cv
25.875 148.687 25.801 148.645 25.777 148.617 cv
25.746 148.59 25.727 148.562 25.711 148.535 cv
25.695 148.508 25.68 148.473 25.668 148.434 cv
25.656 148.395 25.648 148.348 25.641 148.293 cv
25.633 148.238 25.629 148.168 25.633 148.082 cv
25.629 147.941 25.645 147.844 25.676 147.789 cv
25.703 147.734 25.742 147.707 25.797 147.707 cv
25.832 147.707 25.902 147.738 26.008 147.801 cv
26.113 147.863 26.25 147.934 26.418 148.004 cv
26.582 148.082 26.777 148.148 27 148.207 cv
27.223 148.273 27.469 148.305 27.746 148.301 cv
28.004 148.305 28.238 148.27 28.441 148.199 cv
28.641 148.133 28.809 148.039 28.945 147.918 cv
29.082 147.801 29.184 147.66 29.254 147.488 cv
29.32 147.324 29.355 147.141 29.355 146.945 cv
29.355 146.73 29.309 146.539 29.223 146.363 cv
29.133 146.195 29.008 146.047 28.844 145.918 cv
28.676 145.797 28.469 145.699 28.227 145.633 cv
27.977 145.57 27.699 145.539 27.395 145.535 cv
26.652 145.535 li
26.617 145.539 26.586 145.531 26.555 145.516 cv
26.523 145.5 26.496 145.477 26.477 145.445 cv
26.453 145.414 26.434 145.375 26.422 145.324 cv
26.406 145.273 26.402 145.207 26.402 145.121 cv
26.402 145.051 26.406 144.988 26.418 144.937 cv
26.43 144.891 26.445 144.852 26.469 144.82 cv
26.484 144.793 26.512 144.773 26.543 144.758 cv
26.57 144.75 26.602 144.742 26.637 144.738 cv
27.297 144.738 li
27.555 144.742 27.785 144.707 27.992 144.637 cv
28.195 144.57 28.371 144.477 28.512 144.348 cv
28.652 144.227 28.762 144.078 28.84 143.902 cv
28.918 143.73 28.957 143.535 28.957 143.316 cv
28.957 143.164 28.93 143.016 28.879 142.871 cv
28.828 142.73 28.754 142.605 28.652 142.5 cv
28.551 142.395 28.418 142.312 28.262 142.25 cv
28.098 142.195 27.918 142.164 27.715 142.16 cv
27.488 142.164 27.277 142.199 27.09 142.262 cv
26.895 142.332 26.727 142.402 26.582 142.48 cv
26.43 142.559 26.309 142.633 26.215 142.699 cv
26.117 142.77 26.047 142.805 26.008 142.801 cv
25.98 142.805 25.957 142.801 25.938 142.789 cv
25.914 142.781 25.895 142.762 25.883 142.73 cv
25.867 142.703 25.859 142.66 25.852 142.605 cv
25.844 142.555 25.84 142.484 25.844 142.398 cv
25.84 142.34 25.844 142.289 25.852 142.242 cv
25.855 142.199 25.863 142.16 25.875 142.125 cv
25.883 142.094 25.895 142.062 25.914 142.035 cv
25.926 142.012 25.953 141.98 25.992 141.941 cv
26.031 141.902 26.105 141.848 26.219 141.777 cv
26.332 141.707 26.473 141.641 26.641 141.57 cv
26.805 141.504 26.996 141.445 27.215 141.395 cv
27.43 141.352 27.664 141.328 27.914 141.324 cv
28.266 141.328 28.574 141.371 28.84 141.461 cv
29.105 141.555 29.324 141.684 29.504 141.844 cv
29.68 142.012 29.813 142.207 29.902 142.434 cv
29.988 142.66 30.035 142.914 30.035 143.191 cv
30.035 143.43 30.004 143.652 29.941 143.855 cv
29.879 144.062 29.785 144.242 29.664 144.398 cv
29.543 144.559 29.395 144.695 29.219 144.805 cv
29.043 144.922 28.84 144.996 28.609 145.035 cv
28.609 145.047 li
28.871 145.078 29.109 145.145 29.328 145.246 cv
29.543 145.348 29.73 145.477 29.891 145.633 cv
30.043 145.789 30.164 145.973 30.254 146.184 cv
30.34 146.395 30.387 146.617 30.387 146.852 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
36.758 146.566 mo
36.754 146.898 36.703 147.219 36.605 147.531 cv
36.5 147.844 36.344 148.117 36.137 148.352 cv
35.922 148.586 35.656 148.777 35.332 148.918 cv
35.004 149.059 34.621 149.125 34.184 149.129 cv
33.867 149.125 33.586 149.09 33.348 149.012 cv
33.102 148.937 32.891 148.824 32.715 148.68 cv
32.531 148.539 32.383 148.363 32.266 148.148 cv
32.145 147.941 32.047 147.699 31.977 147.426 cv
31.898 147.156 31.848 146.863 31.82 146.539 cv
31.785 146.223 31.77 145.879 31.773 145.512 cv
31.77 145.187 31.789 144.859 31.828 144.527 cv
31.863 144.195 31.926 143.875 32.016 143.566 cv
32.102 143.258 32.223 142.969 32.379 142.695 cv
32.535 142.426 32.727 142.187 32.961 141.984 cv
33.191 141.785 33.473 141.625 33.797 141.508 cv
34.117 141.391 34.492 141.332 34.93 141.332 cv
35.07 141.332 35.219 141.344 35.367 141.359 cv
35.516 141.383 35.652 141.406 35.777 141.43 cv
35.902 141.461 36.008 141.492 36.094 141.527 cv
36.18 141.562 36.234 141.59 36.262 141.613 cv
36.289 141.637 36.309 141.66 36.324 141.684 cv
36.332 141.707 36.344 141.734 36.355 141.766 cv
36.359 141.797 36.367 141.832 36.375 141.863 cv
36.379 141.902 36.379 141.945 36.383 142 cv
36.379 142.07 36.379 142.133 36.379 142.184 cv
36.375 142.234 36.367 142.273 36.355 142.305 cv
36.34 142.336 36.32 142.359 36.301 142.375 cv
36.277 142.391 36.25 142.398 36.219 142.398 cv
36.172 142.398 36.113 142.387 36.039 142.359 cv
35.965 142.332 35.875 142.301 35.77 142.266 cv
35.664 142.234 35.535 142.203 35.387 142.176 cv
35.234 142.152 35.063 142.141 34.863 142.137 cv
34.5 142.141 34.188 142.215 33.926 142.359 cv
33.66 142.512 33.445 142.711 33.281 142.957 cv
33.117 143.211 32.992 143.5 32.914 143.828 cv
32.832 144.156 32.789 144.5 32.777 144.859 cv
32.879 144.801 32.992 144.742 33.121 144.684 cv
33.246 144.629 33.383 144.578 33.535 144.527 cv
33.684 144.484 33.844 144.445 34.012 144.414 cv
34.18 144.383 34.359 144.367 34.555 144.367 cv
34.961 144.367 35.309 144.426 35.59 144.535 cv
35.871 144.648 36.098 144.801 36.27 144.996 cv
36.441 145.195 36.566 145.43 36.645 145.695 cv
36.719 145.969 36.754 146.258 36.758 146.566 cv
cp
35.734 146.66 mo
35.73 146.434 35.707 146.227 35.668 146.039 cv
35.621 145.855 35.547 145.699 35.441 145.57 cv
35.336 145.441 35.195 145.34 35.02 145.27 cv
34.844 145.199 34.629 145.164 34.371 145.164 cv
34.227 145.164 34.082 145.18 33.938 145.203 cv
33.789 145.23 33.648 145.266 33.516 145.309 cv
33.383 145.355 33.254 145.406 33.129 145.469 cv
33.004 145.531 32.891 145.598 32.797 145.66 cv
32.793 146.168 32.824 146.59 32.891 146.93 cv
32.953 147.27 33.047 147.543 33.172 147.746 cv
33.293 147.953 33.449 148.098 33.633 148.184 cv
33.813 148.273 34.027 148.316 34.277 148.316 cv
34.527 148.316 34.742 148.27 34.926 148.176 cv
35.109 148.082 35.262 147.957 35.383 147.797 cv
35.504 147.641 35.594 147.465 35.648 147.266 cv
35.703 147.07 35.73 146.867 35.734 146.66 cv
cp
f
25.031 97.691 mo
37.191 97.691 li
37.191 112.339 li
25.031 112.339 li
cp
0 0 0 0 cmyk
ef
30.777 106.969 mo
30.773 107.098 30.754 107.199 30.719 107.273 cv
30.676 107.352 30.621 107.391 30.555 107.387 cv
29.699 107.387 li
29.699 108.98 li
29.695 109.016 29.688 109.043 29.676 109.062 cv
29.656 109.086 29.629 109.102 29.59 109.117 cv
29.551 109.133 29.496 109.145 29.434 109.152 cv
29.363 109.16 29.281 109.164 29.184 109.164 cv
29.086 109.164 29.004 109.16 28.941 109.152 cv
28.875 109.145 28.824 109.133 28.789 109.117 cv
28.746 109.102 28.719 109.086 28.707 109.062 cv
28.691 109.043 28.688 109.016 28.688 108.98 cv
28.688 107.387 li
25.582 107.387 li
25.535 107.391 25.496 107.383 25.465 107.371 cv
25.434 107.359 25.402 107.34 25.379 107.305 cv
25.352 107.277 25.336 107.23 25.328 107.168 cv
25.316 107.109 25.313 107.031 25.313 106.937 cv
25.313 106.867 25.313 106.805 25.316 106.742 cv
25.32 106.687 25.328 106.633 25.34 106.578 cv
25.352 106.531 25.367 106.484 25.387 106.437 cv
25.406 106.398 25.43 106.348 25.457 106.293 cv
28.168 101.68 li
28.184 101.652 28.211 101.625 28.25 101.598 cv
28.285 101.578 28.336 101.559 28.398 101.539 cv
28.457 101.527 28.531 101.516 28.621 101.508 cv
28.707 101.504 28.813 101.5 28.934 101.496 cv
29.063 101.5 29.176 101.504 29.273 101.512 cv
29.371 101.523 29.449 101.539 29.512 101.551 cv
29.57 101.57 29.617 101.59 29.648 101.613 cv
29.68 101.641 29.695 101.672 29.699 101.703 cv
29.699 106.551 li
30.555 106.551 li
30.621 106.551 30.676 106.586 30.715 106.656 cv
30.754 106.727 30.773 106.832 30.777 106.969 cv
cp
28.688 102.383 mo
28.676 102.383 li
26.234 106.551 li
28.688 106.551 li
cp
.629114 .553033 .543389 .289647 cmyk
f
36.824 105.312 mo
36.82 105.898 36.773 106.43 36.688 106.91 cv
36.594 107.395 36.441 107.809 36.23 108.152 cv
36.012 108.5 35.734 108.77 35.391 108.957 cv
35.047 109.148 34.621 109.238 34.121 109.242 cv
33.637 109.238 33.234 109.156 32.91 108.988 cv
32.582 108.816 32.32 108.566 32.121 108.234 cv
31.922 107.906 31.777 107.5 31.695 107.016 cv
31.609 106.535 31.57 105.98 31.57 105.348 cv
31.57 104.773 31.617 104.242 31.711 103.754 cv
31.805 103.273 31.957 102.855 32.168 102.508 cv
32.379 102.164 32.656 101.898 33.004 101.707 cv
33.344 101.52 33.766 101.426 34.273 101.422 cv
34.75 101.426 35.152 101.508 35.48 101.676 cv
35.805 101.848 36.07 102.098 36.273 102.426 cv
36.473 102.758 36.613 103.168 36.699 103.648 cv
36.777 104.137 36.82 104.691 36.824 105.312 cv
cp
35.793 105.383 mo
35.789 105.008 35.773 104.668 35.75 104.363 cv
35.719 104.066 35.68 103.797 35.629 103.562 cv
35.574 103.332 35.508 103.137 35.426 102.969 cv
35.34 102.805 35.238 102.668 35.121 102.559 cv
35.004 102.453 34.867 102.371 34.719 102.32 cv
34.566 102.273 34.398 102.25 34.215 102.246 cv
33.879 102.25 33.609 102.328 33.402 102.484 cv
33.191 102.641 33.027 102.855 32.91 103.129 cv
32.789 103.402 32.707 103.727 32.668 104.094 cv
32.621 104.465 32.602 104.859 32.605 105.277 cv
32.602 105.848 32.629 106.328 32.691 106.727 cv
32.746 107.125 32.84 107.449 32.973 107.695 cv
33.098 107.949 33.262 108.133 33.457 108.242 cv
33.652 108.359 33.891 108.414 34.18 108.414 cv
34.395 108.414 34.586 108.379 34.754 108.309 cv
34.918 108.238 35.063 108.141 35.184 108.008 cv
35.301 107.879 35.398 107.719 35.48 107.535 cv
35.555 107.352 35.617 107.148 35.668 106.922 cv
35.711 106.699 35.746 106.457 35.766 106.195 cv
35.781 105.937 35.789 105.668 35.793 105.383 cv
cp
f
25.031 57.801 mo
37.191 57.801 li
37.191 72.449 li
25.031 72.449 li
cp
0 0 0 0 cmyk
ef
30.766 67.062 mo
30.762 67.195 30.742 67.297 30.707 67.367 cv
30.664 67.441 30.609 67.48 30.547 67.477 cv
29.688 67.477 li
29.688 69.07 li
29.684 69.105 29.676 69.133 29.664 69.152 cv
29.645 69.176 29.617 69.191 29.578 69.207 cv
29.539 69.223 29.484 69.234 29.422 69.242 cv
29.355 69.25 29.273 69.254 29.176 69.254 cv
29.074 69.254 28.996 69.25 28.934 69.242 cv
28.871 69.234 28.82 69.223 28.781 69.207 cv
28.742 69.191 28.715 69.176 28.699 69.152 cv
28.684 69.133 28.676 69.105 28.68 69.07 cv
28.68 67.477 li
25.578 67.477 li
25.531 67.48 25.496 67.473 25.465 67.461 cv
25.434 67.453 25.402 67.434 25.379 67.398 cv
25.348 67.371 25.332 67.324 25.324 67.262 cv
25.316 67.203 25.313 67.129 25.313 67.031 cv
25.313 66.961 25.313 66.895 25.316 66.836 cv
25.32 66.777 25.328 66.723 25.34 66.676 cv
25.352 66.629 25.367 66.582 25.387 66.535 cv
25.406 66.488 25.43 66.441 25.457 66.391 cv
28.16 61.781 li
28.18 61.754 28.207 61.727 28.246 61.699 cv
28.281 61.68 28.332 61.66 28.395 61.641 cv
28.453 61.629 28.523 61.617 28.613 61.609 cv
28.699 61.605 28.805 61.602 28.926 61.602 cv
29.055 61.602 29.168 61.609 29.266 61.617 cv
29.363 61.633 29.441 61.645 29.504 61.656 cv
29.559 61.676 29.605 61.695 29.641 61.719 cv
29.668 61.742 29.684 61.773 29.688 61.805 cv
29.688 66.648 li
30.547 66.648 li
30.609 66.652 30.664 66.687 30.703 66.75 cv
30.742 66.82 30.762 66.922 30.766 67.062 cv
cp
28.68 62.484 mo
28.672 62.484 li
26.234 66.648 li
28.68 66.648 li
cp
.629114 .553033 .543389 .289647 cmyk
f
36.883 67.062 mo
36.879 67.195 36.859 67.297 36.824 67.367 cv
36.781 67.441 36.727 67.48 36.664 67.477 cv
35.805 67.477 li
35.805 69.07 li
35.801 69.105 35.793 69.133 35.781 69.152 cv
35.762 69.176 35.734 69.191 35.695 69.207 cv
35.656 69.223 35.602 69.234 35.539 69.242 cv
35.473 69.25 35.391 69.254 35.293 69.254 cv
35.191 69.254 35.113 69.25 35.051 69.242 cv
34.988 69.234 34.938 69.223 34.898 69.207 cv
34.859 69.191 34.832 69.176 34.816 69.152 cv
34.801 69.133 34.793 69.105 34.797 69.07 cv
34.797 67.477 li
31.695 67.477 li
31.648 67.48 31.613 67.473 31.582 67.461 cv
31.551 67.453 31.52 67.434 31.496 67.398 cv
31.465 67.371 31.449 67.324 31.441 67.262 cv
31.434 67.203 31.43 67.129 31.43 67.031 cv
31.43 66.961 31.43 66.895 31.434 66.836 cv
31.438 66.777 31.445 66.723 31.457 66.676 cv
31.469 66.629 31.484 66.582 31.504 66.535 cv
31.523 66.488 31.547 66.441 31.574 66.391 cv
34.277 61.781 li
34.297 61.754 34.324 61.727 34.363 61.699 cv
34.398 61.68 34.449 61.66 34.512 61.641 cv
34.57 61.629 34.641 61.617 34.73 61.609 cv
34.816 61.605 34.922 61.602 35.043 61.602 cv
35.172 61.602 35.285 61.609 35.383 61.617 cv
35.48 61.633 35.559 61.645 35.621 61.656 cv
35.676 61.676 35.723 61.695 35.758 61.719 cv
35.785 61.742 35.801 61.773 35.805 61.805 cv
35.805 66.648 li
36.664 66.648 li
36.727 66.652 36.781 66.687 36.82 66.75 cv
36.859 66.82 36.879 66.922 36.883 67.062 cv
cp
34.797 62.484 mo
34.789 62.484 li
32.352 66.648 li
34.797 66.648 li
cp
f
25.031 17.898 mo
37.191 17.898 li
37.191 32.55 li
25.031 32.55 li
cp
0 0 0 0 cmyk
ef
30.766 27.145 mo
30.762 27.277 30.742 27.379 30.707 27.449 cv
30.664 27.523 30.609 27.562 30.547 27.559 cv
29.688 27.559 li
29.688 29.152 li
29.684 29.187 29.676 29.215 29.664 29.234 cv
29.645 29.258 29.617 29.273 29.578 29.289 cv
29.539 29.305 29.484 29.316 29.422 29.324 cv
29.355 29.332 29.273 29.336 29.176 29.336 cv
29.074 29.336 28.996 29.332 28.934 29.324 cv
28.871 29.316 28.82 29.305 28.781 29.289 cv
28.742 29.273 28.715 29.258 28.699 29.234 cv
28.684 29.215 28.676 29.187 28.68 29.152 cv
28.68 27.559 li
25.578 27.559 li
25.531 27.562 25.496 27.555 25.465 27.543 cv
25.434 27.535 25.402 27.516 25.379 27.48 cv
25.348 27.453 25.332 27.406 25.324 27.344 cv
25.316 27.285 25.313 27.211 25.313 27.113 cv
25.313 27.043 25.313 26.977 25.316 26.918 cv
25.32 26.859 25.328 26.805 25.34 26.758 cv
25.352 26.711 25.367 26.664 25.387 26.617 cv
25.406 26.57 25.43 26.523 25.457 26.473 cv
28.16 21.863 li
28.18 21.836 28.207 21.809 28.246 21.781 cv
28.281 21.762 28.332 21.742 28.395 21.723 cv
28.453 21.711 28.523 21.699 28.613 21.691 cv
28.699 21.687 28.805 21.684 28.926 21.684 cv
29.055 21.684 29.168 21.691 29.266 21.699 cv
29.363 21.715 29.441 21.727 29.504 21.738 cv
29.559 21.758 29.605 21.777 29.641 21.801 cv
29.668 21.824 29.684 21.855 29.688 21.887 cv
29.688 26.73 li
30.547 26.73 li
30.609 26.734 30.664 26.77 30.703 26.832 cv
30.742 26.902 30.762 27.004 30.766 27.145 cv
cp
28.68 22.566 mo
28.672 22.566 li
26.234 26.73 li
28.68 26.73 li
cp
.629114 .553033 .543389 .289647 cmyk
f
36.738 27.355 mo
36.738 27.684 36.68 27.977 36.563 28.23 cv
36.445 28.488 36.273 28.703 36.055 28.879 cv
35.832 29.059 35.563 29.191 35.238 29.277 cv
34.91 29.363 34.539 29.406 34.125 29.41 cv
33.734 29.406 33.383 29.367 33.074 29.289 cv
32.766 29.211 32.504 29.09 32.289 28.926 cv
32.074 28.766 31.91 28.57 31.797 28.332 cv
31.684 28.102 31.629 27.832 31.629 27.531 cv
31.629 27.297 31.668 27.078 31.746 26.875 cv
31.824 26.676 31.934 26.492 32.082 26.324 cv
32.227 26.16 32.41 26.004 32.625 25.855 cv
32.836 25.707 33.078 25.566 33.352 25.434 cv
33.117 25.316 32.91 25.191 32.73 25.051 cv
32.551 24.918 32.398 24.77 32.273 24.609 cv
32.148 24.453 32.051 24.285 31.988 24.102 cv
31.918 23.926 31.887 23.73 31.891 23.52 cv
31.887 23.258 31.934 23.008 32.035 22.773 cv
32.129 22.539 32.273 22.336 32.469 22.164 cv
32.656 21.992 32.902 21.859 33.207 21.758 cv
33.504 21.66 33.855 21.609 34.254 21.605 cv
34.637 21.609 34.965 21.656 35.246 21.746 cv
35.52 21.84 35.75 21.965 35.938 22.121 cv
36.117 22.281 36.254 22.465 36.34 22.68 cv
36.426 22.898 36.469 23.129 36.469 23.371 cv
36.469 23.57 36.434 23.762 36.371 23.945 cv
36.301 24.133 36.207 24.309 36.086 24.469 cv
35.957 24.637 35.805 24.789 35.625 24.93 cv
35.445 25.07 35.238 25.203 35.004 25.328 cv
35.281 25.469 35.527 25.609 35.746 25.75 cv
35.961 25.895 36.141 26.051 36.289 26.215 cv
36.43 26.383 36.543 26.559 36.621 26.742 cv
36.699 26.93 36.738 27.133 36.738 27.355 cv
cp
35.473 23.465 mo
35.473 23.301 35.441 23.152 35.387 23.02 cv
35.328 22.887 35.246 22.773 35.141 22.68 cv
35.027 22.586 34.891 22.516 34.73 22.469 cv
34.566 22.422 34.383 22.398 34.18 22.395 cv
33.754 22.398 33.434 22.492 33.219 22.68 cv
33 22.871 32.895 23.133 32.895 23.465 cv
32.895 23.617 32.918 23.762 32.973 23.891 cv
33.023 24.023 33.105 24.145 33.219 24.262 cv
33.328 24.379 33.469 24.496 33.641 24.605 cv
33.809 24.719 34.012 24.832 34.25 24.953 cv
34.641 24.75 34.945 24.527 35.156 24.281 cv
35.367 24.035 35.473 23.762 35.473 23.465 cv
cp
35.719 27.461 mo
35.719 27.281 35.684 27.121 35.617 26.973 cv
35.551 26.832 35.449 26.695 35.316 26.562 cv
35.18 26.437 35.012 26.312 34.813 26.191 cv
34.609 26.074 34.379 25.949 34.113 25.82 cv
33.863 25.945 33.645 26.066 33.465 26.184 cv
33.277 26.305 33.125 26.43 33.008 26.559 cv
32.883 26.691 32.793 26.828 32.738 26.969 cv
32.676 27.109 32.648 27.266 32.648 27.437 cv
32.648 27.816 32.777 28.109 33.039 28.316 cv
33.297 28.527 33.684 28.633 34.203 28.629 cv
34.699 28.633 35.078 28.527 35.336 28.316 cv
35.59 28.105 35.719 27.82 35.719 27.461 cv
cp
f
50.719 523.355 mo
50.715 523.43 50.711 523.492 50.703 523.543 cv
50.691 523.598 50.676 523.641 50.656 523.668 cv
50.633 523.703 50.609 523.727 50.586 523.734 cv
50.563 523.75 50.535 523.754 50.508 523.754 cv
46.547 523.754 li
46.52 523.754 46.496 523.75 46.473 523.734 cv
46.449 523.727 46.426 523.703 46.406 523.668 cv
46.383 523.641 46.367 523.598 46.355 523.543 cv
46.34 523.492 46.332 523.43 46.336 523.355 cv
46.332 523.285 46.34 523.227 46.355 523.176 cv
46.367 523.125 46.379 523.082 46.398 523.047 cv
46.414 523.016 46.438 522.992 46.461 522.973 cv
46.484 522.957 46.512 522.945 46.547 522.945 cv
48.133 522.945 li
48.133 517.18 li
46.664 518.051 li
46.59 518.098 46.531 518.121 46.488 518.125 cv
46.441 518.137 46.406 518.129 46.379 518.098 cv
46.348 518.074 46.328 518.031 46.32 517.973 cv
46.313 517.914 46.309 517.84 46.309 517.746 cv
46.309 517.684 46.309 517.625 46.316 517.578 cv
46.32 517.531 46.332 517.492 46.344 517.461 cv
46.352 517.43 46.367 517.402 46.391 517.379 cv
46.414 517.355 46.441 517.332 46.477 517.309 cv
48.227 516.191 li
48.238 516.18 48.258 516.168 48.285 516.16 cv
48.305 516.152 48.336 516.145 48.371 516.137 cv
48.402 516.129 48.441 516.125 48.492 516.125 cv
48.535 516.125 48.594 516.125 48.672 516.121 cv
48.762 516.125 48.84 516.129 48.906 516.133 cv
48.965 516.145 49.016 516.156 49.051 516.164 cv
49.082 516.18 49.105 516.195 49.121 516.215 cv
49.133 516.238 49.137 516.262 49.141 516.285 cv
49.141 522.945 li
50.508 522.945 li
50.535 522.945 50.566 522.957 50.598 522.973 cv
50.625 522.992 50.645 523.016 50.664 523.047 cv
50.68 523.082 50.695 523.125 50.703 523.176 cv
50.711 523.227 50.715 523.285 50.719 523.355 cv
cp
f
70.434 523.32 mo
70.434 523.391 70.426 523.453 70.418 523.508 cv
70.402 523.562 70.391 523.609 70.375 523.645 cv
70.359 523.684 70.336 523.711 70.305 523.727 cv
70.273 523.746 70.242 523.754 70.211 523.754 cv
66.02 523.754 li
65.965 523.754 65.918 523.75 65.879 523.734 cv
65.836 523.727 65.801 523.703 65.773 523.668 cv
65.742 523.641 65.719 523.594 65.707 523.531 cv
65.691 523.473 65.688 523.402 65.688 523.316 cv
65.688 523.242 65.688 523.172 65.695 523.109 cv
65.699 523.051 65.715 523 65.734 522.953 cv
65.754 522.91 65.777 522.867 65.809 522.82 cv
65.836 522.781 65.875 522.73 65.93 522.676 cv
67.445 521.117 li
67.793 520.758 68.07 520.437 68.285 520.152 cv
68.496 519.867 68.66 519.605 68.777 519.371 cv
68.887 519.137 68.965 518.926 69.004 518.734 cv
69.039 518.543 69.055 518.363 69.059 518.191 cv
69.055 518.027 69.027 517.867 68.973 517.715 cv
68.914 517.566 68.832 517.434 68.727 517.32 cv
68.617 517.211 68.484 517.121 68.324 517.051 cv
68.16 516.984 67.973 516.953 67.77 516.949 cv
67.52 516.953 67.301 516.984 67.105 517.051 cv
66.91 517.121 66.738 517.195 66.59 517.27 cv
66.441 517.352 66.316 517.422 66.223 517.484 cv
66.121 517.551 66.051 517.586 66.004 517.582 cv
65.973 517.586 65.945 517.578 65.926 517.559 cv
65.902 517.547 65.883 517.52 65.871 517.484 cv
65.855 517.453 65.848 517.406 65.84 517.344 cv
65.832 517.285 65.828 517.215 65.828 517.133 cv
65.828 517.074 65.828 517.023 65.832 516.98 cv
65.836 516.941 65.844 516.906 65.855 516.871 cv
65.863 516.844 65.875 516.812 65.895 516.781 cv
65.906 516.754 65.938 516.723 65.988 516.68 cv
66.031 516.641 66.113 516.582 66.23 516.512 cv
66.344 516.441 66.488 516.375 66.664 516.305 cv
66.836 516.238 67.027 516.18 67.238 516.129 cv
67.445 516.086 67.664 516.062 67.895 516.059 cv
68.262 516.062 68.582 516.113 68.859 516.215 cv
69.133 516.32 69.363 516.461 69.543 516.641 cv
69.723 516.82 69.859 517.031 69.953 517.27 cv
70.043 517.508 70.086 517.762 70.09 518.027 cv
70.086 518.277 70.066 518.52 70.023 518.754 cv
69.977 518.996 69.883 519.254 69.75 519.531 cv
69.609 519.812 69.41 520.125 69.148 520.465 cv
68.887 520.809 68.539 521.199 68.105 521.645 cv
66.906 522.898 li
70.207 522.898 li
70.234 522.898 70.266 522.91 70.297 522.926 cv
70.324 522.945 70.348 522.969 70.371 523.004 cv
70.387 523.043 70.402 523.09 70.418 523.137 cv
70.426 523.191 70.434 523.25 70.434 523.32 cv
cp
f
90.074 521.586 mo
90.074 521.934 90.012 522.25 89.891 522.527 cv
89.77 522.809 89.598 523.047 89.371 523.246 cv
89.145 523.445 88.863 523.598 88.531 523.703 cv
88.199 523.809 87.824 523.859 87.406 523.863 cv
87.152 523.859 86.914 523.84 86.695 523.801 cv
86.473 523.762 86.277 523.715 86.109 523.66 cv
85.934 523.605 85.793 523.547 85.68 523.484 cv
85.563 523.422 85.488 523.379 85.465 523.352 cv
85.434 523.324 85.414 523.297 85.398 523.27 cv
85.383 523.242 85.367 523.207 85.355 523.168 cv
85.344 523.129 85.336 523.082 85.328 523.027 cv
85.32 522.973 85.316 522.902 85.32 522.816 cv
85.316 522.676 85.332 522.578 85.363 522.523 cv
85.391 522.469 85.43 522.441 85.484 522.441 cv
85.52 522.441 85.59 522.473 85.695 522.535 cv
85.801 522.598 85.938 522.668 86.105 522.738 cv
86.27 522.816 86.465 522.883 86.688 522.941 cv
86.91 523.008 87.156 523.039 87.434 523.035 cv
87.691 523.039 87.926 523.004 88.129 522.934 cv
88.328 522.867 88.496 522.773 88.633 522.652 cv
88.77 522.535 88.871 522.395 88.941 522.223 cv
89.008 522.059 89.043 521.875 89.043 521.68 cv
89.043 521.465 88.996 521.273 88.91 521.098 cv
88.82 520.93 88.695 520.781 88.531 520.652 cv
88.363 520.531 88.156 520.434 87.914 520.367 cv
87.664 520.305 87.387 520.273 87.082 520.27 cv
86.34 520.27 li
86.305 520.273 86.273 520.266 86.242 520.25 cv
86.211 520.234 86.184 520.211 86.164 520.18 cv
86.141 520.148 86.121 520.109 86.109 520.059 cv
86.094 520.008 86.09 519.941 86.09 519.855 cv
86.09 519.785 86.094 519.723 86.105 519.672 cv
86.117 519.625 86.133 519.586 86.156 519.555 cv
86.172 519.527 86.199 519.508 86.23 519.492 cv
86.258 519.484 86.289 519.477 86.324 519.473 cv
86.984 519.473 li
87.242 519.477 87.473 519.441 87.68 519.371 cv
87.883 519.305 88.059 519.211 88.199 519.082 cv
88.34 518.961 88.449 518.812 88.527 518.637 cv
88.605 518.465 88.645 518.27 88.645 518.051 cv
88.645 517.898 88.617 517.75 88.566 517.605 cv
88.516 517.465 88.441 517.34 88.34 517.234 cv
88.238 517.129 88.105 517.047 87.949 516.984 cv
87.785 516.93 87.605 516.898 87.402 516.895 cv
87.176 516.898 86.965 516.934 86.777 516.996 cv
86.582 517.066 86.414 517.137 86.27 517.215 cv
86.117 517.293 85.996 517.367 85.902 517.434 cv
85.805 517.504 85.734 517.539 85.695 517.535 cv
85.668 517.539 85.645 517.535 85.625 517.523 cv
85.602 517.516 85.582 517.496 85.57 517.465 cv
85.555 517.437 85.547 517.395 85.539 517.34 cv
85.531 517.289 85.527 517.219 85.531 517.133 cv
85.527 517.074 85.531 517.023 85.539 516.977 cv
85.543 516.934 85.551 516.895 85.563 516.859 cv
85.57 516.828 85.582 516.797 85.602 516.77 cv
85.613 516.746 85.641 516.715 85.68 516.676 cv
85.719 516.637 85.793 516.582 85.906 516.512 cv
86.02 516.441 86.16 516.375 86.328 516.305 cv
86.492 516.238 86.684 516.18 86.902 516.129 cv
87.117 516.086 87.352 516.062 87.602 516.059 cv
87.953 516.062 88.262 516.105 88.527 516.195 cv
88.793 516.289 89.012 516.418 89.191 516.578 cv
89.367 516.746 89.5 516.941 89.59 517.168 cv
89.676 517.395 89.723 517.648 89.723 517.926 cv
89.723 518.164 89.691 518.387 89.629 518.59 cv
89.566 518.797 89.473 518.977 89.352 519.133 cv
89.23 519.293 89.082 519.43 88.906 519.539 cv
88.73 519.656 88.527 519.73 88.297 519.77 cv
88.297 519.781 li
88.559 519.812 88.797 519.879 89.016 519.98 cv
89.23 520.082 89.418 520.211 89.578 520.367 cv
89.73 520.523 89.852 520.707 89.941 520.918 cv
90.027 521.129 90.074 521.352 90.074 521.586 cv
cp
f
110.156 521.598 mo
110.152 521.73 110.133 521.832 110.098 521.902 cv
110.055 521.977 110 522.016 109.938 522.012 cv
109.078 522.012 li
109.078 523.605 li
109.074 523.641 109.066 523.668 109.055 523.687 cv
109.035 523.711 109.008 523.727 108.969 523.742 cv
108.93 523.758 108.875 523.77 108.813 523.777 cv
108.746 523.785 108.664 523.789 108.566 523.789 cv
108.465 523.789 108.387 523.785 108.324 523.777 cv
108.262 523.77 108.211 523.758 108.172 523.742 cv
108.133 523.727 108.105 523.711 108.09 523.687 cv
108.074 523.668 108.066 523.641 108.07 523.605 cv
108.07 522.012 li
104.969 522.012 li
104.922 522.016 104.887 522.008 104.855 521.996 cv
104.824 521.988 104.793 521.969 104.77 521.934 cv
104.738 521.906 104.723 521.859 104.715 521.797 cv
104.707 521.738 104.703 521.664 104.703 521.566 cv
104.703 521.496 104.703 521.43 104.707 521.371 cv
104.711 521.312 104.719 521.258 104.73 521.211 cv
104.742 521.164 104.758 521.117 104.777 521.07 cv
104.797 521.023 104.82 520.977 104.848 520.926 cv
107.551 516.316 li
107.57 516.289 107.598 516.262 107.637 516.234 cv
107.672 516.215 107.723 516.195 107.785 516.176 cv
107.844 516.164 107.914 516.152 108.004 516.145 cv
108.09 516.141 108.195 516.137 108.316 516.137 cv
108.445 516.137 108.559 516.145 108.656 516.152 cv
108.754 516.168 108.832 516.18 108.895 516.191 cv
108.949 516.211 108.996 516.23 109.031 516.254 cv
109.059 516.277 109.074 516.309 109.078 516.34 cv
109.078 521.184 li
109.938 521.184 li
110 521.187 110.055 521.223 110.094 521.285 cv
110.133 521.355 110.152 521.457 110.156 521.598 cv
cp
108.07 517.02 mo
108.063 517.02 li
105.625 521.184 li
108.07 521.184 li
cp
f
129.508 521.316 mo
129.508 521.723 129.438 522.086 129.301 522.402 cv
129.164 522.719 128.973 522.984 128.723 523.203 cv
128.473 523.422 128.172 523.586 127.828 523.695 cv
127.477 523.805 127.094 523.859 126.676 523.863 cv
126.438 523.859 126.215 523.844 126.008 523.812 cv
125.793 523.781 125.605 523.742 125.445 523.695 cv
125.277 523.648 125.145 523.602 125.043 523.551 cv
124.938 523.508 124.867 523.469 124.84 523.437 cv
124.809 523.41 124.789 523.387 124.777 523.359 cv
124.766 523.34 124.754 523.312 124.746 523.277 cv
124.73 523.246 124.727 523.203 124.727 523.152 cv
124.723 523.102 124.719 523.039 124.723 522.969 cv
124.719 522.906 124.723 522.848 124.73 522.793 cv
124.734 522.738 124.746 522.695 124.762 522.664 cv
124.777 522.633 124.793 522.609 124.816 522.59 cv
124.832 522.578 124.859 522.57 124.891 522.566 cv
124.93 522.57 124.988 522.594 125.07 522.641 cv
125.152 522.687 125.262 522.742 125.402 522.797 cv
125.539 522.855 125.711 522.906 125.918 522.957 cv
126.121 523.012 126.367 523.039 126.648 523.035 cv
126.91 523.039 127.148 523.008 127.371 522.941 cv
127.586 522.883 127.773 522.785 127.934 522.648 cv
128.09 522.52 128.215 522.352 128.305 522.148 cv
128.395 521.945 128.441 521.699 128.441 521.41 cv
128.441 521.168 128.402 520.957 128.328 520.77 cv
128.25 520.586 128.133 520.43 127.977 520.305 cv
127.816 520.184 127.617 520.094 127.375 520.031 cv
127.133 519.977 126.844 519.945 126.508 519.941 cv
126.27 519.945 126.063 519.957 125.895 519.977 cv
125.719 520.004 125.559 520.016 125.41 520.012 cv
125.297 520.016 125.219 519.988 125.176 519.934 cv
125.125 519.883 125.102 519.785 125.105 519.641 cv
125.105 516.551 li
125.102 516.426 125.133 516.328 125.195 516.266 cv
125.258 516.203 125.344 516.172 125.457 516.172 cv
128.816 516.172 li
128.848 516.172 128.875 516.184 128.906 516.199 cv
128.93 516.219 128.957 516.242 128.98 516.277 cv
129 516.316 129.012 516.363 129.023 516.414 cv
129.031 516.473 129.039 516.535 129.039 516.605 cv
129.039 516.746 129.02 516.855 128.98 516.934 cv
128.941 517.012 128.887 517.051 128.824 517.051 cv
126.113 517.051 li
126.113 519.176 li
126.242 519.16 126.379 519.148 126.52 519.145 cv
126.656 519.141 126.813 519.137 126.996 519.137 cv
127.41 519.137 127.777 519.191 128.09 519.293 cv
128.402 519.402 128.66 519.547 128.871 519.734 cv
129.078 519.922 129.238 520.152 129.348 520.422 cv
129.453 520.691 129.508 520.988 129.508 521.316 cv
cp
f
149.438 521.301 mo
149.434 521.633 149.383 521.953 149.285 522.266 cv
149.18 522.578 149.023 522.852 148.816 523.086 cv
148.602 523.32 148.336 523.512 148.012 523.652 cv
147.684 523.793 147.301 523.859 146.863 523.863 cv
146.547 523.859 146.266 523.824 146.027 523.746 cv
145.781 523.672 145.57 523.559 145.395 523.414 cv
145.211 523.273 145.063 523.098 144.945 522.883 cv
144.824 522.676 144.727 522.434 144.656 522.16 cv
144.578 521.891 144.527 521.598 144.5 521.273 cv
144.465 520.957 144.449 520.613 144.453 520.246 cv
144.449 519.922 144.469 519.594 144.508 519.262 cv
144.543 518.93 144.605 518.609 144.695 518.301 cv
144.781 517.992 144.902 517.703 145.059 517.43 cv
145.215 517.16 145.406 516.922 145.641 516.719 cv
145.871 516.52 146.152 516.359 146.477 516.242 cv
146.797 516.125 147.172 516.066 147.609 516.066 cv
147.75 516.066 147.898 516.078 148.047 516.094 cv
148.195 516.117 148.332 516.141 148.457 516.164 cv
148.582 516.195 148.688 516.227 148.773 516.262 cv
148.859 516.297 148.914 516.324 148.941 516.348 cv
148.969 516.371 148.988 516.395 149.004 516.418 cv
149.012 516.441 149.023 516.469 149.035 516.5 cv
149.039 516.531 149.047 516.566 149.055 516.598 cv
149.059 516.637 149.059 516.68 149.063 516.734 cv
149.059 516.805 149.059 516.867 149.059 516.918 cv
149.055 516.969 149.047 517.008 149.035 517.039 cv
149.02 517.07 149 517.094 148.98 517.109 cv
148.957 517.125 148.93 517.133 148.898 517.133 cv
148.852 517.133 148.793 517.121 148.719 517.094 cv
148.645 517.066 148.555 517.035 148.449 517 cv
148.344 516.969 148.215 516.937 148.066 516.91 cv
147.914 516.887 147.742 516.875 147.543 516.871 cv
147.18 516.875 146.867 516.949 146.605 517.094 cv
146.34 517.246 146.125 517.445 145.961 517.691 cv
145.797 517.945 145.672 518.234 145.594 518.562 cv
145.512 518.891 145.469 519.234 145.457 519.594 cv
145.559 519.535 145.672 519.477 145.801 519.418 cv
145.926 519.363 146.063 519.312 146.215 519.262 cv
146.363 519.219 146.523 519.18 146.691 519.148 cv
146.859 519.117 147.039 519.102 147.234 519.102 cv
147.641 519.102 147.988 519.16 148.27 519.27 cv
148.551 519.383 148.777 519.535 148.949 519.73 cv
149.121 519.93 149.246 520.164 149.324 520.43 cv
149.398 520.703 149.434 520.992 149.438 521.301 cv
cp
148.414 521.395 mo
148.41 521.168 148.387 520.961 148.348 520.773 cv
148.301 520.59 148.227 520.434 148.121 520.305 cv
148.016 520.176 147.875 520.074 147.699 520.004 cv
147.523 519.934 147.309 519.898 147.051 519.898 cv
146.906 519.898 146.762 519.914 146.617 519.937 cv
146.469 519.965 146.328 520 146.195 520.043 cv
146.063 520.09 145.934 520.141 145.809 520.203 cv
145.684 520.266 145.57 520.332 145.477 520.395 cv
145.473 520.902 145.504 521.324 145.57 521.664 cv
145.633 522.004 145.727 522.277 145.852 522.48 cv
145.973 522.687 146.129 522.832 146.313 522.918 cv
146.492 523.008 146.707 523.051 146.957 523.051 cv
147.207 523.051 147.422 523.004 147.605 522.91 cv
147.789 522.816 147.941 522.691 148.063 522.531 cv
148.184 522.375 148.273 522.199 148.328 522 cv
148.383 521.805 148.41 521.602 148.414 521.395 cv
cp
f
169.082 516.605 mo
169.078 516.676 169.074 516.742 169.074 516.797 cv
169.066 516.855 169.059 516.91 169.051 516.961 cv
169.035 517.016 169.023 517.066 169.008 517.113 cv
168.992 517.164 168.973 517.215 168.949 517.27 cv
166.219 523.559 li
166.199 523.609 166.172 523.648 166.145 523.676 cv
166.113 523.707 166.078 523.73 166.031 523.746 cv
165.984 523.762 165.926 523.77 165.859 523.777 cv
165.785 523.785 165.699 523.789 165.605 523.789 cv
165.465 523.789 165.363 523.781 165.293 523.77 cv
165.219 523.758 165.164 523.742 165.133 523.715 cv
165.098 523.691 165.082 523.66 165.086 523.621 cv
165.09 523.586 165.105 523.543 165.129 523.488 cv
168 517.059 li
164.363 517.059 li
164.285 517.062 164.23 517.023 164.191 516.941 cv
164.152 516.867 164.133 516.758 164.137 516.613 cv
164.133 516.539 164.137 516.473 164.152 516.418 cv
164.16 516.363 164.176 516.32 164.195 516.281 cv
164.215 516.246 164.238 516.219 164.266 516.199 cv
164.293 516.184 164.324 516.172 164.363 516.172 cv
168.777 516.172 li
168.832 516.172 168.879 516.18 168.922 516.191 cv
168.961 516.203 168.992 516.227 169.016 516.262 cv
169.035 516.297 169.055 516.34 169.066 516.395 cv
169.074 516.449 169.078 516.52 169.082 516.605 cv
cp
f
188.852 521.809 mo
188.852 522.137 188.793 522.43 188.676 522.684 cv
188.559 522.941 188.387 523.156 188.168 523.332 cv
187.945 523.512 187.676 523.645 187.352 523.73 cv
187.023 523.816 186.652 523.859 186.238 523.863 cv
185.848 523.859 185.496 523.82 185.188 523.742 cv
184.879 523.664 184.617 523.543 184.402 523.379 cv
184.188 523.219 184.023 523.023 183.91 522.785 cv
183.797 522.555 183.742 522.285 183.742 521.984 cv
183.742 521.75 183.781 521.531 183.859 521.328 cv
183.938 521.129 184.047 520.945 184.195 520.777 cv
184.34 520.613 184.523 520.457 184.738 520.309 cv
184.949 520.16 185.191 520.02 185.465 519.887 cv
185.23 519.77 185.023 519.645 184.844 519.504 cv
184.664 519.371 184.512 519.223 184.387 519.062 cv
184.262 518.906 184.164 518.738 184.102 518.555 cv
184.031 518.379 184 518.184 184.004 517.973 cv
184 517.711 184.047 517.461 184.148 517.227 cv
184.242 516.992 184.387 516.789 184.582 516.617 cv
184.77 516.445 185.016 516.312 185.32 516.211 cv
185.617 516.113 185.969 516.062 186.367 516.059 cv
186.75 516.062 187.078 516.109 187.359 516.199 cv
187.633 516.293 187.863 516.418 188.051 516.574 cv
188.23 516.734 188.367 516.918 188.453 517.133 cv
188.539 517.352 188.582 517.582 188.582 517.824 cv
188.582 518.023 188.547 518.215 188.484 518.398 cv
188.414 518.586 188.32 518.762 188.199 518.922 cv
188.07 519.09 187.918 519.242 187.738 519.383 cv
187.559 519.523 187.352 519.656 187.117 519.781 cv
187.395 519.922 187.641 520.062 187.859 520.203 cv
188.074 520.348 188.254 520.504 188.402 520.668 cv
188.543 520.836 188.656 521.012 188.734 521.195 cv
188.813 521.383 188.852 521.586 188.852 521.809 cv
cp
187.586 517.918 mo
187.586 517.754 187.555 517.605 187.5 517.473 cv
187.441 517.34 187.359 517.227 187.254 517.133 cv
187.141 517.039 187.004 516.969 186.844 516.922 cv
186.68 516.875 186.496 516.852 186.293 516.848 cv
185.867 516.852 185.547 516.945 185.332 517.133 cv
185.113 517.324 185.008 517.586 185.008 517.918 cv
185.008 518.07 185.031 518.215 185.086 518.344 cv
185.137 518.477 185.219 518.598 185.332 518.715 cv
185.441 518.832 185.582 518.949 185.754 519.059 cv
185.922 519.172 186.125 519.285 186.363 519.406 cv
186.754 519.203 187.059 518.98 187.27 518.734 cv
187.48 518.488 187.586 518.215 187.586 517.918 cv
cp
187.832 521.914 mo
187.832 521.734 187.797 521.574 187.73 521.426 cv
187.664 521.285 187.563 521.148 187.43 521.016 cv
187.293 520.891 187.125 520.766 186.926 520.645 cv
186.723 520.527 186.492 520.402 186.227 520.273 cv
185.977 520.398 185.758 520.52 185.578 520.637 cv
185.391 520.758 185.238 520.883 185.121 521.012 cv
184.996 521.145 184.906 521.281 184.852 521.422 cv
184.789 521.562 184.762 521.719 184.762 521.891 cv
184.762 522.27 184.891 522.562 185.152 522.77 cv
185.41 522.98 185.797 523.086 186.316 523.082 cv
186.813 523.086 187.191 522.98 187.449 522.77 cv
187.703 522.559 187.832 522.273 187.832 521.914 cv
cp
f
208.441 519.664 mo
208.441 519.992 208.422 520.324 208.383 520.66 cv
208.344 520.996 208.277 521.32 208.184 521.633 cv
208.09 521.945 207.961 522.238 207.805 522.504 cv
207.645 522.777 207.445 523.012 207.207 523.215 cv
206.965 523.418 206.68 523.578 206.352 523.691 cv
206.02 523.805 205.637 523.859 205.203 523.863 cv
205.031 523.859 204.867 523.848 204.711 523.832 cv
204.551 523.809 204.41 523.785 204.285 523.754 cv
204.156 523.723 204.051 523.691 203.965 523.656 cv
203.879 523.621 203.816 523.586 203.777 523.551 cv
203.738 523.516 203.707 523.469 203.691 523.406 cv
203.668 523.352 203.66 523.27 203.664 523.16 cv
203.66 523.082 203.664 523.012 203.672 522.957 cv
203.68 522.906 203.688 522.867 203.699 522.84 cv
203.711 522.816 203.727 522.801 203.75 522.785 cv
203.766 522.777 203.793 522.77 203.828 522.77 cv
203.871 522.77 203.934 522.785 204.012 522.812 cv
204.09 522.844 204.188 522.875 204.305 522.91 cv
204.422 522.949 204.563 522.984 204.727 523.008 cv
204.887 523.039 205.066 523.051 205.266 523.051 cv
205.645 523.051 205.969 522.98 206.242 522.832 cv
206.512 522.691 206.734 522.492 206.906 522.242 cv
207.078 521.996 207.207 521.711 207.293 521.387 cv
207.379 521.066 207.426 520.727 207.434 520.363 cv
207.227 520.484 206.977 520.59 206.691 520.684 cv
206.398 520.777 206.066 520.824 205.695 520.824 cv
205.27 520.824 204.914 520.77 204.629 520.652 cv
204.34 520.543 204.109 520.383 203.938 520.18 cv
203.762 519.98 203.637 519.746 203.563 519.469 cv
203.484 519.199 203.449 518.898 203.449 518.574 cv
203.449 518.238 203.496 517.922 203.594 517.617 cv
203.691 517.316 203.844 517.047 204.051 516.816 cv
204.258 516.59 204.523 516.406 204.844 516.266 cv
205.164 516.129 205.547 516.062 205.992 516.059 cv
206.309 516.062 206.586 516.102 206.832 516.18 cv
207.074 516.262 207.289 516.379 207.469 516.527 cv
207.648 516.684 207.801 516.863 207.926 517.074 cv
208.051 517.285 208.148 517.527 208.227 517.797 cv
208.301 518.066 208.355 518.359 208.391 518.672 cv
208.422 518.992 208.441 519.32 208.441 519.664 cv
cp
207.414 519.551 mo
207.41 519.055 207.379 518.633 207.316 518.289 cv
207.25 517.949 207.152 517.672 207.023 517.461 cv
206.891 517.25 206.73 517.098 206.547 517.004 cv
206.355 516.91 206.141 516.863 205.898 516.863 cv
205.641 516.863 205.422 516.91 205.246 517 cv
205.063 517.094 204.914 517.219 204.805 517.371 cv
204.688 517.527 204.605 517.699 204.551 517.895 cv
204.496 518.09 204.469 518.293 204.469 518.496 cv
204.469 518.73 204.492 518.941 204.543 519.133 cv
204.59 519.324 204.668 519.484 204.781 519.617 cv
204.887 519.75 205.031 519.855 205.207 519.926 cv
205.379 520.004 205.594 520.039 205.859 520.035 cv
206.148 520.039 206.434 519.996 206.707 519.902 cv
206.98 519.816 207.215 519.699 207.414 519.551 cv
cp
f
225.051 523.355 mo
225.047 523.43 225.043 523.492 225.035 523.543 cv
225.023 523.598 225.008 523.641 224.988 523.668 cv
224.965 523.703 224.941 523.727 224.918 523.734 cv
224.895 523.75 224.867 523.754 224.84 523.754 cv
220.879 523.754 li
220.852 523.754 220.828 523.75 220.805 523.734 cv
220.781 523.727 220.758 523.703 220.738 523.668 cv
220.715 523.641 220.699 523.598 220.688 523.543 cv
220.672 523.492 220.664 523.43 220.668 523.355 cv
220.664 523.285 220.672 523.227 220.688 523.176 cv
220.699 523.125 220.711 523.082 220.73 523.047 cv
220.746 523.016 220.77 522.992 220.793 522.973 cv
220.816 522.957 220.844 522.945 220.879 522.945 cv
222.465 522.945 li
222.465 517.18 li
220.996 518.051 li
220.922 518.098 220.863 518.121 220.82 518.125 cv
220.773 518.137 220.738 518.129 220.711 518.098 cv
220.68 518.074 220.66 518.031 220.652 517.973 cv
220.645 517.914 220.641 517.84 220.641 517.746 cv
220.641 517.684 220.641 517.625 220.648 517.578 cv
220.652 517.531 220.664 517.492 220.676 517.461 cv
220.684 517.43 220.699 517.402 220.723 517.379 cv
220.746 517.355 220.773 517.332 220.809 517.309 cv
222.559 516.191 li
222.57 516.18 222.59 516.168 222.617 516.16 cv
222.637 516.152 222.668 516.145 222.703 516.137 cv
222.734 516.129 222.773 516.125 222.824 516.125 cv
222.867 516.125 222.926 516.125 223.004 516.121 cv
223.094 516.125 223.172 516.129 223.238 516.133 cv
223.297 516.145 223.348 516.156 223.383 516.164 cv
223.414 516.18 223.438 516.195 223.453 516.215 cv
223.465 516.238 223.469 516.262 223.473 516.285 cv
223.473 522.945 li
224.84 522.945 li
224.867 522.945 224.898 522.957 224.93 522.973 cv
224.957 522.992 224.977 523.016 224.996 523.047 cv
225.012 523.082 225.027 523.125 225.035 523.176 cv
225.043 523.227 225.047 523.285 225.051 523.355 cv
cp
f
231.402 519.945 mo
231.398 520.527 231.352 521.059 231.266 521.539 cv
231.172 522.023 231.02 522.437 230.809 522.781 cv
230.59 523.125 230.313 523.395 229.973 523.582 cv
229.625 523.77 229.203 523.859 228.703 523.863 cv
228.227 523.859 227.824 523.777 227.5 523.609 cv
227.172 523.441 226.91 523.191 226.711 522.859 cv
226.508 522.531 226.363 522.125 226.285 521.641 cv
226.199 521.16 226.16 520.605 226.16 519.98 cv
226.16 519.402 226.207 518.875 226.301 518.391 cv
226.395 517.914 226.547 517.5 226.758 517.148 cv
226.969 516.805 227.246 516.535 227.59 516.344 cv
227.934 516.156 228.355 516.062 228.855 516.059 cv
229.332 516.062 229.734 516.148 230.063 516.316 cv
230.391 516.488 230.652 516.738 230.852 517.066 cv
231.051 517.398 231.191 517.805 231.277 518.285 cv
231.355 518.77 231.398 519.32 231.402 519.945 cv
cp
230.371 520.016 mo
230.367 519.641 230.355 519.301 230.332 518.996 cv
230.305 518.695 230.262 518.43 230.211 518.199 cv
230.156 517.973 230.09 517.777 230.004 517.605 cv
229.918 517.441 229.816 517.305 229.703 517.195 cv
229.582 517.094 229.449 517.016 229.301 516.961 cv
229.152 516.914 228.984 516.887 228.797 516.887 cv
228.465 516.887 228.195 516.965 227.988 517.121 cv
227.777 517.277 227.613 517.492 227.496 517.766 cv
227.379 518.039 227.297 518.359 227.254 518.727 cv
227.211 519.094 227.191 519.488 227.191 519.91 cv
227.191 520.48 227.219 520.965 227.277 521.355 cv
227.336 521.754 227.43 522.074 227.555 522.324 cv
227.68 522.574 227.84 522.758 228.043 522.871 cv
228.238 522.984 228.48 523.039 228.762 523.039 cv
228.98 523.039 229.172 523.004 229.34 522.934 cv
229.504 522.863 229.645 522.766 229.766 522.633 cv
229.883 522.504 229.984 522.344 230.063 522.16 cv
230.141 521.98 230.203 521.777 230.25 521.551 cv
230.297 521.328 230.328 521.09 230.344 520.828 cv
230.359 520.57 230.367 520.297 230.371 520.016 cv
cp
f
244.781 523.355 mo
244.777 523.43 244.773 523.492 244.766 523.543 cv
244.754 523.598 244.738 523.641 244.719 523.668 cv
244.695 523.703 244.672 523.727 244.648 523.734 cv
244.625 523.75 244.598 523.754 244.57 523.754 cv
240.609 523.754 li
240.582 523.754 240.559 523.75 240.535 523.734 cv
240.512 523.727 240.488 523.703 240.469 523.668 cv
240.445 523.641 240.43 523.598 240.418 523.543 cv
240.402 523.492 240.395 523.43 240.398 523.355 cv
240.395 523.285 240.402 523.227 240.418 523.176 cv
240.43 523.125 240.441 523.082 240.461 523.047 cv
240.477 523.016 240.5 522.992 240.523 522.973 cv
240.547 522.957 240.574 522.945 240.609 522.945 cv
242.195 522.945 li
242.195 517.18 li
240.727 518.051 li
240.652 518.098 240.594 518.121 240.551 518.125 cv
240.504 518.137 240.469 518.129 240.441 518.098 cv
240.41 518.074 240.391 518.031 240.383 517.973 cv
240.375 517.914 240.371 517.84 240.371 517.746 cv
240.371 517.684 240.371 517.625 240.379 517.578 cv
240.383 517.531 240.395 517.492 240.406 517.461 cv
240.414 517.43 240.43 517.402 240.453 517.379 cv
240.477 517.355 240.504 517.332 240.539 517.309 cv
242.289 516.191 li
242.301 516.18 242.32 516.168 242.348 516.16 cv
242.367 516.152 242.398 516.145 242.434 516.137 cv
242.465 516.129 242.504 516.125 242.555 516.125 cv
242.598 516.125 242.656 516.125 242.734 516.121 cv
242.824 516.125 242.902 516.129 242.969 516.133 cv
243.027 516.145 243.078 516.156 243.113 516.164 cv
243.145 516.18 243.168 516.195 243.184 516.215 cv
243.195 516.238 243.199 516.262 243.203 516.285 cv
243.203 522.945 li
244.57 522.945 li
244.598 522.945 244.629 522.957 244.66 522.973 cv
244.688 522.992 244.707 523.016 244.727 523.047 cv
244.742 523.082 244.758 523.125 244.766 523.176 cv
244.773 523.227 244.777 523.285 244.781 523.355 cv
cp
f
250.898 523.355 mo
250.895 523.43 250.891 523.492 250.883 523.543 cv
250.871 523.598 250.855 523.641 250.836 523.668 cv
250.813 523.703 250.789 523.727 250.766 523.734 cv
250.742 523.75 250.715 523.754 250.688 523.754 cv
246.727 523.754 li
246.699 523.754 246.676 523.75 246.652 523.734 cv
246.629 523.727 246.605 523.703 246.586 523.668 cv
246.563 523.641 246.547 523.598 246.535 523.543 cv
246.52 523.492 246.512 523.43 246.516 523.355 cv
246.512 523.285 246.52 523.227 246.535 523.176 cv
246.547 523.125 246.559 523.082 246.578 523.047 cv
246.594 523.016 246.617 522.992 246.641 522.973 cv
246.664 522.957 246.691 522.945 246.727 522.945 cv
248.313 522.945 li
248.313 517.18 li
246.844 518.051 li
246.77 518.098 246.711 518.121 246.668 518.125 cv
246.621 518.137 246.586 518.129 246.559 518.098 cv
246.527 518.074 246.508 518.031 246.5 517.973 cv
246.492 517.914 246.488 517.84 246.488 517.746 cv
246.488 517.684 246.488 517.625 246.496 517.578 cv
246.5 517.531 246.512 517.492 246.523 517.461 cv
246.531 517.43 246.547 517.402 246.57 517.379 cv
246.594 517.355 246.621 517.332 246.656 517.309 cv
248.406 516.191 li
248.418 516.18 248.438 516.168 248.465 516.16 cv
248.484 516.152 248.516 516.145 248.551 516.137 cv
248.582 516.129 248.621 516.125 248.672 516.125 cv
248.715 516.125 248.773 516.125 248.852 516.121 cv
248.941 516.125 249.02 516.129 249.086 516.133 cv
249.145 516.145 249.195 516.156 249.23 516.164 cv
249.262 516.18 249.285 516.195 249.301 516.215 cv
249.313 516.238 249.316 516.262 249.32 516.285 cv
249.32 522.945 li
250.688 522.945 li
250.715 522.945 250.746 522.957 250.777 522.973 cv
250.805 522.992 250.824 523.016 250.844 523.047 cv
250.859 523.082 250.875 523.125 250.883 523.176 cv
250.891 523.227 250.895 523.285 250.898 523.355 cv
cp
f
264.488 523.355 mo
264.484 523.43 264.48 523.492 264.473 523.543 cv
264.461 523.598 264.445 523.641 264.426 523.668 cv
264.402 523.703 264.379 523.727 264.355 523.734 cv
264.332 523.75 264.305 523.754 264.277 523.754 cv
260.316 523.754 li
260.289 523.754 260.266 523.75 260.242 523.734 cv
260.219 523.727 260.195 523.703 260.176 523.668 cv
260.152 523.641 260.137 523.598 260.125 523.543 cv
260.109 523.492 260.102 523.43 260.105 523.355 cv
260.102 523.285 260.109 523.227 260.125 523.176 cv
260.137 523.125 260.148 523.082 260.168 523.047 cv
260.184 523.016 260.207 522.992 260.23 522.973 cv
260.254 522.957 260.281 522.945 260.316 522.945 cv
261.902 522.945 li
261.902 517.18 li
260.434 518.051 li
260.359 518.098 260.301 518.121 260.258 518.125 cv
260.211 518.137 260.176 518.129 260.148 518.098 cv
260.117 518.074 260.098 518.031 260.09 517.973 cv
260.082 517.914 260.078 517.84 260.078 517.746 cv
260.078 517.684 260.078 517.625 260.086 517.578 cv
260.09 517.531 260.102 517.492 260.113 517.461 cv
260.121 517.43 260.137 517.402 260.16 517.379 cv
260.184 517.355 260.211 517.332 260.246 517.309 cv
261.996 516.191 li
262.008 516.18 262.027 516.168 262.055 516.16 cv
262.074 516.152 262.105 516.145 262.141 516.137 cv
262.172 516.129 262.211 516.125 262.262 516.125 cv
262.305 516.125 262.363 516.125 262.441 516.121 cv
262.531 516.125 262.609 516.129 262.676 516.133 cv
262.734 516.145 262.785 516.156 262.82 516.164 cv
262.852 516.18 262.875 516.195 262.891 516.215 cv
262.902 516.238 262.906 516.262 262.91 516.285 cv
262.91 522.945 li
264.277 522.945 li
264.305 522.945 264.336 522.957 264.367 522.973 cv
264.395 522.992 264.414 523.016 264.434 523.047 cv
264.449 523.082 264.465 523.125 264.473 523.176 cv
264.48 523.227 264.484 523.285 264.488 523.355 cv
cp
f
270.594 523.32 mo
270.594 523.391 270.586 523.453 270.578 523.508 cv
270.563 523.562 270.551 523.609 270.535 523.645 cv
270.52 523.684 270.496 523.711 270.465 523.727 cv
270.434 523.746 270.402 523.754 270.371 523.754 cv
266.18 523.754 li
266.125 523.754 266.078 523.75 266.039 523.734 cv
265.996 523.727 265.961 523.703 265.934 523.668 cv
265.902 523.641 265.879 523.594 265.867 523.531 cv
265.852 523.473 265.848 523.402 265.848 523.316 cv
265.848 523.242 265.848 523.172 265.855 523.109 cv
265.859 523.051 265.875 523 265.895 522.953 cv
265.914 522.91 265.938 522.867 265.969 522.82 cv
265.996 522.781 266.035 522.73 266.09 522.676 cv
267.605 521.117 li
267.953 520.758 268.23 520.437 268.445 520.152 cv
268.656 519.867 268.82 519.605 268.938 519.371 cv
269.047 519.137 269.125 518.926 269.164 518.734 cv
269.199 518.543 269.215 518.363 269.219 518.191 cv
269.215 518.027 269.188 517.867 269.133 517.715 cv
269.074 517.566 268.992 517.434 268.887 517.32 cv
268.777 517.211 268.645 517.121 268.484 517.051 cv
268.32 516.984 268.133 516.953 267.93 516.949 cv
267.68 516.953 267.461 516.984 267.266 517.051 cv
267.07 517.121 266.898 517.195 266.75 517.27 cv
266.602 517.352 266.477 517.422 266.383 517.484 cv
266.281 517.551 266.211 517.586 266.164 517.582 cv
266.133 517.586 266.105 517.578 266.086 517.559 cv
266.063 517.547 266.043 517.52 266.031 517.484 cv
266.016 517.453 266.008 517.406 266 517.344 cv
265.992 517.285 265.988 517.215 265.988 517.133 cv
265.988 517.074 265.988 517.023 265.992 516.98 cv
265.996 516.941 266.004 516.906 266.016 516.871 cv
266.023 516.844 266.035 516.812 266.055 516.781 cv
266.066 516.754 266.098 516.723 266.148 516.68 cv
266.191 516.641 266.273 516.582 266.391 516.512 cv
266.504 516.441 266.648 516.375 266.824 516.305 cv
266.996 516.238 267.188 516.18 267.398 516.129 cv
267.605 516.086 267.824 516.062 268.055 516.059 cv
268.422 516.062 268.742 516.113 269.02 516.215 cv
269.293 516.32 269.523 516.461 269.703 516.641 cv
269.883 516.82 270.02 517.031 270.113 517.27 cv
270.203 517.508 270.246 517.762 270.25 518.027 cv
270.246 518.277 270.227 518.52 270.184 518.754 cv
270.137 518.996 270.043 519.254 269.91 519.531 cv
269.77 519.812 269.57 520.125 269.309 520.465 cv
269.047 520.809 268.699 521.199 268.266 521.645 cv
267.066 522.898 li
270.367 522.898 li
270.395 522.898 270.426 522.91 270.457 522.926 cv
270.484 522.945 270.508 522.969 270.531 523.004 cv
270.547 523.043 270.563 523.09 270.578 523.137 cv
270.586 523.191 270.594 523.25 270.594 523.32 cv
cp
f
284.191 523.355 mo
284.188 523.43 284.184 523.492 284.176 523.543 cv
284.164 523.598 284.148 523.641 284.129 523.668 cv
284.105 523.703 284.082 523.727 284.059 523.734 cv
284.035 523.75 284.008 523.754 283.98 523.754 cv
280.02 523.754 li
279.992 523.754 279.969 523.75 279.945 523.734 cv
279.922 523.727 279.898 523.703 279.879 523.668 cv
279.855 523.641 279.84 523.598 279.828 523.543 cv
279.813 523.492 279.805 523.43 279.809 523.355 cv
279.805 523.285 279.813 523.227 279.828 523.176 cv
279.84 523.125 279.852 523.082 279.871 523.047 cv
279.887 523.016 279.91 522.992 279.934 522.973 cv
279.957 522.957 279.984 522.945 280.02 522.945 cv
281.605 522.945 li
281.605 517.18 li
280.137 518.051 li
280.063 518.098 280.004 518.121 279.961 518.125 cv
279.914 518.137 279.879 518.129 279.852 518.098 cv
279.82 518.074 279.801 518.031 279.793 517.973 cv
279.785 517.914 279.781 517.84 279.781 517.746 cv
279.781 517.684 279.781 517.625 279.789 517.578 cv
279.793 517.531 279.805 517.492 279.816 517.461 cv
279.824 517.43 279.84 517.402 279.863 517.379 cv
279.887 517.355 279.914 517.332 279.949 517.309 cv
281.699 516.191 li
281.711 516.18 281.73 516.168 281.758 516.16 cv
281.777 516.152 281.809 516.145 281.844 516.137 cv
281.875 516.129 281.914 516.125 281.965 516.125 cv
282.008 516.125 282.066 516.125 282.145 516.121 cv
282.234 516.125 282.313 516.129 282.379 516.133 cv
282.438 516.145 282.488 516.156 282.523 516.164 cv
282.555 516.18 282.578 516.195 282.594 516.215 cv
282.605 516.238 282.609 516.262 282.613 516.285 cv
282.613 522.945 li
283.98 522.945 li
284.008 522.945 284.039 522.957 284.07 522.973 cv
284.098 522.992 284.117 523.016 284.137 523.047 cv
284.152 523.082 284.168 523.125 284.176 523.176 cv
284.184 523.227 284.188 523.285 284.191 523.355 cv
cp
f
290.234 521.586 mo
290.234 521.934 290.172 522.25 290.051 522.527 cv
289.93 522.809 289.758 523.047 289.531 523.246 cv
289.305 523.445 289.023 523.598 288.691 523.703 cv
288.359 523.809 287.984 523.859 287.566 523.863 cv
287.313 523.859 287.074 523.84 286.855 523.801 cv
286.633 523.762 286.438 523.715 286.27 523.66 cv
286.094 523.605 285.953 523.547 285.84 523.484 cv
285.723 523.422 285.648 523.379 285.625 523.352 cv
285.594 523.324 285.574 523.297 285.559 523.27 cv
285.543 523.242 285.527 523.207 285.516 523.168 cv
285.504 523.129 285.496 523.082 285.488 523.027 cv
285.48 522.973 285.477 522.902 285.48 522.816 cv
285.477 522.676 285.492 522.578 285.523 522.523 cv
285.551 522.469 285.59 522.441 285.645 522.441 cv
285.68 522.441 285.75 522.473 285.855 522.535 cv
285.961 522.598 286.098 522.668 286.266 522.738 cv
286.43 522.816 286.625 522.883 286.848 522.941 cv
287.07 523.008 287.316 523.039 287.594 523.035 cv
287.852 523.039 288.086 523.004 288.289 522.934 cv
288.488 522.867 288.656 522.773 288.793 522.652 cv
288.93 522.535 289.031 522.395 289.102 522.223 cv
289.168 522.059 289.203 521.875 289.203 521.68 cv
289.203 521.465 289.156 521.273 289.07 521.098 cv
288.98 520.93 288.855 520.781 288.691 520.652 cv
288.523 520.531 288.316 520.434 288.074 520.367 cv
287.824 520.305 287.547 520.273 287.242 520.27 cv
286.5 520.27 li
286.465 520.273 286.434 520.266 286.402 520.25 cv
286.371 520.234 286.344 520.211 286.324 520.18 cv
286.301 520.148 286.281 520.109 286.27 520.059 cv
286.254 520.008 286.25 519.941 286.25 519.855 cv
286.25 519.785 286.254 519.723 286.266 519.672 cv
286.277 519.625 286.293 519.586 286.316 519.555 cv
286.332 519.527 286.359 519.508 286.391 519.492 cv
286.418 519.484 286.449 519.477 286.484 519.473 cv
287.145 519.473 li
287.402 519.477 287.633 519.441 287.84 519.371 cv
288.043 519.305 288.219 519.211 288.359 519.082 cv
288.5 518.961 288.609 518.812 288.688 518.637 cv
288.766 518.465 288.805 518.27 288.805 518.051 cv
288.805 517.898 288.777 517.75 288.727 517.605 cv
288.676 517.465 288.602 517.34 288.5 517.234 cv
288.398 517.129 288.266 517.047 288.109 516.984 cv
287.945 516.93 287.766 516.898 287.563 516.895 cv
287.336 516.898 287.125 516.934 286.938 516.996 cv
286.742 517.066 286.574 517.137 286.43 517.215 cv
286.277 517.293 286.156 517.367 286.063 517.434 cv
285.965 517.504 285.895 517.539 285.855 517.535 cv
285.828 517.539 285.805 517.535 285.785 517.523 cv
285.762 517.516 285.742 517.496 285.73 517.465 cv
285.715 517.437 285.707 517.395 285.699 517.34 cv
285.691 517.289 285.688 517.219 285.691 517.133 cv
285.688 517.074 285.691 517.023 285.699 516.977 cv
285.703 516.934 285.711 516.895 285.723 516.859 cv
285.73 516.828 285.742 516.797 285.762 516.77 cv
285.773 516.746 285.801 516.715 285.84 516.676 cv
285.879 516.637 285.953 516.582 286.066 516.512 cv
286.18 516.441 286.32 516.375 286.488 516.305 cv
286.652 516.238 286.844 516.18 287.063 516.129 cv
287.277 516.086 287.512 516.062 287.762 516.059 cv
288.113 516.062 288.422 516.105 288.688 516.195 cv
288.953 516.289 289.172 516.418 289.352 516.578 cv
289.527 516.746 289.66 516.941 289.75 517.168 cv
289.836 517.395 289.883 517.648 289.883 517.926 cv
289.883 518.164 289.852 518.387 289.789 518.59 cv
289.727 518.797 289.633 518.977 289.512 519.133 cv
289.391 519.293 289.242 519.43 289.066 519.539 cv
288.891 519.656 288.688 519.73 288.457 519.77 cv
288.457 519.781 li
288.719 519.812 288.957 519.879 289.176 519.98 cv
289.391 520.082 289.578 520.211 289.738 520.367 cv
289.891 520.523 290.012 520.707 290.102 520.918 cv
290.188 521.129 290.234 521.352 290.234 521.586 cv
cp
f
303.891 523.355 mo
303.887 523.43 303.883 523.492 303.875 523.543 cv
303.863 523.598 303.848 523.641 303.828 523.668 cv
303.805 523.703 303.781 523.727 303.758 523.734 cv
303.734 523.75 303.707 523.754 303.68 523.754 cv
299.719 523.754 li
299.691 523.754 299.668 523.75 299.645 523.734 cv
299.621 523.727 299.598 523.703 299.578 523.668 cv
299.555 523.641 299.539 523.598 299.527 523.543 cv
299.512 523.492 299.504 523.43 299.508 523.355 cv
299.504 523.285 299.512 523.227 299.527 523.176 cv
299.539 523.125 299.551 523.082 299.57 523.047 cv
299.586 523.016 299.609 522.992 299.633 522.973 cv
299.656 522.957 299.684 522.945 299.719 522.945 cv
301.305 522.945 li
301.305 517.18 li
299.836 518.051 li
299.762 518.098 299.703 518.121 299.66 518.125 cv
299.613 518.137 299.578 518.129 299.551 518.098 cv
299.52 518.074 299.5 518.031 299.492 517.973 cv
299.484 517.914 299.48 517.84 299.48 517.746 cv
299.48 517.684 299.48 517.625 299.488 517.578 cv
299.492 517.531 299.504 517.492 299.516 517.461 cv
299.523 517.43 299.539 517.402 299.563 517.379 cv
299.586 517.355 299.613 517.332 299.648 517.309 cv
301.398 516.191 li
301.41 516.18 301.43 516.168 301.457 516.16 cv
301.477 516.152 301.508 516.145 301.543 516.137 cv
301.574 516.129 301.613 516.125 301.664 516.125 cv
301.707 516.125 301.766 516.125 301.844 516.121 cv
301.934 516.125 302.012 516.129 302.078 516.133 cv
302.137 516.145 302.188 516.156 302.223 516.164 cv
302.254 516.18 302.277 516.195 302.293 516.215 cv
302.305 516.238 302.309 516.262 302.313 516.285 cv
302.313 522.945 li
303.68 522.945 li
303.707 522.945 303.738 522.957 303.77 522.973 cv
303.797 522.992 303.816 523.016 303.836 523.047 cv
303.852 523.082 303.867 523.125 303.875 523.176 cv
303.883 523.227 303.887 523.285 303.891 523.355 cv
cp
f
310.313 521.598 mo
310.309 521.73 310.289 521.832 310.254 521.902 cv
310.211 521.977 310.156 522.016 310.094 522.012 cv
309.234 522.012 li
309.234 523.605 li
309.23 523.641 309.223 523.668 309.211 523.687 cv
309.191 523.711 309.164 523.727 309.125 523.742 cv
309.086 523.758 309.031 523.77 308.969 523.777 cv
308.902 523.785 308.82 523.789 308.723 523.789 cv
308.621 523.789 308.543 523.785 308.48 523.777 cv
308.418 523.77 308.367 523.758 308.328 523.742 cv
308.289 523.727 308.262 523.711 308.246 523.687 cv
308.23 523.668 308.223 523.641 308.227 523.605 cv
308.227 522.012 li
305.125 522.012 li
305.078 522.016 305.043 522.008 305.012 521.996 cv
304.98 521.988 304.949 521.969 304.926 521.934 cv
304.895 521.906 304.879 521.859 304.871 521.797 cv
304.863 521.738 304.859 521.664 304.859 521.566 cv
304.859 521.496 304.859 521.43 304.863 521.371 cv
304.867 521.312 304.875 521.258 304.887 521.211 cv
304.898 521.164 304.914 521.117 304.934 521.07 cv
304.953 521.023 304.977 520.977 305.004 520.926 cv
307.707 516.316 li
307.727 516.289 307.754 516.262 307.793 516.234 cv
307.828 516.215 307.879 516.195 307.941 516.176 cv
308 516.164 308.07 516.152 308.16 516.145 cv
308.246 516.141 308.352 516.137 308.473 516.137 cv
308.602 516.137 308.715 516.145 308.813 516.152 cv
308.91 516.168 308.988 516.18 309.051 516.191 cv
309.105 516.211 309.152 516.23 309.188 516.254 cv
309.215 516.277 309.23 516.309 309.234 516.34 cv
309.234 521.184 li
310.094 521.184 li
310.156 521.187 310.211 521.223 310.25 521.285 cv
310.289 521.355 310.309 521.457 310.313 521.598 cv
cp
308.227 517.02 mo
308.219 517.02 li
305.781 521.184 li
308.227 521.184 li
cp
f
323.602 523.355 mo
323.598 523.43 323.594 523.492 323.586 523.543 cv
323.574 523.598 323.559 523.641 323.539 523.668 cv
323.516 523.703 323.492 523.727 323.469 523.734 cv
323.445 523.75 323.418 523.754 323.391 523.754 cv
319.43 523.754 li
319.402 523.754 319.379 523.75 319.355 523.734 cv
319.332 523.727 319.309 523.703 319.289 523.668 cv
319.266 523.641 319.25 523.598 319.238 523.543 cv
319.223 523.492 319.215 523.43 319.219 523.355 cv
319.215 523.285 319.223 523.227 319.238 523.176 cv
319.25 523.125 319.262 523.082 319.281 523.047 cv
319.297 523.016 319.32 522.992 319.344 522.973 cv
319.367 522.957 319.395 522.945 319.43 522.945 cv
321.016 522.945 li
321.016 517.18 li
319.547 518.051 li
319.473 518.098 319.414 518.121 319.371 518.125 cv
319.324 518.137 319.289 518.129 319.262 518.098 cv
319.23 518.074 319.211 518.031 319.203 517.973 cv
319.195 517.914 319.191 517.84 319.191 517.746 cv
319.191 517.684 319.191 517.625 319.199 517.578 cv
319.203 517.531 319.215 517.492 319.227 517.461 cv
319.234 517.43 319.25 517.402 319.273 517.379 cv
319.297 517.355 319.324 517.332 319.359 517.309 cv
321.109 516.191 li
321.121 516.18 321.141 516.168 321.168 516.16 cv
321.188 516.152 321.219 516.145 321.254 516.137 cv
321.285 516.129 321.324 516.125 321.375 516.125 cv
321.418 516.125 321.477 516.125 321.555 516.121 cv
321.645 516.125 321.723 516.129 321.789 516.133 cv
321.848 516.145 321.898 516.156 321.934 516.164 cv
321.965 516.18 321.988 516.195 322.004 516.215 cv
322.016 516.238 322.02 516.262 322.023 516.285 cv
322.023 522.945 li
323.391 522.945 li
323.418 522.945 323.449 522.957 323.48 522.973 cv
323.508 522.992 323.527 523.016 323.547 523.047 cv
323.563 523.082 323.578 523.125 323.586 523.176 cv
323.594 523.227 323.598 523.285 323.602 523.355 cv
cp
f
329.668 521.316 mo
329.668 521.723 329.598 522.086 329.461 522.402 cv
329.324 522.719 329.133 522.984 328.883 523.203 cv
328.633 523.422 328.332 523.586 327.988 523.695 cv
327.637 523.805 327.254 523.859 326.836 523.863 cv
326.598 523.859 326.375 523.844 326.168 523.812 cv
325.953 523.781 325.766 523.742 325.605 523.695 cv
325.438 523.648 325.305 523.602 325.203 523.551 cv
325.098 523.508 325.027 523.469 325 523.437 cv
324.969 523.41 324.949 523.387 324.938 523.359 cv
324.926 523.34 324.914 523.312 324.906 523.277 cv
324.891 523.246 324.887 523.203 324.887 523.152 cv
324.883 523.102 324.879 523.039 324.883 522.969 cv
324.879 522.906 324.883 522.848 324.891 522.793 cv
324.895 522.738 324.906 522.695 324.922 522.664 cv
324.938 522.633 324.953 522.609 324.977 522.59 cv
324.992 522.578 325.02 522.57 325.051 522.566 cv
325.09 522.57 325.148 522.594 325.23 522.641 cv
325.313 522.687 325.422 522.742 325.563 522.797 cv
325.699 522.855 325.871 522.906 326.078 522.957 cv
326.281 523.012 326.527 523.039 326.809 523.035 cv
327.07 523.039 327.309 523.008 327.531 522.941 cv
327.746 522.883 327.934 522.785 328.094 522.648 cv
328.25 522.52 328.375 522.352 328.465 522.148 cv
328.555 521.945 328.602 521.699 328.602 521.41 cv
328.602 521.168 328.563 520.957 328.488 520.77 cv
328.41 520.586 328.293 520.43 328.137 520.305 cv
327.977 520.184 327.777 520.094 327.535 520.031 cv
327.293 519.977 327.004 519.945 326.668 519.941 cv
326.43 519.945 326.223 519.957 326.055 519.977 cv
325.879 520.004 325.719 520.016 325.57 520.012 cv
325.457 520.016 325.379 519.988 325.336 519.934 cv
325.285 519.883 325.262 519.785 325.266 519.641 cv
325.266 516.551 li
325.262 516.426 325.293 516.328 325.355 516.266 cv
325.418 516.203 325.504 516.172 325.617 516.172 cv
328.977 516.172 li
329.008 516.172 329.035 516.184 329.066 516.199 cv
329.09 516.219 329.117 516.242 329.141 516.277 cv
329.16 516.316 329.172 516.363 329.184 516.414 cv
329.191 516.473 329.199 516.535 329.199 516.605 cv
329.199 516.746 329.18 516.855 329.141 516.934 cv
329.102 517.012 329.047 517.051 328.984 517.051 cv
326.273 517.051 li
326.273 519.176 li
326.402 519.16 326.539 519.148 326.68 519.145 cv
326.816 519.141 326.973 519.137 327.156 519.137 cv
327.57 519.137 327.938 519.191 328.25 519.293 cv
328.563 519.402 328.82 519.547 329.031 519.734 cv
329.238 519.922 329.398 520.152 329.508 520.422 cv
329.613 520.691 329.668 520.988 329.668 521.316 cv
cp
f
343.328 523.355 mo
343.324 523.43 343.32 523.492 343.313 523.543 cv
343.301 523.598 343.285 523.641 343.266 523.668 cv
343.242 523.703 343.219 523.727 343.195 523.734 cv
343.172 523.75 343.145 523.754 343.117 523.754 cv
339.156 523.754 li
339.129 523.754 339.105 523.75 339.082 523.734 cv
339.059 523.727 339.035 523.703 339.016 523.668 cv
338.992 523.641 338.977 523.598 338.965 523.543 cv
338.949 523.492 338.941 523.43 338.945 523.355 cv
338.941 523.285 338.949 523.227 338.965 523.176 cv
338.977 523.125 338.988 523.082 339.008 523.047 cv
339.023 523.016 339.047 522.992 339.07 522.973 cv
339.094 522.957 339.121 522.945 339.156 522.945 cv
340.742 522.945 li
340.742 517.18 li
339.273 518.051 li
339.199 518.098 339.141 518.121 339.098 518.125 cv
339.051 518.137 339.016 518.129 338.988 518.098 cv
338.957 518.074 338.938 518.031 338.93 517.973 cv
338.922 517.914 338.918 517.84 338.918 517.746 cv
338.918 517.684 338.918 517.625 338.926 517.578 cv
338.93 517.531 338.941 517.492 338.953 517.461 cv
338.961 517.43 338.977 517.402 339 517.379 cv
339.023 517.355 339.051 517.332 339.086 517.309 cv
340.836 516.191 li
340.848 516.18 340.867 516.168 340.895 516.16 cv
340.914 516.152 340.945 516.145 340.98 516.137 cv
341.012 516.129 341.051 516.125 341.102 516.125 cv
341.145 516.125 341.203 516.125 341.281 516.121 cv
341.371 516.125 341.449 516.129 341.516 516.133 cv
341.574 516.145 341.625 516.156 341.66 516.164 cv
341.691 516.18 341.715 516.195 341.73 516.215 cv
341.742 516.238 341.746 516.262 341.75 516.285 cv
341.75 522.945 li
343.117 522.945 li
343.145 522.945 343.176 522.957 343.207 522.973 cv
343.234 522.992 343.254 523.016 343.273 523.047 cv
343.289 523.082 343.305 523.125 343.313 523.176 cv
343.32 523.227 343.324 523.285 343.328 523.355 cv
cp
f
349.629 521.301 mo
349.625 521.633 349.574 521.953 349.477 522.266 cv
349.371 522.578 349.215 522.852 349.008 523.086 cv
348.793 523.32 348.527 523.512 348.203 523.652 cv
347.875 523.793 347.492 523.859 347.055 523.863 cv
346.738 523.859 346.457 523.824 346.219 523.746 cv
345.973 523.672 345.762 523.559 345.586 523.414 cv
345.402 523.273 345.254 523.098 345.137 522.883 cv
345.016 522.676 344.918 522.434 344.848 522.16 cv
344.77 521.891 344.719 521.598 344.691 521.273 cv
344.656 520.957 344.641 520.613 344.645 520.246 cv
344.641 519.922 344.66 519.594 344.699 519.262 cv
344.734 518.93 344.797 518.609 344.887 518.301 cv
344.973 517.992 345.094 517.703 345.25 517.43 cv
345.406 517.16 345.598 516.922 345.832 516.719 cv
346.063 516.52 346.344 516.359 346.668 516.242 cv
346.988 516.125 347.363 516.066 347.801 516.066 cv
347.941 516.066 348.09 516.078 348.238 516.094 cv
348.387 516.117 348.523 516.141 348.648 516.164 cv
348.773 516.195 348.879 516.227 348.965 516.262 cv
349.051 516.297 349.105 516.324 349.133 516.348 cv
349.16 516.371 349.18 516.395 349.195 516.418 cv
349.203 516.441 349.215 516.469 349.227 516.5 cv
349.23 516.531 349.238 516.566 349.246 516.598 cv
349.25 516.637 349.25 516.68 349.254 516.734 cv
349.25 516.805 349.25 516.867 349.25 516.918 cv
349.246 516.969 349.238 517.008 349.227 517.039 cv
349.211 517.07 349.191 517.094 349.172 517.109 cv
349.148 517.125 349.121 517.133 349.09 517.133 cv
349.043 517.133 348.984 517.121 348.91 517.094 cv
348.836 517.066 348.746 517.035 348.641 517 cv
348.535 516.969 348.406 516.937 348.258 516.91 cv
348.105 516.887 347.934 516.875 347.734 516.871 cv
347.371 516.875 347.059 516.949 346.797 517.094 cv
346.531 517.246 346.316 517.445 346.152 517.691 cv
345.988 517.945 345.863 518.234 345.785 518.562 cv
345.703 518.891 345.66 519.234 345.648 519.594 cv
345.75 519.535 345.863 519.477 345.992 519.418 cv
346.117 519.363 346.254 519.312 346.406 519.262 cv
346.555 519.219 346.715 519.18 346.883 519.148 cv
347.051 519.117 347.23 519.102 347.426 519.102 cv
347.832 519.102 348.18 519.16 348.461 519.27 cv
348.742 519.383 348.969 519.535 349.141 519.73 cv
349.313 519.93 349.438 520.164 349.516 520.43 cv
349.59 520.703 349.625 520.992 349.629 521.301 cv
cp
348.605 521.395 mo
348.602 521.168 348.578 520.961 348.539 520.773 cv
348.492 520.59 348.418 520.434 348.313 520.305 cv
348.207 520.176 348.066 520.074 347.891 520.004 cv
347.715 519.934 347.5 519.898 347.242 519.898 cv
347.098 519.898 346.953 519.914 346.809 519.937 cv
346.66 519.965 346.52 520 346.387 520.043 cv
346.254 520.09 346.125 520.141 346 520.203 cv
345.875 520.266 345.762 520.332 345.668 520.395 cv
345.664 520.902 345.695 521.324 345.762 521.664 cv
345.824 522.004 345.918 522.277 346.043 522.48 cv
346.164 522.687 346.32 522.832 346.504 522.918 cv
346.684 523.008 346.898 523.051 347.148 523.051 cv
347.398 523.051 347.613 523.004 347.797 522.91 cv
347.98 522.816 348.133 522.691 348.254 522.531 cv
348.375 522.375 348.465 522.199 348.52 522 cv
348.574 521.805 348.602 521.602 348.605 521.395 cv
cp
f
363.031 523.355 mo
363.027 523.43 363.023 523.492 363.016 523.543 cv
363.004 523.598 362.988 523.641 362.969 523.668 cv
362.945 523.703 362.922 523.727 362.898 523.734 cv
362.875 523.75 362.848 523.754 362.82 523.754 cv
358.859 523.754 li
358.832 523.754 358.809 523.75 358.785 523.734 cv
358.762 523.727 358.738 523.703 358.719 523.668 cv
358.695 523.641 358.68 523.598 358.668 523.543 cv
358.652 523.492 358.645 523.43 358.648 523.355 cv
358.645 523.285 358.652 523.227 358.668 523.176 cv
358.68 523.125 358.691 523.082 358.711 523.047 cv
358.727 523.016 358.75 522.992 358.773 522.973 cv
358.797 522.957 358.824 522.945 358.859 522.945 cv
360.445 522.945 li
360.445 517.18 li
358.977 518.051 li
358.902 518.098 358.844 518.121 358.801 518.125 cv
358.754 518.137 358.719 518.129 358.691 518.098 cv
358.66 518.074 358.641 518.031 358.633 517.973 cv
358.625 517.914 358.621 517.84 358.621 517.746 cv
358.621 517.684 358.621 517.625 358.629 517.578 cv
358.633 517.531 358.645 517.492 358.656 517.461 cv
358.664 517.43 358.68 517.402 358.703 517.379 cv
358.727 517.355 358.754 517.332 358.789 517.309 cv
360.539 516.191 li
360.551 516.18 360.57 516.168 360.598 516.16 cv
360.617 516.152 360.648 516.145 360.684 516.137 cv
360.715 516.129 360.754 516.125 360.805 516.125 cv
360.848 516.125 360.906 516.125 360.984 516.121 cv
361.074 516.125 361.152 516.129 361.219 516.133 cv
361.277 516.145 361.328 516.156 361.363 516.164 cv
361.395 516.18 361.418 516.195 361.434 516.215 cv
361.445 516.238 361.449 516.262 361.453 516.285 cv
361.453 522.945 li
362.82 522.945 li
362.848 522.945 362.879 522.957 362.91 522.973 cv
362.938 522.992 362.957 523.016 362.977 523.047 cv
362.992 523.082 363.008 523.125 363.016 523.176 cv
363.023 523.227 363.027 523.285 363.031 523.355 cv
cp
f
369.242 516.605 mo
369.238 516.676 369.234 516.742 369.234 516.797 cv
369.227 516.855 369.219 516.91 369.211 516.961 cv
369.195 517.016 369.184 517.066 369.168 517.113 cv
369.152 517.164 369.133 517.215 369.109 517.27 cv
366.379 523.559 li
366.359 523.609 366.332 523.648 366.305 523.676 cv
366.273 523.707 366.238 523.73 366.191 523.746 cv
366.145 523.762 366.086 523.77 366.02 523.777 cv
365.945 523.785 365.859 523.789 365.766 523.789 cv
365.625 523.789 365.523 523.781 365.453 523.77 cv
365.379 523.758 365.324 523.742 365.293 523.715 cv
365.258 523.691 365.242 523.66 365.246 523.621 cv
365.25 523.586 365.266 523.543 365.289 523.488 cv
368.16 517.059 li
364.523 517.059 li
364.445 517.062 364.391 517.023 364.352 516.941 cv
364.313 516.867 364.293 516.758 364.297 516.613 cv
364.293 516.539 364.297 516.473 364.313 516.418 cv
364.32 516.363 364.336 516.32 364.355 516.281 cv
364.375 516.246 364.398 516.219 364.426 516.199 cv
364.453 516.184 364.484 516.172 364.523 516.172 cv
368.938 516.172 li
368.992 516.172 369.039 516.18 369.082 516.191 cv
369.121 516.203 369.152 516.227 369.176 516.262 cv
369.195 516.297 369.215 516.34 369.227 516.395 cv
369.234 516.449 369.238 516.52 369.242 516.605 cv
cp
f
382.73 523.355 mo
382.727 523.43 382.723 523.492 382.715 523.543 cv
382.703 523.598 382.688 523.641 382.668 523.668 cv
382.645 523.703 382.621 523.727 382.598 523.734 cv
382.574 523.75 382.547 523.754 382.52 523.754 cv
378.559 523.754 li
378.531 523.754 378.508 523.75 378.484 523.734 cv
378.461 523.727 378.438 523.703 378.418 523.668 cv
378.395 523.641 378.379 523.598 378.367 523.543 cv
378.352 523.492 378.344 523.43 378.348 523.355 cv
378.344 523.285 378.352 523.227 378.367 523.176 cv
378.379 523.125 378.391 523.082 378.41 523.047 cv
378.426 523.016 378.449 522.992 378.473 522.973 cv
378.496 522.957 378.523 522.945 378.559 522.945 cv
380.145 522.945 li
380.145 517.18 li
378.676 518.051 li
378.602 518.098 378.543 518.121 378.5 518.125 cv
378.453 518.137 378.418 518.129 378.391 518.098 cv
378.359 518.074 378.34 518.031 378.332 517.973 cv
378.324 517.914 378.32 517.84 378.32 517.746 cv
378.32 517.684 378.32 517.625 378.328 517.578 cv
378.332 517.531 378.344 517.492 378.355 517.461 cv
378.363 517.43 378.379 517.402 378.402 517.379 cv
378.426 517.355 378.453 517.332 378.488 517.309 cv
380.238 516.191 li
380.25 516.18 380.27 516.168 380.297 516.16 cv
380.316 516.152 380.348 516.145 380.383 516.137 cv
380.414 516.129 380.453 516.125 380.504 516.125 cv
380.547 516.125 380.605 516.125 380.684 516.121 cv
380.773 516.125 380.852 516.129 380.918 516.133 cv
380.977 516.145 381.027 516.156 381.063 516.164 cv
381.094 516.18 381.117 516.195 381.133 516.215 cv
381.145 516.238 381.148 516.262 381.152 516.285 cv
381.152 522.945 li
382.52 522.945 li
382.547 522.945 382.578 522.957 382.609 522.973 cv
382.637 522.992 382.656 523.016 382.676 523.047 cv
382.691 523.082 382.707 523.125 382.715 523.176 cv
382.723 523.227 382.727 523.285 382.73 523.355 cv
cp
f
389.012 521.809 mo
389.012 522.137 388.953 522.43 388.836 522.684 cv
388.719 522.941 388.547 523.156 388.328 523.332 cv
388.105 523.512 387.836 523.645 387.512 523.73 cv
387.184 523.816 386.813 523.859 386.398 523.863 cv
386.008 523.859 385.656 523.82 385.348 523.742 cv
385.039 523.664 384.777 523.543 384.563 523.379 cv
384.348 523.219 384.184 523.023 384.07 522.785 cv
383.957 522.555 383.902 522.285 383.902 521.984 cv
383.902 521.75 383.941 521.531 384.02 521.328 cv
384.098 521.129 384.207 520.945 384.355 520.777 cv
384.5 520.613 384.684 520.457 384.898 520.309 cv
385.109 520.16 385.352 520.02 385.625 519.887 cv
385.391 519.77 385.184 519.645 385.004 519.504 cv
384.824 519.371 384.672 519.223 384.547 519.062 cv
384.422 518.906 384.324 518.738 384.262 518.555 cv
384.191 518.379 384.16 518.184 384.164 517.973 cv
384.16 517.711 384.207 517.461 384.309 517.227 cv
384.402 516.992 384.547 516.789 384.742 516.617 cv
384.93 516.445 385.176 516.312 385.48 516.211 cv
385.777 516.113 386.129 516.062 386.527 516.059 cv
386.91 516.062 387.238 516.109 387.52 516.199 cv
387.793 516.293 388.023 516.418 388.211 516.574 cv
388.391 516.734 388.527 516.918 388.613 517.133 cv
388.699 517.352 388.742 517.582 388.742 517.824 cv
388.742 518.023 388.707 518.215 388.645 518.398 cv
388.574 518.586 388.48 518.762 388.359 518.922 cv
388.23 519.09 388.078 519.242 387.898 519.383 cv
387.719 519.523 387.512 519.656 387.277 519.781 cv
387.555 519.922 387.801 520.062 388.02 520.203 cv
388.234 520.348 388.414 520.504 388.563 520.668 cv
388.703 520.836 388.816 521.012 388.895 521.195 cv
388.973 521.383 389.012 521.586 389.012 521.809 cv
cp
387.746 517.918 mo
387.746 517.754 387.715 517.605 387.66 517.473 cv
387.602 517.34 387.52 517.227 387.414 517.133 cv
387.301 517.039 387.164 516.969 387.004 516.922 cv
386.84 516.875 386.656 516.852 386.453 516.848 cv
386.027 516.852 385.707 516.945 385.492 517.133 cv
385.273 517.324 385.168 517.586 385.168 517.918 cv
385.168 518.07 385.191 518.215 385.246 518.344 cv
385.297 518.477 385.379 518.598 385.492 518.715 cv
385.602 518.832 385.742 518.949 385.914 519.059 cv
386.082 519.172 386.285 519.285 386.523 519.406 cv
386.914 519.203 387.219 518.98 387.43 518.734 cv
387.641 518.488 387.746 518.215 387.746 517.918 cv
cp
387.992 521.914 mo
387.992 521.734 387.957 521.574 387.891 521.426 cv
387.824 521.285 387.723 521.148 387.59 521.016 cv
387.453 520.891 387.285 520.766 387.086 520.645 cv
386.883 520.527 386.652 520.402 386.387 520.273 cv
386.137 520.398 385.918 520.52 385.738 520.637 cv
385.551 520.758 385.398 520.883 385.281 521.012 cv
385.156 521.145 385.066 521.281 385.012 521.422 cv
384.949 521.562 384.922 521.719 384.922 521.891 cv
384.922 522.27 385.051 522.562 385.313 522.77 cv
385.57 522.98 385.957 523.086 386.477 523.082 cv
386.973 523.086 387.352 522.98 387.609 522.77 cv
387.863 522.559 387.992 522.273 387.992 521.914 cv
cp
f
402.441 523.355 mo
402.438 523.43 402.434 523.492 402.426 523.543 cv
402.414 523.598 402.398 523.641 402.379 523.668 cv
402.355 523.703 402.332 523.727 402.309 523.734 cv
402.285 523.75 402.258 523.754 402.23 523.754 cv
398.27 523.754 li
398.242 523.754 398.219 523.75 398.195 523.734 cv
398.172 523.727 398.148 523.703 398.129 523.668 cv
398.105 523.641 398.09 523.598 398.078 523.543 cv
398.063 523.492 398.055 523.43 398.059 523.355 cv
398.055 523.285 398.063 523.227 398.078 523.176 cv
398.09 523.125 398.102 523.082 398.121 523.047 cv
398.137 523.016 398.16 522.992 398.184 522.973 cv
398.207 522.957 398.234 522.945 398.27 522.945 cv
399.855 522.945 li
399.855 517.18 li
398.387 518.051 li
398.313 518.098 398.254 518.121 398.211 518.125 cv
398.164 518.137 398.129 518.129 398.102 518.098 cv
398.07 518.074 398.051 518.031 398.043 517.973 cv
398.035 517.914 398.031 517.84 398.031 517.746 cv
398.031 517.684 398.031 517.625 398.039 517.578 cv
398.043 517.531 398.055 517.492 398.066 517.461 cv
398.074 517.43 398.09 517.402 398.113 517.379 cv
398.137 517.355 398.164 517.332 398.199 517.309 cv
399.949 516.191 li
399.961 516.18 399.98 516.168 400.008 516.16 cv
400.027 516.152 400.059 516.145 400.094 516.137 cv
400.125 516.129 400.164 516.125 400.215 516.125 cv
400.258 516.125 400.316 516.125 400.395 516.121 cv
400.484 516.125 400.563 516.129 400.629 516.133 cv
400.688 516.145 400.738 516.156 400.773 516.164 cv
400.805 516.18 400.828 516.195 400.844 516.215 cv
400.855 516.238 400.859 516.262 400.863 516.285 cv
400.863 522.945 li
402.23 522.945 li
402.258 522.945 402.289 522.957 402.32 522.973 cv
402.348 522.992 402.367 523.016 402.387 523.047 cv
402.402 523.082 402.418 523.125 402.426 523.176 cv
402.434 523.227 402.438 523.285 402.441 523.355 cv
cp
f
408.602 519.664 mo
408.602 519.992 408.582 520.324 408.543 520.66 cv
408.504 520.996 408.438 521.32 408.344 521.633 cv
408.25 521.945 408.121 522.238 407.965 522.504 cv
407.805 522.777 407.605 523.012 407.367 523.215 cv
407.125 523.418 406.84 523.578 406.512 523.691 cv
406.18 523.805 405.797 523.859 405.363 523.863 cv
405.191 523.859 405.027 523.848 404.871 523.832 cv
404.711 523.809 404.57 523.785 404.445 523.754 cv
404.316 523.723 404.211 523.691 404.125 523.656 cv
404.039 523.621 403.977 523.586 403.938 523.551 cv
403.898 523.516 403.867 523.469 403.852 523.406 cv
403.828 523.352 403.82 523.27 403.824 523.16 cv
403.82 523.082 403.824 523.012 403.832 522.957 cv
403.84 522.906 403.848 522.867 403.859 522.84 cv
403.871 522.816 403.887 522.801 403.91 522.785 cv
403.926 522.777 403.953 522.77 403.988 522.77 cv
404.031 522.77 404.094 522.785 404.172 522.812 cv
404.25 522.844 404.348 522.875 404.465 522.91 cv
404.582 522.949 404.723 522.984 404.887 523.008 cv
405.047 523.039 405.227 523.051 405.426 523.051 cv
405.805 523.051 406.129 522.98 406.402 522.832 cv
406.672 522.691 406.895 522.492 407.066 522.242 cv
407.238 521.996 407.367 521.711 407.453 521.387 cv
407.539 521.066 407.586 520.727 407.594 520.363 cv
407.387 520.484 407.137 520.59 406.852 520.684 cv
406.559 520.777 406.227 520.824 405.855 520.824 cv
405.43 520.824 405.074 520.77 404.789 520.652 cv
404.5 520.543 404.27 520.383 404.098 520.18 cv
403.922 519.98 403.797 519.746 403.723 519.469 cv
403.645 519.199 403.609 518.898 403.609 518.574 cv
403.609 518.238 403.656 517.922 403.754 517.617 cv
403.852 517.316 404.004 517.047 404.211 516.816 cv
404.418 516.59 404.684 516.406 405.004 516.266 cv
405.324 516.129 405.707 516.062 406.152 516.059 cv
406.469 516.062 406.746 516.102 406.992 516.18 cv
407.234 516.262 407.449 516.379 407.629 516.527 cv
407.809 516.684 407.961 516.863 408.086 517.074 cv
408.211 517.285 408.309 517.527 408.387 517.797 cv
408.461 518.066 408.516 518.359 408.551 518.672 cv
408.582 518.992 408.602 519.32 408.602 519.664 cv
cp
407.574 519.551 mo
407.57 519.055 407.539 518.633 407.477 518.289 cv
407.41 517.949 407.313 517.672 407.184 517.461 cv
407.051 517.25 406.891 517.098 406.707 517.004 cv
406.516 516.91 406.301 516.863 406.059 516.863 cv
405.801 516.863 405.582 516.91 405.406 517 cv
405.223 517.094 405.074 517.219 404.965 517.371 cv
404.848 517.527 404.766 517.699 404.711 517.895 cv
404.656 518.09 404.629 518.293 404.629 518.496 cv
404.629 518.73 404.652 518.941 404.703 519.133 cv
404.75 519.324 404.828 519.484 404.941 519.617 cv
405.047 519.75 405.191 519.855 405.367 519.926 cv
405.539 520.004 405.754 520.039 406.02 520.035 cv
406.309 520.039 406.594 519.996 406.867 519.902 cv
407.141 519.816 407.375 519.699 407.574 519.551 cv
cp
f
422.125 523.32 mo
422.125 523.391 422.117 523.453 422.109 523.508 cv
422.094 523.562 422.082 523.609 422.066 523.645 cv
422.051 523.684 422.027 523.711 421.996 523.727 cv
421.965 523.746 421.934 523.754 421.902 523.754 cv
417.711 523.754 li
417.656 523.754 417.609 523.75 417.57 523.734 cv
417.527 523.727 417.492 523.703 417.465 523.668 cv
417.434 523.641 417.41 523.594 417.398 523.531 cv
417.383 523.473 417.379 523.402 417.379 523.316 cv
417.379 523.242 417.379 523.172 417.387 523.109 cv
417.391 523.051 417.406 523 417.426 522.953 cv
417.445 522.91 417.469 522.867 417.5 522.82 cv
417.527 522.781 417.566 522.73 417.621 522.676 cv
419.137 521.117 li
419.484 520.758 419.762 520.437 419.977 520.152 cv
420.188 519.867 420.352 519.605 420.469 519.371 cv
420.578 519.137 420.656 518.926 420.695 518.734 cv
420.73 518.543 420.746 518.363 420.75 518.191 cv
420.746 518.027 420.719 517.867 420.664 517.715 cv
420.605 517.566 420.523 517.434 420.418 517.32 cv
420.309 517.211 420.176 517.121 420.016 517.051 cv
419.852 516.984 419.664 516.953 419.461 516.949 cv
419.211 516.953 418.992 516.984 418.797 517.051 cv
418.602 517.121 418.43 517.195 418.281 517.27 cv
418.133 517.352 418.008 517.422 417.914 517.484 cv
417.813 517.551 417.742 517.586 417.695 517.582 cv
417.664 517.586 417.637 517.578 417.617 517.559 cv
417.594 517.547 417.574 517.52 417.563 517.484 cv
417.547 517.453 417.539 517.406 417.531 517.344 cv
417.523 517.285 417.52 517.215 417.52 517.133 cv
417.52 517.074 417.52 517.023 417.523 516.98 cv
417.527 516.941 417.535 516.906 417.547 516.871 cv
417.555 516.844 417.566 516.812 417.586 516.781 cv
417.598 516.754 417.629 516.723 417.68 516.68 cv
417.723 516.641 417.805 516.582 417.922 516.512 cv
418.035 516.441 418.18 516.375 418.355 516.305 cv
418.527 516.238 418.719 516.18 418.93 516.129 cv
419.137 516.086 419.355 516.062 419.586 516.059 cv
419.953 516.062 420.273 516.113 420.551 516.215 cv
420.824 516.32 421.055 516.461 421.234 516.641 cv
421.414 516.82 421.551 517.031 421.645 517.27 cv
421.734 517.508 421.777 517.762 421.781 518.027 cv
421.777 518.277 421.758 518.52 421.715 518.754 cv
421.668 518.996 421.574 519.254 421.441 519.531 cv
421.301 519.812 421.102 520.125 420.84 520.465 cv
420.578 520.809 420.23 521.199 419.797 521.645 cv
418.598 522.898 li
421.898 522.898 li
421.926 522.898 421.957 522.91 421.988 522.926 cv
422.016 522.945 422.039 522.969 422.063 523.004 cv
422.078 523.043 422.094 523.09 422.109 523.137 cv
422.117 523.191 422.125 523.25 422.125 523.32 cv
cp
f
428.492 519.945 mo
428.488 520.527 428.441 521.059 428.355 521.539 cv
428.262 522.023 428.109 522.437 427.898 522.781 cv
427.68 523.125 427.402 523.395 427.063 523.582 cv
426.715 523.77 426.293 523.859 425.793 523.863 cv
425.316 523.859 424.914 523.777 424.59 523.609 cv
424.262 523.441 424 523.191 423.801 522.859 cv
423.598 522.531 423.453 522.125 423.375 521.641 cv
423.289 521.16 423.25 520.605 423.25 519.98 cv
423.25 519.402 423.297 518.875 423.391 518.391 cv
423.484 517.914 423.637 517.5 423.848 517.148 cv
424.059 516.805 424.336 516.535 424.68 516.344 cv
425.023 516.156 425.445 516.062 425.945 516.059 cv
426.422 516.062 426.824 516.148 427.152 516.316 cv
427.48 516.488 427.742 516.738 427.941 517.066 cv
428.141 517.398 428.281 517.805 428.367 518.285 cv
428.445 518.77 428.488 519.32 428.492 519.945 cv
cp
427.461 520.016 mo
427.457 519.641 427.445 519.301 427.422 518.996 cv
427.395 518.695 427.352 518.43 427.301 518.199 cv
427.246 517.973 427.18 517.777 427.094 517.605 cv
427.008 517.441 426.906 517.305 426.793 517.195 cv
426.672 517.094 426.539 517.016 426.391 516.961 cv
426.242 516.914 426.074 516.887 425.887 516.887 cv
425.555 516.887 425.285 516.965 425.078 517.121 cv
424.867 517.277 424.703 517.492 424.586 517.766 cv
424.469 518.039 424.387 518.359 424.344 518.727 cv
424.301 519.094 424.281 519.488 424.281 519.91 cv
424.281 520.48 424.309 520.965 424.367 521.355 cv
424.426 521.754 424.52 522.074 424.645 522.324 cv
424.77 522.574 424.93 522.758 425.133 522.871 cv
425.328 522.984 425.57 523.039 425.852 523.039 cv
426.07 523.039 426.262 523.004 426.43 522.934 cv
426.594 522.863 426.734 522.766 426.855 522.633 cv
426.973 522.504 427.074 522.344 427.152 522.16 cv
427.23 521.98 427.293 521.777 427.34 521.551 cv
427.387 521.328 427.418 521.09 427.434 520.828 cv
427.449 520.57 427.457 520.297 427.461 520.016 cv
cp
f
441.855 523.32 mo
441.855 523.391 441.848 523.453 441.84 523.508 cv
441.824 523.562 441.813 523.609 441.797 523.645 cv
441.781 523.684 441.758 523.711 441.727 523.727 cv
441.695 523.746 441.664 523.754 441.633 523.754 cv
437.441 523.754 li
437.387 523.754 437.34 523.75 437.301 523.734 cv
437.258 523.727 437.223 523.703 437.195 523.668 cv
437.164 523.641 437.141 523.594 437.129 523.531 cv
437.113 523.473 437.109 523.402 437.109 523.316 cv
437.109 523.242 437.109 523.172 437.117 523.109 cv
437.121 523.051 437.137 523 437.156 522.953 cv
437.176 522.91 437.199 522.867 437.23 522.82 cv
437.258 522.781 437.297 522.73 437.352 522.676 cv
438.867 521.117 li
439.215 520.758 439.492 520.437 439.707 520.152 cv
439.918 519.867 440.082 519.605 440.199 519.371 cv
440.309 519.137 440.387 518.926 440.426 518.734 cv
440.461 518.543 440.477 518.363 440.48 518.191 cv
440.477 518.027 440.449 517.867 440.395 517.715 cv
440.336 517.566 440.254 517.434 440.148 517.32 cv
440.039 517.211 439.906 517.121 439.746 517.051 cv
439.582 516.984 439.395 516.953 439.191 516.949 cv
438.941 516.953 438.723 516.984 438.527 517.051 cv
438.332 517.121 438.16 517.195 438.012 517.27 cv
437.863 517.352 437.738 517.422 437.645 517.484 cv
437.543 517.551 437.473 517.586 437.426 517.582 cv
437.395 517.586 437.367 517.578 437.348 517.559 cv
437.324 517.547 437.305 517.52 437.293 517.484 cv
437.277 517.453 437.27 517.406 437.262 517.344 cv
437.254 517.285 437.25 517.215 437.25 517.133 cv
437.25 517.074 437.25 517.023 437.254 516.98 cv
437.258 516.941 437.266 516.906 437.277 516.871 cv
437.285 516.844 437.297 516.812 437.316 516.781 cv
437.328 516.754 437.359 516.723 437.41 516.68 cv
437.453 516.641 437.535 516.582 437.652 516.512 cv
437.766 516.441 437.91 516.375 438.086 516.305 cv
438.258 516.238 438.449 516.18 438.66 516.129 cv
438.867 516.086 439.086 516.062 439.316 516.059 cv
439.684 516.062 440.004 516.113 440.281 516.215 cv
440.555 516.32 440.785 516.461 440.965 516.641 cv
441.145 516.82 441.281 517.031 441.375 517.27 cv
441.465 517.508 441.508 517.762 441.512 518.027 cv
441.508 518.277 441.488 518.52 441.445 518.754 cv
441.398 518.996 441.305 519.254 441.172 519.531 cv
441.031 519.812 440.832 520.125 440.57 520.465 cv
440.309 520.809 439.961 521.199 439.527 521.645 cv
438.328 522.898 li
441.629 522.898 li
441.656 522.898 441.688 522.91 441.719 522.926 cv
441.746 522.945 441.77 522.969 441.793 523.004 cv
441.809 523.043 441.824 523.09 441.84 523.137 cv
441.848 523.191 441.855 523.25 441.855 523.32 cv
cp
f
447.988 523.355 mo
447.984 523.43 447.98 523.492 447.973 523.543 cv
447.961 523.598 447.945 523.641 447.926 523.668 cv
447.902 523.703 447.879 523.727 447.855 523.734 cv
447.832 523.75 447.805 523.754 447.777 523.754 cv
443.816 523.754 li
443.789 523.754 443.766 523.75 443.742 523.734 cv
443.719 523.727 443.695 523.703 443.676 523.668 cv
443.652 523.641 443.637 523.598 443.625 523.543 cv
443.609 523.492 443.602 523.43 443.605 523.355 cv
443.602 523.285 443.609 523.227 443.625 523.176 cv
443.637 523.125 443.648 523.082 443.668 523.047 cv
443.684 523.016 443.707 522.992 443.73 522.973 cv
443.754 522.957 443.781 522.945 443.816 522.945 cv
445.402 522.945 li
445.402 517.18 li
443.934 518.051 li
443.859 518.098 443.801 518.121 443.758 518.125 cv
443.711 518.137 443.676 518.129 443.648 518.098 cv
443.617 518.074 443.598 518.031 443.59 517.973 cv
443.582 517.914 443.578 517.84 443.578 517.746 cv
443.578 517.684 443.578 517.625 443.586 517.578 cv
443.59 517.531 443.602 517.492 443.613 517.461 cv
443.621 517.43 443.637 517.402 443.66 517.379 cv
443.684 517.355 443.711 517.332 443.746 517.309 cv
445.496 516.191 li
445.508 516.18 445.527 516.168 445.555 516.16 cv
445.574 516.152 445.605 516.145 445.641 516.137 cv
445.672 516.129 445.711 516.125 445.762 516.125 cv
445.805 516.125 445.863 516.125 445.941 516.121 cv
446.031 516.125 446.109 516.129 446.176 516.133 cv
446.234 516.145 446.285 516.156 446.32 516.164 cv
446.352 516.18 446.375 516.195 446.391 516.215 cv
446.402 516.238 446.406 516.262 446.41 516.285 cv
446.41 522.945 li
447.777 522.945 li
447.805 522.945 447.836 522.957 447.867 522.973 cv
447.895 522.992 447.914 523.016 447.934 523.047 cv
447.949 523.082 447.965 523.125 447.973 523.176 cv
447.98 523.227 447.984 523.285 447.988 523.355 cv
cp
f
461.555 523.32 mo
461.555 523.391 461.547 523.453 461.539 523.508 cv
461.523 523.562 461.512 523.609 461.496 523.645 cv
461.48 523.684 461.457 523.711 461.426 523.727 cv
461.395 523.746 461.363 523.754 461.332 523.754 cv
457.141 523.754 li
457.086 523.754 457.039 523.75 457 523.734 cv
456.957 523.727 456.922 523.703 456.895 523.668 cv
456.863 523.641 456.84 523.594 456.828 523.531 cv
456.813 523.473 456.809 523.402 456.809 523.316 cv
456.809 523.242 456.809 523.172 456.816 523.109 cv
456.82 523.051 456.836 523 456.855 522.953 cv
456.875 522.91 456.898 522.867 456.93 522.82 cv
456.957 522.781 456.996 522.73 457.051 522.676 cv
458.566 521.117 li
458.914 520.758 459.191 520.437 459.406 520.152 cv
459.617 519.867 459.781 519.605 459.898 519.371 cv
460.008 519.137 460.086 518.926 460.125 518.734 cv
460.16 518.543 460.176 518.363 460.18 518.191 cv
460.176 518.027 460.148 517.867 460.094 517.715 cv
460.035 517.566 459.953 517.434 459.848 517.32 cv
459.738 517.211 459.605 517.121 459.445 517.051 cv
459.281 516.984 459.094 516.953 458.891 516.949 cv
458.641 516.953 458.422 516.984 458.227 517.051 cv
458.031 517.121 457.859 517.195 457.711 517.27 cv
457.563 517.352 457.438 517.422 457.344 517.484 cv
457.242 517.551 457.172 517.586 457.125 517.582 cv
457.094 517.586 457.066 517.578 457.047 517.559 cv
457.023 517.547 457.004 517.52 456.992 517.484 cv
456.977 517.453 456.969 517.406 456.961 517.344 cv
456.953 517.285 456.949 517.215 456.949 517.133 cv
456.949 517.074 456.949 517.023 456.953 516.98 cv
456.957 516.941 456.965 516.906 456.977 516.871 cv
456.984 516.844 456.996 516.812 457.016 516.781 cv
457.027 516.754 457.059 516.723 457.109 516.68 cv
457.152 516.641 457.234 516.582 457.352 516.512 cv
457.465 516.441 457.609 516.375 457.785 516.305 cv
457.957 516.238 458.148 516.18 458.359 516.129 cv
458.566 516.086 458.785 516.062 459.016 516.059 cv
459.383 516.062 459.703 516.113 459.98 516.215 cv
460.254 516.32 460.484 516.461 460.664 516.641 cv
460.844 516.82 460.98 517.031 461.074 517.27 cv
461.164 517.508 461.207 517.762 461.211 518.027 cv
461.207 518.277 461.188 518.52 461.145 518.754 cv
461.098 518.996 461.004 519.254 460.871 519.531 cv
460.73 519.812 460.531 520.125 460.27 520.465 cv
460.008 520.809 459.66 521.199 459.227 521.645 cv
458.027 522.898 li
461.328 522.898 li
461.355 522.898 461.387 522.91 461.418 522.926 cv
461.445 522.945 461.469 522.969 461.492 523.004 cv
461.508 523.043 461.523 523.09 461.539 523.137 cv
461.547 523.191 461.555 523.25 461.555 523.32 cv
cp
f
467.676 523.32 mo
467.676 523.391 467.668 523.453 467.66 523.508 cv
467.645 523.562 467.633 523.609 467.617 523.645 cv
467.602 523.684 467.578 523.711 467.547 523.727 cv
467.516 523.746 467.484 523.754 467.453 523.754 cv
463.262 523.754 li
463.207 523.754 463.16 523.75 463.121 523.734 cv
463.078 523.727 463.043 523.703 463.016 523.668 cv
462.984 523.641 462.961 523.594 462.949 523.531 cv
462.934 523.473 462.93 523.402 462.93 523.316 cv
462.93 523.242 462.93 523.172 462.938 523.109 cv
462.941 523.051 462.957 523 462.977 522.953 cv
462.996 522.91 463.02 522.867 463.051 522.82 cv
463.078 522.781 463.117 522.73 463.172 522.676 cv
464.688 521.117 li
465.035 520.758 465.313 520.437 465.527 520.152 cv
465.738 519.867 465.902 519.605 466.02 519.371 cv
466.129 519.137 466.207 518.926 466.246 518.734 cv
466.281 518.543 466.297 518.363 466.301 518.191 cv
466.297 518.027 466.27 517.867 466.215 517.715 cv
466.156 517.566 466.074 517.434 465.969 517.32 cv
465.859 517.211 465.727 517.121 465.566 517.051 cv
465.402 516.984 465.215 516.953 465.012 516.949 cv
464.762 516.953 464.543 516.984 464.348 517.051 cv
464.152 517.121 463.98 517.195 463.832 517.27 cv
463.684 517.352 463.559 517.422 463.465 517.484 cv
463.363 517.551 463.293 517.586 463.246 517.582 cv
463.215 517.586 463.188 517.578 463.168 517.559 cv
463.145 517.547 463.125 517.52 463.113 517.484 cv
463.098 517.453 463.09 517.406 463.082 517.344 cv
463.074 517.285 463.07 517.215 463.07 517.133 cv
463.07 517.074 463.07 517.023 463.074 516.98 cv
463.078 516.941 463.086 516.906 463.098 516.871 cv
463.105 516.844 463.117 516.812 463.137 516.781 cv
463.148 516.754 463.18 516.723 463.23 516.68 cv
463.273 516.641 463.355 516.582 463.473 516.512 cv
463.586 516.441 463.73 516.375 463.906 516.305 cv
464.078 516.238 464.27 516.18 464.48 516.129 cv
464.688 516.086 464.906 516.062 465.137 516.059 cv
465.504 516.062 465.824 516.113 466.102 516.215 cv
466.375 516.32 466.605 516.461 466.785 516.641 cv
466.965 516.82 467.102 517.031 467.195 517.27 cv
467.285 517.508 467.328 517.762 467.332 518.027 cv
467.328 518.277 467.309 518.52 467.266 518.754 cv
467.219 518.996 467.125 519.254 466.992 519.531 cv
466.852 519.812 466.652 520.125 466.391 520.465 cv
466.129 520.809 465.781 521.199 465.348 521.645 cv
464.148 522.898 li
467.449 522.898 li
467.477 522.898 467.508 522.91 467.539 522.926 cv
467.566 522.945 467.59 522.969 467.613 523.004 cv
467.629 523.043 467.645 523.09 467.66 523.137 cv
467.668 523.191 467.676 523.25 467.676 523.32 cv
cp
f
481.266 523.32 mo
481.266 523.391 481.258 523.453 481.25 523.508 cv
481.234 523.562 481.223 523.609 481.207 523.645 cv
481.191 523.684 481.168 523.711 481.137 523.727 cv
481.105 523.746 481.074 523.754 481.043 523.754 cv
476.852 523.754 li
476.797 523.754 476.75 523.75 476.711 523.734 cv
476.668 523.727 476.633 523.703 476.605 523.668 cv
476.574 523.641 476.551 523.594 476.539 523.531 cv
476.523 523.473 476.52 523.402 476.52 523.316 cv
476.52 523.242 476.52 523.172 476.527 523.109 cv
476.531 523.051 476.547 523 476.566 522.953 cv
476.586 522.91 476.609 522.867 476.641 522.82 cv
476.668 522.781 476.707 522.73 476.762 522.676 cv
478.277 521.117 li
478.625 520.758 478.902 520.437 479.117 520.152 cv
479.328 519.867 479.492 519.605 479.609 519.371 cv
479.719 519.137 479.797 518.926 479.836 518.734 cv
479.871 518.543 479.887 518.363 479.891 518.191 cv
479.887 518.027 479.859 517.867 479.805 517.715 cv
479.746 517.566 479.664 517.434 479.559 517.32 cv
479.449 517.211 479.316 517.121 479.156 517.051 cv
478.992 516.984 478.805 516.953 478.602 516.949 cv
478.352 516.953 478.133 516.984 477.938 517.051 cv
477.742 517.121 477.57 517.195 477.422 517.27 cv
477.273 517.352 477.148 517.422 477.055 517.484 cv
476.953 517.551 476.883 517.586 476.836 517.582 cv
476.805 517.586 476.777 517.578 476.758 517.559 cv
476.734 517.547 476.715 517.52 476.703 517.484 cv
476.688 517.453 476.68 517.406 476.672 517.344 cv
476.664 517.285 476.66 517.215 476.66 517.133 cv
476.66 517.074 476.66 517.023 476.664 516.98 cv
476.668 516.941 476.676 516.906 476.688 516.871 cv
476.695 516.844 476.707 516.812 476.727 516.781 cv
476.738 516.754 476.77 516.723 476.82 516.68 cv
476.863 516.641 476.945 516.582 477.063 516.512 cv
477.176 516.441 477.32 516.375 477.496 516.305 cv
477.668 516.238 477.859 516.18 478.07 516.129 cv
478.277 516.086 478.496 516.062 478.727 516.059 cv
479.094 516.062 479.414 516.113 479.691 516.215 cv
479.965 516.32 480.195 516.461 480.375 516.641 cv
480.555 516.82 480.691 517.031 480.785 517.27 cv
480.875 517.508 480.918 517.762 480.922 518.027 cv
480.918 518.277 480.898 518.52 480.855 518.754 cv
480.809 518.996 480.715 519.254 480.582 519.531 cv
480.441 519.812 480.242 520.125 479.98 520.465 cv
479.719 520.809 479.371 521.199 478.938 521.645 cv
477.738 522.898 li
481.039 522.898 li
481.066 522.898 481.098 522.91 481.129 522.926 cv
481.156 522.945 481.18 522.969 481.203 523.004 cv
481.219 523.043 481.234 523.09 481.25 523.137 cv
481.258 523.191 481.266 523.25 481.266 523.32 cv
cp
f
487.324 521.586 mo
487.324 521.934 487.262 522.25 487.141 522.527 cv
487.02 522.809 486.848 523.047 486.621 523.246 cv
486.395 523.445 486.113 523.598 485.781 523.703 cv
485.449 523.809 485.074 523.859 484.656 523.863 cv
484.402 523.859 484.164 523.84 483.945 523.801 cv
483.723 523.762 483.527 523.715 483.359 523.66 cv
483.184 523.605 483.043 523.547 482.93 523.484 cv
482.813 523.422 482.738 523.379 482.715 523.352 cv
482.684 523.324 482.664 523.297 482.648 523.27 cv
482.633 523.242 482.617 523.207 482.605 523.168 cv
482.594 523.129 482.586 523.082 482.578 523.027 cv
482.57 522.973 482.566 522.902 482.57 522.816 cv
482.566 522.676 482.582 522.578 482.613 522.523 cv
482.641 522.469 482.68 522.441 482.734 522.441 cv
482.77 522.441 482.84 522.473 482.945 522.535 cv
483.051 522.598 483.188 522.668 483.355 522.738 cv
483.52 522.816 483.715 522.883 483.938 522.941 cv
484.16 523.008 484.406 523.039 484.684 523.035 cv
484.941 523.039 485.176 523.004 485.379 522.934 cv
485.578 522.867 485.746 522.773 485.883 522.652 cv
486.02 522.535 486.121 522.395 486.191 522.223 cv
486.258 522.059 486.293 521.875 486.293 521.68 cv
486.293 521.465 486.246 521.273 486.16 521.098 cv
486.07 520.93 485.945 520.781 485.781 520.652 cv
485.613 520.531 485.406 520.434 485.164 520.367 cv
484.914 520.305 484.637 520.273 484.332 520.27 cv
483.59 520.27 li
483.555 520.273 483.523 520.266 483.492 520.25 cv
483.461 520.234 483.434 520.211 483.414 520.18 cv
483.391 520.148 483.371 520.109 483.359 520.059 cv
483.344 520.008 483.34 519.941 483.34 519.855 cv
483.34 519.785 483.344 519.723 483.355 519.672 cv
483.367 519.625 483.383 519.586 483.406 519.555 cv
483.422 519.527 483.449 519.508 483.48 519.492 cv
483.508 519.484 483.539 519.477 483.574 519.473 cv
484.234 519.473 li
484.492 519.477 484.723 519.441 484.93 519.371 cv
485.133 519.305 485.309 519.211 485.449 519.082 cv
485.59 518.961 485.699 518.812 485.777 518.637 cv
485.855 518.465 485.895 518.27 485.895 518.051 cv
485.895 517.898 485.867 517.75 485.816 517.605 cv
485.766 517.465 485.691 517.34 485.59 517.234 cv
485.488 517.129 485.355 517.047 485.199 516.984 cv
485.035 516.93 484.855 516.898 484.652 516.895 cv
484.426 516.898 484.215 516.934 484.027 516.996 cv
483.832 517.066 483.664 517.137 483.52 517.215 cv
483.367 517.293 483.246 517.367 483.152 517.434 cv
483.055 517.504 482.984 517.539 482.945 517.535 cv
482.918 517.539 482.895 517.535 482.875 517.523 cv
482.852 517.516 482.832 517.496 482.82 517.465 cv
482.805 517.437 482.797 517.395 482.789 517.34 cv
482.781 517.289 482.777 517.219 482.781 517.133 cv
482.777 517.074 482.781 517.023 482.789 516.977 cv
482.793 516.934 482.801 516.895 482.813 516.859 cv
482.82 516.828 482.832 516.797 482.852 516.77 cv
482.863 516.746 482.891 516.715 482.93 516.676 cv
482.969 516.637 483.043 516.582 483.156 516.512 cv
483.27 516.441 483.41 516.375 483.578 516.305 cv
483.742 516.238 483.934 516.18 484.152 516.129 cv
484.367 516.086 484.602 516.062 484.852 516.059 cv
485.203 516.062 485.512 516.105 485.777 516.195 cv
486.043 516.289 486.262 516.418 486.441 516.578 cv
486.617 516.746 486.75 516.941 486.84 517.168 cv
486.926 517.395 486.973 517.648 486.973 517.926 cv
486.973 518.164 486.941 518.387 486.879 518.59 cv
486.816 518.797 486.723 518.977 486.602 519.133 cv
486.48 519.293 486.332 519.43 486.156 519.539 cv
485.98 519.656 485.777 519.73 485.547 519.77 cv
485.547 519.781 li
485.809 519.812 486.047 519.879 486.266 519.98 cv
486.48 520.082 486.668 520.211 486.828 520.367 cv
486.98 520.523 487.102 520.707 487.191 520.918 cv
487.277 521.129 487.324 521.352 487.324 521.586 cv
cp
f
500.965 523.32 mo
500.965 523.391 500.957 523.453 500.949 523.508 cv
500.934 523.562 500.922 523.609 500.906 523.645 cv
500.891 523.684 500.867 523.711 500.836 523.727 cv
500.805 523.746 500.773 523.754 500.742 523.754 cv
496.551 523.754 li
496.496 523.754 496.449 523.75 496.41 523.734 cv
496.367 523.727 496.332 523.703 496.305 523.668 cv
496.273 523.641 496.25 523.594 496.238 523.531 cv
496.223 523.473 496.219 523.402 496.219 523.316 cv
496.219 523.242 496.219 523.172 496.227 523.109 cv
496.23 523.051 496.246 523 496.266 522.953 cv
496.285 522.91 496.309 522.867 496.34 522.82 cv
496.367 522.781 496.406 522.73 496.461 522.676 cv
497.977 521.117 li
498.324 520.758 498.602 520.437 498.816 520.152 cv
499.027 519.867 499.191 519.605 499.309 519.371 cv
499.418 519.137 499.496 518.926 499.535 518.734 cv
499.57 518.543 499.586 518.363 499.59 518.191 cv
499.586 518.027 499.559 517.867 499.504 517.715 cv
499.445 517.566 499.363 517.434 499.258 517.32 cv
499.148 517.211 499.016 517.121 498.855 517.051 cv
498.691 516.984 498.504 516.953 498.301 516.949 cv
498.051 516.953 497.832 516.984 497.637 517.051 cv
497.441 517.121 497.27 517.195 497.121 517.27 cv
496.973 517.352 496.848 517.422 496.754 517.484 cv
496.652 517.551 496.582 517.586 496.535 517.582 cv
496.504 517.586 496.477 517.578 496.457 517.559 cv
496.434 517.547 496.414 517.52 496.402 517.484 cv
496.387 517.453 496.379 517.406 496.371 517.344 cv
496.363 517.285 496.359 517.215 496.359 517.133 cv
496.359 517.074 496.359 517.023 496.363 516.98 cv
496.367 516.941 496.375 516.906 496.387 516.871 cv
496.395 516.844 496.406 516.812 496.426 516.781 cv
496.438 516.754 496.469 516.723 496.52 516.68 cv
496.563 516.641 496.645 516.582 496.762 516.512 cv
496.875 516.441 497.02 516.375 497.195 516.305 cv
497.367 516.238 497.559 516.18 497.77 516.129 cv
497.977 516.086 498.195 516.062 498.426 516.059 cv
498.793 516.062 499.113 516.113 499.391 516.215 cv
499.664 516.32 499.895 516.461 500.074 516.641 cv
500.254 516.82 500.391 517.031 500.484 517.27 cv
500.574 517.508 500.617 517.762 500.621 518.027 cv
500.617 518.277 500.598 518.52 500.555 518.754 cv
500.508 518.996 500.414 519.254 500.281 519.531 cv
500.141 519.812 499.941 520.125 499.68 520.465 cv
499.418 520.809 499.07 521.199 498.637 521.645 cv
497.438 522.898 li
500.738 522.898 li
500.766 522.898 500.797 522.91 500.828 522.926 cv
500.855 522.945 500.879 522.969 500.902 523.004 cv
500.918 523.043 500.934 523.09 500.949 523.137 cv
500.957 523.191 500.965 523.25 500.965 523.32 cv
cp
f
507.406 521.598 mo
507.402 521.73 507.383 521.832 507.348 521.902 cv
507.305 521.977 507.25 522.016 507.188 522.012 cv
506.328 522.012 li
506.328 523.605 li
506.324 523.641 506.316 523.668 506.305 523.687 cv
506.285 523.711 506.258 523.727 506.219 523.742 cv
506.18 523.758 506.125 523.77 506.063 523.777 cv
505.996 523.785 505.914 523.789 505.816 523.789 cv
505.715 523.789 505.637 523.785 505.574 523.777 cv
505.512 523.77 505.461 523.758 505.422 523.742 cv
505.383 523.727 505.355 523.711 505.34 523.687 cv
505.324 523.668 505.316 523.641 505.32 523.605 cv
505.32 522.012 li
502.219 522.012 li
502.172 522.016 502.137 522.008 502.105 521.996 cv
502.074 521.988 502.043 521.969 502.02 521.934 cv
501.988 521.906 501.973 521.859 501.965 521.797 cv
501.957 521.738 501.953 521.664 501.953 521.566 cv
501.953 521.496 501.953 521.43 501.957 521.371 cv
501.961 521.312 501.969 521.258 501.98 521.211 cv
501.992 521.164 502.008 521.117 502.027 521.07 cv
502.047 521.023 502.07 520.977 502.098 520.926 cv
504.801 516.316 li
504.82 516.289 504.848 516.262 504.887 516.234 cv
504.922 516.215 504.973 516.195 505.035 516.176 cv
505.094 516.164 505.164 516.152 505.254 516.145 cv
505.34 516.141 505.445 516.137 505.566 516.137 cv
505.695 516.137 505.809 516.145 505.906 516.152 cv
506.004 516.168 506.082 516.18 506.145 516.191 cv
506.199 516.211 506.246 516.23 506.281 516.254 cv
506.309 516.277 506.324 516.309 506.328 516.34 cv
506.328 521.184 li
507.188 521.184 li
507.25 521.187 507.305 521.223 507.344 521.285 cv
507.383 521.355 507.402 521.457 507.406 521.598 cv
cp
505.32 517.02 mo
505.313 517.02 li
502.875 521.184 li
505.32 521.184 li
cp
f
520.676 523.32 mo
520.676 523.391 520.668 523.453 520.66 523.508 cv
520.645 523.562 520.633 523.609 520.617 523.645 cv
520.602 523.684 520.578 523.711 520.547 523.727 cv
520.516 523.746 520.484 523.754 520.453 523.754 cv
516.262 523.754 li
516.207 523.754 516.16 523.75 516.121 523.734 cv
516.078 523.727 516.043 523.703 516.016 523.668 cv
515.984 523.641 515.961 523.594 515.949 523.531 cv
515.934 523.473 515.93 523.402 515.93 523.316 cv
515.93 523.242 515.93 523.172 515.938 523.109 cv
515.941 523.051 515.957 523 515.977 522.953 cv
515.996 522.91 516.02 522.867 516.051 522.82 cv
516.078 522.781 516.117 522.73 516.172 522.676 cv
517.688 521.117 li
518.035 520.758 518.313 520.437 518.527 520.152 cv
518.738 519.867 518.902 519.605 519.02 519.371 cv
519.129 519.137 519.207 518.926 519.246 518.734 cv
519.281 518.543 519.297 518.363 519.301 518.191 cv
519.297 518.027 519.27 517.867 519.215 517.715 cv
519.156 517.566 519.074 517.434 518.969 517.32 cv
518.859 517.211 518.727 517.121 518.566 517.051 cv
518.402 516.984 518.215 516.953 518.012 516.949 cv
517.762 516.953 517.543 516.984 517.348 517.051 cv
517.152 517.121 516.98 517.195 516.832 517.27 cv
516.684 517.352 516.559 517.422 516.465 517.484 cv
516.363 517.551 516.293 517.586 516.246 517.582 cv
516.215 517.586 516.188 517.578 516.168 517.559 cv
516.145 517.547 516.125 517.52 516.113 517.484 cv
516.098 517.453 516.09 517.406 516.082 517.344 cv
516.074 517.285 516.07 517.215 516.07 517.133 cv
516.07 517.074 516.07 517.023 516.074 516.98 cv
516.078 516.941 516.086 516.906 516.098 516.871 cv
516.105 516.844 516.117 516.812 516.137 516.781 cv
516.148 516.754 516.18 516.723 516.23 516.68 cv
516.273 516.641 516.355 516.582 516.473 516.512 cv
516.586 516.441 516.73 516.375 516.906 516.305 cv
517.078 516.238 517.27 516.18 517.48 516.129 cv
517.688 516.086 517.906 516.062 518.137 516.059 cv
518.504 516.062 518.824 516.113 519.102 516.215 cv
519.375 516.32 519.605 516.461 519.785 516.641 cv
519.965 516.82 520.102 517.031 520.195 517.27 cv
520.285 517.508 520.328 517.762 520.332 518.027 cv
520.328 518.277 520.309 518.52 520.266 518.754 cv
520.219 518.996 520.125 519.254 519.992 519.531 cv
519.852 519.812 519.652 520.125 519.391 520.465 cv
519.129 520.809 518.781 521.199 518.348 521.645 cv
517.148 522.898 li
520.449 522.898 li
520.477 522.898 520.508 522.91 520.539 522.926 cv
520.566 522.945 520.59 522.969 520.613 523.004 cv
520.629 523.043 520.645 523.09 520.66 523.137 cv
520.668 523.191 520.676 523.25 520.676 523.32 cv
cp
f
526.758 521.316 mo
526.758 521.723 526.688 522.086 526.551 522.402 cv
526.414 522.719 526.223 522.984 525.973 523.203 cv
525.723 523.422 525.422 523.586 525.078 523.695 cv
524.727 523.805 524.344 523.859 523.926 523.863 cv
523.688 523.859 523.465 523.844 523.258 523.812 cv
523.043 523.781 522.855 523.742 522.695 523.695 cv
522.527 523.648 522.395 523.602 522.293 523.551 cv
522.188 523.508 522.117 523.469 522.09 523.437 cv
522.059 523.41 522.039 523.387 522.027 523.359 cv
522.016 523.34 522.004 523.312 521.996 523.277 cv
521.98 523.246 521.977 523.203 521.977 523.152 cv
521.973 523.102 521.969 523.039 521.973 522.969 cv
521.969 522.906 521.973 522.848 521.98 522.793 cv
521.984 522.738 521.996 522.695 522.012 522.664 cv
522.027 522.633 522.043 522.609 522.066 522.59 cv
522.082 522.578 522.109 522.57 522.141 522.566 cv
522.18 522.57 522.238 522.594 522.32 522.641 cv
522.402 522.687 522.512 522.742 522.652 522.797 cv
522.789 522.855 522.961 522.906 523.168 522.957 cv
523.371 523.012 523.617 523.039 523.898 523.035 cv
524.16 523.039 524.398 523.008 524.621 522.941 cv
524.836 522.883 525.023 522.785 525.184 522.648 cv
525.34 522.52 525.465 522.352 525.555 522.148 cv
525.645 521.945 525.691 521.699 525.691 521.41 cv
525.691 521.168 525.652 520.957 525.578 520.77 cv
525.5 520.586 525.383 520.43 525.227 520.305 cv
525.066 520.184 524.867 520.094 524.625 520.031 cv
524.383 519.977 524.094 519.945 523.758 519.941 cv
523.52 519.945 523.313 519.957 523.145 519.977 cv
522.969 520.004 522.809 520.016 522.66 520.012 cv
522.547 520.016 522.469 519.988 522.426 519.934 cv
522.375 519.883 522.352 519.785 522.355 519.641 cv
522.355 516.551 li
522.352 516.426 522.383 516.328 522.445 516.266 cv
522.508 516.203 522.594 516.172 522.707 516.172 cv
526.066 516.172 li
526.098 516.172 526.125 516.184 526.156 516.199 cv
526.18 516.219 526.207 516.242 526.23 516.277 cv
526.25 516.316 526.262 516.363 526.273 516.414 cv
526.281 516.473 526.289 516.535 526.289 516.605 cv
526.289 516.746 526.27 516.855 526.23 516.934 cv
526.191 517.012 526.137 517.051 526.074 517.051 cv
523.363 517.051 li
523.363 519.176 li
523.492 519.16 523.629 519.148 523.77 519.145 cv
523.906 519.141 524.063 519.137 524.246 519.137 cv
524.66 519.137 525.027 519.191 525.34 519.293 cv
525.652 519.402 525.91 519.547 526.121 519.734 cv
526.328 519.922 526.488 520.152 526.598 520.422 cv
526.703 520.691 526.758 520.988 526.758 521.316 cv
cp
f
540.395 523.32 mo
540.395 523.391 540.387 523.453 540.379 523.508 cv
540.363 523.562 540.352 523.609 540.336 523.645 cv
540.32 523.684 540.297 523.711 540.266 523.727 cv
540.234 523.746 540.203 523.754 540.172 523.754 cv
535.98 523.754 li
535.926 523.754 535.879 523.75 535.84 523.734 cv
535.797 523.727 535.762 523.703 535.734 523.668 cv
535.703 523.641 535.68 523.594 535.668 523.531 cv
535.652 523.473 535.648 523.402 535.648 523.316 cv
535.648 523.242 535.648 523.172 535.656 523.109 cv
535.66 523.051 535.676 523 535.695 522.953 cv
535.715 522.91 535.738 522.867 535.77 522.82 cv
535.797 522.781 535.836 522.73 535.891 522.676 cv
537.406 521.117 li
537.754 520.758 538.031 520.437 538.246 520.152 cv
538.457 519.867 538.621 519.605 538.738 519.371 cv
538.848 519.137 538.926 518.926 538.965 518.734 cv
539 518.543 539.016 518.363 539.02 518.191 cv
539.016 518.027 538.988 517.867 538.934 517.715 cv
538.875 517.566 538.793 517.434 538.688 517.32 cv
538.578 517.211 538.445 517.121 538.285 517.051 cv
538.121 516.984 537.934 516.953 537.73 516.949 cv
537.48 516.953 537.262 516.984 537.066 517.051 cv
536.871 517.121 536.699 517.195 536.551 517.27 cv
536.402 517.352 536.277 517.422 536.184 517.484 cv
536.082 517.551 536.012 517.586 535.965 517.582 cv
535.934 517.586 535.906 517.578 535.887 517.559 cv
535.863 517.547 535.844 517.52 535.832 517.484 cv
535.816 517.453 535.809 517.406 535.801 517.344 cv
535.793 517.285 535.789 517.215 535.789 517.133 cv
535.789 517.074 535.789 517.023 535.793 516.98 cv
535.797 516.941 535.805 516.906 535.816 516.871 cv
535.824 516.844 535.836 516.812 535.855 516.781 cv
535.867 516.754 535.898 516.723 535.949 516.68 cv
535.992 516.641 536.074 516.582 536.191 516.512 cv
536.305 516.441 536.449 516.375 536.625 516.305 cv
536.797 516.238 536.988 516.18 537.199 516.129 cv
537.406 516.086 537.625 516.062 537.855 516.059 cv
538.223 516.062 538.543 516.113 538.82 516.215 cv
539.094 516.32 539.324 516.461 539.504 516.641 cv
539.684 516.82 539.82 517.031 539.914 517.27 cv
540.004 517.508 540.047 517.762 540.051 518.027 cv
540.047 518.277 540.027 518.52 539.984 518.754 cv
539.938 518.996 539.844 519.254 539.711 519.531 cv
539.57 519.812 539.371 520.125 539.109 520.465 cv
538.848 520.809 538.5 521.199 538.066 521.645 cv
536.867 522.898 li
540.168 522.898 li
540.195 522.898 540.227 522.91 540.258 522.926 cv
540.285 522.945 540.309 522.969 540.332 523.004 cv
540.348 523.043 540.363 523.09 540.379 523.137 cv
540.387 523.191 540.395 523.25 540.395 523.32 cv
cp
f
546.711 521.301 mo
546.707 521.633 546.656 521.953 546.559 522.266 cv
546.453 522.578 546.297 522.852 546.09 523.086 cv
545.875 523.32 545.609 523.512 545.285 523.652 cv
544.957 523.793 544.574 523.859 544.137 523.863 cv
543.82 523.859 543.539 523.824 543.301 523.746 cv
543.055 523.672 542.844 523.559 542.668 523.414 cv
542.484 523.273 542.336 523.098 542.219 522.883 cv
542.098 522.676 542 522.434 541.93 522.16 cv
541.852 521.891 541.801 521.598 541.773 521.273 cv
541.738 520.957 541.723 520.613 541.727 520.246 cv
541.723 519.922 541.742 519.594 541.781 519.262 cv
541.816 518.93 541.879 518.609 541.969 518.301 cv
542.055 517.992 542.176 517.703 542.332 517.43 cv
542.488 517.16 542.68 516.922 542.914 516.719 cv
543.145 516.52 543.426 516.359 543.75 516.242 cv
544.07 516.125 544.445 516.066 544.883 516.066 cv
545.023 516.066 545.172 516.078 545.32 516.094 cv
545.469 516.117 545.605 516.141 545.73 516.164 cv
545.855 516.195 545.961 516.227 546.047 516.262 cv
546.133 516.297 546.188 516.324 546.215 516.348 cv
546.242 516.371 546.262 516.395 546.277 516.418 cv
546.285 516.441 546.297 516.469 546.309 516.5 cv
546.313 516.531 546.32 516.566 546.328 516.598 cv
546.332 516.637 546.332 516.68 546.336 516.734 cv
546.332 516.805 546.332 516.867 546.332 516.918 cv
546.328 516.969 546.32 517.008 546.309 517.039 cv
546.293 517.07 546.273 517.094 546.254 517.109 cv
546.23 517.125 546.203 517.133 546.172 517.133 cv
546.125 517.133 546.066 517.121 545.992 517.094 cv
545.918 517.066 545.828 517.035 545.723 517 cv
545.617 516.969 545.488 516.937 545.34 516.91 cv
545.188 516.887 545.016 516.875 544.816 516.871 cv
544.453 516.875 544.141 516.949 543.879 517.094 cv
543.613 517.246 543.398 517.445 543.234 517.691 cv
543.07 517.945 542.945 518.234 542.867 518.562 cv
542.785 518.891 542.742 519.234 542.73 519.594 cv
542.832 519.535 542.945 519.477 543.074 519.418 cv
543.199 519.363 543.336 519.312 543.488 519.262 cv
543.637 519.219 543.797 519.18 543.965 519.148 cv
544.133 519.117 544.313 519.102 544.508 519.102 cv
544.914 519.102 545.262 519.16 545.543 519.27 cv
545.824 519.383 546.051 519.535 546.223 519.73 cv
546.395 519.93 546.52 520.164 546.598 520.43 cv
546.672 520.703 546.707 520.992 546.711 521.301 cv
cp
545.688 521.395 mo
545.684 521.168 545.66 520.961 545.621 520.773 cv
545.574 520.59 545.5 520.434 545.395 520.305 cv
545.289 520.176 545.148 520.074 544.973 520.004 cv
544.797 519.934 544.582 519.898 544.324 519.898 cv
544.18 519.898 544.035 519.914 543.891 519.937 cv
543.742 519.965 543.602 520 543.469 520.043 cv
543.336 520.09 543.207 520.141 543.082 520.203 cv
542.957 520.266 542.844 520.332 542.75 520.395 cv
542.746 520.902 542.777 521.324 542.844 521.664 cv
542.906 522.004 543 522.277 543.125 522.48 cv
543.246 522.687 543.402 522.832 543.586 522.918 cv
543.766 523.008 543.98 523.051 544.23 523.051 cv
544.48 523.051 544.695 523.004 544.879 522.91 cv
545.063 522.816 545.215 522.691 545.336 522.531 cv
545.457 522.375 545.547 522.199 545.602 522 cv
545.656 521.805 545.684 521.602 545.688 521.395 cv
cp
f
560.105 523.32 mo
560.105 523.391 560.098 523.453 560.09 523.508 cv
560.074 523.562 560.063 523.609 560.047 523.645 cv
560.031 523.684 560.008 523.711 559.977 523.727 cv
559.945 523.746 559.914 523.754 559.883 523.754 cv
555.691 523.754 li
555.637 523.754 555.59 523.75 555.551 523.734 cv
555.508 523.727 555.473 523.703 555.445 523.668 cv
555.414 523.641 555.391 523.594 555.379 523.531 cv
555.363 523.473 555.359 523.402 555.359 523.316 cv
555.359 523.242 555.359 523.172 555.367 523.109 cv
555.371 523.051 555.387 523 555.406 522.953 cv
555.426 522.91 555.449 522.867 555.48 522.82 cv
555.508 522.781 555.547 522.73 555.602 522.676 cv
557.117 521.117 li
557.465 520.758 557.742 520.437 557.957 520.152 cv
558.168 519.867 558.332 519.605 558.449 519.371 cv
558.559 519.137 558.637 518.926 558.676 518.734 cv
558.711 518.543 558.727 518.363 558.73 518.191 cv
558.727 518.027 558.699 517.867 558.645 517.715 cv
558.586 517.566 558.504 517.434 558.398 517.32 cv
558.289 517.211 558.156 517.121 557.996 517.051 cv
557.832 516.984 557.645 516.953 557.441 516.949 cv
557.191 516.953 556.973 516.984 556.777 517.051 cv
556.582 517.121 556.41 517.195 556.262 517.27 cv
556.113 517.352 555.988 517.422 555.895 517.484 cv
555.793 517.551 555.723 517.586 555.676 517.582 cv
555.645 517.586 555.617 517.578 555.598 517.559 cv
555.574 517.547 555.555 517.52 555.543 517.484 cv
555.527 517.453 555.52 517.406 555.512 517.344 cv
555.504 517.285 555.5 517.215 555.5 517.133 cv
555.5 517.074 555.5 517.023 555.504 516.98 cv
555.508 516.941 555.516 516.906 555.527 516.871 cv
555.535 516.844 555.547 516.812 555.566 516.781 cv
555.578 516.754 555.609 516.723 555.66 516.68 cv
555.703 516.641 555.785 516.582 555.902 516.512 cv
556.016 516.441 556.16 516.375 556.336 516.305 cv
556.508 516.238 556.699 516.18 556.91 516.129 cv
557.117 516.086 557.336 516.062 557.566 516.059 cv
557.934 516.062 558.254 516.113 558.531 516.215 cv
558.805 516.32 559.035 516.461 559.215 516.641 cv
559.395 516.82 559.531 517.031 559.625 517.27 cv
559.715 517.508 559.758 517.762 559.762 518.027 cv
559.758 518.277 559.738 518.52 559.695 518.754 cv
559.648 518.996 559.555 519.254 559.422 519.531 cv
559.281 519.812 559.082 520.125 558.82 520.465 cv
558.559 520.809 558.211 521.199 557.777 521.645 cv
556.578 522.898 li
559.879 522.898 li
559.906 522.898 559.938 522.91 559.969 522.926 cv
559.996 522.945 560.02 522.969 560.043 523.004 cv
560.059 523.043 560.074 523.09 560.09 523.137 cv
560.098 523.191 560.105 523.25 560.105 523.32 cv
cp
f
566.332 516.605 mo
566.328 516.676 566.324 516.742 566.324 516.797 cv
566.316 516.855 566.309 516.91 566.301 516.961 cv
566.285 517.016 566.273 517.066 566.258 517.113 cv
566.242 517.164 566.223 517.215 566.199 517.27 cv
563.469 523.559 li
563.449 523.609 563.422 523.648 563.395 523.676 cv
563.363 523.707 563.328 523.73 563.281 523.746 cv
563.234 523.762 563.176 523.77 563.109 523.777 cv
563.035 523.785 562.949 523.789 562.855 523.789 cv
562.715 523.789 562.613 523.781 562.543 523.77 cv
562.469 523.758 562.414 523.742 562.383 523.715 cv
562.348 523.691 562.332 523.66 562.336 523.621 cv
562.34 523.586 562.355 523.543 562.379 523.488 cv
565.25 517.059 li
561.613 517.059 li
561.535 517.062 561.48 517.023 561.441 516.941 cv
561.402 516.867 561.383 516.758 561.387 516.613 cv
561.383 516.539 561.387 516.473 561.402 516.418 cv
561.41 516.363 561.426 516.32 561.445 516.281 cv
561.465 516.246 561.488 516.219 561.516 516.199 cv
561.543 516.184 561.574 516.172 561.613 516.172 cv
566.027 516.172 li
566.082 516.172 566.129 516.18 566.172 516.191 cv
566.211 516.203 566.242 516.227 566.266 516.262 cv
566.285 516.297 566.305 516.34 566.316 516.395 cv
566.324 516.449 566.328 516.52 566.332 516.605 cv
cp
f
579.805 523.32 mo
579.805 523.391 579.797 523.453 579.789 523.508 cv
579.773 523.562 579.762 523.609 579.746 523.645 cv
579.73 523.684 579.707 523.711 579.676 523.727 cv
579.645 523.746 579.613 523.754 579.582 523.754 cv
575.391 523.754 li
575.336 523.754 575.289 523.75 575.25 523.734 cv
575.207 523.727 575.172 523.703 575.145 523.668 cv
575.113 523.641 575.09 523.594 575.078 523.531 cv
575.063 523.473 575.059 523.402 575.059 523.316 cv
575.059 523.242 575.059 523.172 575.066 523.109 cv
575.07 523.051 575.086 523 575.105 522.953 cv
575.125 522.91 575.148 522.867 575.18 522.82 cv
575.207 522.781 575.246 522.73 575.301 522.676 cv
576.816 521.117 li
577.164 520.758 577.441 520.437 577.656 520.152 cv
577.867 519.867 578.031 519.605 578.148 519.371 cv
578.258 519.137 578.336 518.926 578.375 518.734 cv
578.41 518.543 578.426 518.363 578.43 518.191 cv
578.426 518.027 578.398 517.867 578.344 517.715 cv
578.285 517.566 578.203 517.434 578.098 517.32 cv
577.988 517.211 577.855 517.121 577.695 517.051 cv
577.531 516.984 577.344 516.953 577.141 516.949 cv
576.891 516.953 576.672 516.984 576.477 517.051 cv
576.281 517.121 576.109 517.195 575.961 517.27 cv
575.813 517.352 575.688 517.422 575.594 517.484 cv
575.492 517.551 575.422 517.586 575.375 517.582 cv
575.344 517.586 575.316 517.578 575.297 517.559 cv
575.273 517.547 575.254 517.52 575.242 517.484 cv
575.227 517.453 575.219 517.406 575.211 517.344 cv
575.203 517.285 575.199 517.215 575.199 517.133 cv
575.199 517.074 575.199 517.023 575.203 516.98 cv
575.207 516.941 575.215 516.906 575.227 516.871 cv
575.234 516.844 575.246 516.812 575.266 516.781 cv
575.277 516.754 575.309 516.723 575.359 516.68 cv
575.402 516.641 575.484 516.582 575.602 516.512 cv
575.715 516.441 575.859 516.375 576.035 516.305 cv
576.207 516.238 576.398 516.18 576.609 516.129 cv
576.816 516.086 577.035 516.062 577.266 516.059 cv
577.633 516.062 577.953 516.113 578.23 516.215 cv
578.504 516.32 578.734 516.461 578.914 516.641 cv
579.094 516.82 579.23 517.031 579.324 517.27 cv
579.414 517.508 579.457 517.762 579.461 518.027 cv
579.457 518.277 579.438 518.52 579.395 518.754 cv
579.348 518.996 579.254 519.254 579.121 519.531 cv
578.98 519.812 578.781 520.125 578.52 520.465 cv
578.258 520.809 577.91 521.199 577.477 521.645 cv
576.277 522.898 li
579.578 522.898 li
579.605 522.898 579.637 522.91 579.668 522.926 cv
579.695 522.945 579.719 522.969 579.742 523.004 cv
579.758 523.043 579.773 523.09 579.789 523.137 cv
579.797 523.191 579.805 523.25 579.805 523.32 cv
cp
f
586.102 521.809 mo
586.102 522.137 586.043 522.43 585.926 522.684 cv
585.809 522.941 585.637 523.156 585.418 523.332 cv
585.195 523.512 584.926 523.645 584.602 523.73 cv
584.273 523.816 583.902 523.859 583.488 523.863 cv
583.098 523.859 582.746 523.82 582.438 523.742 cv
582.129 523.664 581.867 523.543 581.652 523.379 cv
581.438 523.219 581.273 523.023 581.16 522.785 cv
581.047 522.555 580.992 522.285 580.992 521.984 cv
580.992 521.75 581.031 521.531 581.109 521.328 cv
581.188 521.129 581.297 520.945 581.445 520.777 cv
581.59 520.613 581.773 520.457 581.988 520.309 cv
582.199 520.16 582.441 520.02 582.715 519.887 cv
582.48 519.77 582.273 519.645 582.094 519.504 cv
581.914 519.371 581.762 519.223 581.637 519.062 cv
581.512 518.906 581.414 518.738 581.352 518.555 cv
581.281 518.379 581.25 518.184 581.254 517.973 cv
581.25 517.711 581.297 517.461 581.398 517.227 cv
581.492 516.992 581.637 516.789 581.832 516.617 cv
582.02 516.445 582.266 516.312 582.57 516.211 cv
582.867 516.113 583.219 516.062 583.617 516.059 cv
584 516.062 584.328 516.109 584.609 516.199 cv
584.883 516.293 585.113 516.418 585.301 516.574 cv
585.48 516.734 585.617 516.918 585.703 517.133 cv
585.789 517.352 585.832 517.582 585.832 517.824 cv
585.832 518.023 585.797 518.215 585.734 518.398 cv
585.664 518.586 585.57 518.762 585.449 518.922 cv
585.32 519.09 585.168 519.242 584.988 519.383 cv
584.809 519.523 584.602 519.656 584.367 519.781 cv
584.645 519.922 584.891 520.062 585.109 520.203 cv
585.324 520.348 585.504 520.504 585.652 520.668 cv
585.793 520.836 585.906 521.012 585.984 521.195 cv
586.063 521.383 586.102 521.586 586.102 521.809 cv
cp
584.836 517.918 mo
584.836 517.754 584.805 517.605 584.75 517.473 cv
584.691 517.34 584.609 517.227 584.504 517.133 cv
584.391 517.039 584.254 516.969 584.094 516.922 cv
583.93 516.875 583.746 516.852 583.543 516.848 cv
583.117 516.852 582.797 516.945 582.582 517.133 cv
582.363 517.324 582.258 517.586 582.258 517.918 cv
582.258 518.07 582.281 518.215 582.336 518.344 cv
582.387 518.477 582.469 518.598 582.582 518.715 cv
582.691 518.832 582.832 518.949 583.004 519.059 cv
583.172 519.172 583.375 519.285 583.613 519.406 cv
584.004 519.203 584.309 518.98 584.52 518.734 cv
584.73 518.488 584.836 518.215 584.836 517.918 cv
cp
585.082 521.914 mo
585.082 521.734 585.047 521.574 584.98 521.426 cv
584.914 521.285 584.813 521.148 584.68 521.016 cv
584.543 520.891 584.375 520.766 584.176 520.645 cv
583.973 520.527 583.742 520.402 583.477 520.273 cv
583.227 520.398 583.008 520.52 582.828 520.637 cv
582.641 520.758 582.488 520.883 582.371 521.012 cv
582.246 521.145 582.156 521.281 582.102 521.422 cv
582.039 521.562 582.012 521.719 582.012 521.891 cv
582.012 522.27 582.141 522.562 582.402 522.77 cv
582.66 522.98 583.047 523.086 583.566 523.082 cv
584.063 523.086 584.441 522.98 584.699 522.77 cv
584.953 522.559 585.082 522.273 585.082 521.914 cv
cp
f
599.516 523.32 mo
599.516 523.391 599.508 523.453 599.5 523.508 cv
599.484 523.562 599.473 523.609 599.457 523.645 cv
599.441 523.684 599.418 523.711 599.387 523.727 cv
599.355 523.746 599.324 523.754 599.293 523.754 cv
595.102 523.754 li
595.047 523.754 595 523.75 594.961 523.734 cv
594.918 523.727 594.883 523.703 594.855 523.668 cv
594.824 523.641 594.801 523.594 594.789 523.531 cv
594.773 523.473 594.77 523.402 594.77 523.316 cv
594.77 523.242 594.77 523.172 594.777 523.109 cv
594.781 523.051 594.797 523 594.816 522.953 cv
594.836 522.91 594.859 522.867 594.891 522.82 cv
594.918 522.781 594.957 522.73 595.012 522.676 cv
596.527 521.117 li
596.875 520.758 597.152 520.437 597.367 520.152 cv
597.578 519.867 597.742 519.605 597.859 519.371 cv
597.969 519.137 598.047 518.926 598.086 518.734 cv
598.121 518.543 598.137 518.363 598.141 518.191 cv
598.137 518.027 598.109 517.867 598.055 517.715 cv
597.996 517.566 597.914 517.434 597.809 517.32 cv
597.699 517.211 597.566 517.121 597.406 517.051 cv
597.242 516.984 597.055 516.953 596.852 516.949 cv
596.602 516.953 596.383 516.984 596.188 517.051 cv
595.992 517.121 595.82 517.195 595.672 517.27 cv
595.523 517.352 595.398 517.422 595.305 517.484 cv
595.203 517.551 595.133 517.586 595.086 517.582 cv
595.055 517.586 595.027 517.578 595.008 517.559 cv
594.984 517.547 594.965 517.52 594.953 517.484 cv
594.938 517.453 594.93 517.406 594.922 517.344 cv
594.914 517.285 594.91 517.215 594.91 517.133 cv
594.91 517.074 594.91 517.023 594.914 516.98 cv
594.918 516.941 594.926 516.906 594.938 516.871 cv
594.945 516.844 594.957 516.812 594.977 516.781 cv
594.988 516.754 595.02 516.723 595.07 516.68 cv
595.113 516.641 595.195 516.582 595.313 516.512 cv
595.426 516.441 595.57 516.375 595.746 516.305 cv
595.918 516.238 596.109 516.18 596.32 516.129 cv
596.527 516.086 596.746 516.062 596.977 516.059 cv
597.344 516.062 597.664 516.113 597.941 516.215 cv
598.215 516.32 598.445 516.461 598.625 516.641 cv
598.805 516.82 598.941 517.031 599.035 517.27 cv
599.125 517.508 599.168 517.762 599.172 518.027 cv
599.168 518.277 599.148 518.52 599.105 518.754 cv
599.059 518.996 598.965 519.254 598.832 519.531 cv
598.691 519.812 598.492 520.125 598.23 520.465 cv
597.969 520.809 597.621 521.199 597.188 521.645 cv
595.988 522.898 li
599.289 522.898 li
599.316 522.898 599.348 522.91 599.379 522.926 cv
599.406 522.945 599.43 522.969 599.453 523.004 cv
599.469 523.043 599.484 523.09 599.5 523.137 cv
599.508 523.191 599.516 523.25 599.516 523.32 cv
cp
f
605.691 519.664 mo
605.691 519.992 605.672 520.324 605.633 520.66 cv
605.594 520.996 605.527 521.32 605.434 521.633 cv
605.34 521.945 605.211 522.238 605.055 522.504 cv
604.895 522.777 604.695 523.012 604.457 523.215 cv
604.215 523.418 603.93 523.578 603.602 523.691 cv
603.27 523.805 602.887 523.859 602.453 523.863 cv
602.281 523.859 602.117 523.848 601.961 523.832 cv
601.801 523.809 601.66 523.785 601.535 523.754 cv
601.406 523.723 601.301 523.691 601.215 523.656 cv
601.129 523.621 601.066 523.586 601.027 523.551 cv
600.988 523.516 600.957 523.469 600.941 523.406 cv
600.918 523.352 600.91 523.27 600.914 523.16 cv
600.91 523.082 600.914 523.012 600.922 522.957 cv
600.93 522.906 600.938 522.867 600.949 522.84 cv
600.961 522.816 600.977 522.801 601 522.785 cv
601.016 522.777 601.043 522.77 601.078 522.77 cv
601.121 522.77 601.184 522.785 601.262 522.812 cv
601.34 522.844 601.438 522.875 601.555 522.91 cv
601.672 522.949 601.813 522.984 601.977 523.008 cv
602.137 523.039 602.316 523.051 602.516 523.051 cv
602.895 523.051 603.219 522.98 603.492 522.832 cv
603.762 522.691 603.984 522.492 604.156 522.242 cv
604.328 521.996 604.457 521.711 604.543 521.387 cv
604.629 521.066 604.676 520.727 604.684 520.363 cv
604.477 520.484 604.227 520.59 603.941 520.684 cv
603.648 520.777 603.316 520.824 602.945 520.824 cv
602.52 520.824 602.164 520.77 601.879 520.652 cv
601.59 520.543 601.359 520.383 601.188 520.18 cv
601.012 519.98 600.887 519.746 600.813 519.469 cv
600.734 519.199 600.699 518.898 600.699 518.574 cv
600.699 518.238 600.746 517.922 600.844 517.617 cv
600.941 517.316 601.094 517.047 601.301 516.816 cv
601.508 516.59 601.773 516.406 602.094 516.266 cv
602.414 516.129 602.797 516.062 603.242 516.059 cv
603.559 516.062 603.836 516.102 604.082 516.18 cv
604.324 516.262 604.539 516.379 604.719 516.527 cv
604.898 516.684 605.051 516.863 605.176 517.074 cv
605.301 517.285 605.398 517.527 605.477 517.797 cv
605.551 518.066 605.605 518.359 605.641 518.672 cv
605.672 518.992 605.691 519.32 605.691 519.664 cv
cp
604.664 519.551 mo
604.66 519.055 604.629 518.633 604.566 518.289 cv
604.5 517.949 604.402 517.672 604.273 517.461 cv
604.141 517.25 603.98 517.098 603.797 517.004 cv
603.605 516.91 603.391 516.863 603.148 516.863 cv
602.891 516.863 602.672 516.91 602.496 517 cv
602.313 517.094 602.164 517.219 602.055 517.371 cv
601.938 517.527 601.855 517.699 601.801 517.895 cv
601.746 518.09 601.719 518.293 601.719 518.496 cv
601.719 518.73 601.742 518.941 601.793 519.133 cv
601.84 519.324 601.918 519.484 602.031 519.617 cv
602.137 519.75 602.281 519.855 602.457 519.926 cv
602.629 520.004 602.844 520.039 603.109 520.035 cv
603.398 520.039 603.684 519.996 603.957 519.902 cv
604.23 519.816 604.465 519.699 604.664 519.551 cv
cp
f
619.156 521.586 mo
619.156 521.934 619.094 522.25 618.973 522.527 cv
618.852 522.809 618.68 523.047 618.453 523.246 cv
618.227 523.445 617.945 523.598 617.613 523.703 cv
617.281 523.809 616.906 523.859 616.488 523.863 cv
616.234 523.859 615.996 523.84 615.777 523.801 cv
615.555 523.762 615.359 523.715 615.191 523.66 cv
615.016 523.605 614.875 523.547 614.762 523.484 cv
614.645 523.422 614.57 523.379 614.547 523.352 cv
614.516 523.324 614.496 523.297 614.48 523.27 cv
614.465 523.242 614.449 523.207 614.438 523.168 cv
614.426 523.129 614.418 523.082 614.41 523.027 cv
614.402 522.973 614.398 522.902 614.402 522.816 cv
614.398 522.676 614.414 522.578 614.445 522.523 cv
614.473 522.469 614.512 522.441 614.566 522.441 cv
614.602 522.441 614.672 522.473 614.777 522.535 cv
614.883 522.598 615.02 522.668 615.188 522.738 cv
615.352 522.816 615.547 522.883 615.77 522.941 cv
615.992 523.008 616.238 523.039 616.516 523.035 cv
616.773 523.039 617.008 523.004 617.211 522.934 cv
617.41 522.867 617.578 522.773 617.715 522.652 cv
617.852 522.535 617.953 522.395 618.023 522.223 cv
618.09 522.059 618.125 521.875 618.125 521.68 cv
618.125 521.465 618.078 521.273 617.992 521.098 cv
617.902 520.93 617.777 520.781 617.613 520.652 cv
617.445 520.531 617.238 520.434 616.996 520.367 cv
616.746 520.305 616.469 520.273 616.164 520.27 cv
615.422 520.27 li
615.387 520.273 615.355 520.266 615.324 520.25 cv
615.293 520.234 615.266 520.211 615.246 520.18 cv
615.223 520.148 615.203 520.109 615.191 520.059 cv
615.176 520.008 615.172 519.941 615.172 519.855 cv
615.172 519.785 615.176 519.723 615.188 519.672 cv
615.199 519.625 615.215 519.586 615.238 519.555 cv
615.254 519.527 615.281 519.508 615.313 519.492 cv
615.34 519.484 615.371 519.477 615.406 519.473 cv
616.066 519.473 li
616.324 519.477 616.555 519.441 616.762 519.371 cv
616.965 519.305 617.141 519.211 617.281 519.082 cv
617.422 518.961 617.531 518.812 617.609 518.637 cv
617.688 518.465 617.727 518.27 617.727 518.051 cv
617.727 517.898 617.699 517.75 617.648 517.605 cv
617.598 517.465 617.523 517.34 617.422 517.234 cv
617.32 517.129 617.188 517.047 617.031 516.984 cv
616.867 516.93 616.688 516.898 616.484 516.895 cv
616.258 516.898 616.047 516.934 615.859 516.996 cv
615.664 517.066 615.496 517.137 615.352 517.215 cv
615.199 517.293 615.078 517.367 614.984 517.434 cv
614.887 517.504 614.816 517.539 614.777 517.535 cv
614.75 517.539 614.727 517.535 614.707 517.523 cv
614.684 517.516 614.664 517.496 614.652 517.465 cv
614.637 517.437 614.629 517.395 614.621 517.34 cv
614.613 517.289 614.609 517.219 614.613 517.133 cv
614.609 517.074 614.613 517.023 614.621 516.977 cv
614.625 516.934 614.633 516.895 614.645 516.859 cv
614.652 516.828 614.664 516.797 614.684 516.77 cv
614.695 516.746 614.723 516.715 614.762 516.676 cv
614.801 516.637 614.875 516.582 614.988 516.512 cv
615.102 516.441 615.242 516.375 615.41 516.305 cv
615.574 516.238 615.766 516.18 615.984 516.129 cv
616.199 516.086 616.434 516.062 616.684 516.059 cv
617.035 516.062 617.344 516.105 617.609 516.195 cv
617.875 516.289 618.094 516.418 618.273 516.578 cv
618.449 516.746 618.582 516.941 618.672 517.168 cv
618.758 517.395 618.805 517.648 618.805 517.926 cv
618.805 518.164 618.773 518.387 618.711 518.59 cv
618.648 518.797 618.555 518.977 618.434 519.133 cv
618.313 519.293 618.164 519.43 617.988 519.539 cv
617.813 519.656 617.609 519.73 617.379 519.77 cv
617.379 519.781 li
617.641 519.812 617.879 519.879 618.098 519.98 cv
618.313 520.082 618.5 520.211 618.66 520.367 cv
618.813 520.523 618.934 520.707 619.023 520.918 cv
619.109 521.129 619.156 521.352 619.156 521.586 cv
cp
f
625.586 519.945 mo
625.582 520.527 625.535 521.059 625.449 521.539 cv
625.355 522.023 625.203 522.437 624.992 522.781 cv
624.773 523.125 624.496 523.395 624.156 523.582 cv
623.809 523.77 623.387 523.859 622.887 523.863 cv
622.41 523.859 622.008 523.777 621.684 523.609 cv
621.355 523.441 621.094 523.191 620.895 522.859 cv
620.691 522.531 620.547 522.125 620.469 521.641 cv
620.383 521.16 620.344 520.605 620.344 519.98 cv
620.344 519.402 620.391 518.875 620.484 518.391 cv
620.578 517.914 620.73 517.5 620.941 517.148 cv
621.152 516.805 621.43 516.535 621.773 516.344 cv
622.117 516.156 622.539 516.062 623.039 516.059 cv
623.516 516.062 623.918 516.148 624.246 516.316 cv
624.574 516.488 624.836 516.738 625.035 517.066 cv
625.234 517.398 625.375 517.805 625.461 518.285 cv
625.539 518.77 625.582 519.32 625.586 519.945 cv
cp
624.555 520.016 mo
624.551 519.641 624.539 519.301 624.516 518.996 cv
624.488 518.695 624.445 518.43 624.395 518.199 cv
624.34 517.973 624.273 517.777 624.188 517.605 cv
624.102 517.441 624 517.305 623.887 517.195 cv
623.766 517.094 623.633 517.016 623.484 516.961 cv
623.336 516.914 623.168 516.887 622.98 516.887 cv
622.648 516.887 622.379 516.965 622.172 517.121 cv
621.961 517.277 621.797 517.492 621.68 517.766 cv
621.563 518.039 621.48 518.359 621.438 518.727 cv
621.395 519.094 621.375 519.488 621.375 519.91 cv
621.375 520.48 621.402 520.965 621.461 521.355 cv
621.52 521.754 621.613 522.074 621.738 522.324 cv
621.863 522.574 622.023 522.758 622.227 522.871 cv
622.422 522.984 622.664 523.039 622.945 523.039 cv
623.164 523.039 623.355 523.004 623.523 522.934 cv
623.688 522.863 623.828 522.766 623.949 522.633 cv
624.066 522.504 624.168 522.344 624.246 522.16 cv
624.324 521.98 624.387 521.777 624.434 521.551 cv
624.48 521.328 624.512 521.09 624.527 520.828 cv
624.543 520.57 624.551 520.297 624.555 520.016 cv
cp
f
638.855 521.586 mo
638.855 521.934 638.793 522.25 638.672 522.527 cv
638.551 522.809 638.379 523.047 638.152 523.246 cv
637.926 523.445 637.645 523.598 637.313 523.703 cv
636.98 523.809 636.605 523.859 636.188 523.863 cv
635.934 523.859 635.695 523.84 635.477 523.801 cv
635.254 523.762 635.059 523.715 634.891 523.66 cv
634.715 523.605 634.574 523.547 634.461 523.484 cv
634.344 523.422 634.27 523.379 634.246 523.352 cv
634.215 523.324 634.195 523.297 634.18 523.27 cv
634.164 523.242 634.148 523.207 634.137 523.168 cv
634.125 523.129 634.117 523.082 634.109 523.027 cv
634.102 522.973 634.098 522.902 634.102 522.816 cv
634.098 522.676 634.113 522.578 634.145 522.523 cv
634.172 522.469 634.211 522.441 634.266 522.441 cv
634.301 522.441 634.371 522.473 634.477 522.535 cv
634.582 522.598 634.719 522.668 634.887 522.738 cv
635.051 522.816 635.246 522.883 635.469 522.941 cv
635.691 523.008 635.938 523.039 636.215 523.035 cv
636.473 523.039 636.707 523.004 636.91 522.934 cv
637.109 522.867 637.277 522.773 637.414 522.652 cv
637.551 522.535 637.652 522.395 637.723 522.223 cv
637.789 522.059 637.824 521.875 637.824 521.68 cv
637.824 521.465 637.777 521.273 637.691 521.098 cv
637.602 520.93 637.477 520.781 637.313 520.652 cv
637.145 520.531 636.938 520.434 636.695 520.367 cv
636.445 520.305 636.168 520.273 635.863 520.27 cv
635.121 520.27 li
635.086 520.273 635.055 520.266 635.023 520.25 cv
634.992 520.234 634.965 520.211 634.945 520.18 cv
634.922 520.148 634.902 520.109 634.891 520.059 cv
634.875 520.008 634.871 519.941 634.871 519.855 cv
634.871 519.785 634.875 519.723 634.887 519.672 cv
634.898 519.625 634.914 519.586 634.938 519.555 cv
634.953 519.527 634.98 519.508 635.012 519.492 cv
635.039 519.484 635.07 519.477 635.105 519.473 cv
635.766 519.473 li
636.023 519.477 636.254 519.441 636.461 519.371 cv
636.664 519.305 636.84 519.211 636.98 519.082 cv
637.121 518.961 637.23 518.812 637.309 518.637 cv
637.387 518.465 637.426 518.27 637.426 518.051 cv
637.426 517.898 637.398 517.75 637.348 517.605 cv
637.297 517.465 637.223 517.34 637.121 517.234 cv
637.02 517.129 636.887 517.047 636.73 516.984 cv
636.566 516.93 636.387 516.898 636.184 516.895 cv
635.957 516.898 635.746 516.934 635.559 516.996 cv
635.363 517.066 635.195 517.137 635.051 517.215 cv
634.898 517.293 634.777 517.367 634.684 517.434 cv
634.586 517.504 634.516 517.539 634.477 517.535 cv
634.449 517.539 634.426 517.535 634.406 517.523 cv
634.383 517.516 634.363 517.496 634.352 517.465 cv
634.336 517.437 634.328 517.395 634.32 517.34 cv
634.313 517.289 634.309 517.219 634.313 517.133 cv
634.309 517.074 634.313 517.023 634.32 516.977 cv
634.324 516.934 634.332 516.895 634.344 516.859 cv
634.352 516.828 634.363 516.797 634.383 516.77 cv
634.395 516.746 634.422 516.715 634.461 516.676 cv
634.5 516.637 634.574 516.582 634.688 516.512 cv
634.801 516.441 634.941 516.375 635.109 516.305 cv
635.273 516.238 635.465 516.18 635.684 516.129 cv
635.898 516.086 636.133 516.062 636.383 516.059 cv
636.734 516.062 637.043 516.105 637.309 516.195 cv
637.574 516.289 637.793 516.418 637.973 516.578 cv
638.148 516.746 638.281 516.941 638.371 517.168 cv
638.457 517.395 638.504 517.648 638.504 517.926 cv
638.504 518.164 638.473 518.387 638.41 518.59 cv
638.348 518.797 638.254 518.977 638.133 519.133 cv
638.012 519.293 637.863 519.43 637.688 519.539 cv
637.512 519.656 637.309 519.73 637.078 519.77 cv
637.078 519.781 li
637.34 519.812 637.578 519.879 637.797 519.98 cv
638.012 520.082 638.199 520.211 638.359 520.367 cv
638.512 520.523 638.633 520.707 638.723 520.918 cv
638.809 521.129 638.855 521.352 638.855 521.586 cv
cp
f
645.051 523.355 mo
645.047 523.43 645.043 523.492 645.035 523.543 cv
645.023 523.598 645.008 523.641 644.988 523.668 cv
644.965 523.703 644.941 523.727 644.918 523.734 cv
644.895 523.75 644.867 523.754 644.84 523.754 cv
640.879 523.754 li
640.852 523.754 640.828 523.75 640.805 523.734 cv
640.781 523.727 640.758 523.703 640.738 523.668 cv
640.715 523.641 640.699 523.598 640.688 523.543 cv
640.672 523.492 640.664 523.43 640.668 523.355 cv
640.664 523.285 640.672 523.227 640.688 523.176 cv
640.699 523.125 640.711 523.082 640.73 523.047 cv
640.746 523.016 640.77 522.992 640.793 522.973 cv
640.816 522.957 640.844 522.945 640.879 522.945 cv
642.465 522.945 li
642.465 517.18 li
640.996 518.051 li
640.922 518.098 640.863 518.121 640.82 518.125 cv
640.773 518.137 640.738 518.129 640.711 518.098 cv
640.68 518.074 640.66 518.031 640.652 517.973 cv
640.645 517.914 640.641 517.84 640.641 517.746 cv
640.641 517.684 640.641 517.625 640.648 517.578 cv
640.652 517.531 640.664 517.492 640.676 517.461 cv
640.684 517.43 640.699 517.402 640.723 517.379 cv
640.746 517.355 640.773 517.332 640.809 517.309 cv
642.559 516.191 li
642.57 516.18 642.59 516.168 642.617 516.16 cv
642.637 516.152 642.668 516.145 642.703 516.137 cv
642.734 516.129 642.773 516.125 642.824 516.125 cv
642.867 516.125 642.926 516.125 643.004 516.121 cv
643.094 516.125 643.172 516.129 643.238 516.133 cv
643.297 516.145 643.348 516.156 643.383 516.164 cv
643.414 516.18 643.438 516.195 643.453 516.215 cv
643.465 516.238 643.469 516.262 643.473 516.285 cv
643.473 522.945 li
644.84 522.945 li
644.867 522.945 644.898 522.957 644.93 522.973 cv
644.957 522.992 644.977 523.016 644.996 523.047 cv
645.012 523.082 645.027 523.125 645.035 523.176 cv
645.043 523.227 645.047 523.285 645.051 523.355 cv
cp
f
658.586 521.586 mo
658.586 521.934 658.523 522.25 658.402 522.527 cv
658.281 522.809 658.109 523.047 657.883 523.246 cv
657.656 523.445 657.375 523.598 657.043 523.703 cv
656.711 523.809 656.336 523.859 655.918 523.863 cv
655.664 523.859 655.426 523.84 655.207 523.801 cv
654.984 523.762 654.789 523.715 654.621 523.66 cv
654.445 523.605 654.305 523.547 654.191 523.484 cv
654.074 523.422 654 523.379 653.977 523.352 cv
653.945 523.324 653.926 523.297 653.91 523.27 cv
653.895 523.242 653.879 523.207 653.867 523.168 cv
653.855 523.129 653.848 523.082 653.84 523.027 cv
653.832 522.973 653.828 522.902 653.832 522.816 cv
653.828 522.676 653.844 522.578 653.875 522.523 cv
653.902 522.469 653.941 522.441 653.996 522.441 cv
654.031 522.441 654.102 522.473 654.207 522.535 cv
654.313 522.598 654.449 522.668 654.617 522.738 cv
654.781 522.816 654.977 522.883 655.199 522.941 cv
655.422 523.008 655.668 523.039 655.945 523.035 cv
656.203 523.039 656.438 523.004 656.641 522.934 cv
656.84 522.867 657.008 522.773 657.145 522.652 cv
657.281 522.535 657.383 522.395 657.453 522.223 cv
657.52 522.059 657.555 521.875 657.555 521.68 cv
657.555 521.465 657.508 521.273 657.422 521.098 cv
657.332 520.93 657.207 520.781 657.043 520.652 cv
656.875 520.531 656.668 520.434 656.426 520.367 cv
656.176 520.305 655.898 520.273 655.594 520.27 cv
654.852 520.27 li
654.816 520.273 654.785 520.266 654.754 520.25 cv
654.723 520.234 654.695 520.211 654.676 520.18 cv
654.652 520.148 654.633 520.109 654.621 520.059 cv
654.605 520.008 654.602 519.941 654.602 519.855 cv
654.602 519.785 654.605 519.723 654.617 519.672 cv
654.629 519.625 654.645 519.586 654.668 519.555 cv
654.684 519.527 654.711 519.508 654.742 519.492 cv
654.77 519.484 654.801 519.477 654.836 519.473 cv
655.496 519.473 li
655.754 519.477 655.984 519.441 656.191 519.371 cv
656.395 519.305 656.57 519.211 656.711 519.082 cv
656.852 518.961 656.961 518.812 657.039 518.637 cv
657.117 518.465 657.156 518.27 657.156 518.051 cv
657.156 517.898 657.129 517.75 657.078 517.605 cv
657.027 517.465 656.953 517.34 656.852 517.234 cv
656.75 517.129 656.617 517.047 656.461 516.984 cv
656.297 516.93 656.117 516.898 655.914 516.895 cv
655.688 516.898 655.477 516.934 655.289 516.996 cv
655.094 517.066 654.926 517.137 654.781 517.215 cv
654.629 517.293 654.508 517.367 654.414 517.434 cv
654.316 517.504 654.246 517.539 654.207 517.535 cv
654.18 517.539 654.156 517.535 654.137 517.523 cv
654.113 517.516 654.094 517.496 654.082 517.465 cv
654.066 517.437 654.059 517.395 654.051 517.34 cv
654.043 517.289 654.039 517.219 654.043 517.133 cv
654.039 517.074 654.043 517.023 654.051 516.977 cv
654.055 516.934 654.063 516.895 654.074 516.859 cv
654.082 516.828 654.094 516.797 654.113 516.77 cv
654.125 516.746 654.152 516.715 654.191 516.676 cv
654.23 516.637 654.305 516.582 654.418 516.512 cv
654.531 516.441 654.672 516.375 654.84 516.305 cv
655.004 516.238 655.195 516.18 655.414 516.129 cv
655.629 516.086 655.863 516.062 656.113 516.059 cv
656.465 516.062 656.773 516.105 657.039 516.195 cv
657.305 516.289 657.523 516.418 657.703 516.578 cv
657.879 516.746 658.012 516.941 658.102 517.168 cv
658.188 517.395 658.234 517.648 658.234 517.926 cv
658.234 518.164 658.203 518.387 658.141 518.59 cv
658.078 518.797 657.984 518.977 657.863 519.133 cv
657.742 519.293 657.594 519.43 657.418 519.539 cv
657.242 519.656 657.039 519.73 656.809 519.77 cv
656.809 519.781 li
657.07 519.812 657.309 519.879 657.527 519.98 cv
657.742 520.082 657.93 520.211 658.09 520.367 cv
658.242 520.523 658.363 520.707 658.453 520.918 cv
658.539 521.129 658.586 521.352 658.586 521.586 cv
cp
f
664.766 523.32 mo
664.766 523.391 664.758 523.453 664.75 523.508 cv
664.734 523.562 664.723 523.609 664.707 523.645 cv
664.691 523.684 664.668 523.711 664.637 523.727 cv
664.605 523.746 664.574 523.754 664.543 523.754 cv
660.352 523.754 li
660.297 523.754 660.25 523.75 660.211 523.734 cv
660.168 523.727 660.133 523.703 660.105 523.668 cv
660.074 523.641 660.051 523.594 660.039 523.531 cv
660.023 523.473 660.02 523.402 660.02 523.316 cv
660.02 523.242 660.02 523.172 660.027 523.109 cv
660.031 523.051 660.047 523 660.066 522.953 cv
660.086 522.91 660.109 522.867 660.141 522.82 cv
660.168 522.781 660.207 522.73 660.262 522.676 cv
661.777 521.117 li
662.125 520.758 662.402 520.437 662.617 520.152 cv
662.828 519.867 662.992 519.605 663.109 519.371 cv
663.219 519.137 663.297 518.926 663.336 518.734 cv
663.371 518.543 663.387 518.363 663.391 518.191 cv
663.387 518.027 663.359 517.867 663.305 517.715 cv
663.246 517.566 663.164 517.434 663.059 517.32 cv
662.949 517.211 662.816 517.121 662.656 517.051 cv
662.492 516.984 662.305 516.953 662.102 516.949 cv
661.852 516.953 661.633 516.984 661.438 517.051 cv
661.242 517.121 661.07 517.195 660.922 517.27 cv
660.773 517.352 660.648 517.422 660.555 517.484 cv
660.453 517.551 660.383 517.586 660.336 517.582 cv
660.305 517.586 660.277 517.578 660.258 517.559 cv
660.234 517.547 660.215 517.52 660.203 517.484 cv
660.188 517.453 660.18 517.406 660.172 517.344 cv
660.164 517.285 660.16 517.215 660.16 517.133 cv
660.16 517.074 660.16 517.023 660.164 516.98 cv
660.168 516.941 660.176 516.906 660.188 516.871 cv
660.195 516.844 660.207 516.812 660.227 516.781 cv
660.238 516.754 660.27 516.723 660.32 516.68 cv
660.363 516.641 660.445 516.582 660.563 516.512 cv
660.676 516.441 660.82 516.375 660.996 516.305 cv
661.168 516.238 661.359 516.18 661.57 516.129 cv
661.777 516.086 661.996 516.062 662.227 516.059 cv
662.594 516.062 662.914 516.113 663.191 516.215 cv
663.465 516.32 663.695 516.461 663.875 516.641 cv
664.055 516.82 664.191 517.031 664.285 517.27 cv
664.375 517.508 664.418 517.762 664.422 518.027 cv
664.418 518.277 664.398 518.52 664.355 518.754 cv
664.309 518.996 664.215 519.254 664.082 519.531 cv
663.941 519.812 663.742 520.125 663.48 520.465 cv
663.219 520.809 662.871 521.199 662.438 521.645 cv
661.238 522.898 li
664.539 522.898 li
664.566 522.898 664.598 522.91 664.629 522.926 cv
664.656 522.945 664.68 522.969 664.703 523.004 cv
664.719 523.043 664.734 523.09 664.75 523.137 cv
664.758 523.191 664.766 523.25 664.766 523.32 cv
cp
f
7.629 317.23 mo
7.73 317.234 7.816 317.238 7.887 317.246 cv
7.961 317.258 8.02 317.273 8.063 317.297 cv
8.109 317.32 8.141 317.352 8.16 317.383 cv
8.184 317.422 8.195 317.457 8.191 317.496 cv
8.191 320.332 li
16.934 320.332 li
16.977 320.332 17.012 320.344 17.043 320.363 cv
17.074 320.387 17.102 320.422 17.117 320.473 cv
17.137 320.527 17.148 320.598 17.164 320.68 cv
17.176 320.77 17.184 320.875 17.184 321 cv
17.184 321.125 17.176 321.234 17.164 321.32 cv
17.148 321.414 17.137 321.484 17.117 321.531 cv
17.102 321.586 17.074 321.621 17.043 321.641 cv
17.012 321.664 16.977 321.676 16.934 321.672 cv
8.191 321.672 li
8.191 324.508 li
8.195 324.555 8.184 324.59 8.16 324.621 cv
8.141 324.656 8.109 324.684 8.063 324.703 cv
8.02 324.727 7.961 324.746 7.887 324.754 cv
7.816 324.77 7.73 324.773 7.629 324.773 cv
7.531 324.773 7.445 324.77 7.367 324.754 cv
7.297 324.746 7.234 324.727 7.184 324.703 cv
7.141 324.684 7.105 324.656 7.082 324.621 cv
7.063 324.59 7.055 324.555 7.051 324.508 cv
7.051 317.496 li
7.055 317.457 7.063 317.422 7.082 317.383 cv
7.105 317.352 7.141 317.32 7.184 317.297 cv
7.234 317.273 7.297 317.258 7.367 317.246 cv
7.445 317.238 7.531 317.234 7.629 317.23 cv
cp
f
16.941 314.641 mo
16.988 314.645 17.023 314.656 17.047 314.672 cv
17.078 314.695 17.102 314.727 17.121 314.773 cv
17.141 314.82 17.152 314.887 17.168 314.965 cv
17.176 315.051 17.184 315.156 17.184 315.285 cv
17.184 315.414 17.176 315.52 17.168 315.598 cv
17.152 315.684 17.141 315.75 17.121 315.797 cv
17.102 315.852 17.078 315.883 17.047 315.898 cv
17.023 315.918 16.988 315.93 16.941 315.926 cv
9.93 315.926 li
9.895 315.93 9.863 315.918 9.828 315.898 cv
9.801 315.883 9.773 315.852 9.75 315.797 cv
9.73 315.75 9.715 315.684 9.703 315.598 cv
9.695 315.52 9.691 315.414 9.688 315.285 cv
9.691 315.156 9.695 315.051 9.703 314.965 cv
9.715 314.887 9.73 314.82 9.75 314.773 cv
9.773 314.727 9.801 314.695 9.828 314.672 cv
9.863 314.656 9.895 314.645 9.93 314.641 cv
cp
7.559 314.492 mo
7.863 314.492 8.07 314.551 8.176 314.664 cv
8.289 314.777 8.344 314.988 8.34 315.293 cv
8.344 315.598 8.289 315.805 8.18 315.914 cv
8.074 316.031 7.871 316.086 7.574 316.082 cv
7.273 316.086 7.07 316.027 6.961 315.91 cv
6.855 315.797 6.801 315.586 6.797 315.277 cv
6.801 314.977 6.855 314.773 6.957 314.66 cv
7.066 314.551 7.266 314.492 7.559 314.492 cv
cp
f
16.941 301.785 mo
16.988 301.789 17.023 301.797 17.047 301.816 cv
17.078 301.84 17.102 301.875 17.121 301.918 cv
17.141 301.969 17.152 302.035 17.168 302.113 cv
17.176 302.199 17.184 302.301 17.184 302.426 cv
17.184 302.559 17.176 302.668 17.168 302.746 cv
17.152 302.832 17.141 302.898 17.121 302.945 cv
17.102 303 17.078 303.035 17.047 303.051 cv
17.023 303.074 16.988 303.082 16.941 303.082 cv
12.68 303.082 li
12.387 303.082 12.117 303.109 11.871 303.16 cv
11.629 303.215 11.418 303.297 11.238 303.41 cv
11.063 303.523 10.926 303.668 10.832 303.844 cv
10.738 304.023 10.691 304.234 10.691 304.469 cv
10.691 304.766 10.809 305.062 11.035 305.359 cv
11.27 305.664 11.602 305.992 12.039 306.348 cv
16.941 306.348 li
16.988 306.352 17.023 306.363 17.047 306.379 cv
17.078 306.402 17.102 306.434 17.121 306.48 cv
17.141 306.531 17.152 306.598 17.168 306.68 cv
17.176 306.766 17.184 306.871 17.184 306.992 cv
17.184 307.113 17.176 307.215 17.168 307.301 cv
17.152 307.387 17.141 307.457 17.121 307.504 cv
17.102 307.559 17.078 307.59 17.047 307.605 cv
17.023 307.625 16.988 307.637 16.941 307.633 cv
12.68 307.633 li
12.387 307.637 12.117 307.664 11.871 307.719 cv
11.629 307.777 11.418 307.863 11.238 307.977 cv
11.063 308.09 10.926 308.234 10.832 308.406 cv
10.738 308.586 10.691 308.793 10.691 309.027 cv
10.691 309.328 10.809 309.625 11.035 309.926 cv
11.27 310.227 11.602 310.555 12.039 310.906 cv
16.941 310.906 li
16.988 310.91 17.023 310.922 17.047 310.937 cv
17.078 310.961 17.102 310.992 17.121 311.039 cv
17.141 311.086 17.152 311.152 17.168 311.23 cv
17.176 311.316 17.184 311.422 17.184 311.551 cv
17.184 311.68 17.176 311.785 17.168 311.863 cv
17.152 311.949 17.141 312.016 17.121 312.062 cv
17.102 312.117 17.078 312.148 17.047 312.164 cv
17.023 312.184 16.988 312.195 16.941 312.191 cv
9.93 312.191 li
9.891 312.195 9.855 312.187 9.824 312.168 cv
9.797 312.156 9.773 312.125 9.746 312.074 cv
9.727 312.031 9.711 311.969 9.699 311.895 cv
9.695 311.824 9.691 311.73 9.688 311.605 cv
9.691 311.496 9.695 311.398 9.699 311.32 cv
9.711 311.246 9.727 311.187 9.746 311.145 cv
9.773 311.105 9.797 311.078 9.824 311.059 cv
9.855 311.043 9.891 311.035 9.93 311.031 cv
10.855 311.031 li
10.414 310.641 10.094 310.258 9.887 309.883 cv
9.684 309.516 9.578 309.137 9.578 308.754 cv
9.578 308.465 9.613 308.207 9.68 307.973 cv
9.75 307.746 9.844 307.539 9.965 307.359 cv
10.086 307.184 10.23 307.035 10.398 306.906 cv
10.57 306.785 10.762 306.68 10.965 306.594 cv
10.715 306.363 10.5 306.141 10.32 305.93 cv
10.148 305.719 10.004 305.516 9.891 305.32 cv
9.785 305.125 9.707 304.937 9.652 304.754 cv
9.605 304.57 9.578 304.383 9.578 304.195 cv
9.578 303.742 9.66 303.363 9.816 303.059 cv
9.98 302.754 10.191 302.508 10.453 302.312 cv
10.719 302.125 11.027 301.988 11.383 301.906 cv
11.738 301.828 12.113 301.789 12.508 301.785 cv
cp
f
13.133 293.453 mo
13.336 293.457 13.477 293.508 13.563 293.605 cv
13.648 293.711 13.691 293.828 13.691 293.953 cv
13.691 298.57 li
14.082 298.574 14.434 298.535 14.746 298.453 cv
15.059 298.379 15.328 298.246 15.547 298.062 cv
15.773 297.883 15.945 297.648 16.063 297.352 cv
16.188 297.062 16.246 296.703 16.242 296.277 cv
16.246 295.945 16.219 295.648 16.16 295.387 cv
16.109 295.125 16.047 294.898 15.977 294.707 cv
15.91 294.52 15.852 294.363 15.793 294.238 cv
15.742 294.117 15.715 294.023 15.711 293.961 cv
15.715 293.926 15.723 293.895 15.738 293.863 cv
15.758 293.836 15.785 293.812 15.82 293.793 cv
15.859 293.781 15.91 293.77 15.973 293.758 cv
16.039 293.754 16.117 293.75 16.211 293.746 cv
16.281 293.75 16.34 293.754 16.387 293.754 cv
16.434 293.762 16.477 293.766 16.516 293.773 cv
16.555 293.781 16.59 293.797 16.621 293.812 cv
16.652 293.836 16.684 293.859 16.711 293.883 cv
16.742 293.914 16.789 293.996 16.852 294.137 cv
16.918 294.277 16.98 294.461 17.043 294.684 cv
17.105 294.91 17.16 295.168 17.211 295.461 cv
17.258 295.754 17.281 296.066 17.285 296.398 cv
17.281 296.977 17.203 297.484 17.043 297.914 cv
16.883 298.352 16.645 298.715 16.328 299.008 cv
16.012 299.309 15.617 299.531 15.137 299.68 cv
14.66 299.828 14.102 299.902 13.465 299.902 cv
12.867 299.902 12.328 299.828 11.844 299.672 cv
11.367 299.52 10.957 299.293 10.621 298.996 cv
10.285 298.703 10.027 298.348 9.848 297.934 cv
9.668 297.52 9.578 297.055 9.578 296.539 cv
9.578 295.988 9.668 295.52 9.844 295.133 cv
10.023 294.746 10.262 294.43 10.559 294.176 cv
10.859 293.93 11.211 293.746 11.609 293.629 cv
12.016 293.516 12.445 293.457 12.898 293.453 cv
cp
12.75 294.746 mo
12.074 294.73 11.543 294.883 11.16 295.199 cv
10.777 295.516 10.586 295.984 10.582 296.602 cv
10.586 296.926 10.645 297.207 10.762 297.445 cv
10.883 297.687 11.043 297.887 11.238 298.047 cv
11.438 298.211 11.668 298.336 11.93 298.422 cv
12.191 298.512 12.465 298.562 12.75 298.57 cv
cp
f
6.398 285.281 mo
7.445 285.777 8.516 286.145 9.613 286.387 cv
10.715 286.629 11.82 286.75 12.93 286.75 cv
14.047 286.75 15.156 286.629 16.25 286.379 cv
17.348 286.137 18.418 285.773 19.473 285.297 cv
19.531 285.273 19.586 285.262 19.633 285.254 cv
19.676 285.254 19.711 285.27 19.742 285.305 cv
19.77 285.344 19.789 285.398 19.805 285.473 cv
19.813 285.551 19.82 285.656 19.824 285.781 cv
19.82 285.879 19.816 285.957 19.816 286.023 cv
19.809 286.094 19.801 286.152 19.785 286.199 cv
19.77 286.25 19.75 286.293 19.73 286.32 cv
19.707 286.355 19.684 286.379 19.66 286.391 cv
19.129 286.672 18.594 286.918 18.051 287.129 cv
17.508 287.348 16.957 287.527 16.398 287.668 cv
15.836 287.816 15.27 287.926 14.695 287.996 cv
14.121 288.074 13.539 288.109 12.953 288.105 cv
12.367 288.109 11.789 288.07 11.215 287.984 cv
10.645 287.906 10.078 287.789 9.512 287.641 cv
8.949 287.492 8.395 287.312 7.848 287.102 cv
7.305 286.891 6.762 286.652 6.227 286.383 cv
6.207 286.379 6.191 286.363 6.172 286.34 cv
6.16 286.316 6.145 286.285 6.125 286.242 cv
6.113 286.203 6.102 286.145 6.09 286.07 cv
6.086 286 6.082 285.906 6.078 285.789 cv
6.082 285.672 6.09 285.578 6.102 285.5 cv
6.121 285.43 6.141 285.371 6.164 285.328 cv
6.191 285.289 6.227 285.266 6.266 285.258 cv
6.313 285.254 6.355 285.262 6.398 285.281 cv
cp
f
14.309 277.547 mo
14.781 277.551 15.203 277.637 15.57 277.809 cv
15.945 277.984 16.258 278.227 16.512 278.535 cv
16.77 278.844 16.961 279.207 17.09 279.625 cv
17.219 280.047 17.281 280.496 17.285 280.977 cv
17.281 281.316 17.254 281.633 17.199 281.918 cv
17.141 282.207 17.074 282.461 16.988 282.687 cv
16.91 282.914 16.824 283.105 16.73 283.258 cv
16.645 283.414 16.566 283.52 16.504 283.578 cv
16.441 283.637 16.363 283.68 16.27 283.707 cv
16.176 283.738 16.047 283.754 15.883 283.75 cv
15.77 283.754 15.676 283.75 15.598 283.734 cv
15.523 283.727 15.461 283.711 15.414 283.687 cv
15.367 283.672 15.336 283.645 15.316 283.609 cv
15.301 283.582 15.293 283.547 15.289 283.504 cv
15.293 283.434 15.336 283.332 15.422 283.195 cv
15.512 283.066 15.609 282.895 15.711 282.684 cv
15.82 282.477 15.918 282.227 16.004 281.934 cv
16.098 281.641 16.141 281.301 16.141 280.914 cv
16.141 280.625 16.102 280.359 16.023 280.117 cv
15.945 279.879 15.836 279.672 15.691 279.492 cv
15.551 279.32 15.375 279.184 15.164 279.09 cv
14.957 278.996 14.723 278.949 14.457 278.949 cv
14.176 278.949 13.93 279.016 13.723 279.145 cv
13.523 279.277 13.348 279.449 13.191 279.66 cv
13.043 279.875 12.902 280.117 12.77 280.391 cv
12.645 280.664 12.512 280.945 12.379 281.227 cv
12.246 281.516 12.102 281.793 11.938 282.062 cv
11.781 282.332 11.59 282.574 11.371 282.785 cv
11.152 283.004 10.898 283.176 10.602 283.305 cv
10.313 283.441 9.961 283.508 9.547 283.504 cv
9.129 283.508 8.754 283.43 8.422 283.273 cv
8.094 283.121 7.816 282.91 7.59 282.633 cv
7.371 282.363 7.199 282.039 7.082 281.66 cv
6.965 281.285 6.906 280.875 6.906 280.437 cv
6.906 280.219 6.926 279.996 6.965 279.766 cv
7.004 279.543 7.055 279.332 7.117 279.129 cv
7.184 278.934 7.258 278.754 7.336 278.594 cv
7.418 278.441 7.484 278.34 7.531 278.285 cv
7.586 278.238 7.625 278.203 7.648 278.187 cv
7.68 278.172 7.715 278.16 7.758 278.148 cv
7.805 278.141 7.859 278.133 7.918 278.125 cv
7.984 278.121 8.063 278.117 8.16 278.117 cv
8.254 278.117 8.34 278.121 8.41 278.129 cv
8.488 278.137 8.547 278.148 8.594 278.164 cv
8.641 278.18 8.676 278.203 8.699 278.23 cv
8.723 278.262 8.734 278.293 8.734 278.328 cv
8.734 278.387 8.699 278.477 8.629 278.598 cv
8.559 278.723 8.477 278.875 8.383 279.047 cv
8.293 279.227 8.211 279.434 8.133 279.672 cv
8.059 279.918 8.02 280.187 8.02 280.484 cv
8.02 280.766 8.059 281.012 8.133 281.219 cv
8.211 281.43 8.313 281.602 8.434 281.734 cv
8.559 281.871 8.703 281.973 8.875 282.039 cv
9.047 282.105 9.23 282.137 9.422 282.137 cv
9.707 282.137 9.949 282.074 10.148 281.945 cv
10.352 281.816 10.531 281.645 10.684 281.426 cv
10.844 281.215 10.984 280.969 11.113 280.691 cv
11.246 280.418 11.379 280.137 11.508 279.848 cv
11.641 279.562 11.785 279.281 11.941 279.008 cv
12.102 278.734 12.289 278.488 12.504 278.27 cv
12.723 278.055 12.977 277.883 13.27 277.746 cv
13.563 277.617 13.91 277.551 14.309 277.547 cv
cp
f
13.133 269.852 mo
13.336 269.855 13.477 269.906 13.563 270.004 cv
13.648 270.109 13.691 270.227 13.691 270.352 cv
13.691 274.969 li
14.082 274.973 14.434 274.934 14.746 274.852 cv
15.059 274.777 15.328 274.645 15.547 274.461 cv
15.773 274.281 15.945 274.047 16.063 273.75 cv
16.188 273.461 16.246 273.102 16.242 272.676 cv
16.246 272.344 16.219 272.047 16.16 271.785 cv
16.109 271.523 16.047 271.297 15.977 271.105 cv
15.91 270.918 15.852 270.762 15.793 270.637 cv
15.742 270.516 15.715 270.422 15.711 270.359 cv
15.715 270.324 15.723 270.293 15.738 270.262 cv
15.758 270.234 15.785 270.211 15.82 270.191 cv
15.859 270.18 15.91 270.168 15.973 270.156 cv
16.039 270.152 16.117 270.148 16.211 270.145 cv
16.281 270.148 16.34 270.152 16.387 270.152 cv
16.434 270.16 16.477 270.164 16.516 270.172 cv
16.555 270.18 16.59 270.195 16.621 270.211 cv
16.652 270.234 16.684 270.258 16.711 270.281 cv
16.742 270.312 16.789 270.395 16.852 270.535 cv
16.918 270.676 16.98 270.859 17.043 271.082 cv
17.105 271.309 17.16 271.566 17.211 271.859 cv
17.258 272.152 17.281 272.465 17.285 272.797 cv
17.281 273.375 17.203 273.883 17.043 274.312 cv
16.883 274.75 16.645 275.113 16.328 275.406 cv
16.012 275.707 15.617 275.93 15.137 276.078 cv
14.66 276.227 14.102 276.301 13.465 276.301 cv
12.867 276.301 12.328 276.227 11.844 276.07 cv
11.367 275.918 10.957 275.691 10.621 275.395 cv
10.285 275.102 10.027 274.746 9.848 274.332 cv
9.668 273.918 9.578 273.453 9.578 272.937 cv
9.578 272.387 9.668 271.918 9.844 271.531 cv
10.023 271.145 10.262 270.828 10.559 270.574 cv
10.859 270.328 11.211 270.145 11.609 270.027 cv
12.016 269.914 12.445 269.855 12.898 269.852 cv
cp
12.75 271.145 mo
12.074 271.129 11.543 271.281 11.16 271.598 cv
10.777 271.914 10.586 272.383 10.582 273 cv
10.586 273.324 10.645 273.605 10.762 273.844 cv
10.883 274.086 11.043 274.285 11.238 274.445 cv
11.438 274.609 11.668 274.734 11.93 274.82 cv
12.191 274.91 12.465 274.961 12.75 274.969 cv
cp
f
15.875 262.844 mo
15.969 262.844 16.043 262.848 16.105 262.852 cv
16.172 262.859 16.227 262.867 16.27 262.879 cv
16.316 262.895 16.355 262.91 16.387 262.926 cv
16.418 262.945 16.469 262.988 16.531 263.051 cv
16.602 263.117 16.68 263.227 16.773 263.383 cv
16.871 263.539 16.957 263.715 17.031 263.91 cv
17.105 264.105 17.164 264.316 17.215 264.543 cv
17.258 264.773 17.281 265.012 17.285 265.25 cv
17.281 265.758 17.203 266.203 17.035 266.594 cv
16.871 266.984 16.629 267.312 16.309 267.57 cv
15.992 267.836 15.598 268.035 15.133 268.172 cv
14.668 268.309 14.133 268.375 13.52 268.375 cv
12.832 268.375 12.238 268.293 11.742 268.125 cv
11.246 267.957 10.84 267.727 10.523 267.43 cv
10.207 267.141 9.973 266.793 9.816 266.395 cv
9.668 265.996 9.59 265.566 9.586 265.105 cv
9.59 264.883 9.609 264.668 9.648 264.453 cv
9.691 264.246 9.746 264.051 9.813 263.875 cv
9.883 263.699 9.961 263.543 10.047 263.402 cv
10.133 263.266 10.207 263.164 10.27 263.102 cv
10.332 263.039 10.383 262.996 10.418 262.973 cv
10.457 262.949 10.5 262.93 10.547 262.914 cv
10.598 262.898 10.652 262.891 10.715 262.883 cv
10.777 262.883 10.855 262.879 10.949 262.875 cv
11.152 262.879 11.297 262.902 11.375 262.945 cv
11.461 262.996 11.5 263.055 11.496 263.117 cv
11.5 263.199 11.457 263.289 11.367 263.387 cv
11.285 263.492 11.191 263.621 11.082 263.773 cv
10.98 263.93 10.883 264.117 10.797 264.336 cv
10.711 264.562 10.668 264.824 10.668 265.121 cv
10.668 265.742 10.906 266.215 11.383 266.543 cv
11.859 266.875 12.551 267.039 13.449 267.035 cv
13.906 267.039 14.301 266.996 14.641 266.906 cv
14.98 266.824 15.266 266.699 15.492 266.531 cv
15.723 266.367 15.895 266.164 16.004 265.918 cv
16.121 265.68 16.176 265.402 16.172 265.09 cv
16.176 264.797 16.129 264.535 16.031 264.309 cv
15.941 264.086 15.84 263.895 15.723 263.73 cv
15.613 263.57 15.512 263.434 15.418 263.316 cv
15.332 263.207 15.285 263.117 15.281 263.055 cv
15.285 263.02 15.297 262.988 15.313 262.961 cv
15.336 262.937 15.371 262.918 15.418 262.895 cv
15.473 262.879 15.535 262.863 15.605 262.855 cv
15.684 262.848 15.773 262.844 15.875 262.844 cv
cp
f
13.355 254.789 mo
13.934 254.793 14.461 254.867 14.938 255.016 cv
15.422 255.168 15.836 255.395 16.18 255.691 cv
16.531 255.992 16.801 256.367 16.992 256.812 cv
17.188 257.266 17.281 257.785 17.285 258.375 cv
17.281 258.953 17.199 259.457 17.027 259.883 cv
16.859 260.312 16.609 260.668 16.281 260.953 cv
15.953 261.242 15.559 261.457 15.09 261.594 cv
14.625 261.734 14.094 261.801 13.496 261.801 cv
12.93 261.801 12.402 261.73 11.922 261.582 cv
11.441 261.437 11.027 261.211 10.676 260.91 cv
10.328 260.613 10.059 260.242 9.867 259.793 cv
9.676 259.348 9.578 258.824 9.578 258.227 cv
9.578 257.648 9.664 257.148 9.836 256.719 cv
10.008 256.293 10.258 255.934 10.586 255.648 cv
10.914 255.363 11.313 255.148 11.777 255.004 cv
12.246 254.863 12.773 254.793 13.355 254.789 cv
cp
13.441 256.121 mo
13.066 256.125 12.707 256.16 12.367 256.227 cv
12.031 256.301 11.738 256.418 11.48 256.578 cv
11.23 256.742 11.027 256.961 10.875 257.238 cv
10.73 257.52 10.656 257.867 10.652 258.277 cv
10.656 258.664 10.723 258.992 10.855 259.266 cv
10.992 259.543 11.184 259.77 11.43 259.945 cv
11.676 260.125 11.969 260.258 12.305 260.34 cv
12.645 260.43 13.012 260.473 13.41 260.469 cv
13.797 260.473 14.16 260.437 14.496 260.363 cv
14.836 260.297 15.129 260.18 15.379 260.012 cv
15.633 259.848 15.836 259.625 15.98 259.348 cv
16.133 259.07 16.207 258.723 16.203 258.309 cv
16.207 257.934 16.137 257.605 16 257.324 cv
15.867 257.047 15.68 256.82 15.43 256.641 cv
15.188 256.465 14.895 256.336 14.559 256.25 cv
14.223 256.168 13.852 256.125 13.441 256.121 cv
cp
f
16.941 246.859 mo
16.988 246.859 17.023 246.871 17.047 246.891 cv
17.078 246.914 17.102 246.949 17.121 246.992 cv
17.141 247.043 17.152 247.105 17.168 247.187 cv
17.176 247.27 17.184 247.375 17.184 247.496 cv
17.184 247.629 17.176 247.734 17.168 247.816 cv
17.152 247.902 17.141 247.969 17.121 248.012 cv
17.102 248.062 17.078 248.094 17.047 248.113 cv
17.023 248.137 16.988 248.148 16.941 248.145 cv
12.836 248.145 li
12.438 248.148 12.117 248.18 11.871 248.238 cv
11.629 248.305 11.418 248.395 11.238 248.512 cv
11.063 248.629 10.926 248.785 10.832 248.973 cv
10.738 249.168 10.691 249.387 10.691 249.633 cv
10.691 249.957 10.809 250.281 11.035 250.602 cv
11.27 250.926 11.602 251.262 12.039 251.613 cv
16.941 251.613 li
16.988 251.617 17.023 251.629 17.047 251.645 cv
17.078 251.668 17.102 251.699 17.121 251.746 cv
17.141 251.793 17.152 251.859 17.168 251.937 cv
17.176 252.023 17.184 252.129 17.184 252.258 cv
17.184 252.387 17.176 252.492 17.168 252.57 cv
17.152 252.656 17.141 252.723 17.121 252.77 cv
17.102 252.824 17.078 252.855 17.047 252.871 cv
17.023 252.891 16.988 252.902 16.941 252.898 cv
9.93 252.898 li
9.891 252.902 9.855 252.895 9.824 252.875 cv
9.797 252.863 9.773 252.832 9.746 252.781 cv
9.727 252.738 9.711 252.676 9.699 252.602 cv
9.695 252.531 9.691 252.437 9.688 252.312 cv
9.691 252.203 9.695 252.105 9.699 252.027 cv
9.711 251.953 9.727 251.895 9.746 251.852 cv
9.773 251.812 9.797 251.785 9.824 251.766 cv
9.855 251.75 9.891 251.742 9.93 251.738 cv
10.855 251.738 li
10.414 251.348 10.094 250.953 9.887 250.559 cv
9.684 250.168 9.578 249.77 9.578 249.367 cv
9.578 248.898 9.66 248.508 9.816 248.187 cv
9.98 247.871 10.191 247.609 10.453 247.41 cv
10.719 247.215 11.027 247.074 11.383 246.988 cv
11.738 246.902 12.168 246.859 12.664 246.859 cv
cp
f
16.941 238.512 mo
16.988 238.516 17.023 238.523 17.051 238.539 cv
17.086 238.559 17.109 238.59 17.125 238.633 cv
17.141 238.676 17.152 238.734 17.168 238.805 cv
17.176 238.879 17.184 238.969 17.184 239.07 cv
17.184 239.184 17.176 239.273 17.168 239.344 cv
17.152 239.418 17.141 239.477 17.125 239.523 cv
17.109 239.57 17.086 239.605 17.051 239.625 cv
17.023 239.648 16.988 239.66 16.941 239.656 cv
16.016 239.656 li
16.418 240.031 16.727 240.414 16.949 240.809 cv
17.172 241.207 17.281 241.641 17.285 242.109 cv
17.281 242.629 17.184 243.07 16.984 243.43 cv
16.785 243.797 16.516 244.09 16.176 244.312 cv
15.836 244.543 15.438 244.707 14.977 244.809 cv
14.52 244.91 14.035 244.961 13.52 244.961 cv
12.922 244.961 12.379 244.898 11.891 244.77 cv
11.406 244.641 10.988 244.449 10.645 244.191 cv
10.301 243.941 10.039 243.625 9.855 243.246 cv
9.672 242.871 9.578 242.434 9.578 241.937 cv
9.578 241.531 9.668 241.156 9.848 240.812 cv
10.027 240.473 10.293 240.137 10.637 239.805 cv
6.563 239.805 li
6.527 239.805 6.492 239.797 6.457 239.777 cv
6.426 239.762 6.398 239.727 6.379 239.672 cv
6.363 239.621 6.348 239.555 6.332 239.473 cv
6.32 239.395 6.316 239.293 6.313 239.164 cv
6.316 239.039 6.32 238.93 6.332 238.844 cv
6.348 238.762 6.363 238.699 6.379 238.652 cv
6.398 238.609 6.426 238.574 6.457 238.547 cv
6.492 238.527 6.527 238.516 6.563 238.512 cv
cp
12.008 239.805 mo
11.582 240.152 11.254 240.488 11.023 240.812 cv
10.801 241.141 10.688 241.48 10.684 241.828 cv
10.688 242.16 10.766 242.437 10.918 242.664 cv
11.078 242.895 11.281 243.082 11.535 243.223 cv
11.789 243.367 12.078 243.469 12.398 243.531 cv
12.723 243.598 13.051 243.633 13.379 243.629 cv
13.738 243.633 14.082 243.605 14.418 243.547 cv
14.754 243.496 15.055 243.402 15.316 243.266 cv
15.582 243.133 15.793 242.953 15.949 242.727 cv
16.109 242.508 16.188 242.227 16.188 241.883 cv
16.188 241.719 16.164 241.555 16.117 241.391 cv
16.07 241.234 15.992 241.07 15.883 240.902 cv
15.773 240.738 15.633 240.566 15.457 240.383 cv
15.285 240.203 15.07 240.008 14.813 239.805 cv
cp
f
15.031 231.738 mo
15.395 231.742 15.715 231.809 15.992 231.937 cv
16.273 232.07 16.508 232.258 16.699 232.5 cv
16.895 232.746 17.039 233.039 17.137 233.375 cv
17.234 233.715 17.281 234.086 17.285 234.488 cv
17.281 234.742 17.262 234.98 17.227 235.203 cv
17.184 235.43 17.137 235.629 17.078 235.809 cv
17.02 235.988 16.957 236.141 16.891 236.266 cv
16.828 236.391 16.77 236.484 16.715 236.539 cv
16.664 236.598 16.594 236.637 16.496 236.66 cv
16.406 236.687 16.277 236.699 16.117 236.699 cv
16.02 236.699 15.938 236.695 15.867 236.684 cv
15.801 236.676 15.746 236.664 15.703 236.645 cv
15.664 236.633 15.633 236.609 15.613 236.582 cv
15.598 236.555 15.59 236.523 15.586 236.484 cv
15.59 236.43 15.625 236.344 15.691 236.23 cv
15.766 236.121 15.844 235.984 15.922 235.816 cv
16.008 235.656 16.082 235.465 16.152 235.238 cv
16.223 235.02 16.258 234.762 16.258 234.465 cv
16.258 234.25 16.234 234.051 16.188 233.871 cv
16.141 233.695 16.074 233.543 15.98 233.414 cv
15.895 233.285 15.777 233.184 15.633 233.113 cv
15.496 233.043 15.328 233.008 15.133 233.008 cv
14.938 233.008 14.773 233.059 14.637 233.16 cv
14.504 233.262 14.383 233.398 14.277 233.562 cv
14.176 233.73 14.086 233.914 14 234.121 cv
13.922 234.332 13.836 234.547 13.746 234.766 cv
13.66 234.984 13.559 235.199 13.445 235.41 cv
13.336 235.621 13.203 235.812 13.039 235.977 cv
12.883 236.148 12.688 236.281 12.461 236.379 cv
12.238 236.484 11.973 236.535 11.66 236.531 cv
11.387 236.535 11.121 236.48 10.867 236.371 cv
10.617 236.266 10.398 236.105 10.207 235.891 cv
10.02 235.68 9.867 235.414 9.75 235.094 cv
9.637 234.773 9.578 234.402 9.578 233.973 cv
9.578 233.789 9.594 233.602 9.625 233.414 cv
9.656 233.23 9.695 233.062 9.742 232.906 cv
9.789 232.758 9.84 232.629 9.895 232.52 cv
9.949 232.418 10 232.336 10.039 232.277 cv
10.086 232.227 10.121 232.191 10.148 232.168 cv
10.18 232.152 10.215 232.137 10.25 232.129 cv
10.293 232.121 10.34 232.113 10.395 232.105 cv
10.453 232.098 10.523 232.094 10.605 232.094 cv
10.695 232.094 10.773 232.098 10.836 232.105 cv
10.906 232.113 10.957 232.129 10.996 232.145 cv
11.039 232.168 11.07 232.187 11.086 232.211 cv
11.105 232.238 11.113 232.27 11.113 232.297 cv
11.113 232.348 11.086 232.414 11.027 232.5 cv
10.973 232.59 10.91 232.703 10.844 232.844 cv
10.781 232.984 10.723 233.152 10.66 233.34 cv
10.605 233.531 10.574 233.746 10.574 233.988 cv
10.574 234.211 10.602 234.402 10.648 234.566 cv
10.703 234.734 10.773 234.871 10.859 234.977 cv
10.953 235.082 11.059 235.164 11.184 235.215 cv
11.309 235.273 11.445 235.301 11.59 235.297 cv
11.793 235.301 11.961 235.25 12.098 235.145 cv
12.238 235.043 12.359 234.906 12.461 234.738 cv
12.566 234.574 12.66 234.383 12.742 234.168 cv
12.828 233.957 12.914 233.742 13 233.52 cv
13.09 233.301 13.191 233.082 13.297 232.863 cv
13.406 232.648 13.535 232.457 13.691 232.289 cv
13.848 232.125 14.035 231.992 14.254 231.891 cv
14.473 231.793 14.734 231.742 15.031 231.738 cv
cp
f
12.953 227.297 mo
13.539 227.297 14.121 227.336 14.695 227.406 cv
15.27 227.484 15.836 227.594 16.398 227.734 cv
16.957 227.883 17.508 228.059 18.051 228.27 cv
18.594 228.48 19.129 228.727 19.66 229.004 cv
19.684 229.023 19.707 229.047 19.73 229.074 cv
19.75 229.109 19.77 229.148 19.785 229.195 cv
19.801 229.246 19.809 229.305 19.816 229.371 cv
19.816 229.441 19.82 229.523 19.824 229.613 cv
19.82 229.75 19.813 229.855 19.805 229.93 cv
19.789 230.008 19.77 230.062 19.742 230.094 cv
19.711 230.129 19.676 230.145 19.633 230.141 cv
19.586 230.141 19.531 230.125 19.473 230.098 cv
18.422 229.621 17.352 229.262 16.254 229.016 cv
15.156 228.773 14.047 228.652 12.93 228.648 cv
11.82 228.652 10.715 228.773 9.613 229.016 cv
8.516 229.262 7.445 229.629 6.398 230.113 cv
6.355 230.137 6.313 230.145 6.266 230.137 cv
6.227 230.137 6.191 230.113 6.164 230.066 cv
6.141 230.027 6.121 229.969 6.102 229.895 cv
6.09 229.824 6.082 229.727 6.078 229.605 cv
6.082 229.496 6.086 229.406 6.09 229.332 cv
6.102 229.262 6.113 229.203 6.125 229.156 cv
6.145 229.113 6.16 229.082 6.172 229.059 cv
6.191 229.043 6.207 229.027 6.227 229.012 cv
7.293 228.48 8.391 228.059 9.512 227.754 cv
10.641 227.449 11.785 227.297 12.953 227.297 cv
cp
f
297.5 544.355 mo
297.496 544.398 297.488 544.434 297.469 544.465 cv
297.445 544.496 297.406 544.523 297.359 544.539 cv
297.305 544.559 297.238 544.57 297.152 544.586 cv
297.066 544.598 296.957 544.605 296.832 544.605 cv
296.703 544.605 296.598 544.598 296.512 544.586 cv
296.422 544.57 296.352 544.559 296.301 544.539 cv
296.246 544.523 296.211 544.496 296.191 544.465 cv
296.168 544.434 296.156 544.398 296.16 544.355 cv
296.16 534.676 li
296.156 534.637 296.168 534.602 296.195 534.566 cv
296.215 534.539 296.254 534.512 296.313 534.492 cv
296.363 534.477 296.434 534.461 296.523 534.445 cv
296.605 534.434 296.707 534.43 296.832 534.426 cv
296.957 534.43 297.066 534.434 297.152 534.445 cv
297.238 534.461 297.305 534.477 297.359 534.492 cv
297.406 534.512 297.445 534.539 297.469 534.566 cv
297.488 534.602 297.496 534.637 297.5 534.676 cv
cp
f
310.488 544.363 mo
310.484 544.41 310.477 544.445 310.457 544.469 cv
310.434 544.5 310.398 544.523 310.355 544.543 cv
310.305 544.562 310.238 544.574 310.16 544.59 cv
310.074 544.598 309.973 544.605 309.848 544.605 cv
309.715 544.605 309.605 544.598 309.527 544.59 cv
309.441 544.574 309.375 544.562 309.328 544.543 cv
309.273 544.523 309.238 544.5 309.223 544.469 cv
309.199 544.445 309.191 544.41 309.191 544.363 cv
309.191 540.102 li
309.191 539.809 309.164 539.539 309.113 539.293 cv
309.059 539.051 308.977 538.84 308.863 538.66 cv
308.75 538.484 308.605 538.348 308.43 538.254 cv
308.25 538.16 308.039 538.113 307.805 538.113 cv
307.508 538.113 307.211 538.23 306.914 538.457 cv
306.609 538.691 306.281 539.023 305.926 539.461 cv
305.926 544.363 li
305.922 544.41 305.91 544.445 305.895 544.469 cv
305.871 544.5 305.84 544.523 305.793 544.543 cv
305.742 544.562 305.676 544.574 305.594 544.59 cv
305.508 544.598 305.402 544.605 305.281 544.605 cv
305.16 544.605 305.059 544.598 304.973 544.59 cv
304.887 544.574 304.816 544.562 304.77 544.543 cv
304.715 544.523 304.684 544.5 304.668 544.469 cv
304.648 544.445 304.637 544.41 304.641 544.363 cv
304.641 540.102 li
304.637 539.809 304.609 539.539 304.555 539.293 cv
304.496 539.051 304.41 538.84 304.297 538.66 cv
304.184 538.484 304.039 538.348 303.867 538.254 cv
303.688 538.16 303.48 538.113 303.246 538.113 cv
302.945 538.113 302.648 538.23 302.348 538.457 cv
302.047 538.691 301.719 539.023 301.367 539.461 cv
301.367 544.363 li
301.363 544.41 301.352 544.445 301.336 544.469 cv
301.313 544.5 301.281 544.523 301.234 544.543 cv
301.188 544.562 301.121 544.574 301.043 544.59 cv
300.957 544.598 300.852 544.605 300.723 544.605 cv
300.594 544.605 300.488 544.598 300.41 544.59 cv
300.324 544.574 300.258 544.562 300.211 544.543 cv
300.156 544.523 300.125 544.5 300.109 544.469 cv
300.09 544.445 300.078 544.41 300.082 544.363 cv
300.082 537.352 li
300.078 537.312 300.086 537.277 300.105 537.246 cv
300.117 537.219 300.148 537.195 300.199 537.168 cv
300.242 537.148 300.305 537.133 300.379 537.121 cv
300.449 537.117 300.543 537.113 300.668 537.109 cv
300.777 537.113 300.875 537.117 300.953 537.121 cv
301.027 537.133 301.086 537.148 301.129 537.168 cv
301.168 537.195 301.195 537.219 301.215 537.246 cv
301.23 537.277 301.238 537.312 301.242 537.352 cv
301.242 538.277 li
301.633 537.836 302.016 537.516 302.391 537.309 cv
302.758 537.105 303.137 537 303.52 537 cv
303.809 537 304.066 537.035 304.301 537.102 cv
304.527 537.172 304.734 537.266 304.914 537.387 cv
305.09 537.508 305.238 537.652 305.367 537.82 cv
305.488 537.992 305.594 538.184 305.68 538.387 cv
305.91 538.137 306.133 537.922 306.344 537.742 cv
306.555 537.57 306.758 537.426 306.953 537.312 cv
307.148 537.207 307.336 537.129 307.52 537.074 cv
307.703 537.027 307.891 537 308.078 537 cv
308.531 537 308.91 537.082 309.215 537.238 cv
309.52 537.402 309.766 537.613 309.961 537.875 cv
310.148 538.141 310.285 538.449 310.367 538.805 cv
310.445 539.16 310.484 539.535 310.488 539.93 cv
cp
f
318.117 544.371 mo
318.113 544.434 318.094 544.48 318.055 544.512 cv
318.012 544.543 317.953 544.566 317.883 544.582 cv
317.805 544.598 317.699 544.605 317.563 544.605 cv
317.426 544.605 317.316 544.598 317.238 544.582 cv
317.152 544.566 317.094 544.543 317.063 544.512 cv
317.023 544.48 317.008 544.434 317.012 544.371 cv
317.012 543.672 li
316.703 544 316.359 544.254 315.984 544.434 cv
315.605 544.617 315.207 544.703 314.789 544.707 cv
314.414 544.703 314.082 544.656 313.785 544.562 cv
313.488 544.465 313.234 544.328 313.023 544.145 cv
312.813 543.965 312.648 543.742 312.531 543.477 cv
312.414 543.215 312.355 542.914 312.359 542.57 cv
312.355 542.18 312.434 541.836 312.598 541.543 cv
312.754 541.254 312.988 541.012 313.293 540.82 cv
313.594 540.629 313.961 540.484 314.398 540.387 cv
314.832 540.293 315.324 540.246 315.871 540.242 cv
316.84 540.242 li
316.84 539.695 li
316.836 539.426 316.809 539.187 316.754 538.98 cv
316.695 538.773 316.602 538.602 316.477 538.461 cv
316.344 538.324 316.18 538.219 315.98 538.148 cv
315.773 538.078 315.523 538.043 315.234 538.043 cv
314.914 538.043 314.629 538.082 314.379 538.156 cv
314.121 538.234 313.902 538.316 313.715 538.406 cv
313.527 538.5 313.367 538.586 313.242 538.656 cv
313.109 538.734 313.016 538.77 312.957 538.77 cv
312.914 538.77 312.879 538.762 312.848 538.738 cv
312.816 538.723 312.789 538.691 312.766 538.645 cv
312.742 538.605 312.723 538.551 312.715 538.484 cv
312.699 538.422 312.695 538.352 312.699 538.27 cv
312.695 538.145 312.703 538.039 312.727 537.961 cv
312.742 537.887 312.789 537.816 312.859 537.746 cv
312.93 537.68 313.051 537.602 313.223 537.512 cv
313.395 537.422 313.59 537.34 313.813 537.262 cv
314.035 537.191 314.281 537.129 314.547 537.074 cv
314.813 537.027 315.078 537 315.352 537 cv
315.852 537 316.281 537.059 316.633 537.172 cv
316.984 537.289 317.27 537.457 317.492 537.676 cv
317.707 537.898 317.867 538.172 317.969 538.496 cv
318.066 538.828 318.113 539.211 318.117 539.641 cv
cp
316.84 541.168 mo
315.738 541.168 li
315.383 541.172 315.078 541.203 314.82 541.258 cv
314.559 541.32 314.344 541.406 314.172 541.523 cv
314 541.641 313.875 541.781 313.797 541.945 cv
313.715 542.109 313.672 542.297 313.676 542.508 cv
313.672 542.875 313.789 543.168 314.02 543.379 cv
314.25 543.598 314.574 543.703 314.992 543.703 cv
315.328 543.703 315.641 543.617 315.93 543.445 cv
316.219 543.273 316.52 543.012 316.84 542.656 cv
cp
f
326.336 537.668 mo
326.332 537.852 326.309 537.984 326.262 538.062 cv
326.211 538.145 326.148 538.184 326.074 538.184 cv
325.066 538.184 li
325.246 538.371 325.375 538.578 325.449 538.805 cv
325.52 539.031 325.555 539.266 325.559 539.508 cv
325.555 539.914 325.488 540.273 325.363 540.586 cv
325.23 540.898 325.047 541.164 324.805 541.375 cv
324.563 541.594 324.273 541.758 323.945 541.871 cv
323.609 541.988 323.242 542.047 322.84 542.043 cv
322.551 542.047 322.277 542.008 322.023 541.93 cv
321.762 541.855 321.566 541.762 321.43 541.645 cv
321.336 541.742 321.258 541.848 321.199 541.965 cv
321.137 542.086 321.105 542.223 321.109 542.375 cv
321.105 542.559 321.191 542.711 321.363 542.828 cv
321.531 542.953 321.754 543.016 322.035 543.023 cv
323.867 543.102 li
324.215 543.113 324.531 543.16 324.824 543.246 cv
325.113 543.332 325.367 543.457 325.582 543.613 cv
325.793 543.773 325.961 543.965 326.082 544.195 cv
326.199 544.43 326.258 544.699 326.262 545.004 cv
326.258 545.324 326.191 545.629 326.059 545.922 cv
325.922 546.211 325.715 546.465 325.438 546.687 cv
325.156 546.906 324.801 547.082 324.371 547.211 cv
323.941 547.336 323.434 547.398 322.848 547.402 cv
322.277 547.398 321.793 547.352 321.398 547.258 cv
321 547.16 320.676 547.027 320.422 546.863 cv
320.168 546.695 319.984 546.5 319.871 546.27 cv
319.754 546.035 319.695 545.781 319.699 545.516 cv
319.695 545.344 319.715 545.18 319.762 545.02 cv
319.801 544.855 319.863 544.703 319.949 544.559 cv
320.031 544.414 320.141 544.277 320.27 544.141 cv
320.395 544.012 320.539 543.879 320.711 543.75 cv
320.453 543.621 320.266 543.457 320.145 543.258 cv
320.023 543.062 319.965 542.852 319.965 542.617 cv
319.965 542.305 320.027 542.02 320.156 541.77 cv
320.285 541.52 320.445 541.297 320.641 541.098 cv
320.477 540.906 320.352 540.691 320.258 540.449 cv
320.164 540.211 320.117 539.918 320.117 539.57 cv
320.117 539.176 320.184 538.816 320.32 538.496 cv
320.453 538.18 320.641 537.914 320.883 537.695 cv
321.121 537.48 321.406 537.312 321.742 537.191 cv
322.074 537.078 322.441 537.02 322.84 537.016 cv
323.051 537.02 323.25 537.031 323.434 537.051 cv
323.617 537.078 323.789 537.109 323.953 537.148 cv
326.074 537.148 li
326.16 537.152 326.227 537.195 326.27 537.277 cv
326.313 537.367 326.332 537.496 326.336 537.668 cv
cp
324.328 539.516 mo
324.324 539.043 324.191 538.672 323.934 538.398 cv
323.668 538.133 323.297 537.996 322.816 537.996 cv
322.563 537.996 322.344 538.039 322.164 538.121 cv
321.977 538.207 321.824 538.32 321.703 538.465 cv
321.582 538.613 321.492 538.781 321.434 538.969 cv
321.371 539.156 321.34 539.355 321.344 539.562 cv
321.34 540.027 321.473 540.391 321.734 540.656 cv
321.996 540.922 322.363 541.055 322.84 541.051 cv
323.09 541.055 323.309 541.016 323.5 540.93 cv
323.684 540.852 323.84 540.738 323.965 540.598 cv
324.086 540.457 324.176 540.293 324.238 540.102 cv
324.293 539.918 324.324 539.723 324.328 539.516 cv
cp
324.973 545.074 mo
324.969 544.77 324.844 544.539 324.602 544.375 cv
324.352 544.215 324.02 544.125 323.602 544.113 cv
321.785 544.051 li
321.617 544.184 321.48 544.309 321.379 544.422 cv
321.27 544.539 321.188 544.648 321.125 544.758 cv
321.063 544.863 321.02 544.969 320.996 545.074 cv
320.973 545.176 320.961 545.281 320.961 545.391 cv
320.961 545.727 321.129 545.98 321.473 546.16 cv
321.813 546.332 322.293 546.422 322.91 546.422 cv
323.297 546.422 323.621 546.383 323.887 546.309 cv
324.145 546.23 324.355 546.129 324.52 546.008 cv
324.676 545.879 324.793 545.738 324.867 545.578 cv
324.934 545.418 324.969 545.25 324.973 545.074 cv
cp
f
333.898 540.555 mo
333.895 540.758 333.844 540.898 333.746 540.984 cv
333.641 541.07 333.523 541.113 333.398 541.113 cv
328.781 541.113 li
328.777 541.504 328.816 541.855 328.898 542.168 cv
328.973 542.48 329.105 542.75 329.289 542.969 cv
329.469 543.195 329.703 543.367 330 543.484 cv
330.289 543.609 330.648 543.668 331.074 543.664 cv
331.406 543.668 331.703 543.641 331.965 543.582 cv
332.227 543.531 332.453 543.469 332.645 543.398 cv
332.832 543.332 332.988 543.273 333.113 543.215 cv
333.234 543.164 333.328 543.137 333.391 543.133 cv
333.426 543.137 333.457 543.145 333.488 543.16 cv
333.516 543.18 333.539 543.207 333.559 543.242 cv
333.57 543.281 333.582 543.332 333.594 543.395 cv
333.598 543.461 333.602 543.539 333.605 543.633 cv
333.602 543.703 333.598 543.762 333.598 543.809 cv
333.59 543.855 333.586 543.898 333.578 543.937 cv
333.57 543.977 333.555 544.012 333.539 544.043 cv
333.516 544.074 333.492 544.105 333.469 544.133 cv
333.438 544.164 333.355 544.211 333.215 544.273 cv
333.074 544.34 332.891 544.402 332.668 544.465 cv
332.441 544.527 332.184 544.582 331.891 544.633 cv
331.598 544.68 331.285 544.703 330.953 544.707 cv
330.375 544.703 329.867 544.625 329.438 544.465 cv
329 544.305 328.637 544.066 328.344 543.75 cv
328.043 543.434 327.82 543.039 327.672 542.559 cv
327.523 542.082 327.449 541.523 327.449 540.887 cv
327.449 540.289 327.523 539.75 327.68 539.266 cv
327.832 538.789 328.059 538.379 328.355 538.043 cv
328.648 537.707 329.004 537.449 329.418 537.27 cv
329.832 537.09 330.297 537 330.813 537 cv
331.363 537 331.832 537.09 332.219 537.266 cv
332.605 537.445 332.922 537.684 333.176 537.98 cv
333.422 538.281 333.605 538.633 333.723 539.031 cv
333.836 539.437 333.895 539.867 333.898 540.32 cv
cp
332.605 540.172 mo
332.621 539.496 332.469 538.965 332.152 538.582 cv
331.836 538.199 331.367 538.008 330.75 538.004 cv
330.426 538.008 330.145 538.066 329.906 538.184 cv
329.664 538.305 329.465 538.465 329.305 538.66 cv
329.141 538.859 329.016 539.09 328.93 539.352 cv
328.84 539.613 328.789 539.887 328.781 540.172 cv
cp
f
340.957 544.355 mo
340.953 544.398 340.945 544.434 340.926 544.465 cv
340.902 544.496 340.863 544.523 340.816 544.539 cv
340.762 544.559 340.695 544.57 340.609 544.586 cv
340.523 544.598 340.414 544.605 340.289 544.605 cv
340.16 544.605 340.055 544.598 339.969 544.586 cv
339.879 544.57 339.809 544.559 339.758 544.539 cv
339.703 544.523 339.668 544.496 339.648 544.465 cv
339.625 544.434 339.613 544.398 339.617 544.355 cv
339.617 534.676 li
339.613 534.637 339.625 534.602 339.652 534.566 cv
339.672 534.539 339.711 534.512 339.77 534.492 cv
339.82 534.477 339.891 534.461 339.98 534.445 cv
340.063 534.434 340.164 534.43 340.289 534.426 cv
340.414 534.43 340.523 534.434 340.609 534.445 cv
340.695 534.461 340.762 534.477 340.816 534.492 cv
340.863 534.512 340.902 534.539 340.926 534.566 cv
340.945 534.602 340.953 534.637 340.957 534.676 cv
cp
f
349.531 544.363 mo
349.531 544.41 349.52 544.445 349.5 544.469 cv
349.477 544.5 349.441 544.523 349.398 544.543 cv
349.348 544.562 349.285 544.574 349.203 544.59 cv
349.121 544.598 349.016 544.605 348.895 544.605 cv
348.762 544.605 348.656 544.598 348.574 544.59 cv
348.488 544.574 348.422 544.562 348.379 544.543 cv
348.328 544.523 348.297 544.5 348.277 544.469 cv
348.254 544.445 348.242 544.41 348.246 544.363 cv
348.246 540.258 li
348.242 539.859 348.211 539.539 348.152 539.293 cv
348.086 539.051 347.996 538.84 347.879 538.66 cv
347.762 538.484 347.605 538.348 347.418 538.254 cv
347.223 538.16 347.004 538.113 346.758 538.113 cv
346.434 538.113 346.109 538.23 345.789 538.457 cv
345.465 538.691 345.129 539.023 344.777 539.461 cv
344.777 544.363 li
344.773 544.41 344.762 544.445 344.746 544.469 cv
344.723 544.5 344.691 544.523 344.645 544.543 cv
344.598 544.562 344.531 544.574 344.453 544.59 cv
344.367 544.598 344.262 544.605 344.133 544.605 cv
344.004 544.605 343.898 544.598 343.82 544.59 cv
343.734 544.574 343.668 544.562 343.621 544.543 cv
343.566 544.523 343.535 544.5 343.52 544.469 cv
343.5 544.445 343.488 544.41 343.492 544.363 cv
343.492 537.352 li
343.488 537.312 343.496 537.277 343.516 537.246 cv
343.527 537.219 343.559 537.195 343.609 537.168 cv
343.652 537.148 343.715 537.133 343.789 537.121 cv
343.859 537.117 343.953 537.113 344.078 537.109 cv
344.188 537.113 344.285 537.117 344.363 537.121 cv
344.438 537.133 344.496 537.148 344.539 537.168 cv
344.578 537.195 344.605 537.219 344.625 537.246 cv
344.641 537.277 344.648 537.312 344.652 537.352 cv
344.652 538.277 li
345.043 537.836 345.438 537.516 345.832 537.309 cv
346.223 537.105 346.621 537 347.023 537 cv
347.492 537 347.883 537.082 348.203 537.238 cv
348.52 537.402 348.781 537.613 348.98 537.875 cv
349.176 538.141 349.316 538.449 349.402 538.805 cv
349.488 539.16 349.531 539.59 349.531 540.086 cv
cp
f
357.879 544.363 mo
357.875 544.41 357.867 544.445 357.852 544.473 cv
357.832 544.508 357.801 544.531 357.758 544.547 cv
357.715 544.562 357.656 544.574 357.586 544.59 cv
357.512 544.598 357.422 544.605 357.32 544.605 cv
357.207 544.605 357.117 544.598 357.047 544.59 cv
356.973 544.574 356.914 544.562 356.867 544.547 cv
356.82 544.531 356.785 544.508 356.766 544.473 cv
356.742 544.445 356.73 544.41 356.734 544.363 cv
356.734 543.437 li
356.359 543.84 355.977 544.148 355.582 544.371 cv
355.184 544.594 354.75 544.703 354.281 544.707 cv
353.762 544.703 353.32 544.605 352.961 544.406 cv
352.594 544.207 352.301 543.937 352.078 543.598 cv
351.848 543.258 351.684 542.859 351.582 542.398 cv
351.48 541.941 351.43 541.457 351.43 540.941 cv
351.43 540.344 351.492 539.801 351.621 539.312 cv
351.75 538.828 351.941 538.41 352.199 538.066 cv
352.449 537.723 352.766 537.461 353.145 537.277 cv
353.52 537.094 353.957 537 354.453 537 cv
354.859 537 355.234 537.09 355.578 537.27 cv
355.918 537.449 356.254 537.715 356.586 538.059 cv
356.586 533.984 li
356.586 533.949 356.594 533.914 356.613 533.879 cv
356.629 533.848 356.664 533.82 356.719 533.801 cv
356.77 533.785 356.836 533.77 356.918 533.754 cv
356.996 533.742 357.098 533.738 357.227 533.734 cv
357.352 533.738 357.461 533.742 357.547 533.754 cv
357.629 533.77 357.691 533.785 357.738 533.801 cv
357.781 533.82 357.816 533.848 357.844 533.879 cv
357.863 533.914 357.875 533.949 357.879 533.984 cv
cp
356.586 539.43 mo
356.238 539.004 355.902 538.676 355.578 538.445 cv
355.25 538.223 354.91 538.109 354.563 538.105 cv
354.23 538.109 353.953 538.187 353.727 538.34 cv
353.496 538.5 353.309 538.703 353.168 538.957 cv
353.023 539.211 352.922 539.5 352.859 539.82 cv
352.793 540.145 352.758 540.473 352.762 540.801 cv
352.758 541.16 352.785 541.504 352.844 541.84 cv
352.895 542.176 352.988 542.477 353.125 542.738 cv
353.258 543.004 353.438 543.215 353.664 543.371 cv
353.883 543.531 354.164 543.609 354.508 543.609 cv
354.672 543.609 354.836 543.586 355 543.539 cv
355.156 543.492 355.32 543.414 355.488 543.305 cv
355.652 543.195 355.824 543.055 356.008 542.879 cv
356.188 542.707 356.383 542.492 356.586 542.234 cv
cp
f
366.281 540.555 mo
366.277 540.758 366.227 540.898 366.129 540.984 cv
366.023 541.07 365.906 541.113 365.781 541.113 cv
361.164 541.113 li
361.16 541.504 361.199 541.855 361.281 542.168 cv
361.355 542.48 361.488 542.75 361.672 542.969 cv
361.852 543.195 362.086 543.367 362.383 543.484 cv
362.672 543.609 363.031 543.668 363.457 543.664 cv
363.789 543.668 364.086 543.641 364.348 543.582 cv
364.609 543.531 364.836 543.469 365.027 543.398 cv
365.215 543.332 365.371 543.273 365.496 543.215 cv
365.617 543.164 365.711 543.137 365.773 543.133 cv
365.809 543.137 365.84 543.145 365.871 543.16 cv
365.898 543.18 365.922 543.207 365.941 543.242 cv
365.953 543.281 365.965 543.332 365.977 543.395 cv
365.98 543.461 365.984 543.539 365.988 543.633 cv
365.984 543.703 365.98 543.762 365.98 543.809 cv
365.973 543.855 365.969 543.898 365.961 543.937 cv
365.953 543.977 365.938 544.012 365.922 544.043 cv
365.898 544.074 365.875 544.105 365.852 544.133 cv
365.82 544.164 365.738 544.211 365.598 544.273 cv
365.457 544.34 365.273 544.402 365.051 544.465 cv
364.824 544.527 364.566 544.582 364.273 544.633 cv
363.98 544.68 363.668 544.703 363.336 544.707 cv
362.758 544.703 362.25 544.625 361.82 544.465 cv
361.383 544.305 361.02 544.066 360.727 543.75 cv
360.426 543.434 360.203 543.039 360.055 542.559 cv
359.906 542.082 359.832 541.523 359.832 540.887 cv
359.832 540.289 359.906 539.75 360.063 539.266 cv
360.215 538.789 360.441 538.379 360.738 538.043 cv
361.031 537.707 361.387 537.449 361.801 537.27 cv
362.215 537.09 362.68 537 363.195 537 cv
363.746 537 364.215 537.09 364.602 537.266 cv
364.988 537.445 365.305 537.684 365.559 537.98 cv
365.805 538.281 365.988 538.633 366.105 539.031 cv
366.219 539.437 366.277 539.867 366.281 540.32 cv
cp
364.988 540.172 mo
365.004 539.496 364.852 538.965 364.535 538.582 cv
364.219 538.199 363.75 538.008 363.133 538.004 cv
362.809 538.008 362.527 538.066 362.289 538.184 cv
362.047 538.305 361.848 538.465 361.688 538.66 cv
361.523 538.859 361.398 539.09 361.313 539.352 cv
361.223 539.613 361.172 539.887 361.164 540.172 cv
cp
f
373.293 544.215 mo
373.332 544.289 373.352 544.352 373.355 544.398 cv
373.352 544.453 373.328 544.492 373.281 544.52 cv
373.23 544.551 373.156 544.57 373.055 544.586 cv
372.953 544.598 372.82 544.605 372.66 544.605 cv
372.5 544.605 372.375 544.602 372.289 544.594 cv
372.195 544.586 372.125 544.574 372.074 544.555 cv
372.016 544.539 371.973 544.516 371.949 544.484 cv
371.918 544.457 371.895 544.426 371.875 544.387 cv
370.191 541.605 li
368.516 544.387 li
368.492 544.426 368.469 544.457 368.441 544.484 cv
368.41 544.516 368.367 544.539 368.316 544.555 cv
368.258 544.574 368.188 544.586 368.102 544.594 cv
368.012 544.602 367.895 544.605 367.75 544.605 cv
367.598 544.605 367.477 544.598 367.383 544.586 cv
367.285 544.57 367.215 544.551 367.172 544.52 cv
367.125 544.492 367.102 544.453 367.109 544.398 cv
367.109 544.352 367.137 544.289 367.184 544.215 cv
369.363 540.793 li
367.301 537.5 li
367.258 537.43 367.234 537.367 367.234 537.316 cv
367.23 537.27 367.254 537.23 367.305 537.191 cv
367.352 537.16 367.426 537.137 367.527 537.125 cv
367.625 537.117 367.758 537.113 367.93 537.109 cv
368.078 537.113 368.199 537.117 368.293 537.121 cv
368.379 537.133 368.453 537.145 368.508 537.156 cv
368.559 537.176 368.598 537.195 368.625 537.219 cv
368.648 537.246 368.672 537.277 368.695 537.312 cv
370.293 539.922 li
371.914 537.312 li
371.93 537.285 371.953 537.258 371.984 537.227 cv
372.008 537.203 372.043 537.18 372.09 537.16 cv
372.129 537.145 372.191 537.133 372.273 537.121 cv
372.352 537.117 372.461 537.113 372.605 537.109 cv
372.754 537.113 372.879 537.117 372.977 537.125 cv
373.07 537.137 373.141 537.156 373.191 537.184 cv
373.234 537.215 373.258 537.254 373.254 537.305 cv
373.246 537.359 373.219 537.426 373.176 537.5 cv
371.125 540.754 li
cp
f
229.543 9.76202 mo
229.543 10.328 229.453 10.832 229.277 11.266 cv
229.098 11.703 228.84 12.07 228.504 12.367 cv
228.164 12.672 227.75 12.898 227.262 13.051 cv
226.77 13.207 226.191 13.285 225.527 13.281 cv
224.688 13.281 li
224.688 16.5 li
224.684 16.555 224.668 16.602 224.637 16.641 cv
224.602 16.684 224.547 16.719 224.469 16.742 cv
224.391 16.77 224.285 16.789 224.156 16.805 cv
224.023 16.82 223.859 16.828 223.66 16.828 cv
223.461 16.828 223.293 16.82 223.164 16.805 cv
223.027 16.789 222.922 16.77 222.848 16.742 cv
222.766 16.719 222.711 16.684 222.684 16.641 cv
222.648 16.602 222.633 16.555 222.637 16.5 cv
222.637 7.42999 li
222.633 7.18701 222.699 7.00403 222.828 6.87903 cv
222.953 6.758 223.121 6.69897 223.332 6.69501 cv
225.707 6.69501 li
225.941 6.69897 226.172 6.70697 226.391 6.72302 cv
226.605 6.742 226.863 6.78101 227.164 6.84003 cv
227.465 6.90198 227.77 7.01202 228.082 7.172 cv
228.391 7.336 228.652 7.54303 228.871 7.78497 cv
229.086 8.03497 229.254 8.32397 229.371 8.65198 cv
229.484 8.98401 229.543 9.35199 229.543 9.76202 cv
cp
227.398 9.90601 mo
227.398 9.55902 227.336 9.26599 227.211 9.03497 cv
227.086 8.80902 226.93 8.64099 226.75 8.52698 cv
226.566 8.422 226.379 8.35199 226.18 8.32001 cv
225.977 8.29303 225.77 8.28101 225.559 8.27698 cv
224.688 8.27698 li
224.688 11.699 li
225.605 11.699 li
225.934 11.703 226.207 11.656 226.43 11.566 cv
226.648 11.48 226.828 11.359 226.969 11.199 cv
227.105 11.043 227.211 10.852 227.289 10.629 cv
227.359 10.41 227.398 10.172 227.398 9.90601 cv
cp
f
235.48 10.211 mo
235.48 10.402 235.473 10.555 235.465 10.672 cv
235.449 10.793 235.434 10.887 235.418 10.953 cv
235.395 11.023 235.367 11.07 235.336 11.094 cv
235.297 11.121 235.254 11.133 235.207 11.133 cv
235.16 11.133 235.113 11.125 235.066 11.105 cv
235.012 11.09 234.953 11.07 234.891 11.047 cv
234.82 11.027 234.75 11.008 234.676 10.988 cv
234.594 10.973 234.508 10.965 234.418 10.961 cv
234.305 10.965 234.195 10.984 234.09 11.027 cv
233.98 11.074 233.867 11.145 233.754 11.234 cv
233.633 11.328 233.512 11.453 233.387 11.605 cv
233.258 11.766 233.121 11.957 232.977 12.184 cv
232.977 16.516 li
232.973 16.57 232.957 16.613 232.93 16.652 cv
232.895 16.691 232.84 16.727 232.77 16.75 cv
232.691 16.777 232.594 16.793 232.469 16.809 cv
232.344 16.82 232.184 16.828 231.996 16.828 cv
231.801 16.828 231.645 16.82 231.52 16.809 cv
231.395 16.793 231.293 16.777 231.219 16.75 cv
231.141 16.727 231.086 16.691 231.059 16.652 cv
231.023 16.613 231.008 16.57 231.012 16.516 cv
231.012 9.56598 li
231.008 9.52002 231.023 9.47302 231.051 9.42999 cv
231.074 9.39502 231.121 9.36298 231.191 9.33197 cv
231.258 9.30902 231.344 9.289 231.453 9.27301 cv
231.559 9.26599 231.691 9.258 231.855 9.25403 cv
232.02 9.258 232.156 9.26599 232.266 9.27301 cv
232.371 9.289 232.457 9.30902 232.52 9.33197 cv
232.578 9.36298 232.621 9.39502 232.648 9.42999 cv
232.672 9.47302 232.684 9.52002 232.688 9.56598 cv
232.688 10.43 li
232.867 10.172 233.039 9.961 233.203 9.789 cv
233.359 9.625 233.516 9.48798 233.664 9.38702 cv
233.809 9.289 233.953 9.22302 234.098 9.17999 cv
234.242 9.14502 234.387 9.125 234.535 9.12097 cv
234.602 9.125 234.676 9.12903 234.754 9.133 cv
234.832 9.14502 234.91 9.15601 234.996 9.172 cv
235.074 9.19098 235.148 9.211 235.215 9.23401 cv
235.273 9.258 235.32 9.28497 235.352 9.30902 cv
235.379 9.34003 235.398 9.367 235.414 9.39502 cv
235.426 9.42999 235.438 9.47302 235.449 9.52301 cv
235.457 9.58197 235.465 9.664 235.473 9.77002 cv
235.477 9.87903 235.48 10.027 235.48 10.211 cv
cp
f
242.988 12.84 mo
242.984 13.078 242.934 13.254 242.828 13.367 cv
242.719 13.484 242.57 13.543 242.391 13.539 cv
238.156 13.539 li
238.152 13.84 238.188 14.109 238.262 14.348 cv
238.328 14.59 238.441 14.793 238.598 14.961 cv
238.75 15.133 238.945 15.262 239.188 15.348 cv
239.426 15.437 239.715 15.48 240.059 15.48 cv
240.398 15.48 240.699 15.457 240.961 15.406 cv
241.219 15.359 241.445 15.305 241.637 15.242 cv
241.824 15.184 241.98 15.129 242.109 15.078 cv
242.23 15.031 242.332 15.008 242.414 15.004 cv
242.457 15.008 242.496 15.016 242.531 15.031 cv
242.559 15.051 242.586 15.082 242.605 15.129 cv
242.625 15.176 242.637 15.242 242.648 15.328 cv
242.652 15.414 242.656 15.523 242.66 15.652 cv
242.656 15.77 242.656 15.867 242.652 15.945 cv
242.645 16.027 242.637 16.094 242.629 16.148 cv
242.617 16.207 242.602 16.258 242.582 16.293 cv
242.563 16.336 242.535 16.371 242.504 16.406 cv
242.469 16.445 242.375 16.496 242.227 16.555 cv
242.07 16.621 241.879 16.684 241.648 16.738 cv
241.41 16.801 241.141 16.848 240.844 16.895 cv
240.539 16.934 240.219 16.957 239.879 16.961 cv
239.258 16.957 238.715 16.883 238.254 16.727 cv
237.785 16.574 237.398 16.336 237.09 16.02 cv
236.773 15.703 236.539 15.305 236.391 14.82 cv
236.234 14.34 236.16 13.773 236.164 13.117 cv
236.16 12.504 236.238 11.945 236.402 11.449 cv
236.559 10.953 236.793 10.535 237.105 10.187 cv
237.41 9.84399 237.785 9.578 238.223 9.39502 cv
238.66 9.21503 239.152 9.125 239.707 9.12097 cv
240.285 9.125 240.785 9.211 241.199 9.37903 cv
241.613 9.55499 241.949 9.79303 242.215 10.094 cv
242.477 10.398 242.672 10.758 242.801 11.172 cv
242.922 11.59 242.984 12.039 242.988 12.527 cv
cp
241.086 12.277 mo
241.098 11.727 240.988 11.293 240.754 10.98 cv
240.52 10.668 240.152 10.512 239.66 10.508 cv
239.41 10.512 239.195 10.559 239.012 10.648 cv
238.824 10.746 238.672 10.871 238.551 11.027 cv
238.426 11.187 238.332 11.375 238.27 11.59 cv
238.203 11.805 238.164 12.035 238.156 12.277 cv
cp
f
251.594 12.937 mo
251.594 13.559 251.527 14.117 251.395 14.613 cv
251.262 15.109 251.066 15.531 250.813 15.879 cv
250.559 16.227 250.242 16.496 249.863 16.68 cv
249.48 16.867 249.047 16.957 248.563 16.961 cv
248.355 16.957 248.168 16.937 248.004 16.902 cv
247.832 16.859 247.668 16.801 247.512 16.723 cv
247.352 16.645 247.195 16.547 247.043 16.422 cv
246.883 16.305 246.723 16.164 246.559 16 cv
246.559 19.273 li
246.555 19.32 246.539 19.367 246.512 19.414 cv
246.477 19.453 246.422 19.488 246.352 19.52 cv
246.273 19.543 246.176 19.566 246.051 19.586 cv
245.926 19.598 245.766 19.605 245.578 19.609 cv
245.383 19.605 245.227 19.598 245.102 19.586 cv
244.977 19.566 244.875 19.543 244.801 19.52 cv
244.723 19.488 244.668 19.453 244.641 19.414 cv
244.605 19.367 244.59 19.32 244.594 19.273 cv
244.594 9.56598 li
244.59 9.52002 244.605 9.47302 244.633 9.42999 cv
244.656 9.39502 244.699 9.36298 244.77 9.33197 cv
244.832 9.30902 244.918 9.289 245.027 9.27301 cv
245.129 9.26599 245.266 9.258 245.43 9.25403 cv
245.586 9.258 245.715 9.26599 245.82 9.27301 cv
245.926 9.289 246.012 9.30902 246.078 9.33197 cv
246.141 9.36298 246.188 9.39502 246.215 9.42999 cv
246.238 9.47302 246.25 9.52002 246.254 9.56598 cv
246.254 10.383 li
246.453 10.176 246.652 9.99597 246.852 9.836 cv
247.043 9.67999 247.242 9.547 247.445 9.43701 cv
247.648 9.336 247.855 9.25403 248.074 9.19897 cv
248.285 9.14801 248.516 9.125 248.766 9.12097 cv
249.27 9.125 249.703 9.22302 250.066 9.422 cv
250.422 9.625 250.715 9.90198 250.941 10.246 cv
251.164 10.598 251.328 11 251.438 11.461 cv
251.539 11.922 251.594 12.414 251.594 12.937 cv
cp
249.551 13.078 mo
249.547 12.785 249.527 12.504 249.484 12.227 cv
249.438 11.957 249.359 11.715 249.258 11.5 cv
249.148 11.289 249.008 11.117 248.836 10.988 cv
248.66 10.863 248.445 10.801 248.188 10.797 cv
248.055 10.801 247.926 10.82 247.801 10.855 cv
247.672 10.898 247.543 10.961 247.41 11.047 cv
247.277 11.137 247.141 11.25 247.004 11.391 cv
246.859 11.531 246.711 11.707 246.559 11.91 cv
246.559 14.203 li
246.832 14.551 247.094 14.82 247.344 15.008 cv
247.59 15.199 247.852 15.293 248.125 15.293 cv
248.379 15.293 248.594 15.23 248.777 15.098 cv
248.953 14.973 249.102 14.801 249.215 14.59 cv
249.328 14.379 249.41 14.141 249.469 13.875 cv
249.52 13.609 249.547 13.344 249.551 13.078 cv
cp
f
259.09 16.539 mo
259.086 16.617 259.059 16.672 259.012 16.711 cv
258.957 16.754 258.875 16.781 258.766 16.801 cv
258.648 16.816 258.484 16.828 258.27 16.828 cv
258.031 16.828 257.859 16.816 257.758 16.801 cv
257.648 16.781 257.574 16.754 257.535 16.711 cv
257.488 16.672 257.469 16.617 257.469 16.539 cv
257.469 15.988 li
257.18 16.297 256.852 16.535 256.488 16.703 cv
256.121 16.875 255.715 16.957 255.27 16.961 cv
254.898 16.957 254.559 16.91 254.25 16.816 cv
253.941 16.723 253.676 16.582 253.449 16.387 cv
253.223 16.199 253.047 15.965 252.922 15.684 cv
252.797 15.406 252.734 15.078 252.738 14.699 cv
252.734 14.301 252.813 13.949 252.973 13.645 cv
253.129 13.348 253.367 13.102 253.684 12.906 cv
253.996 12.715 254.387 12.57 254.855 12.473 cv
255.324 12.383 255.867 12.336 256.484 12.332 cv
257.164 12.332 li
257.164 11.91 li
257.164 11.695 257.141 11.504 257.098 11.34 cv
257.051 11.18 256.977 11.043 256.879 10.93 cv
256.773 10.824 256.641 10.742 256.473 10.687 cv
256.301 10.637 256.09 10.613 255.848 10.609 cv
255.516 10.613 255.223 10.648 254.969 10.719 cv
254.707 10.793 254.48 10.875 254.285 10.961 cv
254.086 11.055 253.922 11.133 253.793 11.203 cv
253.656 11.277 253.547 11.316 253.469 11.312 cv
253.406 11.316 253.355 11.297 253.316 11.258 cv
253.27 11.223 253.234 11.172 253.207 11.102 cv
253.176 11.039 253.152 10.953 253.141 10.852 cv
253.121 10.754 253.113 10.645 253.117 10.523 cv
253.113 10.363 253.129 10.238 253.156 10.141 cv
253.18 10.051 253.227 9.96503 253.305 9.88702 cv
253.375 9.81201 253.504 9.72998 253.688 9.64099 cv
253.867 9.55103 254.078 9.46503 254.324 9.38702 cv
254.566 9.30902 254.836 9.24597 255.125 9.19501 cv
255.414 9.14801 255.711 9.125 256.02 9.12097 cv
256.563 9.125 257.027 9.17603 257.414 9.28101 cv
257.801 9.39099 258.121 9.55499 258.371 9.77301 cv
258.621 9.992 258.801 10.277 258.918 10.625 cv
259.027 10.977 259.086 11.391 259.09 11.863 cv
cp
257.164 13.562 mo
256.414 13.562 li
256.098 13.566 255.828 13.59 255.605 13.633 cv
255.379 13.684 255.195 13.754 255.059 13.844 cv
254.914 13.941 254.813 14.055 254.75 14.184 cv
254.684 14.32 254.648 14.469 254.652 14.637 cv
254.648 14.93 254.742 15.16 254.93 15.324 cv
255.113 15.492 255.371 15.574 255.699 15.574 cv
255.973 15.574 256.223 15.504 256.457 15.363 cv
256.684 15.223 256.922 15.02 257.164 14.746 cv
cp
f
265.516 10.211 mo
265.516 10.402 265.508 10.555 265.5 10.672 cv
265.484 10.793 265.469 10.887 265.453 10.953 cv
265.43 11.023 265.402 11.07 265.371 11.094 cv
265.332 11.121 265.289 11.133 265.242 11.133 cv
265.195 11.133 265.148 11.125 265.102 11.105 cv
265.047 11.09 264.988 11.07 264.926 11.047 cv
264.855 11.027 264.785 11.008 264.711 10.988 cv
264.629 10.973 264.543 10.965 264.453 10.961 cv
264.34 10.965 264.23 10.984 264.125 11.027 cv
264.016 11.074 263.902 11.145 263.789 11.234 cv
263.668 11.328 263.547 11.453 263.422 11.605 cv
263.293 11.766 263.156 11.957 263.012 12.184 cv
263.012 16.516 li
263.008 16.57 262.992 16.613 262.965 16.652 cv
262.93 16.691 262.875 16.727 262.805 16.75 cv
262.727 16.777 262.629 16.793 262.504 16.809 cv
262.379 16.82 262.219 16.828 262.031 16.828 cv
261.836 16.828 261.68 16.82 261.555 16.809 cv
261.43 16.793 261.328 16.777 261.254 16.75 cv
261.176 16.727 261.121 16.691 261.094 16.652 cv
261.059 16.613 261.043 16.57 261.047 16.516 cv
261.047 9.56598 li
261.043 9.52002 261.059 9.47302 261.086 9.42999 cv
261.109 9.39502 261.156 9.36298 261.227 9.33197 cv
261.293 9.30902 261.379 9.289 261.488 9.27301 cv
261.594 9.26599 261.727 9.258 261.891 9.25403 cv
262.055 9.258 262.191 9.26599 262.301 9.27301 cv
262.406 9.289 262.492 9.30902 262.555 9.33197 cv
262.613 9.36298 262.656 9.39502 262.684 9.42999 cv
262.707 9.47302 262.719 9.52002 262.723 9.56598 cv
262.723 10.43 li
262.902 10.172 263.074 9.961 263.238 9.789 cv
263.395 9.625 263.551 9.48798 263.699 9.38702 cv
263.844 9.289 263.988 9.22302 264.133 9.17999 cv
264.277 9.14502 264.422 9.125 264.57 9.12097 cv
264.637 9.125 264.711 9.12903 264.789 9.133 cv
264.867 9.14502 264.945 9.15601 265.031 9.172 cv
265.109 9.19098 265.184 9.211 265.25 9.23401 cv
265.309 9.258 265.355 9.28497 265.387 9.30902 cv
265.414 9.34003 265.434 9.367 265.449 9.39502 cv
265.461 9.42999 265.473 9.47302 265.484 9.52301 cv
265.492 9.58197 265.5 9.664 265.508 9.77002 cv
265.512 9.87903 265.516 10.027 265.516 10.211 cv
cp
f
272.258 16.539 mo
272.254 16.617 272.227 16.672 272.18 16.711 cv
272.125 16.754 272.043 16.781 271.934 16.801 cv
271.816 16.816 271.652 16.828 271.438 16.828 cv
271.199 16.828 271.027 16.816 270.926 16.801 cv
270.816 16.781 270.742 16.754 270.703 16.711 cv
270.656 16.672 270.637 16.617 270.637 16.539 cv
270.637 15.988 li
270.348 16.297 270.02 16.535 269.656 16.703 cv
269.289 16.875 268.883 16.957 268.438 16.961 cv
268.066 16.957 267.727 16.91 267.418 16.816 cv
267.109 16.723 266.844 16.582 266.617 16.387 cv
266.391 16.199 266.215 15.965 266.09 15.684 cv
265.965 15.406 265.902 15.078 265.906 14.699 cv
265.902 14.301 265.98 13.949 266.141 13.645 cv
266.297 13.348 266.535 13.102 266.852 12.906 cv
267.164 12.715 267.555 12.57 268.023 12.473 cv
268.492 12.383 269.035 12.336 269.652 12.332 cv
270.332 12.332 li
270.332 11.91 li
270.332 11.695 270.309 11.504 270.266 11.34 cv
270.219 11.18 270.145 11.043 270.047 10.93 cv
269.941 10.824 269.809 10.742 269.641 10.687 cv
269.469 10.637 269.258 10.613 269.016 10.609 cv
268.684 10.613 268.391 10.648 268.137 10.719 cv
267.875 10.793 267.648 10.875 267.453 10.961 cv
267.254 11.055 267.09 11.133 266.961 11.203 cv
266.824 11.277 266.715 11.316 266.637 11.312 cv
266.574 11.316 266.523 11.297 266.484 11.258 cv
266.438 11.223 266.402 11.172 266.375 11.102 cv
266.344 11.039 266.32 10.953 266.309 10.852 cv
266.289 10.754 266.281 10.645 266.285 10.523 cv
266.281 10.363 266.297 10.238 266.324 10.141 cv
266.348 10.051 266.395 9.96503 266.473 9.88702 cv
266.543 9.81201 266.672 9.72998 266.855 9.64099 cv
267.035 9.55103 267.246 9.46503 267.492 9.38702 cv
267.734 9.30902 268.004 9.24597 268.293 9.19501 cv
268.582 9.14801 268.879 9.125 269.188 9.12097 cv
269.73 9.125 270.195 9.17603 270.582 9.28101 cv
270.969 9.39099 271.289 9.55499 271.539 9.77301 cv
271.789 9.992 271.969 10.277 272.086 10.625 cv
272.195 10.977 272.254 11.391 272.258 11.863 cv
cp
270.332 13.562 mo
269.582 13.562 li
269.266 13.566 268.996 13.59 268.773 13.633 cv
268.547 13.684 268.363 13.754 268.227 13.844 cv
268.082 13.941 267.98 14.055 267.918 14.184 cv
267.852 14.32 267.816 14.469 267.82 14.637 cv
267.816 14.93 267.91 15.16 268.098 15.324 cv
268.281 15.492 268.539 15.574 268.867 15.574 cv
269.141 15.574 269.391 15.504 269.625 15.363 cv
269.852 15.223 270.09 15.02 270.332 14.746 cv
cp
f
278.254 15.832 mo
278.254 16.059 278.238 16.234 278.211 16.355 cv
278.18 16.48 278.141 16.566 278.098 16.613 cv
278.047 16.664 277.98 16.707 277.891 16.746 cv
277.797 16.785 277.688 16.816 277.57 16.848 cv
277.445 16.871 277.313 16.895 277.172 16.914 cv
277.027 16.926 276.887 16.934 276.742 16.937 cv
276.352 16.934 276.012 16.883 275.727 16.789 cv
275.441 16.687 275.207 16.539 275.02 16.332 cv
274.832 16.129 274.691 15.871 274.605 15.559 cv
274.512 15.25 274.469 14.879 274.473 14.449 cv
274.473 10.891 li
273.641 10.891 li
273.539 10.895 273.465 10.832 273.414 10.707 cv
273.359 10.586 273.332 10.383 273.336 10.094 cv
273.332 9.94501 273.34 9.81598 273.355 9.71503 cv
273.367 9.61298 273.387 9.53101 273.414 9.46899 cv
273.438 9.40997 273.469 9.367 273.512 9.34003 cv
273.547 9.31598 273.594 9.30499 273.648 9.30103 cv
274.473 9.30103 li
274.473 7.75 li
274.469 7.703 274.484 7.65601 274.516 7.60901 cv
274.543 7.57001 274.594 7.53497 274.672 7.50403 cv
274.746 7.47998 274.848 7.45697 274.977 7.44098 cv
275.102 7.42999 275.258 7.42603 275.449 7.422 cv
275.637 7.42603 275.797 7.42999 275.926 7.44098 cv
276.051 7.45697 276.152 7.47998 276.227 7.50403 cv
276.297 7.53497 276.348 7.57001 276.383 7.60901 cv
276.41 7.65601 276.426 7.703 276.43 7.75 cv
276.43 9.30103 li
277.941 9.30103 li
277.992 9.30499 278.039 9.31598 278.078 9.34003 cv
278.117 9.367 278.148 9.40997 278.176 9.46899 cv
278.199 9.53101 278.219 9.61298 278.234 9.71503 cv
278.246 9.81598 278.254 9.94501 278.254 10.094 cv
278.254 10.383 278.227 10.586 278.176 10.707 cv
278.121 10.832 278.047 10.895 277.949 10.891 cv
276.43 10.891 li
276.43 14.156 li
276.426 14.535 276.484 14.82 276.609 15.008 cv
276.727 15.199 276.941 15.293 277.246 15.293 cv
277.348 15.293 277.441 15.285 277.527 15.266 cv
277.609 15.25 277.684 15.23 277.75 15.203 cv
277.813 15.184 277.867 15.16 277.914 15.141 cv
277.957 15.125 277.996 15.117 278.035 15.113 cv
278.063 15.117 278.094 15.125 278.125 15.141 cv
278.152 15.16 278.172 15.199 278.191 15.25 cv
278.203 15.309 278.219 15.383 278.234 15.473 cv
278.246 15.57 278.254 15.687 278.254 15.832 cv
cp
f
281.637 16.516 mo
281.633 16.57 281.617 16.613 281.59 16.652 cv
281.555 16.691 281.5 16.727 281.43 16.75 cv
281.352 16.777 281.254 16.793 281.129 16.809 cv
281.004 16.82 280.844 16.828 280.656 16.828 cv
280.461 16.828 280.305 16.82 280.18 16.809 cv
280.055 16.793 279.953 16.777 279.879 16.75 cv
279.801 16.727 279.746 16.691 279.719 16.652 cv
279.684 16.613 279.668 16.57 279.672 16.516 cv
279.672 9.58197 li
279.668 9.53101 279.684 9.48401 279.719 9.44501 cv
279.746 9.40601 279.801 9.375 279.879 9.34399 cv
279.953 9.32001 280.055 9.297 280.18 9.27698 cv
280.305 9.26599 280.461 9.258 280.656 9.25403 cv
280.844 9.258 281.004 9.26599 281.129 9.27698 cv
281.254 9.297 281.352 9.32001 281.43 9.34399 cv
281.5 9.375 281.555 9.40601 281.59 9.44501 cv
281.617 9.48401 281.633 9.53101 281.637 9.58197 cv
cp
281.785 7.211 mo
281.785 7.60901 281.703 7.883 281.543 8.03101 cv
281.379 8.18402 281.082 8.258 280.648 8.25403 cv
280.203 8.258 279.902 8.18402 279.754 8.039 cv
279.598 7.89502 279.523 7.633 279.523 7.25 cv
279.523 6.85498 279.602 6.58197 279.762 6.42999 cv
279.918 6.27698 280.219 6.19897 280.664 6.19897 cv
281.098 6.19897 281.395 6.27301 281.551 6.422 cv
281.707 6.57001 281.785 6.836 281.785 7.211 cv
cp
f
290.629 12.969 mo
290.625 13.566 290.547 14.109 290.395 14.594 cv
290.234 15.086 290 15.504 289.684 15.855 cv
289.367 16.207 288.969 16.48 288.492 16.672 cv
288.012 16.863 287.453 16.957 286.816 16.961 cv
286.195 16.957 285.656 16.875 285.203 16.703 cv
284.742 16.535 284.363 16.285 284.066 15.957 cv
283.762 15.633 283.539 15.23 283.395 14.75 cv
283.25 14.273 283.18 13.727 283.18 13.109 cv
283.18 12.52 283.258 11.98 283.414 11.488 cv
283.57 11 283.809 10.578 284.129 10.227 cv
284.445 9.87903 284.84 9.60498 285.316 9.40997 cv
285.789 9.21899 286.348 9.125 286.988 9.12097 cv
287.613 9.125 288.152 9.20697 288.609 9.375 cv
289.066 9.547 289.445 9.797 289.742 10.121 cv
290.039 10.449 290.262 10.852 290.41 11.328 cv
290.555 11.809 290.625 12.355 290.629 12.969 cv
cp
288.609 13.047 mo
288.605 12.711 288.578 12.395 288.527 12.102 cv
288.469 11.816 288.375 11.566 288.25 11.352 cv
288.117 11.141 287.945 10.973 287.734 10.852 cv
287.516 10.734 287.246 10.676 286.918 10.672 cv
286.629 10.676 286.375 10.73 286.156 10.832 cv
285.938 10.941 285.758 11.098 285.617 11.301 cv
285.477 11.508 285.371 11.754 285.301 12.039 cv
285.23 12.332 285.195 12.66 285.195 13.023 cv
285.195 13.371 285.223 13.687 285.281 13.973 cv
285.336 14.266 285.43 14.516 285.559 14.727 cv
285.684 14.941 285.855 15.105 286.078 15.219 cv
286.293 15.34 286.563 15.398 286.887 15.395 cv
287.18 15.398 287.438 15.344 287.66 15.234 cv
287.875 15.129 288.055 14.977 288.195 14.77 cv
288.336 14.57 288.438 14.324 288.508 14.035 cv
288.57 13.75 288.605 13.422 288.609 13.047 cv
cp
f
298.875 16.516 mo
298.871 16.57 298.855 16.613 298.828 16.652 cv
298.793 16.691 298.742 16.727 298.672 16.75 cv
298.598 16.777 298.496 16.793 298.371 16.809 cv
298.242 16.82 298.086 16.828 297.902 16.828 cv
297.707 16.828 297.547 16.82 297.422 16.809 cv
297.293 16.793 297.191 16.777 297.121 16.75 cv
297.043 16.727 296.992 16.691 296.965 16.652 cv
296.93 16.613 296.914 16.57 296.918 16.516 cv
296.918 12.551 li
296.914 12.215 296.891 11.949 296.844 11.754 cv
296.793 11.562 296.719 11.398 296.629 11.262 cv
296.535 11.125 296.418 11.02 296.27 10.941 cv
296.121 10.867 295.945 10.828 295.75 10.828 cv
295.496 10.828 295.246 10.922 294.992 11.102 cv
294.738 11.285 294.473 11.547 294.199 11.895 cv
294.199 16.516 li
294.195 16.57 294.18 16.613 294.152 16.652 cv
294.117 16.691 294.063 16.727 293.992 16.75 cv
293.914 16.777 293.816 16.793 293.691 16.809 cv
293.566 16.82 293.406 16.828 293.219 16.828 cv
293.023 16.828 292.867 16.82 292.742 16.809 cv
292.617 16.793 292.516 16.777 292.441 16.75 cv
292.363 16.727 292.309 16.691 292.281 16.652 cv
292.246 16.613 292.23 16.57 292.234 16.516 cv
292.234 9.56598 li
292.23 9.52002 292.246 9.47302 292.273 9.42999 cv
292.297 9.39502 292.344 9.36298 292.414 9.33197 cv
292.48 9.30902 292.566 9.289 292.676 9.27301 cv
292.781 9.26599 292.914 9.258 293.078 9.25403 cv
293.242 9.258 293.379 9.26599 293.488 9.27301 cv
293.594 9.289 293.68 9.30902 293.742 9.33197 cv
293.801 9.36298 293.844 9.39502 293.871 9.42999 cv
293.895 9.47302 293.906 9.52002 293.91 9.56598 cv
293.91 10.367 li
294.293 9.95697 294.684 9.64502 295.082 9.43402 cv
295.477 9.22699 295.895 9.125 296.328 9.12097 cv
296.797 9.125 297.195 9.203 297.523 9.35498 cv
297.848 9.51599 298.109 9.72699 298.309 9.992 cv
298.508 10.262 298.652 10.574 298.742 10.93 cv
298.828 11.289 298.871 11.719 298.875 12.223 cv
cp
f
311.289 7.539 mo
311.285 7.69501 311.277 7.82397 311.27 7.92603 cv
311.254 8.03497 311.234 8.12097 311.211 8.18402 cv
311.18 8.25 311.148 8.297 311.113 8.32397 cv
311.07 8.35901 311.027 8.375 310.984 8.37097 cv
308.461 8.37097 li
308.461 16.5 li
308.461 16.555 308.441 16.602 308.41 16.641 cv
308.371 16.684 308.316 16.719 308.242 16.742 cv
308.16 16.77 308.055 16.789 307.926 16.805 cv
307.789 16.82 307.625 16.828 307.43 16.828 cv
307.234 16.828 307.07 16.82 306.938 16.805 cv
306.805 16.789 306.699 16.77 306.621 16.742 cv
306.543 16.719 306.484 16.684 306.453 16.641 cv
306.414 16.602 306.398 16.555 306.402 16.5 cv
306.402 8.37097 li
303.879 8.37097 li
303.824 8.375 303.777 8.35901 303.746 8.32397 cv
303.707 8.297 303.676 8.25 303.652 8.18402 cv
303.621 8.12097 303.602 8.03497 303.594 7.92603 cv
303.578 7.82397 303.574 7.69501 303.574 7.539 cv
303.574 7.38702 303.578 7.25403 303.594 7.14099 cv
303.602 7.03497 303.621 6.94501 303.652 6.87903 cv
303.676 6.81598 303.707 6.77002 303.746 6.73798 cv
303.777 6.711 303.824 6.69897 303.879 6.69501 cv
310.984 6.69501 li
311.027 6.69897 311.07 6.711 311.113 6.73798 cv
311.148 6.77002 311.18 6.81598 311.211 6.87903 cv
311.234 6.94501 311.254 7.03497 311.27 7.14099 cv
311.277 7.25403 311.285 7.38702 311.289 7.539 cv
cp
f
314.324 16.516 mo
314.32 16.57 314.305 16.613 314.277 16.652 cv
314.242 16.691 314.188 16.727 314.117 16.75 cv
314.039 16.777 313.941 16.793 313.816 16.809 cv
313.691 16.82 313.531 16.828 313.344 16.828 cv
313.148 16.828 312.992 16.82 312.867 16.809 cv
312.742 16.793 312.641 16.777 312.566 16.75 cv
312.488 16.727 312.434 16.691 312.406 16.652 cv
312.371 16.613 312.355 16.57 312.359 16.516 cv
312.359 9.58197 li
312.355 9.53101 312.371 9.48401 312.406 9.44501 cv
312.434 9.40601 312.488 9.375 312.566 9.34399 cv
312.641 9.32001 312.742 9.297 312.867 9.27698 cv
312.992 9.26599 313.148 9.258 313.344 9.25403 cv
313.531 9.258 313.691 9.26599 313.816 9.27698 cv
313.941 9.297 314.039 9.32001 314.117 9.34399 cv
314.188 9.375 314.242 9.40601 314.277 9.44501 cv
314.305 9.48401 314.32 9.53101 314.324 9.58197 cv
cp
314.473 7.211 mo
314.473 7.60901 314.391 7.883 314.23 8.03101 cv
314.066 8.18402 313.77 8.258 313.336 8.25403 cv
312.891 8.258 312.59 8.18402 312.441 8.039 cv
312.285 7.89502 312.211 7.633 312.211 7.25 cv
312.211 6.85498 312.289 6.58197 312.449 6.42999 cv
312.605 6.27698 312.906 6.19897 313.352 6.19897 cv
313.785 6.19897 314.082 6.27301 314.238 6.422 cv
314.395 6.57001 314.473 6.836 314.473 7.211 cv
cp
f
327.375 16.516 mo
327.371 16.57 327.355 16.613 327.328 16.652 cv
327.293 16.691 327.242 16.727 327.172 16.75 cv
327.098 16.777 326.996 16.793 326.875 16.809 cv
326.75 16.82 326.594 16.828 326.402 16.828 cv
326.203 16.828 326.043 16.82 325.918 16.809 cv
325.793 16.793 325.691 16.777 325.617 16.75 cv
325.539 16.727 325.488 16.691 325.461 16.652 cv
325.434 16.613 325.418 16.57 325.422 16.516 cv
325.422 12.395 li
325.418 12.164 325.398 11.949 325.355 11.754 cv
325.309 11.562 325.238 11.398 325.152 11.262 cv
325.059 11.125 324.945 11.02 324.809 10.941 cv
324.668 10.867 324.504 10.828 324.313 10.828 cv
324.078 10.828 323.84 10.922 323.602 11.102 cv
323.363 11.285 323.105 11.547 322.824 11.895 cv
322.824 16.516 li
322.824 16.57 322.809 16.613 322.777 16.652 cv
322.746 16.691 322.691 16.727 322.617 16.75 cv
322.539 16.777 322.438 16.793 322.316 16.809 cv
322.191 16.82 322.039 16.828 321.852 16.828 cv
321.656 16.828 321.496 16.82 321.375 16.809 cv
321.246 16.793 321.145 16.777 321.074 16.75 cv
320.996 16.727 320.945 16.691 320.914 16.652 cv
320.883 16.613 320.867 16.57 320.867 16.516 cv
320.867 12.395 li
320.867 12.164 320.844 11.949 320.801 11.754 cv
320.758 11.562 320.691 11.398 320.605 11.262 cv
320.512 11.125 320.398 11.02 320.262 10.941 cv
320.117 10.867 319.953 10.828 319.77 10.828 cv
319.527 10.828 319.289 10.922 319.051 11.102 cv
318.813 11.285 318.555 11.547 318.281 11.895 cv
318.281 16.516 li
318.277 16.57 318.262 16.613 318.234 16.652 cv
318.199 16.691 318.145 16.727 318.074 16.75 cv
317.996 16.777 317.898 16.793 317.773 16.809 cv
317.648 16.82 317.488 16.828 317.301 16.828 cv
317.105 16.828 316.949 16.82 316.824 16.809 cv
316.699 16.793 316.598 16.777 316.523 16.75 cv
316.445 16.727 316.391 16.691 316.363 16.652 cv
316.328 16.613 316.313 16.57 316.316 16.516 cv
316.316 9.56598 li
316.313 9.52002 316.328 9.47302 316.355 9.42999 cv
316.379 9.39502 316.426 9.36298 316.496 9.33197 cv
316.563 9.30902 316.648 9.289 316.758 9.27301 cv
316.863 9.26599 316.996 9.258 317.16 9.25403 cv
317.324 9.258 317.461 9.26599 317.57 9.27301 cv
317.676 9.289 317.762 9.30902 317.824 9.33197 cv
317.883 9.36298 317.926 9.39502 317.953 9.42999 cv
317.977 9.47302 317.988 9.52002 317.992 9.56598 cv
317.992 10.367 li
318.375 9.95697 318.758 9.64502 319.141 9.43402 cv
319.52 9.22699 319.922 9.125 320.34 9.12097 cv
320.625 9.125 320.879 9.15198 321.109 9.211 cv
321.336 9.27301 321.543 9.35901 321.723 9.46899 cv
321.902 9.58197 322.055 9.71899 322.184 9.87097 cv
322.313 10.027 322.422 10.199 322.512 10.391 cv
322.719 10.168 322.922 9.97699 323.125 9.81598 cv
323.32 9.65601 323.52 9.52301 323.715 9.422 cv
323.91 9.32001 324.105 9.24597 324.301 9.19501 cv
324.496 9.14801 324.695 9.125 324.898 9.12097 cv
325.359 9.125 325.746 9.203 326.066 9.35498 cv
326.379 9.51599 326.637 9.72699 326.832 9.992 cv
327.027 10.262 327.164 10.574 327.25 10.93 cv
327.328 11.289 327.371 11.668 327.375 12.066 cv
cp
f
335.715 12.84 mo
335.711 13.078 335.66 13.254 335.555 13.367 cv
335.445 13.484 335.297 13.543 335.117 13.539 cv
330.883 13.539 li
330.879 13.84 330.914 14.109 330.988 14.348 cv
331.055 14.59 331.168 14.793 331.324 14.961 cv
331.477 15.133 331.672 15.262 331.914 15.348 cv
332.152 15.437 332.441 15.48 332.785 15.48 cv
333.125 15.48 333.426 15.457 333.688 15.406 cv
333.945 15.359 334.172 15.305 334.363 15.242 cv
334.551 15.184 334.707 15.129 334.836 15.078 cv
334.957 15.031 335.059 15.008 335.141 15.004 cv
335.184 15.008 335.223 15.016 335.258 15.031 cv
335.285 15.051 335.313 15.082 335.332 15.129 cv
335.352 15.176 335.363 15.242 335.375 15.328 cv
335.379 15.414 335.383 15.523 335.387 15.652 cv
335.383 15.77 335.383 15.867 335.379 15.945 cv
335.371 16.027 335.363 16.094 335.355 16.148 cv
335.344 16.207 335.328 16.258 335.309 16.293 cv
335.289 16.336 335.262 16.371 335.23 16.406 cv
335.195 16.445 335.102 16.496 334.953 16.555 cv
334.797 16.621 334.605 16.684 334.375 16.738 cv
334.137 16.801 333.867 16.848 333.57 16.895 cv
333.266 16.934 332.945 16.957 332.605 16.961 cv
331.984 16.957 331.441 16.883 330.98 16.727 cv
330.512 16.574 330.125 16.336 329.816 16.02 cv
329.5 15.703 329.266 15.305 329.117 14.82 cv
328.961 14.34 328.887 13.773 328.891 13.117 cv
328.887 12.504 328.965 11.945 329.129 11.449 cv
329.285 10.953 329.52 10.535 329.832 10.187 cv
330.137 9.84399 330.512 9.578 330.949 9.39502 cv
331.387 9.21503 331.879 9.125 332.434 9.12097 cv
333.012 9.125 333.512 9.211 333.926 9.37903 cv
334.34 9.55499 334.676 9.79303 334.941 10.094 cv
335.203 10.398 335.398 10.758 335.527 11.172 cv
335.648 11.59 335.711 12.039 335.715 12.527 cv
cp
333.813 12.277 mo
333.824 11.727 333.715 11.293 333.48 10.98 cv
333.246 10.668 332.879 10.512 332.387 10.508 cv
332.137 10.512 331.922 10.559 331.738 10.648 cv
331.551 10.746 331.398 10.871 331.277 11.027 cv
331.152 11.187 331.059 11.375 330.996 11.59 cv
330.93 11.805 330.891 12.035 330.883 12.277 cv
cp
f
342.215 14.551 mo
342.211 14.949 342.137 15.297 341.992 15.598 cv
341.844 15.898 341.637 16.152 341.367 16.352 cv
341.094 16.559 340.773 16.707 340.406 16.809 cv
340.039 16.906 339.637 16.957 339.207 16.961 cv
338.941 16.957 338.695 16.937 338.461 16.902 cv
338.227 16.859 338.016 16.812 337.828 16.754 cv
337.641 16.695 337.484 16.633 337.359 16.57 cv
337.234 16.508 337.141 16.449 337.086 16.395 cv
337.027 16.34 336.984 16.258 336.957 16.141 cv
336.922 16.027 336.906 15.852 336.91 15.621 cv
336.906 15.473 336.914 15.352 336.926 15.258 cv
336.934 15.168 336.949 15.098 336.973 15.039 cv
336.992 14.988 337.016 14.949 337.051 14.93 cv
337.078 14.914 337.117 14.906 337.164 14.902 cv
337.219 14.906 337.305 14.937 337.418 15 cv
337.527 15.066 337.664 15.141 337.836 15.215 cv
338 15.297 338.195 15.367 338.414 15.434 cv
338.633 15.504 338.883 15.539 339.168 15.535 cv
339.344 15.539 339.5 15.52 339.641 15.48 cv
339.773 15.445 339.895 15.395 340 15.324 cv
340.098 15.258 340.172 15.172 340.227 15.066 cv
340.273 14.965 340.301 14.844 340.305 14.707 cv
340.301 14.551 340.254 14.418 340.16 14.309 cv
340.066 14.199 339.938 14.102 339.781 14.016 cv
339.617 13.934 339.438 13.855 339.242 13.781 cv
339.039 13.711 338.836 13.633 338.625 13.539 cv
338.414 13.453 338.207 13.352 338.012 13.234 cv
337.809 13.125 337.629 12.984 337.473 12.816 cv
337.309 12.652 337.184 12.453 337.09 12.215 cv
336.996 11.984 336.949 11.703 336.949 11.371 cv
336.949 11.043 337.012 10.738 337.141 10.457 cv
337.27 10.184 337.457 9.94501 337.703 9.74597 cv
337.945 9.55103 338.242 9.39801 338.594 9.28497 cv
338.941 9.17999 339.336 9.125 339.777 9.12097 cv
339.992 9.125 340.203 9.14099 340.41 9.16803 cv
340.613 9.203 340.801 9.242 340.969 9.28497 cv
341.133 9.336 341.273 9.38702 341.391 9.43701 cv
341.504 9.49597 341.586 9.54303 341.637 9.578 cv
341.684 9.62097 341.719 9.65997 341.742 9.69501 cv
341.762 9.73798 341.773 9.78497 341.785 9.836 cv
341.793 9.89099 341.805 9.95697 341.813 10.035 cv
341.82 10.121 341.824 10.219 341.824 10.336 cv
341.824 10.477 341.82 10.594 341.813 10.68 cv
341.805 10.773 341.789 10.844 341.773 10.891 cv
341.754 10.945 341.73 10.98 341.703 10.996 cv
341.668 11.02 341.633 11.027 341.594 11.023 cv
341.543 11.027 341.469 11 341.375 10.941 cv
341.273 10.891 341.152 10.832 341.004 10.766 cv
340.855 10.707 340.684 10.648 340.488 10.59 cv
340.293 10.539 340.07 10.512 339.824 10.508 cv
339.645 10.512 339.492 10.531 339.363 10.562 cv
339.23 10.602 339.121 10.652 339.043 10.719 cv
338.957 10.789 338.895 10.867 338.855 10.957 cv
338.809 11.051 338.789 11.148 338.793 11.25 cv
338.789 11.41 338.84 11.547 338.941 11.652 cv
339.039 11.766 339.168 11.859 339.332 11.941 cv
339.492 12.027 339.676 12.105 339.883 12.176 cv
340.086 12.25 340.293 12.332 340.504 12.414 cv
340.711 12.504 340.918 12.602 341.129 12.715 cv
341.332 12.828 341.516 12.969 341.676 13.133 cv
341.836 13.301 341.965 13.5 342.066 13.73 cv
342.16 13.965 342.211 14.238 342.215 14.551 cv
cp
f
354.328 12.969 mo
354.324 13.566 354.246 14.109 354.094 14.594 cv
353.934 15.086 353.699 15.504 353.383 15.855 cv
353.066 16.207 352.668 16.48 352.191 16.672 cv
351.711 16.863 351.152 16.957 350.516 16.961 cv
349.895 16.957 349.355 16.875 348.902 16.703 cv
348.441 16.535 348.063 16.285 347.766 15.957 cv
347.461 15.633 347.238 15.23 347.094 14.75 cv
346.949 14.273 346.879 13.727 346.879 13.109 cv
346.879 12.52 346.957 11.98 347.113 11.488 cv
347.27 11 347.508 10.578 347.828 10.227 cv
348.145 9.87903 348.539 9.60498 349.016 9.40997 cv
349.488 9.21899 350.047 9.125 350.688 9.12097 cv
351.313 9.125 351.852 9.20697 352.309 9.375 cv
352.766 9.547 353.145 9.797 353.441 10.121 cv
353.738 10.449 353.961 10.852 354.109 11.328 cv
354.254 11.809 354.324 12.355 354.328 12.969 cv
cp
352.309 13.047 mo
352.305 12.711 352.277 12.395 352.227 12.102 cv
352.168 11.816 352.074 11.566 351.949 11.352 cv
351.816 11.141 351.645 10.973 351.434 10.852 cv
351.215 10.734 350.945 10.676 350.617 10.672 cv
350.328 10.676 350.074 10.73 349.855 10.832 cv
349.637 10.941 349.457 11.098 349.316 11.301 cv
349.176 11.508 349.07 11.754 349 12.039 cv
348.93 12.332 348.895 12.66 348.895 13.023 cv
348.895 13.371 348.922 13.687 348.98 13.973 cv
349.035 14.266 349.129 14.516 349.258 14.727 cv
349.383 14.941 349.555 15.105 349.777 15.219 cv
349.992 15.34 350.262 15.398 350.586 15.395 cv
350.879 15.398 351.137 15.344 351.359 15.234 cv
351.574 15.129 351.754 14.977 351.895 14.77 cv
352.035 14.57 352.137 14.324 352.207 14.035 cv
352.27 13.75 352.305 13.422 352.309 13.047 cv
cp
f
360.078 6.914 mo
360.074 7.06598 360.07 7.18701 360.063 7.27698 cv
360.051 7.37097 360.035 7.44098 360.016 7.48798 cv
359.992 7.539 359.969 7.57397 359.945 7.59003 cv
359.918 7.60901 359.891 7.617 359.859 7.617 cv
359.82 7.617 359.777 7.60901 359.738 7.59003 cv
359.691 7.57397 359.637 7.55499 359.574 7.53101 cv
359.504 7.51202 359.43 7.492 359.344 7.47302 cv
359.254 7.45697 359.148 7.44897 359.031 7.44501 cv
358.887 7.44897 358.766 7.46899 358.668 7.51202 cv
358.566 7.55902 358.484 7.62903 358.418 7.72302 cv
358.348 7.82001 358.297 7.94501 358.27 8.09802 cv
358.234 8.25 358.219 8.43701 358.223 8.65997 cv
358.223 9.30103 li
359.492 9.30103 li
359.535 9.30499 359.578 9.31598 359.621 9.34003 cv
359.656 9.367 359.691 9.40997 359.719 9.46899 cv
359.742 9.53101 359.762 9.61298 359.777 9.71503 cv
359.789 9.81598 359.793 9.94501 359.797 10.094 cv
359.793 10.383 359.77 10.586 359.719 10.707 cv
359.664 10.832 359.586 10.895 359.492 10.891 cv
358.223 10.891 li
358.223 16.516 li
358.219 16.57 358.203 16.613 358.176 16.652 cv
358.141 16.691 358.09 16.727 358.02 16.75 cv
357.945 16.777 357.844 16.793 357.715 16.809 cv
357.582 16.82 357.422 16.828 357.238 16.828 cv
357.051 16.828 356.895 16.82 356.77 16.809 cv
356.641 16.793 356.539 16.777 356.465 16.75 cv
356.387 16.727 356.336 16.691 356.309 16.652 cv
356.277 16.613 356.262 16.57 356.266 16.516 cv
356.266 10.891 li
355.395 10.891 li
355.293 10.895 355.219 10.832 355.172 10.707 cv
355.121 10.586 355.094 10.383 355.098 10.094 cv
355.094 9.94501 355.102 9.81598 355.117 9.71503 cv
355.129 9.61298 355.148 9.53101 355.172 9.46899 cv
355.195 9.40997 355.227 9.367 355.266 9.34003 cv
355.305 9.31598 355.348 9.30499 355.402 9.30103 cv
356.266 9.30103 li
356.266 8.71503 li
356.262 8.24597 356.309 7.83197 356.406 7.47302 cv
356.496 7.117 356.645 6.82001 356.848 6.586 cv
357.047 6.35199 357.301 6.17603 357.609 6.05103 cv
357.918 5.93402 358.281 5.87097 358.707 5.87097 cv
358.902 5.87097 359.094 5.89099 359.281 5.922 cv
359.461 5.961 359.605 5.99597 359.711 6.03101 cv
359.813 6.07397 359.883 6.10901 359.922 6.14099 cv
359.957 6.17603 359.988 6.22699 360.012 6.289 cv
360.035 6.35498 360.051 6.43701 360.063 6.539 cv
360.07 6.64099 360.074 6.76599 360.078 6.914 cv
cp
f
366.707 16.5 mo
366.703 16.555 366.688 16.602 366.656 16.641 cv
366.621 16.684 366.563 16.719 366.488 16.742 cv
366.406 16.77 366.305 16.789 366.176 16.805 cv
366.043 16.82 365.875 16.828 365.68 16.828 cv
365.477 16.828 365.313 16.82 365.184 16.805 cv
365.047 16.789 364.941 16.77 364.867 16.742 cv
364.785 16.719 364.73 16.684 364.699 16.641 cv
364.664 16.602 364.645 16.555 364.648 16.5 cv
364.648 6.97699 li
364.645 6.92999 364.664 6.883 364.699 6.836 cv
364.73 6.797 364.785 6.76202 364.871 6.73401 cv
364.949 6.711 365.055 6.69098 365.188 6.672 cv
365.313 6.65997 365.477 6.65198 365.68 6.64801 cv
365.875 6.65198 366.043 6.65997 366.176 6.672 cv
366.305 6.69098 366.406 6.711 366.488 6.73401 cv
366.563 6.76202 366.621 6.797 366.656 6.836 cv
366.688 6.883 366.703 6.92999 366.707 6.97699 cv
cp
f
379.852 16.516 mo
379.848 16.57 379.832 16.613 379.805 16.652 cv
379.77 16.691 379.719 16.727 379.648 16.75 cv
379.574 16.777 379.473 16.793 379.352 16.809 cv
379.227 16.82 379.07 16.828 378.879 16.828 cv
378.68 16.828 378.52 16.82 378.395 16.809 cv
378.27 16.793 378.168 16.777 378.094 16.75 cv
378.016 16.727 377.965 16.691 377.938 16.652 cv
377.91 16.613 377.895 16.57 377.898 16.516 cv
377.898 12.395 li
377.895 12.164 377.875 11.949 377.832 11.754 cv
377.785 11.562 377.715 11.398 377.629 11.262 cv
377.535 11.125 377.422 11.02 377.285 10.941 cv
377.145 10.867 376.98 10.828 376.789 10.828 cv
376.555 10.828 376.316 10.922 376.078 11.102 cv
375.84 11.285 375.582 11.547 375.301 11.895 cv
375.301 16.516 li
375.301 16.57 375.285 16.613 375.254 16.652 cv
375.223 16.691 375.168 16.727 375.094 16.75 cv
375.016 16.777 374.914 16.793 374.793 16.809 cv
374.668 16.82 374.516 16.828 374.328 16.828 cv
374.133 16.828 373.973 16.82 373.852 16.809 cv
373.723 16.793 373.621 16.777 373.551 16.75 cv
373.473 16.727 373.422 16.691 373.391 16.652 cv
373.359 16.613 373.344 16.57 373.344 16.516 cv
373.344 12.395 li
373.344 12.164 373.32 11.949 373.277 11.754 cv
373.234 11.562 373.168 11.398 373.082 11.262 cv
372.988 11.125 372.875 11.02 372.738 10.941 cv
372.594 10.867 372.43 10.828 372.246 10.828 cv
372.004 10.828 371.766 10.922 371.527 11.102 cv
371.289 11.285 371.031 11.547 370.758 11.895 cv
370.758 16.516 li
370.754 16.57 370.738 16.613 370.711 16.652 cv
370.676 16.691 370.621 16.727 370.551 16.75 cv
370.473 16.777 370.375 16.793 370.25 16.809 cv
370.125 16.82 369.965 16.828 369.777 16.828 cv
369.582 16.828 369.426 16.82 369.301 16.809 cv
369.176 16.793 369.074 16.777 369 16.75 cv
368.922 16.727 368.867 16.691 368.84 16.652 cv
368.805 16.613 368.789 16.57 368.793 16.516 cv
368.793 9.56598 li
368.789 9.52002 368.805 9.47302 368.832 9.42999 cv
368.855 9.39502 368.902 9.36298 368.973 9.33197 cv
369.039 9.30902 369.125 9.289 369.234 9.27301 cv
369.34 9.26599 369.473 9.258 369.637 9.25403 cv
369.801 9.258 369.938 9.26599 370.047 9.27301 cv
370.152 9.289 370.238 9.30902 370.301 9.33197 cv
370.359 9.36298 370.402 9.39502 370.43 9.42999 cv
370.453 9.47302 370.465 9.52002 370.469 9.56598 cv
370.469 10.367 li
370.852 9.95697 371.234 9.64502 371.617 9.43402 cv
371.996 9.22699 372.398 9.125 372.816 9.12097 cv
373.102 9.125 373.355 9.15198 373.586 9.211 cv
373.813 9.27301 374.02 9.35901 374.199 9.46899 cv
374.379 9.58197 374.531 9.71899 374.66 9.87097 cv
374.789 10.027 374.898 10.199 374.988 10.391 cv
375.195 10.168 375.398 9.97699 375.602 9.81598 cv
375.797 9.65601 375.996 9.52301 376.191 9.422 cv
376.387 9.32001 376.582 9.24597 376.777 9.19501 cv
376.973 9.14801 377.172 9.125 377.375 9.12097 cv
377.836 9.125 378.223 9.203 378.543 9.35498 cv
378.855 9.51599 379.113 9.72699 379.309 9.992 cv
379.504 10.262 379.641 10.574 379.727 10.93 cv
379.805 11.289 379.848 11.668 379.852 12.066 cv
cp
f
387.648 16.539 mo
387.645 16.617 387.617 16.672 387.57 16.711 cv
387.516 16.754 387.434 16.781 387.324 16.801 cv
387.207 16.816 387.043 16.828 386.828 16.828 cv
386.59 16.828 386.418 16.816 386.316 16.801 cv
386.207 16.781 386.133 16.754 386.094 16.711 cv
386.047 16.672 386.027 16.617 386.027 16.539 cv
386.027 15.988 li
385.738 16.297 385.41 16.535 385.047 16.703 cv
384.68 16.875 384.273 16.957 383.828 16.961 cv
383.457 16.957 383.117 16.91 382.809 16.816 cv
382.5 16.723 382.234 16.582 382.008 16.387 cv
381.781 16.199 381.605 15.965 381.48 15.684 cv
381.355 15.406 381.293 15.078 381.297 14.699 cv
381.293 14.301 381.371 13.949 381.531 13.645 cv
381.688 13.348 381.926 13.102 382.242 12.906 cv
382.555 12.715 382.945 12.57 383.414 12.473 cv
383.883 12.383 384.426 12.336 385.043 12.332 cv
385.723 12.332 li
385.723 11.91 li
385.723 11.695 385.699 11.504 385.656 11.34 cv
385.609 11.18 385.535 11.043 385.438 10.93 cv
385.332 10.824 385.199 10.742 385.031 10.687 cv
384.859 10.637 384.648 10.613 384.406 10.609 cv
384.074 10.613 383.781 10.648 383.527 10.719 cv
383.266 10.793 383.039 10.875 382.844 10.961 cv
382.645 11.055 382.48 11.133 382.352 11.203 cv
382.215 11.277 382.105 11.316 382.027 11.312 cv
381.965 11.316 381.914 11.297 381.875 11.258 cv
381.828 11.223 381.793 11.172 381.766 11.102 cv
381.734 11.039 381.711 10.953 381.699 10.852 cv
381.68 10.754 381.672 10.645 381.676 10.523 cv
381.672 10.363 381.688 10.238 381.715 10.141 cv
381.738 10.051 381.785 9.96503 381.863 9.88702 cv
381.934 9.81201 382.063 9.72998 382.246 9.64099 cv
382.426 9.55103 382.637 9.46503 382.883 9.38702 cv
383.125 9.30902 383.395 9.24597 383.684 9.19501 cv
383.973 9.14801 384.27 9.125 384.578 9.12097 cv
385.121 9.125 385.586 9.17603 385.973 9.28101 cv
386.359 9.39099 386.68 9.55499 386.93 9.77301 cv
387.18 9.992 387.359 10.277 387.477 10.625 cv
387.586 10.977 387.645 11.391 387.648 11.863 cv
cp
385.723 13.562 mo
384.973 13.562 li
384.656 13.566 384.387 13.59 384.164 13.633 cv
383.938 13.684 383.754 13.754 383.617 13.844 cv
383.473 13.941 383.371 14.055 383.309 14.184 cv
383.242 14.32 383.207 14.469 383.211 14.637 cv
383.207 14.93 383.301 15.16 383.488 15.324 cv
383.672 15.492 383.93 15.574 384.258 15.574 cv
384.531 15.574 384.781 15.504 385.016 15.363 cv
385.242 15.223 385.48 15.02 385.723 14.746 cv
cp
f
395.871 10.047 mo
395.867 10.301 395.84 10.484 395.785 10.602 cv
395.727 10.723 395.656 10.781 395.578 10.781 cv
394.758 10.781 li
394.871 10.906 394.953 11.051 395.004 11.207 cv
395.051 11.367 395.074 11.531 395.078 11.699 cv
395.074 12.109 395.008 12.469 394.875 12.781 cv
394.738 13.098 394.543 13.363 394.293 13.574 cv
394.039 13.793 393.738 13.957 393.383 14.066 cv
393.023 14.184 392.625 14.238 392.195 14.234 cv
391.969 14.238 391.758 14.211 391.555 14.152 cv
391.352 14.102 391.195 14.039 391.086 13.961 cv
391.023 14.031 390.965 14.109 390.918 14.203 cv
390.867 14.297 390.844 14.402 390.848 14.512 cv
390.844 14.668 390.91 14.789 391.043 14.883 cv
391.172 14.98 391.359 15.035 391.602 15.043 cv
393.293 15.105 li
393.688 15.121 394.039 15.18 394.348 15.273 cv
394.656 15.375 394.918 15.508 395.129 15.68 cv
395.34 15.855 395.5 16.066 395.609 16.309 cv
395.719 16.555 395.773 16.828 395.777 17.141 cv
395.773 17.477 395.699 17.801 395.551 18.109 cv
395.402 18.41 395.176 18.672 394.875 18.898 cv
394.57 19.117 394.191 19.297 393.738 19.43 cv
393.281 19.559 392.75 19.621 392.148 19.625 cv
391.551 19.621 391.047 19.574 390.629 19.484 cv
390.211 19.387 389.867 19.258 389.602 19.094 cv
389.332 18.926 389.137 18.727 389.02 18.5 cv
388.895 18.266 388.836 18.012 388.836 17.738 cv
388.836 17.566 388.855 17.406 388.902 17.25 cv
388.941 17.094 389.008 16.941 389.098 16.801 cv
389.18 16.656 389.285 16.523 389.41 16.391 cv
389.535 16.262 389.676 16.137 389.84 16.016 cv
389.613 15.902 389.441 15.742 389.32 15.531 cv
389.199 15.328 389.141 15.102 389.141 14.855 cv
389.141 14.555 389.207 14.277 389.348 14.02 cv
389.484 13.77 389.668 13.539 389.895 13.336 cv
389.711 13.156 389.566 12.941 389.457 12.684 cv
389.348 12.434 389.293 12.113 389.297 11.73 cv
389.293 11.328 389.363 10.969 389.508 10.645 cv
389.648 10.328 389.848 10.059 390.105 9.836 cv
390.359 9.617 390.664 9.44501 391.016 9.328 cv
391.367 9.211 391.758 9.15198 392.188 9.15198 cv
392.406 9.15198 392.613 9.16803 392.813 9.19098 cv
393.012 9.22302 393.199 9.258 393.371 9.30103 cv
395.578 9.30103 li
395.66 9.30499 395.73 9.36298 395.789 9.47302 cv
395.84 9.59003 395.867 9.78101 395.871 10.047 cv
cp
393.355 11.691 mo
393.352 11.32 393.25 11.031 393.043 10.82 cv
392.832 10.617 392.539 10.512 392.164 10.508 cv
391.969 10.512 391.797 10.543 391.656 10.605 cv
391.508 10.672 391.387 10.762 391.293 10.871 cv
391.191 10.984 391.121 11.113 391.078 11.262 cv
391.027 11.41 391.004 11.566 391.008 11.723 cv
391.004 12.082 391.109 12.359 391.32 12.562 cv
391.527 12.77 391.816 12.875 392.188 12.871 cv
392.383 12.875 392.551 12.844 392.699 12.777 cv
392.84 12.719 392.961 12.633 393.063 12.52 cv
393.156 12.414 393.23 12.285 393.281 12.141 cv
393.328 12 393.352 11.852 393.355 11.691 cv
cp
393.816 17.242 mo
393.816 17.004 393.723 16.828 393.535 16.703 cv
393.348 16.582 393.09 16.512 392.762 16.5 cv
391.367 16.461 li
391.23 16.562 391.121 16.656 391.043 16.746 cv
390.961 16.836 390.898 16.922 390.852 17.008 cv
390.801 17.09 390.766 17.172 390.754 17.25 cv
390.734 17.328 390.727 17.406 390.73 17.492 cv
390.727 17.746 390.859 17.945 391.121 18.082 cv
391.383 18.215 391.754 18.281 392.234 18.285 cv
392.527 18.281 392.773 18.25 392.98 18.195 cv
393.18 18.133 393.344 18.055 393.473 17.957 cv
393.594 17.855 393.684 17.746 393.738 17.625 cv
393.789 17.504 393.816 17.375 393.816 17.242 cv
cp
f
403.496 12.84 mo
403.492 13.078 403.441 13.254 403.336 13.367 cv
403.227 13.484 403.078 13.543 402.898 13.539 cv
398.664 13.539 li
398.66 13.84 398.695 14.109 398.77 14.348 cv
398.836 14.59 398.949 14.793 399.105 14.961 cv
399.258 15.133 399.453 15.262 399.695 15.348 cv
399.934 15.437 400.223 15.48 400.566 15.48 cv
400.906 15.48 401.207 15.457 401.469 15.406 cv
401.727 15.359 401.953 15.305 402.145 15.242 cv
402.332 15.184 402.488 15.129 402.617 15.078 cv
402.738 15.031 402.84 15.008 402.922 15.004 cv
402.965 15.008 403.004 15.016 403.039 15.031 cv
403.066 15.051 403.094 15.082 403.113 15.129 cv
403.133 15.176 403.145 15.242 403.156 15.328 cv
403.16 15.414 403.164 15.523 403.168 15.652 cv
403.164 15.77 403.164 15.867 403.16 15.945 cv
403.152 16.027 403.145 16.094 403.137 16.148 cv
403.125 16.207 403.109 16.258 403.09 16.293 cv
403.07 16.336 403.043 16.371 403.012 16.406 cv
402.977 16.445 402.883 16.496 402.734 16.555 cv
402.578 16.621 402.387 16.684 402.156 16.738 cv
401.918 16.801 401.648 16.848 401.352 16.895 cv
401.047 16.934 400.727 16.957 400.387 16.961 cv
399.766 16.957 399.223 16.883 398.762 16.727 cv
398.293 16.574 397.906 16.336 397.598 16.02 cv
397.281 15.703 397.047 15.305 396.898 14.82 cv
396.742 14.34 396.668 13.773 396.672 13.117 cv
396.668 12.504 396.746 11.945 396.91 11.449 cv
397.066 10.953 397.301 10.535 397.613 10.187 cv
397.918 9.84399 398.293 9.578 398.73 9.39502 cv
399.168 9.21503 399.66 9.125 400.215 9.12097 cv
400.793 9.125 401.293 9.211 401.707 9.37903 cv
402.121 9.55499 402.457 9.79303 402.723 10.094 cv
402.984 10.398 403.18 10.758 403.309 11.172 cv
403.43 11.59 403.492 12.039 403.496 12.527 cv
cp
401.594 12.277 mo
401.605 11.727 401.496 11.293 401.262 10.98 cv
401.027 10.668 400.66 10.512 400.168 10.508 cv
399.918 10.512 399.703 10.559 399.52 10.648 cv
399.332 10.746 399.18 10.871 399.059 11.027 cv
398.934 11.187 398.84 11.375 398.777 11.59 cv
398.711 11.805 398.672 12.035 398.664 12.277 cv
cp
f
409.996 14.551 mo
409.992 14.949 409.918 15.297 409.773 15.598 cv
409.625 15.898 409.418 16.152 409.148 16.352 cv
408.875 16.559 408.555 16.707 408.188 16.809 cv
407.82 16.906 407.418 16.957 406.988 16.961 cv
406.723 16.957 406.477 16.937 406.242 16.902 cv
406.008 16.859 405.797 16.812 405.609 16.754 cv
405.422 16.695 405.266 16.633 405.141 16.57 cv
405.016 16.508 404.922 16.449 404.867 16.395 cv
404.809 16.34 404.766 16.258 404.738 16.141 cv
404.703 16.027 404.688 15.852 404.691 15.621 cv
404.688 15.473 404.695 15.352 404.707 15.258 cv
404.715 15.168 404.73 15.098 404.754 15.039 cv
404.773 14.988 404.797 14.949 404.832 14.93 cv
404.859 14.914 404.898 14.906 404.945 14.902 cv
405 14.906 405.086 14.937 405.199 15 cv
405.309 15.066 405.445 15.141 405.617 15.215 cv
405.781 15.297 405.977 15.367 406.195 15.434 cv
406.414 15.504 406.664 15.539 406.949 15.535 cv
407.125 15.539 407.281 15.52 407.422 15.48 cv
407.555 15.445 407.676 15.395 407.781 15.324 cv
407.879 15.258 407.953 15.172 408.008 15.066 cv
408.055 14.965 408.082 14.844 408.086 14.707 cv
408.082 14.551 408.035 14.418 407.941 14.309 cv
407.848 14.199 407.719 14.102 407.563 14.016 cv
407.398 13.934 407.219 13.855 407.023 13.781 cv
406.82 13.711 406.617 13.633 406.406 13.539 cv
406.195 13.453 405.988 13.352 405.793 13.234 cv
405.59 13.125 405.41 12.984 405.254 12.816 cv
405.09 12.652 404.965 12.453 404.871 12.215 cv
404.777 11.984 404.73 11.703 404.73 11.371 cv
404.73 11.043 404.793 10.738 404.922 10.457 cv
405.051 10.184 405.238 9.94501 405.484 9.74597 cv
405.727 9.55103 406.023 9.39801 406.375 9.28497 cv
406.723 9.17999 407.117 9.125 407.559 9.12097 cv
407.773 9.125 407.984 9.14099 408.191 9.16803 cv
408.395 9.203 408.582 9.242 408.75 9.28497 cv
408.914 9.336 409.055 9.38702 409.172 9.43701 cv
409.285 9.49597 409.367 9.54303 409.418 9.578 cv
409.465 9.62097 409.5 9.65997 409.523 9.69501 cv
409.543 9.73798 409.555 9.78497 409.566 9.836 cv
409.574 9.89099 409.586 9.95697 409.594 10.035 cv
409.602 10.121 409.605 10.219 409.605 10.336 cv
409.605 10.477 409.602 10.594 409.594 10.68 cv
409.586 10.773 409.57 10.844 409.555 10.891 cv
409.535 10.945 409.512 10.98 409.484 10.996 cv
409.449 11.02 409.414 11.027 409.375 11.023 cv
409.324 11.027 409.25 11 409.156 10.941 cv
409.055 10.891 408.934 10.832 408.785 10.766 cv
408.637 10.707 408.465 10.648 408.27 10.59 cv
408.074 10.539 407.852 10.512 407.605 10.508 cv
407.426 10.512 407.273 10.531 407.145 10.562 cv
407.012 10.602 406.902 10.652 406.824 10.719 cv
406.738 10.789 406.676 10.867 406.637 10.957 cv
406.59 11.051 406.57 11.148 406.574 11.25 cv
406.57 11.41 406.621 11.547 406.723 11.652 cv
406.82 11.766 406.949 11.859 407.113 11.941 cv
407.273 12.027 407.457 12.105 407.664 12.176 cv
407.867 12.25 408.074 12.332 408.285 12.414 cv
408.492 12.504 408.699 12.602 408.91 12.715 cv
409.113 12.828 409.297 12.969 409.457 13.133 cv
409.617 13.301 409.746 13.5 409.848 13.73 cv
409.941 13.965 409.992 14.238 409.996 14.551 cv
cp
f
418.836 12.863 mo
418.832 13.164 418.805 13.375 418.75 13.492 cv
418.691 13.617 418.602 13.676 418.477 13.672 cv
415.234 13.672 li
415.105 13.676 415.012 13.613 414.957 13.488 cv
414.895 13.367 414.867 13.16 414.871 12.863 cv
414.867 12.574 414.895 12.367 414.957 12.246 cv
415.012 12.129 415.105 12.07 415.234 12.066 cv
418.477 12.066 li
418.539 12.07 418.59 12.082 418.637 12.105 cv
418.676 12.133 418.715 12.18 418.75 12.238 cv
418.777 12.305 418.801 12.387 418.816 12.488 cv
418.828 12.594 418.832 12.719 418.836 12.863 cv
cp
f
429.449 15.926 mo
429.445 16.082 429.441 16.215 429.43 16.316 cv
429.414 16.426 429.395 16.512 429.371 16.582 cv
429.344 16.652 429.309 16.703 429.273 16.734 cv
429.23 16.766 429.188 16.781 429.137 16.781 cv
424.516 16.781 li
424.34 16.781 424.195 16.73 424.082 16.629 cv
423.961 16.527 423.902 16.363 423.906 16.133 cv
423.906 6.97699 li
423.902 6.92999 423.922 6.883 423.957 6.836 cv
423.988 6.797 424.043 6.76202 424.125 6.73401 cv
424.199 6.711 424.305 6.69098 424.441 6.672 cv
424.57 6.65997 424.734 6.65198 424.938 6.64801 cv
425.133 6.65198 425.301 6.65997 425.434 6.672 cv
425.563 6.69098 425.664 6.711 425.746 6.73401 cv
425.82 6.76202 425.879 6.797 425.914 6.836 cv
425.945 6.883 425.961 6.92999 425.965 6.97699 cv
425.965 15.09 li
429.137 15.09 li
429.188 15.094 429.23 15.109 429.273 15.133 cv
429.309 15.164 429.344 15.211 429.371 15.273 cv
429.395 15.344 429.414 15.43 429.43 15.531 cv
429.441 15.641 429.445 15.77 429.449 15.926 cv
cp
f
437.574 12.969 mo
437.57 13.566 437.492 14.109 437.34 14.594 cv
437.18 15.086 436.945 15.504 436.629 15.855 cv
436.313 16.207 435.914 16.48 435.438 16.672 cv
434.957 16.863 434.398 16.957 433.762 16.961 cv
433.141 16.957 432.602 16.875 432.148 16.703 cv
431.688 16.535 431.309 16.285 431.012 15.957 cv
430.707 15.633 430.484 15.23 430.34 14.75 cv
430.195 14.273 430.125 13.727 430.125 13.109 cv
430.125 12.52 430.203 11.98 430.359 11.488 cv
430.516 11 430.754 10.578 431.074 10.227 cv
431.391 9.87903 431.785 9.60498 432.262 9.40997 cv
432.734 9.21899 433.293 9.125 433.934 9.12097 cv
434.559 9.125 435.098 9.20697 435.555 9.375 cv
436.012 9.547 436.391 9.797 436.688 10.121 cv
436.984 10.449 437.207 10.852 437.355 11.328 cv
437.5 11.809 437.57 12.355 437.574 12.969 cv
cp
435.555 13.047 mo
435.551 12.711 435.523 12.395 435.473 12.102 cv
435.414 11.816 435.32 11.566 435.195 11.352 cv
435.063 11.141 434.891 10.973 434.68 10.852 cv
434.461 10.734 434.191 10.676 433.863 10.672 cv
433.574 10.676 433.32 10.73 433.102 10.832 cv
432.883 10.941 432.703 11.098 432.563 11.301 cv
432.422 11.508 432.316 11.754 432.246 12.039 cv
432.176 12.332 432.141 12.66 432.141 13.023 cv
432.141 13.371 432.168 13.687 432.227 13.973 cv
432.281 14.266 432.375 14.516 432.504 14.727 cv
432.629 14.941 432.801 15.105 433.023 15.219 cv
433.238 15.34 433.508 15.398 433.832 15.395 cv
434.125 15.398 434.383 15.344 434.605 15.234 cv
434.82 15.129 435 14.977 435.141 14.77 cv
435.281 14.57 435.383 14.324 435.453 14.035 cv
435.516 13.75 435.551 13.422 435.555 13.047 cv
cp
f
444.391 15.41 mo
444.387 15.547 444.383 15.66 444.379 15.75 cv
444.367 15.844 444.359 15.922 444.348 15.98 cv
444.332 16.043 444.316 16.094 444.301 16.129 cv
444.281 16.172 444.238 16.219 444.18 16.277 cv
444.113 16.34 444.008 16.414 443.859 16.496 cv
443.707 16.586 443.535 16.664 443.344 16.727 cv
443.152 16.797 442.945 16.848 442.719 16.891 cv
442.492 16.93 442.258 16.949 442.023 16.953 cv
441.484 16.949 441.012 16.871 440.598 16.703 cv
440.184 16.539 439.836 16.293 439.559 15.969 cv
439.273 15.645 439.063 15.25 438.922 14.781 cv
438.781 14.316 438.711 13.777 438.711 13.172 cv
438.711 12.477 438.797 11.879 438.969 11.371 cv
439.141 10.867 439.383 10.445 439.699 10.113 cv
440.008 9.78101 440.375 9.53497 440.805 9.37097 cv
441.227 9.211 441.695 9.12903 442.207 9.12903 cv
442.414 9.12903 442.617 9.14801 442.82 9.18402 cv
443.016 9.22302 443.203 9.27301 443.379 9.33197 cv
443.551 9.39801 443.707 9.46899 443.848 9.54303 cv
443.984 9.625 444.082 9.69098 444.141 9.74597 cv
444.195 9.80499 444.234 9.85199 444.262 9.88702 cv
444.281 9.92999 444.301 9.97998 444.316 10.039 cv
444.328 10.105 444.34 10.184 444.348 10.27 cv
444.355 10.363 444.359 10.473 444.359 10.602 cv
444.359 10.906 444.332 11.117 444.281 11.238 cv
444.227 11.359 444.16 11.422 444.078 11.418 cv
443.988 11.422 443.895 11.387 443.797 11.312 cv
443.695 11.242 443.578 11.16 443.445 11.07 cv
443.313 10.984 443.152 10.902 442.965 10.828 cv
442.777 10.758 442.551 10.723 442.293 10.719 cv
441.781 10.723 441.395 10.918 441.125 11.309 cv
440.852 11.699 440.715 12.273 440.719 13.031 cv
440.715 13.406 440.75 13.738 440.82 14.023 cv
440.887 14.309 440.984 14.547 441.121 14.738 cv
441.25 14.934 441.418 15.078 441.621 15.172 cv
441.82 15.27 442.051 15.316 442.316 15.316 cv
442.582 15.316 442.816 15.277 443.016 15.195 cv
443.207 15.117 443.375 15.027 443.523 14.926 cv
443.664 14.828 443.789 14.738 443.891 14.656 cv
443.988 14.578 444.07 14.539 444.141 14.535 cv
444.184 14.539 444.223 14.551 444.258 14.574 cv
444.285 14.602 444.309 14.648 444.332 14.719 cv
444.348 14.789 444.363 14.879 444.375 14.988 cv
444.383 15.098 444.387 15.238 444.391 15.41 cv
cp
f
451.676 16.539 mo
451.672 16.617 451.645 16.672 451.598 16.711 cv
451.543 16.754 451.461 16.781 451.352 16.801 cv
451.234 16.816 451.07 16.828 450.855 16.828 cv
450.617 16.828 450.445 16.816 450.344 16.801 cv
450.234 16.781 450.16 16.754 450.121 16.711 cv
450.074 16.672 450.055 16.617 450.055 16.539 cv
450.055 15.988 li
449.766 16.297 449.438 16.535 449.074 16.703 cv
448.707 16.875 448.301 16.957 447.855 16.961 cv
447.484 16.957 447.145 16.91 446.836 16.816 cv
446.527 16.723 446.262 16.582 446.035 16.387 cv
445.809 16.199 445.633 15.965 445.508 15.684 cv
445.383 15.406 445.32 15.078 445.324 14.699 cv
445.32 14.301 445.398 13.949 445.559 13.645 cv
445.715 13.348 445.953 13.102 446.27 12.906 cv
446.582 12.715 446.973 12.57 447.441 12.473 cv
447.91 12.383 448.453 12.336 449.07 12.332 cv
449.75 12.332 li
449.75 11.91 li
449.75 11.695 449.727 11.504 449.684 11.34 cv
449.637 11.18 449.563 11.043 449.465 10.93 cv
449.359 10.824 449.227 10.742 449.059 10.687 cv
448.887 10.637 448.676 10.613 448.434 10.609 cv
448.102 10.613 447.809 10.648 447.555 10.719 cv
447.293 10.793 447.066 10.875 446.871 10.961 cv
446.672 11.055 446.508 11.133 446.379 11.203 cv
446.242 11.277 446.133 11.316 446.055 11.312 cv
445.992 11.316 445.941 11.297 445.902 11.258 cv
445.855 11.223 445.82 11.172 445.793 11.102 cv
445.762 11.039 445.738 10.953 445.727 10.852 cv
445.707 10.754 445.699 10.645 445.703 10.523 cv
445.699 10.363 445.715 10.238 445.742 10.141 cv
445.766 10.051 445.813 9.96503 445.891 9.88702 cv
445.961 9.81201 446.09 9.72998 446.273 9.64099 cv
446.453 9.55103 446.664 9.46503 446.91 9.38702 cv
447.152 9.30902 447.422 9.24597 447.711 9.19501 cv
448 9.14801 448.297 9.125 448.605 9.12097 cv
449.148 9.125 449.613 9.17603 450 9.28101 cv
450.387 9.39099 450.707 9.55499 450.957 9.77301 cv
451.207 9.992 451.387 10.277 451.504 10.625 cv
451.613 10.977 451.672 11.391 451.676 11.863 cv
cp
449.75 13.562 mo
449 13.562 li
448.684 13.566 448.414 13.59 448.191 13.633 cv
447.965 13.684 447.781 13.754 447.645 13.844 cv
447.5 13.941 447.398 14.055 447.336 14.184 cv
447.27 14.32 447.234 14.469 447.238 14.637 cv
447.234 14.93 447.328 15.16 447.516 15.324 cv
447.699 15.492 447.957 15.574 448.285 15.574 cv
448.559 15.574 448.809 15.504 449.043 15.363 cv
449.27 15.223 449.508 15.02 449.75 14.746 cv
cp
f
455.602 16.516 mo
455.598 16.57 455.582 16.613 455.555 16.652 cv
455.52 16.691 455.465 16.727 455.395 16.75 cv
455.316 16.777 455.219 16.793 455.094 16.809 cv
454.969 16.82 454.809 16.828 454.621 16.828 cv
454.426 16.828 454.27 16.82 454.145 16.809 cv
454.02 16.793 453.918 16.777 453.844 16.75 cv
453.766 16.727 453.711 16.691 453.684 16.652 cv
453.648 16.613 453.633 16.57 453.637 16.516 cv
453.637 6.27002 li
453.633 6.21899 453.648 6.172 453.684 6.12903 cv
453.711 6.09003 453.766 6.05499 453.844 6.02301 cv
453.918 5.99597 454.02 5.97699 454.145 5.95697 cv
454.27 5.94501 454.426 5.93701 454.621 5.93402 cv
454.809 5.93701 454.969 5.94501 455.094 5.95697 cv
455.219 5.97699 455.316 5.99597 455.395 6.02301 cv
455.465 6.05499 455.52 6.09003 455.555 6.12903 cv
455.582 6.172 455.598 6.21899 455.602 6.27002 cv
cp
f
473.086 16.5 mo
473.082 16.555 473.07 16.602 473.043 16.641 cv
473.012 16.684 472.957 16.719 472.887 16.742 cv
472.809 16.77 472.711 16.789 472.586 16.805 cv
472.461 16.82 472.301 16.828 472.109 16.828 cv
471.922 16.828 471.766 16.82 471.645 16.805 cv
471.516 16.789 471.418 16.77 471.348 16.742 cv
471.273 16.719 471.223 16.684 471.191 16.641 cv
471.16 16.602 471.145 16.555 471.145 16.5 cv
471.145 8.29303 li
471.129 8.29303 li
468.207 16.492 li
468.184 16.562 468.148 16.617 468.105 16.66 cv
468.055 16.707 467.992 16.742 467.914 16.766 cv
467.832 16.793 467.73 16.809 467.605 16.816 cv
467.48 16.824 467.328 16.828 467.156 16.828 cv
466.977 16.828 466.828 16.82 466.703 16.809 cv
466.578 16.793 466.473 16.773 466.395 16.746 cv
466.309 16.719 466.246 16.684 466.203 16.641 cv
466.152 16.602 466.121 16.555 466.109 16.492 cv
463.289 8.29303 li
463.273 8.29303 li
463.273 16.5 li
463.27 16.555 463.254 16.602 463.23 16.641 cv
463.199 16.684 463.148 16.719 463.07 16.742 cv
462.992 16.77 462.891 16.789 462.77 16.805 cv
462.645 16.82 462.488 16.828 462.301 16.828 cv
462.109 16.828 461.953 16.82 461.832 16.805 cv
461.703 16.789 461.602 16.77 461.531 16.742 cv
461.453 16.719 461.402 16.684 461.375 16.641 cv
461.344 16.602 461.328 16.555 461.332 16.5 cv
461.332 7.51599 li
461.328 7.25403 461.398 7.05103 461.543 6.90601 cv
461.68 6.77002 461.867 6.69897 462.105 6.69501 cv
463.445 6.69501 li
463.684 6.69897 463.887 6.71899 464.059 6.75403 cv
464.227 6.797 464.375 6.85901 464.504 6.94897 cv
464.625 7.04303 464.73 7.164 464.816 7.30902 cv
464.898 7.461 464.969 7.64502 465.035 7.85901 cv
467.219 13.867 li
467.25 13.867 li
469.508 7.875 li
469.574 7.65601 469.648 7.47302 469.73 7.32001 cv
469.809 7.172 469.902 7.05103 470.012 6.953 cv
470.117 6.86298 470.242 6.797 470.387 6.75403 cv
470.531 6.71899 470.699 6.69897 470.895 6.69501 cv
472.273 6.69501 li
472.41 6.69897 472.531 6.71503 472.637 6.75 cv
472.734 6.789 472.816 6.84399 472.887 6.90997 cv
472.949 6.98401 473 7.07001 473.035 7.16803 cv
473.066 7.27301 473.082 7.39099 473.086 7.51599 cv
cp
f
482.195 12.969 mo
482.191 13.566 482.113 14.109 481.961 14.594 cv
481.801 15.086 481.566 15.504 481.25 15.855 cv
480.934 16.207 480.535 16.48 480.059 16.672 cv
479.578 16.863 479.02 16.957 478.383 16.961 cv
477.762 16.957 477.223 16.875 476.77 16.703 cv
476.309 16.535 475.93 16.285 475.633 15.957 cv
475.328 15.633 475.105 15.23 474.961 14.75 cv
474.816 14.273 474.746 13.727 474.746 13.109 cv
474.746 12.52 474.824 11.98 474.98 11.488 cv
475.137 11 475.375 10.578 475.695 10.227 cv
476.012 9.87903 476.406 9.60498 476.883 9.40997 cv
477.355 9.21899 477.914 9.125 478.555 9.12097 cv
479.18 9.125 479.719 9.20697 480.176 9.375 cv
480.633 9.547 481.012 9.797 481.309 10.121 cv
481.605 10.449 481.828 10.852 481.977 11.328 cv
482.121 11.809 482.191 12.355 482.195 12.969 cv
cp
480.176 13.047 mo
480.172 12.711 480.145 12.395 480.094 12.102 cv
480.035 11.816 479.941 11.566 479.816 11.352 cv
479.684 11.141 479.512 10.973 479.301 10.852 cv
479.082 10.734 478.813 10.676 478.484 10.672 cv
478.195 10.676 477.941 10.73 477.723 10.832 cv
477.504 10.941 477.324 11.098 477.184 11.301 cv
477.043 11.508 476.938 11.754 476.867 12.039 cv
476.797 12.332 476.762 12.66 476.762 13.023 cv
476.762 13.371 476.789 13.687 476.848 13.973 cv
476.902 14.266 476.996 14.516 477.125 14.727 cv
477.25 14.941 477.422 15.105 477.645 15.219 cv
477.859 15.34 478.129 15.398 478.453 15.395 cv
478.746 15.398 479.004 15.344 479.227 15.234 cv
479.441 15.129 479.621 14.977 479.762 14.77 cv
479.902 14.57 480.004 14.324 480.074 14.035 cv
480.137 13.75 480.172 13.422 480.176 13.047 cv
cp
f
490.348 16.516 mo
490.344 16.578 490.332 16.625 490.309 16.66 cv
490.281 16.703 490.234 16.734 490.176 16.758 cv
490.109 16.781 490.027 16.797 489.922 16.812 cv
489.816 16.82 489.684 16.828 489.531 16.828 cv
489.359 16.828 489.227 16.82 489.125 16.812 cv
489.02 16.797 488.934 16.781 488.871 16.758 cv
488.805 16.734 488.758 16.703 488.73 16.66 cv
488.699 16.625 488.684 16.578 488.688 16.516 cv
488.688 15.746 li
488.328 16.133 487.953 16.43 487.563 16.641 cv
487.164 16.852 486.73 16.957 486.258 16.961 cv
485.723 16.957 485.273 16.855 484.91 16.652 cv
484.543 16.449 484.246 16.176 484.016 15.824 cv
483.781 15.48 483.613 15.074 483.512 14.605 cv
483.41 14.145 483.359 13.652 483.359 13.133 cv
483.359 12.52 483.422 11.965 483.555 11.469 cv
483.684 10.977 483.879 10.555 484.137 10.207 cv
484.391 9.85901 484.707 9.59399 485.086 9.40198 cv
485.465 9.21899 485.902 9.125 486.398 9.12097 cv
486.785 9.125 487.137 9.203 487.457 9.35901 cv
487.77 9.52002 488.086 9.75 488.398 10.055 cv
488.398 6.29303 li
488.398 6.242 488.41 6.19501 488.441 6.15198 cv
488.465 6.11298 488.52 6.078 488.598 6.047 cv
488.672 6.02002 488.77 6 488.898 5.97998 cv
489.02 5.96899 489.18 5.961 489.375 5.95697 cv
489.566 5.961 489.723 5.96899 489.848 5.97998 cv
489.969 6 490.07 6.02002 490.145 6.047 cv
490.215 6.078 490.266 6.11298 490.301 6.15198 cv
490.328 6.19501 490.344 6.242 490.348 6.29303 cv
cp
488.398 11.871 mo
488.117 11.52 487.848 11.25 487.594 11.062 cv
487.332 10.875 487.063 10.781 486.785 10.781 cv
486.531 10.781 486.313 10.848 486.129 10.973 cv
485.941 11.105 485.793 11.273 485.684 11.484 cv
485.57 11.695 485.488 11.934 485.434 12.195 cv
485.379 12.461 485.352 12.73 485.352 13 cv
485.352 13.297 485.375 13.578 485.422 13.852 cv
485.469 14.129 485.543 14.375 485.652 14.59 cv
485.754 14.805 485.898 14.977 486.078 15.105 cv
486.254 15.238 486.477 15.305 486.746 15.301 cv
486.879 15.305 487.008 15.285 487.141 15.242 cv
487.266 15.207 487.398 15.145 487.531 15.051 cv
487.664 14.965 487.801 14.848 487.941 14.703 cv
488.082 14.562 488.234 14.387 488.398 14.18 cv
cp
f
498.746 12.84 mo
498.742 13.078 498.691 13.254 498.586 13.367 cv
498.477 13.484 498.328 13.543 498.148 13.539 cv
493.914 13.539 li
493.91 13.84 493.945 14.109 494.02 14.348 cv
494.086 14.59 494.199 14.793 494.355 14.961 cv
494.508 15.133 494.703 15.262 494.945 15.348 cv
495.184 15.437 495.473 15.48 495.816 15.48 cv
496.156 15.48 496.457 15.457 496.719 15.406 cv
496.977 15.359 497.203 15.305 497.395 15.242 cv
497.582 15.184 497.738 15.129 497.867 15.078 cv
497.988 15.031 498.09 15.008 498.172 15.004 cv
498.215 15.008 498.254 15.016 498.289 15.031 cv
498.316 15.051 498.344 15.082 498.363 15.129 cv
498.383 15.176 498.395 15.242 498.406 15.328 cv
498.41 15.414 498.414 15.523 498.418 15.652 cv
498.414 15.77 498.414 15.867 498.41 15.945 cv
498.402 16.027 498.395 16.094 498.387 16.148 cv
498.375 16.207 498.359 16.258 498.34 16.293 cv
498.32 16.336 498.293 16.371 498.262 16.406 cv
498.227 16.445 498.133 16.496 497.984 16.555 cv
497.828 16.621 497.637 16.684 497.406 16.738 cv
497.168 16.801 496.898 16.848 496.602 16.895 cv
496.297 16.934 495.977 16.957 495.637 16.961 cv
495.016 16.957 494.473 16.883 494.012 16.727 cv
493.543 16.574 493.156 16.336 492.848 16.02 cv
492.531 15.703 492.297 15.305 492.148 14.82 cv
491.992 14.34 491.918 13.773 491.922 13.117 cv
491.918 12.504 491.996 11.945 492.16 11.449 cv
492.316 10.953 492.551 10.535 492.863 10.187 cv
493.168 9.84399 493.543 9.578 493.98 9.39502 cv
494.418 9.21503 494.91 9.125 495.465 9.12097 cv
496.043 9.125 496.543 9.211 496.957 9.37903 cv
497.371 9.55499 497.707 9.79303 497.973 10.094 cv
498.234 10.398 498.43 10.758 498.559 11.172 cv
498.68 11.59 498.742 12.039 498.746 12.527 cv
cp
496.844 12.277 mo
496.855 11.727 496.746 11.293 496.512 10.98 cv
496.277 10.668 495.91 10.512 495.418 10.508 cv
495.168 10.512 494.953 10.559 494.77 10.648 cv
494.582 10.746 494.43 10.871 494.309 11.027 cv
494.184 11.187 494.09 11.375 494.027 11.59 cv
493.961 11.805 493.922 12.035 493.914 12.277 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
