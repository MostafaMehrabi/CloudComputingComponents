%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ScalingsOfPreparationTimes-Local.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 3:58:48 p.m.
%%BoundingBox: 0 0 609 560
%%HiResBoundingBox: 0 0 608.6401 559.2001
%%CropBox: 0 0 608.6401 559.2001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -559.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 559.2 li
608.64 559.2 li
608.64 0 li
cp
clp
gsave
0 559.2 mo
609 559.2 li
609 -.799988 li
0 -.799988 li
cp
clp
0 0 mo
608.641 0 li
608.641 559.199 li
0 559.199 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.32 490.199 mo
593.762 490.199 li
31.32 469.199 mo
593.762 469.199 li
31.32 448.199 mo
593.762 448.199 li
31.32 427.199 mo
593.762 427.199 li
31.32 406.199 mo
593.762 406.199 li
31.32 385.199 mo
593.762 385.199 li
31.32 364.32 mo
593.762 364.32 li
31.32 343.32 mo
593.762 343.32 li
31.32 322.32 mo
593.762 322.32 li
31.32 301.32 mo
593.762 301.32 li
31.32 280.32 mo
593.762 280.32 li
31.32 259.32 mo
593.762 259.32 li
31.32 238.32 mo
593.762 238.32 li
31.32 217.32 mo
593.762 217.32 li
31.32 196.32 mo
593.762 196.32 li
31.32 175.441 mo
593.762 175.441 li
31.32 154.441 mo
593.762 154.441 li
31.32 133.441 mo
593.762 133.441 li
31.32 112.441 mo
593.762 112.441 li
31.32 91.441 mo
593.762 91.441 li
31.32 70.441 mo
593.762 70.441 li
31.32 49.441 mo
593.762 49.441 li
31.32 28.441 mo
593.762 28.441 li
.326574 .281529 .277562 0 cmyk
@
66.48 28.441 mo
66.48 511.199 li
136.801 28.441 mo
136.801 511.199 li
207 28.441 mo
207 511.199 li
277.32 28.441 mo
277.32 511.199 li
347.641 28.441 mo
347.641 511.199 li
417.961 28.441 mo
417.961 511.199 li
488.281 28.441 mo
488.281 511.199 li
558.602 28.441 mo
558.602 511.199 li
.175235 .144778 .143648 0 cmyk
@
31.32 28.441 mo
31.32 511.199 li
101.641 28.441 mo
101.641 511.199 li
171.961 28.441 mo
171.961 511.199 li
242.16 28.441 mo
242.16 511.199 li
312.48 28.441 mo
312.48 511.199 li
382.801 28.441 mo
382.801 511.199 li
453.121 28.441 mo
453.121 511.199 li
523.441 28.441 mo
523.441 511.199 li
593.762 28.441 mo
593.762 511.199 li
.326574 .281529 .277562 0 cmyk
@
11.16 501.84 mo
18.238 501.84 li
18.238 519 li
11.16 519 li
cp
0 0 0 0 cmyk
ef
11.16 480.84 mo
18.238 480.84 li
18.238 498 li
11.16 498 li
cp
ef
11.16 459.84 mo
18.238 459.84 li
18.238 477 li
11.16 477 li
cp
ef
11.16 438.961 mo
18.238 438.961 li
18.238 456 li
11.16 456 li
cp
ef
11.16 417.961 mo
18.238 417.961 li
18.238 435 li
11.16 435 li
cp
ef
11.16 396.961 mo
18.238 396.961 li
18.238 414 li
11.16 414 li
cp
ef
11.16 375.961 mo
18.238 375.961 li
18.238 393 li
11.16 393 li
cp
ef
11.16 354.961 mo
18.238 354.961 li
18.238 372 li
11.16 372 li
cp
ef
11.16 333.961 mo
18.238 333.961 li
18.238 351 li
11.16 351 li
cp
ef
4.078 312.961 mo
18.238 312.961 li
18.238 330.121 li
4.078 330.121 li
cp
ef
4.078 291.961 mo
18.238 291.961 li
18.238 309.121 li
4.078 309.121 li
cp
ef
4.078 270.961 mo
18.238 270.961 li
18.238 288.121 li
4.078 288.121 li
cp
ef
4.078 249.961 mo
18.238 249.961 li
18.238 267.121 li
4.078 267.121 li
cp
ef
4.078 229.078 mo
18.238 229.078 li
18.238 246.121 li
4.078 246.121 li
cp
ef
4.078 208.078 mo
18.238 208.078 li
18.238 225.121 li
4.078 225.121 li
cp
ef
4.078 187.078 mo
18.238 187.078 li
18.238 204.121 li
4.078 204.121 li
cp
ef
4.078 166.078 mo
18.238 166.078 li
18.238 183.121 li
4.078 183.121 li
cp
ef
4.078 145.078 mo
18.238 145.078 li
18.238 162.121 li
4.078 162.121 li
cp
ef
4.078 124.078 mo
18.238 124.078 li
18.238 141.121 li
4.078 141.121 li
cp
ef
4.078 103.078 mo
18.238 103.078 li
18.238 120.238 li
4.078 120.238 li
cp
ef
4.078 82.078 mo
18.238 82.078 li
18.238 99.238 li
4.078 99.238 li
cp
ef
4.078 61.078 mo
18.238 61.078 li
18.238 78.238 li
4.078 78.238 li
cp
ef
4.078 40.078 mo
18.238 40.078 li
18.238 57.238 li
4.078 57.238 li
cp
ef
4.078 19.199 mo
18.238 19.199 li
18.238 36.238 li
4.078 36.238 li
cp
ef
.96 lw
31.32 511.199 mo
593.762 511.199 li
.369879 .299321 .304356 .000976577 cmyk
@
31.32 511.199 mo
31.32 515.641 li
101.641 511.199 mo
101.641 515.641 li
171.961 511.199 mo
171.961 515.641 li
242.16 511.199 mo
242.16 515.641 li
312.48 511.199 mo
312.48 515.641 li
382.801 511.199 mo
382.801 515.641 li
453.121 511.199 mo
453.121 515.641 li
523.441 511.199 mo
523.441 515.641 li
593.762 511.199 mo
593.762 515.641 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
1 lc
31.32 511.199 mo
101.641 482.398 li
171.961 430.68 li
242.16 378.48 li
312.48 366.48 li
382.801 324.719 li
453.121 283.32 li
523.441 241.32 li
593.762 200.281 li
.62829 .284672 0 0 cmyk
@
grestore
1 lw
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
.62829 .284672 0 0 cmyk
@
106.52 487.441 mo
96.441 477.359 li
96.441 487.441 mo
106.52 477.359 li
@
176.84 435.719 mo
166.762 425.641 li
166.762 435.719 mo
176.84 425.641 li
@
247.16 383.52 mo
237.078 373.441 li
237.078 383.52 mo
247.16 373.441 li
@
317.48 371.398 mo
307.398 361.32 li
307.398 371.398 mo
317.48 361.32 li
@
387.801 329.641 mo
377.719 319.559 li
377.719 329.641 mo
387.801 319.559 li
@
458.121 288.238 mo
448.039 278.16 li
448.039 288.238 mo
458.121 278.16 li
@
528.441 246.359 mo
518.359 236.281 li
518.359 246.359 mo
528.441 236.281 li
@
598.762 205.32 mo
588.68 195.238 li
588.68 205.32 mo
598.762 195.238 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
31.32 511.199 mo
101.641 476.16 li
171.961 417.121 li
242.16 390.84 li
312.48 343.559 li
382.801 296.398 li
453.121 248.52 li
523.441 200.762 li
593.762 154.441 li
.0321965 .622736 .922606 .000579843 cmyk
@
grestore
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
.0321965 .622736 .922606 .000579843 cmyk
@
106.52 481.199 mo
96.441 471.121 li
96.441 481.199 mo
106.52 471.121 li
@
176.84 422.039 mo
166.762 411.961 li
166.762 422.039 mo
176.84 411.961 li
@
247.16 395.879 mo
237.078 385.801 li
237.078 395.879 mo
247.16 385.801 li
@
317.48 348.48 mo
307.398 338.398 li
307.398 348.48 mo
317.48 338.398 li
@
387.801 301.32 mo
377.719 291.238 li
377.719 301.32 mo
387.801 291.238 li
@
458.121 253.559 mo
448.039 243.48 li
448.039 253.559 mo
458.121 243.48 li
@
528.441 205.68 mo
518.359 195.602 li
518.359 205.68 mo
528.441 195.602 li
@
598.762 159.48 mo
588.68 149.398 li
588.68 159.48 mo
598.762 149.398 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
31.32 511.199 mo
101.641 485.281 li
171.961 416.641 li
242.16 357.961 li
312.48 342.961 li
382.801 295.68 li
453.121 247.199 li
523.441 200.039 li
593.762 151.559 li
.621118 .109194 .980743 .0040589 cmyk
@
grestore
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
.621118 .109194 .980743 .0040589 cmyk
@
106.52 490.32 mo
96.441 480.238 li
96.441 490.32 mo
106.52 480.238 li
@
176.84 421.559 mo
166.762 411.48 li
166.762 421.559 mo
176.84 411.48 li
@
247.16 362.879 mo
237.078 352.801 li
237.078 362.879 mo
247.16 352.801 li
@
317.48 347.879 mo
307.398 337.801 li
307.398 347.879 mo
317.48 337.801 li
@
387.801 300.719 mo
377.719 290.641 li
377.719 300.719 mo
387.801 290.641 li
@
458.121 252.121 mo
448.039 242.039 li
448.039 252.121 mo
458.121 242.039 li
@
528.441 205.078 mo
518.359 195 li
518.359 205.078 mo
528.441 195 li
@
598.762 156.48 mo
588.68 146.398 li
588.68 156.48 mo
598.762 146.398 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
31.32 511.199 mo
101.641 476.52 li
171.961 418.559 li
242.16 388.559 li
312.48 298.922 li
382.801 293.398 li
453.121 245.039 li
523.441 196.32 li
593.762 150.359 li
0 .993988 1 0 cmyk
@
grestore
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
0 .993988 1 0 cmyk
@
106.52 481.441 mo
96.441 471.359 li
96.441 481.441 mo
106.52 471.359 li
@
176.84 423.602 mo
166.762 413.52 li
166.762 423.602 mo
176.84 413.52 li
@
247.16 393.602 mo
237.078 383.52 li
237.078 393.602 mo
247.16 383.52 li
@
317.48 303.961 mo
307.398 293.879 li
307.398 303.961 mo
317.48 293.879 li
@
387.801 298.32 mo
377.719 288.238 li
377.719 298.32 mo
387.801 288.238 li
@
458.121 249.961 mo
448.039 239.879 li
448.039 249.961 mo
458.121 239.879 li
@
528.441 201.359 mo
518.359 191.281 li
518.359 201.359 mo
528.441 191.281 li
@
598.762 155.398 mo
588.68 145.32 li
588.68 155.398 mo
598.762 145.32 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 475.922 li
171.961 420.719 li
242.16 415.922 li
312.48 379.441 li
382.801 340.68 li
453.121 303.602 li
523.441 254.281 li
593.762 227.52 li
.62829 .284672 0 0 cmyk
@
grestore
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
.62829 .284672 0 0 cmyk
@
106.52 480.84 mo
96.441 470.762 li
96.441 480.84 mo
106.52 470.762 li
@
176.84 425.762 mo
166.762 415.68 li
166.762 425.762 mo
176.84 415.68 li
@
247.16 420.84 mo
237.078 410.762 li
237.078 420.84 mo
247.16 410.762 li
@
317.48 384.48 mo
307.398 374.398 li
307.398 384.48 mo
317.48 374.398 li
@
387.801 345.719 mo
377.719 335.641 li
377.719 345.719 mo
387.801 335.641 li
@
458.121 308.52 mo
448.039 298.441 li
448.039 308.52 mo
458.121 298.441 li
@
528.441 259.32 mo
518.359 249.238 li
518.359 259.32 mo
528.441 249.238 li
@
598.762 232.559 mo
588.68 222.48 li
588.68 232.559 mo
598.762 222.48 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 475.68 li
171.961 418.801 li
242.16 412.68 li
312.48 401.52 li
382.801 350.281 li
453.121 332.641 li
523.441 298.68 li
593.762 256.32 li
.0321965 .622736 .922606 .000579843 cmyk
@
grestore
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
.0321965 .622736 .922606 .000579843 cmyk
@
106.52 480.602 mo
96.441 470.52 li
96.441 480.602 mo
106.52 470.52 li
@
176.84 423.719 mo
166.762 413.641 li
166.762 423.719 mo
176.84 413.641 li
@
247.16 417.602 mo
237.078 407.52 li
237.078 417.602 mo
247.16 407.52 li
@
317.48 406.559 mo
307.398 396.48 li
307.398 406.559 mo
317.48 396.48 li
@
387.801 355.199 mo
377.719 345.121 li
377.719 355.199 mo
387.801 345.121 li
@
458.121 337.559 mo
448.039 327.48 li
448.039 337.559 mo
458.121 327.48 li
@
528.441 303.719 mo
518.359 293.641 li
518.359 303.719 mo
528.441 293.641 li
@
598.762 261.359 mo
588.68 251.281 li
588.68 261.359 mo
598.762 251.281 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 474.719 li
171.961 419.039 li
242.16 441.602 li
312.48 409.441 li
382.801 384.961 li
453.121 351 li
523.441 331.922 li
593.762 304.32 li
.467353 0 .87747 0 cmyk
@
grestore
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
.621118 .109194 .980743 .0040589 cmyk
@
106.52 479.762 mo
96.441 469.68 li
96.441 479.762 mo
106.52 469.68 li
@
176.84 424.078 mo
166.762 414 li
166.762 424.078 mo
176.84 414 li
@
247.16 446.641 mo
237.078 436.559 li
237.078 446.641 mo
247.16 436.559 li
@
317.48 414.359 mo
307.398 404.281 li
307.398 414.359 mo
317.48 404.281 li
@
387.801 389.879 mo
377.719 379.801 li
377.719 389.879 mo
387.801 379.801 li
@
458.121 356.039 mo
448.039 345.961 li
448.039 356.039 mo
458.121 345.961 li
@
528.441 336.84 mo
518.359 326.762 li
518.359 336.84 mo
528.441 326.762 li
@
598.762 309.359 mo
588.68 299.281 li
588.68 309.359 mo
598.762 299.281 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 491.52 li
171.961 435.48 li
242.16 437.641 li
312.48 424.922 li
382.801 417.238 li
453.121 385.68 li
523.441 376.32 li
593.762 359.52 li
0 .993988 1 0 cmyk
@
grestore
36.199 516.121 mo
26.121 506.039 li
26.121 516.121 mo
36.199 506.039 li
0 .993988 1 0 cmyk
@
106.52 496.559 mo
96.441 486.48 li
96.441 496.559 mo
106.52 486.48 li
@
176.84 440.52 mo
166.762 430.441 li
166.762 440.52 mo
176.84 430.441 li
@
247.16 442.559 mo
237.078 432.48 li
237.078 442.559 mo
247.16 432.48 li
@
317.48 429.84 mo
307.398 419.762 li
307.398 429.84 mo
317.48 419.762 li
@
387.801 422.281 mo
377.719 412.199 li
377.719 422.281 mo
387.801 412.199 li
@
458.121 390.719 mo
448.039 380.641 li
448.039 390.719 mo
458.121 380.641 li
@
528.441 381.238 mo
518.359 371.16 li
518.359 381.238 mo
528.441 371.16 li
@
598.762 364.441 mo
588.68 354.359 li
588.68 364.441 mo
598.762 354.359 li
@
11.141 501.871 mo
18.235 501.871 li
18.235 518.961 li
11.141 518.961 li
cp
0 0 0 0 cmyk
ef
17.516 514.816 mo
17.512 514.906 17.504 514.977 17.492 515.035 cv
17.477 515.098 17.457 515.148 17.438 515.18 cv
17.414 515.219 17.391 515.242 17.359 515.258 cv
17.328 515.273 17.297 515.281 17.27 515.281 cv
12.633 515.281 li
12.598 515.281 12.57 515.273 12.543 515.258 cv
12.516 515.242 12.488 515.219 12.465 515.18 cv
12.438 515.148 12.418 515.098 12.406 515.035 cv
12.391 514.977 12.383 514.906 12.387 514.816 cv
12.383 514.738 12.391 514.664 12.406 514.602 cv
12.418 514.543 12.434 514.496 12.457 514.457 cv
12.473 514.422 12.5 514.391 12.531 514.367 cv
12.563 514.348 12.594 514.34 12.633 514.336 cv
14.484 514.336 li
14.484 507.59 li
12.77 508.609 li
12.68 508.66 12.609 508.687 12.563 508.695 cv
12.508 508.703 12.465 508.695 12.434 508.664 cv
12.398 508.637 12.379 508.586 12.367 508.516 cv
12.355 508.449 12.348 508.363 12.352 508.254 cv
12.348 508.18 12.352 508.113 12.363 508.055 cv
12.367 508.004 12.379 507.957 12.395 507.918 cv
12.406 507.883 12.426 507.852 12.449 507.824 cv
12.473 507.797 12.504 507.77 12.551 507.742 cv
14.594 506.43 li
14.609 506.418 14.629 506.406 14.66 506.398 cv
14.684 506.391 14.719 506.383 14.766 506.371 cv
14.805 506.363 14.855 506.355 14.91 506.352 cv
14.965 506.352 15.031 506.352 15.117 506.348 cv
15.223 506.352 15.316 506.355 15.391 506.363 cv
15.461 506.371 15.516 506.387 15.563 506.402 cv
15.602 506.422 15.629 506.441 15.645 506.465 cv
15.652 506.492 15.66 506.516 15.664 506.539 cv
15.664 514.336 li
17.27 514.336 li
17.305 514.34 17.34 514.348 17.371 514.367 cv
17.402 514.391 17.426 514.422 17.449 514.457 cv
17.465 514.496 17.48 514.543 17.496 514.602 cv
17.504 514.664 17.512 514.738 17.516 514.816 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 480.883 mo
18.235 480.883 li
18.235 497.973 li
11.141 497.973 li
cp
0 0 0 0 cmyk
ef
17.504 493.797 mo
17.5 493.883 17.496 493.957 17.488 494.02 cv
17.477 494.086 17.461 494.141 17.441 494.18 cv
17.418 494.227 17.387 494.258 17.355 494.273 cv
17.316 494.297 17.281 494.305 17.246 494.305 cv
12.336 494.305 li
12.27 494.305 12.211 494.297 12.164 494.281 cv
12.113 494.266 12.074 494.242 12.043 494.203 cv
12.008 494.172 11.98 494.117 11.965 494.047 cv
11.945 493.977 11.938 493.891 11.941 493.789 cv
11.938 493.699 11.941 493.621 11.953 493.551 cv
11.957 493.484 11.973 493.422 12 493.367 cv
12.02 493.316 12.051 493.266 12.086 493.211 cv
12.121 493.16 12.168 493.105 12.227 493.043 cv
14.004 491.215 li
14.41 490.797 14.738 490.418 14.988 490.082 cv
15.23 489.75 15.422 489.445 15.563 489.168 cv
15.695 488.898 15.785 488.648 15.828 488.422 cv
15.867 488.195 15.887 487.984 15.891 487.789 cv
15.887 487.594 15.855 487.41 15.789 487.23 cv
15.723 487.059 15.625 486.902 15.504 486.766 cv
15.375 486.637 15.219 486.531 15.031 486.449 cv
14.84 486.375 14.625 486.336 14.383 486.332 cv
14.094 486.336 13.832 486.375 13.605 486.449 cv
13.371 486.531 13.172 486.617 13.004 486.703 cv
12.828 486.797 12.684 486.879 12.57 486.957 cv
12.453 487.035 12.367 487.074 12.313 487.074 cv
12.277 487.074 12.25 487.066 12.227 487.047 cv
12.199 487.031 12.176 487 12.16 486.957 cv
12.141 486.918 12.129 486.863 12.121 486.793 cv
12.113 486.723 12.109 486.641 12.109 486.543 cv
12.109 486.477 12.109 486.418 12.113 486.367 cv
12.117 486.316 12.125 486.273 12.137 486.234 cv
12.148 486.203 12.164 486.168 12.184 486.133 cv
12.199 486.105 12.234 486.066 12.293 486.016 cv
12.344 485.969 12.441 485.902 12.578 485.816 cv
12.711 485.734 12.879 485.652 13.086 485.574 cv
13.285 485.496 13.508 485.43 13.758 485.371 cv
14 485.32 14.258 485.293 14.531 485.289 cv
14.957 485.293 15.336 485.355 15.66 485.473 cv
15.98 485.598 16.246 485.762 16.465 485.969 cv
16.676 486.184 16.836 486.43 16.941 486.703 cv
17.047 486.984 17.102 487.281 17.102 487.594 cv
17.102 487.883 17.074 488.164 17.023 488.445 cv
16.973 488.727 16.867 489.031 16.703 489.359 cv
16.539 489.687 16.305 490.051 16 490.449 cv
15.695 490.852 15.285 491.312 14.777 491.832 cv
13.371 493.301 li
17.238 493.301 li
17.27 493.305 17.305 493.312 17.344 493.332 cv
17.375 493.355 17.406 493.387 17.434 493.426 cv
17.457 493.469 17.477 493.523 17.488 493.582 cv
17.496 493.645 17.5 493.715 17.504 493.797 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 459.891 mo
18.235 459.891 li
18.235 476.981 li
11.141 476.981 li
cp
0 0 0 0 cmyk
ef
17.426 470.766 mo
17.422 471.176 17.352 471.543 17.211 471.867 cv
17.066 472.195 16.863 472.477 16.602 472.707 cv
16.336 472.941 16.008 473.117 15.621 473.242 cv
15.23 473.367 14.793 473.43 14.309 473.43 cv
14.004 473.43 13.727 473.402 13.473 473.355 cv
13.211 473.309 12.98 473.258 12.785 473.187 cv
12.582 473.125 12.418 473.055 12.285 472.984 cv
12.152 472.914 12.066 472.863 12.035 472.828 cv
11.996 472.801 11.973 472.77 11.957 472.734 cv
11.938 472.703 11.918 472.664 11.906 472.617 cv
11.891 472.574 11.883 472.52 11.875 472.449 cv
11.867 472.387 11.863 472.305 11.867 472.203 cv
11.863 472.043 11.879 471.93 11.914 471.863 cv
11.945 471.801 11.992 471.766 12.055 471.766 cv
12.098 471.766 12.18 471.805 12.305 471.875 cv
12.426 471.953 12.586 472.031 12.781 472.113 cv
12.973 472.199 13.199 472.277 13.465 472.348 cv
13.723 472.422 14.016 472.457 14.336 472.457 cv
14.645 472.457 14.914 472.418 15.152 472.34 cv
15.383 472.262 15.582 472.152 15.742 472.012 cv
15.898 471.871 16.016 471.703 16.098 471.508 cv
16.176 471.312 16.215 471.102 16.219 470.875 cv
16.215 470.625 16.164 470.398 16.066 470.195 cv
15.961 469.996 15.813 469.824 15.621 469.676 cv
15.422 469.531 15.184 469.418 14.898 469.34 cv
14.613 469.262 14.289 469.223 13.926 469.223 cv
13.055 469.223 li
13.012 469.223 12.977 469.215 12.941 469.199 cv
12.906 469.184 12.875 469.156 12.852 469.117 cv
12.824 469.082 12.805 469.035 12.789 468.977 cv
12.773 468.918 12.766 468.84 12.766 468.742 cv
12.766 468.656 12.77 468.586 12.785 468.527 cv
12.793 468.473 12.813 468.426 12.844 468.391 cv
12.867 468.355 12.898 468.332 12.93 468.312 cv
12.961 468.301 12.996 468.293 13.039 468.289 cv
13.813 468.289 li
14.113 468.293 14.383 468.254 14.625 468.172 cv
14.859 468.098 15.063 467.984 15.234 467.836 cv
15.398 467.691 15.527 467.516 15.617 467.312 cv
15.707 467.109 15.754 466.883 15.754 466.629 cv
15.754 466.449 15.723 466.273 15.664 466.105 cv
15.602 465.941 15.512 465.797 15.395 465.672 cv
15.273 465.547 15.121 465.449 14.941 465.379 cv
14.754 465.309 14.543 465.273 14.301 465.273 cv
14.035 465.273 13.789 465.316 13.57 465.395 cv
13.344 465.477 13.148 465.562 12.977 465.652 cv
12.801 465.746 12.656 465.832 12.543 465.91 cv
12.43 465.992 12.348 466.031 12.305 466.027 cv
12.27 466.031 12.242 466.023 12.219 466.012 cv
12.191 466 12.172 465.977 12.156 465.941 cv
12.141 465.91 12.129 465.863 12.121 465.797 cv
12.113 465.738 12.109 465.656 12.113 465.555 cv
12.109 465.488 12.109 465.43 12.117 465.375 cv
12.117 465.324 12.129 465.277 12.145 465.234 cv
12.16 465.199 12.176 465.164 12.195 465.129 cv
12.211 465.102 12.242 465.062 12.285 465.016 cv
12.328 464.973 12.414 464.91 12.551 464.828 cv
12.68 464.746 12.844 464.668 13.039 464.586 cv
13.23 464.508 13.453 464.437 13.711 464.383 cv
13.961 464.328 14.234 464.301 14.531 464.301 cv
14.938 464.301 15.301 464.355 15.613 464.457 cv
15.926 464.566 16.184 464.715 16.395 464.902 cv
16.598 465.098 16.754 465.328 16.859 465.594 cv
16.961 465.863 17.012 466.156 17.016 466.48 cv
17.012 466.762 16.977 467.023 16.906 467.258 cv
16.832 467.5 16.723 467.711 16.582 467.895 cv
16.438 468.082 16.266 468.238 16.063 468.367 cv
15.855 468.5 15.617 468.594 15.348 468.641 cv
15.348 468.652 li
15.652 468.687 15.934 468.762 16.188 468.883 cv
16.441 469.004 16.66 469.156 16.844 469.34 cv
17.023 469.523 17.164 469.738 17.27 469.98 cv
17.371 470.227 17.422 470.488 17.426 470.766 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 438.91 mo
18.235 438.91 li
18.235 456 li
11.141 456 li
cp
0 0 0 0 cmyk
ef
17.871 449.777 mo
17.867 449.93 17.844 450.051 17.801 450.137 cv
17.754 450.227 17.691 450.27 17.609 450.266 cv
16.609 450.266 li
16.609 452.129 li
16.609 452.168 16.598 452.199 16.582 452.223 cv
16.559 452.25 16.527 452.27 16.484 452.289 cv
16.434 452.305 16.371 452.316 16.301 452.328 cv
16.223 452.336 16.129 452.34 16.012 452.344 cv
15.895 452.34 15.797 452.336 15.727 452.328 cv
15.648 452.316 15.59 452.305 15.547 452.289 cv
15.5 452.27 15.469 452.25 15.453 452.223 cv
15.434 452.199 15.426 452.168 15.43 452.129 cv
15.43 450.266 li
11.801 450.266 li
11.742 450.27 11.699 450.262 11.664 450.246 cv
11.629 450.234 11.594 450.207 11.566 450.168 cv
11.535 450.133 11.516 450.082 11.504 450.012 cv
11.492 449.945 11.488 449.855 11.488 449.742 cv
11.488 449.66 11.488 449.582 11.496 449.512 cv
11.496 449.441 11.508 449.379 11.523 449.324 cv
11.535 449.27 11.551 449.215 11.578 449.16 cv
11.598 449.105 11.625 449.051 11.66 448.988 cv
14.82 443.602 li
14.84 443.566 14.875 443.535 14.922 443.508 cv
14.965 443.48 15.02 443.457 15.094 443.437 cv
15.16 443.422 15.246 443.41 15.352 443.398 cv
15.453 443.395 15.574 443.391 15.715 443.387 cv
15.863 443.391 16 443.395 16.117 443.406 cv
16.23 443.418 16.32 443.434 16.395 443.449 cv
16.461 443.469 16.516 443.492 16.555 443.523 cv
16.59 443.555 16.609 443.59 16.609 443.629 cv
16.609 449.293 li
17.609 449.293 li
17.684 449.297 17.746 449.336 17.797 449.414 cv
17.844 449.496 17.867 449.617 17.871 449.777 cv
cp
15.43 444.426 mo
15.418 444.426 li
12.566 449.293 li
15.43 449.293 li
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 417.922 mo
18.235 417.922 li
18.235 435.012 li
11.141 435.012 li
cp
0 0 0 0 cmyk
ef
17.453 428.477 mo
17.453 428.953 17.371 429.375 17.211 429.746 cv
17.051 430.117 16.824 430.43 16.535 430.684 cv
16.238 430.937 15.891 431.133 15.488 431.262 cv
15.082 431.395 14.633 431.457 14.141 431.457 cv
13.863 431.457 13.602 431.437 13.359 431.398 cv
13.109 431.359 12.891 431.312 12.703 431.258 cv
12.508 431.203 12.352 431.148 12.227 431.09 cv
12.102 431.039 12.023 430.996 11.992 430.961 cv
11.957 430.93 11.934 430.898 11.922 430.871 cv
11.906 430.844 11.891 430.812 11.883 430.77 cv
11.867 430.734 11.859 430.684 11.859 430.621 cv
11.852 430.562 11.852 430.492 11.852 430.41 cv
11.852 430.336 11.855 430.266 11.863 430.203 cv
11.871 430.141 11.883 430.09 11.902 430.051 cv
11.918 430.012 11.938 429.984 11.965 429.965 cv
11.988 429.949 12.02 429.941 12.051 429.937 cv
12.098 429.941 12.168 429.969 12.262 430.023 cv
12.355 430.082 12.484 430.145 12.648 430.211 cv
12.813 430.277 13.012 430.34 13.254 430.398 cv
13.488 430.457 13.773 430.484 14.109 430.484 cv
14.41 430.484 14.691 430.449 14.949 430.375 cv
15.203 430.305 15.426 430.191 15.613 430.035 cv
15.797 429.883 15.941 429.687 16.047 429.449 cv
16.152 429.215 16.203 428.926 16.207 428.586 cv
16.203 428.305 16.16 428.055 16.07 427.836 cv
15.98 427.617 15.844 427.437 15.66 427.293 cv
15.473 427.152 15.238 427.047 14.957 426.973 cv
14.672 426.902 14.332 426.863 13.945 426.863 cv
13.66 426.863 13.422 426.879 13.223 426.906 cv
13.02 426.937 12.832 426.953 12.66 426.949 cv
12.531 426.953 12.438 426.922 12.387 426.859 cv
12.328 426.801 12.301 426.687 12.305 426.516 cv
12.305 422.902 li
12.301 422.754 12.336 422.645 12.41 422.566 cv
12.477 422.496 12.578 422.457 12.715 422.457 cv
16.645 422.457 li
16.68 422.457 16.715 422.469 16.75 422.488 cv
16.781 422.512 16.809 422.543 16.836 422.582 cv
16.855 422.625 16.871 422.676 16.887 422.738 cv
16.895 422.805 16.902 422.883 16.906 422.965 cv
16.902 423.133 16.879 423.258 16.84 423.348 cv
16.793 423.441 16.734 423.488 16.656 423.484 cv
13.484 423.484 li
13.484 425.973 li
13.637 425.953 13.793 425.941 13.957 425.934 cv
14.113 425.93 14.301 425.926 14.516 425.926 cv
15 425.926 15.426 425.988 15.793 426.109 cv
16.156 426.23 16.461 426.402 16.711 426.621 cv
16.953 426.848 17.141 427.113 17.266 427.426 cv
17.391 427.742 17.453 428.094 17.453 428.477 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 396.93 mo
18.235 396.93 li
18.235 414.02 li
11.141 414.02 li
cp
0 0 0 0 cmyk
ef
17.723 407.457 mo
17.723 407.848 17.66 408.227 17.543 408.586 cv
17.418 408.953 17.234 409.27 16.992 409.543 cv
16.742 409.82 16.43 410.043 16.055 410.207 cv
15.672 410.375 15.227 410.457 14.711 410.457 cv
14.34 410.457 14.012 410.414 13.73 410.32 cv
13.445 410.234 13.199 410.102 12.988 409.93 cv
12.777 409.762 12.602 409.555 12.465 409.309 cv
12.324 409.062 12.211 408.781 12.129 408.465 cv
12.043 408.152 11.984 407.809 11.949 407.43 cv
11.91 407.059 11.891 406.656 11.895 406.223 cv
11.891 405.844 11.91 405.461 11.953 405.07 cv
11.992 404.687 12.066 404.312 12.172 403.945 cv
12.277 403.586 12.422 403.246 12.602 402.93 cv
12.781 402.613 13.008 402.336 13.281 402.102 cv
13.555 401.867 13.879 401.68 14.258 401.539 cv
14.637 401.402 15.078 401.336 15.582 401.332 cv
15.75 401.336 15.922 401.344 16.094 401.363 cv
16.266 401.387 16.426 401.418 16.574 401.449 cv
16.723 401.488 16.844 401.523 16.945 401.562 cv
17.043 401.602 17.109 401.637 17.145 401.66 cv
17.172 401.687 17.195 401.715 17.215 401.742 cv
17.23 401.773 17.246 401.805 17.254 401.84 cv
17.262 401.875 17.266 401.914 17.273 401.957 cv
17.273 402 17.277 402.055 17.281 402.117 cv
17.277 402.203 17.277 402.273 17.277 402.328 cv
17.273 402.391 17.262 402.437 17.25 402.473 cv
17.23 402.512 17.211 402.539 17.188 402.555 cv
17.16 402.574 17.129 402.582 17.09 402.582 cv
17.039 402.582 16.969 402.566 16.883 402.535 cv
16.793 402.504 16.688 402.469 16.566 402.426 cv
16.441 402.391 16.293 402.355 16.117 402.32 cv
15.941 402.293 15.738 402.277 15.508 402.273 cv
15.078 402.277 14.711 402.363 14.406 402.535 cv
14.102 402.707 13.852 402.941 13.656 403.234 cv
13.461 403.527 13.316 403.867 13.227 404.25 cv
13.129 404.641 13.074 405.043 13.066 405.461 cv
13.184 405.395 13.32 405.328 13.469 405.258 cv
13.617 405.191 13.777 405.129 13.953 405.07 cv
14.129 405.02 14.316 404.973 14.512 404.937 cv
14.707 404.906 14.918 404.891 15.145 404.887 cv
15.621 404.891 16.023 404.957 16.355 405.082 cv
16.684 405.215 16.949 405.395 17.156 405.625 cv
17.355 405.855 17.5 406.125 17.59 406.437 cv
17.676 406.75 17.723 407.09 17.723 407.457 cv
cp
16.527 407.566 mo
16.527 407.305 16.5 407.062 16.449 406.844 cv
16.395 406.629 16.305 406.445 16.184 406.289 cv
16.059 406.141 15.895 406.023 15.691 405.941 cv
15.48 405.859 15.227 405.816 14.93 405.816 cv
14.758 405.816 14.59 405.832 14.422 405.863 cv
14.25 405.895 14.086 405.937 13.93 405.984 cv
13.77 406.039 13.621 406.102 13.48 406.172 cv
13.336 406.246 13.203 406.32 13.086 406.398 cv
13.082 406.992 13.121 407.488 13.199 407.883 cv
13.273 408.281 13.383 408.598 13.527 408.836 cv
13.672 409.078 13.852 409.25 14.066 409.352 cv
14.281 409.457 14.531 409.508 14.82 409.504 cv
15.109 409.508 15.363 409.453 15.578 409.34 cv
15.793 409.234 15.969 409.086 16.113 408.898 cv
16.254 408.715 16.359 408.508 16.426 408.277 cv
16.492 408.047 16.527 407.812 16.527 407.566 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 375.941 mo
18.235 375.941 li
18.235 393.031 li
11.141 393.031 li
cp
0 0 0 0 cmyk
ef
17.625 380.965 mo
17.621 381.051 17.617 381.125 17.613 381.187 cv
17.605 381.258 17.598 381.32 17.586 381.379 cv
17.574 381.445 17.559 381.504 17.539 381.559 cv
17.516 381.617 17.492 381.68 17.469 381.738 cv
14.273 389.102 li
14.246 389.16 14.219 389.203 14.188 389.234 cv
14.152 389.27 14.109 389.297 14.055 389.316 cv
14 389.336 13.93 389.348 13.852 389.359 cv
13.766 389.363 13.668 389.367 13.551 389.371 cv
13.395 389.367 13.273 389.359 13.188 389.348 cv
13.102 389.332 13.039 389.316 13 389.285 cv
12.961 389.258 12.941 389.219 12.949 389.176 cv
12.949 389.133 12.965 389.082 12.996 389.02 cv
16.355 381.492 li
12.098 381.492 li
12.012 381.496 11.945 381.449 11.902 381.355 cv
11.859 381.266 11.84 381.137 11.84 380.973 cv
11.84 380.887 11.844 380.812 11.855 380.746 cv
11.867 380.684 11.883 380.629 11.906 380.586 cv
11.926 380.543 11.953 380.512 11.988 380.488 cv
12.02 380.469 12.059 380.457 12.098 380.457 cv
17.27 380.457 li
17.328 380.457 17.383 380.465 17.434 380.48 cv
17.48 380.496 17.516 380.523 17.543 380.562 cv
17.566 380.602 17.586 380.656 17.602 380.719 cv
17.613 380.785 17.621 380.867 17.625 380.965 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 354.949 mo
18.235 354.949 li
18.235 372.039 li
11.141 372.039 li
cp
0 0 0 0 cmyk
ef
17.699 366.074 mo
17.699 366.461 17.629 366.805 17.492 367.102 cv
17.355 367.406 17.16 367.656 16.902 367.859 cv
16.645 368.066 16.324 368.223 15.945 368.324 cv
15.563 368.43 15.129 368.48 14.645 368.48 cv
14.184 368.48 13.773 368.434 13.414 368.34 cv
13.051 368.246 12.746 368.105 12.496 367.914 cv
12.246 367.73 12.055 367.5 11.922 367.223 cv
11.789 366.949 11.723 366.637 11.723 366.281 cv
11.723 366.008 11.766 365.75 11.859 365.516 cv
11.945 365.281 12.078 365.066 12.254 364.871 cv
12.422 364.676 12.633 364.492 12.887 364.316 cv
13.137 364.148 13.422 363.984 13.738 363.828 cv
13.465 363.687 13.223 363.539 13.012 363.379 cv
12.801 363.223 12.621 363.051 12.477 362.863 cv
12.328 362.68 12.219 362.484 12.145 362.273 cv
12.066 362.066 12.027 361.836 12.031 361.586 cv
12.027 361.277 12.082 360.984 12.199 360.711 cv
12.309 360.441 12.48 360.207 12.707 360.004 cv
12.934 359.805 13.219 359.645 13.57 359.527 cv
13.914 359.41 14.324 359.352 14.793 359.352 cv
15.238 359.352 15.625 359.406 15.953 359.512 cv
16.281 359.621 16.551 359.766 16.762 359.949 cv
16.973 360.137 17.129 360.355 17.234 360.605 cv
17.332 360.855 17.383 361.125 17.387 361.414 cv
17.383 361.648 17.344 361.875 17.273 362.086 cv
17.195 362.305 17.086 362.508 16.938 362.695 cv
16.789 362.891 16.609 363.07 16.398 363.234 cv
16.188 363.406 15.945 363.562 15.672 363.703 cv
15.992 363.867 16.277 364.031 16.535 364.199 cv
16.785 364.367 17 364.547 17.176 364.742 cv
17.344 364.937 17.473 365.145 17.566 365.359 cv
17.652 365.578 17.699 365.816 17.699 366.074 cv
cp
16.219 361.523 mo
16.215 361.336 16.184 361.16 16.117 361.004 cv
16.051 360.848 15.953 360.715 15.828 360.605 cv
15.699 360.496 15.539 360.414 15.352 360.355 cv
15.156 360.301 14.941 360.273 14.703 360.27 cv
14.207 360.273 13.832 360.383 13.582 360.605 cv
13.324 360.832 13.199 361.141 13.203 361.523 cv
13.199 361.703 13.23 361.867 13.293 362.02 cv
13.355 362.176 13.449 362.32 13.582 362.457 cv
13.707 362.594 13.871 362.727 14.074 362.855 cv
14.27 362.988 14.508 363.125 14.785 363.266 cv
15.246 363.031 15.602 362.77 15.848 362.477 cv
16.094 362.191 16.215 361.875 16.219 361.523 cv
cp
16.508 366.199 mo
16.504 365.992 16.465 365.801 16.391 365.629 cv
16.309 365.461 16.191 365.301 16.035 365.148 cv
15.879 365 15.68 364.855 15.445 364.715 cv
15.207 364.578 14.938 364.434 14.629 364.281 cv
14.34 364.426 14.086 364.566 13.871 364.707 cv
13.652 364.848 13.473 364.996 13.336 365.145 cv
13.195 365.301 13.09 365.457 13.02 365.621 cv
12.945 365.789 12.91 365.973 12.914 366.172 cv
12.91 366.617 13.063 366.961 13.371 367.199 cv
13.672 367.445 14.125 367.566 14.73 367.562 cv
15.313 367.566 15.758 367.445 16.059 367.195 cv
16.355 366.953 16.504 366.621 16.508 366.199 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
11.141 333.969 mo
18.235 333.969 li
18.235 351.059 li
11.141 351.059 li
cp
0 0 0 0 cmyk
ef
17.563 342.566 mo
17.559 342.953 17.535 343.34 17.492 343.73 cv
17.445 344.125 17.367 344.504 17.262 344.867 cv
17.148 345.23 17.004 345.57 16.82 345.887 cv
16.633 346.207 16.398 346.488 16.121 346.723 cv
15.836 346.965 15.5 347.148 15.117 347.281 cv
14.727 347.414 14.281 347.48 13.773 347.48 cv
13.574 347.48 13.383 347.465 13.199 347.441 cv
13.012 347.414 12.844 347.387 12.699 347.352 cv
12.547 347.316 12.422 347.277 12.324 347.234 cv
12.223 347.195 12.148 347.156 12.105 347.113 cv
12.059 347.074 12.027 347.02 12.008 346.945 cv
11.984 346.875 11.973 346.777 11.977 346.66 cv
11.973 346.559 11.977 346.48 11.984 346.422 cv
11.988 346.363 12 346.316 12.016 346.285 cv
12.031 346.254 12.051 346.234 12.074 346.219 cv
12.098 346.211 12.129 346.203 12.168 346.199 cv
12.215 346.203 12.285 346.219 12.379 346.25 cv
12.469 346.285 12.582 346.324 12.727 346.363 cv
12.863 346.406 13.027 346.445 13.215 346.477 cv
13.398 346.516 13.609 346.531 13.848 346.527 cv
14.289 346.531 14.668 346.445 14.988 346.273 cv
15.301 346.102 15.563 345.875 15.766 345.586 cv
15.969 345.301 16.117 344.965 16.219 344.582 cv
16.316 344.203 16.371 343.805 16.383 343.383 cv
16.137 343.527 15.848 343.652 15.512 343.758 cv
15.172 343.871 14.785 343.926 14.348 343.922 cv
13.855 343.926 13.441 343.859 13.105 343.723 cv
12.77 343.59 12.496 343.406 12.293 343.172 cv
12.086 342.941 11.941 342.664 11.855 342.34 cv
11.766 342.023 11.723 341.672 11.723 341.293 cv
11.723 340.902 11.777 340.531 11.895 340.172 cv
12.004 339.82 12.184 339.508 12.43 339.238 cv
12.668 338.969 12.977 338.754 13.355 338.594 cv
13.727 338.434 14.176 338.352 14.699 338.352 cv
15.066 338.352 15.391 338.398 15.68 338.492 cv
15.961 338.586 16.211 338.723 16.426 338.898 cv
16.633 339.074 16.813 339.285 16.961 339.535 cv
17.105 339.785 17.223 340.066 17.313 340.379 cv
17.398 340.695 17.461 341.039 17.504 341.406 cv
17.539 341.777 17.559 342.164 17.563 342.566 cv
cp
16.363 342.437 mo
16.363 341.855 16.324 341.363 16.246 340.961 cv
16.168 340.562 16.051 340.238 15.902 339.988 cv
15.75 339.742 15.566 339.562 15.348 339.453 cv
15.125 339.344 14.871 339.289 14.59 339.289 cv
14.285 339.289 14.031 339.344 13.824 339.453 cv
13.613 339.562 13.441 339.707 13.309 339.883 cv
13.172 340.066 13.07 340.27 13.008 340.496 cv
12.941 340.727 12.91 340.965 12.914 341.203 cv
12.91 341.477 12.941 341.723 13 341.941 cv
13.055 342.168 13.145 342.355 13.277 342.512 cv
13.402 342.668 13.57 342.789 13.777 342.875 cv
13.98 342.961 14.234 343.004 14.539 343 cv
14.879 343.004 15.211 342.953 15.535 342.848 cv
15.852 342.746 16.129 342.609 16.363 342.437 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
4.051 312.98 mo
18.239 312.98 li
18.239 330.07 li
4.051 330.07 li
cp
0 0 0 0 cmyk
ef
10.414 325.887 mo
10.41 325.977 10.402 326.047 10.391 326.105 cv
10.375 326.168 10.355 326.219 10.336 326.25 cv
10.313 326.289 10.289 326.312 10.258 326.328 cv
10.227 326.344 10.195 326.352 10.168 326.352 cv
5.531 326.352 li
5.496 326.352 5.469 326.344 5.441 326.328 cv
5.414 326.312 5.387 326.289 5.363 326.25 cv
5.336 326.219 5.316 326.168 5.305 326.105 cv
5.289 326.047 5.281 325.977 5.285 325.887 cv
5.281 325.809 5.289 325.734 5.305 325.672 cv
5.316 325.613 5.332 325.566 5.355 325.527 cv
5.371 325.492 5.398 325.461 5.43 325.437 cv
5.461 325.418 5.492 325.41 5.531 325.406 cv
7.383 325.406 li
7.383 318.66 li
5.668 319.68 li
5.578 319.73 5.508 319.758 5.461 319.766 cv
5.406 319.773 5.363 319.766 5.332 319.734 cv
5.297 319.707 5.277 319.656 5.266 319.586 cv
5.254 319.52 5.246 319.434 5.25 319.324 cv
5.246 319.25 5.25 319.184 5.262 319.125 cv
5.266 319.074 5.277 319.027 5.293 318.988 cv
5.305 318.953 5.324 318.922 5.348 318.895 cv
5.371 318.867 5.402 318.84 5.449 318.812 cv
7.492 317.5 li
7.508 317.488 7.527 317.477 7.559 317.469 cv
7.582 317.461 7.617 317.453 7.664 317.441 cv
7.703 317.434 7.754 317.426 7.809 317.422 cv
7.863 317.422 7.93 317.422 8.016 317.418 cv
8.121 317.422 8.215 317.426 8.289 317.434 cv
8.359 317.441 8.414 317.457 8.461 317.473 cv
8.5 317.492 8.527 317.512 8.543 317.535 cv
8.551 317.562 8.559 317.586 8.563 317.609 cv
8.563 325.406 li
10.168 325.406 li
10.203 325.41 10.238 325.418 10.27 325.437 cv
10.301 325.461 10.324 325.492 10.348 325.527 cv
10.363 325.566 10.379 325.613 10.395 325.672 cv
10.402 325.734 10.41 325.809 10.414 325.887 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.77 321.895 mo
17.766 322.578 17.715 323.199 17.609 323.762 cv
17.5 324.324 17.32 324.809 17.074 325.211 cv
16.82 325.617 16.492 325.93 16.094 326.148 cv
15.688 326.371 15.195 326.48 14.609 326.48 cv
14.051 326.48 13.578 326.383 13.199 326.184 cv
12.816 325.988 12.512 325.695 12.277 325.309 cv
12.043 324.922 11.875 324.449 11.781 323.883 cv
11.68 323.32 11.633 322.672 11.633 321.937 cv
11.633 321.266 11.688 320.645 11.797 320.078 cv
11.906 319.516 12.082 319.031 12.332 318.625 cv
12.574 318.223 12.898 317.91 13.305 317.684 cv
13.703 317.465 14.199 317.352 14.789 317.352 cv
15.348 317.352 15.82 317.453 16.203 317.648 cv
16.586 317.852 16.891 318.145 17.125 318.527 cv
17.355 318.918 17.523 319.391 17.621 319.953 cv
17.719 320.516 17.766 321.164 17.77 321.895 cv
cp
16.563 321.977 mo
16.559 321.535 16.543 321.137 16.516 320.785 cv
16.48 320.434 16.434 320.125 16.375 319.855 cv
16.309 319.586 16.23 319.355 16.133 319.16 cv
16.035 318.969 15.918 318.809 15.781 318.68 cv
15.641 318.555 15.48 318.461 15.309 318.402 cv
15.129 318.348 14.934 318.32 14.719 318.316 cv
14.328 318.32 14.012 318.41 13.773 318.594 cv
13.527 318.777 13.336 319.031 13.199 319.348 cv
13.059 319.668 12.965 320.039 12.914 320.469 cv
12.863 320.898 12.84 321.363 12.84 321.855 cv
12.84 322.52 12.871 323.082 12.941 323.543 cv
13.008 324.012 13.117 324.391 13.27 324.68 cv
13.414 324.977 13.605 325.187 13.836 325.316 cv
14.066 325.453 14.348 325.52 14.68 325.516 cv
14.934 325.52 15.156 325.48 15.352 325.395 cv
15.543 325.316 15.711 325.195 15.852 325.039 cv
15.992 324.887 16.105 324.703 16.199 324.488 cv
16.285 324.273 16.359 324.035 16.418 323.773 cv
16.469 323.516 16.508 323.234 16.531 322.93 cv
16.551 322.625 16.559 322.309 16.563 321.977 cv
cp
f
4.051 291.988 mo
18.239 291.988 li
18.239 309.078 li
4.051 309.078 li
cp
0 0 0 0 cmyk
ef
10.414 304.914 mo
10.41 305.004 10.402 305.074 10.391 305.133 cv
10.375 305.195 10.355 305.246 10.336 305.277 cv
10.313 305.316 10.289 305.34 10.258 305.355 cv
10.227 305.371 10.195 305.379 10.168 305.379 cv
5.531 305.379 li
5.496 305.379 5.469 305.371 5.441 305.355 cv
5.414 305.34 5.387 305.316 5.363 305.277 cv
5.336 305.246 5.316 305.195 5.305 305.133 cv
5.289 305.074 5.281 305.004 5.285 304.914 cv
5.281 304.836 5.289 304.762 5.305 304.699 cv
5.316 304.641 5.332 304.594 5.355 304.555 cv
5.371 304.52 5.398 304.488 5.43 304.465 cv
5.461 304.445 5.492 304.437 5.531 304.434 cv
7.383 304.434 li
7.383 297.687 li
5.668 298.707 li
5.578 298.758 5.508 298.785 5.461 298.793 cv
5.406 298.801 5.363 298.793 5.332 298.762 cv
5.297 298.734 5.277 298.684 5.266 298.613 cv
5.254 298.547 5.246 298.461 5.25 298.352 cv
5.246 298.277 5.25 298.211 5.262 298.152 cv
5.266 298.102 5.277 298.055 5.293 298.016 cv
5.305 297.98 5.324 297.949 5.348 297.922 cv
5.371 297.895 5.402 297.867 5.449 297.84 cv
7.492 296.527 li
7.508 296.516 7.527 296.504 7.559 296.496 cv
7.582 296.488 7.617 296.48 7.664 296.469 cv
7.703 296.461 7.754 296.453 7.809 296.449 cv
7.863 296.449 7.93 296.449 8.016 296.445 cv
8.121 296.449 8.215 296.453 8.289 296.461 cv
8.359 296.469 8.414 296.484 8.461 296.5 cv
8.5 296.52 8.527 296.539 8.543 296.562 cv
8.551 296.59 8.559 296.613 8.563 296.637 cv
8.563 304.434 li
10.168 304.434 li
10.203 304.437 10.238 304.445 10.27 304.465 cv
10.301 304.488 10.324 304.52 10.348 304.555 cv
10.363 304.594 10.379 304.641 10.395 304.699 cv
10.402 304.762 10.41 304.836 10.414 304.914 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.496 304.914 mo
17.492 305.004 17.484 305.074 17.473 305.133 cv
17.457 305.195 17.438 305.246 17.418 305.277 cv
17.395 305.316 17.371 305.34 17.34 305.355 cv
17.309 305.371 17.277 305.379 17.25 305.379 cv
12.613 305.379 li
12.578 305.379 12.551 305.371 12.523 305.355 cv
12.496 305.34 12.469 305.316 12.445 305.277 cv
12.418 305.246 12.398 305.195 12.387 305.133 cv
12.371 305.074 12.363 305.004 12.367 304.914 cv
12.363 304.836 12.371 304.762 12.387 304.699 cv
12.398 304.641 12.414 304.594 12.438 304.555 cv
12.453 304.52 12.48 304.488 12.512 304.465 cv
12.543 304.445 12.574 304.437 12.613 304.434 cv
14.465 304.434 li
14.465 297.687 li
12.75 298.707 li
12.66 298.758 12.59 298.785 12.543 298.793 cv
12.488 298.801 12.445 298.793 12.414 298.762 cv
12.379 298.734 12.359 298.684 12.348 298.613 cv
12.336 298.547 12.328 298.461 12.332 298.352 cv
12.328 298.277 12.332 298.211 12.344 298.152 cv
12.348 298.102 12.359 298.055 12.375 298.016 cv
12.387 297.98 12.406 297.949 12.43 297.922 cv
12.453 297.895 12.484 297.867 12.531 297.84 cv
14.574 296.527 li
14.59 296.516 14.609 296.504 14.641 296.496 cv
14.664 296.488 14.699 296.48 14.746 296.469 cv
14.785 296.461 14.836 296.453 14.891 296.449 cv
14.945 296.449 15.012 296.449 15.098 296.445 cv
15.203 296.449 15.297 296.453 15.371 296.461 cv
15.441 296.469 15.496 296.484 15.543 296.5 cv
15.582 296.52 15.609 296.539 15.625 296.562 cv
15.633 296.59 15.641 296.613 15.645 296.637 cv
15.645 304.434 li
17.25 304.434 li
17.285 304.437 17.32 304.445 17.352 304.465 cv
17.383 304.488 17.406 304.52 17.43 304.555 cv
17.445 304.594 17.461 304.641 17.477 304.699 cv
17.484 304.762 17.492 304.836 17.496 304.914 cv
cp
f
4.051 271 mo
18.239 271 li
18.239 288.09 li
4.051 288.09 li
cp
0 0 0 0 cmyk
ef
10.414 283.914 mo
10.41 284.004 10.402 284.074 10.391 284.133 cv
10.375 284.195 10.355 284.246 10.336 284.277 cv
10.313 284.316 10.289 284.34 10.258 284.355 cv
10.227 284.371 10.195 284.379 10.168 284.379 cv
5.531 284.379 li
5.496 284.379 5.469 284.371 5.441 284.355 cv
5.414 284.34 5.387 284.316 5.363 284.277 cv
5.336 284.246 5.316 284.195 5.305 284.133 cv
5.289 284.074 5.281 284.004 5.285 283.914 cv
5.281 283.836 5.289 283.762 5.305 283.699 cv
5.316 283.641 5.332 283.594 5.355 283.555 cv
5.371 283.52 5.398 283.488 5.43 283.465 cv
5.461 283.445 5.492 283.437 5.531 283.434 cv
7.383 283.434 li
7.383 276.687 li
5.668 277.707 li
5.578 277.758 5.508 277.785 5.461 277.793 cv
5.406 277.801 5.363 277.793 5.332 277.762 cv
5.297 277.734 5.277 277.684 5.266 277.613 cv
5.254 277.547 5.246 277.461 5.25 277.352 cv
5.246 277.277 5.25 277.211 5.262 277.152 cv
5.266 277.102 5.277 277.055 5.293 277.016 cv
5.305 276.98 5.324 276.949 5.348 276.922 cv
5.371 276.895 5.402 276.867 5.449 276.84 cv
7.492 275.527 li
7.508 275.516 7.527 275.504 7.559 275.496 cv
7.582 275.488 7.617 275.48 7.664 275.469 cv
7.703 275.461 7.754 275.453 7.809 275.449 cv
7.863 275.449 7.93 275.449 8.016 275.445 cv
8.121 275.449 8.215 275.453 8.289 275.461 cv
8.359 275.469 8.414 275.484 8.461 275.5 cv
8.5 275.52 8.527 275.539 8.543 275.562 cv
8.551 275.59 8.559 275.613 8.563 275.637 cv
8.563 283.434 li
10.168 283.434 li
10.203 283.437 10.238 283.445 10.27 283.465 cv
10.301 283.488 10.324 283.52 10.348 283.555 cv
10.363 283.594 10.379 283.641 10.395 283.699 cv
10.402 283.762 10.41 283.836 10.414 283.914 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.477 283.871 mo
17.473 283.957 17.469 284.031 17.457 284.094 cv
17.445 284.16 17.43 284.215 17.41 284.254 cv
17.387 284.301 17.359 284.332 17.328 284.348 cv
17.293 284.371 17.254 284.379 17.215 284.379 cv
12.313 284.379 li
12.25 284.379 12.191 284.371 12.145 284.355 cv
12.094 284.34 12.055 284.316 12.02 284.277 cv
11.984 284.246 11.957 284.191 11.945 284.121 cv
11.926 284.051 11.918 283.965 11.922 283.863 cv
11.918 283.773 11.922 283.695 11.93 283.625 cv
11.934 283.559 11.949 283.5 11.977 283.445 cv
12 283.395 12.031 283.34 12.066 283.285 cv
12.102 283.234 12.145 283.18 12.203 283.117 cv
13.977 281.293 li
14.387 280.875 14.715 280.5 14.965 280.164 cv
15.211 279.836 15.402 279.531 15.535 279.254 cv
15.668 278.98 15.754 278.73 15.801 278.504 cv
15.84 278.281 15.863 278.07 15.863 277.875 cv
15.863 277.68 15.828 277.496 15.762 277.316 cv
15.695 277.145 15.602 276.988 15.477 276.852 cv
15.352 276.723 15.195 276.617 15.008 276.535 cv
14.82 276.461 14.602 276.422 14.355 276.418 cv
14.066 276.422 13.809 276.461 13.582 276.535 cv
13.352 276.617 13.152 276.703 12.98 276.789 cv
12.809 276.883 12.664 276.965 12.547 277.043 cv
12.43 277.121 12.344 277.16 12.293 277.16 cv
12.258 277.16 12.227 277.152 12.203 277.133 cv
12.172 277.117 12.152 277.086 12.137 277.043 cv
12.121 277.004 12.105 276.949 12.098 276.879 cv
12.086 276.812 12.082 276.73 12.086 276.633 cv
12.082 276.566 12.086 276.508 12.094 276.457 cv
12.098 276.406 12.105 276.363 12.117 276.324 cv
12.125 276.289 12.141 276.254 12.16 276.223 cv
12.18 276.191 12.215 276.152 12.273 276.102 cv
12.324 276.055 12.418 275.988 12.555 275.906 cv
12.688 275.824 12.859 275.746 13.063 275.664 cv
13.266 275.586 13.488 275.516 13.734 275.461 cv
13.977 275.406 14.234 275.379 14.508 275.379 cv
14.934 275.379 15.309 275.441 15.633 275.562 cv
15.953 275.684 16.219 275.848 16.434 276.059 cv
16.645 276.27 16.805 276.516 16.91 276.789 cv
17.016 277.07 17.07 277.367 17.07 277.68 cv
17.07 277.969 17.043 278.25 16.992 278.527 cv
16.941 278.812 16.836 279.117 16.676 279.441 cv
16.512 279.77 16.277 280.133 15.973 280.531 cv
15.664 280.934 15.258 281.395 14.754 281.91 cv
13.348 283.379 li
17.207 283.379 li
17.238 283.383 17.273 283.395 17.313 283.41 cv
17.344 283.434 17.375 283.465 17.402 283.504 cv
17.426 283.547 17.445 283.598 17.457 283.656 cv
17.469 283.723 17.473 283.793 17.477 283.871 cv
cp
f
4.051 250.012 mo
18.239 250.012 li
18.239 267.102 li
4.051 267.102 li
cp
0 0 0 0 cmyk
ef
10.414 262.914 mo
10.41 263.004 10.402 263.074 10.391 263.133 cv
10.375 263.195 10.355 263.246 10.336 263.277 cv
10.313 263.316 10.289 263.34 10.258 263.355 cv
10.227 263.371 10.195 263.379 10.168 263.379 cv
5.531 263.379 li
5.496 263.379 5.469 263.371 5.441 263.355 cv
5.414 263.34 5.387 263.316 5.363 263.277 cv
5.336 263.246 5.316 263.195 5.305 263.133 cv
5.289 263.074 5.281 263.004 5.285 262.914 cv
5.281 262.836 5.289 262.762 5.305 262.699 cv
5.316 262.641 5.332 262.594 5.355 262.555 cv
5.371 262.52 5.398 262.488 5.43 262.465 cv
5.461 262.445 5.492 262.437 5.531 262.434 cv
7.383 262.434 li
7.383 255.687 li
5.668 256.707 li
5.578 256.758 5.508 256.785 5.461 256.793 cv
5.406 256.801 5.363 256.793 5.332 256.762 cv
5.297 256.734 5.277 256.684 5.266 256.613 cv
5.254 256.547 5.246 256.461 5.25 256.352 cv
5.246 256.277 5.25 256.211 5.262 256.152 cv
5.266 256.102 5.277 256.055 5.293 256.016 cv
5.305 255.98 5.324 255.949 5.348 255.922 cv
5.371 255.895 5.402 255.867 5.449 255.84 cv
7.492 254.527 li
7.508 254.516 7.527 254.504 7.559 254.496 cv
7.582 254.488 7.617 254.48 7.664 254.469 cv
7.703 254.461 7.754 254.453 7.809 254.449 cv
7.863 254.449 7.93 254.449 8.016 254.445 cv
8.121 254.449 8.215 254.453 8.289 254.461 cv
8.359 254.469 8.414 254.484 8.461 254.5 cv
8.5 254.52 8.527 254.539 8.543 254.562 cv
8.551 254.59 8.559 254.613 8.563 254.637 cv
8.563 262.434 li
10.168 262.434 li
10.203 262.437 10.238 262.445 10.27 262.465 cv
10.301 262.488 10.324 262.52 10.348 262.555 cv
10.363 262.594 10.379 262.641 10.395 262.699 cv
10.402 262.762 10.41 262.836 10.414 262.914 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.406 260.844 mo
17.402 261.254 17.332 261.621 17.191 261.945 cv
17.047 262.273 16.844 262.555 16.582 262.785 cv
16.316 263.02 15.988 263.195 15.602 263.32 cv
15.211 263.445 14.773 263.508 14.289 263.508 cv
13.984 263.508 13.707 263.48 13.453 263.434 cv
13.191 263.387 12.961 263.336 12.766 263.266 cv
12.563 263.203 12.398 263.133 12.266 263.062 cv
12.133 262.992 12.047 262.941 12.016 262.906 cv
11.977 262.879 11.953 262.848 11.938 262.812 cv
11.918 262.781 11.898 262.742 11.887 262.695 cv
11.871 262.652 11.863 262.598 11.855 262.527 cv
11.848 262.465 11.844 262.383 11.848 262.281 cv
11.844 262.121 11.859 262.008 11.895 261.941 cv
11.926 261.879 11.973 261.844 12.035 261.844 cv
12.078 261.844 12.16 261.883 12.285 261.953 cv
12.406 262.031 12.566 262.109 12.762 262.191 cv
12.953 262.277 13.18 262.355 13.445 262.426 cv
13.703 262.5 13.996 262.535 14.316 262.535 cv
14.625 262.535 14.895 262.496 15.133 262.418 cv
15.363 262.34 15.563 262.23 15.723 262.09 cv
15.879 261.949 15.996 261.781 16.078 261.586 cv
16.156 261.391 16.195 261.18 16.199 260.953 cv
16.195 260.703 16.145 260.477 16.047 260.273 cv
15.941 260.074 15.793 259.902 15.602 259.754 cv
15.402 259.609 15.164 259.496 14.879 259.418 cv
14.594 259.34 14.27 259.301 13.906 259.301 cv
13.035 259.301 li
12.992 259.301 12.957 259.293 12.922 259.277 cv
12.887 259.262 12.855 259.234 12.832 259.195 cv
12.805 259.16 12.785 259.113 12.77 259.055 cv
12.754 258.996 12.746 258.918 12.746 258.82 cv
12.746 258.734 12.75 258.664 12.766 258.605 cv
12.773 258.551 12.793 258.504 12.824 258.469 cv
12.848 258.434 12.879 258.41 12.91 258.391 cv
12.941 258.379 12.977 258.371 13.02 258.367 cv
13.793 258.367 li
14.094 258.371 14.363 258.332 14.605 258.25 cv
14.84 258.176 15.043 258.062 15.215 257.914 cv
15.379 257.77 15.508 257.594 15.598 257.391 cv
15.688 257.187 15.734 256.961 15.734 256.707 cv
15.734 256.527 15.703 256.352 15.645 256.184 cv
15.582 256.02 15.492 255.875 15.375 255.75 cv
15.254 255.625 15.102 255.527 14.922 255.457 cv
14.734 255.387 14.523 255.352 14.281 255.352 cv
14.016 255.352 13.77 255.395 13.551 255.473 cv
13.324 255.555 13.129 255.641 12.957 255.73 cv
12.781 255.824 12.637 255.91 12.523 255.988 cv
12.41 256.07 12.328 256.109 12.285 256.105 cv
12.25 256.109 12.223 256.102 12.199 256.09 cv
12.172 256.078 12.152 256.055 12.137 256.02 cv
12.121 255.988 12.109 255.941 12.102 255.875 cv
12.094 255.816 12.09 255.734 12.094 255.633 cv
12.09 255.566 12.09 255.508 12.098 255.453 cv
12.098 255.402 12.109 255.355 12.125 255.312 cv
12.141 255.277 12.156 255.242 12.176 255.207 cv
12.191 255.18 12.223 255.141 12.266 255.094 cv
12.309 255.051 12.395 254.988 12.531 254.906 cv
12.66 254.824 12.824 254.746 13.02 254.664 cv
13.211 254.586 13.434 254.516 13.691 254.461 cv
13.941 254.406 14.215 254.379 14.512 254.379 cv
14.918 254.379 15.281 254.434 15.594 254.535 cv
15.906 254.645 16.164 254.793 16.375 254.98 cv
16.578 255.176 16.734 255.406 16.84 255.672 cv
16.941 255.941 16.992 256.234 16.996 256.559 cv
16.992 256.84 16.957 257.102 16.887 257.336 cv
16.813 257.578 16.703 257.789 16.563 257.973 cv
16.418 258.16 16.246 258.316 16.043 258.445 cv
15.836 258.578 15.598 258.672 15.328 258.719 cv
15.328 258.73 li
15.633 258.766 15.914 258.84 16.168 258.961 cv
16.422 259.082 16.641 259.234 16.824 259.418 cv
17.004 259.602 17.145 259.816 17.25 260.059 cv
17.352 260.305 17.402 260.566 17.406 260.844 cv
cp
f
4.051 229.031 mo
18.239 229.031 li
18.239 246.121 li
4.051 246.121 li
cp
0 0 0 0 cmyk
ef
10.414 241.934 mo
10.41 242.023 10.402 242.094 10.391 242.152 cv
10.375 242.215 10.355 242.266 10.336 242.297 cv
10.313 242.336 10.289 242.359 10.258 242.375 cv
10.227 242.391 10.195 242.398 10.168 242.398 cv
5.531 242.398 li
5.496 242.398 5.469 242.391 5.441 242.375 cv
5.414 242.359 5.387 242.336 5.363 242.297 cv
5.336 242.266 5.316 242.215 5.305 242.152 cv
5.289 242.094 5.281 242.023 5.285 241.934 cv
5.281 241.855 5.289 241.781 5.305 241.719 cv
5.316 241.66 5.332 241.613 5.355 241.574 cv
5.371 241.539 5.398 241.508 5.43 241.484 cv
5.461 241.465 5.492 241.457 5.531 241.453 cv
7.383 241.453 li
7.383 234.707 li
5.668 235.727 li
5.578 235.777 5.508 235.805 5.461 235.812 cv
5.406 235.82 5.363 235.812 5.332 235.781 cv
5.297 235.754 5.277 235.703 5.266 235.633 cv
5.254 235.566 5.246 235.48 5.25 235.371 cv
5.246 235.297 5.25 235.23 5.262 235.172 cv
5.266 235.121 5.277 235.074 5.293 235.035 cv
5.305 235 5.324 234.969 5.348 234.941 cv
5.371 234.914 5.402 234.887 5.449 234.859 cv
7.492 233.547 li
7.508 233.535 7.527 233.523 7.559 233.516 cv
7.582 233.508 7.617 233.5 7.664 233.488 cv
7.703 233.48 7.754 233.473 7.809 233.469 cv
7.863 233.469 7.93 233.469 8.016 233.465 cv
8.121 233.469 8.215 233.473 8.289 233.48 cv
8.359 233.488 8.414 233.504 8.461 233.52 cv
8.5 233.539 8.527 233.559 8.543 233.582 cv
8.551 233.609 8.559 233.633 8.563 233.656 cv
8.563 241.453 li
10.168 241.453 li
10.203 241.457 10.238 241.465 10.27 241.484 cv
10.301 241.508 10.324 241.539 10.348 241.574 cv
10.363 241.613 10.379 241.66 10.395 241.719 cv
10.402 241.781 10.41 241.855 10.414 241.934 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.852 239.875 mo
17.848 240.027 17.824 240.148 17.781 240.234 cv
17.734 240.324 17.672 240.367 17.59 240.363 cv
16.59 240.363 li
16.59 242.227 li
16.59 242.266 16.578 242.297 16.563 242.32 cv
16.539 242.348 16.508 242.367 16.465 242.387 cv
16.414 242.402 16.352 242.414 16.281 242.426 cv
16.203 242.434 16.109 242.437 15.992 242.441 cv
15.875 242.437 15.777 242.434 15.707 242.426 cv
15.629 242.414 15.57 242.402 15.527 242.387 cv
15.48 242.367 15.449 242.348 15.434 242.32 cv
15.414 242.297 15.406 242.266 15.41 242.227 cv
15.41 240.363 li
11.781 240.363 li
11.723 240.367 11.68 240.359 11.645 240.344 cv
11.609 240.332 11.574 240.305 11.547 240.266 cv
11.516 240.23 11.496 240.18 11.484 240.109 cv
11.473 240.043 11.469 239.953 11.469 239.84 cv
11.469 239.758 11.469 239.68 11.477 239.609 cv
11.477 239.539 11.488 239.477 11.504 239.422 cv
11.516 239.367 11.531 239.312 11.559 239.258 cv
11.578 239.203 11.605 239.148 11.641 239.086 cv
14.801 233.699 li
14.82 233.664 14.855 233.633 14.902 233.605 cv
14.945 233.578 15 233.555 15.074 233.535 cv
15.141 233.52 15.227 233.508 15.332 233.496 cv
15.434 233.492 15.555 233.488 15.695 233.484 cv
15.844 233.488 15.98 233.492 16.098 233.504 cv
16.211 233.516 16.301 233.531 16.375 233.547 cv
16.441 233.566 16.496 233.59 16.535 233.621 cv
16.57 233.652 16.59 233.687 16.59 233.727 cv
16.59 239.391 li
17.59 239.391 li
17.664 239.395 17.727 239.434 17.777 239.512 cv
17.824 239.594 17.848 239.715 17.852 239.875 cv
cp
15.41 234.523 mo
15.398 234.523 li
12.547 239.391 li
15.41 239.391 li
cp
f
4.051 208.039 mo
18.239 208.039 li
18.239 225.129 li
4.051 225.129 li
cp
0 0 0 0 cmyk
ef
10.414 220.934 mo
10.41 221.023 10.402 221.094 10.391 221.152 cv
10.375 221.215 10.355 221.266 10.336 221.297 cv
10.313 221.336 10.289 221.359 10.258 221.375 cv
10.227 221.391 10.195 221.398 10.168 221.398 cv
5.531 221.398 li
5.496 221.398 5.469 221.391 5.441 221.375 cv
5.414 221.359 5.387 221.336 5.363 221.297 cv
5.336 221.266 5.316 221.215 5.305 221.152 cv
5.289 221.094 5.281 221.023 5.285 220.934 cv
5.281 220.855 5.289 220.781 5.305 220.719 cv
5.316 220.66 5.332 220.613 5.355 220.574 cv
5.371 220.539 5.398 220.508 5.43 220.484 cv
5.461 220.465 5.492 220.457 5.531 220.453 cv
7.383 220.453 li
7.383 213.707 li
5.668 214.727 li
5.578 214.777 5.508 214.805 5.461 214.812 cv
5.406 214.82 5.363 214.812 5.332 214.781 cv
5.297 214.754 5.277 214.703 5.266 214.633 cv
5.254 214.566 5.246 214.48 5.25 214.371 cv
5.246 214.297 5.25 214.23 5.262 214.172 cv
5.266 214.121 5.277 214.074 5.293 214.035 cv
5.305 214 5.324 213.969 5.348 213.941 cv
5.371 213.914 5.402 213.887 5.449 213.859 cv
7.492 212.547 li
7.508 212.535 7.527 212.523 7.559 212.516 cv
7.582 212.508 7.617 212.5 7.664 212.488 cv
7.703 212.48 7.754 212.473 7.809 212.469 cv
7.863 212.469 7.93 212.469 8.016 212.465 cv
8.121 212.469 8.215 212.473 8.289 212.48 cv
8.359 212.488 8.414 212.504 8.461 212.52 cv
8.5 212.539 8.527 212.559 8.543 212.582 cv
8.551 212.609 8.559 212.633 8.563 212.656 cv
8.563 220.453 li
10.168 220.453 li
10.203 220.457 10.238 220.465 10.27 220.484 cv
10.301 220.508 10.324 220.539 10.348 220.574 cv
10.363 220.613 10.379 220.66 10.395 220.719 cv
10.402 220.781 10.41 220.855 10.414 220.934 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.434 218.547 mo
17.434 219.023 17.352 219.445 17.191 219.816 cv
17.031 220.187 16.805 220.5 16.516 220.754 cv
16.219 221.008 15.871 221.203 15.469 221.332 cv
15.063 221.465 14.613 221.527 14.121 221.527 cv
13.844 221.527 13.582 221.508 13.34 221.469 cv
13.09 221.43 12.871 221.383 12.684 221.328 cv
12.488 221.273 12.332 221.219 12.207 221.16 cv
12.082 221.109 12.004 221.066 11.973 221.031 cv
11.938 221 11.914 220.969 11.902 220.941 cv
11.887 220.914 11.871 220.883 11.863 220.84 cv
11.848 220.805 11.84 220.754 11.84 220.691 cv
11.832 220.633 11.832 220.562 11.832 220.48 cv
11.832 220.406 11.836 220.336 11.844 220.273 cv
11.852 220.211 11.863 220.16 11.883 220.121 cv
11.898 220.082 11.918 220.055 11.945 220.035 cv
11.969 220.02 12 220.012 12.031 220.008 cv
12.078 220.012 12.148 220.039 12.242 220.094 cv
12.336 220.152 12.465 220.215 12.629 220.281 cv
12.793 220.348 12.992 220.41 13.234 220.469 cv
13.469 220.527 13.754 220.555 14.09 220.555 cv
14.391 220.555 14.672 220.52 14.93 220.445 cv
15.184 220.375 15.406 220.262 15.594 220.105 cv
15.777 219.953 15.922 219.758 16.027 219.52 cv
16.133 219.285 16.184 218.996 16.188 218.656 cv
16.184 218.375 16.141 218.125 16.051 217.906 cv
15.961 217.687 15.824 217.508 15.641 217.363 cv
15.453 217.223 15.219 217.117 14.938 217.043 cv
14.652 216.973 14.313 216.934 13.926 216.934 cv
13.641 216.934 13.402 216.949 13.203 216.977 cv
13 217.008 12.813 217.023 12.641 217.02 cv
12.512 217.023 12.418 216.992 12.367 216.93 cv
12.309 216.871 12.281 216.758 12.285 216.586 cv
12.285 212.973 li
12.281 212.824 12.316 212.715 12.391 212.637 cv
12.457 212.566 12.559 212.527 12.695 212.527 cv
16.625 212.527 li
16.66 212.527 16.695 212.539 16.73 212.559 cv
16.762 212.582 16.789 212.613 16.816 212.652 cv
16.836 212.695 16.852 212.746 16.867 212.809 cv
16.875 212.875 16.883 212.953 16.887 213.035 cv
16.883 213.203 16.859 213.328 16.82 213.418 cv
16.773 213.512 16.715 213.559 16.637 213.555 cv
13.465 213.555 li
13.465 216.043 li
13.617 216.023 13.773 216.012 13.938 216.004 cv
14.094 216 14.281 215.996 14.496 215.996 cv
14.98 215.996 15.406 216.059 15.773 216.18 cv
16.137 216.301 16.441 216.473 16.691 216.691 cv
16.934 216.918 17.121 217.184 17.246 217.496 cv
17.371 217.812 17.434 218.164 17.434 218.547 cv
cp
f
4.051 187.051 mo
18.239 187.051 li
18.239 204.141 li
4.051 204.141 li
cp
0 0 0 0 cmyk
ef
10.414 199.934 mo
10.41 200.023 10.402 200.094 10.391 200.152 cv
10.375 200.215 10.355 200.266 10.336 200.297 cv
10.313 200.336 10.289 200.359 10.258 200.375 cv
10.227 200.391 10.195 200.398 10.168 200.398 cv
5.531 200.398 li
5.496 200.398 5.469 200.391 5.441 200.375 cv
5.414 200.359 5.387 200.336 5.363 200.297 cv
5.336 200.266 5.316 200.215 5.305 200.152 cv
5.289 200.094 5.281 200.023 5.285 199.934 cv
5.281 199.855 5.289 199.781 5.305 199.719 cv
5.316 199.66 5.332 199.613 5.355 199.574 cv
5.371 199.539 5.398 199.508 5.43 199.484 cv
5.461 199.465 5.492 199.457 5.531 199.453 cv
7.383 199.453 li
7.383 192.707 li
5.668 193.727 li
5.578 193.777 5.508 193.805 5.461 193.812 cv
5.406 193.82 5.363 193.812 5.332 193.781 cv
5.297 193.754 5.277 193.703 5.266 193.633 cv
5.254 193.566 5.246 193.48 5.25 193.371 cv
5.246 193.297 5.25 193.23 5.262 193.172 cv
5.266 193.121 5.277 193.074 5.293 193.035 cv
5.305 193 5.324 192.969 5.348 192.941 cv
5.371 192.914 5.402 192.887 5.449 192.859 cv
7.492 191.547 li
7.508 191.535 7.527 191.523 7.559 191.516 cv
7.582 191.508 7.617 191.5 7.664 191.488 cv
7.703 191.48 7.754 191.473 7.809 191.469 cv
7.863 191.469 7.93 191.469 8.016 191.465 cv
8.121 191.469 8.215 191.473 8.289 191.48 cv
8.359 191.488 8.414 191.504 8.461 191.52 cv
8.5 191.539 8.527 191.559 8.543 191.582 cv
8.551 191.609 8.559 191.633 8.563 191.656 cv
8.563 199.453 li
10.168 199.453 li
10.203 199.457 10.238 199.465 10.27 199.484 cv
10.301 199.508 10.324 199.539 10.348 199.574 cv
10.363 199.613 10.379 199.66 10.395 199.719 cv
10.402 199.781 10.41 199.855 10.414 199.934 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.703 197.527 mo
17.703 197.918 17.641 198.297 17.523 198.656 cv
17.398 199.023 17.215 199.34 16.973 199.613 cv
16.723 199.891 16.41 200.113 16.035 200.277 cv
15.652 200.445 15.207 200.527 14.691 200.527 cv
14.32 200.527 13.992 200.484 13.711 200.391 cv
13.426 200.305 13.18 200.172 12.969 200 cv
12.758 199.832 12.582 199.625 12.445 199.379 cv
12.305 199.133 12.191 198.852 12.109 198.535 cv
12.023 198.223 11.965 197.879 11.93 197.5 cv
11.891 197.129 11.871 196.727 11.875 196.293 cv
11.871 195.914 11.891 195.531 11.934 195.141 cv
11.973 194.758 12.047 194.383 12.152 194.016 cv
12.258 193.656 12.402 193.316 12.582 193 cv
12.762 192.684 12.988 192.406 13.262 192.172 cv
13.535 191.937 13.859 191.75 14.238 191.609 cv
14.617 191.473 15.059 191.406 15.563 191.402 cv
15.73 191.406 15.902 191.414 16.074 191.434 cv
16.246 191.457 16.406 191.488 16.555 191.52 cv
16.703 191.559 16.824 191.594 16.926 191.633 cv
17.023 191.672 17.09 191.707 17.125 191.73 cv
17.152 191.758 17.176 191.785 17.195 191.812 cv
17.211 191.844 17.227 191.875 17.234 191.91 cv
17.242 191.945 17.246 191.984 17.254 192.027 cv
17.254 192.07 17.258 192.125 17.262 192.187 cv
17.258 192.273 17.258 192.344 17.258 192.398 cv
17.254 192.461 17.242 192.508 17.23 192.543 cv
17.211 192.582 17.191 192.609 17.168 192.625 cv
17.141 192.645 17.109 192.652 17.07 192.652 cv
17.02 192.652 16.949 192.637 16.863 192.605 cv
16.773 192.574 16.668 192.539 16.547 192.496 cv
16.422 192.461 16.273 192.426 16.098 192.391 cv
15.922 192.363 15.719 192.348 15.488 192.344 cv
15.059 192.348 14.691 192.434 14.387 192.605 cv
14.082 192.777 13.832 193.012 13.637 193.305 cv
13.441 193.598 13.297 193.937 13.207 194.32 cv
13.109 194.711 13.055 195.113 13.047 195.531 cv
13.164 195.465 13.301 195.398 13.449 195.328 cv
13.598 195.262 13.758 195.199 13.934 195.141 cv
14.109 195.09 14.297 195.043 14.492 195.008 cv
14.688 194.977 14.898 194.961 15.125 194.957 cv
15.602 194.961 16.004 195.027 16.336 195.152 cv
16.664 195.285 16.93 195.465 17.137 195.695 cv
17.336 195.926 17.48 196.195 17.57 196.508 cv
17.656 196.82 17.703 197.16 17.703 197.527 cv
cp
16.508 197.637 mo
16.508 197.375 16.48 197.133 16.43 196.914 cv
16.375 196.699 16.285 196.516 16.164 196.359 cv
16.039 196.211 15.875 196.094 15.672 196.012 cv
15.461 195.93 15.207 195.887 14.91 195.887 cv
14.738 195.887 14.57 195.902 14.402 195.934 cv
14.23 195.965 14.066 196.008 13.91 196.055 cv
13.75 196.109 13.602 196.172 13.461 196.242 cv
13.316 196.316 13.184 196.391 13.066 196.469 cv
13.063 197.062 13.102 197.559 13.18 197.953 cv
13.254 198.352 13.363 198.668 13.508 198.906 cv
13.652 199.148 13.832 199.32 14.047 199.422 cv
14.262 199.527 14.512 199.578 14.801 199.574 cv
15.09 199.578 15.344 199.523 15.559 199.41 cv
15.773 199.305 15.949 199.156 16.094 198.969 cv
16.234 198.785 16.34 198.578 16.406 198.348 cv
16.473 198.117 16.508 197.883 16.508 197.637 cv
cp
f
4.051 166.059 mo
18.239 166.059 li
18.239 183.149 li
4.051 183.149 li
cp
0 0 0 0 cmyk
ef
10.414 178.957 mo
10.41 179.047 10.402 179.117 10.391 179.176 cv
10.375 179.238 10.355 179.289 10.336 179.32 cv
10.313 179.359 10.289 179.383 10.258 179.398 cv
10.227 179.414 10.195 179.422 10.168 179.422 cv
5.531 179.422 li
5.496 179.422 5.469 179.414 5.441 179.398 cv
5.414 179.383 5.387 179.359 5.363 179.32 cv
5.336 179.289 5.316 179.238 5.305 179.176 cv
5.289 179.117 5.281 179.047 5.285 178.957 cv
5.281 178.879 5.289 178.805 5.305 178.742 cv
5.316 178.684 5.332 178.637 5.355 178.598 cv
5.371 178.562 5.398 178.531 5.43 178.508 cv
5.461 178.488 5.492 178.48 5.531 178.477 cv
7.383 178.477 li
7.383 171.73 li
5.668 172.75 li
5.578 172.801 5.508 172.828 5.461 172.836 cv
5.406 172.844 5.363 172.836 5.332 172.805 cv
5.297 172.777 5.277 172.727 5.266 172.656 cv
5.254 172.59 5.246 172.504 5.25 172.395 cv
5.246 172.32 5.25 172.254 5.262 172.195 cv
5.266 172.145 5.277 172.098 5.293 172.059 cv
5.305 172.023 5.324 171.992 5.348 171.965 cv
5.371 171.937 5.402 171.91 5.449 171.883 cv
7.492 170.57 li
7.508 170.559 7.527 170.547 7.559 170.539 cv
7.582 170.531 7.617 170.523 7.664 170.512 cv
7.703 170.504 7.754 170.496 7.809 170.492 cv
7.863 170.492 7.93 170.492 8.016 170.488 cv
8.121 170.492 8.215 170.496 8.289 170.504 cv
8.359 170.512 8.414 170.527 8.461 170.543 cv
8.5 170.562 8.527 170.582 8.543 170.605 cv
8.551 170.633 8.559 170.656 8.563 170.68 cv
8.563 178.477 li
10.168 178.477 li
10.203 178.48 10.238 178.488 10.27 178.508 cv
10.301 178.531 10.324 178.562 10.348 178.598 cv
10.363 178.637 10.379 178.684 10.395 178.742 cv
10.402 178.805 10.41 178.879 10.414 178.957 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.605 171.059 mo
17.602 171.145 17.598 171.219 17.594 171.281 cv
17.586 171.352 17.578 171.414 17.566 171.473 cv
17.555 171.539 17.539 171.598 17.52 171.652 cv
17.496 171.711 17.473 171.773 17.449 171.832 cv
14.254 179.195 li
14.227 179.254 14.199 179.297 14.168 179.328 cv
14.133 179.363 14.09 179.391 14.035 179.41 cv
13.98 179.43 13.91 179.441 13.832 179.453 cv
13.746 179.457 13.648 179.461 13.531 179.465 cv
13.375 179.461 13.254 179.453 13.168 179.441 cv
13.082 179.426 13.02 179.41 12.98 179.379 cv
12.941 179.352 12.922 179.312 12.93 179.27 cv
12.93 179.227 12.945 179.176 12.977 179.113 cv
16.336 171.586 li
12.078 171.586 li
11.992 171.59 11.926 171.543 11.883 171.449 cv
11.84 171.359 11.82 171.23 11.82 171.066 cv
11.82 170.98 11.824 170.906 11.836 170.84 cv
11.848 170.777 11.863 170.723 11.887 170.68 cv
11.906 170.637 11.934 170.605 11.969 170.582 cv
12 170.562 12.039 170.551 12.078 170.551 cv
17.25 170.551 li
17.309 170.551 17.363 170.559 17.414 170.574 cv
17.461 170.59 17.496 170.617 17.523 170.656 cv
17.547 170.695 17.566 170.75 17.582 170.812 cv
17.594 170.879 17.602 170.961 17.605 171.059 cv
cp
f
4.051 145.07 mo
18.239 145.07 li
18.239 162.16 li
4.051 162.16 li
cp
0 0 0 0 cmyk
ef
10.414 157.957 mo
10.41 158.047 10.402 158.117 10.391 158.176 cv
10.375 158.238 10.355 158.289 10.336 158.32 cv
10.313 158.359 10.289 158.383 10.258 158.398 cv
10.227 158.414 10.195 158.422 10.168 158.422 cv
5.531 158.422 li
5.496 158.422 5.469 158.414 5.441 158.398 cv
5.414 158.383 5.387 158.359 5.363 158.32 cv
5.336 158.289 5.316 158.238 5.305 158.176 cv
5.289 158.117 5.281 158.047 5.285 157.957 cv
5.281 157.879 5.289 157.805 5.305 157.742 cv
5.316 157.684 5.332 157.637 5.355 157.598 cv
5.371 157.562 5.398 157.531 5.43 157.508 cv
5.461 157.488 5.492 157.48 5.531 157.477 cv
7.383 157.477 li
7.383 150.73 li
5.668 151.75 li
5.578 151.801 5.508 151.828 5.461 151.836 cv
5.406 151.844 5.363 151.836 5.332 151.805 cv
5.297 151.777 5.277 151.727 5.266 151.656 cv
5.254 151.59 5.246 151.504 5.25 151.395 cv
5.246 151.32 5.25 151.254 5.262 151.195 cv
5.266 151.145 5.277 151.098 5.293 151.059 cv
5.305 151.023 5.324 150.992 5.348 150.965 cv
5.371 150.937 5.402 150.91 5.449 150.883 cv
7.492 149.57 li
7.508 149.559 7.527 149.547 7.559 149.539 cv
7.582 149.531 7.617 149.523 7.664 149.512 cv
7.703 149.504 7.754 149.496 7.809 149.492 cv
7.863 149.492 7.93 149.492 8.016 149.488 cv
8.121 149.492 8.215 149.496 8.289 149.504 cv
8.359 149.512 8.414 149.527 8.461 149.543 cv
8.5 149.562 8.527 149.582 8.543 149.605 cv
8.551 149.633 8.559 149.656 8.563 149.68 cv
8.563 157.477 li
10.168 157.477 li
10.203 157.48 10.238 157.488 10.27 157.508 cv
10.301 157.531 10.324 157.562 10.348 157.598 cv
10.363 157.637 10.379 157.684 10.395 157.742 cv
10.402 157.805 10.41 157.879 10.414 157.957 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.68 156.145 mo
17.68 156.531 17.609 156.875 17.473 157.172 cv
17.336 157.477 17.141 157.727 16.883 157.93 cv
16.625 158.137 16.305 158.293 15.926 158.395 cv
15.543 158.5 15.109 158.551 14.625 158.551 cv
14.164 158.551 13.754 158.504 13.395 158.41 cv
13.031 158.316 12.727 158.176 12.477 157.984 cv
12.227 157.801 12.035 157.57 11.902 157.293 cv
11.77 157.02 11.703 156.707 11.703 156.352 cv
11.703 156.078 11.746 155.82 11.84 155.586 cv
11.926 155.352 12.059 155.137 12.234 154.941 cv
12.402 154.746 12.613 154.562 12.867 154.387 cv
13.117 154.219 13.402 154.055 13.719 153.898 cv
13.445 153.758 13.203 153.609 12.992 153.449 cv
12.781 153.293 12.602 153.121 12.457 152.934 cv
12.309 152.75 12.199 152.555 12.125 152.344 cv
12.047 152.137 12.008 151.906 12.012 151.656 cv
12.008 151.348 12.063 151.055 12.18 150.781 cv
12.289 150.512 12.461 150.277 12.688 150.074 cv
12.914 149.875 13.199 149.715 13.551 149.598 cv
13.895 149.48 14.305 149.422 14.773 149.422 cv
15.219 149.422 15.605 149.477 15.934 149.582 cv
16.262 149.691 16.531 149.836 16.742 150.02 cv
16.953 150.207 17.109 150.426 17.215 150.676 cv
17.313 150.926 17.363 151.195 17.367 151.484 cv
17.363 151.719 17.324 151.945 17.254 152.156 cv
17.176 152.375 17.066 152.578 16.918 152.766 cv
16.77 152.961 16.59 153.141 16.379 153.305 cv
16.168 153.477 15.926 153.633 15.652 153.773 cv
15.973 153.937 16.258 154.102 16.516 154.27 cv
16.766 154.437 16.98 154.617 17.156 154.812 cv
17.324 155.008 17.453 155.215 17.547 155.43 cv
17.633 155.648 17.68 155.887 17.68 156.145 cv
cp
16.199 151.594 mo
16.195 151.406 16.164 151.23 16.098 151.074 cv
16.031 150.918 15.934 150.785 15.809 150.676 cv
15.68 150.566 15.52 150.484 15.332 150.426 cv
15.137 150.371 14.922 150.344 14.684 150.34 cv
14.188 150.344 13.813 150.453 13.563 150.676 cv
13.305 150.902 13.18 151.211 13.184 151.594 cv
13.18 151.773 13.211 151.937 13.273 152.09 cv
13.336 152.246 13.43 152.391 13.563 152.527 cv
13.688 152.664 13.852 152.797 14.055 152.926 cv
14.25 153.059 14.488 153.195 14.766 153.336 cv
15.227 153.102 15.582 152.84 15.828 152.547 cv
16.074 152.262 16.195 151.945 16.199 151.594 cv
cp
16.488 156.27 mo
16.484 156.062 16.445 155.871 16.371 155.699 cv
16.289 155.531 16.172 155.371 16.016 155.219 cv
15.859 155.07 15.66 154.926 15.426 154.785 cv
15.188 154.648 14.918 154.504 14.609 154.352 cv
14.32 154.496 14.066 154.637 13.852 154.777 cv
13.633 154.918 13.453 155.066 13.316 155.215 cv
13.176 155.371 13.07 155.527 13 155.691 cv
12.926 155.859 12.891 156.043 12.895 156.242 cv
12.891 156.687 13.043 157.031 13.352 157.27 cv
13.652 157.516 14.105 157.637 14.711 157.633 cv
15.293 157.637 15.738 157.516 16.039 157.266 cv
16.336 157.023 16.484 156.691 16.488 156.27 cv
cp
f
4.051 124.09 mo
18.239 124.09 li
18.239 141.18 li
4.051 141.18 li
cp
0 0 0 0 cmyk
ef
10.414 136.957 mo
10.41 137.047 10.402 137.117 10.391 137.176 cv
10.375 137.238 10.355 137.289 10.336 137.32 cv
10.313 137.359 10.289 137.383 10.258 137.398 cv
10.227 137.414 10.195 137.422 10.168 137.422 cv
5.531 137.422 li
5.496 137.422 5.469 137.414 5.441 137.398 cv
5.414 137.383 5.387 137.359 5.363 137.32 cv
5.336 137.289 5.316 137.238 5.305 137.176 cv
5.289 137.117 5.281 137.047 5.285 136.957 cv
5.281 136.879 5.289 136.805 5.305 136.742 cv
5.316 136.684 5.332 136.637 5.355 136.598 cv
5.371 136.562 5.398 136.531 5.43 136.508 cv
5.461 136.488 5.492 136.48 5.531 136.477 cv
7.383 136.477 li
7.383 129.73 li
5.668 130.75 li
5.578 130.801 5.508 130.828 5.461 130.836 cv
5.406 130.844 5.363 130.836 5.332 130.805 cv
5.297 130.777 5.277 130.727 5.266 130.656 cv
5.254 130.59 5.246 130.504 5.25 130.395 cv
5.246 130.32 5.25 130.254 5.262 130.195 cv
5.266 130.145 5.277 130.098 5.293 130.059 cv
5.305 130.023 5.324 129.992 5.348 129.965 cv
5.371 129.937 5.402 129.91 5.449 129.883 cv
7.492 128.57 li
7.508 128.559 7.527 128.547 7.559 128.539 cv
7.582 128.531 7.617 128.523 7.664 128.512 cv
7.703 128.504 7.754 128.496 7.809 128.492 cv
7.863 128.492 7.93 128.492 8.016 128.488 cv
8.121 128.492 8.215 128.496 8.289 128.504 cv
8.359 128.512 8.414 128.527 8.461 128.543 cv
8.5 128.562 8.527 128.582 8.543 128.605 cv
8.551 128.633 8.559 128.656 8.563 128.68 cv
8.563 136.477 li
10.168 136.477 li
10.203 136.48 10.238 136.488 10.27 136.508 cv
10.301 136.531 10.324 136.562 10.348 136.598 cv
10.363 136.637 10.379 136.684 10.395 136.742 cv
10.402 136.805 10.41 136.879 10.414 136.957 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.543 132.637 mo
17.539 133.023 17.516 133.41 17.473 133.801 cv
17.426 134.195 17.348 134.574 17.242 134.937 cv
17.129 135.301 16.984 135.641 16.801 135.957 cv
16.613 136.277 16.379 136.559 16.102 136.793 cv
15.816 137.035 15.48 137.219 15.098 137.352 cv
14.707 137.484 14.262 137.551 13.754 137.551 cv
13.555 137.551 13.363 137.535 13.18 137.512 cv
12.992 137.484 12.824 137.457 12.68 137.422 cv
12.527 137.387 12.402 137.348 12.305 137.305 cv
12.203 137.266 12.129 137.227 12.086 137.184 cv
12.039 137.145 12.008 137.09 11.988 137.016 cv
11.965 136.945 11.953 136.848 11.957 136.73 cv
11.953 136.629 11.957 136.551 11.965 136.492 cv
11.969 136.434 11.98 136.387 11.996 136.355 cv
12.012 136.324 12.031 136.305 12.055 136.289 cv
12.078 136.281 12.109 136.273 12.148 136.27 cv
12.195 136.273 12.266 136.289 12.359 136.32 cv
12.449 136.355 12.563 136.395 12.707 136.434 cv
12.844 136.477 13.008 136.516 13.195 136.547 cv
13.379 136.586 13.59 136.602 13.828 136.598 cv
14.27 136.602 14.648 136.516 14.969 136.344 cv
15.281 136.172 15.543 135.945 15.746 135.656 cv
15.949 135.371 16.098 135.035 16.199 134.652 cv
16.297 134.273 16.352 133.875 16.363 133.453 cv
16.117 133.598 15.828 133.723 15.492 133.828 cv
15.152 133.941 14.766 133.996 14.328 133.992 cv
13.836 133.996 13.422 133.93 13.086 133.793 cv
12.75 133.66 12.477 133.477 12.273 133.242 cv
12.066 133.012 11.922 132.734 11.836 132.41 cv
11.746 132.094 11.703 131.742 11.703 131.363 cv
11.703 130.973 11.758 130.602 11.875 130.242 cv
11.984 129.891 12.164 129.578 12.41 129.309 cv
12.648 129.039 12.957 128.824 13.336 128.664 cv
13.707 128.504 14.156 128.422 14.68 128.422 cv
15.047 128.422 15.371 128.469 15.66 128.562 cv
15.941 128.656 16.191 128.793 16.406 128.969 cv
16.613 129.145 16.793 129.355 16.941 129.605 cv
17.086 129.855 17.203 130.137 17.293 130.449 cv
17.379 130.766 17.441 131.109 17.484 131.477 cv
17.52 131.848 17.539 132.234 17.543 132.637 cv
cp
16.344 132.508 mo
16.344 131.926 16.305 131.434 16.227 131.031 cv
16.148 130.633 16.031 130.309 15.883 130.059 cv
15.73 129.812 15.547 129.633 15.328 129.523 cv
15.105 129.414 14.852 129.359 14.57 129.359 cv
14.266 129.359 14.012 129.414 13.805 129.523 cv
13.594 129.633 13.422 129.777 13.289 129.953 cv
13.152 130.137 13.051 130.34 12.988 130.566 cv
12.922 130.797 12.891 131.035 12.895 131.273 cv
12.891 131.547 12.922 131.793 12.98 132.012 cv
13.035 132.238 13.125 132.426 13.258 132.582 cv
13.383 132.738 13.551 132.859 13.758 132.945 cv
13.961 133.031 14.215 133.074 14.52 133.07 cv
14.859 133.074 15.191 133.023 15.516 132.918 cv
15.832 132.816 16.109 132.68 16.344 132.508 cv
cp
f
4.051 103.102 mo
18.239 103.102 li
18.239 120.192 li
4.051 120.192 li
cp
0 0 0 0 cmyk
ef
10.395 115.941 mo
10.391 116.027 10.387 116.102 10.375 116.164 cv
10.363 116.23 10.348 116.285 10.328 116.324 cv
10.305 116.371 10.277 116.402 10.246 116.418 cv
10.211 116.441 10.172 116.449 10.133 116.449 cv
5.23 116.449 li
5.168 116.449 5.109 116.441 5.063 116.426 cv
5.012 116.41 4.973 116.387 4.938 116.348 cv
4.902 116.316 4.875 116.262 4.863 116.191 cv
4.844 116.121 4.836 116.035 4.84 115.934 cv
4.836 115.844 4.84 115.766 4.848 115.695 cv
4.852 115.629 4.867 115.57 4.895 115.516 cv
4.918 115.465 4.949 115.41 4.984 115.355 cv
5.02 115.305 5.063 115.25 5.121 115.187 cv
6.895 113.363 li
7.305 112.945 7.633 112.57 7.883 112.234 cv
8.129 111.906 8.32 111.602 8.453 111.324 cv
8.586 111.051 8.672 110.801 8.719 110.574 cv
8.758 110.352 8.781 110.141 8.781 109.945 cv
8.781 109.75 8.746 109.566 8.68 109.387 cv
8.613 109.215 8.52 109.059 8.395 108.922 cv
8.27 108.793 8.113 108.687 7.926 108.605 cv
7.738 108.531 7.52 108.492 7.273 108.488 cv
6.984 108.492 6.727 108.531 6.5 108.605 cv
6.27 108.687 6.07 108.773 5.898 108.859 cv
5.727 108.953 5.582 109.035 5.465 109.113 cv
5.348 109.191 5.262 109.23 5.211 109.23 cv
5.176 109.23 5.145 109.223 5.121 109.203 cv
5.09 109.187 5.07 109.156 5.055 109.113 cv
5.039 109.074 5.023 109.02 5.016 108.949 cv
5.004 108.883 5 108.801 5.004 108.703 cv
5 108.637 5.004 108.578 5.012 108.527 cv
5.016 108.477 5.023 108.434 5.035 108.395 cv
5.043 108.359 5.059 108.324 5.078 108.293 cv
5.098 108.262 5.133 108.223 5.191 108.172 cv
5.242 108.125 5.336 108.059 5.473 107.977 cv
5.605 107.895 5.777 107.816 5.98 107.734 cv
6.184 107.656 6.406 107.586 6.652 107.531 cv
6.895 107.477 7.152 107.449 7.426 107.449 cv
7.852 107.449 8.227 107.512 8.551 107.633 cv
8.871 107.754 9.137 107.918 9.352 108.129 cv
9.563 108.34 9.723 108.586 9.828 108.859 cv
9.934 109.141 9.988 109.437 9.988 109.75 cv
9.988 110.039 9.961 110.32 9.91 110.598 cv
9.859 110.883 9.754 111.187 9.594 111.512 cv
9.43 111.84 9.195 112.203 8.891 112.602 cv
8.582 113.004 8.176 113.465 7.672 113.98 cv
6.266 115.449 li
10.125 115.449 li
10.156 115.453 10.191 115.465 10.23 115.48 cv
10.262 115.504 10.293 115.535 10.32 115.574 cv
10.344 115.617 10.363 115.668 10.375 115.727 cv
10.387 115.793 10.391 115.863 10.395 115.941 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.77 111.992 mo
17.766 112.676 17.715 113.297 17.609 113.859 cv
17.5 114.422 17.32 114.906 17.074 115.309 cv
16.82 115.715 16.492 116.027 16.094 116.246 cv
15.688 116.469 15.195 116.578 14.609 116.578 cv
14.051 116.578 13.578 116.48 13.199 116.281 cv
12.816 116.086 12.512 115.793 12.277 115.406 cv
12.043 115.02 11.875 114.547 11.781 113.98 cv
11.68 113.418 11.633 112.77 11.633 112.035 cv
11.633 111.363 11.688 110.742 11.797 110.176 cv
11.906 109.613 12.082 109.129 12.332 108.723 cv
12.574 108.32 12.898 108.008 13.305 107.781 cv
13.703 107.562 14.199 107.449 14.789 107.449 cv
15.348 107.449 15.82 107.551 16.203 107.746 cv
16.586 107.949 16.891 108.242 17.125 108.625 cv
17.355 109.016 17.523 109.488 17.621 110.051 cv
17.719 110.613 17.766 111.262 17.77 111.992 cv
cp
16.563 112.074 mo
16.559 111.633 16.543 111.234 16.516 110.883 cv
16.48 110.531 16.434 110.223 16.375 109.953 cv
16.309 109.684 16.23 109.453 16.133 109.258 cv
16.035 109.066 15.918 108.906 15.781 108.777 cv
15.641 108.652 15.48 108.559 15.309 108.5 cv
15.129 108.445 14.934 108.418 14.719 108.414 cv
14.328 108.418 14.012 108.508 13.773 108.691 cv
13.527 108.875 13.336 109.129 13.199 109.445 cv
13.059 109.766 12.965 110.137 12.914 110.566 cv
12.863 110.996 12.84 111.461 12.84 111.953 cv
12.84 112.617 12.871 113.18 12.941 113.641 cv
13.008 114.109 13.117 114.488 13.27 114.777 cv
13.414 115.074 13.605 115.285 13.836 115.414 cv
14.066 115.551 14.348 115.617 14.68 115.613 cv
14.934 115.617 15.156 115.578 15.352 115.492 cv
15.543 115.414 15.711 115.293 15.852 115.137 cv
15.992 114.984 16.105 114.801 16.199 114.586 cv
16.285 114.371 16.359 114.133 16.418 113.871 cv
16.469 113.613 16.508 113.332 16.531 113.027 cv
16.551 112.723 16.559 112.406 16.563 112.074 cv
cp
f
4.051 82.109 mo
18.239 82.109 li
18.239 99.199 li
4.051 99.199 li
cp
0 0 0 0 cmyk
ef
10.395 94.941 mo
10.391 95.027 10.387 95.102 10.375 95.164 cv
10.363 95.23 10.348 95.285 10.328 95.324 cv
10.305 95.371 10.277 95.402 10.246 95.418 cv
10.211 95.441 10.172 95.449 10.133 95.449 cv
5.23 95.449 li
5.168 95.449 5.109 95.441 5.063 95.426 cv
5.012 95.41 4.973 95.387 4.938 95.348 cv
4.902 95.316 4.875 95.262 4.863 95.191 cv
4.844 95.121 4.836 95.035 4.84 94.934 cv
4.836 94.844 4.84 94.766 4.848 94.695 cv
4.852 94.629 4.867 94.57 4.895 94.516 cv
4.918 94.465 4.949 94.41 4.984 94.355 cv
5.02 94.305 5.063 94.25 5.121 94.187 cv
6.895 92.363 li
7.305 91.945 7.633 91.57 7.883 91.234 cv
8.129 90.906 8.32 90.602 8.453 90.324 cv
8.586 90.051 8.672 89.801 8.719 89.574 cv
8.758 89.352 8.781 89.141 8.781 88.945 cv
8.781 88.75 8.746 88.566 8.68 88.387 cv
8.613 88.215 8.52 88.059 8.395 87.922 cv
8.27 87.793 8.113 87.687 7.926 87.605 cv
7.738 87.531 7.52 87.492 7.273 87.488 cv
6.984 87.492 6.727 87.531 6.5 87.605 cv
6.27 87.687 6.07 87.773 5.898 87.859 cv
5.727 87.953 5.582 88.035 5.465 88.113 cv
5.348 88.191 5.262 88.23 5.211 88.23 cv
5.176 88.23 5.145 88.223 5.121 88.203 cv
5.09 88.187 5.07 88.156 5.055 88.113 cv
5.039 88.074 5.023 88.02 5.016 87.949 cv
5.004 87.883 5 87.801 5.004 87.703 cv
5 87.637 5.004 87.578 5.012 87.527 cv
5.016 87.477 5.023 87.434 5.035 87.395 cv
5.043 87.359 5.059 87.324 5.078 87.293 cv
5.098 87.262 5.133 87.223 5.191 87.172 cv
5.242 87.125 5.336 87.059 5.473 86.977 cv
5.605 86.895 5.777 86.816 5.98 86.734 cv
6.184 86.656 6.406 86.586 6.652 86.531 cv
6.895 86.477 7.152 86.449 7.426 86.449 cv
7.852 86.449 8.227 86.512 8.551 86.633 cv
8.871 86.754 9.137 86.918 9.352 87.129 cv
9.563 87.34 9.723 87.586 9.828 87.859 cv
9.934 88.141 9.988 88.437 9.988 88.75 cv
9.988 89.039 9.961 89.32 9.91 89.598 cv
9.859 89.883 9.754 90.187 9.594 90.512 cv
9.43 90.84 9.195 91.203 8.891 91.602 cv
8.582 92.004 8.176 92.465 7.672 92.98 cv
6.266 94.449 li
10.125 94.449 li
10.156 94.453 10.191 94.465 10.23 94.48 cv
10.262 94.504 10.293 94.535 10.32 94.574 cv
10.344 94.617 10.363 94.668 10.375 94.727 cv
10.387 94.793 10.391 94.863 10.395 94.941 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.496 94.984 mo
17.492 95.074 17.484 95.145 17.473 95.203 cv
17.457 95.266 17.438 95.316 17.418 95.348 cv
17.395 95.387 17.371 95.41 17.34 95.426 cv
17.309 95.441 17.277 95.449 17.25 95.449 cv
12.613 95.449 li
12.578 95.449 12.551 95.441 12.523 95.426 cv
12.496 95.41 12.469 95.387 12.445 95.348 cv
12.418 95.316 12.398 95.266 12.387 95.203 cv
12.371 95.145 12.363 95.074 12.367 94.984 cv
12.363 94.906 12.371 94.832 12.387 94.77 cv
12.398 94.711 12.414 94.664 12.438 94.625 cv
12.453 94.59 12.48 94.559 12.512 94.535 cv
12.543 94.516 12.574 94.508 12.613 94.504 cv
14.465 94.504 li
14.465 87.758 li
12.75 88.777 li
12.66 88.828 12.59 88.855 12.543 88.863 cv
12.488 88.871 12.445 88.863 12.414 88.832 cv
12.379 88.805 12.359 88.754 12.348 88.684 cv
12.336 88.617 12.328 88.531 12.332 88.422 cv
12.328 88.348 12.332 88.281 12.344 88.223 cv
12.348 88.172 12.359 88.125 12.375 88.086 cv
12.387 88.051 12.406 88.02 12.43 87.992 cv
12.453 87.965 12.484 87.937 12.531 87.91 cv
14.574 86.598 li
14.59 86.586 14.609 86.574 14.641 86.566 cv
14.664 86.559 14.699 86.551 14.746 86.539 cv
14.785 86.531 14.836 86.523 14.891 86.52 cv
14.945 86.52 15.012 86.52 15.098 86.516 cv
15.203 86.52 15.297 86.523 15.371 86.531 cv
15.441 86.539 15.496 86.555 15.543 86.57 cv
15.582 86.59 15.609 86.609 15.625 86.633 cv
15.633 86.66 15.641 86.684 15.645 86.707 cv
15.645 94.504 li
17.25 94.504 li
17.285 94.508 17.32 94.516 17.352 94.535 cv
17.383 94.559 17.406 94.59 17.43 94.625 cv
17.445 94.664 17.461 94.711 17.477 94.77 cv
17.484 94.832 17.492 94.906 17.496 94.984 cv
cp
f
4.051 61.121 mo
18.239 61.121 li
18.239 78.211 li
4.051 78.211 li
cp
0 0 0 0 cmyk
ef
10.395 73.941 mo
10.391 74.027 10.387 74.102 10.375 74.164 cv
10.363 74.23 10.348 74.285 10.328 74.324 cv
10.305 74.371 10.277 74.402 10.246 74.418 cv
10.211 74.441 10.172 74.449 10.133 74.449 cv
5.23 74.449 li
5.168 74.449 5.109 74.441 5.063 74.426 cv
5.012 74.41 4.973 74.387 4.938 74.348 cv
4.902 74.316 4.875 74.262 4.863 74.191 cv
4.844 74.121 4.836 74.035 4.84 73.934 cv
4.836 73.844 4.84 73.766 4.848 73.695 cv
4.852 73.629 4.867 73.57 4.895 73.516 cv
4.918 73.465 4.949 73.41 4.984 73.355 cv
5.02 73.305 5.063 73.25 5.121 73.187 cv
6.895 71.363 li
7.305 70.945 7.633 70.57 7.883 70.234 cv
8.129 69.906 8.32 69.602 8.453 69.324 cv
8.586 69.051 8.672 68.801 8.719 68.574 cv
8.758 68.352 8.781 68.141 8.781 67.945 cv
8.781 67.75 8.746 67.566 8.68 67.387 cv
8.613 67.215 8.52 67.059 8.395 66.922 cv
8.27 66.793 8.113 66.687 7.926 66.605 cv
7.738 66.531 7.52 66.492 7.273 66.488 cv
6.984 66.492 6.727 66.531 6.5 66.605 cv
6.27 66.687 6.07 66.773 5.898 66.859 cv
5.727 66.953 5.582 67.035 5.465 67.113 cv
5.348 67.191 5.262 67.23 5.211 67.23 cv
5.176 67.23 5.145 67.223 5.121 67.203 cv
5.09 67.187 5.07 67.156 5.055 67.113 cv
5.039 67.074 5.023 67.02 5.016 66.949 cv
5.004 66.883 5 66.801 5.004 66.703 cv
5 66.637 5.004 66.578 5.012 66.527 cv
5.016 66.477 5.023 66.434 5.035 66.395 cv
5.043 66.359 5.059 66.324 5.078 66.293 cv
5.098 66.262 5.133 66.223 5.191 66.172 cv
5.242 66.125 5.336 66.059 5.473 65.977 cv
5.605 65.895 5.777 65.816 5.98 65.734 cv
6.184 65.656 6.406 65.586 6.652 65.531 cv
6.895 65.477 7.152 65.449 7.426 65.449 cv
7.852 65.449 8.227 65.512 8.551 65.633 cv
8.871 65.754 9.137 65.918 9.352 66.129 cv
9.563 66.34 9.723 66.586 9.828 66.859 cv
9.934 67.141 9.988 67.437 9.988 67.75 cv
9.988 68.039 9.961 68.32 9.91 68.598 cv
9.859 68.883 9.754 69.187 9.594 69.512 cv
9.43 69.84 9.195 70.203 8.891 70.602 cv
8.582 71.004 8.176 71.465 7.672 71.98 cv
6.266 73.449 li
10.125 73.449 li
10.156 73.453 10.191 73.465 10.23 73.48 cv
10.262 73.504 10.293 73.535 10.32 73.574 cv
10.344 73.617 10.363 73.668 10.375 73.727 cv
10.387 73.793 10.391 73.863 10.395 73.941 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.477 73.941 mo
17.473 74.027 17.469 74.102 17.457 74.164 cv
17.445 74.23 17.43 74.285 17.41 74.324 cv
17.387 74.371 17.359 74.402 17.328 74.418 cv
17.293 74.441 17.254 74.449 17.215 74.449 cv
12.313 74.449 li
12.25 74.449 12.191 74.441 12.145 74.426 cv
12.094 74.41 12.055 74.387 12.02 74.348 cv
11.984 74.316 11.957 74.262 11.945 74.191 cv
11.926 74.121 11.918 74.035 11.922 73.934 cv
11.918 73.844 11.922 73.766 11.93 73.695 cv
11.934 73.629 11.949 73.57 11.977 73.516 cv
12 73.465 12.031 73.41 12.066 73.355 cv
12.102 73.305 12.145 73.25 12.203 73.187 cv
13.977 71.363 li
14.387 70.945 14.715 70.57 14.965 70.234 cv
15.211 69.906 15.402 69.602 15.535 69.324 cv
15.668 69.051 15.754 68.801 15.801 68.574 cv
15.84 68.352 15.863 68.141 15.863 67.945 cv
15.863 67.75 15.828 67.566 15.762 67.387 cv
15.695 67.215 15.602 67.059 15.477 66.922 cv
15.352 66.793 15.195 66.687 15.008 66.605 cv
14.82 66.531 14.602 66.492 14.355 66.488 cv
14.066 66.492 13.809 66.531 13.582 66.605 cv
13.352 66.687 13.152 66.773 12.98 66.859 cv
12.809 66.953 12.664 67.035 12.547 67.113 cv
12.43 67.191 12.344 67.23 12.293 67.23 cv
12.258 67.23 12.227 67.223 12.203 67.203 cv
12.172 67.187 12.152 67.156 12.137 67.113 cv
12.121 67.074 12.105 67.02 12.098 66.949 cv
12.086 66.883 12.082 66.801 12.086 66.703 cv
12.082 66.637 12.086 66.578 12.094 66.527 cv
12.098 66.477 12.105 66.434 12.117 66.395 cv
12.125 66.359 12.141 66.324 12.16 66.293 cv
12.18 66.262 12.215 66.223 12.273 66.172 cv
12.324 66.125 12.418 66.059 12.555 65.977 cv
12.688 65.895 12.859 65.816 13.063 65.734 cv
13.266 65.656 13.488 65.586 13.734 65.531 cv
13.977 65.477 14.234 65.449 14.508 65.449 cv
14.934 65.449 15.309 65.512 15.633 65.633 cv
15.953 65.754 16.219 65.918 16.434 66.129 cv
16.645 66.34 16.805 66.586 16.91 66.859 cv
17.016 67.141 17.07 67.437 17.07 67.75 cv
17.07 68.039 17.043 68.32 16.992 68.598 cv
16.941 68.883 16.836 69.187 16.676 69.512 cv
16.512 69.84 16.277 70.203 15.973 70.602 cv
15.664 71.004 15.258 71.465 14.754 71.98 cv
13.348 73.449 li
17.207 73.449 li
17.238 73.453 17.273 73.465 17.313 73.48 cv
17.344 73.504 17.375 73.535 17.402 73.574 cv
17.426 73.617 17.445 73.668 17.457 73.727 cv
17.469 73.793 17.473 73.863 17.477 73.941 cv
cp
f
4.051 40.129 mo
18.239 40.129 li
18.239 57.219 li
4.051 57.219 li
cp
0 0 0 0 cmyk
ef
10.395 52.961 mo
10.391 53.047 10.387 53.121 10.375 53.184 cv
10.363 53.25 10.348 53.305 10.328 53.344 cv
10.305 53.391 10.277 53.422 10.246 53.437 cv
10.211 53.461 10.172 53.469 10.133 53.469 cv
5.23 53.469 li
5.168 53.469 5.109 53.461 5.063 53.445 cv
5.012 53.43 4.973 53.406 4.938 53.367 cv
4.902 53.336 4.875 53.281 4.863 53.211 cv
4.844 53.141 4.836 53.055 4.84 52.953 cv
4.836 52.863 4.84 52.785 4.848 52.715 cv
4.852 52.648 4.867 52.59 4.895 52.535 cv
4.918 52.484 4.949 52.43 4.984 52.375 cv
5.02 52.324 5.063 52.27 5.121 52.207 cv
6.895 50.383 li
7.305 49.965 7.633 49.59 7.883 49.254 cv
8.129 48.926 8.32 48.621 8.453 48.344 cv
8.586 48.07 8.672 47.82 8.719 47.594 cv
8.758 47.371 8.781 47.16 8.781 46.965 cv
8.781 46.77 8.746 46.586 8.68 46.406 cv
8.613 46.234 8.52 46.078 8.395 45.941 cv
8.27 45.812 8.113 45.707 7.926 45.625 cv
7.738 45.551 7.52 45.512 7.273 45.508 cv
6.984 45.512 6.727 45.551 6.5 45.625 cv
6.27 45.707 6.07 45.793 5.898 45.879 cv
5.727 45.973 5.582 46.055 5.465 46.133 cv
5.348 46.211 5.262 46.25 5.211 46.25 cv
5.176 46.25 5.145 46.242 5.121 46.223 cv
5.09 46.207 5.07 46.176 5.055 46.133 cv
5.039 46.094 5.023 46.039 5.016 45.969 cv
5.004 45.902 5 45.82 5.004 45.723 cv
5 45.656 5.004 45.598 5.012 45.547 cv
5.016 45.496 5.023 45.453 5.035 45.414 cv
5.043 45.379 5.059 45.344 5.078 45.312 cv
5.098 45.281 5.133 45.242 5.191 45.191 cv
5.242 45.145 5.336 45.078 5.473 44.996 cv
5.605 44.914 5.777 44.836 5.98 44.754 cv
6.184 44.676 6.406 44.605 6.652 44.551 cv
6.895 44.496 7.152 44.469 7.426 44.469 cv
7.852 44.469 8.227 44.531 8.551 44.652 cv
8.871 44.773 9.137 44.937 9.352 45.148 cv
9.563 45.359 9.723 45.605 9.828 45.879 cv
9.934 46.16 9.988 46.457 9.988 46.77 cv
9.988 47.059 9.961 47.34 9.91 47.617 cv
9.859 47.902 9.754 48.207 9.594 48.531 cv
9.43 48.859 9.195 49.223 8.891 49.621 cv
8.582 50.023 8.176 50.484 7.672 51 cv
6.266 52.469 li
10.125 52.469 li
10.156 52.473 10.191 52.484 10.23 52.5 cv
10.262 52.523 10.293 52.555 10.32 52.594 cv
10.344 52.637 10.363 52.687 10.375 52.746 cv
10.387 52.812 10.391 52.883 10.395 52.961 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.406 50.934 mo
17.402 51.344 17.332 51.711 17.191 52.035 cv
17.047 52.363 16.844 52.645 16.582 52.875 cv
16.316 53.109 15.988 53.285 15.602 53.41 cv
15.211 53.535 14.773 53.598 14.289 53.598 cv
13.984 53.598 13.707 53.57 13.453 53.523 cv
13.191 53.477 12.961 53.426 12.766 53.355 cv
12.563 53.293 12.398 53.223 12.266 53.152 cv
12.133 53.082 12.047 53.031 12.016 52.996 cv
11.977 52.969 11.953 52.937 11.938 52.902 cv
11.918 52.871 11.898 52.832 11.887 52.785 cv
11.871 52.742 11.863 52.687 11.855 52.617 cv
11.848 52.555 11.844 52.473 11.848 52.371 cv
11.844 52.211 11.859 52.098 11.895 52.031 cv
11.926 51.969 11.973 51.934 12.035 51.934 cv
12.078 51.934 12.16 51.973 12.285 52.043 cv
12.406 52.121 12.566 52.199 12.762 52.281 cv
12.953 52.367 13.18 52.445 13.445 52.516 cv
13.703 52.59 13.996 52.625 14.316 52.625 cv
14.625 52.625 14.895 52.586 15.133 52.508 cv
15.363 52.43 15.563 52.32 15.723 52.18 cv
15.879 52.039 15.996 51.871 16.078 51.676 cv
16.156 51.48 16.195 51.27 16.199 51.043 cv
16.195 50.793 16.145 50.566 16.047 50.363 cv
15.941 50.164 15.793 49.992 15.602 49.844 cv
15.402 49.699 15.164 49.586 14.879 49.508 cv
14.594 49.43 14.27 49.391 13.906 49.391 cv
13.035 49.391 li
12.992 49.391 12.957 49.383 12.922 49.367 cv
12.887 49.352 12.855 49.324 12.832 49.285 cv
12.805 49.25 12.785 49.203 12.77 49.145 cv
12.754 49.086 12.746 49.008 12.746 48.91 cv
12.746 48.824 12.75 48.754 12.766 48.695 cv
12.773 48.641 12.793 48.594 12.824 48.559 cv
12.848 48.523 12.879 48.5 12.91 48.48 cv
12.941 48.469 12.977 48.461 13.02 48.457 cv
13.793 48.457 li
14.094 48.461 14.363 48.422 14.605 48.34 cv
14.84 48.266 15.043 48.152 15.215 48.004 cv
15.379 47.859 15.508 47.684 15.598 47.48 cv
15.688 47.277 15.734 47.051 15.734 46.797 cv
15.734 46.617 15.703 46.441 15.645 46.273 cv
15.582 46.109 15.492 45.965 15.375 45.84 cv
15.254 45.715 15.102 45.617 14.922 45.547 cv
14.734 45.477 14.523 45.441 14.281 45.441 cv
14.016 45.441 13.77 45.484 13.551 45.562 cv
13.324 45.645 13.129 45.73 12.957 45.82 cv
12.781 45.914 12.637 46 12.523 46.078 cv
12.41 46.16 12.328 46.199 12.285 46.195 cv
12.25 46.199 12.223 46.191 12.199 46.18 cv
12.172 46.168 12.152 46.145 12.137 46.109 cv
12.121 46.078 12.109 46.031 12.102 45.965 cv
12.094 45.906 12.09 45.824 12.094 45.723 cv
12.09 45.656 12.09 45.598 12.098 45.543 cv
12.098 45.492 12.109 45.445 12.125 45.402 cv
12.141 45.367 12.156 45.332 12.176 45.297 cv
12.191 45.27 12.223 45.23 12.266 45.184 cv
12.309 45.141 12.395 45.078 12.531 44.996 cv
12.66 44.914 12.824 44.836 13.02 44.754 cv
13.211 44.676 13.434 44.605 13.691 44.551 cv
13.941 44.496 14.215 44.469 14.512 44.469 cv
14.918 44.469 15.281 44.523 15.594 44.625 cv
15.906 44.734 16.164 44.883 16.375 45.07 cv
16.578 45.266 16.734 45.496 16.84 45.762 cv
16.941 46.031 16.992 46.324 16.996 46.648 cv
16.992 46.93 16.957 47.191 16.887 47.426 cv
16.813 47.668 16.703 47.879 16.563 48.062 cv
16.418 48.25 16.246 48.406 16.043 48.535 cv
15.836 48.668 15.598 48.762 15.328 48.809 cv
15.328 48.82 li
15.633 48.855 15.914 48.93 16.168 49.051 cv
16.422 49.172 16.641 49.324 16.824 49.508 cv
17.004 49.691 17.145 49.906 17.25 50.148 cv
17.352 50.395 17.402 50.656 17.406 50.934 cv
cp
f
4.051 19.148 mo
18.239 19.148 li
18.239 36.238 li
4.051 36.238 li
cp
0 0 0 0 cmyk
ef
10.395 31.961 mo
10.391 32.047 10.387 32.121 10.375 32.184 cv
10.363 32.25 10.348 32.305 10.328 32.344 cv
10.305 32.391 10.277 32.422 10.246 32.437 cv
10.211 32.461 10.172 32.469 10.133 32.469 cv
5.23 32.469 li
5.168 32.469 5.109 32.461 5.063 32.445 cv
5.012 32.43 4.973 32.406 4.938 32.367 cv
4.902 32.336 4.875 32.281 4.863 32.211 cv
4.844 32.141 4.836 32.055 4.84 31.953 cv
4.836 31.863 4.84 31.785 4.848 31.715 cv
4.852 31.648 4.867 31.59 4.895 31.535 cv
4.918 31.484 4.949 31.43 4.984 31.375 cv
5.02 31.324 5.063 31.27 5.121 31.207 cv
6.895 29.383 li
7.305 28.965 7.633 28.59 7.883 28.254 cv
8.129 27.926 8.32 27.621 8.453 27.344 cv
8.586 27.07 8.672 26.82 8.719 26.594 cv
8.758 26.371 8.781 26.16 8.781 25.965 cv
8.781 25.77 8.746 25.586 8.68 25.406 cv
8.613 25.234 8.52 25.078 8.395 24.941 cv
8.27 24.812 8.113 24.707 7.926 24.625 cv
7.738 24.551 7.52 24.512 7.273 24.508 cv
6.984 24.512 6.727 24.551 6.5 24.625 cv
6.27 24.707 6.07 24.793 5.898 24.879 cv
5.727 24.973 5.582 25.055 5.465 25.133 cv
5.348 25.211 5.262 25.25 5.211 25.25 cv
5.176 25.25 5.145 25.242 5.121 25.223 cv
5.09 25.207 5.07 25.176 5.055 25.133 cv
5.039 25.094 5.023 25.039 5.016 24.969 cv
5.004 24.902 5 24.82 5.004 24.723 cv
5 24.656 5.004 24.598 5.012 24.547 cv
5.016 24.496 5.023 24.453 5.035 24.414 cv
5.043 24.379 5.059 24.344 5.078 24.312 cv
5.098 24.281 5.133 24.242 5.191 24.191 cv
5.242 24.145 5.336 24.078 5.473 23.996 cv
5.605 23.914 5.777 23.836 5.98 23.754 cv
6.184 23.676 6.406 23.605 6.652 23.551 cv
6.895 23.496 7.152 23.469 7.426 23.469 cv
7.852 23.469 8.227 23.531 8.551 23.652 cv
8.871 23.773 9.137 23.937 9.352 24.148 cv
9.563 24.359 9.723 24.605 9.828 24.879 cv
9.934 25.16 9.988 25.457 9.988 25.77 cv
9.988 26.059 9.961 26.34 9.91 26.617 cv
9.859 26.902 9.754 27.207 9.594 27.531 cv
9.43 27.859 9.195 28.223 8.891 28.621 cv
8.582 29.023 8.176 29.484 7.672 30 cv
6.266 31.469 li
10.125 31.469 li
10.156 31.473 10.191 31.484 10.23 31.5 cv
10.262 31.523 10.293 31.555 10.32 31.594 cv
10.344 31.637 10.363 31.687 10.375 31.746 cv
10.387 31.812 10.391 31.883 10.395 31.961 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
17.852 29.945 mo
17.848 30.098 17.824 30.219 17.781 30.305 cv
17.734 30.395 17.672 30.437 17.59 30.434 cv
16.59 30.434 li
16.59 32.297 li
16.59 32.336 16.578 32.367 16.563 32.391 cv
16.539 32.418 16.508 32.437 16.465 32.457 cv
16.414 32.473 16.352 32.484 16.281 32.496 cv
16.203 32.504 16.109 32.508 15.992 32.512 cv
15.875 32.508 15.777 32.504 15.707 32.496 cv
15.629 32.484 15.57 32.473 15.527 32.457 cv
15.48 32.437 15.449 32.418 15.434 32.391 cv
15.414 32.367 15.406 32.336 15.41 32.297 cv
15.41 30.434 li
11.781 30.434 li
11.723 30.437 11.68 30.43 11.645 30.414 cv
11.609 30.402 11.574 30.375 11.547 30.336 cv
11.516 30.301 11.496 30.25 11.484 30.18 cv
11.473 30.113 11.469 30.023 11.469 29.91 cv
11.469 29.828 11.469 29.75 11.477 29.68 cv
11.477 29.609 11.488 29.547 11.504 29.492 cv
11.516 29.437 11.531 29.383 11.559 29.328 cv
11.578 29.273 11.605 29.219 11.641 29.156 cv
14.801 23.77 li
14.82 23.734 14.855 23.703 14.902 23.676 cv
14.945 23.648 15 23.625 15.074 23.605 cv
15.141 23.59 15.227 23.578 15.332 23.566 cv
15.434 23.562 15.555 23.559 15.695 23.555 cv
15.844 23.559 15.98 23.562 16.098 23.574 cv
16.211 23.586 16.301 23.602 16.375 23.617 cv
16.441 23.637 16.496 23.66 16.535 23.691 cv
16.57 23.723 16.59 23.758 16.59 23.797 cv
16.59 29.461 li
17.59 29.461 li
17.664 29.465 17.727 29.504 17.777 29.582 cv
17.824 29.664 17.848 29.785 17.852 29.945 cv
cp
15.41 24.594 mo
15.398 24.594 li
12.547 29.461 li
15.41 29.461 li
cp
f
34.055 533.031 mo
34.051 533.121 34.043 533.191 34.031 533.25 cv
34.016 533.312 33.996 533.363 33.977 533.395 cv
33.953 533.434 33.93 533.457 33.898 533.473 cv
33.867 533.488 33.836 533.496 33.809 533.496 cv
29.172 533.496 li
29.137 533.496 29.109 533.488 29.082 533.473 cv
29.055 533.457 29.027 533.434 29.004 533.395 cv
28.977 533.363 28.957 533.312 28.945 533.25 cv
28.93 533.191 28.922 533.121 28.926 533.031 cv
28.922 532.953 28.93 532.879 28.945 532.816 cv
28.957 532.758 28.973 532.711 28.996 532.672 cv
29.012 532.637 29.039 532.605 29.07 532.582 cv
29.102 532.562 29.133 532.555 29.172 532.551 cv
31.023 532.551 li
31.023 525.805 li
29.309 526.824 li
29.219 526.875 29.148 526.902 29.102 526.91 cv
29.047 526.918 29.004 526.91 28.973 526.879 cv
28.938 526.852 28.918 526.801 28.906 526.73 cv
28.895 526.664 28.887 526.578 28.891 526.469 cv
28.887 526.395 28.891 526.328 28.902 526.27 cv
28.906 526.219 28.918 526.172 28.934 526.133 cv
28.945 526.098 28.965 526.066 28.988 526.039 cv
29.012 526.012 29.043 525.984 29.09 525.957 cv
31.133 524.645 li
31.148 524.633 31.168 524.621 31.199 524.613 cv
31.223 524.605 31.258 524.598 31.305 524.586 cv
31.344 524.578 31.395 524.57 31.449 524.566 cv
31.504 524.566 31.57 524.566 31.656 524.562 cv
31.762 524.566 31.855 524.57 31.93 524.578 cv
32 524.586 32.055 524.602 32.102 524.617 cv
32.141 524.637 32.168 524.656 32.184 524.68 cv
32.191 524.707 32.199 524.73 32.203 524.754 cv
32.203 532.551 li
33.809 532.551 li
33.844 532.555 33.879 532.562 33.91 532.582 cv
33.941 532.605 33.965 532.637 33.988 532.672 cv
34.004 532.711 34.02 532.758 34.035 532.816 cv
34.043 532.879 34.051 532.953 34.055 533.031 cv
cp
f
104.355 532.988 mo
104.352 533.074 104.348 533.148 104.336 533.211 cv
104.324 533.277 104.309 533.332 104.289 533.371 cv
104.266 533.418 104.238 533.449 104.207 533.465 cv
104.172 533.488 104.133 533.496 104.094 533.496 cv
99.191 533.496 li
99.129 533.496 99.07 533.488 99.023 533.473 cv
98.973 533.457 98.934 533.434 98.898 533.395 cv
98.863 533.363 98.836 533.309 98.824 533.238 cv
98.805 533.168 98.797 533.082 98.801 532.98 cv
98.797 532.891 98.801 532.812 98.809 532.742 cv
98.813 532.676 98.828 532.617 98.855 532.562 cv
98.879 532.512 98.91 532.457 98.945 532.402 cv
98.98 532.352 99.023 532.297 99.082 532.234 cv
100.855 530.41 li
101.266 529.992 101.594 529.617 101.844 529.281 cv
102.09 528.953 102.281 528.648 102.414 528.371 cv
102.547 528.098 102.633 527.848 102.68 527.621 cv
102.719 527.398 102.742 527.187 102.742 526.992 cv
102.742 526.797 102.707 526.613 102.641 526.434 cv
102.574 526.262 102.48 526.105 102.355 525.969 cv
102.23 525.84 102.074 525.734 101.887 525.652 cv
101.699 525.578 101.48 525.539 101.234 525.535 cv
100.945 525.539 100.688 525.578 100.461 525.652 cv
100.23 525.734 100.031 525.82 99.859 525.906 cv
99.688 526 99.543 526.082 99.426 526.16 cv
99.309 526.238 99.223 526.277 99.172 526.277 cv
99.137 526.277 99.105 526.27 99.082 526.25 cv
99.051 526.234 99.031 526.203 99.016 526.16 cv
99 526.121 98.984 526.066 98.977 525.996 cv
98.965 525.93 98.961 525.848 98.965 525.75 cv
98.961 525.684 98.965 525.625 98.973 525.574 cv
98.977 525.523 98.984 525.48 98.996 525.441 cv
99.004 525.406 99.02 525.371 99.039 525.34 cv
99.059 525.309 99.094 525.27 99.152 525.219 cv
99.203 525.172 99.297 525.105 99.434 525.023 cv
99.566 524.941 99.738 524.863 99.941 524.781 cv
100.145 524.703 100.367 524.633 100.613 524.578 cv
100.855 524.523 101.113 524.496 101.387 524.496 cv
101.813 524.496 102.188 524.559 102.512 524.68 cv
102.832 524.801 103.098 524.965 103.313 525.176 cv
103.523 525.387 103.684 525.633 103.789 525.906 cv
103.895 526.187 103.949 526.484 103.949 526.797 cv
103.949 527.086 103.922 527.367 103.871 527.645 cv
103.82 527.93 103.715 528.234 103.555 528.559 cv
103.391 528.887 103.156 529.25 102.852 529.648 cv
102.543 530.051 102.137 530.512 101.633 531.027 cv
100.227 532.496 li
104.086 532.496 li
104.117 532.5 104.152 532.512 104.191 532.527 cv
104.223 532.551 104.254 532.582 104.281 532.621 cv
104.305 532.664 104.324 532.715 104.336 532.773 cv
104.348 532.84 104.352 532.91 104.355 532.988 cv
cp
f
175.07 530.973 mo
175.066 531.125 175.043 531.246 175 531.332 cv
174.953 531.422 174.891 531.465 174.809 531.461 cv
173.809 531.461 li
173.809 533.324 li
173.809 533.363 173.797 533.395 173.781 533.418 cv
173.758 533.445 173.727 533.465 173.684 533.484 cv
173.633 533.5 173.57 533.512 173.5 533.523 cv
173.422 533.531 173.328 533.535 173.211 533.539 cv
173.094 533.535 172.996 533.531 172.926 533.523 cv
172.848 533.512 172.789 533.5 172.746 533.484 cv
172.699 533.465 172.668 533.445 172.652 533.418 cv
172.633 533.395 172.625 533.363 172.629 533.324 cv
172.629 531.461 li
169 531.461 li
168.941 531.465 168.898 531.457 168.863 531.441 cv
168.828 531.43 168.793 531.402 168.766 531.363 cv
168.734 531.328 168.715 531.277 168.703 531.207 cv
168.691 531.141 168.688 531.051 168.688 530.937 cv
168.688 530.855 168.688 530.777 168.695 530.707 cv
168.695 530.637 168.707 530.574 168.723 530.52 cv
168.734 530.465 168.75 530.41 168.777 530.355 cv
168.797 530.301 168.824 530.246 168.859 530.184 cv
172.02 524.797 li
172.039 524.762 172.074 524.73 172.121 524.703 cv
172.164 524.676 172.219 524.652 172.293 524.633 cv
172.359 524.617 172.445 524.605 172.551 524.594 cv
172.652 524.59 172.773 524.586 172.914 524.582 cv
173.063 524.586 173.199 524.59 173.316 524.602 cv
173.43 524.613 173.52 524.629 173.594 524.645 cv
173.66 524.664 173.715 524.687 173.754 524.719 cv
173.789 524.75 173.809 524.785 173.809 524.824 cv
173.809 530.488 li
174.809 530.488 li
174.883 530.492 174.945 530.531 174.996 530.609 cv
175.043 530.691 175.066 530.812 175.07 530.973 cv
cp
172.629 525.621 mo
172.617 525.621 li
169.766 530.488 li
172.629 530.488 li
cp
f
245.242 530.625 mo
245.242 531.016 245.18 531.395 245.063 531.754 cv
244.938 532.121 244.754 532.437 244.512 532.711 cv
244.262 532.988 243.949 533.211 243.574 533.375 cv
243.191 533.543 242.746 533.625 242.23 533.625 cv
241.859 533.625 241.531 533.582 241.25 533.488 cv
240.965 533.402 240.719 533.27 240.508 533.098 cv
240.297 532.93 240.121 532.723 239.984 532.477 cv
239.844 532.23 239.73 531.949 239.648 531.633 cv
239.563 531.32 239.504 530.977 239.469 530.598 cv
239.43 530.227 239.41 529.824 239.414 529.391 cv
239.41 529.012 239.43 528.629 239.473 528.238 cv
239.512 527.855 239.586 527.48 239.691 527.113 cv
239.797 526.754 239.941 526.414 240.121 526.098 cv
240.301 525.781 240.527 525.504 240.801 525.27 cv
241.074 525.035 241.398 524.848 241.777 524.707 cv
242.156 524.57 242.598 524.504 243.102 524.5 cv
243.27 524.504 243.441 524.512 243.613 524.531 cv
243.785 524.555 243.945 524.586 244.094 524.617 cv
244.242 524.656 244.363 524.691 244.465 524.73 cv
244.563 524.77 244.629 524.805 244.664 524.828 cv
244.691 524.855 244.715 524.883 244.734 524.91 cv
244.75 524.941 244.766 524.973 244.773 525.008 cv
244.781 525.043 244.785 525.082 244.793 525.125 cv
244.793 525.168 244.797 525.223 244.801 525.285 cv
244.797 525.371 244.797 525.441 244.797 525.496 cv
244.793 525.559 244.781 525.605 244.77 525.641 cv
244.75 525.68 244.73 525.707 244.707 525.723 cv
244.68 525.742 244.648 525.75 244.609 525.75 cv
244.559 525.75 244.488 525.734 244.402 525.703 cv
244.313 525.672 244.207 525.637 244.086 525.594 cv
243.961 525.559 243.813 525.523 243.637 525.488 cv
243.461 525.461 243.258 525.445 243.027 525.441 cv
242.598 525.445 242.23 525.531 241.926 525.703 cv
241.621 525.875 241.371 526.109 241.176 526.402 cv
240.98 526.695 240.836 527.035 240.746 527.418 cv
240.648 527.809 240.594 528.211 240.586 528.629 cv
240.703 528.562 240.84 528.496 240.988 528.426 cv
241.137 528.359 241.297 528.297 241.473 528.238 cv
241.648 528.187 241.836 528.141 242.031 528.105 cv
242.227 528.074 242.438 528.059 242.664 528.055 cv
243.141 528.059 243.543 528.125 243.875 528.25 cv
244.203 528.383 244.469 528.562 244.676 528.793 cv
244.875 529.023 245.02 529.293 245.109 529.605 cv
245.195 529.918 245.242 530.258 245.242 530.625 cv
cp
244.047 530.734 mo
244.047 530.473 244.02 530.23 243.969 530.012 cv
243.914 529.797 243.824 529.613 243.703 529.457 cv
243.578 529.309 243.414 529.191 243.211 529.109 cv
243 529.027 242.746 528.984 242.449 528.984 cv
242.277 528.984 242.109 529 241.941 529.031 cv
241.77 529.062 241.605 529.105 241.449 529.152 cv
241.289 529.207 241.141 529.27 241 529.34 cv
240.855 529.414 240.723 529.488 240.605 529.566 cv
240.602 530.16 240.641 530.656 240.719 531.051 cv
240.793 531.449 240.902 531.766 241.047 532.004 cv
241.191 532.246 241.371 532.418 241.586 532.52 cv
241.801 532.625 242.051 532.676 242.34 532.672 cv
242.629 532.676 242.883 532.621 243.098 532.508 cv
243.313 532.402 243.488 532.254 243.633 532.066 cv
243.773 531.883 243.879 531.676 243.945 531.445 cv
244.012 531.215 244.047 530.98 244.047 530.734 cv
cp
f
315.539 531.219 mo
315.539 531.605 315.469 531.949 315.332 532.246 cv
315.195 532.551 315 532.801 314.742 533.004 cv
314.484 533.211 314.164 533.367 313.785 533.469 cv
313.402 533.574 312.969 533.625 312.484 533.625 cv
312.023 533.625 311.613 533.578 311.254 533.484 cv
310.891 533.391 310.586 533.25 310.336 533.059 cv
310.086 532.875 309.895 532.645 309.762 532.367 cv
309.629 532.094 309.563 531.781 309.563 531.426 cv
309.563 531.152 309.605 530.895 309.699 530.66 cv
309.785 530.426 309.918 530.211 310.094 530.016 cv
310.262 529.82 310.473 529.637 310.727 529.461 cv
310.977 529.293 311.262 529.129 311.578 528.973 cv
311.305 528.832 311.063 528.684 310.852 528.523 cv
310.641 528.367 310.461 528.195 310.316 528.008 cv
310.168 527.824 310.059 527.629 309.984 527.418 cv
309.906 527.211 309.867 526.98 309.871 526.73 cv
309.867 526.422 309.922 526.129 310.039 525.855 cv
310.148 525.586 310.32 525.352 310.547 525.148 cv
310.773 524.949 311.059 524.789 311.41 524.672 cv
311.754 524.555 312.164 524.496 312.633 524.496 cv
313.078 524.496 313.465 524.551 313.793 524.656 cv
314.121 524.766 314.391 524.91 314.602 525.094 cv
314.813 525.281 314.969 525.5 315.074 525.75 cv
315.172 526 315.223 526.27 315.227 526.559 cv
315.223 526.793 315.184 527.02 315.113 527.23 cv
315.035 527.449 314.926 527.652 314.777 527.84 cv
314.629 528.035 314.449 528.215 314.238 528.379 cv
314.027 528.551 313.785 528.707 313.512 528.848 cv
313.832 529.012 314.117 529.176 314.375 529.344 cv
314.625 529.512 314.84 529.691 315.016 529.887 cv
315.184 530.082 315.313 530.289 315.406 530.504 cv
315.492 530.723 315.539 530.961 315.539 531.219 cv
cp
314.059 526.668 mo
314.055 526.48 314.023 526.305 313.957 526.148 cv
313.891 525.992 313.793 525.859 313.668 525.75 cv
313.539 525.641 313.379 525.559 313.191 525.5 cv
312.996 525.445 312.781 525.418 312.543 525.414 cv
312.047 525.418 311.672 525.527 311.422 525.75 cv
311.164 525.977 311.039 526.285 311.043 526.668 cv
311.039 526.848 311.07 527.012 311.133 527.164 cv
311.195 527.32 311.289 527.465 311.422 527.602 cv
311.547 527.738 311.711 527.871 311.914 528 cv
312.109 528.133 312.348 528.27 312.625 528.41 cv
313.086 528.176 313.441 527.914 313.688 527.621 cv
313.934 527.336 314.055 527.02 314.059 526.668 cv
cp
314.348 531.344 mo
314.344 531.137 314.305 530.945 314.23 530.773 cv
314.148 530.605 314.031 530.445 313.875 530.293 cv
313.719 530.145 313.52 530 313.285 529.859 cv
313.047 529.723 312.777 529.578 312.469 529.426 cv
312.18 529.57 311.926 529.711 311.711 529.852 cv
311.492 529.992 311.313 530.141 311.176 530.289 cv
311.035 530.445 310.93 530.602 310.859 530.766 cv
310.785 530.934 310.75 531.117 310.754 531.316 cv
310.75 531.762 310.902 532.105 311.211 532.344 cv
311.512 532.59 311.965 532.711 312.57 532.707 cv
313.152 532.711 313.598 532.59 313.898 532.34 cv
314.195 532.098 314.344 531.766 314.348 531.344 cv
cp
f
382.125 533.031 mo
382.121 533.121 382.113 533.191 382.102 533.25 cv
382.086 533.312 382.066 533.363 382.047 533.395 cv
382.023 533.434 382 533.457 381.969 533.473 cv
381.938 533.488 381.906 533.496 381.879 533.496 cv
377.242 533.496 li
377.207 533.496 377.18 533.488 377.152 533.473 cv
377.125 533.457 377.098 533.434 377.074 533.395 cv
377.047 533.363 377.027 533.312 377.016 533.25 cv
377 533.191 376.992 533.121 376.996 533.031 cv
376.992 532.953 377 532.879 377.016 532.816 cv
377.027 532.758 377.043 532.711 377.066 532.672 cv
377.082 532.637 377.109 532.605 377.141 532.582 cv
377.172 532.562 377.203 532.555 377.242 532.551 cv
379.094 532.551 li
379.094 525.805 li
377.379 526.824 li
377.289 526.875 377.219 526.902 377.172 526.91 cv
377.117 526.918 377.074 526.91 377.043 526.879 cv
377.008 526.852 376.988 526.801 376.977 526.73 cv
376.965 526.664 376.957 526.578 376.961 526.469 cv
376.957 526.395 376.961 526.328 376.973 526.27 cv
376.977 526.219 376.988 526.172 377.004 526.133 cv
377.016 526.098 377.035 526.066 377.059 526.039 cv
377.082 526.012 377.113 525.984 377.16 525.957 cv
379.203 524.645 li
379.219 524.633 379.238 524.621 379.27 524.613 cv
379.293 524.605 379.328 524.598 379.375 524.586 cv
379.414 524.578 379.465 524.57 379.52 524.566 cv
379.574 524.566 379.641 524.566 379.727 524.562 cv
379.832 524.566 379.926 524.57 380 524.578 cv
380.07 524.586 380.125 524.602 380.172 524.617 cv
380.211 524.637 380.238 524.656 380.254 524.68 cv
380.262 524.707 380.27 524.73 380.273 524.754 cv
380.273 532.551 li
381.879 532.551 li
381.914 532.555 381.949 532.562 381.98 532.582 cv
382.012 532.605 382.035 532.637 382.059 532.672 cv
382.074 532.711 382.09 532.758 382.105 532.816 cv
382.113 532.879 382.121 532.953 382.125 533.031 cv
cp
f
389.48 529.039 mo
389.477 529.723 389.426 530.344 389.32 530.906 cv
389.211 531.469 389.031 531.953 388.785 532.355 cv
388.531 532.762 388.203 533.074 387.805 533.293 cv
387.398 533.516 386.906 533.625 386.32 533.625 cv
385.762 533.625 385.289 533.527 384.91 533.328 cv
384.527 533.133 384.223 532.84 383.988 532.453 cv
383.754 532.066 383.586 531.594 383.492 531.027 cv
383.391 530.465 383.344 529.816 383.344 529.082 cv
383.344 528.41 383.398 527.789 383.508 527.223 cv
383.617 526.66 383.793 526.176 384.043 525.77 cv
384.285 525.367 384.609 525.055 385.016 524.828 cv
385.414 524.609 385.91 524.496 386.5 524.496 cv
387.059 524.496 387.531 524.598 387.914 524.793 cv
388.297 524.996 388.602 525.289 388.836 525.672 cv
389.066 526.062 389.234 526.535 389.332 527.098 cv
389.43 527.66 389.477 528.309 389.48 529.039 cv
cp
388.273 529.121 mo
388.27 528.68 388.254 528.281 388.227 527.93 cv
388.191 527.578 388.145 527.27 388.086 527 cv
388.02 526.73 387.941 526.5 387.844 526.305 cv
387.746 526.113 387.629 525.953 387.492 525.824 cv
387.352 525.699 387.191 525.605 387.02 525.547 cv
386.84 525.492 386.645 525.465 386.43 525.461 cv
386.039 525.465 385.723 525.555 385.484 525.738 cv
385.238 525.922 385.047 526.176 384.91 526.492 cv
384.77 526.812 384.676 527.184 384.625 527.613 cv
384.574 528.043 384.551 528.508 384.551 529 cv
384.551 529.664 384.582 530.227 384.652 530.687 cv
384.719 531.156 384.828 531.535 384.98 531.824 cv
385.125 532.121 385.316 532.332 385.547 532.461 cv
385.777 532.598 386.059 532.664 386.391 532.66 cv
386.645 532.664 386.867 532.625 387.063 532.539 cv
387.254 532.461 387.422 532.34 387.563 532.184 cv
387.703 532.031 387.816 531.848 387.91 531.633 cv
387.996 531.418 388.07 531.18 388.129 530.918 cv
388.18 530.66 388.219 530.379 388.242 530.074 cv
388.262 529.77 388.27 529.453 388.273 529.121 cv
cp
f
452.465 533.031 mo
452.461 533.121 452.453 533.191 452.441 533.25 cv
452.426 533.312 452.406 533.363 452.387 533.395 cv
452.363 533.434 452.34 533.457 452.309 533.473 cv
452.277 533.488 452.246 533.496 452.219 533.496 cv
447.582 533.496 li
447.547 533.496 447.52 533.488 447.492 533.473 cv
447.465 533.457 447.438 533.434 447.414 533.395 cv
447.387 533.363 447.367 533.312 447.355 533.25 cv
447.34 533.191 447.332 533.121 447.336 533.031 cv
447.332 532.953 447.34 532.879 447.355 532.816 cv
447.367 532.758 447.383 532.711 447.406 532.672 cv
447.422 532.637 447.449 532.605 447.48 532.582 cv
447.512 532.562 447.543 532.555 447.582 532.551 cv
449.434 532.551 li
449.434 525.805 li
447.719 526.824 li
447.629 526.875 447.559 526.902 447.512 526.91 cv
447.457 526.918 447.414 526.91 447.383 526.879 cv
447.348 526.852 447.328 526.801 447.316 526.73 cv
447.305 526.664 447.297 526.578 447.301 526.469 cv
447.297 526.395 447.301 526.328 447.313 526.27 cv
447.316 526.219 447.328 526.172 447.344 526.133 cv
447.355 526.098 447.375 526.066 447.398 526.039 cv
447.422 526.012 447.453 525.984 447.5 525.957 cv
449.543 524.645 li
449.559 524.633 449.578 524.621 449.609 524.613 cv
449.633 524.605 449.668 524.598 449.715 524.586 cv
449.754 524.578 449.805 524.57 449.859 524.566 cv
449.914 524.566 449.98 524.566 450.066 524.562 cv
450.172 524.566 450.266 524.57 450.34 524.578 cv
450.41 524.586 450.465 524.602 450.512 524.617 cv
450.551 524.637 450.578 524.656 450.594 524.68 cv
450.602 524.707 450.609 524.73 450.613 524.754 cv
450.613 532.551 li
452.219 532.551 li
452.254 532.555 452.289 532.562 452.32 532.582 cv
452.352 532.605 452.375 532.637 452.398 532.672 cv
452.414 532.711 452.43 532.758 452.445 532.816 cv
452.453 532.879 452.461 532.953 452.465 533.031 cv
cp
f
459.527 532.988 mo
459.523 533.074 459.52 533.148 459.508 533.211 cv
459.496 533.277 459.48 533.332 459.461 533.371 cv
459.438 533.418 459.41 533.449 459.379 533.465 cv
459.344 533.488 459.305 533.496 459.266 533.496 cv
454.363 533.496 li
454.301 533.496 454.242 533.488 454.195 533.473 cv
454.145 533.457 454.105 533.434 454.07 533.395 cv
454.035 533.363 454.008 533.309 453.996 533.238 cv
453.977 533.168 453.969 533.082 453.973 532.98 cv
453.969 532.891 453.973 532.812 453.98 532.742 cv
453.984 532.676 454 532.617 454.027 532.562 cv
454.051 532.512 454.082 532.457 454.117 532.402 cv
454.152 532.352 454.195 532.297 454.254 532.234 cv
456.027 530.41 li
456.438 529.992 456.766 529.617 457.016 529.281 cv
457.262 528.953 457.453 528.648 457.586 528.371 cv
457.719 528.098 457.805 527.848 457.852 527.621 cv
457.891 527.398 457.914 527.187 457.914 526.992 cv
457.914 526.797 457.879 526.613 457.813 526.434 cv
457.746 526.262 457.652 526.105 457.527 525.969 cv
457.402 525.84 457.246 525.734 457.059 525.652 cv
456.871 525.578 456.652 525.539 456.406 525.535 cv
456.117 525.539 455.859 525.578 455.633 525.652 cv
455.402 525.734 455.203 525.82 455.031 525.906 cv
454.859 526 454.715 526.082 454.598 526.16 cv
454.48 526.238 454.395 526.277 454.344 526.277 cv
454.309 526.277 454.277 526.27 454.254 526.25 cv
454.223 526.234 454.203 526.203 454.188 526.16 cv
454.172 526.121 454.156 526.066 454.148 525.996 cv
454.137 525.93 454.133 525.848 454.137 525.75 cv
454.133 525.684 454.137 525.625 454.145 525.574 cv
454.148 525.523 454.156 525.48 454.168 525.441 cv
454.176 525.406 454.191 525.371 454.211 525.34 cv
454.23 525.309 454.266 525.27 454.324 525.219 cv
454.375 525.172 454.469 525.105 454.605 525.023 cv
454.738 524.941 454.91 524.863 455.113 524.781 cv
455.316 524.703 455.539 524.633 455.785 524.578 cv
456.027 524.523 456.285 524.496 456.559 524.496 cv
456.984 524.496 457.359 524.559 457.684 524.68 cv
458.004 524.801 458.27 524.965 458.484 525.176 cv
458.695 525.387 458.855 525.633 458.961 525.906 cv
459.066 526.187 459.121 526.484 459.121 526.797 cv
459.121 527.086 459.094 527.367 459.043 527.645 cv
458.992 527.93 458.887 528.234 458.727 528.559 cv
458.563 528.887 458.328 529.25 458.023 529.648 cv
457.715 530.051 457.309 530.512 456.805 531.027 cv
455.398 532.496 li
459.258 532.496 li
459.289 532.5 459.324 532.512 459.363 532.527 cv
459.395 532.551 459.426 532.582 459.453 532.621 cv
459.477 532.664 459.496 532.715 459.508 532.773 cv
459.52 532.84 459.523 532.91 459.527 532.988 cv
cp
f
522.785 533.031 mo
522.781 533.121 522.773 533.191 522.762 533.25 cv
522.746 533.312 522.727 533.363 522.707 533.395 cv
522.684 533.434 522.66 533.457 522.629 533.473 cv
522.598 533.488 522.566 533.496 522.539 533.496 cv
517.902 533.496 li
517.867 533.496 517.84 533.488 517.813 533.473 cv
517.785 533.457 517.758 533.434 517.734 533.395 cv
517.707 533.363 517.688 533.312 517.676 533.25 cv
517.66 533.191 517.652 533.121 517.656 533.031 cv
517.652 532.953 517.66 532.879 517.676 532.816 cv
517.688 532.758 517.703 532.711 517.727 532.672 cv
517.742 532.637 517.77 532.605 517.801 532.582 cv
517.832 532.562 517.863 532.555 517.902 532.551 cv
519.754 532.551 li
519.754 525.805 li
518.039 526.824 li
517.949 526.875 517.879 526.902 517.832 526.91 cv
517.777 526.918 517.734 526.91 517.703 526.879 cv
517.668 526.852 517.648 526.801 517.637 526.73 cv
517.625 526.664 517.617 526.578 517.621 526.469 cv
517.617 526.395 517.621 526.328 517.633 526.27 cv
517.637 526.219 517.648 526.172 517.664 526.133 cv
517.676 526.098 517.695 526.066 517.719 526.039 cv
517.742 526.012 517.773 525.984 517.82 525.957 cv
519.863 524.645 li
519.879 524.633 519.898 524.621 519.93 524.613 cv
519.953 524.605 519.988 524.598 520.035 524.586 cv
520.074 524.578 520.125 524.57 520.18 524.566 cv
520.234 524.566 520.301 524.566 520.387 524.562 cv
520.492 524.566 520.586 524.57 520.66 524.578 cv
520.73 524.586 520.785 524.602 520.832 524.617 cv
520.871 524.637 520.898 524.656 520.914 524.68 cv
520.922 524.707 520.93 524.73 520.934 524.754 cv
520.934 532.551 li
522.539 532.551 li
522.574 532.555 522.609 532.562 522.641 532.582 cv
522.672 532.605 522.695 532.637 522.719 532.672 cv
522.734 532.711 522.75 532.758 522.766 532.816 cv
522.773 532.879 522.781 532.953 522.785 533.031 cv
cp
f
530.223 530.973 mo
530.219 531.125 530.195 531.246 530.152 531.332 cv
530.105 531.422 530.043 531.465 529.961 531.461 cv
528.961 531.461 li
528.961 533.324 li
528.961 533.363 528.949 533.395 528.934 533.418 cv
528.91 533.445 528.879 533.465 528.836 533.484 cv
528.785 533.5 528.723 533.512 528.652 533.523 cv
528.574 533.531 528.48 533.535 528.363 533.539 cv
528.246 533.535 528.148 533.531 528.078 533.523 cv
528 533.512 527.941 533.5 527.898 533.484 cv
527.852 533.465 527.82 533.445 527.805 533.418 cv
527.785 533.395 527.777 533.363 527.781 533.324 cv
527.781 531.461 li
524.152 531.461 li
524.094 531.465 524.051 531.457 524.016 531.441 cv
523.98 531.43 523.945 531.402 523.918 531.363 cv
523.887 531.328 523.867 531.277 523.855 531.207 cv
523.844 531.141 523.84 531.051 523.84 530.937 cv
523.84 530.855 523.84 530.777 523.848 530.707 cv
523.848 530.637 523.859 530.574 523.875 530.52 cv
523.887 530.465 523.902 530.41 523.93 530.355 cv
523.949 530.301 523.977 530.246 524.012 530.184 cv
527.172 524.797 li
527.191 524.762 527.227 524.73 527.273 524.703 cv
527.316 524.676 527.371 524.652 527.445 524.633 cv
527.512 524.617 527.598 524.605 527.703 524.594 cv
527.805 524.59 527.926 524.586 528.066 524.582 cv
528.215 524.586 528.352 524.59 528.469 524.602 cv
528.582 524.613 528.672 524.629 528.746 524.645 cv
528.813 524.664 528.867 524.687 528.906 524.719 cv
528.941 524.75 528.961 524.785 528.961 524.824 cv
528.961 530.488 li
529.961 530.488 li
530.035 530.492 530.098 530.531 530.148 530.609 cv
530.195 530.691 530.219 530.812 530.223 530.973 cv
cp
527.781 525.621 mo
527.77 525.621 li
524.918 530.488 li
527.781 530.488 li
cp
f
593.105 533.031 mo
593.102 533.121 593.094 533.191 593.082 533.25 cv
593.066 533.312 593.047 533.363 593.027 533.395 cv
593.004 533.434 592.98 533.457 592.949 533.473 cv
592.918 533.488 592.887 533.496 592.859 533.496 cv
588.223 533.496 li
588.188 533.496 588.16 533.488 588.133 533.473 cv
588.105 533.457 588.078 533.434 588.055 533.395 cv
588.027 533.363 588.008 533.312 587.996 533.25 cv
587.98 533.191 587.973 533.121 587.977 533.031 cv
587.973 532.953 587.98 532.879 587.996 532.816 cv
588.008 532.758 588.023 532.711 588.047 532.672 cv
588.063 532.637 588.09 532.605 588.121 532.582 cv
588.152 532.562 588.184 532.555 588.223 532.551 cv
590.074 532.551 li
590.074 525.805 li
588.359 526.824 li
588.27 526.875 588.199 526.902 588.152 526.91 cv
588.098 526.918 588.055 526.91 588.023 526.879 cv
587.988 526.852 587.969 526.801 587.957 526.73 cv
587.945 526.664 587.938 526.578 587.941 526.469 cv
587.938 526.395 587.941 526.328 587.953 526.27 cv
587.957 526.219 587.969 526.172 587.984 526.133 cv
587.996 526.098 588.016 526.066 588.039 526.039 cv
588.063 526.012 588.094 525.984 588.141 525.957 cv
590.184 524.645 li
590.199 524.633 590.219 524.621 590.25 524.613 cv
590.273 524.605 590.309 524.598 590.355 524.586 cv
590.395 524.578 590.445 524.57 590.5 524.566 cv
590.555 524.566 590.621 524.566 590.707 524.562 cv
590.813 524.566 590.906 524.57 590.98 524.578 cv
591.051 524.586 591.105 524.602 591.152 524.617 cv
591.191 524.637 591.219 524.656 591.234 524.68 cv
591.242 524.707 591.25 524.73 591.254 524.754 cv
591.254 532.551 li
592.859 532.551 li
592.895 532.555 592.93 532.562 592.961 532.582 cv
592.992 532.605 593.016 532.637 593.039 532.672 cv
593.055 532.711 593.07 532.758 593.086 532.816 cv
593.094 532.879 593.102 532.953 593.105 533.031 cv
cp
f
600.391 530.625 mo
600.391 531.016 600.328 531.395 600.211 531.754 cv
600.086 532.121 599.902 532.437 599.66 532.711 cv
599.41 532.988 599.098 533.211 598.723 533.375 cv
598.34 533.543 597.895 533.625 597.379 533.625 cv
597.008 533.625 596.68 533.582 596.398 533.488 cv
596.113 533.402 595.867 533.27 595.656 533.098 cv
595.445 532.93 595.27 532.723 595.133 532.477 cv
594.992 532.23 594.879 531.949 594.797 531.633 cv
594.711 531.32 594.652 530.977 594.617 530.598 cv
594.578 530.227 594.559 529.824 594.563 529.391 cv
594.559 529.012 594.578 528.629 594.621 528.238 cv
594.66 527.855 594.734 527.48 594.84 527.113 cv
594.945 526.754 595.09 526.414 595.27 526.098 cv
595.449 525.781 595.676 525.504 595.949 525.27 cv
596.223 525.035 596.547 524.848 596.926 524.707 cv
597.305 524.57 597.746 524.504 598.25 524.5 cv
598.418 524.504 598.59 524.512 598.762 524.531 cv
598.934 524.555 599.094 524.586 599.242 524.617 cv
599.391 524.656 599.512 524.691 599.613 524.73 cv
599.711 524.77 599.777 524.805 599.813 524.828 cv
599.84 524.855 599.863 524.883 599.883 524.91 cv
599.898 524.941 599.914 524.973 599.922 525.008 cv
599.93 525.043 599.934 525.082 599.941 525.125 cv
599.941 525.168 599.945 525.223 599.949 525.285 cv
599.945 525.371 599.945 525.441 599.945 525.496 cv
599.941 525.559 599.93 525.605 599.918 525.641 cv
599.898 525.68 599.879 525.707 599.855 525.723 cv
599.828 525.742 599.797 525.75 599.758 525.75 cv
599.707 525.75 599.637 525.734 599.551 525.703 cv
599.461 525.672 599.355 525.637 599.234 525.594 cv
599.109 525.559 598.961 525.523 598.785 525.488 cv
598.609 525.461 598.406 525.445 598.176 525.441 cv
597.746 525.445 597.379 525.531 597.074 525.703 cv
596.77 525.875 596.52 526.109 596.324 526.402 cv
596.129 526.695 595.984 527.035 595.895 527.418 cv
595.797 527.809 595.742 528.211 595.734 528.629 cv
595.852 528.562 595.988 528.496 596.137 528.426 cv
596.285 528.359 596.445 528.297 596.621 528.238 cv
596.797 528.187 596.984 528.141 597.18 528.105 cv
597.375 528.074 597.586 528.059 597.813 528.055 cv
598.289 528.059 598.691 528.125 599.023 528.25 cv
599.352 528.383 599.617 528.562 599.824 528.793 cv
600.023 529.023 600.168 529.293 600.258 529.605 cv
600.344 529.918 600.391 530.258 600.391 530.625 cv
cp
599.195 530.734 mo
599.195 530.473 599.168 530.23 599.117 530.012 cv
599.063 529.797 598.973 529.613 598.852 529.457 cv
598.727 529.309 598.563 529.191 598.359 529.109 cv
598.148 529.027 597.895 528.984 597.598 528.984 cv
597.426 528.984 597.258 529 597.09 529.031 cv
596.918 529.062 596.754 529.105 596.598 529.152 cv
596.438 529.207 596.289 529.27 596.148 529.34 cv
596.004 529.414 595.871 529.488 595.754 529.566 cv
595.75 530.16 595.789 530.656 595.867 531.051 cv
595.941 531.449 596.051 531.766 596.195 532.004 cv
596.34 532.246 596.52 532.418 596.734 532.52 cv
596.949 532.625 597.199 532.676 597.488 532.672 cv
597.777 532.676 598.031 532.621 598.246 532.508 cv
598.461 532.402 598.637 532.254 598.781 532.066 cv
598.922 531.883 599.027 531.676 599.094 531.445 cv
599.16 531.215 599.195 530.98 599.195 530.734 cv
cp
f
257.313 552.91 mo
257.309 553.016 257.293 553.105 257.258 553.176 cv
257.223 553.254 257.176 553.312 257.121 553.355 cv
257.063 553.406 257 553.441 256.934 553.457 cv
256.859 553.48 256.789 553.488 256.727 553.488 cv
256.281 553.488 li
256.141 553.488 256.02 553.477 255.914 553.445 cv
255.809 553.422 255.711 553.367 255.617 553.289 cv
255.523 553.215 255.43 553.113 255.336 552.98 cv
255.242 552.852 255.141 552.687 255.035 552.484 cv
251.961 546.746 li
251.797 546.453 251.633 546.145 251.473 545.816 cv
251.305 545.496 251.152 545.18 251.016 544.871 cv
251 544.871 li
251.008 545.246 251.016 545.629 251.023 546.016 cv
251.027 546.406 251.027 546.793 251.031 547.176 cv
251.031 553.262 li
251.027 553.301 251.016 553.336 250.996 553.367 cv
250.973 553.402 250.938 553.43 250.887 553.445 cv
250.832 553.465 250.762 553.477 250.68 553.492 cv
250.594 553.504 250.488 553.512 250.359 553.512 cv
250.223 553.512 250.113 553.504 250.031 553.492 cv
249.945 553.477 249.879 553.465 249.832 553.445 cv
249.781 553.43 249.746 553.402 249.723 553.367 cv
249.699 553.336 249.688 553.301 249.691 553.262 cv
249.691 543.957 li
249.688 543.75 249.746 543.602 249.867 543.512 cv
249.984 543.426 250.113 543.383 250.254 543.379 cv
250.914 543.379 li
251.066 543.383 251.199 543.395 251.305 543.418 cv
251.406 543.445 251.5 543.488 251.586 543.547 cv
251.668 543.609 251.746 543.691 251.828 543.797 cv
251.902 543.906 251.984 544.043 252.07 544.199 cv
254.438 548.625 li
254.582 548.898 254.723 549.164 254.859 549.418 cv
254.992 549.676 255.121 549.93 255.25 550.176 cv
255.371 550.43 255.496 550.676 255.621 550.914 cv
255.742 551.156 255.863 551.398 255.988 551.641 cv
255.996 551.641 li
255.984 551.234 255.977 550.805 255.977 550.359 cv
255.969 549.914 255.969 549.488 255.973 549.078 cv
255.973 543.605 li
255.969 543.57 255.98 543.535 256.004 543.504 cv
256.027 543.473 256.063 543.445 256.117 543.422 cv
256.164 543.398 256.234 543.383 256.32 543.371 cv
256.406 543.363 256.516 543.359 256.656 543.355 cv
256.773 543.359 256.879 543.363 256.969 543.371 cv
257.055 543.383 257.121 543.398 257.172 543.422 cv
257.219 543.445 257.254 543.473 257.277 543.504 cv
257.297 543.535 257.309 543.57 257.313 543.605 cv
cp
f
265.859 553.27 mo
265.855 553.316 265.848 553.352 265.832 553.375 cv
265.813 553.406 265.777 553.43 265.734 553.449 cv
265.688 553.469 265.629 553.48 265.555 553.496 cv
265.477 553.504 265.383 553.512 265.277 553.512 cv
265.152 553.512 265.055 553.504 264.984 553.496 cv
264.906 553.48 264.848 553.469 264.805 553.449 cv
264.758 553.43 264.727 553.406 264.715 553.375 cv
264.695 553.352 264.688 553.316 264.691 553.27 cv
264.691 552.344 li
264.289 552.789 263.895 553.109 263.508 553.309 cv
263.113 553.512 262.719 553.609 262.324 553.613 cv
261.852 553.609 261.457 553.535 261.141 553.379 cv
260.82 553.227 260.563 553.016 260.367 552.746 cv
260.164 552.48 260.023 552.168 259.941 551.809 cv
259.852 551.453 259.809 551.02 259.813 550.512 cv
259.813 546.258 li
259.809 546.219 259.816 546.184 259.84 546.152 cv
259.855 546.125 259.891 546.102 259.945 546.074 cv
259.992 546.055 260.063 546.039 260.148 546.027 cv
260.23 546.023 260.332 546.02 260.461 546.016 cv
260.582 546.02 260.688 546.023 260.773 546.027 cv
260.855 546.039 260.922 546.055 260.969 546.074 cv
261.016 546.102 261.051 546.125 261.074 546.152 cv
261.094 546.184 261.102 546.219 261.105 546.258 cv
261.105 550.34 li
261.102 550.754 261.133 551.082 261.195 551.328 cv
261.254 551.574 261.344 551.785 261.469 551.957 cv
261.586 552.137 261.742 552.27 261.934 552.363 cv
262.117 552.461 262.336 552.512 262.586 552.508 cv
262.906 552.512 263.227 552.395 263.551 552.164 cv
263.867 551.937 264.207 551.602 264.566 551.156 cv
264.566 546.258 li
264.566 546.219 264.574 546.184 264.594 546.152 cv
264.609 546.125 264.645 546.102 264.699 546.074 cv
264.75 546.055 264.816 546.039 264.898 546.027 cv
264.977 546.023 265.082 546.02 265.215 546.016 cv
265.336 546.02 265.441 546.023 265.527 546.027 cv
265.609 546.039 265.672 546.055 265.719 546.074 cv
265.762 546.102 265.797 546.125 265.824 546.152 cv
265.844 546.184 265.855 546.219 265.859 546.258 cv
cp
f
278.637 553.27 mo
278.633 553.316 278.625 553.352 278.605 553.375 cv
278.582 553.406 278.547 553.43 278.504 553.449 cv
278.453 553.469 278.387 553.48 278.309 553.496 cv
278.223 553.504 278.121 553.512 277.996 553.512 cv
277.863 553.512 277.754 553.504 277.676 553.496 cv
277.59 553.48 277.523 553.469 277.477 553.449 cv
277.422 553.43 277.387 553.406 277.371 553.375 cv
277.348 553.352 277.34 553.316 277.34 553.27 cv
277.34 549.008 li
277.34 548.715 277.313 548.445 277.262 548.199 cv
277.207 547.957 277.125 547.746 277.012 547.566 cv
276.898 547.391 276.754 547.254 276.578 547.16 cv
276.398 547.066 276.188 547.02 275.953 547.02 cv
275.656 547.02 275.359 547.137 275.063 547.363 cv
274.758 547.598 274.43 547.93 274.074 548.367 cv
274.074 553.27 li
274.07 553.316 274.059 553.352 274.043 553.375 cv
274.02 553.406 273.988 553.43 273.941 553.449 cv
273.891 553.469 273.824 553.48 273.742 553.496 cv
273.656 553.504 273.551 553.512 273.43 553.512 cv
273.309 553.512 273.207 553.504 273.121 553.496 cv
273.035 553.48 272.965 553.469 272.918 553.449 cv
272.863 553.43 272.832 553.406 272.816 553.375 cv
272.797 553.352 272.785 553.316 272.789 553.27 cv
272.789 549.008 li
272.785 548.715 272.758 548.445 272.703 548.199 cv
272.645 547.957 272.559 547.746 272.445 547.566 cv
272.332 547.391 272.188 547.254 272.016 547.16 cv
271.836 547.066 271.629 547.02 271.395 547.02 cv
271.094 547.02 270.797 547.137 270.496 547.363 cv
270.195 547.598 269.867 547.93 269.516 548.367 cv
269.516 553.27 li
269.512 553.316 269.5 553.352 269.484 553.375 cv
269.461 553.406 269.43 553.43 269.383 553.449 cv
269.336 553.469 269.27 553.48 269.191 553.496 cv
269.105 553.504 269 553.512 268.871 553.512 cv
268.742 553.512 268.637 553.504 268.559 553.496 cv
268.473 553.48 268.406 553.469 268.359 553.449 cv
268.305 553.43 268.273 553.406 268.258 553.375 cv
268.238 553.352 268.227 553.316 268.23 553.27 cv
268.23 546.258 li
268.227 546.219 268.234 546.184 268.254 546.152 cv
268.266 546.125 268.297 546.102 268.348 546.074 cv
268.391 546.055 268.453 546.039 268.527 546.027 cv
268.598 546.023 268.691 546.02 268.816 546.016 cv
268.926 546.02 269.023 546.023 269.102 546.027 cv
269.176 546.039 269.234 546.055 269.277 546.074 cv
269.316 546.102 269.344 546.125 269.363 546.152 cv
269.379 546.184 269.387 546.219 269.391 546.258 cv
269.391 547.184 li
269.781 546.742 270.164 546.422 270.539 546.215 cv
270.906 546.012 271.285 545.906 271.668 545.906 cv
271.957 545.906 272.215 545.941 272.449 546.008 cv
272.676 546.078 272.883 546.172 273.063 546.293 cv
273.238 546.414 273.387 546.559 273.516 546.727 cv
273.637 546.898 273.742 547.09 273.828 547.293 cv
274.059 547.043 274.281 546.828 274.492 546.648 cv
274.703 546.477 274.906 546.332 275.102 546.219 cv
275.297 546.113 275.484 546.035 275.668 545.98 cv
275.852 545.934 276.039 545.906 276.227 545.906 cv
276.68 545.906 277.059 545.988 277.363 546.145 cv
277.668 546.309 277.914 546.52 278.109 546.781 cv
278.297 547.047 278.434 547.355 278.516 547.711 cv
278.594 548.066 278.633 548.441 278.637 548.836 cv
cp
f
287.438 549.668 mo
287.434 550.277 287.367 550.828 287.238 551.312 cv
287.102 551.801 286.906 552.215 286.652 552.555 cv
286.395 552.898 286.078 553.16 285.707 553.34 cv
285.332 553.523 284.906 553.609 284.422 553.613 cv
284.195 553.609 283.988 553.59 283.801 553.547 cv
283.613 553.5 283.426 553.43 283.246 553.332 cv
283.059 553.234 282.879 553.109 282.699 552.957 cv
282.516 552.809 282.324 552.629 282.125 552.414 cv
282.125 553.27 li
282.125 553.316 282.113 553.352 282.094 553.379 cv
282.07 553.414 282.035 553.437 281.992 553.453 cv
281.941 553.469 281.883 553.48 281.816 553.496 cv
281.742 553.504 281.652 553.512 281.547 553.512 cv
281.438 553.512 281.352 553.504 281.281 553.496 cv
281.207 553.48 281.145 553.469 281.102 553.453 cv
281.051 553.437 281.02 553.414 281.008 553.379 cv
280.988 553.352 280.98 553.316 280.984 553.27 cv
280.984 542.859 li
280.98 542.82 280.992 542.785 281.012 542.75 cv
281.027 542.723 281.059 542.695 281.113 542.672 cv
281.16 542.652 281.227 542.637 281.313 542.625 cv
281.391 542.617 281.496 542.613 281.625 542.609 cv
281.754 542.613 281.859 542.617 281.945 542.625 cv
282.023 542.637 282.09 542.652 282.137 542.672 cv
282.184 542.695 282.215 542.723 282.238 542.75 cv
282.254 542.785 282.266 542.82 282.27 542.859 cv
282.27 547.059 li
282.477 546.848 282.68 546.668 282.875 546.523 cv
283.07 546.379 283.258 546.262 283.445 546.168 cv
283.629 546.082 283.816 546.016 284.008 545.969 cv
284.191 545.93 284.391 545.906 284.602 545.906 cv
285.105 545.906 285.539 546.008 285.906 546.211 cv
286.266 546.414 286.559 546.687 286.785 547.023 cv
287.008 547.367 287.176 547.766 287.281 548.223 cv
287.383 548.68 287.434 549.16 287.438 549.668 cv
cp
286.105 549.816 mo
286.102 549.461 286.074 549.113 286.023 548.773 cv
285.965 548.437 285.871 548.141 285.734 547.879 cv
285.598 547.621 285.418 547.41 285.195 547.25 cv
284.969 547.094 284.688 547.016 284.355 547.012 cv
284.188 547.016 284.023 547.039 283.863 547.082 cv
283.699 547.133 283.535 547.211 283.367 547.316 cv
283.199 547.43 283.023 547.57 282.848 547.738 cv
282.664 547.914 282.473 548.129 282.27 548.383 cv
282.27 551.18 li
282.625 551.613 282.965 551.945 283.289 552.168 cv
283.613 552.398 283.949 552.512 284.301 552.508 cv
284.621 552.512 284.898 552.434 285.133 552.273 cv
285.359 552.121 285.547 551.914 285.691 551.652 cv
285.836 551.398 285.941 551.109 286.008 550.789 cv
286.07 550.473 286.102 550.148 286.105 549.816 cv
cp
f
295.348 549.461 mo
295.344 549.664 295.293 549.805 295.195 549.891 cv
295.09 549.977 294.973 550.02 294.848 550.02 cv
290.23 550.02 li
290.227 550.41 290.266 550.762 290.348 551.074 cv
290.422 551.387 290.555 551.656 290.738 551.875 cv
290.918 552.102 291.152 552.273 291.449 552.391 cv
291.738 552.516 292.098 552.574 292.523 552.57 cv
292.855 552.574 293.152 552.547 293.414 552.488 cv
293.676 552.437 293.902 552.375 294.094 552.305 cv
294.281 552.238 294.438 552.18 294.563 552.121 cv
294.684 552.07 294.777 552.043 294.84 552.039 cv
294.875 552.043 294.906 552.051 294.938 552.066 cv
294.965 552.086 294.988 552.113 295.008 552.148 cv
295.02 552.187 295.031 552.238 295.043 552.301 cv
295.047 552.367 295.051 552.445 295.055 552.539 cv
295.051 552.609 295.047 552.668 295.047 552.715 cv
295.039 552.762 295.035 552.805 295.027 552.844 cv
295.02 552.883 295.004 552.918 294.988 552.949 cv
294.965 552.98 294.941 553.012 294.918 553.039 cv
294.887 553.07 294.805 553.117 294.664 553.18 cv
294.523 553.246 294.34 553.309 294.117 553.371 cv
293.891 553.434 293.633 553.488 293.34 553.539 cv
293.047 553.586 292.734 553.609 292.402 553.613 cv
291.824 553.609 291.316 553.531 290.887 553.371 cv
290.449 553.211 290.086 552.973 289.793 552.656 cv
289.492 552.34 289.27 551.945 289.121 551.465 cv
288.973 550.988 288.898 550.43 288.898 549.793 cv
288.898 549.195 288.973 548.656 289.129 548.172 cv
289.281 547.695 289.508 547.285 289.805 546.949 cv
290.098 546.613 290.453 546.355 290.867 546.176 cv
291.281 545.996 291.746 545.906 292.262 545.906 cv
292.813 545.906 293.281 545.996 293.668 546.172 cv
294.055 546.352 294.371 546.59 294.625 546.887 cv
294.871 547.187 295.055 547.539 295.172 547.937 cv
295.285 548.344 295.344 548.773 295.348 549.227 cv
cp
294.055 549.078 mo
294.07 548.402 293.918 547.871 293.602 547.488 cv
293.285 547.105 292.816 546.914 292.199 546.91 cv
291.875 546.914 291.594 546.973 291.355 547.09 cv
291.113 547.211 290.914 547.371 290.754 547.566 cv
290.59 547.766 290.465 547.996 290.379 548.258 cv
290.289 548.52 290.238 548.793 290.23 549.078 cv
cp
f
301.41 546.715 mo
301.406 546.832 301.406 546.93 301.402 547.004 cv
301.395 547.086 301.383 547.148 301.371 547.187 cv
301.352 547.234 301.332 547.266 301.313 547.289 cv
301.285 547.312 301.254 547.324 301.215 547.324 cv
301.172 547.324 301.121 547.312 301.063 547.289 cv
301 547.266 300.93 547.242 300.859 547.219 cv
300.781 547.195 300.699 547.176 300.605 547.152 cv
300.512 547.137 300.41 547.125 300.301 547.121 cv
300.168 547.125 300.039 547.152 299.918 547.199 cv
299.793 547.254 299.664 547.34 299.527 547.457 cv
299.387 547.582 299.242 547.738 299.094 547.934 cv
298.941 548.129 298.773 548.371 298.594 548.656 cv
298.594 553.27 li
298.59 553.316 298.578 553.352 298.563 553.375 cv
298.539 553.406 298.508 553.43 298.461 553.449 cv
298.414 553.469 298.348 553.48 298.27 553.496 cv
298.184 553.504 298.078 553.512 297.949 553.512 cv
297.82 553.512 297.715 553.504 297.637 553.496 cv
297.551 553.48 297.484 553.469 297.438 553.449 cv
297.383 553.43 297.352 553.406 297.336 553.375 cv
297.316 553.352 297.305 553.316 297.309 553.27 cv
297.309 546.258 li
297.305 546.219 297.313 546.184 297.332 546.152 cv
297.344 546.125 297.375 546.102 297.426 546.074 cv
297.469 546.055 297.531 546.039 297.605 546.027 cv
297.676 546.023 297.77 546.02 297.895 546.016 cv
298.004 546.02 298.102 546.023 298.18 546.027 cv
298.254 546.039 298.313 546.055 298.355 546.074 cv
298.395 546.102 298.422 546.125 298.441 546.152 cv
298.457 546.184 298.465 546.219 298.469 546.258 cv
298.469 547.277 li
298.656 546.996 298.84 546.77 299.012 546.594 cv
299.18 546.418 299.34 546.277 299.492 546.176 cv
299.641 546.074 299.789 546.004 299.938 545.965 cv
300.086 545.926 300.234 545.906 300.387 545.906 cv
300.453 545.906 300.531 545.91 300.617 545.918 cv
300.703 545.926 300.793 545.941 300.887 545.961 cv
300.98 545.984 301.063 546.008 301.141 546.031 cv
301.211 546.059 301.266 546.086 301.301 546.109 cv
301.328 546.141 301.348 546.164 301.363 546.184 cv
301.371 546.211 301.383 546.242 301.391 546.273 cv
301.398 546.312 301.402 546.363 301.406 546.434 cv
301.406 546.504 301.406 546.598 301.41 546.715 cv
cp
f
313.168 549.684 mo
313.164 550.262 313.09 550.789 312.941 551.266 cv
312.789 551.75 312.563 552.164 312.266 552.508 cv
311.965 552.859 311.59 553.129 311.145 553.32 cv
310.691 553.516 310.172 553.609 309.582 553.613 cv
309.004 553.609 308.5 553.527 308.074 553.355 cv
307.645 553.187 307.289 552.937 307.004 552.609 cv
306.715 552.281 306.5 551.887 306.363 551.418 cv
306.223 550.953 306.156 550.422 306.156 549.824 cv
306.156 549.258 306.227 548.73 306.375 548.25 cv
306.52 547.77 306.746 547.355 307.047 547.004 cv
307.344 546.656 307.715 546.387 308.164 546.195 cv
308.609 546.004 309.133 545.906 309.73 545.906 cv
310.309 545.906 310.809 545.992 311.238 546.164 cv
311.664 546.336 312.023 546.586 312.309 546.914 cv
312.594 547.242 312.809 547.641 312.953 548.105 cv
313.094 548.574 313.164 549.102 313.168 549.684 cv
cp
311.836 549.77 mo
311.832 549.395 311.797 549.035 311.73 548.695 cv
311.656 548.359 311.539 548.066 311.379 547.809 cv
311.215 547.559 310.996 547.355 310.719 547.203 cv
310.438 547.059 310.09 546.984 309.68 546.98 cv
309.293 546.984 308.965 547.051 308.691 547.184 cv
308.414 547.32 308.188 547.512 308.012 547.758 cv
307.832 548.004 307.699 548.297 307.617 548.633 cv
307.527 548.973 307.484 549.34 307.488 549.738 cv
307.484 550.125 307.52 550.488 307.594 550.824 cv
307.66 551.164 307.777 551.457 307.945 551.707 cv
308.109 551.961 308.332 552.164 308.609 552.309 cv
308.887 552.461 309.234 552.535 309.648 552.531 cv
310.023 552.535 310.352 552.465 310.633 552.328 cv
310.91 552.195 311.137 552.008 311.316 551.758 cv
311.492 551.516 311.621 551.223 311.707 550.887 cv
311.789 550.551 311.832 550.18 311.836 549.77 cv
cp
f
318.902 543.371 mo
318.898 543.473 318.895 543.551 318.887 543.609 cv
318.875 543.672 318.863 543.723 318.852 543.754 cv
318.836 543.793 318.82 543.816 318.801 543.828 cv
318.777 543.844 318.75 543.852 318.723 543.848 cv
318.684 543.852 318.637 543.84 318.586 543.812 cv
318.527 543.793 318.461 543.766 318.387 543.734 cv
318.305 543.707 318.215 543.68 318.109 543.656 cv
318 543.633 317.875 543.621 317.742 543.621 cv
317.547 543.621 317.383 543.652 317.25 543.715 cv
317.109 543.777 317 543.875 316.922 544.008 cv
316.836 544.141 316.777 544.312 316.742 544.523 cv
316.703 544.734 316.684 544.992 316.688 545.289 cv
316.688 546.055 li
318.254 546.055 li
318.293 546.059 318.328 546.066 318.359 546.082 cv
318.387 546.102 318.414 546.133 318.438 546.176 cv
318.461 546.223 318.477 546.281 318.492 546.344 cv
318.5 546.414 318.508 546.496 318.512 546.59 cv
318.508 546.781 318.484 546.914 318.441 546.996 cv
318.391 547.082 318.328 547.125 318.254 547.121 cv
316.688 547.121 li
316.688 553.27 li
316.684 553.316 316.676 553.352 316.656 553.375 cv
316.633 553.406 316.598 553.43 316.551 553.449 cv
316.5 553.469 316.434 553.48 316.352 553.496 cv
316.266 553.504 316.16 553.512 316.043 553.512 cv
315.914 553.512 315.813 553.504 315.73 553.496 cv
315.645 553.48 315.578 553.469 315.531 553.449 cv
315.48 553.43 315.445 553.406 315.426 553.375 cv
315.402 553.352 315.391 553.316 315.395 553.27 cv
315.395 547.121 li
314.406 547.121 li
314.32 547.125 314.258 547.082 314.219 546.996 cv
314.176 546.914 314.152 546.781 314.156 546.59 cv
314.152 546.496 314.16 546.414 314.172 546.344 cv
314.18 546.281 314.195 546.223 314.219 546.176 cv
314.238 546.133 314.262 546.102 314.297 546.082 cv
314.324 546.066 314.363 546.059 314.406 546.055 cv
315.395 546.055 li
315.395 545.328 li
315.391 544.844 315.438 544.426 315.531 544.07 cv
315.621 543.723 315.758 543.434 315.945 543.211 cv
316.129 542.988 316.363 542.824 316.652 542.715 cv
316.934 542.609 317.27 542.555 317.656 542.555 cv
317.832 542.555 318.008 542.574 318.184 542.605 cv
318.352 542.645 318.484 542.68 318.582 542.715 cv
318.672 542.758 318.734 542.793 318.77 542.82 cv
318.797 542.855 318.824 542.895 318.848 542.941 cv
318.867 542.992 318.879 543.055 318.891 543.121 cv
318.895 543.195 318.898 543.277 318.902 543.371 cv
cp
f
329.098 550.637 mo
329.094 551.109 329.008 551.531 328.836 551.898 cv
328.66 552.273 328.418 552.586 328.109 552.84 cv
327.801 553.098 327.438 553.289 327.02 553.418 cv
326.598 553.547 326.148 553.609 325.668 553.613 cv
325.328 553.609 325.012 553.582 324.727 553.527 cv
324.438 553.469 324.184 553.402 323.957 553.316 cv
323.73 553.238 323.539 553.152 323.387 553.059 cv
323.23 552.973 323.125 552.895 323.066 552.832 cv
323.008 552.77 322.965 552.691 322.938 552.598 cv
322.906 552.504 322.891 552.375 322.895 552.211 cv
322.891 552.098 322.895 552.004 322.91 551.926 cv
322.918 551.852 322.934 551.789 322.957 551.742 cv
322.973 551.695 323 551.664 323.035 551.645 cv
323.063 551.629 323.098 551.621 323.141 551.617 cv
323.211 551.621 323.313 551.664 323.449 551.75 cv
323.578 551.84 323.75 551.937 323.961 552.039 cv
324.168 552.148 324.418 552.246 324.711 552.332 cv
325.004 552.426 325.344 552.469 325.73 552.469 cv
326.02 552.469 326.285 552.43 326.527 552.352 cv
326.766 552.273 326.973 552.164 327.152 552.02 cv
327.324 551.879 327.461 551.703 327.555 551.492 cv
327.648 551.285 327.695 551.051 327.695 550.785 cv
327.695 550.504 327.629 550.258 327.5 550.051 cv
327.367 549.852 327.195 549.676 326.984 549.52 cv
326.77 549.371 326.527 549.23 326.254 549.098 cv
325.98 548.973 325.699 548.84 325.418 548.707 cv
325.129 548.574 324.852 548.43 324.582 548.266 cv
324.313 548.109 324.07 547.918 323.859 547.699 cv
323.641 547.48 323.469 547.227 323.34 546.93 cv
323.203 546.641 323.137 546.289 323.141 545.875 cv
323.137 545.457 323.215 545.082 323.371 544.75 cv
323.523 544.422 323.734 544.145 324.012 543.918 cv
324.281 543.699 324.605 543.527 324.984 543.41 cv
325.359 543.293 325.77 543.234 326.207 543.234 cv
326.426 543.234 326.648 543.254 326.879 543.293 cv
327.102 543.332 327.313 543.383 327.516 543.445 cv
327.711 543.512 327.891 543.586 328.051 543.664 cv
328.203 543.746 328.305 543.812 328.359 543.859 cv
328.406 543.914 328.441 543.953 328.457 543.977 cv
328.473 544.008 328.484 544.043 328.496 544.086 cv
328.504 544.133 328.512 544.187 328.52 544.246 cv
328.523 544.312 328.527 544.391 328.527 544.488 cv
328.527 544.582 328.523 544.668 328.516 544.738 cv
328.508 544.816 328.496 544.875 328.48 544.922 cv
328.465 544.969 328.441 545.004 328.414 545.027 cv
328.383 545.051 328.352 545.062 328.316 545.062 cv
328.258 545.062 328.168 545.027 328.047 544.957 cv
327.922 544.887 327.77 544.805 327.598 544.711 cv
327.418 544.621 327.211 544.539 326.973 544.461 cv
326.727 544.387 326.457 544.348 326.16 544.348 cv
325.879 544.348 325.633 544.387 325.426 544.461 cv
325.215 544.539 325.043 544.641 324.91 544.762 cv
324.773 544.887 324.672 545.031 324.605 545.203 cv
324.539 545.375 324.508 545.559 324.508 545.75 cv
324.508 546.035 324.57 546.277 324.699 546.477 cv
324.828 546.68 325 546.859 325.219 547.012 cv
325.43 547.172 325.676 547.312 325.953 547.441 cv
326.227 547.574 326.508 547.707 326.797 547.836 cv
327.082 547.969 327.363 548.113 327.637 548.27 cv
327.91 548.43 328.156 548.617 328.375 548.832 cv
328.59 549.051 328.762 549.305 328.898 549.598 cv
329.027 549.891 329.094 550.238 329.098 550.637 cv
cp
f
336.867 553.27 mo
336.863 553.316 336.855 553.352 336.84 553.375 cv
336.82 553.406 336.785 553.43 336.742 553.449 cv
336.695 553.469 336.637 553.48 336.563 553.496 cv
336.484 553.504 336.391 553.512 336.285 553.512 cv
336.16 553.512 336.063 553.504 335.992 553.496 cv
335.914 553.48 335.855 553.469 335.813 553.449 cv
335.766 553.43 335.734 553.406 335.723 553.375 cv
335.703 553.352 335.695 553.316 335.699 553.27 cv
335.699 552.344 li
335.297 552.789 334.902 553.109 334.516 553.309 cv
334.121 553.512 333.727 553.609 333.332 553.613 cv
332.859 553.609 332.465 553.535 332.148 553.379 cv
331.828 553.227 331.57 553.016 331.375 552.746 cv
331.172 552.48 331.031 552.168 330.949 551.809 cv
330.859 551.453 330.816 551.02 330.82 550.512 cv
330.82 546.258 li
330.816 546.219 330.824 546.184 330.848 546.152 cv
330.863 546.125 330.898 546.102 330.953 546.074 cv
331 546.055 331.07 546.039 331.156 546.027 cv
331.238 546.023 331.34 546.02 331.469 546.016 cv
331.59 546.02 331.695 546.023 331.781 546.027 cv
331.863 546.039 331.93 546.055 331.977 546.074 cv
332.023 546.102 332.059 546.125 332.082 546.152 cv
332.102 546.184 332.109 546.219 332.113 546.258 cv
332.113 550.34 li
332.109 550.754 332.141 551.082 332.203 551.328 cv
332.262 551.574 332.352 551.785 332.477 551.957 cv
332.594 552.137 332.75 552.27 332.941 552.363 cv
333.125 552.461 333.344 552.512 333.594 552.508 cv
333.914 552.512 334.234 552.395 334.559 552.164 cv
334.875 551.937 335.215 551.602 335.574 551.156 cv
335.574 546.258 li
335.574 546.219 335.582 546.184 335.602 546.152 cv
335.617 546.125 335.652 546.102 335.707 546.074 cv
335.758 546.055 335.824 546.039 335.906 546.027 cv
335.984 546.023 336.09 546.02 336.223 546.016 cv
336.344 546.02 336.449 546.023 336.535 546.027 cv
336.617 546.039 336.68 546.055 336.727 546.074 cv
336.77 546.102 336.805 546.125 336.832 546.152 cv
336.852 546.184 336.863 546.219 336.867 546.258 cv
cp
f
345.723 549.668 mo
345.719 550.277 345.652 550.828 345.523 551.312 cv
345.387 551.801 345.191 552.215 344.938 552.555 cv
344.68 552.898 344.363 553.16 343.992 553.34 cv
343.617 553.523 343.191 553.609 342.707 553.613 cv
342.48 553.609 342.273 553.59 342.086 553.547 cv
341.898 553.5 341.711 553.43 341.531 553.332 cv
341.344 553.234 341.164 553.109 340.984 552.957 cv
340.801 552.809 340.609 552.629 340.41 552.414 cv
340.41 553.27 li
340.41 553.316 340.398 553.352 340.379 553.379 cv
340.355 553.414 340.32 553.437 340.277 553.453 cv
340.227 553.469 340.168 553.48 340.102 553.496 cv
340.027 553.504 339.938 553.512 339.832 553.512 cv
339.723 553.512 339.637 553.504 339.566 553.496 cv
339.492 553.48 339.43 553.469 339.387 553.453 cv
339.336 553.437 339.305 553.414 339.293 553.379 cv
339.273 553.352 339.266 553.316 339.27 553.27 cv
339.27 542.859 li
339.266 542.82 339.277 542.785 339.297 542.75 cv
339.313 542.723 339.344 542.695 339.398 542.672 cv
339.445 542.652 339.512 542.637 339.598 542.625 cv
339.676 542.617 339.781 542.613 339.91 542.609 cv
340.039 542.613 340.145 542.617 340.23 542.625 cv
340.309 542.637 340.375 542.652 340.422 542.672 cv
340.469 542.695 340.5 542.723 340.523 542.75 cv
340.539 542.785 340.551 542.82 340.555 542.859 cv
340.555 547.059 li
340.762 546.848 340.965 546.668 341.16 546.523 cv
341.355 546.379 341.543 546.262 341.73 546.168 cv
341.914 546.082 342.102 546.016 342.293 545.969 cv
342.477 545.93 342.676 545.906 342.887 545.906 cv
343.391 545.906 343.824 546.008 344.191 546.211 cv
344.551 546.414 344.844 546.687 345.07 547.023 cv
345.293 547.367 345.461 547.766 345.566 548.223 cv
345.668 548.68 345.719 549.16 345.723 549.668 cv
cp
344.391 549.816 mo
344.387 549.461 344.359 549.113 344.309 548.773 cv
344.25 548.437 344.156 548.141 344.02 547.879 cv
343.883 547.621 343.703 547.41 343.48 547.25 cv
343.254 547.094 342.973 547.016 342.641 547.012 cv
342.473 547.016 342.309 547.039 342.148 547.082 cv
341.984 547.133 341.82 547.211 341.652 547.316 cv
341.484 547.43 341.309 547.57 341.133 547.738 cv
340.949 547.914 340.758 548.129 340.555 548.383 cv
340.555 551.18 li
340.91 551.613 341.25 551.945 341.574 552.168 cv
341.898 552.398 342.234 552.512 342.586 552.508 cv
342.906 552.512 343.184 552.434 343.418 552.273 cv
343.645 552.121 343.832 551.914 343.977 551.652 cv
344.121 551.398 344.227 551.109 344.293 550.789 cv
344.355 550.473 344.387 550.148 344.391 549.816 cv
cp
f
350.859 549.531 mo
350.859 549.734 350.836 549.871 350.789 549.949 cv
350.742 550.027 350.672 550.066 350.586 550.066 cv
347.328 550.066 li
347.234 550.066 347.168 550.027 347.121 549.945 cv
347.074 549.867 347.051 549.73 347.051 549.531 cv
347.051 549.336 347.074 549.195 347.121 549.117 cv
347.168 549.039 347.234 549 347.328 549 cv
350.586 549 li
350.625 549 350.664 549.008 350.699 549.023 cv
350.73 549.039 350.758 549.07 350.785 549.113 cv
350.805 549.16 350.824 549.215 350.84 549.281 cv
350.852 549.352 350.859 549.437 350.859 549.531 cv
cp
f
354.109 553.262 mo
354.105 553.305 354.098 553.34 354.078 553.371 cv
354.055 553.402 354.016 553.43 353.969 553.445 cv
353.914 553.465 353.848 553.477 353.762 553.492 cv
353.676 553.504 353.566 553.512 353.441 553.512 cv
353.313 553.512 353.207 553.504 353.121 553.492 cv
353.031 553.477 352.961 553.465 352.91 553.445 cv
352.855 553.43 352.82 553.402 352.801 553.371 cv
352.777 553.34 352.766 553.305 352.77 553.262 cv
352.77 543.582 li
352.766 543.543 352.777 543.508 352.805 543.473 cv
352.824 543.445 352.863 543.418 352.922 543.398 cv
352.973 543.383 353.043 543.367 353.133 543.352 cv
353.215 543.34 353.316 543.336 353.441 543.332 cv
353.566 543.336 353.676 543.34 353.762 543.352 cv
353.848 543.367 353.914 543.383 353.969 543.398 cv
354.016 543.418 354.055 543.445 354.078 543.473 cv
354.098 543.508 354.105 543.543 354.109 543.582 cv
cp
f
367.098 553.27 mo
367.094 553.316 367.086 553.352 367.066 553.375 cv
367.043 553.406 367.008 553.43 366.965 553.449 cv
366.914 553.469 366.848 553.48 366.77 553.496 cv
366.684 553.504 366.582 553.512 366.457 553.512 cv
366.324 553.512 366.215 553.504 366.137 553.496 cv
366.051 553.48 365.984 553.469 365.938 553.449 cv
365.883 553.43 365.848 553.406 365.832 553.375 cv
365.809 553.352 365.801 553.316 365.801 553.27 cv
365.801 549.008 li
365.801 548.715 365.773 548.445 365.723 548.199 cv
365.668 547.957 365.586 547.746 365.473 547.566 cv
365.359 547.391 365.215 547.254 365.039 547.16 cv
364.859 547.066 364.648 547.02 364.414 547.02 cv
364.117 547.02 363.82 547.137 363.523 547.363 cv
363.219 547.598 362.891 547.93 362.535 548.367 cv
362.535 553.27 li
362.531 553.316 362.52 553.352 362.504 553.375 cv
362.48 553.406 362.449 553.43 362.402 553.449 cv
362.352 553.469 362.285 553.48 362.203 553.496 cv
362.117 553.504 362.012 553.512 361.891 553.512 cv
361.77 553.512 361.668 553.504 361.582 553.496 cv
361.496 553.48 361.426 553.469 361.379 553.449 cv
361.324 553.43 361.293 553.406 361.277 553.375 cv
361.258 553.352 361.246 553.316 361.25 553.27 cv
361.25 549.008 li
361.246 548.715 361.219 548.445 361.164 548.199 cv
361.105 547.957 361.02 547.746 360.906 547.566 cv
360.793 547.391 360.648 547.254 360.477 547.16 cv
360.297 547.066 360.09 547.02 359.855 547.02 cv
359.555 547.02 359.258 547.137 358.957 547.363 cv
358.656 547.598 358.328 547.93 357.977 548.367 cv
357.977 553.27 li
357.973 553.316 357.961 553.352 357.945 553.375 cv
357.922 553.406 357.891 553.43 357.844 553.449 cv
357.797 553.469 357.73 553.48 357.652 553.496 cv
357.566 553.504 357.461 553.512 357.332 553.512 cv
357.203 553.512 357.098 553.504 357.02 553.496 cv
356.934 553.48 356.867 553.469 356.82 553.449 cv
356.766 553.43 356.734 553.406 356.719 553.375 cv
356.699 553.352 356.688 553.316 356.691 553.27 cv
356.691 546.258 li
356.688 546.219 356.695 546.184 356.715 546.152 cv
356.727 546.125 356.758 546.102 356.809 546.074 cv
356.852 546.055 356.914 546.039 356.988 546.027 cv
357.059 546.023 357.152 546.02 357.277 546.016 cv
357.387 546.02 357.484 546.023 357.563 546.027 cv
357.637 546.039 357.695 546.055 357.738 546.074 cv
357.777 546.102 357.805 546.125 357.824 546.152 cv
357.84 546.184 357.848 546.219 357.852 546.258 cv
357.852 547.184 li
358.242 546.742 358.625 546.422 359 546.215 cv
359.367 546.012 359.746 545.906 360.129 545.906 cv
360.418 545.906 360.676 545.941 360.91 546.008 cv
361.137 546.078 361.344 546.172 361.523 546.293 cv
361.699 546.414 361.848 546.559 361.977 546.727 cv
362.098 546.898 362.203 547.09 362.289 547.293 cv
362.52 547.043 362.742 546.828 362.953 546.648 cv
363.164 546.477 363.367 546.332 363.563 546.219 cv
363.758 546.113 363.945 546.035 364.129 545.98 cv
364.313 545.934 364.5 545.906 364.688 545.906 cv
365.141 545.906 365.52 545.988 365.824 546.145 cv
366.129 546.309 366.375 546.52 366.57 546.781 cv
366.758 547.047 366.895 547.355 366.977 547.711 cv
367.055 548.066 367.094 548.441 367.098 548.836 cv
cp
f
374.727 553.277 mo
374.723 553.34 374.703 553.387 374.664 553.418 cv
374.621 553.449 374.563 553.473 374.492 553.488 cv
374.414 553.504 374.309 553.512 374.172 553.512 cv
374.035 553.512 373.926 553.504 373.848 553.488 cv
373.762 553.473 373.703 553.449 373.672 553.418 cv
373.633 553.387 373.617 553.34 373.621 553.277 cv
373.621 552.578 li
373.313 552.906 372.969 553.16 372.594 553.34 cv
372.215 553.523 371.816 553.609 371.398 553.613 cv
371.023 553.609 370.691 553.562 370.395 553.469 cv
370.098 553.371 369.844 553.234 369.633 553.051 cv
369.422 552.871 369.258 552.648 369.141 552.383 cv
369.023 552.121 368.965 551.82 368.969 551.477 cv
368.965 551.086 369.043 550.742 369.207 550.449 cv
369.363 550.16 369.598 549.918 369.902 549.727 cv
370.203 549.535 370.57 549.391 371.008 549.293 cv
371.441 549.199 371.934 549.152 372.48 549.148 cv
373.449 549.148 li
373.449 548.602 li
373.445 548.332 373.418 548.094 373.363 547.887 cv
373.305 547.68 373.211 547.508 373.086 547.367 cv
372.953 547.23 372.789 547.125 372.59 547.055 cv
372.383 546.984 372.133 546.949 371.844 546.949 cv
371.523 546.949 371.238 546.988 370.988 547.062 cv
370.73 547.141 370.512 547.223 370.324 547.312 cv
370.137 547.406 369.977 547.492 369.852 547.562 cv
369.719 547.641 369.625 547.676 369.566 547.676 cv
369.523 547.676 369.488 547.668 369.457 547.645 cv
369.426 547.629 369.398 547.598 369.375 547.551 cv
369.352 547.512 369.332 547.457 369.324 547.391 cv
369.309 547.328 369.305 547.258 369.309 547.176 cv
369.305 547.051 369.313 546.945 369.336 546.867 cv
369.352 546.793 369.398 546.723 369.469 546.652 cv
369.539 546.586 369.66 546.508 369.832 546.418 cv
370.004 546.328 370.199 546.246 370.422 546.168 cv
370.645 546.098 370.891 546.035 371.156 545.98 cv
371.422 545.934 371.688 545.906 371.961 545.906 cv
372.461 545.906 372.891 545.965 373.242 546.078 cv
373.594 546.195 373.879 546.363 374.102 546.582 cv
374.316 546.805 374.477 547.078 374.578 547.402 cv
374.676 547.734 374.723 548.117 374.727 548.547 cv
cp
373.449 550.074 mo
372.348 550.074 li
371.992 550.078 371.688 550.109 371.43 550.164 cv
371.168 550.227 370.953 550.312 370.781 550.43 cv
370.609 550.547 370.484 550.687 370.406 550.852 cv
370.324 551.016 370.281 551.203 370.285 551.414 cv
370.281 551.781 370.398 552.074 370.629 552.285 cv
370.859 552.504 371.184 552.609 371.602 552.609 cv
371.938 552.609 372.25 552.523 372.539 552.352 cv
372.828 552.18 373.129 551.918 373.449 551.562 cv
cp
f
382.949 546.574 mo
382.945 546.758 382.922 546.891 382.875 546.969 cv
382.824 547.051 382.762 547.09 382.688 547.09 cv
381.68 547.09 li
381.859 547.277 381.988 547.484 382.063 547.711 cv
382.133 547.937 382.168 548.172 382.172 548.414 cv
382.168 548.82 382.102 549.18 381.977 549.492 cv
381.844 549.805 381.66 550.07 381.418 550.281 cv
381.176 550.5 380.887 550.664 380.559 550.777 cv
380.223 550.895 379.855 550.953 379.453 550.949 cv
379.164 550.953 378.891 550.914 378.637 550.836 cv
378.375 550.762 378.18 550.668 378.043 550.551 cv
377.949 550.648 377.871 550.754 377.813 550.871 cv
377.75 550.992 377.719 551.129 377.723 551.281 cv
377.719 551.465 377.805 551.617 377.977 551.734 cv
378.145 551.859 378.367 551.922 378.648 551.93 cv
380.48 552.008 li
380.828 552.02 381.145 552.066 381.438 552.152 cv
381.727 552.238 381.98 552.363 382.195 552.52 cv
382.406 552.68 382.574 552.871 382.695 553.102 cv
382.813 553.336 382.871 553.605 382.875 553.91 cv
382.871 554.23 382.805 554.535 382.672 554.828 cv
382.535 555.117 382.328 555.371 382.051 555.594 cv
381.77 555.812 381.414 555.988 380.984 556.117 cv
380.555 556.242 380.047 556.305 379.461 556.309 cv
378.891 556.305 378.406 556.258 378.012 556.164 cv
377.613 556.066 377.289 555.934 377.035 555.77 cv
376.781 555.602 376.598 555.406 376.484 555.176 cv
376.367 554.941 376.309 554.687 376.313 554.422 cv
376.309 554.25 376.328 554.086 376.375 553.926 cv
376.414 553.762 376.477 553.609 376.563 553.465 cv
376.645 553.32 376.754 553.184 376.883 553.047 cv
377.008 552.918 377.152 552.785 377.324 552.656 cv
377.066 552.527 376.879 552.363 376.758 552.164 cv
376.637 551.969 376.578 551.758 376.578 551.523 cv
376.578 551.211 376.641 550.926 376.77 550.676 cv
376.898 550.426 377.059 550.203 377.254 550.004 cv
377.09 549.812 376.965 549.598 376.871 549.355 cv
376.777 549.117 376.73 548.824 376.73 548.477 cv
376.73 548.082 376.797 547.723 376.934 547.402 cv
377.066 547.086 377.254 546.82 377.496 546.602 cv
377.734 546.387 378.02 546.219 378.355 546.098 cv
378.688 545.984 379.055 545.926 379.453 545.922 cv
379.664 545.926 379.863 545.937 380.047 545.957 cv
380.23 545.984 380.402 546.016 380.566 546.055 cv
382.688 546.055 li
382.773 546.059 382.84 546.102 382.883 546.184 cv
382.926 546.273 382.945 546.402 382.949 546.574 cv
cp
380.941 548.422 mo
380.938 547.949 380.805 547.578 380.547 547.305 cv
380.281 547.039 379.91 546.902 379.43 546.902 cv
379.176 546.902 378.957 546.945 378.777 547.027 cv
378.59 547.113 378.438 547.227 378.316 547.371 cv
378.195 547.52 378.105 547.687 378.047 547.875 cv
377.984 548.062 377.953 548.262 377.957 548.469 cv
377.953 548.934 378.086 549.297 378.348 549.562 cv
378.609 549.828 378.977 549.961 379.453 549.957 cv
379.703 549.961 379.922 549.922 380.113 549.836 cv
380.297 549.758 380.453 549.645 380.578 549.504 cv
380.699 549.363 380.789 549.199 380.852 549.008 cv
380.906 548.824 380.938 548.629 380.941 548.422 cv
cp
381.586 553.98 mo
381.582 553.676 381.457 553.445 381.215 553.281 cv
380.965 553.121 380.633 553.031 380.215 553.02 cv
378.398 552.957 li
378.23 553.09 378.094 553.215 377.992 553.328 cv
377.883 553.445 377.801 553.555 377.738 553.664 cv
377.676 553.77 377.633 553.875 377.609 553.98 cv
377.586 554.082 377.574 554.187 377.574 554.297 cv
377.574 554.633 377.742 554.887 378.086 555.066 cv
378.426 555.238 378.906 555.328 379.523 555.328 cv
379.91 555.328 380.234 555.289 380.5 555.215 cv
380.758 555.137 380.969 555.035 381.133 554.914 cv
381.289 554.785 381.406 554.645 381.48 554.484 cv
381.547 554.324 381.582 554.156 381.586 553.98 cv
cp
f
390.512 549.461 mo
390.508 549.664 390.457 549.805 390.359 549.891 cv
390.254 549.977 390.137 550.02 390.012 550.02 cv
385.395 550.02 li
385.391 550.41 385.43 550.762 385.512 551.074 cv
385.586 551.387 385.719 551.656 385.902 551.875 cv
386.082 552.102 386.316 552.273 386.613 552.391 cv
386.902 552.516 387.262 552.574 387.688 552.57 cv
388.02 552.574 388.316 552.547 388.578 552.488 cv
388.84 552.437 389.066 552.375 389.258 552.305 cv
389.445 552.238 389.602 552.18 389.727 552.121 cv
389.848 552.07 389.941 552.043 390.004 552.039 cv
390.039 552.043 390.07 552.051 390.102 552.066 cv
390.129 552.086 390.152 552.113 390.172 552.148 cv
390.184 552.187 390.195 552.238 390.207 552.301 cv
390.211 552.367 390.215 552.445 390.219 552.539 cv
390.215 552.609 390.211 552.668 390.211 552.715 cv
390.203 552.762 390.199 552.805 390.191 552.844 cv
390.184 552.883 390.168 552.918 390.152 552.949 cv
390.129 552.98 390.105 553.012 390.082 553.039 cv
390.051 553.07 389.969 553.117 389.828 553.18 cv
389.688 553.246 389.504 553.309 389.281 553.371 cv
389.055 553.434 388.797 553.488 388.504 553.539 cv
388.211 553.586 387.898 553.609 387.566 553.613 cv
386.988 553.609 386.48 553.531 386.051 553.371 cv
385.613 553.211 385.25 552.973 384.957 552.656 cv
384.656 552.34 384.434 551.945 384.285 551.465 cv
384.137 550.988 384.063 550.43 384.063 549.793 cv
384.063 549.195 384.137 548.656 384.293 548.172 cv
384.445 547.695 384.672 547.285 384.969 546.949 cv
385.262 546.613 385.617 546.355 386.031 546.176 cv
386.445 545.996 386.91 545.906 387.426 545.906 cv
387.977 545.906 388.445 545.996 388.832 546.172 cv
389.219 546.352 389.535 546.59 389.789 546.887 cv
390.035 547.187 390.219 547.539 390.336 547.937 cv
390.449 548.344 390.508 548.773 390.512 549.227 cv
cp
389.219 549.078 mo
389.234 548.402 389.082 547.871 388.766 547.488 cv
388.449 547.105 387.98 546.914 387.363 546.91 cv
387.039 546.914 386.758 546.973 386.52 547.09 cv
386.277 547.211 386.078 547.371 385.918 547.566 cv
385.754 547.766 385.629 547.996 385.543 548.258 cv
385.453 548.52 385.402 548.793 385.395 549.078 cv
cp
f
396.875 551.359 mo
396.871 551.723 396.805 552.043 396.676 552.32 cv
396.543 552.602 396.355 552.836 396.113 553.027 cv
395.867 553.223 395.574 553.367 395.238 553.465 cv
394.898 553.562 394.527 553.609 394.125 553.613 cv
393.871 553.609 393.633 553.59 393.41 553.555 cv
393.184 553.512 392.984 553.465 392.805 553.406 cv
392.625 553.348 392.473 553.285 392.348 553.219 cv
392.223 553.156 392.129 553.098 392.074 553.043 cv
392.016 552.992 391.977 552.922 391.953 552.824 cv
391.926 552.734 391.914 552.605 391.914 552.445 cv
391.914 552.348 391.918 552.266 391.93 552.195 cv
391.938 552.129 391.949 552.074 391.969 552.031 cv
391.98 551.992 392.004 551.961 392.031 551.941 cv
392.059 551.926 392.09 551.918 392.129 551.914 cv
392.184 551.918 392.27 551.953 392.383 552.02 cv
392.492 552.094 392.629 552.172 392.797 552.25 cv
392.957 552.336 393.148 552.41 393.375 552.48 cv
393.594 552.551 393.852 552.586 394.148 552.586 cv
394.363 552.586 394.563 552.562 394.742 552.516 cv
394.918 552.469 395.07 552.402 395.199 552.309 cv
395.328 552.223 395.43 552.105 395.5 551.961 cv
395.57 551.824 395.605 551.656 395.605 551.461 cv
395.605 551.266 395.555 551.102 395.453 550.965 cv
395.352 550.832 395.215 550.711 395.051 550.605 cv
394.883 550.504 394.699 550.414 394.492 550.328 cv
394.281 550.25 394.066 550.164 393.848 550.074 cv
393.629 549.988 393.414 549.887 393.203 549.773 cv
392.992 549.664 392.801 549.531 392.637 549.367 cv
392.465 549.211 392.332 549.016 392.234 548.789 cv
392.129 548.566 392.078 548.301 392.082 547.988 cv
392.078 547.715 392.133 547.449 392.242 547.195 cv
392.348 546.945 392.508 546.727 392.723 546.535 cv
392.934 546.348 393.199 546.195 393.52 546.078 cv
393.84 545.965 394.211 545.906 394.641 545.906 cv
394.824 545.906 395.012 545.922 395.199 545.953 cv
395.383 545.984 395.551 546.023 395.707 546.07 cv
395.855 546.117 395.984 546.168 396.094 546.223 cv
396.195 546.277 396.277 546.328 396.336 546.367 cv
396.387 546.414 396.422 546.449 396.445 546.477 cv
396.461 546.508 396.477 546.543 396.484 546.578 cv
396.492 546.621 396.5 546.668 396.508 546.723 cv
396.516 546.781 396.52 546.852 396.52 546.934 cv
396.52 547.023 396.516 547.102 396.508 547.164 cv
396.5 547.234 396.484 547.285 396.469 547.324 cv
396.445 547.367 396.426 547.398 396.402 547.414 cv
396.375 547.434 396.344 547.441 396.316 547.441 cv
396.266 547.441 396.199 547.414 396.113 547.355 cv
396.023 547.301 395.91 547.238 395.77 547.172 cv
395.629 547.109 395.461 547.051 395.273 546.988 cv
395.082 546.934 394.867 546.902 394.625 546.902 cv
394.402 546.902 394.211 546.93 394.047 546.977 cv
393.879 547.031 393.742 547.102 393.637 547.187 cv
393.531 547.281 393.449 547.387 393.398 547.512 cv
393.34 547.637 393.313 547.773 393.316 547.918 cv
393.313 548.121 393.363 548.289 393.469 548.426 cv
393.57 548.566 393.707 548.687 393.875 548.789 cv
394.039 548.895 394.23 548.988 394.445 549.07 cv
394.656 549.156 394.871 549.242 395.094 549.328 cv
395.313 549.418 395.531 549.52 395.75 549.625 cv
395.965 549.734 396.156 549.863 396.324 550.02 cv
396.488 550.176 396.621 550.363 396.723 550.582 cv
396.82 550.801 396.871 551.062 396.875 551.359 cv
cp
f
125.035 13.727 mo
125.031 14.258 124.934 14.723 124.738 15.121 cv
124.539 15.523 124.273 15.859 123.938 16.125 cv
123.598 16.395 123.199 16.594 122.75 16.727 cv
122.297 16.859 121.816 16.926 121.305 16.93 cv
120.953 16.926 120.629 16.898 120.332 16.844 cv
120.031 16.785 119.77 16.719 119.543 16.637 cv
119.313 16.559 119.121 16.473 118.969 16.383 cv
118.816 16.297 118.707 16.219 118.641 16.148 cv
118.57 16.082 118.52 15.984 118.496 15.859 cv
118.465 15.734 118.453 15.551 118.453 15.309 cv
118.453 15.148 118.457 15.016 118.469 14.902 cv
118.477 14.797 118.492 14.707 118.52 14.637 cv
118.539 14.57 118.57 14.523 118.613 14.492 cv
118.648 14.469 118.695 14.453 118.746 14.449 cv
118.816 14.453 118.918 14.496 119.055 14.578 cv
119.184 14.668 119.355 14.762 119.566 14.863 cv
119.773 14.969 120.02 15.066 120.309 15.148 cv
120.594 15.238 120.93 15.281 121.313 15.277 cv
121.563 15.281 121.785 15.25 121.98 15.187 cv
122.176 15.129 122.344 15.043 122.484 14.934 cv
122.621 14.824 122.727 14.691 122.801 14.531 cv
122.871 14.371 122.906 14.191 122.91 13.992 cv
122.906 13.766 122.844 13.57 122.723 13.402 cv
122.594 13.242 122.43 13.098 122.234 12.969 cv
122.031 12.844 121.805 12.723 121.551 12.609 cv
121.297 12.5 121.035 12.383 120.766 12.254 cv
120.492 12.133 120.23 11.988 119.977 11.828 cv
119.723 11.672 119.496 11.484 119.297 11.262 cv
119.094 11.043 118.93 10.781 118.809 10.477 cv
118.684 10.176 118.621 9.81598 118.625 9.39502 cv
118.621 8.914 118.711 8.48798 118.891 8.12097 cv
119.066 7.758 119.309 7.453 119.617 7.20697 cv
119.918 6.96899 120.277 6.789 120.691 6.66803 cv
121.105 6.55103 121.543 6.492 122.004 6.48798 cv
122.242 6.492 122.48 6.508 122.723 6.54303 cv
122.961 6.58197 123.184 6.633 123.391 6.69098 cv
123.598 6.75403 123.781 6.82397 123.945 6.89801 cv
124.102 6.97998 124.211 7.04303 124.266 7.09399 cv
124.316 7.14801 124.352 7.19501 124.371 7.22699 cv
124.387 7.26599 124.402 7.31201 124.418 7.37097 cv
124.43 7.43402 124.438 7.508 124.445 7.59802 cv
124.449 7.69098 124.453 7.80499 124.453 7.93701 cv
124.453 8.09003 124.449 8.21899 124.441 8.32001 cv
124.434 8.42603 124.418 8.51202 124.402 8.57397 cv
124.379 8.64502 124.355 8.69098 124.324 8.72302 cv
124.289 8.75403 124.242 8.77002 124.188 8.77002 cv
124.129 8.77002 124.039 8.73401 123.914 8.65997 cv
123.789 8.59003 123.633 8.51202 123.453 8.422 cv
123.27 8.34003 123.063 8.26202 122.824 8.19098 cv
122.582 8.125 122.316 8.09003 122.035 8.086 cv
121.809 8.09003 121.617 8.117 121.453 8.16803 cv
121.285 8.22302 121.145 8.297 121.035 8.39099 cv
120.922 8.48798 120.84 8.60498 120.785 8.73798 cv
120.73 8.87903 120.703 9.02002 120.703 9.16803 cv
120.703 9.39502 120.762 9.59003 120.887 9.75 cv
121.004 9.914 121.168 10.059 121.379 10.184 cv
121.582 10.312 121.816 10.434 122.074 10.543 cv
122.332 10.66 122.598 10.777 122.871 10.898 cv
123.141 11.027 123.402 11.168 123.664 11.324 cv
123.922 11.48 124.156 11.672 124.359 11.891 cv
124.563 12.117 124.723 12.375 124.848 12.672 cv
124.969 12.969 125.031 13.32 125.035 13.727 cv
cp
f
131.75 15.379 mo
131.746 15.516 131.742 15.629 131.738 15.719 cv
131.727 15.812 131.719 15.891 131.707 15.949 cv
131.691 16.012 131.676 16.062 131.66 16.098 cv
131.641 16.141 131.598 16.187 131.539 16.246 cv
131.473 16.309 131.367 16.383 131.219 16.465 cv
131.066 16.555 130.895 16.633 130.703 16.695 cv
130.512 16.766 130.305 16.816 130.078 16.859 cv
129.852 16.898 129.617 16.918 129.383 16.922 cv
128.844 16.918 128.371 16.84 127.957 16.672 cv
127.543 16.508 127.195 16.262 126.918 15.937 cv
126.633 15.613 126.422 15.219 126.281 14.75 cv
126.141 14.285 126.07 13.746 126.07 13.141 cv
126.07 12.445 126.156 11.848 126.328 11.34 cv
126.5 10.836 126.742 10.414 127.059 10.082 cv
127.367 9.75 127.734 9.50403 128.164 9.34003 cv
128.586 9.17999 129.055 9.09802 129.566 9.09802 cv
129.773 9.09802 129.977 9.117 130.18 9.15198 cv
130.375 9.19098 130.563 9.242 130.738 9.30103 cv
130.91 9.367 131.066 9.43701 131.207 9.51202 cv
131.344 9.59399 131.441 9.65997 131.5 9.71503 cv
131.555 9.77301 131.594 9.82001 131.621 9.85498 cv
131.641 9.89801 131.66 9.94897 131.676 10.008 cv
131.688 10.074 131.699 10.152 131.707 10.238 cv
131.715 10.332 131.719 10.441 131.719 10.57 cv
131.719 10.875 131.691 11.086 131.641 11.207 cv
131.586 11.328 131.52 11.391 131.438 11.387 cv
131.348 11.391 131.254 11.355 131.156 11.281 cv
131.055 11.211 130.938 11.129 130.805 11.039 cv
130.672 10.953 130.512 10.871 130.324 10.797 cv
130.137 10.727 129.91 10.691 129.652 10.687 cv
129.141 10.691 128.754 10.887 128.484 11.277 cv
128.211 11.668 128.074 12.242 128.078 13 cv
128.074 13.375 128.109 13.707 128.18 13.992 cv
128.246 14.277 128.344 14.516 128.48 14.707 cv
128.609 14.902 128.777 15.047 128.98 15.141 cv
129.18 15.238 129.41 15.285 129.676 15.285 cv
129.941 15.285 130.176 15.246 130.375 15.164 cv
130.566 15.086 130.734 14.996 130.883 14.895 cv
131.023 14.797 131.148 14.707 131.25 14.625 cv
131.348 14.547 131.43 14.508 131.5 14.504 cv
131.543 14.508 131.582 14.52 131.617 14.543 cv
131.645 14.57 131.668 14.617 131.691 14.687 cv
131.707 14.758 131.723 14.848 131.734 14.957 cv
131.742 15.066 131.746 15.207 131.75 15.379 cv
cp
f
139.023 16.508 mo
139.02 16.586 138.992 16.641 138.945 16.68 cv
138.891 16.723 138.809 16.75 138.699 16.77 cv
138.582 16.785 138.418 16.797 138.203 16.797 cv
137.965 16.797 137.793 16.785 137.691 16.77 cv
137.582 16.75 137.508 16.723 137.469 16.68 cv
137.422 16.641 137.402 16.586 137.402 16.508 cv
137.402 15.957 li
137.113 16.266 136.785 16.504 136.422 16.672 cv
136.055 16.844 135.648 16.926 135.203 16.93 cv
134.832 16.926 134.492 16.879 134.184 16.785 cv
133.875 16.691 133.609 16.551 133.383 16.355 cv
133.156 16.168 132.98 15.934 132.855 15.652 cv
132.73 15.375 132.668 15.047 132.672 14.668 cv
132.668 14.27 132.746 13.918 132.906 13.613 cv
133.063 13.316 133.301 13.07 133.617 12.875 cv
133.93 12.684 134.32 12.539 134.789 12.441 cv
135.258 12.352 135.801 12.305 136.418 12.301 cv
137.098 12.301 li
137.098 11.879 li
137.098 11.664 137.074 11.473 137.031 11.309 cv
136.984 11.148 136.91 11.012 136.813 10.898 cv
136.707 10.793 136.574 10.711 136.406 10.656 cv
136.234 10.605 136.023 10.582 135.781 10.578 cv
135.449 10.582 135.156 10.617 134.902 10.687 cv
134.641 10.762 134.414 10.844 134.219 10.93 cv
134.02 11.023 133.855 11.102 133.727 11.172 cv
133.59 11.246 133.48 11.285 133.402 11.281 cv
133.34 11.285 133.289 11.266 133.25 11.227 cv
133.203 11.191 133.168 11.141 133.141 11.07 cv
133.109 11.008 133.086 10.922 133.074 10.82 cv
133.055 10.723 133.047 10.613 133.051 10.492 cv
133.047 10.332 133.063 10.207 133.09 10.109 cv
133.113 10.02 133.16 9.93402 133.238 9.85498 cv
133.309 9.78101 133.438 9.69897 133.621 9.60901 cv
133.801 9.52002 134.012 9.43402 134.258 9.35498 cv
134.5 9.27698 134.77 9.21503 135.059 9.164 cv
135.348 9.117 135.645 9.09399 135.953 9.09003 cv
136.496 9.09399 136.961 9.14502 137.348 9.25 cv
137.734 9.35901 138.055 9.52301 138.305 9.742 cv
138.555 9.961 138.734 10.246 138.852 10.594 cv
138.961 10.945 139.02 11.359 139.023 11.832 cv
cp
137.098 13.531 mo
136.348 13.531 li
136.031 13.535 135.762 13.559 135.539 13.602 cv
135.313 13.652 135.129 13.723 134.992 13.812 cv
134.848 13.91 134.746 14.023 134.684 14.152 cv
134.617 14.289 134.582 14.437 134.586 14.605 cv
134.582 14.898 134.676 15.129 134.863 15.293 cv
135.047 15.461 135.305 15.543 135.633 15.543 cv
135.906 15.543 136.156 15.473 136.391 15.332 cv
136.617 15.191 136.855 14.988 137.098 14.715 cv
cp
f
142.945 16.484 mo
142.941 16.539 142.926 16.582 142.898 16.621 cv
142.863 16.66 142.809 16.695 142.738 16.719 cv
142.66 16.746 142.563 16.762 142.438 16.777 cv
142.313 16.789 142.152 16.797 141.965 16.797 cv
141.77 16.797 141.613 16.789 141.488 16.777 cv
141.363 16.762 141.262 16.746 141.188 16.719 cv
141.109 16.695 141.055 16.66 141.027 16.621 cv
140.992 16.582 140.977 16.539 140.98 16.484 cv
140.98 6.23798 li
140.977 6.18701 140.992 6.14099 141.027 6.09802 cv
141.055 6.05902 141.109 6.02301 141.188 5.992 cv
141.262 5.96503 141.363 5.94501 141.488 5.92603 cv
141.613 5.914 141.77 5.90601 141.965 5.90198 cv
142.152 5.90601 142.313 5.914 142.438 5.92603 cv
142.563 5.94501 142.66 5.96503 142.738 5.992 cv
142.809 6.02301 142.863 6.05902 142.898 6.09802 cv
142.926 6.14099 142.941 6.18701 142.945 6.23798 cv
cp
f
146.922 16.484 mo
146.918 16.539 146.902 16.582 146.875 16.621 cv
146.84 16.66 146.785 16.695 146.715 16.719 cv
146.637 16.746 146.539 16.762 146.414 16.777 cv
146.289 16.789 146.129 16.797 145.941 16.797 cv
145.746 16.797 145.59 16.789 145.465 16.777 cv
145.34 16.762 145.238 16.746 145.164 16.719 cv
145.086 16.695 145.031 16.66 145.004 16.621 cv
144.969 16.582 144.953 16.539 144.957 16.484 cv
144.957 9.55103 li
144.953 9.5 144.969 9.453 145.004 9.414 cv
145.031 9.375 145.086 9.34399 145.164 9.31201 cv
145.238 9.289 145.34 9.26599 145.465 9.24597 cv
145.59 9.23401 145.746 9.22699 145.941 9.22302 cv
146.129 9.22699 146.289 9.23401 146.414 9.24597 cv
146.539 9.26599 146.637 9.289 146.715 9.31201 cv
146.785 9.34399 146.84 9.375 146.875 9.414 cv
146.902 9.453 146.918 9.5 146.922 9.55103 cv
cp
147.07 7.17999 mo
147.07 7.578 146.988 7.85199 146.828 8 cv
146.664 8.15198 146.367 8.22699 145.934 8.22302 cv
145.488 8.22699 145.188 8.15198 145.039 8.008 cv
144.883 7.86298 144.809 7.60199 144.809 7.21899 cv
144.809 6.82397 144.887 6.55103 145.047 6.39801 cv
145.203 6.24597 145.504 6.16803 145.949 6.16803 cv
146.383 6.16803 146.68 6.242 146.836 6.39099 cv
146.992 6.539 147.07 6.80499 147.07 7.17999 cv
cp
f
155.523 16.484 mo
155.52 16.539 155.504 16.582 155.477 16.621 cv
155.441 16.66 155.391 16.695 155.32 16.719 cv
155.246 16.746 155.145 16.762 155.02 16.777 cv
154.891 16.789 154.734 16.797 154.551 16.797 cv
154.355 16.797 154.195 16.789 154.07 16.777 cv
153.941 16.762 153.84 16.746 153.77 16.719 cv
153.691 16.695 153.641 16.66 153.613 16.621 cv
153.578 16.582 153.563 16.539 153.566 16.484 cv
153.566 12.52 li
153.563 12.184 153.539 11.918 153.492 11.723 cv
153.441 11.531 153.367 11.367 153.277 11.23 cv
153.184 11.094 153.066 10.988 152.918 10.91 cv
152.77 10.836 152.594 10.797 152.398 10.797 cv
152.145 10.797 151.895 10.891 151.641 11.07 cv
151.387 11.254 151.121 11.516 150.848 11.863 cv
150.848 16.484 li
150.844 16.539 150.828 16.582 150.801 16.621 cv
150.766 16.66 150.711 16.695 150.641 16.719 cv
150.563 16.746 150.465 16.762 150.34 16.777 cv
150.215 16.789 150.055 16.797 149.867 16.797 cv
149.672 16.797 149.516 16.789 149.391 16.777 cv
149.266 16.762 149.164 16.746 149.09 16.719 cv
149.012 16.695 148.957 16.66 148.93 16.621 cv
148.895 16.582 148.879 16.539 148.883 16.484 cv
148.883 9.53497 li
148.879 9.48798 148.895 9.44098 148.922 9.39801 cv
148.945 9.36298 148.992 9.33197 149.063 9.30103 cv
149.129 9.27698 149.215 9.258 149.324 9.242 cv
149.43 9.23401 149.563 9.22699 149.727 9.22302 cv
149.891 9.22699 150.027 9.23401 150.137 9.242 cv
150.242 9.258 150.328 9.27698 150.391 9.30103 cv
150.449 9.33197 150.492 9.36298 150.52 9.39801 cv
150.543 9.44098 150.555 9.48798 150.559 9.53497 cv
150.559 10.336 li
150.941 9.92603 151.332 9.61298 151.73 9.40198 cv
152.125 9.19501 152.543 9.09399 152.977 9.09003 cv
153.445 9.09399 153.844 9.172 154.172 9.32397 cv
154.496 9.48401 154.758 9.69501 154.957 9.961 cv
155.156 10.23 155.301 10.543 155.391 10.898 cv
155.477 11.258 155.52 11.687 155.523 12.191 cv
cp
f
163.719 10.016 mo
163.715 10.27 163.688 10.453 163.633 10.57 cv
163.574 10.691 163.504 10.75 163.426 10.75 cv
162.605 10.75 li
162.719 10.875 162.801 11.02 162.852 11.176 cv
162.898 11.336 162.922 11.5 162.926 11.668 cv
162.922 12.078 162.855 12.437 162.723 12.75 cv
162.586 13.066 162.391 13.332 162.141 13.543 cv
161.887 13.762 161.586 13.926 161.23 14.035 cv
160.871 14.152 160.473 14.207 160.043 14.203 cv
159.816 14.207 159.605 14.18 159.402 14.121 cv
159.199 14.07 159.043 14.008 158.934 13.93 cv
158.871 14 158.813 14.078 158.766 14.172 cv
158.715 14.266 158.691 14.371 158.695 14.48 cv
158.691 14.637 158.758 14.758 158.891 14.852 cv
159.02 14.949 159.207 15.004 159.449 15.012 cv
161.141 15.074 li
161.535 15.09 161.887 15.148 162.195 15.242 cv
162.504 15.344 162.766 15.477 162.977 15.648 cv
163.188 15.824 163.348 16.035 163.457 16.277 cv
163.566 16.523 163.621 16.797 163.625 17.109 cv
163.621 17.445 163.547 17.77 163.398 18.078 cv
163.25 18.379 163.023 18.641 162.723 18.867 cv
162.418 19.086 162.039 19.266 161.586 19.398 cv
161.129 19.527 160.598 19.59 159.996 19.594 cv
159.398 19.59 158.895 19.543 158.477 19.453 cv
158.059 19.355 157.715 19.227 157.449 19.062 cv
157.18 18.895 156.984 18.695 156.867 18.469 cv
156.742 18.234 156.684 17.98 156.684 17.707 cv
156.684 17.535 156.703 17.375 156.75 17.219 cv
156.789 17.062 156.855 16.91 156.945 16.77 cv
157.027 16.625 157.133 16.492 157.258 16.359 cv
157.383 16.23 157.523 16.105 157.688 15.984 cv
157.461 15.871 157.289 15.711 157.168 15.5 cv
157.047 15.297 156.988 15.07 156.988 14.824 cv
156.988 14.523 157.055 14.246 157.195 13.988 cv
157.332 13.738 157.516 13.508 157.742 13.305 cv
157.559 13.125 157.414 12.91 157.305 12.652 cv
157.195 12.402 157.141 12.082 157.145 11.699 cv
157.141 11.297 157.211 10.937 157.355 10.613 cv
157.496 10.297 157.695 10.027 157.953 9.80499 cv
158.207 9.586 158.512 9.414 158.863 9.297 cv
159.215 9.17999 159.605 9.12097 160.035 9.12097 cv
160.254 9.12097 160.461 9.13702 160.66 9.15997 cv
160.859 9.19098 161.047 9.22699 161.219 9.27002 cv
163.426 9.27002 li
163.508 9.27301 163.578 9.33197 163.637 9.44098 cv
163.688 9.55902 163.715 9.75 163.719 10.016 cv
cp
161.203 11.66 mo
161.199 11.289 161.098 11 160.891 10.789 cv
160.68 10.586 160.387 10.48 160.012 10.477 cv
159.816 10.48 159.645 10.512 159.504 10.574 cv
159.355 10.641 159.234 10.73 159.141 10.84 cv
159.039 10.953 158.969 11.082 158.926 11.23 cv
158.875 11.379 158.852 11.535 158.855 11.691 cv
158.852 12.051 158.957 12.328 159.168 12.531 cv
159.375 12.738 159.664 12.844 160.035 12.84 cv
160.23 12.844 160.398 12.812 160.547 12.746 cv
160.688 12.687 160.809 12.602 160.91 12.488 cv
161.004 12.383 161.078 12.254 161.129 12.109 cv
161.176 11.969 161.199 11.82 161.203 11.66 cv
cp
161.664 17.211 mo
161.664 16.973 161.57 16.797 161.383 16.672 cv
161.195 16.551 160.938 16.48 160.609 16.469 cv
159.215 16.43 li
159.078 16.531 158.969 16.625 158.891 16.715 cv
158.809 16.805 158.746 16.891 158.699 16.977 cv
158.648 17.059 158.613 17.141 158.602 17.219 cv
158.582 17.297 158.574 17.375 158.578 17.461 cv
158.574 17.715 158.707 17.914 158.969 18.051 cv
159.23 18.184 159.602 18.25 160.082 18.254 cv
160.375 18.25 160.621 18.219 160.828 18.164 cv
161.027 18.102 161.191 18.023 161.32 17.926 cv
161.441 17.824 161.531 17.715 161.586 17.594 cv
161.637 17.473 161.664 17.344 161.664 17.211 cv
cp
f
169.91 14.52 mo
169.906 14.918 169.832 15.266 169.688 15.566 cv
169.539 15.867 169.332 16.121 169.063 16.32 cv
168.789 16.527 168.469 16.676 168.102 16.777 cv
167.734 16.875 167.332 16.926 166.902 16.93 cv
166.637 16.926 166.391 16.906 166.156 16.871 cv
165.922 16.828 165.711 16.781 165.523 16.723 cv
165.336 16.664 165.18 16.602 165.055 16.539 cv
164.93 16.477 164.836 16.418 164.781 16.363 cv
164.723 16.309 164.68 16.227 164.652 16.109 cv
164.617 15.996 164.602 15.82 164.605 15.59 cv
164.602 15.441 164.609 15.32 164.621 15.227 cv
164.629 15.137 164.645 15.066 164.668 15.008 cv
164.688 14.957 164.711 14.918 164.746 14.898 cv
164.773 14.883 164.813 14.875 164.859 14.871 cv
164.914 14.875 165 14.906 165.113 14.969 cv
165.223 15.035 165.359 15.109 165.531 15.184 cv
165.695 15.266 165.891 15.336 166.109 15.402 cv
166.328 15.473 166.578 15.508 166.863 15.504 cv
167.039 15.508 167.195 15.488 167.336 15.449 cv
167.469 15.414 167.59 15.363 167.695 15.293 cv
167.793 15.227 167.867 15.141 167.922 15.035 cv
167.969 14.934 167.996 14.812 168 14.676 cv
167.996 14.52 167.949 14.387 167.855 14.277 cv
167.762 14.168 167.633 14.07 167.477 13.984 cv
167.313 13.902 167.133 13.824 166.938 13.75 cv
166.734 13.68 166.531 13.602 166.32 13.508 cv
166.109 13.422 165.902 13.32 165.707 13.203 cv
165.504 13.094 165.324 12.953 165.168 12.785 cv
165.004 12.621 164.879 12.422 164.785 12.184 cv
164.691 11.953 164.645 11.672 164.645 11.34 cv
164.645 11.012 164.707 10.707 164.836 10.426 cv
164.965 10.152 165.152 9.914 165.398 9.71503 cv
165.641 9.52002 165.938 9.367 166.289 9.25403 cv
166.637 9.14801 167.031 9.09399 167.473 9.09003 cv
167.688 9.09399 167.898 9.10901 168.105 9.13702 cv
168.309 9.172 168.496 9.211 168.664 9.25403 cv
168.828 9.30499 168.969 9.35498 169.086 9.40601 cv
169.199 9.46503 169.281 9.51202 169.332 9.547 cv
169.379 9.59003 169.414 9.62903 169.438 9.664 cv
169.457 9.70697 169.469 9.75403 169.48 9.80499 cv
169.488 9.85901 169.5 9.92603 169.508 10.004 cv
169.516 10.09 169.52 10.187 169.52 10.305 cv
169.52 10.445 169.516 10.562 169.508 10.648 cv
169.5 10.742 169.484 10.812 169.469 10.859 cv
169.449 10.914 169.426 10.949 169.398 10.965 cv
169.363 10.988 169.328 10.996 169.289 10.992 cv
169.238 10.996 169.164 10.969 169.07 10.91 cv
168.969 10.859 168.848 10.801 168.699 10.734 cv
168.551 10.676 168.379 10.617 168.184 10.559 cv
167.988 10.508 167.766 10.48 167.52 10.477 cv
167.34 10.48 167.188 10.5 167.059 10.531 cv
166.926 10.57 166.816 10.621 166.738 10.687 cv
166.652 10.758 166.59 10.836 166.551 10.926 cv
166.504 11.02 166.484 11.117 166.488 11.219 cv
166.484 11.379 166.535 11.516 166.637 11.621 cv
166.734 11.734 166.863 11.828 167.027 11.91 cv
167.188 11.996 167.371 12.074 167.578 12.145 cv
167.781 12.219 167.988 12.301 168.199 12.383 cv
168.406 12.473 168.613 12.57 168.824 12.684 cv
169.027 12.797 169.211 12.937 169.371 13.102 cv
169.531 13.27 169.66 13.469 169.762 13.699 cv
169.855 13.934 169.906 14.207 169.91 14.52 cv
cp
f
182.023 12.937 mo
182.02 13.535 181.941 14.078 181.789 14.562 cv
181.629 15.055 181.395 15.473 181.078 15.824 cv
180.762 16.176 180.363 16.449 179.887 16.641 cv
179.406 16.832 178.848 16.926 178.211 16.93 cv
177.59 16.926 177.051 16.844 176.598 16.672 cv
176.137 16.504 175.758 16.254 175.461 15.926 cv
175.156 15.602 174.934 15.199 174.789 14.719 cv
174.645 14.242 174.574 13.695 174.574 13.078 cv
174.574 12.488 174.652 11.949 174.809 11.457 cv
174.965 10.969 175.203 10.547 175.523 10.195 cv
175.84 9.84802 176.234 9.57397 176.711 9.37903 cv
177.184 9.18701 177.742 9.09399 178.383 9.09003 cv
179.008 9.09399 179.547 9.17603 180.004 9.34399 cv
180.461 9.51599 180.84 9.76599 181.137 10.09 cv
181.434 10.418 181.656 10.82 181.805 11.297 cv
181.949 11.777 182.02 12.324 182.023 12.937 cv
cp
180.004 13.016 mo
180 12.68 179.973 12.363 179.922 12.07 cv
179.863 11.785 179.77 11.535 179.645 11.32 cv
179.512 11.109 179.34 10.941 179.129 10.82 cv
178.91 10.703 178.641 10.645 178.313 10.641 cv
178.023 10.645 177.77 10.699 177.551 10.801 cv
177.332 10.91 177.152 11.066 177.012 11.27 cv
176.871 11.477 176.766 11.723 176.695 12.008 cv
176.625 12.301 176.59 12.629 176.59 12.992 cv
176.59 13.34 176.617 13.656 176.676 13.941 cv
176.73 14.234 176.824 14.484 176.953 14.695 cv
177.078 14.91 177.25 15.074 177.473 15.187 cv
177.688 15.309 177.957 15.367 178.281 15.363 cv
178.574 15.367 178.832 15.312 179.055 15.203 cv
179.27 15.098 179.449 14.945 179.59 14.738 cv
179.73 14.539 179.832 14.293 179.902 14.004 cv
179.965 13.719 180 13.391 180.004 13.016 cv
cp
f
187.773 6.883 mo
187.77 7.03497 187.766 7.15601 187.758 7.24597 cv
187.746 7.34003 187.73 7.40997 187.711 7.45697 cv
187.688 7.508 187.664 7.54303 187.641 7.55902 cv
187.613 7.578 187.586 7.586 187.555 7.586 cv
187.516 7.586 187.473 7.578 187.434 7.55902 cv
187.387 7.54303 187.332 7.52301 187.27 7.5 cv
187.199 7.47998 187.125 7.461 187.039 7.44098 cv
186.949 7.42603 186.844 7.41803 186.727 7.414 cv
186.582 7.41803 186.461 7.43701 186.363 7.47998 cv
186.262 7.52698 186.18 7.59802 186.113 7.69098 cv
186.043 7.789 185.992 7.914 185.965 8.06598 cv
185.93 8.21899 185.914 8.40601 185.918 8.62903 cv
185.918 9.27002 li
187.188 9.27002 li
187.23 9.27301 187.273 9.28497 187.316 9.30902 cv
187.352 9.336 187.387 9.37903 187.414 9.43701 cv
187.438 9.5 187.457 9.58197 187.473 9.68402 cv
187.484 9.78497 187.488 9.914 187.492 10.062 cv
187.488 10.352 187.465 10.555 187.414 10.676 cv
187.359 10.801 187.281 10.863 187.188 10.859 cv
185.918 10.859 li
185.918 16.484 li
185.914 16.539 185.898 16.582 185.871 16.621 cv
185.836 16.66 185.785 16.695 185.715 16.719 cv
185.641 16.746 185.539 16.762 185.41 16.777 cv
185.277 16.789 185.117 16.797 184.934 16.797 cv
184.746 16.797 184.59 16.789 184.465 16.777 cv
184.336 16.762 184.234 16.746 184.16 16.719 cv
184.082 16.695 184.031 16.66 184.004 16.621 cv
183.973 16.582 183.957 16.539 183.961 16.484 cv
183.961 10.859 li
183.09 10.859 li
182.988 10.863 182.914 10.801 182.867 10.676 cv
182.816 10.555 182.789 10.352 182.793 10.062 cv
182.789 9.914 182.797 9.78497 182.813 9.68402 cv
182.824 9.58197 182.844 9.5 182.867 9.43701 cv
182.891 9.37903 182.922 9.336 182.961 9.30902 cv
183 9.28497 183.043 9.27301 183.098 9.27002 cv
183.961 9.27002 li
183.961 8.68402 li
183.957 8.21503 184.004 7.80103 184.102 7.44098 cv
184.191 7.086 184.34 6.789 184.543 6.55499 cv
184.742 6.32001 184.996 6.14502 185.305 6.02002 cv
185.613 5.90198 185.977 5.84003 186.402 5.84003 cv
186.598 5.84003 186.789 5.85901 186.977 5.89099 cv
187.156 5.92999 187.301 5.96503 187.406 6 cv
187.508 6.04303 187.578 6.078 187.617 6.10901 cv
187.652 6.14502 187.684 6.19501 187.707 6.258 cv
187.73 6.32397 187.746 6.40601 187.758 6.508 cv
187.766 6.60901 187.77 6.73401 187.773 6.883 cv
cp
f
196.348 15.801 mo
196.348 16.027 196.332 16.203 196.305 16.324 cv
196.273 16.449 196.234 16.535 196.191 16.582 cv
196.141 16.633 196.074 16.676 195.984 16.715 cv
195.891 16.754 195.781 16.785 195.664 16.816 cv
195.539 16.84 195.406 16.863 195.266 16.883 cv
195.121 16.895 194.98 16.902 194.836 16.906 cv
194.445 16.902 194.105 16.852 193.82 16.758 cv
193.535 16.656 193.301 16.508 193.113 16.301 cv
192.926 16.098 192.785 15.84 192.699 15.527 cv
192.605 15.219 192.563 14.848 192.566 14.418 cv
192.566 10.859 li
191.734 10.859 li
191.633 10.863 191.559 10.801 191.508 10.676 cv
191.453 10.555 191.426 10.352 191.43 10.062 cv
191.426 9.914 191.434 9.78497 191.449 9.68402 cv
191.461 9.58197 191.48 9.5 191.508 9.43701 cv
191.531 9.37903 191.563 9.336 191.605 9.30902 cv
191.641 9.28497 191.688 9.27301 191.742 9.27002 cv
192.566 9.27002 li
192.566 7.71899 li
192.563 7.672 192.578 7.625 192.609 7.578 cv
192.637 7.539 192.688 7.50403 192.766 7.47302 cv
192.84 7.44897 192.941 7.42603 193.07 7.40997 cv
193.195 7.39801 193.352 7.39502 193.543 7.39099 cv
193.73 7.39502 193.891 7.39801 194.02 7.40997 cv
194.145 7.42603 194.246 7.44897 194.32 7.47302 cv
194.391 7.50403 194.441 7.539 194.477 7.578 cv
194.504 7.625 194.52 7.672 194.523 7.71899 cv
194.523 9.27002 li
196.035 9.27002 li
196.086 9.27301 196.133 9.28497 196.172 9.30902 cv
196.211 9.336 196.242 9.37903 196.27 9.43701 cv
196.293 9.5 196.313 9.58197 196.328 9.68402 cv
196.34 9.78497 196.348 9.914 196.348 10.062 cv
196.348 10.352 196.32 10.555 196.27 10.676 cv
196.215 10.801 196.141 10.863 196.043 10.859 cv
194.523 10.859 li
194.523 14.125 li
194.52 14.504 194.578 14.789 194.703 14.977 cv
194.82 15.168 195.035 15.262 195.34 15.262 cv
195.441 15.262 195.535 15.254 195.621 15.234 cv
195.703 15.219 195.777 15.199 195.844 15.172 cv
195.906 15.152 195.961 15.129 196.008 15.109 cv
196.051 15.094 196.09 15.086 196.129 15.082 cv
196.156 15.086 196.188 15.094 196.219 15.109 cv
196.246 15.129 196.266 15.168 196.285 15.219 cv
196.297 15.277 196.313 15.352 196.328 15.441 cv
196.34 15.539 196.348 15.656 196.348 15.801 cv
cp
f
204.406 16.484 mo
204.402 16.539 204.387 16.582 204.359 16.621 cv
204.324 16.66 204.273 16.695 204.203 16.719 cv
204.129 16.746 204.027 16.762 203.902 16.777 cv
203.773 16.789 203.617 16.797 203.434 16.797 cv
203.238 16.797 203.078 16.789 202.953 16.777 cv
202.824 16.762 202.723 16.746 202.652 16.719 cv
202.574 16.695 202.523 16.66 202.496 16.621 cv
202.461 16.582 202.445 16.539 202.449 16.484 cv
202.449 12.52 li
202.445 12.184 202.422 11.918 202.375 11.723 cv
202.324 11.531 202.25 11.367 202.16 11.23 cv
202.066 11.094 201.949 10.988 201.801 10.91 cv
201.652 10.836 201.477 10.797 201.281 10.797 cv
201.027 10.797 200.777 10.891 200.523 11.07 cv
200.27 11.254 200.004 11.516 199.73 11.863 cv
199.73 16.484 li
199.727 16.539 199.711 16.582 199.684 16.621 cv
199.648 16.66 199.594 16.695 199.523 16.719 cv
199.445 16.746 199.348 16.762 199.223 16.777 cv
199.098 16.789 198.938 16.797 198.75 16.797 cv
198.555 16.797 198.398 16.789 198.273 16.777 cv
198.148 16.762 198.047 16.746 197.973 16.719 cv
197.895 16.695 197.84 16.66 197.813 16.621 cv
197.777 16.582 197.762 16.539 197.766 16.484 cv
197.766 6.23798 li
197.762 6.18701 197.777 6.14099 197.813 6.09802 cv
197.84 6.05902 197.895 6.02301 197.973 5.992 cv
198.047 5.96503 198.148 5.94501 198.273 5.92603 cv
198.398 5.914 198.555 5.90601 198.75 5.90198 cv
198.938 5.90601 199.098 5.914 199.223 5.92603 cv
199.348 5.94501 199.445 5.96503 199.523 5.992 cv
199.594 6.02301 199.648 6.05902 199.684 6.09802 cv
199.711 6.14099 199.727 6.18701 199.73 6.23798 cv
199.73 10.078 li
200.066 9.75 200.41 9.50403 200.762 9.336 cv
201.109 9.17603 201.477 9.09399 201.859 9.09003 cv
202.328 9.09399 202.727 9.172 203.055 9.32397 cv
203.379 9.48401 203.641 9.69501 203.84 9.96503 cv
204.039 10.234 204.184 10.551 204.273 10.91 cv
204.359 11.273 204.402 11.711 204.406 12.223 cv
cp
f
212.695 12.809 mo
212.691 13.047 212.641 13.223 212.535 13.336 cv
212.426 13.453 212.277 13.512 212.098 13.508 cv
207.863 13.508 li
207.859 13.809 207.895 14.078 207.969 14.316 cv
208.035 14.559 208.148 14.762 208.305 14.93 cv
208.457 15.102 208.652 15.23 208.895 15.316 cv
209.133 15.406 209.422 15.449 209.766 15.449 cv
210.105 15.449 210.406 15.426 210.668 15.375 cv
210.926 15.328 211.152 15.273 211.344 15.211 cv
211.531 15.152 211.688 15.098 211.816 15.047 cv
211.938 15 212.039 14.977 212.121 14.973 cv
212.164 14.977 212.203 14.984 212.238 15 cv
212.266 15.02 212.293 15.051 212.313 15.098 cv
212.332 15.145 212.344 15.211 212.355 15.297 cv
212.359 15.383 212.363 15.492 212.367 15.621 cv
212.363 15.738 212.363 15.836 212.359 15.914 cv
212.352 15.996 212.344 16.062 212.336 16.117 cv
212.324 16.176 212.309 16.227 212.289 16.262 cv
212.27 16.305 212.242 16.34 212.211 16.375 cv
212.176 16.414 212.082 16.465 211.934 16.523 cv
211.777 16.59 211.586 16.652 211.355 16.707 cv
211.117 16.77 210.848 16.816 210.551 16.863 cv
210.246 16.902 209.926 16.926 209.586 16.93 cv
208.965 16.926 208.422 16.852 207.961 16.695 cv
207.492 16.543 207.105 16.305 206.797 15.988 cv
206.48 15.672 206.246 15.273 206.098 14.789 cv
205.941 14.309 205.867 13.742 205.871 13.086 cv
205.867 12.473 205.945 11.914 206.109 11.418 cv
206.266 10.922 206.5 10.504 206.813 10.156 cv
207.117 9.81201 207.492 9.547 207.93 9.36298 cv
208.367 9.18402 208.859 9.09399 209.414 9.09003 cv
209.992 9.09399 210.492 9.17999 210.906 9.34802 cv
211.32 9.52301 211.656 9.76202 211.922 10.062 cv
212.184 10.367 212.379 10.727 212.508 11.141 cv
212.629 11.559 212.691 12.008 212.695 12.496 cv
cp
210.793 12.246 mo
210.805 11.695 210.695 11.262 210.461 10.949 cv
210.227 10.637 209.859 10.48 209.367 10.477 cv
209.117 10.48 208.902 10.527 208.719 10.617 cv
208.531 10.715 208.379 10.84 208.258 10.996 cv
208.133 11.156 208.039 11.344 207.977 11.559 cv
207.91 11.773 207.871 12.004 207.863 12.246 cv
cp
f
225.043 9.72998 mo
225.043 10.297 224.953 10.801 224.777 11.234 cv
224.598 11.672 224.34 12.039 224.004 12.336 cv
223.664 12.641 223.25 12.867 222.762 13.02 cv
222.27 13.176 221.691 13.254 221.027 13.25 cv
220.188 13.25 li
220.188 16.469 li
220.184 16.523 220.168 16.57 220.137 16.609 cv
220.102 16.652 220.047 16.687 219.969 16.711 cv
219.891 16.738 219.785 16.758 219.656 16.773 cv
219.523 16.789 219.359 16.797 219.16 16.797 cv
218.961 16.797 218.793 16.789 218.664 16.773 cv
218.527 16.758 218.422 16.738 218.348 16.711 cv
218.266 16.687 218.211 16.652 218.184 16.609 cv
218.148 16.57 218.133 16.523 218.137 16.469 cv
218.137 7.39801 li
218.133 7.15601 218.199 6.97302 218.328 6.84802 cv
218.453 6.72699 218.621 6.66803 218.832 6.664 cv
221.207 6.664 li
221.441 6.66803 221.672 6.67603 221.891 6.69098 cv
222.105 6.711 222.363 6.75 222.664 6.80902 cv
222.965 6.87097 223.27 6.97998 223.582 7.14099 cv
223.891 7.30499 224.152 7.51202 224.371 7.75403 cv
224.586 8.00403 224.754 8.29303 224.871 8.62097 cv
224.984 8.953 225.043 9.32001 225.043 9.72998 cv
cp
222.898 9.875 mo
222.898 9.52698 222.836 9.23401 222.711 9.00403 cv
222.586 8.77698 222.43 8.60901 222.25 8.49597 cv
222.066 8.39099 221.879 8.32001 221.68 8.289 cv
221.477 8.26202 221.27 8.25 221.059 8.24597 cv
220.188 8.24597 li
220.188 11.668 li
221.105 11.668 li
221.434 11.672 221.707 11.625 221.93 11.535 cv
222.148 11.449 222.328 11.328 222.469 11.168 cv
222.605 11.012 222.711 10.82 222.789 10.598 cv
222.859 10.379 222.898 10.141 222.898 9.875 cv
cp
f
230.98 10.18 mo
230.98 10.371 230.973 10.523 230.965 10.641 cv
230.949 10.762 230.934 10.855 230.918 10.922 cv
230.895 10.992 230.867 11.039 230.836 11.062 cv
230.797 11.09 230.754 11.102 230.707 11.102 cv
230.66 11.102 230.613 11.094 230.566 11.074 cv
230.512 11.059 230.453 11.039 230.391 11.016 cv
230.32 10.996 230.25 10.977 230.176 10.957 cv
230.094 10.941 230.008 10.934 229.918 10.93 cv
229.805 10.934 229.695 10.953 229.59 10.996 cv
229.48 11.043 229.367 11.113 229.254 11.203 cv
229.133 11.297 229.012 11.422 228.887 11.574 cv
228.758 11.734 228.621 11.926 228.477 12.152 cv
228.477 16.484 li
228.473 16.539 228.457 16.582 228.43 16.621 cv
228.395 16.66 228.34 16.695 228.27 16.719 cv
228.191 16.746 228.094 16.762 227.969 16.777 cv
227.844 16.789 227.684 16.797 227.496 16.797 cv
227.301 16.797 227.145 16.789 227.02 16.777 cv
226.895 16.762 226.793 16.746 226.719 16.719 cv
226.641 16.695 226.586 16.66 226.559 16.621 cv
226.523 16.582 226.508 16.539 226.512 16.484 cv
226.512 9.53497 li
226.508 9.48798 226.523 9.44098 226.551 9.39801 cv
226.574 9.36298 226.621 9.33197 226.691 9.30103 cv
226.758 9.27698 226.844 9.258 226.953 9.242 cv
227.059 9.23401 227.191 9.22699 227.355 9.22302 cv
227.52 9.22699 227.656 9.23401 227.766 9.242 cv
227.871 9.258 227.957 9.27698 228.02 9.30103 cv
228.078 9.33197 228.121 9.36298 228.148 9.39801 cv
228.172 9.44098 228.184 9.48798 228.188 9.53497 cv
228.188 10.398 li
228.367 10.141 228.539 9.92999 228.703 9.758 cv
228.859 9.59399 229.016 9.45697 229.164 9.35498 cv
229.309 9.258 229.453 9.19098 229.598 9.14801 cv
229.742 9.11298 229.887 9.09399 230.035 9.09003 cv
230.102 9.09399 230.176 9.09802 230.254 9.10199 cv
230.332 9.11298 230.41 9.125 230.496 9.14099 cv
230.574 9.15997 230.648 9.17999 230.715 9.203 cv
230.773 9.22699 230.82 9.25403 230.852 9.27698 cv
230.879 9.30902 230.898 9.336 230.914 9.36298 cv
230.926 9.39801 230.938 9.44098 230.949 9.492 cv
230.957 9.55103 230.965 9.633 230.973 9.73798 cv
230.977 9.84802 230.98 9.99597 230.98 10.18 cv
cp
f
238.488 12.809 mo
238.484 13.047 238.434 13.223 238.328 13.336 cv
238.219 13.453 238.07 13.512 237.891 13.508 cv
233.656 13.508 li
233.652 13.809 233.688 14.078 233.762 14.316 cv
233.828 14.559 233.941 14.762 234.098 14.93 cv
234.25 15.102 234.445 15.23 234.688 15.316 cv
234.926 15.406 235.215 15.449 235.559 15.449 cv
235.898 15.449 236.199 15.426 236.461 15.375 cv
236.719 15.328 236.945 15.273 237.137 15.211 cv
237.324 15.152 237.48 15.098 237.609 15.047 cv
237.73 15 237.832 14.977 237.914 14.973 cv
237.957 14.977 237.996 14.984 238.031 15 cv
238.059 15.02 238.086 15.051 238.105 15.098 cv
238.125 15.145 238.137 15.211 238.148 15.297 cv
238.152 15.383 238.156 15.492 238.16 15.621 cv
238.156 15.738 238.156 15.836 238.152 15.914 cv
238.145 15.996 238.137 16.062 238.129 16.117 cv
238.117 16.176 238.102 16.227 238.082 16.262 cv
238.063 16.305 238.035 16.34 238.004 16.375 cv
237.969 16.414 237.875 16.465 237.727 16.523 cv
237.57 16.59 237.379 16.652 237.148 16.707 cv
236.91 16.77 236.641 16.816 236.344 16.863 cv
236.039 16.902 235.719 16.926 235.379 16.93 cv
234.758 16.926 234.215 16.852 233.754 16.695 cv
233.285 16.543 232.898 16.305 232.59 15.988 cv
232.273 15.672 232.039 15.273 231.891 14.789 cv
231.734 14.309 231.66 13.742 231.664 13.086 cv
231.66 12.473 231.738 11.914 231.902 11.418 cv
232.059 10.922 232.293 10.504 232.605 10.156 cv
232.91 9.81201 233.285 9.547 233.723 9.36298 cv
234.16 9.18402 234.652 9.09399 235.207 9.09003 cv
235.785 9.09399 236.285 9.17999 236.699 9.34802 cv
237.113 9.52301 237.449 9.76202 237.715 10.062 cv
237.977 10.367 238.172 10.727 238.301 11.141 cv
238.422 11.559 238.484 12.008 238.488 12.496 cv
cp
236.586 12.246 mo
236.598 11.695 236.488 11.262 236.254 10.949 cv
236.02 10.637 235.652 10.48 235.16 10.477 cv
234.91 10.48 234.695 10.527 234.512 10.617 cv
234.324 10.715 234.172 10.84 234.051 10.996 cv
233.926 11.156 233.832 11.344 233.77 11.559 cv
233.703 11.773 233.664 12.004 233.656 12.246 cv
cp
f
247.094 12.906 mo
247.094 13.527 247.027 14.086 246.895 14.582 cv
246.762 15.078 246.566 15.5 246.313 15.848 cv
246.059 16.195 245.742 16.465 245.363 16.648 cv
244.98 16.836 244.547 16.926 244.063 16.93 cv
243.855 16.926 243.668 16.906 243.504 16.871 cv
243.332 16.828 243.168 16.77 243.012 16.691 cv
242.852 16.613 242.695 16.516 242.543 16.391 cv
242.383 16.273 242.223 16.133 242.059 15.969 cv
242.059 19.242 li
242.055 19.289 242.039 19.336 242.012 19.383 cv
241.977 19.422 241.922 19.457 241.852 19.488 cv
241.773 19.512 241.676 19.535 241.551 19.555 cv
241.426 19.566 241.266 19.574 241.078 19.578 cv
240.883 19.574 240.727 19.566 240.602 19.555 cv
240.477 19.535 240.375 19.512 240.301 19.488 cv
240.223 19.457 240.168 19.422 240.141 19.383 cv
240.105 19.336 240.09 19.289 240.094 19.242 cv
240.094 9.53497 li
240.09 9.48798 240.105 9.44098 240.133 9.39801 cv
240.156 9.36298 240.199 9.33197 240.27 9.30103 cv
240.332 9.27698 240.418 9.258 240.527 9.242 cv
240.629 9.23401 240.766 9.22699 240.93 9.22302 cv
241.086 9.22699 241.215 9.23401 241.32 9.242 cv
241.426 9.258 241.512 9.27698 241.578 9.30103 cv
241.641 9.33197 241.688 9.36298 241.715 9.39801 cv
241.738 9.44098 241.75 9.48798 241.754 9.53497 cv
241.754 10.352 li
241.953 10.145 242.152 9.96503 242.352 9.80499 cv
242.543 9.64801 242.742 9.51599 242.945 9.40601 cv
243.148 9.30499 243.355 9.22302 243.574 9.16803 cv
243.785 9.117 244.016 9.09399 244.266 9.09003 cv
244.77 9.09399 245.203 9.19098 245.566 9.39099 cv
245.922 9.59399 246.215 9.87097 246.441 10.215 cv
246.664 10.566 246.828 10.969 246.938 11.43 cv
247.039 11.891 247.094 12.383 247.094 12.906 cv
cp
245.051 13.047 mo
245.047 12.754 245.027 12.473 244.984 12.195 cv
244.938 11.926 244.859 11.684 244.758 11.469 cv
244.648 11.258 244.508 11.086 244.336 10.957 cv
244.16 10.832 243.945 10.77 243.688 10.766 cv
243.555 10.77 243.426 10.789 243.301 10.824 cv
243.172 10.867 243.043 10.93 242.91 11.016 cv
242.777 11.105 242.641 11.219 242.504 11.359 cv
242.359 11.5 242.211 11.676 242.059 11.879 cv
242.059 14.172 li
242.332 14.52 242.594 14.789 242.844 14.977 cv
243.09 15.168 243.352 15.262 243.625 15.262 cv
243.879 15.262 244.094 15.199 244.277 15.066 cv
244.453 14.941 244.602 14.77 244.715 14.559 cv
244.828 14.348 244.91 14.109 244.969 13.844 cv
245.02 13.578 245.047 13.312 245.051 13.047 cv
cp
f
254.59 16.508 mo
254.586 16.586 254.559 16.641 254.512 16.68 cv
254.457 16.723 254.375 16.75 254.266 16.77 cv
254.148 16.785 253.984 16.797 253.77 16.797 cv
253.531 16.797 253.359 16.785 253.258 16.77 cv
253.148 16.75 253.074 16.723 253.035 16.68 cv
252.988 16.641 252.969 16.586 252.969 16.508 cv
252.969 15.957 li
252.68 16.266 252.352 16.504 251.988 16.672 cv
251.621 16.844 251.215 16.926 250.77 16.93 cv
250.398 16.926 250.059 16.879 249.75 16.785 cv
249.441 16.691 249.176 16.551 248.949 16.355 cv
248.723 16.168 248.547 15.934 248.422 15.652 cv
248.297 15.375 248.234 15.047 248.238 14.668 cv
248.234 14.27 248.313 13.918 248.473 13.613 cv
248.629 13.316 248.867 13.07 249.184 12.875 cv
249.496 12.684 249.887 12.539 250.355 12.441 cv
250.824 12.352 251.367 12.305 251.984 12.301 cv
252.664 12.301 li
252.664 11.879 li
252.664 11.664 252.641 11.473 252.598 11.309 cv
252.551 11.148 252.477 11.012 252.379 10.898 cv
252.273 10.793 252.141 10.711 251.973 10.656 cv
251.801 10.605 251.59 10.582 251.348 10.578 cv
251.016 10.582 250.723 10.617 250.469 10.687 cv
250.207 10.762 249.98 10.844 249.785 10.93 cv
249.586 11.023 249.422 11.102 249.293 11.172 cv
249.156 11.246 249.047 11.285 248.969 11.281 cv
248.906 11.285 248.855 11.266 248.816 11.227 cv
248.77 11.191 248.734 11.141 248.707 11.07 cv
248.676 11.008 248.652 10.922 248.641 10.82 cv
248.621 10.723 248.613 10.613 248.617 10.492 cv
248.613 10.332 248.629 10.207 248.656 10.109 cv
248.68 10.02 248.727 9.93402 248.805 9.85498 cv
248.875 9.78101 249.004 9.69897 249.188 9.60901 cv
249.367 9.52002 249.578 9.43402 249.824 9.35498 cv
250.066 9.27698 250.336 9.21503 250.625 9.164 cv
250.914 9.117 251.211 9.09399 251.52 9.09003 cv
252.063 9.09399 252.527 9.14502 252.914 9.25 cv
253.301 9.35901 253.621 9.52301 253.871 9.742 cv
254.121 9.961 254.301 10.246 254.418 10.594 cv
254.527 10.945 254.586 11.359 254.59 11.832 cv
cp
252.664 13.531 mo
251.914 13.531 li
251.598 13.535 251.328 13.559 251.105 13.602 cv
250.879 13.652 250.695 13.723 250.559 13.812 cv
250.414 13.91 250.313 14.023 250.25 14.152 cv
250.184 14.289 250.148 14.437 250.152 14.605 cv
250.148 14.898 250.242 15.129 250.43 15.293 cv
250.613 15.461 250.871 15.543 251.199 15.543 cv
251.473 15.543 251.723 15.473 251.957 15.332 cv
252.184 15.191 252.422 14.988 252.664 14.715 cv
cp
f
261.016 10.18 mo
261.016 10.371 261.008 10.523 261 10.641 cv
260.984 10.762 260.969 10.855 260.953 10.922 cv
260.93 10.992 260.902 11.039 260.871 11.062 cv
260.832 11.09 260.789 11.102 260.742 11.102 cv
260.695 11.102 260.648 11.094 260.602 11.074 cv
260.547 11.059 260.488 11.039 260.426 11.016 cv
260.355 10.996 260.285 10.977 260.211 10.957 cv
260.129 10.941 260.043 10.934 259.953 10.93 cv
259.84 10.934 259.73 10.953 259.625 10.996 cv
259.516 11.043 259.402 11.113 259.289 11.203 cv
259.168 11.297 259.047 11.422 258.922 11.574 cv
258.793 11.734 258.656 11.926 258.512 12.152 cv
258.512 16.484 li
258.508 16.539 258.492 16.582 258.465 16.621 cv
258.43 16.66 258.375 16.695 258.305 16.719 cv
258.227 16.746 258.129 16.762 258.004 16.777 cv
257.879 16.789 257.719 16.797 257.531 16.797 cv
257.336 16.797 257.18 16.789 257.055 16.777 cv
256.93 16.762 256.828 16.746 256.754 16.719 cv
256.676 16.695 256.621 16.66 256.594 16.621 cv
256.559 16.582 256.543 16.539 256.547 16.484 cv
256.547 9.53497 li
256.543 9.48798 256.559 9.44098 256.586 9.39801 cv
256.609 9.36298 256.656 9.33197 256.727 9.30103 cv
256.793 9.27698 256.879 9.258 256.988 9.242 cv
257.094 9.23401 257.227 9.22699 257.391 9.22302 cv
257.555 9.22699 257.691 9.23401 257.801 9.242 cv
257.906 9.258 257.992 9.27698 258.055 9.30103 cv
258.113 9.33197 258.156 9.36298 258.184 9.39801 cv
258.207 9.44098 258.219 9.48798 258.223 9.53497 cv
258.223 10.398 li
258.402 10.141 258.574 9.92999 258.738 9.758 cv
258.895 9.59399 259.051 9.45697 259.199 9.35498 cv
259.344 9.258 259.488 9.19098 259.633 9.14801 cv
259.777 9.11298 259.922 9.09399 260.07 9.09003 cv
260.137 9.09399 260.211 9.09802 260.289 9.10199 cv
260.367 9.11298 260.445 9.125 260.531 9.14099 cv
260.609 9.15997 260.684 9.17999 260.75 9.203 cv
260.809 9.22699 260.855 9.25403 260.887 9.27698 cv
260.914 9.30902 260.934 9.336 260.949 9.36298 cv
260.961 9.39801 260.973 9.44098 260.984 9.492 cv
260.992 9.55103 261 9.633 261.008 9.73798 cv
261.012 9.84802 261.016 9.99597 261.016 10.18 cv
cp
f
267.758 16.508 mo
267.754 16.586 267.727 16.641 267.68 16.68 cv
267.625 16.723 267.543 16.75 267.434 16.77 cv
267.316 16.785 267.152 16.797 266.938 16.797 cv
266.699 16.797 266.527 16.785 266.426 16.77 cv
266.316 16.75 266.242 16.723 266.203 16.68 cv
266.156 16.641 266.137 16.586 266.137 16.508 cv
266.137 15.957 li
265.848 16.266 265.52 16.504 265.156 16.672 cv
264.789 16.844 264.383 16.926 263.938 16.93 cv
263.566 16.926 263.227 16.879 262.918 16.785 cv
262.609 16.691 262.344 16.551 262.117 16.355 cv
261.891 16.168 261.715 15.934 261.59 15.652 cv
261.465 15.375 261.402 15.047 261.406 14.668 cv
261.402 14.27 261.48 13.918 261.641 13.613 cv
261.797 13.316 262.035 13.07 262.352 12.875 cv
262.664 12.684 263.055 12.539 263.523 12.441 cv
263.992 12.352 264.535 12.305 265.152 12.301 cv
265.832 12.301 li
265.832 11.879 li
265.832 11.664 265.809 11.473 265.766 11.309 cv
265.719 11.148 265.645 11.012 265.547 10.898 cv
265.441 10.793 265.309 10.711 265.141 10.656 cv
264.969 10.605 264.758 10.582 264.516 10.578 cv
264.184 10.582 263.891 10.617 263.637 10.687 cv
263.375 10.762 263.148 10.844 262.953 10.93 cv
262.754 11.023 262.59 11.102 262.461 11.172 cv
262.324 11.246 262.215 11.285 262.137 11.281 cv
262.074 11.285 262.023 11.266 261.984 11.227 cv
261.938 11.191 261.902 11.141 261.875 11.07 cv
261.844 11.008 261.82 10.922 261.809 10.82 cv
261.789 10.723 261.781 10.613 261.785 10.492 cv
261.781 10.332 261.797 10.207 261.824 10.109 cv
261.848 10.02 261.895 9.93402 261.973 9.85498 cv
262.043 9.78101 262.172 9.69897 262.355 9.60901 cv
262.535 9.52002 262.746 9.43402 262.992 9.35498 cv
263.234 9.27698 263.504 9.21503 263.793 9.164 cv
264.082 9.117 264.379 9.09399 264.688 9.09003 cv
265.23 9.09399 265.695 9.14502 266.082 9.25 cv
266.469 9.35901 266.789 9.52301 267.039 9.742 cv
267.289 9.961 267.469 10.246 267.586 10.594 cv
267.695 10.945 267.754 11.359 267.758 11.832 cv
cp
265.832 13.531 mo
265.082 13.531 li
264.766 13.535 264.496 13.559 264.273 13.602 cv
264.047 13.652 263.863 13.723 263.727 13.812 cv
263.582 13.91 263.48 14.023 263.418 14.152 cv
263.352 14.289 263.316 14.437 263.32 14.605 cv
263.316 14.898 263.41 15.129 263.598 15.293 cv
263.781 15.461 264.039 15.543 264.367 15.543 cv
264.641 15.543 264.891 15.473 265.125 15.332 cv
265.352 15.191 265.59 14.988 265.832 14.715 cv
cp
f
273.754 15.801 mo
273.754 16.027 273.738 16.203 273.711 16.324 cv
273.68 16.449 273.641 16.535 273.598 16.582 cv
273.547 16.633 273.48 16.676 273.391 16.715 cv
273.297 16.754 273.188 16.785 273.07 16.816 cv
272.945 16.84 272.813 16.863 272.672 16.883 cv
272.527 16.895 272.387 16.902 272.242 16.906 cv
271.852 16.902 271.512 16.852 271.227 16.758 cv
270.941 16.656 270.707 16.508 270.52 16.301 cv
270.332 16.098 270.191 15.84 270.105 15.527 cv
270.012 15.219 269.969 14.848 269.973 14.418 cv
269.973 10.859 li
269.141 10.859 li
269.039 10.863 268.965 10.801 268.914 10.676 cv
268.859 10.555 268.832 10.352 268.836 10.062 cv
268.832 9.914 268.84 9.78497 268.855 9.68402 cv
268.867 9.58197 268.887 9.5 268.914 9.43701 cv
268.938 9.37903 268.969 9.336 269.012 9.30902 cv
269.047 9.28497 269.094 9.27301 269.148 9.27002 cv
269.973 9.27002 li
269.973 7.71899 li
269.969 7.672 269.984 7.625 270.016 7.578 cv
270.043 7.539 270.094 7.50403 270.172 7.47302 cv
270.246 7.44897 270.348 7.42603 270.477 7.40997 cv
270.602 7.39801 270.758 7.39502 270.949 7.39099 cv
271.137 7.39502 271.297 7.39801 271.426 7.40997 cv
271.551 7.42603 271.652 7.44897 271.727 7.47302 cv
271.797 7.50403 271.848 7.539 271.883 7.578 cv
271.91 7.625 271.926 7.672 271.93 7.71899 cv
271.93 9.27002 li
273.441 9.27002 li
273.492 9.27301 273.539 9.28497 273.578 9.30902 cv
273.617 9.336 273.648 9.37903 273.676 9.43701 cv
273.699 9.5 273.719 9.58197 273.734 9.68402 cv
273.746 9.78497 273.754 9.914 273.754 10.062 cv
273.754 10.352 273.727 10.555 273.676 10.676 cv
273.621 10.801 273.547 10.863 273.449 10.859 cv
271.93 10.859 li
271.93 14.125 li
271.926 14.504 271.984 14.789 272.109 14.977 cv
272.227 15.168 272.441 15.262 272.746 15.262 cv
272.848 15.262 272.941 15.254 273.027 15.234 cv
273.109 15.219 273.184 15.199 273.25 15.172 cv
273.313 15.152 273.367 15.129 273.414 15.109 cv
273.457 15.094 273.496 15.086 273.535 15.082 cv
273.563 15.086 273.594 15.094 273.625 15.109 cv
273.652 15.129 273.672 15.168 273.691 15.219 cv
273.703 15.277 273.719 15.352 273.734 15.441 cv
273.746 15.539 273.754 15.656 273.754 15.801 cv
cp
f
277.137 16.484 mo
277.133 16.539 277.117 16.582 277.09 16.621 cv
277.055 16.66 277 16.695 276.93 16.719 cv
276.852 16.746 276.754 16.762 276.629 16.777 cv
276.504 16.789 276.344 16.797 276.156 16.797 cv
275.961 16.797 275.805 16.789 275.68 16.777 cv
275.555 16.762 275.453 16.746 275.379 16.719 cv
275.301 16.695 275.246 16.66 275.219 16.621 cv
275.184 16.582 275.168 16.539 275.172 16.484 cv
275.172 9.55103 li
275.168 9.5 275.184 9.453 275.219 9.414 cv
275.246 9.375 275.301 9.34399 275.379 9.31201 cv
275.453 9.289 275.555 9.26599 275.68 9.24597 cv
275.805 9.23401 275.961 9.22699 276.156 9.22302 cv
276.344 9.22699 276.504 9.23401 276.629 9.24597 cv
276.754 9.26599 276.852 9.289 276.93 9.31201 cv
277 9.34399 277.055 9.375 277.09 9.414 cv
277.117 9.453 277.133 9.5 277.137 9.55103 cv
cp
277.285 7.17999 mo
277.285 7.578 277.203 7.85199 277.043 8 cv
276.879 8.15198 276.582 8.22699 276.148 8.22302 cv
275.703 8.22699 275.402 8.15198 275.254 8.008 cv
275.098 7.86298 275.023 7.60199 275.023 7.21899 cv
275.023 6.82397 275.102 6.55103 275.262 6.39801 cv
275.418 6.24597 275.719 6.16803 276.164 6.16803 cv
276.598 6.16803 276.895 6.242 277.051 6.39099 cv
277.207 6.539 277.285 6.80499 277.285 7.17999 cv
cp
f
286.129 12.937 mo
286.125 13.535 286.047 14.078 285.895 14.562 cv
285.734 15.055 285.5 15.473 285.184 15.824 cv
284.867 16.176 284.469 16.449 283.992 16.641 cv
283.512 16.832 282.953 16.926 282.316 16.93 cv
281.695 16.926 281.156 16.844 280.703 16.672 cv
280.242 16.504 279.863 16.254 279.566 15.926 cv
279.262 15.602 279.039 15.199 278.895 14.719 cv
278.75 14.242 278.68 13.695 278.68 13.078 cv
278.68 12.488 278.758 11.949 278.914 11.457 cv
279.07 10.969 279.309 10.547 279.629 10.195 cv
279.945 9.84802 280.34 9.57397 280.816 9.37903 cv
281.289 9.18701 281.848 9.09399 282.488 9.09003 cv
283.113 9.09399 283.652 9.17603 284.109 9.34399 cv
284.566 9.51599 284.945 9.76599 285.242 10.09 cv
285.539 10.418 285.762 10.82 285.91 11.297 cv
286.055 11.777 286.125 12.324 286.129 12.937 cv
cp
284.109 13.016 mo
284.105 12.68 284.078 12.363 284.027 12.07 cv
283.969 11.785 283.875 11.535 283.75 11.32 cv
283.617 11.109 283.445 10.941 283.234 10.82 cv
283.016 10.703 282.746 10.645 282.418 10.641 cv
282.129 10.645 281.875 10.699 281.656 10.801 cv
281.438 10.91 281.258 11.066 281.117 11.27 cv
280.977 11.477 280.871 11.723 280.801 12.008 cv
280.73 12.301 280.695 12.629 280.695 12.992 cv
280.695 13.34 280.723 13.656 280.781 13.941 cv
280.836 14.234 280.93 14.484 281.059 14.695 cv
281.184 14.91 281.355 15.074 281.578 15.187 cv
281.793 15.309 282.063 15.367 282.387 15.363 cv
282.68 15.367 282.938 15.312 283.16 15.203 cv
283.375 15.098 283.555 14.945 283.695 14.738 cv
283.836 14.539 283.938 14.293 284.008 14.004 cv
284.07 13.719 284.105 13.391 284.109 13.016 cv
cp
f
294.375 16.484 mo
294.371 16.539 294.355 16.582 294.328 16.621 cv
294.293 16.66 294.242 16.695 294.172 16.719 cv
294.098 16.746 293.996 16.762 293.871 16.777 cv
293.742 16.789 293.586 16.797 293.402 16.797 cv
293.207 16.797 293.047 16.789 292.922 16.777 cv
292.793 16.762 292.691 16.746 292.621 16.719 cv
292.543 16.695 292.492 16.66 292.465 16.621 cv
292.43 16.582 292.414 16.539 292.418 16.484 cv
292.418 12.52 li
292.414 12.184 292.391 11.918 292.344 11.723 cv
292.293 11.531 292.219 11.367 292.129 11.23 cv
292.035 11.094 291.918 10.988 291.77 10.91 cv
291.621 10.836 291.445 10.797 291.25 10.797 cv
290.996 10.797 290.746 10.891 290.492 11.07 cv
290.238 11.254 289.973 11.516 289.699 11.863 cv
289.699 16.484 li
289.695 16.539 289.68 16.582 289.652 16.621 cv
289.617 16.66 289.563 16.695 289.492 16.719 cv
289.414 16.746 289.316 16.762 289.191 16.777 cv
289.066 16.789 288.906 16.797 288.719 16.797 cv
288.523 16.797 288.367 16.789 288.242 16.777 cv
288.117 16.762 288.016 16.746 287.941 16.719 cv
287.863 16.695 287.809 16.66 287.781 16.621 cv
287.746 16.582 287.73 16.539 287.734 16.484 cv
287.734 9.53497 li
287.73 9.48798 287.746 9.44098 287.773 9.39801 cv
287.797 9.36298 287.844 9.33197 287.914 9.30103 cv
287.98 9.27698 288.066 9.258 288.176 9.242 cv
288.281 9.23401 288.414 9.22699 288.578 9.22302 cv
288.742 9.22699 288.879 9.23401 288.988 9.242 cv
289.094 9.258 289.18 9.27698 289.242 9.30103 cv
289.301 9.33197 289.344 9.36298 289.371 9.39801 cv
289.395 9.44098 289.406 9.48798 289.41 9.53497 cv
289.41 10.336 li
289.793 9.92603 290.184 9.61298 290.582 9.40198 cv
290.977 9.19501 291.395 9.09399 291.828 9.09003 cv
292.297 9.09399 292.695 9.172 293.023 9.32397 cv
293.348 9.48401 293.609 9.69501 293.809 9.961 cv
294.008 10.23 294.152 10.543 294.242 10.898 cv
294.328 11.258 294.371 11.687 294.375 12.191 cv
cp
f
306.785 7.508 mo
306.781 7.664 306.773 7.79303 306.766 7.89502 cv
306.75 8.00403 306.73 8.09003 306.707 8.15198 cv
306.676 8.21899 306.645 8.26599 306.609 8.29303 cv
306.566 8.328 306.523 8.34399 306.48 8.34003 cv
303.957 8.34003 li
303.957 16.469 li
303.957 16.523 303.938 16.57 303.906 16.609 cv
303.867 16.652 303.813 16.687 303.738 16.711 cv
303.656 16.738 303.551 16.758 303.422 16.773 cv
303.285 16.789 303.121 16.797 302.926 16.797 cv
302.73 16.797 302.566 16.789 302.434 16.773 cv
302.301 16.758 302.195 16.738 302.117 16.711 cv
302.039 16.687 301.98 16.652 301.949 16.609 cv
301.91 16.57 301.895 16.523 301.898 16.469 cv
301.898 8.34003 li
299.375 8.34003 li
299.32 8.34399 299.273 8.328 299.242 8.29303 cv
299.203 8.26599 299.172 8.21899 299.148 8.15198 cv
299.117 8.09003 299.098 8.00403 299.09 7.89502 cv
299.074 7.79303 299.07 7.664 299.07 7.508 cv
299.07 7.35498 299.074 7.22302 299.09 7.10901 cv
299.098 7.00403 299.117 6.914 299.148 6.84802 cv
299.172 6.78497 299.203 6.73798 299.242 6.70697 cv
299.273 6.67999 299.32 6.66803 299.375 6.664 cv
306.48 6.664 li
306.523 6.66803 306.566 6.67999 306.609 6.70697 cv
306.645 6.73798 306.676 6.78497 306.707 6.84802 cv
306.73 6.914 306.75 7.00403 306.766 7.10901 cv
306.773 7.22302 306.781 7.35498 306.785 7.508 cv
cp
f
309.824 16.484 mo
309.82 16.539 309.805 16.582 309.777 16.621 cv
309.742 16.66 309.688 16.695 309.617 16.719 cv
309.539 16.746 309.441 16.762 309.316 16.777 cv
309.191 16.789 309.031 16.797 308.844 16.797 cv
308.648 16.797 308.492 16.789 308.367 16.777 cv
308.242 16.762 308.141 16.746 308.066 16.719 cv
307.988 16.695 307.934 16.66 307.906 16.621 cv
307.871 16.582 307.855 16.539 307.859 16.484 cv
307.859 9.55103 li
307.855 9.5 307.871 9.453 307.906 9.414 cv
307.934 9.375 307.988 9.34399 308.066 9.31201 cv
308.141 9.289 308.242 9.26599 308.367 9.24597 cv
308.492 9.23401 308.648 9.22699 308.844 9.22302 cv
309.031 9.22699 309.191 9.23401 309.316 9.24597 cv
309.441 9.26599 309.539 9.289 309.617 9.31201 cv
309.688 9.34399 309.742 9.375 309.777 9.414 cv
309.805 9.453 309.82 9.5 309.824 9.55103 cv
cp
309.973 7.17999 mo
309.973 7.578 309.891 7.85199 309.73 8 cv
309.566 8.15198 309.27 8.22699 308.836 8.22302 cv
308.391 8.22699 308.09 8.15198 307.941 8.008 cv
307.785 7.86298 307.711 7.60199 307.711 7.21899 cv
307.711 6.82397 307.789 6.55103 307.949 6.39801 cv
308.105 6.24597 308.406 6.16803 308.852 6.16803 cv
309.285 6.16803 309.582 6.242 309.738 6.39099 cv
309.895 6.539 309.973 6.80499 309.973 7.17999 cv
cp
f
322.875 16.484 mo
322.871 16.539 322.855 16.582 322.828 16.621 cv
322.793 16.66 322.742 16.695 322.672 16.719 cv
322.598 16.746 322.496 16.762 322.375 16.777 cv
322.25 16.789 322.094 16.797 321.902 16.797 cv
321.703 16.797 321.543 16.789 321.418 16.777 cv
321.293 16.762 321.191 16.746 321.117 16.719 cv
321.039 16.695 320.988 16.66 320.961 16.621 cv
320.934 16.582 320.918 16.539 320.922 16.484 cv
320.922 12.363 li
320.918 12.133 320.898 11.918 320.855 11.723 cv
320.809 11.531 320.738 11.367 320.652 11.23 cv
320.559 11.094 320.445 10.988 320.309 10.91 cv
320.168 10.836 320.004 10.797 319.813 10.797 cv
319.578 10.797 319.34 10.891 319.102 11.07 cv
318.863 11.254 318.605 11.516 318.324 11.863 cv
318.324 16.484 li
318.324 16.539 318.309 16.582 318.277 16.621 cv
318.246 16.66 318.191 16.695 318.117 16.719 cv
318.039 16.746 317.938 16.762 317.816 16.777 cv
317.691 16.789 317.539 16.797 317.352 16.797 cv
317.156 16.797 316.996 16.789 316.875 16.777 cv
316.746 16.762 316.645 16.746 316.574 16.719 cv
316.496 16.695 316.445 16.66 316.414 16.621 cv
316.383 16.582 316.367 16.539 316.367 16.484 cv
316.367 12.363 li
316.367 12.133 316.344 11.918 316.301 11.723 cv
316.258 11.531 316.191 11.367 316.105 11.23 cv
316.012 11.094 315.898 10.988 315.762 10.91 cv
315.617 10.836 315.453 10.797 315.27 10.797 cv
315.027 10.797 314.789 10.891 314.551 11.07 cv
314.313 11.254 314.055 11.516 313.781 11.863 cv
313.781 16.484 li
313.777 16.539 313.762 16.582 313.734 16.621 cv
313.699 16.66 313.645 16.695 313.574 16.719 cv
313.496 16.746 313.398 16.762 313.273 16.777 cv
313.148 16.789 312.988 16.797 312.801 16.797 cv
312.605 16.797 312.449 16.789 312.324 16.777 cv
312.199 16.762 312.098 16.746 312.023 16.719 cv
311.945 16.695 311.891 16.66 311.863 16.621 cv
311.828 16.582 311.813 16.539 311.816 16.484 cv
311.816 9.53497 li
311.813 9.48798 311.828 9.44098 311.855 9.39801 cv
311.879 9.36298 311.926 9.33197 311.996 9.30103 cv
312.063 9.27698 312.148 9.258 312.258 9.242 cv
312.363 9.23401 312.496 9.22699 312.66 9.22302 cv
312.824 9.22699 312.961 9.23401 313.07 9.242 cv
313.176 9.258 313.262 9.27698 313.324 9.30103 cv
313.383 9.33197 313.426 9.36298 313.453 9.39801 cv
313.477 9.44098 313.488 9.48798 313.492 9.53497 cv
313.492 10.336 li
313.875 9.92603 314.258 9.61298 314.641 9.40198 cv
315.02 9.19501 315.422 9.09399 315.84 9.09003 cv
316.125 9.09399 316.379 9.12097 316.609 9.17999 cv
316.836 9.242 317.043 9.328 317.223 9.43701 cv
317.402 9.55103 317.555 9.68701 317.684 9.84003 cv
317.813 9.99597 317.922 10.168 318.012 10.359 cv
318.219 10.137 318.422 9.94501 318.625 9.78497 cv
318.82 9.625 319.02 9.492 319.215 9.39099 cv
319.41 9.289 319.605 9.21503 319.801 9.164 cv
319.996 9.117 320.195 9.09399 320.398 9.09003 cv
320.859 9.09399 321.246 9.172 321.566 9.32397 cv
321.879 9.48401 322.137 9.69501 322.332 9.961 cv
322.527 10.23 322.664 10.543 322.75 10.898 cv
322.828 11.258 322.871 11.637 322.875 12.035 cv
cp
f
331.215 12.809 mo
331.211 13.047 331.16 13.223 331.055 13.336 cv
330.945 13.453 330.797 13.512 330.617 13.508 cv
326.383 13.508 li
326.379 13.809 326.414 14.078 326.488 14.316 cv
326.555 14.559 326.668 14.762 326.824 14.93 cv
326.977 15.102 327.172 15.23 327.414 15.316 cv
327.652 15.406 327.941 15.449 328.285 15.449 cv
328.625 15.449 328.926 15.426 329.188 15.375 cv
329.445 15.328 329.672 15.273 329.863 15.211 cv
330.051 15.152 330.207 15.098 330.336 15.047 cv
330.457 15 330.559 14.977 330.641 14.973 cv
330.684 14.977 330.723 14.984 330.758 15 cv
330.785 15.02 330.813 15.051 330.832 15.098 cv
330.852 15.145 330.863 15.211 330.875 15.297 cv
330.879 15.383 330.883 15.492 330.887 15.621 cv
330.883 15.738 330.883 15.836 330.879 15.914 cv
330.871 15.996 330.863 16.062 330.855 16.117 cv
330.844 16.176 330.828 16.227 330.809 16.262 cv
330.789 16.305 330.762 16.34 330.73 16.375 cv
330.695 16.414 330.602 16.465 330.453 16.523 cv
330.297 16.59 330.105 16.652 329.875 16.707 cv
329.637 16.77 329.367 16.816 329.07 16.863 cv
328.766 16.902 328.445 16.926 328.105 16.93 cv
327.484 16.926 326.941 16.852 326.48 16.695 cv
326.012 16.543 325.625 16.305 325.316 15.988 cv
325 15.672 324.766 15.273 324.617 14.789 cv
324.461 14.309 324.387 13.742 324.391 13.086 cv
324.387 12.473 324.465 11.914 324.629 11.418 cv
324.785 10.922 325.02 10.504 325.332 10.156 cv
325.637 9.81201 326.012 9.547 326.449 9.36298 cv
326.887 9.18402 327.379 9.09399 327.934 9.09003 cv
328.512 9.09399 329.012 9.17999 329.426 9.34802 cv
329.84 9.52301 330.176 9.76202 330.441 10.062 cv
330.703 10.367 330.898 10.727 331.027 11.141 cv
331.148 11.559 331.211 12.008 331.215 12.496 cv
cp
329.313 12.246 mo
329.324 11.695 329.215 11.262 328.98 10.949 cv
328.746 10.637 328.379 10.48 327.887 10.477 cv
327.637 10.48 327.422 10.527 327.238 10.617 cv
327.051 10.715 326.898 10.84 326.777 10.996 cv
326.652 11.156 326.559 11.344 326.496 11.559 cv
326.43 11.773 326.391 12.004 326.383 12.246 cv
cp
f
337.715 14.52 mo
337.711 14.918 337.637 15.266 337.492 15.566 cv
337.344 15.867 337.137 16.121 336.867 16.32 cv
336.594 16.527 336.273 16.676 335.906 16.777 cv
335.539 16.875 335.137 16.926 334.707 16.93 cv
334.441 16.926 334.195 16.906 333.961 16.871 cv
333.727 16.828 333.516 16.781 333.328 16.723 cv
333.141 16.664 332.984 16.602 332.859 16.539 cv
332.734 16.477 332.641 16.418 332.586 16.363 cv
332.527 16.309 332.484 16.227 332.457 16.109 cv
332.422 15.996 332.406 15.82 332.41 15.59 cv
332.406 15.441 332.414 15.32 332.426 15.227 cv
332.434 15.137 332.449 15.066 332.473 15.008 cv
332.492 14.957 332.516 14.918 332.551 14.898 cv
332.578 14.883 332.617 14.875 332.664 14.871 cv
332.719 14.875 332.805 14.906 332.918 14.969 cv
333.027 15.035 333.164 15.109 333.336 15.184 cv
333.5 15.266 333.695 15.336 333.914 15.402 cv
334.133 15.473 334.383 15.508 334.668 15.504 cv
334.844 15.508 335 15.488 335.141 15.449 cv
335.273 15.414 335.395 15.363 335.5 15.293 cv
335.598 15.227 335.672 15.141 335.727 15.035 cv
335.773 14.934 335.801 14.812 335.805 14.676 cv
335.801 14.52 335.754 14.387 335.66 14.277 cv
335.566 14.168 335.438 14.07 335.281 13.984 cv
335.117 13.902 334.938 13.824 334.742 13.75 cv
334.539 13.68 334.336 13.602 334.125 13.508 cv
333.914 13.422 333.707 13.32 333.512 13.203 cv
333.309 13.094 333.129 12.953 332.973 12.785 cv
332.809 12.621 332.684 12.422 332.59 12.184 cv
332.496 11.953 332.449 11.672 332.449 11.34 cv
332.449 11.012 332.512 10.707 332.641 10.426 cv
332.77 10.152 332.957 9.914 333.203 9.71503 cv
333.445 9.52002 333.742 9.367 334.094 9.25403 cv
334.441 9.14801 334.836 9.09399 335.277 9.09003 cv
335.492 9.09399 335.703 9.10901 335.91 9.13702 cv
336.113 9.172 336.301 9.211 336.469 9.25403 cv
336.633 9.30499 336.773 9.35498 336.891 9.40601 cv
337.004 9.46503 337.086 9.51202 337.137 9.547 cv
337.184 9.59003 337.219 9.62903 337.242 9.664 cv
337.262 9.70697 337.273 9.75403 337.285 9.80499 cv
337.293 9.85901 337.305 9.92603 337.313 10.004 cv
337.32 10.09 337.324 10.187 337.324 10.305 cv
337.324 10.445 337.32 10.562 337.313 10.648 cv
337.305 10.742 337.289 10.812 337.273 10.859 cv
337.254 10.914 337.23 10.949 337.203 10.965 cv
337.168 10.988 337.133 10.996 337.094 10.992 cv
337.043 10.996 336.969 10.969 336.875 10.91 cv
336.773 10.859 336.652 10.801 336.504 10.734 cv
336.355 10.676 336.184 10.617 335.988 10.559 cv
335.793 10.508 335.57 10.48 335.324 10.477 cv
335.145 10.48 334.992 10.5 334.863 10.531 cv
334.73 10.57 334.621 10.621 334.543 10.687 cv
334.457 10.758 334.395 10.836 334.355 10.926 cv
334.309 11.02 334.289 11.117 334.293 11.219 cv
334.289 11.379 334.34 11.516 334.441 11.621 cv
334.539 11.734 334.668 11.828 334.832 11.91 cv
334.992 11.996 335.176 12.074 335.383 12.145 cv
335.586 12.219 335.793 12.301 336.004 12.383 cv
336.211 12.473 336.418 12.57 336.629 12.684 cv
336.832 12.797 337.016 12.937 337.176 13.102 cv
337.336 13.27 337.465 13.469 337.566 13.699 cv
337.66 13.934 337.711 14.207 337.715 14.52 cv
cp
f
349.906 12.937 mo
349.902 13.535 349.824 14.078 349.672 14.562 cv
349.512 15.055 349.277 15.473 348.961 15.824 cv
348.645 16.176 348.246 16.449 347.77 16.641 cv
347.289 16.832 346.73 16.926 346.094 16.93 cv
345.473 16.926 344.934 16.844 344.48 16.672 cv
344.02 16.504 343.641 16.254 343.344 15.926 cv
343.039 15.602 342.816 15.199 342.672 14.719 cv
342.527 14.242 342.457 13.695 342.457 13.078 cv
342.457 12.488 342.535 11.949 342.691 11.457 cv
342.848 10.969 343.086 10.547 343.406 10.195 cv
343.723 9.84802 344.117 9.57397 344.594 9.37903 cv
345.066 9.18701 345.625 9.09399 346.266 9.09003 cv
346.891 9.09399 347.43 9.17603 347.887 9.34399 cv
348.344 9.51599 348.723 9.76599 349.02 10.09 cv
349.316 10.418 349.539 10.82 349.688 11.297 cv
349.832 11.777 349.902 12.324 349.906 12.937 cv
cp
347.887 13.016 mo
347.883 12.68 347.855 12.363 347.805 12.07 cv
347.746 11.785 347.652 11.535 347.527 11.32 cv
347.395 11.109 347.223 10.941 347.012 10.82 cv
346.793 10.703 346.523 10.645 346.195 10.641 cv
345.906 10.645 345.652 10.699 345.434 10.801 cv
345.215 10.91 345.035 11.066 344.895 11.27 cv
344.754 11.477 344.648 11.723 344.578 12.008 cv
344.508 12.301 344.473 12.629 344.473 12.992 cv
344.473 13.34 344.5 13.656 344.559 13.941 cv
344.613 14.234 344.707 14.484 344.836 14.695 cv
344.961 14.91 345.133 15.074 345.355 15.187 cv
345.57 15.309 345.84 15.367 346.164 15.363 cv
346.457 15.367 346.715 15.312 346.938 15.203 cv
347.152 15.098 347.332 14.945 347.473 14.738 cv
347.613 14.539 347.715 14.293 347.785 14.004 cv
347.848 13.719 347.883 13.391 347.887 13.016 cv
cp
f
355.688 6.883 mo
355.684 7.03497 355.68 7.15601 355.672 7.24597 cv
355.66 7.34003 355.645 7.40997 355.625 7.45697 cv
355.602 7.508 355.578 7.54303 355.555 7.55902 cv
355.527 7.578 355.5 7.586 355.469 7.586 cv
355.43 7.586 355.387 7.578 355.348 7.55902 cv
355.301 7.54303 355.246 7.52301 355.184 7.5 cv
355.113 7.47998 355.039 7.461 354.953 7.44098 cv
354.863 7.42603 354.758 7.41803 354.641 7.414 cv
354.496 7.41803 354.375 7.43701 354.277 7.47998 cv
354.176 7.52698 354.094 7.59802 354.027 7.69098 cv
353.957 7.789 353.906 7.914 353.879 8.06598 cv
353.844 8.21899 353.828 8.40601 353.832 8.62903 cv
353.832 9.27002 li
355.102 9.27002 li
355.145 9.27301 355.188 9.28497 355.23 9.30902 cv
355.266 9.336 355.301 9.37903 355.328 9.43701 cv
355.352 9.5 355.371 9.58197 355.387 9.68402 cv
355.398 9.78497 355.402 9.914 355.406 10.062 cv
355.402 10.352 355.379 10.555 355.328 10.676 cv
355.273 10.801 355.195 10.863 355.102 10.859 cv
353.832 10.859 li
353.832 16.484 li
353.828 16.539 353.813 16.582 353.785 16.621 cv
353.75 16.66 353.699 16.695 353.629 16.719 cv
353.555 16.746 353.453 16.762 353.324 16.777 cv
353.191 16.789 353.031 16.797 352.848 16.797 cv
352.66 16.797 352.504 16.789 352.379 16.777 cv
352.25 16.762 352.148 16.746 352.074 16.719 cv
351.996 16.695 351.945 16.66 351.918 16.621 cv
351.887 16.582 351.871 16.539 351.875 16.484 cv
351.875 10.859 li
351.004 10.859 li
350.902 10.863 350.828 10.801 350.781 10.676 cv
350.73 10.555 350.703 10.352 350.707 10.062 cv
350.703 9.914 350.711 9.78497 350.727 9.68402 cv
350.738 9.58197 350.758 9.5 350.781 9.43701 cv
350.805 9.37903 350.836 9.336 350.875 9.30902 cv
350.914 9.28497 350.957 9.27301 351.012 9.27002 cv
351.875 9.27002 li
351.875 8.68402 li
351.871 8.21503 351.918 7.80103 352.016 7.44098 cv
352.105 7.086 352.254 6.789 352.457 6.55499 cv
352.656 6.32001 352.91 6.14502 353.219 6.02002 cv
353.527 5.90198 353.891 5.84003 354.316 5.84003 cv
354.512 5.84003 354.703 5.85901 354.891 5.89099 cv
355.07 5.92999 355.215 5.96503 355.32 6 cv
355.422 6.04303 355.492 6.078 355.531 6.10901 cv
355.566 6.14502 355.598 6.19501 355.621 6.258 cv
355.645 6.32397 355.66 6.40601 355.672 6.508 cv
355.68 6.60901 355.684 6.73401 355.688 6.883 cv
cp
f
366.238 13.727 mo
366.234 14.258 366.137 14.723 365.941 15.121 cv
365.742 15.523 365.477 15.859 365.141 16.125 cv
364.801 16.395 364.402 16.594 363.953 16.727 cv
363.5 16.859 363.02 16.926 362.508 16.93 cv
362.156 16.926 361.832 16.898 361.535 16.844 cv
361.234 16.785 360.973 16.719 360.746 16.637 cv
360.516 16.559 360.324 16.473 360.172 16.383 cv
360.02 16.297 359.91 16.219 359.844 16.148 cv
359.773 16.082 359.723 15.984 359.699 15.859 cv
359.668 15.734 359.656 15.551 359.656 15.309 cv
359.656 15.148 359.66 15.016 359.672 14.902 cv
359.68 14.797 359.695 14.707 359.723 14.637 cv
359.742 14.57 359.773 14.523 359.816 14.492 cv
359.852 14.469 359.898 14.453 359.949 14.449 cv
360.02 14.453 360.121 14.496 360.258 14.578 cv
360.387 14.668 360.559 14.762 360.77 14.863 cv
360.977 14.969 361.223 15.066 361.512 15.148 cv
361.797 15.238 362.133 15.281 362.516 15.277 cv
362.766 15.281 362.988 15.25 363.184 15.187 cv
363.379 15.129 363.547 15.043 363.688 14.934 cv
363.824 14.824 363.93 14.691 364.004 14.531 cv
364.074 14.371 364.109 14.191 364.113 13.992 cv
364.109 13.766 364.047 13.57 363.926 13.402 cv
363.797 13.242 363.633 13.098 363.438 12.969 cv
363.234 12.844 363.008 12.723 362.754 12.609 cv
362.5 12.5 362.238 12.383 361.969 12.254 cv
361.695 12.133 361.434 11.988 361.18 11.828 cv
360.926 11.672 360.699 11.484 360.5 11.262 cv
360.297 11.043 360.133 10.781 360.012 10.477 cv
359.887 10.176 359.824 9.81598 359.828 9.39502 cv
359.824 8.914 359.914 8.48798 360.094 8.12097 cv
360.27 7.758 360.512 7.453 360.82 7.20697 cv
361.121 6.96899 361.48 6.789 361.895 6.66803 cv
362.309 6.55103 362.746 6.492 363.207 6.48798 cv
363.445 6.492 363.684 6.508 363.926 6.54303 cv
364.164 6.58197 364.387 6.633 364.594 6.69098 cv
364.801 6.75403 364.984 6.82397 365.148 6.89801 cv
365.305 6.97998 365.414 7.04303 365.469 7.09399 cv
365.52 7.14801 365.555 7.19501 365.574 7.22699 cv
365.59 7.26599 365.605 7.31201 365.621 7.37097 cv
365.633 7.43402 365.641 7.508 365.648 7.59802 cv
365.652 7.69098 365.656 7.80499 365.656 7.93701 cv
365.656 8.09003 365.652 8.21899 365.645 8.32001 cv
365.637 8.42603 365.621 8.51202 365.605 8.57397 cv
365.582 8.64502 365.559 8.69098 365.527 8.72302 cv
365.492 8.75403 365.445 8.77002 365.391 8.77002 cv
365.332 8.77002 365.242 8.73401 365.117 8.65997 cv
364.992 8.59003 364.836 8.51202 364.656 8.422 cv
364.473 8.34003 364.266 8.26202 364.027 8.19098 cv
363.785 8.125 363.52 8.09003 363.238 8.086 cv
363.012 8.09003 362.82 8.117 362.656 8.16803 cv
362.488 8.22302 362.348 8.297 362.238 8.39099 cv
362.125 8.48798 362.043 8.60498 361.988 8.73798 cv
361.934 8.87903 361.906 9.02002 361.906 9.16803 cv
361.906 9.39502 361.965 9.59003 362.09 9.75 cv
362.207 9.914 362.371 10.059 362.582 10.184 cv
362.785 10.312 363.02 10.434 363.277 10.543 cv
363.535 10.66 363.801 10.777 364.074 10.898 cv
364.344 11.027 364.605 11.168 364.867 11.324 cv
365.125 11.48 365.359 11.672 365.563 11.891 cv
365.766 12.117 365.926 12.375 366.051 12.672 cv
366.172 12.969 366.234 13.32 366.238 13.727 cv
cp
f
374.285 16.484 mo
374.281 16.539 374.27 16.582 374.246 16.621 cv
374.219 16.66 374.172 16.695 374.109 16.719 cv
374.043 16.746 373.957 16.762 373.852 16.777 cv
373.746 16.789 373.613 16.797 373.453 16.797 cv
373.277 16.797 373.137 16.789 373.035 16.777 cv
372.926 16.762 372.844 16.746 372.781 16.719 cv
372.719 16.695 372.672 16.66 372.648 16.621 cv
372.617 16.582 372.605 16.539 372.609 16.484 cv
372.609 15.684 li
372.223 16.098 371.832 16.41 371.438 16.617 cv
371.035 16.824 370.625 16.926 370.203 16.93 cv
369.723 16.926 369.32 16.852 368.996 16.695 cv
368.672 16.543 368.41 16.328 368.211 16.059 cv
368.008 15.789 367.863 15.477 367.781 15.117 cv
367.691 14.762 367.648 14.32 367.652 13.789 cv
367.652 9.53497 li
367.648 9.48798 367.664 9.44098 367.695 9.39801 cv
367.723 9.36298 367.773 9.33197 367.852 9.30103 cv
367.926 9.27698 368.027 9.258 368.156 9.242 cv
368.281 9.23401 368.438 9.22699 368.629 9.22302 cv
368.816 9.22699 368.977 9.23401 369.102 9.242 cv
369.227 9.258 369.324 9.27698 369.402 9.30103 cv
369.473 9.33197 369.527 9.36298 369.563 9.39801 cv
369.59 9.44098 369.605 9.48798 369.609 9.53497 cv
369.609 13.461 li
369.605 13.828 369.629 14.105 369.68 14.297 cv
369.723 14.488 369.793 14.652 369.895 14.789 cv
369.988 14.93 370.113 15.035 370.262 15.109 cv
370.41 15.187 370.582 15.227 370.777 15.223 cv
371.027 15.227 371.277 15.137 371.531 14.949 cv
371.781 14.77 372.051 14.504 372.336 14.156 cv
372.336 9.53497 li
372.336 9.48798 372.348 9.44098 372.379 9.39801 cv
372.402 9.36298 372.457 9.33197 372.535 9.30103 cv
372.609 9.27698 372.707 9.258 372.836 9.242 cv
372.957 9.23401 373.117 9.22699 373.313 9.22302 cv
373.504 9.22699 373.66 9.23401 373.785 9.242 cv
373.906 9.258 374.008 9.27698 374.082 9.30103 cv
374.152 9.33197 374.203 9.36298 374.238 9.39801 cv
374.266 9.44098 374.281 9.48798 374.285 9.53497 cv
cp
f
383.215 12.914 mo
383.215 13.535 383.145 14.094 383.012 14.586 cv
382.871 15.082 382.676 15.5 382.426 15.848 cv
382.168 16.195 381.855 16.465 381.488 16.648 cv
381.113 16.836 380.691 16.926 380.223 16.93 cv
379.984 16.926 379.766 16.902 379.566 16.863 cv
379.359 16.816 379.168 16.75 378.984 16.648 cv
378.801 16.555 378.617 16.43 378.441 16.273 cv
378.258 16.125 378.074 15.941 377.891 15.73 cv
377.891 16.484 li
377.887 16.547 377.875 16.594 377.848 16.629 cv
377.816 16.672 377.77 16.703 377.707 16.727 cv
377.641 16.75 377.551 16.766 377.445 16.781 cv
377.336 16.789 377.207 16.797 377.051 16.797 cv
376.887 16.797 376.75 16.789 376.648 16.781 cv
376.539 16.766 376.453 16.75 376.391 16.727 cv
376.32 16.703 376.277 16.672 376.254 16.629 cv
376.227 16.594 376.211 16.547 376.215 16.484 cv
376.215 6.23798 li
376.211 6.18701 376.227 6.14099 376.262 6.09802 cv
376.289 6.05902 376.344 6.02301 376.422 5.992 cv
376.496 5.96503 376.598 5.94501 376.723 5.92603 cv
376.848 5.914 377.004 5.90601 377.199 5.90198 cv
377.387 5.90601 377.547 5.914 377.672 5.92603 cv
377.797 5.94501 377.895 5.96503 377.973 5.992 cv
378.043 6.02301 378.098 6.05902 378.133 6.09802 cv
378.16 6.14099 378.176 6.18701 378.18 6.23798 cv
378.18 10.078 li
378.355 9.90198 378.531 9.75403 378.711 9.62903 cv
378.883 9.508 379.059 9.40198 379.238 9.32001 cv
379.41 9.242 379.594 9.18402 379.785 9.14502 cv
379.969 9.10901 380.168 9.09399 380.379 9.09003 cv
380.891 9.09399 381.324 9.19501 381.688 9.39801 cv
382.043 9.60498 382.336 9.883 382.563 10.23 cv
382.785 10.578 382.949 10.984 383.059 11.449 cv
383.16 11.914 383.215 12.402 383.215 12.914 cv
cp
381.18 13.055 mo
381.176 12.762 381.152 12.477 381.113 12.199 cv
381.066 11.926 380.992 11.684 380.883 11.469 cv
380.773 11.258 380.629 11.086 380.457 10.957 cv
380.281 10.832 380.063 10.77 379.801 10.766 cv
379.668 10.77 379.543 10.785 379.418 10.82 cv
379.293 10.859 379.164 10.922 379.031 11.008 cv
378.898 11.098 378.762 11.215 378.625 11.352 cv
378.48 11.492 378.332 11.664 378.18 11.871 cv
378.18 14.18 li
378.453 14.535 378.715 14.805 378.969 14.984 cv
379.219 15.172 379.484 15.262 379.762 15.262 cv
380.016 15.262 380.23 15.199 380.41 15.066 cv
380.582 14.941 380.73 14.773 380.848 14.562 cv
380.965 14.359 381.047 14.121 381.102 13.852 cv
381.148 13.59 381.176 13.324 381.18 13.055 cv
cp
f
388.324 12.832 mo
388.32 13.133 388.293 13.344 388.238 13.461 cv
388.18 13.586 388.09 13.645 387.965 13.641 cv
384.723 13.641 li
384.594 13.645 384.5 13.582 384.445 13.457 cv
384.383 13.336 384.355 13.129 384.359 12.832 cv
384.355 12.543 384.383 12.336 384.445 12.215 cv
384.5 12.098 384.594 12.039 384.723 12.035 cv
387.965 12.035 li
388.027 12.039 388.078 12.051 388.125 12.074 cv
388.164 12.102 388.203 12.148 388.238 12.207 cv
388.266 12.273 388.289 12.355 388.305 12.457 cv
388.316 12.562 388.32 12.687 388.324 12.832 cv
cp
f
391.977 16.469 mo
391.973 16.523 391.957 16.57 391.926 16.609 cv
391.891 16.652 391.832 16.687 391.758 16.711 cv
391.676 16.738 391.574 16.758 391.445 16.773 cv
391.313 16.789 391.145 16.797 390.949 16.797 cv
390.746 16.797 390.582 16.789 390.453 16.773 cv
390.316 16.758 390.211 16.738 390.137 16.711 cv
390.055 16.687 390 16.652 389.969 16.609 cv
389.934 16.57 389.914 16.523 389.918 16.469 cv
389.918 6.94501 li
389.914 6.89801 389.934 6.85199 389.969 6.80499 cv
390 6.76599 390.055 6.72998 390.141 6.703 cv
390.219 6.67999 390.324 6.65997 390.457 6.64099 cv
390.582 6.62903 390.746 6.62097 390.949 6.617 cv
391.145 6.62097 391.313 6.62903 391.445 6.64099 cv
391.574 6.65997 391.676 6.67999 391.758 6.703 cv
391.832 6.72998 391.891 6.76599 391.926 6.80499 cv
391.957 6.85199 391.973 6.89801 391.977 6.94501 cv
cp
f
405.055 16.484 mo
405.051 16.539 405.035 16.582 405.008 16.621 cv
404.973 16.66 404.922 16.695 404.852 16.719 cv
404.777 16.746 404.676 16.762 404.555 16.777 cv
404.43 16.789 404.273 16.797 404.082 16.797 cv
403.883 16.797 403.723 16.789 403.598 16.777 cv
403.473 16.762 403.371 16.746 403.297 16.719 cv
403.219 16.695 403.168 16.66 403.141 16.621 cv
403.113 16.582 403.098 16.539 403.102 16.484 cv
403.102 12.363 li
403.098 12.133 403.078 11.918 403.035 11.723 cv
402.988 11.531 402.918 11.367 402.832 11.23 cv
402.738 11.094 402.625 10.988 402.488 10.91 cv
402.348 10.836 402.184 10.797 401.992 10.797 cv
401.758 10.797 401.52 10.891 401.281 11.07 cv
401.043 11.254 400.785 11.516 400.504 11.863 cv
400.504 16.484 li
400.504 16.539 400.488 16.582 400.457 16.621 cv
400.426 16.66 400.371 16.695 400.297 16.719 cv
400.219 16.746 400.117 16.762 399.996 16.777 cv
399.871 16.789 399.719 16.797 399.531 16.797 cv
399.336 16.797 399.176 16.789 399.055 16.777 cv
398.926 16.762 398.824 16.746 398.754 16.719 cv
398.676 16.695 398.625 16.66 398.594 16.621 cv
398.563 16.582 398.547 16.539 398.547 16.484 cv
398.547 12.363 li
398.547 12.133 398.523 11.918 398.48 11.723 cv
398.438 11.531 398.371 11.367 398.285 11.23 cv
398.191 11.094 398.078 10.988 397.941 10.91 cv
397.797 10.836 397.633 10.797 397.449 10.797 cv
397.207 10.797 396.969 10.891 396.73 11.07 cv
396.492 11.254 396.234 11.516 395.961 11.863 cv
395.961 16.484 li
395.957 16.539 395.941 16.582 395.914 16.621 cv
395.879 16.66 395.824 16.695 395.754 16.719 cv
395.676 16.746 395.578 16.762 395.453 16.777 cv
395.328 16.789 395.168 16.797 394.98 16.797 cv
394.785 16.797 394.629 16.789 394.504 16.777 cv
394.379 16.762 394.277 16.746 394.203 16.719 cv
394.125 16.695 394.07 16.66 394.043 16.621 cv
394.008 16.582 393.992 16.539 393.996 16.484 cv
393.996 9.53497 li
393.992 9.48798 394.008 9.44098 394.035 9.39801 cv
394.059 9.36298 394.105 9.33197 394.176 9.30103 cv
394.242 9.27698 394.328 9.258 394.438 9.242 cv
394.543 9.23401 394.676 9.22699 394.84 9.22302 cv
395.004 9.22699 395.141 9.23401 395.25 9.242 cv
395.355 9.258 395.441 9.27698 395.504 9.30103 cv
395.563 9.33197 395.605 9.36298 395.633 9.39801 cv
395.656 9.44098 395.668 9.48798 395.672 9.53497 cv
395.672 10.336 li
396.055 9.92603 396.438 9.61298 396.82 9.40198 cv
397.199 9.19501 397.602 9.09399 398.02 9.09003 cv
398.305 9.09399 398.559 9.12097 398.789 9.17999 cv
399.016 9.242 399.223 9.328 399.402 9.43701 cv
399.582 9.55103 399.734 9.68701 399.863 9.84003 cv
399.992 9.99597 400.102 10.168 400.191 10.359 cv
400.398 10.137 400.602 9.94501 400.805 9.78497 cv
401 9.625 401.199 9.492 401.395 9.39099 cv
401.59 9.289 401.785 9.21503 401.98 9.164 cv
402.176 9.117 402.375 9.09399 402.578 9.09003 cv
403.039 9.09399 403.426 9.172 403.746 9.32397 cv
404.059 9.48401 404.316 9.69501 404.512 9.961 cv
404.707 10.23 404.844 10.543 404.93 10.898 cv
405.008 11.258 405.051 11.637 405.055 12.035 cv
cp
f
412.898 16.508 mo
412.895 16.586 412.867 16.641 412.82 16.68 cv
412.766 16.723 412.684 16.75 412.574 16.77 cv
412.457 16.785 412.293 16.797 412.078 16.797 cv
411.84 16.797 411.668 16.785 411.566 16.77 cv
411.457 16.75 411.383 16.723 411.344 16.68 cv
411.297 16.641 411.277 16.586 411.277 16.508 cv
411.277 15.957 li
410.988 16.266 410.66 16.504 410.297 16.672 cv
409.93 16.844 409.523 16.926 409.078 16.93 cv
408.707 16.926 408.367 16.879 408.059 16.785 cv
407.75 16.691 407.484 16.551 407.258 16.355 cv
407.031 16.168 406.855 15.934 406.73 15.652 cv
406.605 15.375 406.543 15.047 406.547 14.668 cv
406.543 14.27 406.621 13.918 406.781 13.613 cv
406.938 13.316 407.176 13.07 407.492 12.875 cv
407.805 12.684 408.195 12.539 408.664 12.441 cv
409.133 12.352 409.676 12.305 410.293 12.301 cv
410.973 12.301 li
410.973 11.879 li
410.973 11.664 410.949 11.473 410.906 11.309 cv
410.859 11.148 410.785 11.012 410.688 10.898 cv
410.582 10.793 410.449 10.711 410.281 10.656 cv
410.109 10.605 409.898 10.582 409.656 10.578 cv
409.324 10.582 409.031 10.617 408.777 10.687 cv
408.516 10.762 408.289 10.844 408.094 10.93 cv
407.895 11.023 407.73 11.102 407.602 11.172 cv
407.465 11.246 407.355 11.285 407.277 11.281 cv
407.215 11.285 407.164 11.266 407.125 11.227 cv
407.078 11.191 407.043 11.141 407.016 11.07 cv
406.984 11.008 406.961 10.922 406.949 10.82 cv
406.93 10.723 406.922 10.613 406.926 10.492 cv
406.922 10.332 406.938 10.207 406.965 10.109 cv
406.988 10.02 407.035 9.93402 407.113 9.85498 cv
407.184 9.78101 407.313 9.69897 407.496 9.60901 cv
407.676 9.52002 407.887 9.43402 408.133 9.35498 cv
408.375 9.27698 408.645 9.21503 408.934 9.164 cv
409.223 9.117 409.52 9.09399 409.828 9.09003 cv
410.371 9.09399 410.836 9.14502 411.223 9.25 cv
411.609 9.35901 411.93 9.52301 412.18 9.742 cv
412.43 9.961 412.609 10.246 412.727 10.594 cv
412.836 10.945 412.895 11.359 412.898 11.832 cv
cp
410.973 13.531 mo
410.223 13.531 li
409.906 13.535 409.637 13.559 409.414 13.602 cv
409.188 13.652 409.004 13.723 408.867 13.812 cv
408.723 13.91 408.621 14.023 408.559 14.152 cv
408.492 14.289 408.457 14.437 408.461 14.605 cv
408.457 14.898 408.551 15.129 408.738 15.293 cv
408.922 15.461 409.18 15.543 409.508 15.543 cv
409.781 15.543 410.031 15.473 410.266 15.332 cv
410.492 15.191 410.73 14.988 410.973 14.715 cv
cp
f
421.125 10.016 mo
421.121 10.27 421.094 10.453 421.039 10.57 cv
420.98 10.691 420.91 10.75 420.832 10.75 cv
420.012 10.75 li
420.125 10.875 420.207 11.02 420.258 11.176 cv
420.305 11.336 420.328 11.5 420.332 11.668 cv
420.328 12.078 420.262 12.437 420.129 12.75 cv
419.992 13.066 419.797 13.332 419.547 13.543 cv
419.293 13.762 418.992 13.926 418.637 14.035 cv
418.277 14.152 417.879 14.207 417.449 14.203 cv
417.223 14.207 417.012 14.18 416.809 14.121 cv
416.605 14.07 416.449 14.008 416.34 13.93 cv
416.277 14 416.219 14.078 416.172 14.172 cv
416.121 14.266 416.098 14.371 416.102 14.48 cv
416.098 14.637 416.164 14.758 416.297 14.852 cv
416.426 14.949 416.613 15.004 416.855 15.012 cv
418.547 15.074 li
418.941 15.09 419.293 15.148 419.602 15.242 cv
419.91 15.344 420.172 15.477 420.383 15.648 cv
420.594 15.824 420.754 16.035 420.863 16.277 cv
420.973 16.523 421.027 16.797 421.031 17.109 cv
421.027 17.445 420.953 17.77 420.805 18.078 cv
420.656 18.379 420.43 18.641 420.129 18.867 cv
419.824 19.086 419.445 19.266 418.992 19.398 cv
418.535 19.527 418.004 19.59 417.402 19.594 cv
416.805 19.59 416.301 19.543 415.883 19.453 cv
415.465 19.355 415.121 19.227 414.855 19.062 cv
414.586 18.895 414.391 18.695 414.273 18.469 cv
414.148 18.234 414.09 17.98 414.09 17.707 cv
414.09 17.535 414.109 17.375 414.156 17.219 cv
414.195 17.062 414.262 16.91 414.352 16.77 cv
414.434 16.625 414.539 16.492 414.664 16.359 cv
414.789 16.23 414.93 16.105 415.094 15.984 cv
414.867 15.871 414.695 15.711 414.574 15.5 cv
414.453 15.297 414.395 15.07 414.395 14.824 cv
414.395 14.523 414.461 14.246 414.602 13.988 cv
414.738 13.738 414.922 13.508 415.148 13.305 cv
414.965 13.125 414.82 12.91 414.711 12.652 cv
414.602 12.402 414.547 12.082 414.551 11.699 cv
414.547 11.297 414.617 10.937 414.762 10.613 cv
414.902 10.297 415.102 10.027 415.359 9.80499 cv
415.613 9.586 415.918 9.414 416.27 9.297 cv
416.621 9.17999 417.012 9.12097 417.441 9.12097 cv
417.66 9.12097 417.867 9.13702 418.066 9.15997 cv
418.266 9.19098 418.453 9.22699 418.625 9.27002 cv
420.832 9.27002 li
420.914 9.27301 420.984 9.33197 421.043 9.44098 cv
421.094 9.55902 421.121 9.75 421.125 10.016 cv
cp
418.609 11.66 mo
418.605 11.289 418.504 11 418.297 10.789 cv
418.086 10.586 417.793 10.48 417.418 10.477 cv
417.223 10.48 417.051 10.512 416.91 10.574 cv
416.762 10.641 416.641 10.73 416.547 10.84 cv
416.445 10.953 416.375 11.082 416.332 11.23 cv
416.281 11.379 416.258 11.535 416.262 11.691 cv
416.258 12.051 416.363 12.328 416.574 12.531 cv
416.781 12.738 417.07 12.844 417.441 12.84 cv
417.637 12.844 417.805 12.812 417.953 12.746 cv
418.094 12.687 418.215 12.602 418.316 12.488 cv
418.41 12.383 418.484 12.254 418.535 12.109 cv
418.582 11.969 418.605 11.82 418.609 11.66 cv
cp
419.07 17.211 mo
419.07 16.973 418.977 16.797 418.789 16.672 cv
418.602 16.551 418.344 16.48 418.016 16.469 cv
416.621 16.43 li
416.484 16.531 416.375 16.625 416.297 16.715 cv
416.215 16.805 416.152 16.891 416.105 16.977 cv
416.055 17.059 416.02 17.141 416.008 17.219 cv
415.988 17.297 415.98 17.375 415.984 17.461 cv
415.98 17.715 416.113 17.914 416.375 18.051 cv
416.637 18.184 417.008 18.25 417.488 18.254 cv
417.781 18.25 418.027 18.219 418.234 18.164 cv
418.434 18.102 418.598 18.023 418.727 17.926 cv
418.848 17.824 418.938 17.715 418.992 17.594 cv
419.043 17.473 419.07 17.344 419.07 17.211 cv
cp
f
428.734 12.809 mo
428.73 13.047 428.68 13.223 428.574 13.336 cv
428.465 13.453 428.316 13.512 428.137 13.508 cv
423.902 13.508 li
423.898 13.809 423.934 14.078 424.008 14.316 cv
424.074 14.559 424.188 14.762 424.344 14.93 cv
424.496 15.102 424.691 15.23 424.934 15.316 cv
425.172 15.406 425.461 15.449 425.805 15.449 cv
426.145 15.449 426.445 15.426 426.707 15.375 cv
426.965 15.328 427.191 15.273 427.383 15.211 cv
427.57 15.152 427.727 15.098 427.855 15.047 cv
427.977 15 428.078 14.977 428.16 14.973 cv
428.203 14.977 428.242 14.984 428.277 15 cv
428.305 15.02 428.332 15.051 428.352 15.098 cv
428.371 15.145 428.383 15.211 428.395 15.297 cv
428.398 15.383 428.402 15.492 428.406 15.621 cv
428.402 15.738 428.402 15.836 428.398 15.914 cv
428.391 15.996 428.383 16.062 428.375 16.117 cv
428.363 16.176 428.348 16.227 428.328 16.262 cv
428.309 16.305 428.281 16.34 428.25 16.375 cv
428.215 16.414 428.121 16.465 427.973 16.523 cv
427.816 16.59 427.625 16.652 427.395 16.707 cv
427.156 16.77 426.887 16.816 426.59 16.863 cv
426.285 16.902 425.965 16.926 425.625 16.93 cv
425.004 16.926 424.461 16.852 424 16.695 cv
423.531 16.543 423.145 16.305 422.836 15.988 cv
422.52 15.672 422.285 15.273 422.137 14.789 cv
421.98 14.309 421.906 13.742 421.91 13.086 cv
421.906 12.473 421.984 11.914 422.148 11.418 cv
422.305 10.922 422.539 10.504 422.852 10.156 cv
423.156 9.81201 423.531 9.547 423.969 9.36298 cv
424.406 9.18402 424.898 9.09399 425.453 9.09003 cv
426.031 9.09399 426.531 9.17999 426.945 9.34802 cv
427.359 9.52301 427.695 9.76202 427.961 10.062 cv
428.223 10.367 428.418 10.727 428.547 11.141 cv
428.668 11.559 428.73 12.008 428.734 12.496 cv
cp
426.832 12.246 mo
426.844 11.695 426.734 11.262 426.5 10.949 cv
426.266 10.637 425.898 10.48 425.406 10.477 cv
425.156 10.48 424.941 10.527 424.758 10.617 cv
424.57 10.715 424.418 10.84 424.297 10.996 cv
424.172 11.156 424.078 11.344 424.016 11.559 cv
423.949 11.773 423.91 12.004 423.902 12.246 cv
cp
f
435.234 14.52 mo
435.23 14.918 435.156 15.266 435.012 15.566 cv
434.863 15.867 434.656 16.121 434.387 16.32 cv
434.113 16.527 433.793 16.676 433.426 16.777 cv
433.059 16.875 432.656 16.926 432.227 16.93 cv
431.961 16.926 431.715 16.906 431.48 16.871 cv
431.246 16.828 431.035 16.781 430.848 16.723 cv
430.66 16.664 430.504 16.602 430.379 16.539 cv
430.254 16.477 430.16 16.418 430.105 16.363 cv
430.047 16.309 430.004 16.227 429.977 16.109 cv
429.941 15.996 429.926 15.82 429.93 15.59 cv
429.926 15.441 429.934 15.32 429.945 15.227 cv
429.953 15.137 429.969 15.066 429.992 15.008 cv
430.012 14.957 430.035 14.918 430.07 14.898 cv
430.098 14.883 430.137 14.875 430.184 14.871 cv
430.238 14.875 430.324 14.906 430.438 14.969 cv
430.547 15.035 430.684 15.109 430.855 15.184 cv
431.02 15.266 431.215 15.336 431.434 15.402 cv
431.652 15.473 431.902 15.508 432.188 15.504 cv
432.363 15.508 432.52 15.488 432.66 15.449 cv
432.793 15.414 432.914 15.363 433.02 15.293 cv
433.117 15.227 433.191 15.141 433.246 15.035 cv
433.293 14.934 433.32 14.812 433.324 14.676 cv
433.32 14.52 433.273 14.387 433.18 14.277 cv
433.086 14.168 432.957 14.07 432.801 13.984 cv
432.637 13.902 432.457 13.824 432.262 13.75 cv
432.059 13.68 431.855 13.602 431.645 13.508 cv
431.434 13.422 431.227 13.32 431.031 13.203 cv
430.828 13.094 430.648 12.953 430.492 12.785 cv
430.328 12.621 430.203 12.422 430.109 12.184 cv
430.016 11.953 429.969 11.672 429.969 11.34 cv
429.969 11.012 430.031 10.707 430.16 10.426 cv
430.289 10.152 430.477 9.914 430.723 9.71503 cv
430.965 9.52002 431.262 9.367 431.613 9.25403 cv
431.961 9.14801 432.355 9.09399 432.797 9.09003 cv
433.012 9.09399 433.223 9.10901 433.43 9.13702 cv
433.633 9.172 433.82 9.211 433.988 9.25403 cv
434.152 9.30499 434.293 9.35498 434.41 9.40601 cv
434.523 9.46503 434.605 9.51202 434.656 9.547 cv
434.703 9.59003 434.738 9.62903 434.762 9.664 cv
434.781 9.70697 434.793 9.75403 434.805 9.80499 cv
434.813 9.85901 434.824 9.92603 434.832 10.004 cv
434.84 10.09 434.844 10.187 434.844 10.305 cv
434.844 10.445 434.84 10.562 434.832 10.648 cv
434.824 10.742 434.809 10.812 434.793 10.859 cv
434.773 10.914 434.75 10.949 434.723 10.965 cv
434.688 10.988 434.652 10.996 434.613 10.992 cv
434.563 10.996 434.488 10.969 434.395 10.91 cv
434.293 10.859 434.172 10.801 434.023 10.734 cv
433.875 10.676 433.703 10.617 433.508 10.559 cv
433.313 10.508 433.09 10.48 432.844 10.477 cv
432.664 10.48 432.512 10.5 432.383 10.531 cv
432.25 10.57 432.141 10.621 432.063 10.687 cv
431.977 10.758 431.914 10.836 431.875 10.926 cv
431.828 11.02 431.809 11.117 431.813 11.219 cv
431.809 11.379 431.859 11.516 431.961 11.621 cv
432.059 11.734 432.188 11.828 432.352 11.91 cv
432.512 11.996 432.695 12.074 432.902 12.145 cv
433.105 12.219 433.313 12.301 433.523 12.383 cv
433.73 12.473 433.938 12.57 434.148 12.684 cv
434.352 12.797 434.535 12.937 434.695 13.102 cv
434.855 13.27 434.984 13.469 435.086 13.699 cv
435.18 13.934 435.23 14.207 435.234 14.52 cv
cp
f
444.035 12.832 mo
444.031 13.133 444.004 13.344 443.949 13.461 cv
443.891 13.586 443.801 13.645 443.676 13.641 cv
440.434 13.641 li
440.305 13.645 440.211 13.582 440.156 13.457 cv
440.094 13.336 440.066 13.129 440.07 12.832 cv
440.066 12.543 440.094 12.336 440.156 12.215 cv
440.211 12.098 440.305 12.039 440.434 12.035 cv
443.676 12.035 li
443.738 12.039 443.789 12.051 443.836 12.074 cv
443.875 12.102 443.914 12.148 443.949 12.207 cv
443.977 12.273 444 12.355 444.016 12.457 cv
444.027 12.562 444.031 12.687 444.035 12.832 cv
cp
f
454.77 15.895 mo
454.766 16.051 454.762 16.184 454.75 16.285 cv
454.734 16.395 454.715 16.48 454.691 16.551 cv
454.664 16.621 454.629 16.672 454.594 16.703 cv
454.551 16.734 454.508 16.75 454.457 16.75 cv
449.836 16.75 li
449.66 16.75 449.516 16.699 449.402 16.598 cv
449.281 16.496 449.223 16.332 449.227 16.102 cv
449.227 6.94501 li
449.223 6.89801 449.242 6.85199 449.277 6.80499 cv
449.309 6.76599 449.363 6.72998 449.445 6.703 cv
449.52 6.67999 449.625 6.65997 449.762 6.64099 cv
449.891 6.62903 450.055 6.62097 450.258 6.617 cv
450.453 6.62097 450.621 6.62903 450.754 6.64099 cv
450.883 6.65997 450.984 6.67999 451.066 6.703 cv
451.141 6.72998 451.199 6.76599 451.234 6.80499 cv
451.266 6.85199 451.281 6.89801 451.285 6.94501 cv
451.285 15.059 li
454.457 15.059 li
454.508 15.062 454.551 15.078 454.594 15.102 cv
454.629 15.133 454.664 15.18 454.691 15.242 cv
454.715 15.312 454.734 15.398 454.75 15.5 cv
454.762 15.609 454.766 15.738 454.77 15.895 cv
cp
f
462.895 12.937 mo
462.891 13.535 462.813 14.078 462.66 14.562 cv
462.5 15.055 462.266 15.473 461.949 15.824 cv
461.633 16.176 461.234 16.449 460.758 16.641 cv
460.277 16.832 459.719 16.926 459.082 16.93 cv
458.461 16.926 457.922 16.844 457.469 16.672 cv
457.008 16.504 456.629 16.254 456.332 15.926 cv
456.027 15.602 455.805 15.199 455.66 14.719 cv
455.516 14.242 455.445 13.695 455.445 13.078 cv
455.445 12.488 455.523 11.949 455.68 11.457 cv
455.836 10.969 456.074 10.547 456.395 10.195 cv
456.711 9.84802 457.105 9.57397 457.582 9.37903 cv
458.055 9.18701 458.613 9.09399 459.254 9.09003 cv
459.879 9.09399 460.418 9.17603 460.875 9.34399 cv
461.332 9.51599 461.711 9.76599 462.008 10.09 cv
462.305 10.418 462.527 10.82 462.676 11.297 cv
462.82 11.777 462.891 12.324 462.895 12.937 cv
cp
460.875 13.016 mo
460.871 12.68 460.844 12.363 460.793 12.07 cv
460.734 11.785 460.641 11.535 460.516 11.32 cv
460.383 11.109 460.211 10.941 460 10.82 cv
459.781 10.703 459.512 10.645 459.184 10.641 cv
458.895 10.645 458.641 10.699 458.422 10.801 cv
458.203 10.91 458.023 11.066 457.883 11.27 cv
457.742 11.477 457.637 11.723 457.566 12.008 cv
457.496 12.301 457.461 12.629 457.461 12.992 cv
457.461 13.34 457.488 13.656 457.547 13.941 cv
457.602 14.234 457.695 14.484 457.824 14.695 cv
457.949 14.91 458.121 15.074 458.344 15.187 cv
458.559 15.309 458.828 15.367 459.152 15.363 cv
459.445 15.367 459.703 15.312 459.926 15.203 cv
460.141 15.098 460.32 14.945 460.461 14.738 cv
460.602 14.539 460.703 14.293 460.773 14.004 cv
460.836 13.719 460.871 13.391 460.875 13.016 cv
cp
f
469.711 15.379 mo
469.707 15.516 469.703 15.629 469.699 15.719 cv
469.688 15.812 469.68 15.891 469.668 15.949 cv
469.652 16.012 469.637 16.062 469.621 16.098 cv
469.602 16.141 469.559 16.187 469.5 16.246 cv
469.434 16.309 469.328 16.383 469.18 16.465 cv
469.027 16.555 468.855 16.633 468.664 16.695 cv
468.473 16.766 468.266 16.816 468.039 16.859 cv
467.813 16.898 467.578 16.918 467.344 16.922 cv
466.805 16.918 466.332 16.84 465.918 16.672 cv
465.504 16.508 465.156 16.262 464.879 15.937 cv
464.594 15.613 464.383 15.219 464.242 14.75 cv
464.102 14.285 464.031 13.746 464.031 13.141 cv
464.031 12.445 464.117 11.848 464.289 11.34 cv
464.461 10.836 464.703 10.414 465.02 10.082 cv
465.328 9.75 465.695 9.50403 466.125 9.34003 cv
466.547 9.17999 467.016 9.09802 467.527 9.09802 cv
467.734 9.09802 467.938 9.117 468.141 9.15198 cv
468.336 9.19098 468.523 9.242 468.699 9.30103 cv
468.871 9.367 469.027 9.43701 469.168 9.51202 cv
469.305 9.59399 469.402 9.65997 469.461 9.71503 cv
469.516 9.77301 469.555 9.82001 469.582 9.85498 cv
469.602 9.89801 469.621 9.94897 469.637 10.008 cv
469.648 10.074 469.66 10.152 469.668 10.238 cv
469.676 10.332 469.68 10.441 469.68 10.57 cv
469.68 10.875 469.652 11.086 469.602 11.207 cv
469.547 11.328 469.48 11.391 469.398 11.387 cv
469.309 11.391 469.215 11.355 469.117 11.281 cv
469.016 11.211 468.898 11.129 468.766 11.039 cv
468.633 10.953 468.473 10.871 468.285 10.797 cv
468.098 10.727 467.871 10.691 467.613 10.687 cv
467.102 10.691 466.715 10.887 466.445 11.277 cv
466.172 11.668 466.035 12.242 466.039 13 cv
466.035 13.375 466.07 13.707 466.141 13.992 cv
466.207 14.277 466.305 14.516 466.441 14.707 cv
466.57 14.902 466.738 15.047 466.941 15.141 cv
467.141 15.238 467.371 15.285 467.637 15.285 cv
467.902 15.285 468.137 15.246 468.336 15.164 cv
468.527 15.086 468.695 14.996 468.844 14.895 cv
468.984 14.797 469.109 14.707 469.211 14.625 cv
469.309 14.547 469.391 14.508 469.461 14.504 cv
469.504 14.508 469.543 14.52 469.578 14.543 cv
469.605 14.57 469.629 14.617 469.652 14.687 cv
469.668 14.758 469.684 14.848 469.695 14.957 cv
469.703 15.066 469.707 15.207 469.711 15.379 cv
cp
f
476.996 16.508 mo
476.992 16.586 476.965 16.641 476.918 16.68 cv
476.863 16.723 476.781 16.75 476.672 16.77 cv
476.555 16.785 476.391 16.797 476.176 16.797 cv
475.938 16.797 475.766 16.785 475.664 16.77 cv
475.555 16.75 475.48 16.723 475.441 16.68 cv
475.395 16.641 475.375 16.586 475.375 16.508 cv
475.375 15.957 li
475.086 16.266 474.758 16.504 474.395 16.672 cv
474.027 16.844 473.621 16.926 473.176 16.93 cv
472.805 16.926 472.465 16.879 472.156 16.785 cv
471.848 16.691 471.582 16.551 471.355 16.355 cv
471.129 16.168 470.953 15.934 470.828 15.652 cv
470.703 15.375 470.641 15.047 470.645 14.668 cv
470.641 14.27 470.719 13.918 470.879 13.613 cv
471.035 13.316 471.273 13.07 471.59 12.875 cv
471.902 12.684 472.293 12.539 472.762 12.441 cv
473.23 12.352 473.773 12.305 474.391 12.301 cv
475.07 12.301 li
475.07 11.879 li
475.07 11.664 475.047 11.473 475.004 11.309 cv
474.957 11.148 474.883 11.012 474.785 10.898 cv
474.68 10.793 474.547 10.711 474.379 10.656 cv
474.207 10.605 473.996 10.582 473.754 10.578 cv
473.422 10.582 473.129 10.617 472.875 10.687 cv
472.613 10.762 472.387 10.844 472.191 10.93 cv
471.992 11.023 471.828 11.102 471.699 11.172 cv
471.563 11.246 471.453 11.285 471.375 11.281 cv
471.313 11.285 471.262 11.266 471.223 11.227 cv
471.176 11.191 471.141 11.141 471.113 11.07 cv
471.082 11.008 471.059 10.922 471.047 10.82 cv
471.027 10.723 471.02 10.613 471.023 10.492 cv
471.02 10.332 471.035 10.207 471.063 10.109 cv
471.086 10.02 471.133 9.93402 471.211 9.85498 cv
471.281 9.78101 471.41 9.69897 471.594 9.60901 cv
471.773 9.52002 471.984 9.43402 472.23 9.35498 cv
472.473 9.27698 472.742 9.21503 473.031 9.164 cv
473.32 9.117 473.617 9.09399 473.926 9.09003 cv
474.469 9.09399 474.934 9.14502 475.32 9.25 cv
475.707 9.35901 476.027 9.52301 476.277 9.742 cv
476.527 9.961 476.707 10.246 476.824 10.594 cv
476.934 10.945 476.992 11.359 476.996 11.832 cv
cp
475.07 13.531 mo
474.32 13.531 li
474.004 13.535 473.734 13.559 473.512 13.602 cv
473.285 13.652 473.102 13.723 472.965 13.812 cv
472.82 13.91 472.719 14.023 472.656 14.152 cv
472.59 14.289 472.555 14.437 472.559 14.605 cv
472.555 14.898 472.648 15.129 472.836 15.293 cv
473.02 15.461 473.277 15.543 473.605 15.543 cv
473.879 15.543 474.129 15.473 474.363 15.332 cv
474.59 15.191 474.828 14.988 475.07 14.715 cv
cp
f
480.922 16.484 mo
480.918 16.539 480.902 16.582 480.875 16.621 cv
480.84 16.66 480.785 16.695 480.715 16.719 cv
480.637 16.746 480.539 16.762 480.414 16.777 cv
480.289 16.789 480.129 16.797 479.941 16.797 cv
479.746 16.797 479.59 16.789 479.465 16.777 cv
479.34 16.762 479.238 16.746 479.164 16.719 cv
479.086 16.695 479.031 16.66 479.004 16.621 cv
478.969 16.582 478.953 16.539 478.957 16.484 cv
478.957 6.23798 li
478.953 6.18701 478.969 6.14099 479.004 6.09802 cv
479.031 6.05902 479.086 6.02301 479.164 5.992 cv
479.238 5.96503 479.34 5.94501 479.465 5.92603 cv
479.59 5.914 479.746 5.90601 479.941 5.90198 cv
480.129 5.90601 480.289 5.914 480.414 5.92603 cv
480.539 5.94501 480.637 5.96503 480.715 5.992 cv
480.785 6.02301 480.84 6.05902 480.875 6.09802 cv
480.902 6.14099 480.918 6.18701 480.922 6.23798 cv
cp
f
498.406 16.469 mo
498.402 16.523 498.391 16.57 498.363 16.609 cv
498.332 16.652 498.277 16.687 498.207 16.711 cv
498.129 16.738 498.031 16.758 497.906 16.773 cv
497.781 16.789 497.621 16.797 497.43 16.797 cv
497.242 16.797 497.086 16.789 496.965 16.773 cv
496.836 16.758 496.738 16.738 496.668 16.711 cv
496.594 16.687 496.543 16.652 496.512 16.609 cv
496.48 16.57 496.465 16.523 496.465 16.469 cv
496.465 8.26202 li
496.449 8.26202 li
493.527 16.461 li
493.504 16.531 493.469 16.586 493.426 16.629 cv
493.375 16.676 493.313 16.711 493.234 16.734 cv
493.152 16.762 493.051 16.777 492.926 16.785 cv
492.801 16.793 492.648 16.797 492.477 16.797 cv
492.297 16.797 492.148 16.789 492.023 16.777 cv
491.898 16.762 491.793 16.742 491.715 16.715 cv
491.629 16.687 491.566 16.652 491.523 16.609 cv
491.473 16.57 491.441 16.523 491.43 16.461 cv
488.609 8.26202 li
488.594 8.26202 li
488.594 16.469 li
488.59 16.523 488.574 16.57 488.551 16.609 cv
488.52 16.652 488.469 16.687 488.391 16.711 cv
488.313 16.738 488.211 16.758 488.09 16.773 cv
487.965 16.789 487.809 16.797 487.621 16.797 cv
487.43 16.797 487.273 16.789 487.152 16.773 cv
487.023 16.758 486.922 16.738 486.852 16.711 cv
486.773 16.687 486.723 16.652 486.695 16.609 cv
486.664 16.57 486.648 16.523 486.652 16.469 cv
486.652 7.48401 li
486.648 7.22302 486.719 7.02002 486.863 6.875 cv
487 6.73798 487.188 6.66803 487.426 6.664 cv
488.766 6.664 li
489.004 6.66803 489.207 6.68701 489.379 6.72302 cv
489.547 6.76599 489.695 6.828 489.824 6.91803 cv
489.945 7.01202 490.051 7.133 490.137 7.27698 cv
490.219 7.42999 490.289 7.61298 490.355 7.828 cv
492.539 13.836 li
492.57 13.836 li
494.828 7.84399 li
494.895 7.625 494.969 7.44098 495.051 7.289 cv
495.129 7.14099 495.223 7.02002 495.332 6.922 cv
495.438 6.83197 495.563 6.76599 495.707 6.72302 cv
495.852 6.68701 496.02 6.66803 496.215 6.664 cv
497.594 6.664 li
497.73 6.66803 497.852 6.68402 497.957 6.71899 cv
498.055 6.758 498.137 6.81201 498.207 6.87903 cv
498.27 6.953 498.32 7.039 498.355 7.13702 cv
498.387 7.242 498.402 7.35901 498.406 7.48401 cv
cp
f
507.516 12.937 mo
507.512 13.535 507.434 14.078 507.281 14.562 cv
507.121 15.055 506.887 15.473 506.57 15.824 cv
506.254 16.176 505.855 16.449 505.379 16.641 cv
504.898 16.832 504.34 16.926 503.703 16.93 cv
503.082 16.926 502.543 16.844 502.09 16.672 cv
501.629 16.504 501.25 16.254 500.953 15.926 cv
500.648 15.602 500.426 15.199 500.281 14.719 cv
500.137 14.242 500.066 13.695 500.066 13.078 cv
500.066 12.488 500.145 11.949 500.301 11.457 cv
500.457 10.969 500.695 10.547 501.016 10.195 cv
501.332 9.84802 501.727 9.57397 502.203 9.37903 cv
502.676 9.18701 503.234 9.09399 503.875 9.09003 cv
504.5 9.09399 505.039 9.17603 505.496 9.34399 cv
505.953 9.51599 506.332 9.76599 506.629 10.09 cv
506.926 10.418 507.148 10.82 507.297 11.297 cv
507.441 11.777 507.512 12.324 507.516 12.937 cv
cp
505.496 13.016 mo
505.492 12.68 505.465 12.363 505.414 12.07 cv
505.355 11.785 505.262 11.535 505.137 11.32 cv
505.004 11.109 504.832 10.941 504.621 10.82 cv
504.402 10.703 504.133 10.645 503.805 10.641 cv
503.516 10.645 503.262 10.699 503.043 10.801 cv
502.824 10.91 502.645 11.066 502.504 11.27 cv
502.363 11.477 502.258 11.723 502.188 12.008 cv
502.117 12.301 502.082 12.629 502.082 12.992 cv
502.082 13.34 502.109 13.656 502.168 13.941 cv
502.223 14.234 502.316 14.484 502.445 14.695 cv
502.57 14.91 502.742 15.074 502.965 15.187 cv
503.18 15.309 503.449 15.367 503.773 15.363 cv
504.066 15.367 504.324 15.312 504.547 15.203 cv
504.762 15.098 504.941 14.945 505.082 14.738 cv
505.223 14.539 505.324 14.293 505.395 14.004 cv
505.457 13.719 505.492 13.391 505.496 13.016 cv
cp
f
515.664 16.484 mo
515.66 16.547 515.648 16.594 515.625 16.629 cv
515.598 16.672 515.551 16.703 515.492 16.727 cv
515.426 16.75 515.344 16.766 515.238 16.781 cv
515.133 16.789 515 16.797 514.848 16.797 cv
514.676 16.797 514.543 16.789 514.441 16.781 cv
514.336 16.766 514.25 16.75 514.188 16.727 cv
514.121 16.703 514.074 16.672 514.047 16.629 cv
514.016 16.594 514 16.547 514.004 16.484 cv
514.004 15.715 li
513.645 16.102 513.27 16.398 512.879 16.609 cv
512.48 16.82 512.047 16.926 511.574 16.93 cv
511.039 16.926 510.59 16.824 510.227 16.621 cv
509.859 16.418 509.563 16.145 509.332 15.793 cv
509.098 15.449 508.93 15.043 508.828 14.574 cv
508.727 14.113 508.676 13.621 508.676 13.102 cv
508.676 12.488 508.738 11.934 508.871 11.437 cv
509 10.945 509.195 10.523 509.453 10.176 cv
509.707 9.828 510.023 9.56201 510.402 9.37097 cv
510.781 9.18701 511.219 9.09399 511.715 9.09003 cv
512.102 9.09399 512.453 9.172 512.773 9.328 cv
513.086 9.48798 513.402 9.71899 513.715 10.023 cv
513.715 6.26202 li
513.715 6.211 513.727 6.164 513.758 6.12097 cv
513.781 6.08197 513.836 6.047 513.914 6.01599 cv
513.988 5.98798 514.086 5.96899 514.215 5.94897 cv
514.336 5.93701 514.496 5.92999 514.691 5.92603 cv
514.883 5.92999 515.039 5.93701 515.164 5.94897 cv
515.285 5.96899 515.387 5.98798 515.461 6.01599 cv
515.531 6.047 515.582 6.08197 515.617 6.12097 cv
515.645 6.164 515.66 6.211 515.664 6.26202 cv
cp
513.715 11.84 mo
513.434 11.488 513.164 11.219 512.91 11.031 cv
512.648 10.844 512.379 10.75 512.102 10.75 cv
511.848 10.75 511.629 10.816 511.445 10.941 cv
511.258 11.074 511.109 11.242 511 11.453 cv
510.887 11.664 510.805 11.902 510.75 12.164 cv
510.695 12.43 510.668 12.699 510.668 12.969 cv
510.668 13.266 510.691 13.547 510.738 13.82 cv
510.785 14.098 510.859 14.344 510.969 14.559 cv
511.07 14.773 511.215 14.945 511.395 15.074 cv
511.57 15.207 511.793 15.273 512.063 15.27 cv
512.195 15.273 512.324 15.254 512.457 15.211 cv
512.582 15.176 512.715 15.113 512.848 15.02 cv
512.98 14.934 513.117 14.816 513.258 14.672 cv
513.398 14.531 513.551 14.355 513.715 14.148 cv
cp
f
524.066 12.809 mo
524.063 13.047 524.012 13.223 523.906 13.336 cv
523.797 13.453 523.648 13.512 523.469 13.508 cv
519.234 13.508 li
519.23 13.809 519.266 14.078 519.34 14.316 cv
519.406 14.559 519.52 14.762 519.676 14.93 cv
519.828 15.102 520.023 15.23 520.266 15.316 cv
520.504 15.406 520.793 15.449 521.137 15.449 cv
521.477 15.449 521.777 15.426 522.039 15.375 cv
522.297 15.328 522.523 15.273 522.715 15.211 cv
522.902 15.152 523.059 15.098 523.188 15.047 cv
523.309 15 523.41 14.977 523.492 14.973 cv
523.535 14.977 523.574 14.984 523.609 15 cv
523.637 15.02 523.664 15.051 523.684 15.098 cv
523.703 15.145 523.715 15.211 523.727 15.297 cv
523.73 15.383 523.734 15.492 523.738 15.621 cv
523.734 15.738 523.734 15.836 523.73 15.914 cv
523.723 15.996 523.715 16.062 523.707 16.117 cv
523.695 16.176 523.68 16.227 523.66 16.262 cv
523.641 16.305 523.613 16.34 523.582 16.375 cv
523.547 16.414 523.453 16.465 523.305 16.523 cv
523.148 16.59 522.957 16.652 522.727 16.707 cv
522.488 16.77 522.219 16.816 521.922 16.863 cv
521.617 16.902 521.297 16.926 520.957 16.93 cv
520.336 16.926 519.793 16.852 519.332 16.695 cv
518.863 16.543 518.477 16.305 518.168 15.988 cv
517.852 15.672 517.617 15.273 517.469 14.789 cv
517.313 14.309 517.238 13.742 517.242 13.086 cv
517.238 12.473 517.316 11.914 517.48 11.418 cv
517.637 10.922 517.871 10.504 518.184 10.156 cv
518.488 9.81201 518.863 9.547 519.301 9.36298 cv
519.738 9.18402 520.23 9.09399 520.785 9.09003 cv
521.363 9.09399 521.863 9.17999 522.277 9.34802 cv
522.691 9.52301 523.027 9.76202 523.293 10.062 cv
523.555 10.367 523.75 10.727 523.879 11.141 cv
524 11.559 524.063 12.008 524.066 12.496 cv
cp
522.164 12.246 mo
522.176 11.695 522.066 11.262 521.832 10.949 cv
521.598 10.637 521.23 10.48 520.738 10.477 cv
520.488 10.48 520.273 10.527 520.09 10.617 cv
519.902 10.715 519.75 10.84 519.629 10.996 cv
519.504 11.156 519.41 11.344 519.348 11.559 cv
519.281 11.773 519.242 12.004 519.234 12.246 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
