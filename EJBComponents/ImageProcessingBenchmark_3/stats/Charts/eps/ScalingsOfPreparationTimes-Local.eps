%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ScalingsOfPreparationTimes-Local.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 10/12/2018, 4:04:57 p.m.
%%BoundingBox: 0 0 609 560
%%HiResBoundingBox: 0 0 608.6401 559.2001
%%CropBox: 0 0 608.6401 559.2001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -559.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 559.2 li
608.64 559.2 li
608.64 0 li
cp
clp
gsave
0 559.2 mo
609 559.2 li
609 -.799988 li
0 -.799988 li
cp
clp
0 0 mo
608.641 0 li
608.641 559.199 li
0 559.199 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.32 490.199 mo
593.762 490.199 li
31.32 469.199 mo
593.762 469.199 li
31.32 448.199 mo
593.762 448.199 li
31.32 427.199 mo
593.762 427.199 li
31.32 406.199 mo
593.762 406.199 li
31.32 385.199 mo
593.762 385.199 li
31.32 364.32 mo
593.762 364.32 li
31.32 343.32 mo
593.762 343.32 li
31.32 322.32 mo
593.762 322.32 li
31.32 301.32 mo
593.762 301.32 li
31.32 280.32 mo
593.762 280.32 li
31.32 259.32 mo
593.762 259.32 li
31.32 238.32 mo
593.762 238.32 li
31.32 217.32 mo
593.762 217.32 li
31.32 196.32 mo
593.762 196.32 li
31.32 175.441 mo
593.762 175.441 li
31.32 154.441 mo
593.762 154.441 li
31.32 133.441 mo
593.762 133.441 li
31.32 112.441 mo
593.762 112.441 li
31.32 91.441 mo
593.762 91.441 li
31.32 70.441 mo
593.762 70.441 li
31.32 49.441 mo
593.762 49.441 li
31.32 28.441 mo
593.762 28.441 li
.328344 .284215 .278569 .000915541 cmyk
@
66.48 28.441 mo
66.48 511.199 li
136.801 28.441 mo
136.801 511.199 li
207 28.441 mo
207 511.199 li
277.32 28.441 mo
277.32 511.199 li
347.641 28.441 mo
347.641 511.199 li
417.961 28.441 mo
417.961 511.199 li
488.281 28.441 mo
488.281 511.199 li
558.602 28.441 mo
558.602 511.199 li
.178592 .148898 .143923 0 cmyk
@
31.32 28.441 mo
31.32 511.199 li
101.641 28.441 mo
101.641 511.199 li
171.961 28.441 mo
171.961 511.199 li
242.16 28.441 mo
242.16 511.199 li
312.48 28.441 mo
312.48 511.199 li
382.801 28.441 mo
382.801 511.199 li
453.121 28.441 mo
453.121 511.199 li
523.441 28.441 mo
523.441 511.199 li
593.762 28.441 mo
593.762 511.199 li
.328344 .284215 .278569 .000915541 cmyk
@
11.16 501.84 mo
18.238 501.84 li
18.238 519 li
11.16 519 li
cp
0 0 0 0 cmyk
ef
11.16 480.84 mo
18.238 480.84 li
18.238 498 li
11.16 498 li
cp
ef
11.16 459.84 mo
18.238 459.84 li
18.238 477 li
11.16 477 li
cp
ef
11.16 438.961 mo
18.238 438.961 li
18.238 456 li
11.16 456 li
cp
ef
11.16 417.961 mo
18.238 417.961 li
18.238 435 li
11.16 435 li
cp
ef
11.16 396.961 mo
18.238 396.961 li
18.238 414 li
11.16 414 li
cp
ef
11.16 375.961 mo
18.238 375.961 li
18.238 393 li
11.16 393 li
cp
ef
11.16 354.961 mo
18.238 354.961 li
18.238 372 li
11.16 372 li
cp
ef
11.16 333.961 mo
18.238 333.961 li
18.238 351 li
11.16 351 li
cp
ef
4.078 312.961 mo
18.238 312.961 li
18.238 330.121 li
4.078 330.121 li
cp
ef
4.078 291.961 mo
18.238 291.961 li
18.238 309.121 li
4.078 309.121 li
cp
ef
4.078 270.961 mo
18.238 270.961 li
18.238 288.121 li
4.078 288.121 li
cp
ef
4.078 249.961 mo
18.238 249.961 li
18.238 267.121 li
4.078 267.121 li
cp
ef
4.078 229.078 mo
18.238 229.078 li
18.238 246.121 li
4.078 246.121 li
cp
ef
4.078 208.078 mo
18.238 208.078 li
18.238 225.121 li
4.078 225.121 li
cp
ef
4.078 187.078 mo
18.238 187.078 li
18.238 204.121 li
4.078 204.121 li
cp
ef
4.078 166.078 mo
18.238 166.078 li
18.238 183.121 li
4.078 183.121 li
cp
ef
4.078 145.078 mo
18.238 145.078 li
18.238 162.121 li
4.078 162.121 li
cp
ef
4.078 124.078 mo
18.238 124.078 li
18.238 141.121 li
4.078 141.121 li
cp
ef
4.078 103.078 mo
18.238 103.078 li
18.238 120.238 li
4.078 120.238 li
cp
ef
4.078 82.078 mo
18.238 82.078 li
18.238 99.238 li
4.078 99.238 li
cp
ef
4.078 61.078 mo
18.238 61.078 li
18.238 78.238 li
4.078 78.238 li
cp
ef
4.078 40.078 mo
18.238 40.078 li
18.238 57.238 li
4.078 57.238 li
cp
ef
4.078 19.199 mo
18.238 19.199 li
18.238 36.238 li
4.078 36.238 li
cp
ef
.96 lw
31.32 511.199 mo
593.762 511.199 li
.367803 .29575 .300999 .00198367 cmyk
@
31.32 511.199 mo
31.32 515.641 li
101.641 511.199 mo
101.641 515.641 li
171.961 511.199 mo
171.961 515.641 li
242.16 511.199 mo
242.16 515.641 li
312.48 511.199 mo
312.48 515.641 li
382.801 511.199 mo
382.801 515.641 li
453.121 511.199 mo
453.121 515.641 li
523.441 511.199 mo
523.441 515.641 li
593.762 511.199 mo
593.762 515.641 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
1 lc
31.32 511.199 mo
101.641 482.398 li
171.961 430.68 li
242.16 378.48 li
312.48 366.48 li
382.801 324.719 li
453.121 283.32 li
523.441 241.32 li
593.762 200.281 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
.62768 .285466 0 0 cmyk
@
106.5 487.449 mo
96.422 477.371 li
96.422 487.449 mo
106.5 477.371 li
@
176.82 435.73 mo
166.738 425.648 li
166.738 435.73 mo
176.82 425.648 li
@
247.141 383.531 mo
237.059 373.449 li
237.059 383.531 mo
247.141 373.449 li
@
317.461 371.41 mo
307.379 361.328 li
307.379 371.41 mo
317.461 361.328 li
@
387.781 329.648 mo
377.699 319.57 li
377.699 329.648 mo
387.781 319.57 li
@
458.102 288.25 mo
448.02 278.172 li
448.02 288.25 mo
458.102 278.172 li
@
528.422 246.371 mo
518.34 236.289 li
518.34 246.371 mo
528.422 236.289 li
@
598.738 205.328 mo
588.66 195.25 li
588.66 205.328 mo
598.738 195.25 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
31.32 511.199 mo
101.641 476.16 li
171.961 417.121 li
242.16 390.84 li
312.48 343.559 li
382.801 296.398 li
453.121 248.52 li
523.441 200.762 li
593.762 154.441 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
.0319219 .621851 .911223 .000427253 cmyk
@
106.5 481.211 mo
96.422 471.129 li
96.422 481.211 mo
106.5 471.129 li
@
176.82 422.051 mo
166.738 411.969 li
166.738 422.051 mo
176.82 411.969 li
@
247.141 395.891 mo
237.059 385.809 li
237.059 395.891 mo
247.141 385.809 li
@
317.461 348.488 mo
307.379 338.41 li
307.379 348.488 mo
317.461 338.41 li
@
387.781 301.328 mo
377.699 291.25 li
377.699 301.328 mo
387.781 291.25 li
@
458.102 253.57 mo
448.02 243.488 li
448.02 253.57 mo
458.102 243.488 li
@
528.422 205.691 mo
518.34 195.609 li
518.34 205.691 mo
528.422 195.609 li
@
598.738 159.488 mo
588.66 149.41 li
588.66 159.488 mo
598.738 149.41 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
31.32 511.199 mo
101.641 485.281 li
171.961 416.641 li
242.16 357.961 li
312.48 342.961 li
382.801 295.68 li
453.121 247.199 li
523.441 200.039 li
593.762 151.559 li
.619135 .109529 .981689 .00570687 cmyk
@
grestore
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
.619135 .109529 .981689 .00570687 cmyk
@
106.5 490.328 mo
96.422 480.25 li
96.422 490.328 mo
106.5 480.25 li
@
176.82 421.57 mo
166.738 411.488 li
166.738 421.57 mo
176.82 411.488 li
@
247.141 362.891 mo
237.059 352.809 li
237.059 362.891 mo
247.141 352.809 li
@
317.461 347.891 mo
307.379 337.809 li
307.379 347.891 mo
317.461 337.809 li
@
387.781 300.73 mo
377.699 290.648 li
377.699 300.73 mo
387.781 290.648 li
@
458.102 252.129 mo
448.02 242.051 li
448.02 252.129 mo
458.102 242.051 li
@
528.422 205.09 mo
518.34 195.012 li
518.34 205.09 mo
528.422 195.012 li
@
598.738 156.488 mo
588.66 146.41 li
588.66 156.488 mo
598.738 146.41 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
31.32 511.199 mo
101.641 476.52 li
171.961 418.559 li
242.16 388.559 li
312.48 298.922 li
382.801 293.398 li
453.121 245.039 li
523.441 196.32 li
593.762 150.359 li
0 .990631 1 .000396735 cmyk
@
grestore
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
0 .990631 1 .000396735 cmyk
@
106.5 481.449 mo
96.422 471.371 li
96.422 481.449 mo
106.5 471.371 li
@
176.82 423.609 mo
166.738 413.531 li
166.738 423.609 mo
176.82 413.531 li
@
247.141 393.609 mo
237.059 383.531 li
237.059 393.609 mo
247.141 383.531 li
@
317.461 303.969 mo
307.379 293.891 li
307.379 303.969 mo
317.461 293.891 li
@
387.781 298.328 mo
377.699 288.25 li
377.699 298.328 mo
387.781 288.25 li
@
458.102 249.969 mo
448.02 239.891 li
448.02 249.969 mo
458.102 239.891 li
@
528.422 201.371 mo
518.34 191.289 li
518.34 201.371 mo
528.422 191.289 li
@
598.738 155.41 mo
588.66 145.328 li
588.66 155.41 mo
598.738 145.328 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 475.922 li
171.961 420.719 li
242.16 415.922 li
312.48 379.441 li
382.801 340.68 li
453.121 303.602 li
523.441 254.281 li
593.762 227.52 li
.62768 .285466 0 0 cmyk
@
grestore
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
.62768 .285466 0 0 cmyk
@
106.5 480.852 mo
96.422 470.77 li
96.422 480.852 mo
106.5 470.77 li
@
176.82 425.77 mo
166.738 415.691 li
166.738 425.77 mo
176.82 415.691 li
@
247.141 420.852 mo
237.059 410.77 li
237.059 420.852 mo
247.141 410.77 li
@
317.461 384.488 mo
307.379 374.41 li
307.379 384.488 mo
317.461 374.41 li
@
387.781 345.73 mo
377.699 335.648 li
377.699 345.73 mo
387.781 335.648 li
@
458.102 308.531 mo
448.02 298.449 li
448.02 308.531 mo
458.102 298.449 li
@
528.422 259.328 mo
518.34 249.25 li
518.34 259.328 mo
528.422 249.25 li
@
598.738 232.57 mo
588.66 222.488 li
588.66 232.57 mo
598.738 222.488 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 475.68 li
171.961 418.801 li
242.16 412.68 li
312.48 401.52 li
382.801 350.281 li
453.121 332.641 li
523.441 298.68 li
593.762 256.32 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
.0319219 .621851 .911223 .000427253 cmyk
@
106.5 480.609 mo
96.422 470.531 li
96.422 480.609 mo
106.5 470.531 li
@
176.82 423.73 mo
166.738 413.648 li
166.738 423.73 mo
176.82 413.648 li
@
247.141 417.609 mo
237.059 407.531 li
237.059 417.609 mo
247.141 407.531 li
@
317.461 406.57 mo
307.379 396.488 li
307.379 406.57 mo
317.461 396.488 li
@
387.781 355.211 mo
377.699 345.129 li
377.699 355.211 mo
387.781 345.129 li
@
458.102 337.57 mo
448.02 327.488 li
448.02 337.57 mo
458.102 327.488 li
@
528.422 303.73 mo
518.34 293.648 li
518.34 303.73 mo
528.422 293.648 li
@
598.738 261.371 mo
588.66 251.289 li
588.66 261.371 mo
598.738 251.289 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 474.719 li
171.961 419.039 li
242.16 441.602 li
312.48 409.441 li
382.801 384.961 li
453.121 351 li
523.441 331.922 li
593.762 304.32 li
.466651 0 .889799 0 cmyk
@
grestore
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
.619135 .109529 .981689 .00570687 cmyk
@
106.5 479.77 mo
96.422 469.691 li
96.422 479.77 mo
106.5 469.691 li
@
176.82 424.09 mo
166.738 414.012 li
166.738 424.09 mo
176.82 414.012 li
@
247.141 446.648 mo
237.059 436.57 li
237.059 446.648 mo
247.141 436.57 li
@
317.461 414.371 mo
307.379 404.289 li
307.379 414.371 mo
317.461 404.289 li
@
387.781 389.891 mo
377.699 379.809 li
377.699 389.891 mo
387.781 379.809 li
@
458.102 356.051 mo
448.02 345.969 li
448.02 356.051 mo
458.102 345.969 li
@
528.422 336.852 mo
518.34 326.77 li
518.34 336.852 mo
528.422 326.77 li
@
598.738 309.371 mo
588.66 299.289 li
588.66 309.371 mo
598.738 299.289 li
@
gsave
31.199 28.441 mo
594.48 28.441 li
594.48 511.921 li
31.199 511.921 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
31.32 511.199 mo
101.641 491.52 li
171.961 435.48 li
242.16 437.641 li
312.48 424.922 li
382.801 417.238 li
453.121 385.68 li
523.441 376.32 li
593.762 359.52 li
0 .990631 1 .000396735 cmyk
@
grestore
36.18 516.129 mo
26.102 506.051 li
26.102 516.129 mo
36.18 506.051 li
0 .990631 1 .000396735 cmyk
@
106.5 496.57 mo
96.422 486.488 li
96.422 496.57 mo
106.5 486.488 li
@
176.82 440.531 mo
166.738 430.449 li
166.738 440.531 mo
176.82 430.449 li
@
247.141 442.57 mo
237.059 432.488 li
237.059 442.57 mo
247.141 432.488 li
@
317.461 429.852 mo
307.379 419.77 li
307.379 429.852 mo
317.461 419.77 li
@
387.781 422.289 mo
377.699 412.211 li
377.699 422.289 mo
387.781 412.211 li
@
458.102 390.73 mo
448.02 380.648 li
448.02 390.73 mo
458.102 380.648 li
@
528.422 381.25 mo
518.34 371.172 li
518.34 381.25 mo
528.422 371.172 li
@
598.738 364.449 mo
588.66 354.371 li
588.66 364.449 mo
598.738 354.371 li
@
11.121 501.879 mo
18.215 501.879 li
18.215 518.969 li
11.121 518.969 li
cp
0 0 0 0 cmyk
ef
17.496 514.84 mo
17.492 514.93 17.484 515 17.473 515.059 cv
17.457 515.121 17.438 515.172 17.418 515.203 cv
17.395 515.242 17.371 515.266 17.34 515.281 cv
17.309 515.297 17.277 515.305 17.25 515.305 cv
12.613 515.305 li
12.578 515.305 12.551 515.297 12.523 515.281 cv
12.496 515.266 12.469 515.242 12.445 515.203 cv
12.418 515.172 12.398 515.121 12.387 515.059 cv
12.371 515 12.363 514.93 12.367 514.84 cv
12.363 514.762 12.371 514.687 12.387 514.625 cv
12.398 514.566 12.414 514.52 12.438 514.48 cv
12.453 514.445 12.48 514.414 12.512 514.391 cv
12.543 514.371 12.574 514.363 12.613 514.359 cv
14.465 514.359 li
14.465 507.613 li
12.75 508.633 li
12.66 508.684 12.59 508.711 12.543 508.719 cv
12.488 508.727 12.445 508.719 12.414 508.687 cv
12.379 508.66 12.359 508.609 12.348 508.539 cv
12.336 508.473 12.328 508.387 12.332 508.277 cv
12.328 508.203 12.332 508.137 12.344 508.078 cv
12.348 508.027 12.359 507.98 12.375 507.941 cv
12.387 507.906 12.406 507.875 12.43 507.848 cv
12.453 507.82 12.484 507.793 12.531 507.766 cv
14.574 506.453 li
14.59 506.441 14.609 506.43 14.641 506.422 cv
14.664 506.414 14.699 506.406 14.746 506.395 cv
14.785 506.387 14.836 506.379 14.891 506.375 cv
14.945 506.375 15.012 506.375 15.098 506.371 cv
15.203 506.375 15.297 506.379 15.371 506.387 cv
15.441 506.395 15.496 506.41 15.543 506.426 cv
15.582 506.445 15.609 506.465 15.625 506.488 cv
15.633 506.516 15.641 506.539 15.645 506.562 cv
15.645 514.359 li
17.25 514.359 li
17.285 514.363 17.32 514.371 17.352 514.391 cv
17.383 514.414 17.406 514.445 17.43 514.48 cv
17.445 514.52 17.461 514.566 17.477 514.625 cv
17.484 514.687 17.492 514.762 17.496 514.84 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 480.891 mo
18.215 480.891 li
18.215 497.981 li
11.121 497.981 li
cp
0 0 0 0 cmyk
ef
17.477 493.797 mo
17.473 493.883 17.469 493.957 17.457 494.02 cv
17.445 494.086 17.43 494.141 17.41 494.18 cv
17.387 494.227 17.359 494.258 17.328 494.273 cv
17.293 494.297 17.254 494.305 17.215 494.305 cv
12.313 494.305 li
12.25 494.305 12.191 494.297 12.145 494.281 cv
12.094 494.266 12.055 494.242 12.02 494.203 cv
11.984 494.172 11.957 494.117 11.945 494.047 cv
11.926 493.977 11.918 493.891 11.922 493.789 cv
11.918 493.699 11.922 493.621 11.93 493.551 cv
11.934 493.484 11.949 493.426 11.977 493.371 cv
12 493.32 12.031 493.266 12.066 493.211 cv
12.102 493.16 12.145 493.105 12.203 493.043 cv
13.977 491.219 li
14.387 490.801 14.715 490.426 14.965 490.09 cv
15.211 489.762 15.402 489.457 15.535 489.18 cv
15.668 488.906 15.754 488.656 15.801 488.43 cv
15.84 488.207 15.863 487.996 15.863 487.801 cv
15.863 487.605 15.828 487.422 15.762 487.242 cv
15.695 487.07 15.602 486.914 15.477 486.777 cv
15.352 486.648 15.195 486.543 15.008 486.461 cv
14.82 486.387 14.602 486.348 14.355 486.344 cv
14.066 486.348 13.809 486.387 13.582 486.461 cv
13.352 486.543 13.152 486.629 12.98 486.715 cv
12.809 486.809 12.664 486.891 12.547 486.969 cv
12.43 487.047 12.344 487.086 12.293 487.086 cv
12.258 487.086 12.227 487.078 12.203 487.059 cv
12.172 487.043 12.152 487.012 12.137 486.969 cv
12.121 486.93 12.105 486.875 12.098 486.805 cv
12.086 486.738 12.082 486.656 12.086 486.559 cv
12.082 486.492 12.086 486.434 12.094 486.383 cv
12.098 486.332 12.105 486.289 12.117 486.25 cv
12.125 486.215 12.141 486.18 12.16 486.148 cv
12.18 486.117 12.215 486.078 12.273 486.027 cv
12.324 485.98 12.418 485.914 12.555 485.832 cv
12.688 485.75 12.859 485.672 13.063 485.59 cv
13.266 485.512 13.488 485.441 13.734 485.387 cv
13.977 485.332 14.234 485.305 14.508 485.305 cv
14.934 485.305 15.309 485.367 15.633 485.488 cv
15.953 485.609 16.219 485.773 16.434 485.984 cv
16.645 486.195 16.805 486.441 16.91 486.715 cv
17.016 486.996 17.07 487.293 17.07 487.605 cv
17.07 487.895 17.043 488.176 16.992 488.453 cv
16.941 488.738 16.836 489.043 16.676 489.367 cv
16.512 489.695 16.277 490.059 15.973 490.457 cv
15.664 490.859 15.258 491.32 14.754 491.836 cv
13.348 493.305 li
17.207 493.305 li
17.238 493.309 17.273 493.32 17.313 493.336 cv
17.344 493.359 17.375 493.391 17.402 493.43 cv
17.426 493.473 17.445 493.523 17.457 493.582 cv
17.469 493.648 17.473 493.719 17.477 493.797 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 459.902 mo
18.215 459.902 li
18.215 476.992 li
11.121 476.992 li
cp
0 0 0 0 cmyk
ef
17.406 470.77 mo
17.402 471.18 17.332 471.547 17.191 471.871 cv
17.047 472.199 16.844 472.48 16.582 472.711 cv
16.316 472.945 15.988 473.121 15.602 473.246 cv
15.211 473.371 14.773 473.434 14.289 473.434 cv
13.984 473.434 13.707 473.406 13.453 473.359 cv
13.191 473.312 12.961 473.262 12.766 473.191 cv
12.563 473.129 12.398 473.059 12.266 472.988 cv
12.133 472.918 12.047 472.867 12.016 472.832 cv
11.977 472.805 11.953 472.773 11.938 472.738 cv
11.918 472.707 11.898 472.668 11.887 472.621 cv
11.871 472.578 11.863 472.523 11.855 472.453 cv
11.848 472.391 11.844 472.309 11.848 472.207 cv
11.844 472.047 11.859 471.934 11.895 471.867 cv
11.926 471.805 11.973 471.77 12.035 471.77 cv
12.078 471.77 12.16 471.809 12.285 471.879 cv
12.406 471.957 12.566 472.035 12.762 472.117 cv
12.953 472.203 13.18 472.281 13.445 472.352 cv
13.703 472.426 13.996 472.461 14.316 472.461 cv
14.625 472.461 14.895 472.422 15.133 472.344 cv
15.363 472.266 15.563 472.156 15.723 472.016 cv
15.879 471.875 15.996 471.707 16.078 471.512 cv
16.156 471.316 16.195 471.105 16.199 470.879 cv
16.195 470.629 16.145 470.402 16.047 470.199 cv
15.941 470 15.793 469.828 15.602 469.68 cv
15.402 469.535 15.164 469.422 14.879 469.344 cv
14.594 469.266 14.27 469.227 13.906 469.227 cv
13.035 469.227 li
12.992 469.227 12.957 469.219 12.922 469.203 cv
12.887 469.187 12.855 469.16 12.832 469.121 cv
12.805 469.086 12.785 469.039 12.77 468.98 cv
12.754 468.922 12.746 468.844 12.746 468.746 cv
12.746 468.66 12.75 468.59 12.766 468.531 cv
12.773 468.477 12.793 468.43 12.824 468.395 cv
12.848 468.359 12.879 468.336 12.91 468.316 cv
12.941 468.305 12.977 468.297 13.02 468.293 cv
13.793 468.293 li
14.094 468.297 14.363 468.258 14.605 468.176 cv
14.84 468.102 15.043 467.988 15.215 467.84 cv
15.379 467.695 15.508 467.52 15.598 467.316 cv
15.688 467.113 15.734 466.887 15.734 466.633 cv
15.734 466.453 15.703 466.277 15.645 466.109 cv
15.582 465.945 15.492 465.801 15.375 465.676 cv
15.254 465.551 15.102 465.453 14.922 465.383 cv
14.734 465.312 14.523 465.277 14.281 465.277 cv
14.016 465.277 13.77 465.32 13.551 465.398 cv
13.324 465.48 13.129 465.566 12.957 465.656 cv
12.781 465.75 12.637 465.836 12.523 465.914 cv
12.41 465.996 12.328 466.035 12.285 466.031 cv
12.25 466.035 12.223 466.027 12.199 466.016 cv
12.172 466.004 12.152 465.98 12.137 465.945 cv
12.121 465.914 12.109 465.867 12.102 465.801 cv
12.094 465.742 12.09 465.66 12.094 465.559 cv
12.09 465.492 12.09 465.434 12.098 465.379 cv
12.098 465.328 12.109 465.281 12.125 465.238 cv
12.141 465.203 12.156 465.168 12.176 465.133 cv
12.191 465.105 12.223 465.066 12.266 465.02 cv
12.309 464.977 12.395 464.914 12.531 464.832 cv
12.66 464.75 12.824 464.672 13.02 464.59 cv
13.211 464.512 13.434 464.441 13.691 464.387 cv
13.941 464.332 14.215 464.305 14.512 464.305 cv
14.918 464.305 15.281 464.359 15.594 464.461 cv
15.906 464.57 16.164 464.719 16.375 464.906 cv
16.578 465.102 16.734 465.332 16.84 465.598 cv
16.941 465.867 16.992 466.16 16.996 466.484 cv
16.992 466.766 16.957 467.027 16.887 467.262 cv
16.813 467.504 16.703 467.715 16.563 467.898 cv
16.418 468.086 16.246 468.242 16.043 468.371 cv
15.836 468.504 15.598 468.598 15.328 468.645 cv
15.328 468.656 li
15.633 468.691 15.914 468.766 16.168 468.887 cv
16.422 469.008 16.641 469.16 16.824 469.344 cv
17.004 469.527 17.145 469.742 17.25 469.984 cv
17.352 470.23 17.402 470.492 17.406 470.77 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 438.922 mo
18.215 438.922 li
18.215 456.012 li
11.121 456.012 li
cp
0 0 0 0 cmyk
ef
17.852 449.805 mo
17.848 449.957 17.824 450.078 17.781 450.164 cv
17.734 450.254 17.672 450.297 17.59 450.293 cv
16.59 450.293 li
16.59 452.156 li
16.59 452.195 16.578 452.227 16.563 452.25 cv
16.539 452.277 16.508 452.297 16.465 452.316 cv
16.414 452.332 16.352 452.344 16.281 452.355 cv
16.203 452.363 16.109 452.367 15.992 452.371 cv
15.875 452.367 15.777 452.363 15.707 452.355 cv
15.629 452.344 15.57 452.332 15.527 452.316 cv
15.48 452.297 15.449 452.277 15.434 452.25 cv
15.414 452.227 15.406 452.195 15.41 452.156 cv
15.41 450.293 li
11.781 450.293 li
11.723 450.297 11.68 450.289 11.645 450.273 cv
11.609 450.262 11.574 450.234 11.547 450.195 cv
11.516 450.16 11.496 450.109 11.484 450.039 cv
11.473 449.973 11.469 449.883 11.469 449.77 cv
11.469 449.687 11.469 449.609 11.477 449.539 cv
11.477 449.469 11.488 449.406 11.504 449.352 cv
11.516 449.297 11.531 449.242 11.559 449.187 cv
11.578 449.133 11.605 449.078 11.641 449.016 cv
14.801 443.629 li
14.82 443.594 14.855 443.562 14.902 443.535 cv
14.945 443.508 15 443.484 15.074 443.465 cv
15.141 443.449 15.227 443.437 15.332 443.426 cv
15.434 443.422 15.555 443.418 15.695 443.414 cv
15.844 443.418 15.98 443.422 16.098 443.434 cv
16.211 443.445 16.301 443.461 16.375 443.477 cv
16.441 443.496 16.496 443.52 16.535 443.551 cv
16.57 443.582 16.59 443.617 16.59 443.656 cv
16.59 449.32 li
17.59 449.32 li
17.664 449.324 17.727 449.363 17.777 449.441 cv
17.824 449.523 17.848 449.645 17.852 449.805 cv
cp
15.41 444.453 mo
15.398 444.453 li
12.547 449.32 li
15.41 449.32 li
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 417.93 mo
18.215 417.93 li
18.215 435.02 li
11.121 435.02 li
cp
0 0 0 0 cmyk
ef
17.434 428.477 mo
17.434 428.953 17.352 429.375 17.191 429.746 cv
17.031 430.117 16.805 430.43 16.516 430.684 cv
16.219 430.937 15.871 431.133 15.469 431.262 cv
15.063 431.395 14.613 431.457 14.121 431.457 cv
13.844 431.457 13.582 431.437 13.34 431.398 cv
13.09 431.359 12.871 431.312 12.684 431.258 cv
12.488 431.203 12.332 431.148 12.207 431.09 cv
12.082 431.039 12.004 430.996 11.973 430.961 cv
11.938 430.93 11.914 430.898 11.902 430.871 cv
11.887 430.844 11.871 430.812 11.863 430.77 cv
11.848 430.734 11.84 430.684 11.84 430.621 cv
11.832 430.562 11.832 430.492 11.832 430.41 cv
11.832 430.336 11.836 430.266 11.844 430.203 cv
11.852 430.141 11.863 430.09 11.883 430.051 cv
11.898 430.012 11.918 429.984 11.945 429.965 cv
11.969 429.949 12 429.941 12.031 429.937 cv
12.078 429.941 12.148 429.969 12.242 430.023 cv
12.336 430.082 12.465 430.145 12.629 430.211 cv
12.793 430.277 12.992 430.34 13.234 430.398 cv
13.469 430.457 13.754 430.484 14.09 430.484 cv
14.391 430.484 14.672 430.449 14.93 430.375 cv
15.184 430.305 15.406 430.191 15.594 430.035 cv
15.777 429.883 15.922 429.687 16.027 429.449 cv
16.133 429.215 16.184 428.926 16.188 428.586 cv
16.184 428.305 16.141 428.055 16.051 427.836 cv
15.961 427.617 15.824 427.437 15.641 427.293 cv
15.453 427.152 15.219 427.047 14.938 426.973 cv
14.652 426.902 14.313 426.863 13.926 426.863 cv
13.641 426.863 13.402 426.879 13.203 426.906 cv
13 426.937 12.813 426.953 12.641 426.949 cv
12.512 426.953 12.418 426.922 12.367 426.859 cv
12.309 426.801 12.281 426.687 12.285 426.516 cv
12.285 422.902 li
12.281 422.754 12.316 422.645 12.391 422.566 cv
12.457 422.496 12.559 422.457 12.695 422.457 cv
16.625 422.457 li
16.66 422.457 16.695 422.469 16.73 422.488 cv
16.762 422.512 16.789 422.543 16.816 422.582 cv
16.836 422.625 16.852 422.676 16.867 422.738 cv
16.875 422.805 16.883 422.883 16.887 422.965 cv
16.883 423.133 16.859 423.258 16.82 423.348 cv
16.773 423.441 16.715 423.488 16.637 423.484 cv
13.465 423.484 li
13.465 425.973 li
13.617 425.953 13.773 425.941 13.938 425.934 cv
14.094 425.93 14.281 425.926 14.496 425.926 cv
14.98 425.926 15.406 425.988 15.773 426.109 cv
16.137 426.23 16.441 426.402 16.691 426.621 cv
16.934 426.848 17.121 427.113 17.246 427.426 cv
17.371 427.742 17.434 428.094 17.434 428.477 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 396.941 mo
18.215 396.941 li
18.215 414.031 li
11.121 414.031 li
cp
0 0 0 0 cmyk
ef
17.703 407.457 mo
17.703 407.848 17.641 408.227 17.523 408.586 cv
17.398 408.953 17.215 409.27 16.973 409.543 cv
16.723 409.82 16.41 410.043 16.035 410.207 cv
15.652 410.375 15.207 410.457 14.691 410.457 cv
14.32 410.457 13.992 410.414 13.711 410.32 cv
13.426 410.234 13.18 410.102 12.969 409.93 cv
12.758 409.762 12.582 409.555 12.445 409.309 cv
12.305 409.062 12.191 408.781 12.109 408.465 cv
12.023 408.152 11.965 407.809 11.93 407.43 cv
11.891 407.059 11.871 406.656 11.875 406.223 cv
11.871 405.844 11.891 405.461 11.934 405.07 cv
11.973 404.687 12.047 404.312 12.152 403.945 cv
12.258 403.586 12.402 403.246 12.582 402.93 cv
12.762 402.613 12.988 402.336 13.262 402.102 cv
13.535 401.867 13.859 401.68 14.238 401.539 cv
14.617 401.402 15.059 401.336 15.563 401.332 cv
15.73 401.336 15.902 401.344 16.074 401.363 cv
16.246 401.387 16.406 401.418 16.555 401.449 cv
16.703 401.488 16.824 401.523 16.926 401.562 cv
17.023 401.602 17.09 401.637 17.125 401.66 cv
17.152 401.687 17.176 401.715 17.195 401.742 cv
17.211 401.773 17.227 401.805 17.234 401.84 cv
17.242 401.875 17.246 401.914 17.254 401.957 cv
17.254 402 17.258 402.055 17.262 402.117 cv
17.258 402.203 17.258 402.273 17.258 402.328 cv
17.254 402.391 17.242 402.437 17.23 402.473 cv
17.211 402.512 17.191 402.539 17.168 402.555 cv
17.141 402.574 17.109 402.582 17.07 402.582 cv
17.02 402.582 16.949 402.566 16.863 402.535 cv
16.773 402.504 16.668 402.469 16.547 402.426 cv
16.422 402.391 16.273 402.355 16.098 402.32 cv
15.922 402.293 15.719 402.277 15.488 402.273 cv
15.059 402.277 14.691 402.363 14.387 402.535 cv
14.082 402.707 13.832 402.941 13.637 403.234 cv
13.441 403.527 13.297 403.867 13.207 404.25 cv
13.109 404.641 13.055 405.043 13.047 405.461 cv
13.164 405.395 13.301 405.328 13.449 405.258 cv
13.598 405.191 13.758 405.129 13.934 405.07 cv
14.109 405.02 14.297 404.973 14.492 404.937 cv
14.688 404.906 14.898 404.891 15.125 404.887 cv
15.602 404.891 16.004 404.957 16.336 405.082 cv
16.664 405.215 16.93 405.395 17.137 405.625 cv
17.336 405.855 17.48 406.125 17.57 406.437 cv
17.656 406.75 17.703 407.09 17.703 407.457 cv
cp
16.508 407.566 mo
16.508 407.305 16.48 407.062 16.43 406.844 cv
16.375 406.629 16.285 406.445 16.164 406.289 cv
16.039 406.141 15.875 406.023 15.672 405.941 cv
15.461 405.859 15.207 405.816 14.91 405.816 cv
14.738 405.816 14.57 405.832 14.402 405.863 cv
14.23 405.895 14.066 405.937 13.91 405.984 cv
13.75 406.039 13.602 406.102 13.461 406.172 cv
13.316 406.246 13.184 406.32 13.066 406.398 cv
13.063 406.992 13.102 407.488 13.18 407.883 cv
13.254 408.281 13.363 408.598 13.508 408.836 cv
13.652 409.078 13.832 409.25 14.047 409.352 cv
14.262 409.457 14.512 409.508 14.801 409.504 cv
15.09 409.508 15.344 409.453 15.559 409.34 cv
15.773 409.234 15.949 409.086 16.094 408.898 cv
16.234 408.715 16.34 408.508 16.406 408.277 cv
16.473 408.047 16.508 407.812 16.508 407.566 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 375.949 mo
18.215 375.949 li
18.215 393.039 li
11.121 393.039 li
cp
0 0 0 0 cmyk
ef
17.605 380.988 mo
17.602 381.074 17.598 381.148 17.594 381.211 cv
17.586 381.281 17.578 381.344 17.566 381.402 cv
17.555 381.469 17.539 381.527 17.52 381.582 cv
17.496 381.641 17.473 381.703 17.449 381.762 cv
14.254 389.125 li
14.227 389.184 14.199 389.227 14.168 389.258 cv
14.133 389.293 14.09 389.32 14.035 389.34 cv
13.98 389.359 13.91 389.371 13.832 389.383 cv
13.746 389.387 13.648 389.391 13.531 389.395 cv
13.375 389.391 13.254 389.383 13.168 389.371 cv
13.082 389.355 13.02 389.34 12.98 389.309 cv
12.941 389.281 12.922 389.242 12.93 389.199 cv
12.93 389.156 12.945 389.105 12.977 389.043 cv
16.336 381.516 li
12.078 381.516 li
11.992 381.52 11.926 381.473 11.883 381.379 cv
11.84 381.289 11.82 381.16 11.82 380.996 cv
11.82 380.91 11.824 380.836 11.836 380.77 cv
11.848 380.707 11.863 380.652 11.887 380.609 cv
11.906 380.566 11.934 380.535 11.969 380.512 cv
12 380.492 12.039 380.48 12.078 380.48 cv
17.25 380.48 li
17.309 380.48 17.363 380.488 17.414 380.504 cv
17.461 380.52 17.496 380.547 17.523 380.586 cv
17.547 380.625 17.566 380.68 17.582 380.742 cv
17.594 380.809 17.602 380.891 17.605 380.988 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 354.961 mo
18.215 354.961 li
18.215 372.051 li
11.121 372.051 li
cp
0 0 0 0 cmyk
ef
17.68 366.074 mo
17.68 366.461 17.609 366.805 17.473 367.102 cv
17.336 367.406 17.141 367.656 16.883 367.859 cv
16.625 368.066 16.305 368.223 15.926 368.324 cv
15.543 368.43 15.109 368.48 14.625 368.48 cv
14.164 368.48 13.754 368.434 13.395 368.34 cv
13.031 368.246 12.727 368.105 12.477 367.914 cv
12.227 367.73 12.035 367.5 11.902 367.223 cv
11.77 366.949 11.703 366.637 11.703 366.281 cv
11.703 366.008 11.746 365.75 11.84 365.516 cv
11.926 365.281 12.059 365.066 12.234 364.871 cv
12.402 364.676 12.613 364.492 12.867 364.316 cv
13.117 364.148 13.402 363.984 13.719 363.828 cv
13.445 363.687 13.203 363.539 12.992 363.379 cv
12.781 363.223 12.602 363.051 12.457 362.863 cv
12.309 362.68 12.199 362.484 12.125 362.273 cv
12.047 362.066 12.008 361.836 12.012 361.586 cv
12.008 361.277 12.063 360.984 12.18 360.711 cv
12.289 360.441 12.461 360.207 12.688 360.004 cv
12.914 359.805 13.199 359.645 13.551 359.527 cv
13.895 359.41 14.305 359.352 14.773 359.352 cv
15.219 359.352 15.605 359.406 15.934 359.512 cv
16.262 359.621 16.531 359.766 16.742 359.949 cv
16.953 360.137 17.109 360.355 17.215 360.605 cv
17.313 360.855 17.363 361.125 17.367 361.414 cv
17.363 361.648 17.324 361.875 17.254 362.086 cv
17.176 362.305 17.066 362.508 16.918 362.695 cv
16.77 362.891 16.59 363.07 16.379 363.234 cv
16.168 363.406 15.926 363.562 15.652 363.703 cv
15.973 363.867 16.258 364.031 16.516 364.199 cv
16.766 364.367 16.98 364.547 17.156 364.742 cv
17.324 364.937 17.453 365.145 17.547 365.359 cv
17.633 365.578 17.68 365.816 17.68 366.074 cv
cp
16.199 361.523 mo
16.195 361.336 16.164 361.16 16.098 361.004 cv
16.031 360.848 15.934 360.715 15.809 360.605 cv
15.68 360.496 15.52 360.414 15.332 360.355 cv
15.137 360.301 14.922 360.273 14.684 360.27 cv
14.188 360.273 13.813 360.383 13.563 360.605 cv
13.305 360.832 13.18 361.141 13.184 361.523 cv
13.18 361.703 13.211 361.867 13.273 362.02 cv
13.336 362.176 13.43 362.32 13.563 362.457 cv
13.688 362.594 13.852 362.727 14.055 362.855 cv
14.25 362.988 14.488 363.125 14.766 363.266 cv
15.227 363.031 15.582 362.77 15.828 362.477 cv
16.074 362.191 16.195 361.875 16.199 361.523 cv
cp
16.488 366.199 mo
16.484 365.992 16.445 365.801 16.371 365.629 cv
16.289 365.461 16.172 365.301 16.016 365.148 cv
15.859 365 15.66 364.855 15.426 364.715 cv
15.188 364.578 14.918 364.434 14.609 364.281 cv
14.32 364.426 14.066 364.566 13.852 364.707 cv
13.633 364.848 13.453 364.996 13.316 365.145 cv
13.176 365.301 13.07 365.457 13 365.621 cv
12.926 365.789 12.891 365.973 12.895 366.172 cv
12.891 366.617 13.043 366.961 13.352 367.199 cv
13.652 367.445 14.105 367.566 14.711 367.562 cv
15.293 367.566 15.738 367.445 16.039 367.195 cv
16.336 366.953 16.484 366.621 16.488 366.199 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
11.121 333.98 mo
18.215 333.98 li
18.215 351.07 li
11.121 351.07 li
cp
0 0 0 0 cmyk
ef
17.543 342.566 mo
17.539 342.953 17.516 343.34 17.473 343.73 cv
17.426 344.125 17.348 344.504 17.242 344.867 cv
17.129 345.23 16.984 345.57 16.801 345.887 cv
16.613 346.207 16.379 346.488 16.102 346.723 cv
15.816 346.965 15.48 347.148 15.098 347.281 cv
14.707 347.414 14.262 347.48 13.754 347.48 cv
13.555 347.48 13.363 347.465 13.18 347.441 cv
12.992 347.414 12.824 347.387 12.68 347.352 cv
12.527 347.316 12.402 347.277 12.305 347.234 cv
12.203 347.195 12.129 347.156 12.086 347.113 cv
12.039 347.074 12.008 347.02 11.988 346.945 cv
11.965 346.875 11.953 346.777 11.957 346.66 cv
11.953 346.559 11.957 346.48 11.965 346.422 cv
11.969 346.363 11.98 346.316 11.996 346.285 cv
12.012 346.254 12.031 346.234 12.055 346.219 cv
12.078 346.211 12.109 346.203 12.148 346.199 cv
12.195 346.203 12.266 346.219 12.359 346.25 cv
12.449 346.285 12.563 346.324 12.707 346.363 cv
12.844 346.406 13.008 346.445 13.195 346.477 cv
13.379 346.516 13.59 346.531 13.828 346.527 cv
14.27 346.531 14.648 346.445 14.969 346.273 cv
15.281 346.102 15.543 345.875 15.746 345.586 cv
15.949 345.301 16.098 344.965 16.199 344.582 cv
16.297 344.203 16.352 343.805 16.363 343.383 cv
16.117 343.527 15.828 343.652 15.492 343.758 cv
15.152 343.871 14.766 343.926 14.328 343.922 cv
13.836 343.926 13.422 343.859 13.086 343.723 cv
12.75 343.59 12.477 343.406 12.273 343.172 cv
12.066 342.941 11.922 342.664 11.836 342.34 cv
11.746 342.023 11.703 341.672 11.703 341.293 cv
11.703 340.902 11.758 340.531 11.875 340.172 cv
11.984 339.82 12.164 339.508 12.41 339.238 cv
12.648 338.969 12.957 338.754 13.336 338.594 cv
13.707 338.434 14.156 338.352 14.68 338.352 cv
15.047 338.352 15.371 338.398 15.66 338.492 cv
15.941 338.586 16.191 338.723 16.406 338.898 cv
16.613 339.074 16.793 339.285 16.941 339.535 cv
17.086 339.785 17.203 340.066 17.293 340.379 cv
17.379 340.695 17.441 341.039 17.484 341.406 cv
17.52 341.777 17.539 342.164 17.543 342.566 cv
cp
16.344 342.437 mo
16.344 341.855 16.305 341.363 16.227 340.961 cv
16.148 340.562 16.031 340.238 15.883 339.988 cv
15.73 339.742 15.547 339.562 15.328 339.453 cv
15.105 339.344 14.852 339.289 14.57 339.289 cv
14.266 339.289 14.012 339.344 13.805 339.453 cv
13.594 339.562 13.422 339.707 13.289 339.883 cv
13.152 340.066 13.051 340.27 12.988 340.496 cv
12.922 340.727 12.891 340.965 12.895 341.203 cv
12.891 341.477 12.922 341.723 12.98 341.941 cv
13.035 342.168 13.125 342.355 13.258 342.512 cv
13.383 342.668 13.551 342.789 13.758 342.875 cv
13.961 342.961 14.215 343.004 14.52 343 cv
14.859 343.004 15.191 342.953 15.516 342.848 cv
15.832 342.746 16.109 342.609 16.344 342.437 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
4.031 312.988 mo
18.219 312.988 li
18.219 330.078 li
4.031 330.078 li
cp
0 0 0 0 cmyk
ef
10.414 325.914 mo
10.41 326.004 10.402 326.074 10.391 326.133 cv
10.375 326.195 10.355 326.246 10.336 326.277 cv
10.313 326.316 10.289 326.34 10.258 326.355 cv
10.227 326.371 10.195 326.379 10.168 326.379 cv
5.531 326.379 li
5.496 326.379 5.469 326.371 5.441 326.355 cv
5.414 326.34 5.387 326.316 5.363 326.277 cv
5.336 326.246 5.316 326.195 5.305 326.133 cv
5.289 326.074 5.281 326.004 5.285 325.914 cv
5.281 325.836 5.289 325.762 5.305 325.699 cv
5.316 325.641 5.332 325.594 5.355 325.555 cv
5.371 325.52 5.398 325.488 5.43 325.465 cv
5.461 325.445 5.492 325.437 5.531 325.434 cv
7.383 325.434 li
7.383 318.687 li
5.668 319.707 li
5.578 319.758 5.508 319.785 5.461 319.793 cv
5.406 319.801 5.363 319.793 5.332 319.762 cv
5.297 319.734 5.277 319.684 5.266 319.613 cv
5.254 319.547 5.246 319.461 5.25 319.352 cv
5.246 319.277 5.25 319.211 5.262 319.152 cv
5.266 319.102 5.277 319.055 5.293 319.016 cv
5.305 318.98 5.324 318.949 5.348 318.922 cv
5.371 318.895 5.402 318.867 5.449 318.84 cv
7.492 317.527 li
7.508 317.516 7.527 317.504 7.559 317.496 cv
7.582 317.488 7.617 317.48 7.664 317.469 cv
7.703 317.461 7.754 317.453 7.809 317.449 cv
7.863 317.449 7.93 317.449 8.016 317.445 cv
8.121 317.449 8.215 317.453 8.289 317.461 cv
8.359 317.469 8.414 317.484 8.461 317.5 cv
8.5 317.52 8.527 317.539 8.543 317.562 cv
8.551 317.59 8.559 317.613 8.563 317.637 cv
8.563 325.434 li
10.168 325.434 li
10.203 325.437 10.238 325.445 10.27 325.465 cv
10.301 325.488 10.324 325.52 10.348 325.555 cv
10.363 325.594 10.379 325.641 10.395 325.699 cv
10.402 325.762 10.41 325.836 10.414 325.914 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.77 321.922 mo
17.766 322.605 17.715 323.227 17.609 323.789 cv
17.5 324.352 17.32 324.836 17.074 325.238 cv
16.82 325.645 16.492 325.957 16.094 326.176 cv
15.688 326.398 15.195 326.508 14.609 326.508 cv
14.051 326.508 13.578 326.41 13.199 326.211 cv
12.816 326.016 12.512 325.723 12.277 325.336 cv
12.043 324.949 11.875 324.477 11.781 323.91 cv
11.68 323.348 11.633 322.699 11.633 321.965 cv
11.633 321.293 11.688 320.672 11.797 320.105 cv
11.906 319.543 12.082 319.059 12.332 318.652 cv
12.574 318.25 12.898 317.937 13.305 317.711 cv
13.703 317.492 14.199 317.379 14.789 317.379 cv
15.348 317.379 15.82 317.48 16.203 317.676 cv
16.586 317.879 16.891 318.172 17.125 318.555 cv
17.355 318.945 17.523 319.418 17.621 319.98 cv
17.719 320.543 17.766 321.191 17.77 321.922 cv
cp
16.563 322.004 mo
16.559 321.562 16.543 321.164 16.516 320.812 cv
16.48 320.461 16.434 320.152 16.375 319.883 cv
16.309 319.613 16.23 319.383 16.133 319.187 cv
16.035 318.996 15.918 318.836 15.781 318.707 cv
15.641 318.582 15.48 318.488 15.309 318.43 cv
15.129 318.375 14.934 318.348 14.719 318.344 cv
14.328 318.348 14.012 318.437 13.773 318.621 cv
13.527 318.805 13.336 319.059 13.199 319.375 cv
13.059 319.695 12.965 320.066 12.914 320.496 cv
12.863 320.926 12.84 321.391 12.84 321.883 cv
12.84 322.547 12.871 323.109 12.941 323.57 cv
13.008 324.039 13.117 324.418 13.27 324.707 cv
13.414 325.004 13.605 325.215 13.836 325.344 cv
14.066 325.48 14.348 325.547 14.68 325.543 cv
14.934 325.547 15.156 325.508 15.352 325.422 cv
15.543 325.344 15.711 325.223 15.852 325.066 cv
15.992 324.914 16.105 324.73 16.199 324.516 cv
16.285 324.301 16.359 324.062 16.418 323.801 cv
16.469 323.543 16.508 323.262 16.531 322.957 cv
16.551 322.652 16.559 322.336 16.563 322.004 cv
cp
f
4.031 292 mo
18.219 292 li
18.219 309.09 li
4.031 309.09 li
cp
0 0 0 0 cmyk
ef
10.414 304.914 mo
10.41 305.004 10.402 305.074 10.391 305.133 cv
10.375 305.195 10.355 305.246 10.336 305.277 cv
10.313 305.316 10.289 305.34 10.258 305.355 cv
10.227 305.371 10.195 305.379 10.168 305.379 cv
5.531 305.379 li
5.496 305.379 5.469 305.371 5.441 305.355 cv
5.414 305.34 5.387 305.316 5.363 305.277 cv
5.336 305.246 5.316 305.195 5.305 305.133 cv
5.289 305.074 5.281 305.004 5.285 304.914 cv
5.281 304.836 5.289 304.762 5.305 304.699 cv
5.316 304.641 5.332 304.594 5.355 304.555 cv
5.371 304.52 5.398 304.488 5.43 304.465 cv
5.461 304.445 5.492 304.437 5.531 304.434 cv
7.383 304.434 li
7.383 297.687 li
5.668 298.707 li
5.578 298.758 5.508 298.785 5.461 298.793 cv
5.406 298.801 5.363 298.793 5.332 298.762 cv
5.297 298.734 5.277 298.684 5.266 298.613 cv
5.254 298.547 5.246 298.461 5.25 298.352 cv
5.246 298.277 5.25 298.211 5.262 298.152 cv
5.266 298.102 5.277 298.055 5.293 298.016 cv
5.305 297.98 5.324 297.949 5.348 297.922 cv
5.371 297.895 5.402 297.867 5.449 297.84 cv
7.492 296.527 li
7.508 296.516 7.527 296.504 7.559 296.496 cv
7.582 296.488 7.617 296.48 7.664 296.469 cv
7.703 296.461 7.754 296.453 7.809 296.449 cv
7.863 296.449 7.93 296.449 8.016 296.445 cv
8.121 296.449 8.215 296.453 8.289 296.461 cv
8.359 296.469 8.414 296.484 8.461 296.5 cv
8.5 296.52 8.527 296.539 8.543 296.562 cv
8.551 296.59 8.559 296.613 8.563 296.637 cv
8.563 304.434 li
10.168 304.434 li
10.203 304.437 10.238 304.445 10.27 304.465 cv
10.301 304.488 10.324 304.52 10.348 304.555 cv
10.363 304.594 10.379 304.641 10.395 304.699 cv
10.402 304.762 10.41 304.836 10.414 304.914 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.496 304.914 mo
17.492 305.004 17.484 305.074 17.473 305.133 cv
17.457 305.195 17.438 305.246 17.418 305.277 cv
17.395 305.316 17.371 305.34 17.34 305.355 cv
17.309 305.371 17.277 305.379 17.25 305.379 cv
12.613 305.379 li
12.578 305.379 12.551 305.371 12.523 305.355 cv
12.496 305.34 12.469 305.316 12.445 305.277 cv
12.418 305.246 12.398 305.195 12.387 305.133 cv
12.371 305.074 12.363 305.004 12.367 304.914 cv
12.363 304.836 12.371 304.762 12.387 304.699 cv
12.398 304.641 12.414 304.594 12.438 304.555 cv
12.453 304.52 12.48 304.488 12.512 304.465 cv
12.543 304.445 12.574 304.437 12.613 304.434 cv
14.465 304.434 li
14.465 297.687 li
12.75 298.707 li
12.66 298.758 12.59 298.785 12.543 298.793 cv
12.488 298.801 12.445 298.793 12.414 298.762 cv
12.379 298.734 12.359 298.684 12.348 298.613 cv
12.336 298.547 12.328 298.461 12.332 298.352 cv
12.328 298.277 12.332 298.211 12.344 298.152 cv
12.348 298.102 12.359 298.055 12.375 298.016 cv
12.387 297.98 12.406 297.949 12.43 297.922 cv
12.453 297.895 12.484 297.867 12.531 297.84 cv
14.574 296.527 li
14.59 296.516 14.609 296.504 14.641 296.496 cv
14.664 296.488 14.699 296.48 14.746 296.469 cv
14.785 296.461 14.836 296.453 14.891 296.449 cv
14.945 296.449 15.012 296.449 15.098 296.445 cv
15.203 296.449 15.297 296.453 15.371 296.461 cv
15.441 296.469 15.496 296.484 15.543 296.5 cv
15.582 296.52 15.609 296.539 15.625 296.562 cv
15.633 296.59 15.641 296.613 15.645 296.637 cv
15.645 304.434 li
17.25 304.434 li
17.285 304.437 17.32 304.445 17.352 304.465 cv
17.383 304.488 17.406 304.52 17.43 304.555 cv
17.445 304.594 17.461 304.641 17.477 304.699 cv
17.484 304.762 17.492 304.836 17.496 304.914 cv
cp
f
4.031 271.012 mo
18.219 271.012 li
18.219 288.102 li
4.031 288.102 li
cp
0 0 0 0 cmyk
ef
10.414 283.914 mo
10.41 284.004 10.402 284.074 10.391 284.133 cv
10.375 284.195 10.355 284.246 10.336 284.277 cv
10.313 284.316 10.289 284.34 10.258 284.355 cv
10.227 284.371 10.195 284.379 10.168 284.379 cv
5.531 284.379 li
5.496 284.379 5.469 284.371 5.441 284.355 cv
5.414 284.34 5.387 284.316 5.363 284.277 cv
5.336 284.246 5.316 284.195 5.305 284.133 cv
5.289 284.074 5.281 284.004 5.285 283.914 cv
5.281 283.836 5.289 283.762 5.305 283.699 cv
5.316 283.641 5.332 283.594 5.355 283.555 cv
5.371 283.52 5.398 283.488 5.43 283.465 cv
5.461 283.445 5.492 283.437 5.531 283.434 cv
7.383 283.434 li
7.383 276.687 li
5.668 277.707 li
5.578 277.758 5.508 277.785 5.461 277.793 cv
5.406 277.801 5.363 277.793 5.332 277.762 cv
5.297 277.734 5.277 277.684 5.266 277.613 cv
5.254 277.547 5.246 277.461 5.25 277.352 cv
5.246 277.277 5.25 277.211 5.262 277.152 cv
5.266 277.102 5.277 277.055 5.293 277.016 cv
5.305 276.98 5.324 276.949 5.348 276.922 cv
5.371 276.895 5.402 276.867 5.449 276.84 cv
7.492 275.527 li
7.508 275.516 7.527 275.504 7.559 275.496 cv
7.582 275.488 7.617 275.48 7.664 275.469 cv
7.703 275.461 7.754 275.453 7.809 275.449 cv
7.863 275.449 7.93 275.449 8.016 275.445 cv
8.121 275.449 8.215 275.453 8.289 275.461 cv
8.359 275.469 8.414 275.484 8.461 275.5 cv
8.5 275.52 8.527 275.539 8.543 275.562 cv
8.551 275.59 8.559 275.613 8.563 275.637 cv
8.563 283.434 li
10.168 283.434 li
10.203 283.437 10.238 283.445 10.27 283.465 cv
10.301 283.488 10.324 283.52 10.348 283.555 cv
10.363 283.594 10.379 283.641 10.395 283.699 cv
10.402 283.762 10.41 283.836 10.414 283.914 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.477 283.871 mo
17.473 283.957 17.469 284.031 17.457 284.094 cv
17.445 284.16 17.43 284.215 17.41 284.254 cv
17.387 284.301 17.359 284.332 17.328 284.348 cv
17.293 284.371 17.254 284.379 17.215 284.379 cv
12.313 284.379 li
12.25 284.379 12.191 284.371 12.145 284.355 cv
12.094 284.34 12.055 284.316 12.02 284.277 cv
11.984 284.246 11.957 284.191 11.945 284.121 cv
11.926 284.051 11.918 283.965 11.922 283.863 cv
11.918 283.773 11.922 283.695 11.93 283.625 cv
11.934 283.559 11.949 283.5 11.977 283.445 cv
12 283.395 12.031 283.34 12.066 283.285 cv
12.102 283.234 12.145 283.18 12.203 283.117 cv
13.977 281.293 li
14.387 280.875 14.715 280.5 14.965 280.164 cv
15.211 279.836 15.402 279.531 15.535 279.254 cv
15.668 278.98 15.754 278.73 15.801 278.504 cv
15.84 278.281 15.863 278.07 15.863 277.875 cv
15.863 277.68 15.828 277.496 15.762 277.316 cv
15.695 277.145 15.602 276.988 15.477 276.852 cv
15.352 276.723 15.195 276.617 15.008 276.535 cv
14.82 276.461 14.602 276.422 14.355 276.418 cv
14.066 276.422 13.809 276.461 13.582 276.535 cv
13.352 276.617 13.152 276.703 12.98 276.789 cv
12.809 276.883 12.664 276.965 12.547 277.043 cv
12.43 277.121 12.344 277.16 12.293 277.16 cv
12.258 277.16 12.227 277.152 12.203 277.133 cv
12.172 277.117 12.152 277.086 12.137 277.043 cv
12.121 277.004 12.105 276.949 12.098 276.879 cv
12.086 276.812 12.082 276.73 12.086 276.633 cv
12.082 276.566 12.086 276.508 12.094 276.457 cv
12.098 276.406 12.105 276.363 12.117 276.324 cv
12.125 276.289 12.141 276.254 12.16 276.223 cv
12.18 276.191 12.215 276.152 12.273 276.102 cv
12.324 276.055 12.418 275.988 12.555 275.906 cv
12.688 275.824 12.859 275.746 13.063 275.664 cv
13.266 275.586 13.488 275.516 13.734 275.461 cv
13.977 275.406 14.234 275.379 14.508 275.379 cv
14.934 275.379 15.309 275.441 15.633 275.562 cv
15.953 275.684 16.219 275.848 16.434 276.059 cv
16.645 276.27 16.805 276.516 16.91 276.789 cv
17.016 277.07 17.07 277.367 17.07 277.68 cv
17.07 277.969 17.043 278.25 16.992 278.527 cv
16.941 278.812 16.836 279.117 16.676 279.441 cv
16.512 279.77 16.277 280.133 15.973 280.531 cv
15.664 280.934 15.258 281.395 14.754 281.91 cv
13.348 283.379 li
17.207 283.379 li
17.238 283.383 17.273 283.395 17.313 283.41 cv
17.344 283.434 17.375 283.465 17.402 283.504 cv
17.426 283.547 17.445 283.598 17.457 283.656 cv
17.469 283.723 17.473 283.793 17.477 283.871 cv
cp
f
4.031 250.02 mo
18.219 250.02 li
18.219 267.11 li
4.031 267.11 li
cp
0 0 0 0 cmyk
ef
10.414 262.934 mo
10.41 263.023 10.402 263.094 10.391 263.152 cv
10.375 263.215 10.355 263.266 10.336 263.297 cv
10.313 263.336 10.289 263.359 10.258 263.375 cv
10.227 263.391 10.195 263.398 10.168 263.398 cv
5.531 263.398 li
5.496 263.398 5.469 263.391 5.441 263.375 cv
5.414 263.359 5.387 263.336 5.363 263.297 cv
5.336 263.266 5.316 263.215 5.305 263.152 cv
5.289 263.094 5.281 263.023 5.285 262.934 cv
5.281 262.855 5.289 262.781 5.305 262.719 cv
5.316 262.66 5.332 262.613 5.355 262.574 cv
5.371 262.539 5.398 262.508 5.43 262.484 cv
5.461 262.465 5.492 262.457 5.531 262.453 cv
7.383 262.453 li
7.383 255.707 li
5.668 256.727 li
5.578 256.777 5.508 256.805 5.461 256.812 cv
5.406 256.82 5.363 256.812 5.332 256.781 cv
5.297 256.754 5.277 256.703 5.266 256.633 cv
5.254 256.566 5.246 256.48 5.25 256.371 cv
5.246 256.297 5.25 256.23 5.262 256.172 cv
5.266 256.121 5.277 256.074 5.293 256.035 cv
5.305 256 5.324 255.969 5.348 255.941 cv
5.371 255.914 5.402 255.887 5.449 255.859 cv
7.492 254.547 li
7.508 254.535 7.527 254.523 7.559 254.516 cv
7.582 254.508 7.617 254.5 7.664 254.488 cv
7.703 254.48 7.754 254.473 7.809 254.469 cv
7.863 254.469 7.93 254.469 8.016 254.465 cv
8.121 254.469 8.215 254.473 8.289 254.48 cv
8.359 254.488 8.414 254.504 8.461 254.52 cv
8.5 254.539 8.527 254.559 8.543 254.582 cv
8.551 254.609 8.559 254.633 8.563 254.656 cv
8.563 262.453 li
10.168 262.453 li
10.203 262.457 10.238 262.465 10.27 262.484 cv
10.301 262.508 10.324 262.539 10.348 262.574 cv
10.363 262.613 10.379 262.66 10.395 262.719 cv
10.402 262.781 10.41 262.855 10.414 262.934 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.406 260.863 mo
17.402 261.273 17.332 261.641 17.191 261.965 cv
17.047 262.293 16.844 262.574 16.582 262.805 cv
16.316 263.039 15.988 263.215 15.602 263.34 cv
15.211 263.465 14.773 263.527 14.289 263.527 cv
13.984 263.527 13.707 263.5 13.453 263.453 cv
13.191 263.406 12.961 263.355 12.766 263.285 cv
12.563 263.223 12.398 263.152 12.266 263.082 cv
12.133 263.012 12.047 262.961 12.016 262.926 cv
11.977 262.898 11.953 262.867 11.938 262.832 cv
11.918 262.801 11.898 262.762 11.887 262.715 cv
11.871 262.672 11.863 262.617 11.855 262.547 cv
11.848 262.484 11.844 262.402 11.848 262.301 cv
11.844 262.141 11.859 262.027 11.895 261.961 cv
11.926 261.898 11.973 261.863 12.035 261.863 cv
12.078 261.863 12.16 261.902 12.285 261.973 cv
12.406 262.051 12.566 262.129 12.762 262.211 cv
12.953 262.297 13.18 262.375 13.445 262.445 cv
13.703 262.52 13.996 262.555 14.316 262.555 cv
14.625 262.555 14.895 262.516 15.133 262.437 cv
15.363 262.359 15.563 262.25 15.723 262.109 cv
15.879 261.969 15.996 261.801 16.078 261.605 cv
16.156 261.41 16.195 261.199 16.199 260.973 cv
16.195 260.723 16.145 260.496 16.047 260.293 cv
15.941 260.094 15.793 259.922 15.602 259.773 cv
15.402 259.629 15.164 259.516 14.879 259.437 cv
14.594 259.359 14.27 259.32 13.906 259.32 cv
13.035 259.32 li
12.992 259.32 12.957 259.312 12.922 259.297 cv
12.887 259.281 12.855 259.254 12.832 259.215 cv
12.805 259.18 12.785 259.133 12.77 259.074 cv
12.754 259.016 12.746 258.937 12.746 258.84 cv
12.746 258.754 12.75 258.684 12.766 258.625 cv
12.773 258.57 12.793 258.523 12.824 258.488 cv
12.848 258.453 12.879 258.43 12.91 258.41 cv
12.941 258.398 12.977 258.391 13.02 258.387 cv
13.793 258.387 li
14.094 258.391 14.363 258.352 14.605 258.27 cv
14.84 258.195 15.043 258.082 15.215 257.934 cv
15.379 257.789 15.508 257.613 15.598 257.41 cv
15.688 257.207 15.734 256.98 15.734 256.727 cv
15.734 256.547 15.703 256.371 15.645 256.203 cv
15.582 256.039 15.492 255.895 15.375 255.77 cv
15.254 255.645 15.102 255.547 14.922 255.477 cv
14.734 255.406 14.523 255.371 14.281 255.371 cv
14.016 255.371 13.77 255.414 13.551 255.492 cv
13.324 255.574 13.129 255.66 12.957 255.75 cv
12.781 255.844 12.637 255.93 12.523 256.008 cv
12.41 256.09 12.328 256.129 12.285 256.125 cv
12.25 256.129 12.223 256.121 12.199 256.109 cv
12.172 256.098 12.152 256.074 12.137 256.039 cv
12.121 256.008 12.109 255.961 12.102 255.895 cv
12.094 255.836 12.09 255.754 12.094 255.652 cv
12.09 255.586 12.09 255.527 12.098 255.473 cv
12.098 255.422 12.109 255.375 12.125 255.332 cv
12.141 255.297 12.156 255.262 12.176 255.227 cv
12.191 255.199 12.223 255.16 12.266 255.113 cv
12.309 255.07 12.395 255.008 12.531 254.926 cv
12.66 254.844 12.824 254.766 13.02 254.684 cv
13.211 254.605 13.434 254.535 13.691 254.48 cv
13.941 254.426 14.215 254.398 14.512 254.398 cv
14.918 254.398 15.281 254.453 15.594 254.555 cv
15.906 254.664 16.164 254.812 16.375 255 cv
16.578 255.195 16.734 255.426 16.84 255.691 cv
16.941 255.961 16.992 256.254 16.996 256.578 cv
16.992 256.859 16.957 257.121 16.887 257.355 cv
16.813 257.598 16.703 257.809 16.563 257.992 cv
16.418 258.18 16.246 258.336 16.043 258.465 cv
15.836 258.598 15.598 258.691 15.328 258.738 cv
15.328 258.75 li
15.633 258.785 15.914 258.859 16.168 258.98 cv
16.422 259.102 16.641 259.254 16.824 259.437 cv
17.004 259.621 17.145 259.836 17.25 260.078 cv
17.352 260.324 17.402 260.586 17.406 260.863 cv
cp
f
4.031 229.039 mo
18.219 229.039 li
18.219 246.129 li
4.031 246.129 li
cp
0 0 0 0 cmyk
ef
10.414 241.934 mo
10.41 242.023 10.402 242.094 10.391 242.152 cv
10.375 242.215 10.355 242.266 10.336 242.297 cv
10.313 242.336 10.289 242.359 10.258 242.375 cv
10.227 242.391 10.195 242.398 10.168 242.398 cv
5.531 242.398 li
5.496 242.398 5.469 242.391 5.441 242.375 cv
5.414 242.359 5.387 242.336 5.363 242.297 cv
5.336 242.266 5.316 242.215 5.305 242.152 cv
5.289 242.094 5.281 242.023 5.285 241.934 cv
5.281 241.855 5.289 241.781 5.305 241.719 cv
5.316 241.66 5.332 241.613 5.355 241.574 cv
5.371 241.539 5.398 241.508 5.43 241.484 cv
5.461 241.465 5.492 241.457 5.531 241.453 cv
7.383 241.453 li
7.383 234.707 li
5.668 235.727 li
5.578 235.777 5.508 235.805 5.461 235.812 cv
5.406 235.82 5.363 235.812 5.332 235.781 cv
5.297 235.754 5.277 235.703 5.266 235.633 cv
5.254 235.566 5.246 235.48 5.25 235.371 cv
5.246 235.297 5.25 235.23 5.262 235.172 cv
5.266 235.121 5.277 235.074 5.293 235.035 cv
5.305 235 5.324 234.969 5.348 234.941 cv
5.371 234.914 5.402 234.887 5.449 234.859 cv
7.492 233.547 li
7.508 233.535 7.527 233.523 7.559 233.516 cv
7.582 233.508 7.617 233.5 7.664 233.488 cv
7.703 233.48 7.754 233.473 7.809 233.469 cv
7.863 233.469 7.93 233.469 8.016 233.465 cv
8.121 233.469 8.215 233.473 8.289 233.48 cv
8.359 233.488 8.414 233.504 8.461 233.52 cv
8.5 233.539 8.527 233.559 8.543 233.582 cv
8.551 233.609 8.559 233.633 8.563 233.656 cv
8.563 241.453 li
10.168 241.453 li
10.203 241.457 10.238 241.465 10.27 241.484 cv
10.301 241.508 10.324 241.539 10.348 241.574 cv
10.363 241.613 10.379 241.66 10.395 241.719 cv
10.402 241.781 10.41 241.855 10.414 241.934 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.852 239.875 mo
17.848 240.027 17.824 240.148 17.781 240.234 cv
17.734 240.324 17.672 240.367 17.59 240.363 cv
16.59 240.363 li
16.59 242.227 li
16.59 242.266 16.578 242.297 16.563 242.32 cv
16.539 242.348 16.508 242.367 16.465 242.387 cv
16.414 242.402 16.352 242.414 16.281 242.426 cv
16.203 242.434 16.109 242.437 15.992 242.441 cv
15.875 242.437 15.777 242.434 15.707 242.426 cv
15.629 242.414 15.57 242.402 15.527 242.387 cv
15.48 242.367 15.449 242.348 15.434 242.32 cv
15.414 242.297 15.406 242.266 15.41 242.227 cv
15.41 240.363 li
11.781 240.363 li
11.723 240.367 11.68 240.359 11.645 240.344 cv
11.609 240.332 11.574 240.305 11.547 240.266 cv
11.516 240.23 11.496 240.18 11.484 240.109 cv
11.473 240.043 11.469 239.953 11.469 239.84 cv
11.469 239.758 11.469 239.68 11.477 239.609 cv
11.477 239.539 11.488 239.477 11.504 239.422 cv
11.516 239.367 11.531 239.312 11.559 239.258 cv
11.578 239.203 11.605 239.148 11.641 239.086 cv
14.801 233.699 li
14.82 233.664 14.855 233.633 14.902 233.605 cv
14.945 233.578 15 233.555 15.074 233.535 cv
15.141 233.52 15.227 233.508 15.332 233.496 cv
15.434 233.492 15.555 233.488 15.695 233.484 cv
15.844 233.488 15.98 233.492 16.098 233.504 cv
16.211 233.516 16.301 233.531 16.375 233.547 cv
16.441 233.566 16.496 233.59 16.535 233.621 cv
16.57 233.652 16.59 233.687 16.59 233.727 cv
16.59 239.391 li
17.59 239.391 li
17.664 239.395 17.727 239.434 17.777 239.512 cv
17.824 239.594 17.848 239.715 17.852 239.875 cv
cp
15.41 234.523 mo
15.398 234.523 li
12.547 239.391 li
15.41 239.391 li
cp
f
4.031 208.051 mo
18.219 208.051 li
18.219 225.141 li
4.031 225.141 li
cp
0 0 0 0 cmyk
ef
10.426 220.953 mo
10.422 221.043 10.414 221.117 10.402 221.176 cv
10.387 221.238 10.367 221.289 10.348 221.32 cv
10.324 221.359 10.301 221.383 10.27 221.398 cv
10.238 221.414 10.207 221.422 10.176 221.422 cv
5.535 221.422 li
5.504 221.422 5.473 221.414 5.445 221.398 cv
5.418 221.383 5.391 221.359 5.367 221.32 cv
5.336 221.289 5.316 221.238 5.309 221.176 cv
5.293 221.117 5.289 221.043 5.289 220.953 cv
5.289 220.875 5.293 220.805 5.309 220.742 cv
5.316 220.684 5.336 220.637 5.359 220.594 cv
5.379 220.559 5.402 220.527 5.434 220.504 cv
5.461 220.484 5.496 220.473 5.535 220.473 cv
7.391 220.473 li
7.391 213.719 li
5.672 214.738 li
5.582 214.789 5.512 214.816 5.461 214.824 cv
5.406 214.832 5.367 214.824 5.336 214.793 cv
5.305 214.766 5.281 214.715 5.27 214.645 cv
5.258 214.578 5.254 214.492 5.254 214.383 cv
5.254 214.309 5.254 214.242 5.262 214.184 cv
5.266 214.133 5.277 214.086 5.293 214.047 cv
5.305 214.012 5.324 213.98 5.352 213.953 cv
5.375 213.926 5.41 213.898 5.453 213.867 cv
7.5 212.555 li
7.516 212.547 7.539 212.535 7.566 212.523 cv
7.594 212.516 7.629 212.508 7.672 212.496 cv
7.711 212.488 7.758 212.48 7.816 212.477 cv
7.867 212.477 7.938 212.477 8.02 212.473 cv
8.129 212.477 8.219 212.48 8.297 212.488 cv
8.367 212.5 8.426 212.512 8.465 212.527 cv
8.504 212.543 8.531 212.566 8.547 212.59 cv
8.563 212.617 8.57 212.641 8.57 212.668 cv
8.57 220.473 li
10.176 220.473 li
10.211 220.473 10.242 220.484 10.277 220.504 cv
10.309 220.527 10.336 220.559 10.359 220.594 cv
10.375 220.637 10.391 220.684 10.406 220.742 cv
10.414 220.805 10.422 220.875 10.426 220.953 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.445 218.566 mo
17.445 219.047 17.363 219.469 17.203 219.836 cv
17.043 220.207 16.816 220.52 16.523 220.773 cv
16.23 221.027 15.883 221.219 15.477 221.352 cv
15.07 221.484 14.621 221.551 14.129 221.551 cv
13.852 221.551 13.59 221.531 13.344 221.492 cv
13.094 221.453 12.871 221.406 12.684 221.352 cv
12.488 221.297 12.332 221.242 12.211 221.184 cv
12.086 221.129 12.008 221.086 11.973 221.051 cv
11.938 221.023 11.914 220.992 11.902 220.965 cv
11.887 220.937 11.871 220.906 11.863 220.863 cv
11.848 220.828 11.84 220.777 11.84 220.715 cv
11.832 220.656 11.832 220.586 11.836 220.5 cv
11.832 220.43 11.836 220.359 11.844 220.293 cv
11.852 220.234 11.863 220.184 11.883 220.141 cv
11.898 220.105 11.918 220.078 11.945 220.055 cv
11.969 220.039 12 220.027 12.035 220.027 cv
12.078 220.027 12.148 220.059 12.246 220.113 cv
12.34 220.176 12.469 220.238 12.633 220.301 cv
12.793 220.371 12.996 220.434 13.238 220.488 cv
13.477 220.551 13.762 220.578 14.094 220.578 cv
14.398 220.578 14.68 220.543 14.938 220.469 cv
15.195 220.398 15.414 220.285 15.602 220.125 cv
15.781 219.973 15.926 219.777 16.035 219.539 cv
16.137 219.305 16.191 219.016 16.195 218.676 cv
16.191 218.395 16.145 218.145 16.059 217.926 cv
15.965 217.711 15.828 217.531 15.648 217.383 cv
15.461 217.242 15.227 217.133 14.945 217.059 cv
14.656 216.992 14.32 216.957 13.93 216.953 cv
13.648 216.957 13.406 216.973 13.207 216.996 cv
13.004 217.027 12.816 217.039 12.645 217.035 cv
12.516 217.039 12.426 217.008 12.371 216.945 cv
12.316 216.887 12.289 216.773 12.289 216.602 cv
12.289 212.98 li
12.289 212.832 12.324 212.719 12.395 212.645 cv
12.465 212.574 12.566 212.539 12.699 212.535 cv
16.633 212.535 li
16.664 212.539 16.699 212.551 16.738 212.566 cv
16.77 212.59 16.801 212.621 16.824 212.66 cv
16.848 212.707 16.863 212.758 16.875 212.82 cv
16.887 212.883 16.895 212.957 16.895 213.043 cv
16.895 213.211 16.871 213.34 16.828 213.43 cv
16.785 213.523 16.723 213.57 16.645 213.566 cv
13.469 213.566 li
13.469 216.059 li
13.617 216.039 13.777 216.023 13.941 216.02 cv
14.102 216.016 14.285 216.016 14.5 216.012 cv
14.984 216.016 15.414 216.074 15.781 216.195 cv
16.148 216.316 16.453 216.488 16.699 216.707 cv
16.941 216.93 17.125 217.199 17.254 217.516 cv
17.379 217.832 17.445 218.184 17.445 218.566 cv
cp
f
4.031 187.059 mo
18.219 187.059 li
18.219 204.149 li
4.031 204.149 li
cp
0 0 0 0 cmyk
ef
10.414 199.957 mo
10.41 200.047 10.402 200.117 10.391 200.176 cv
10.375 200.238 10.355 200.289 10.336 200.32 cv
10.313 200.359 10.289 200.383 10.258 200.398 cv
10.227 200.414 10.195 200.422 10.168 200.422 cv
5.531 200.422 li
5.496 200.422 5.469 200.414 5.441 200.398 cv
5.414 200.383 5.387 200.359 5.363 200.32 cv
5.336 200.289 5.316 200.238 5.305 200.176 cv
5.289 200.117 5.281 200.047 5.285 199.957 cv
5.281 199.879 5.289 199.805 5.305 199.742 cv
5.316 199.684 5.332 199.637 5.355 199.598 cv
5.371 199.562 5.398 199.531 5.43 199.508 cv
5.461 199.488 5.492 199.48 5.531 199.477 cv
7.383 199.477 li
7.383 192.73 li
5.668 193.75 li
5.578 193.801 5.508 193.828 5.461 193.836 cv
5.406 193.844 5.363 193.836 5.332 193.805 cv
5.297 193.777 5.277 193.727 5.266 193.656 cv
5.254 193.59 5.246 193.504 5.25 193.395 cv
5.246 193.32 5.25 193.254 5.262 193.195 cv
5.266 193.145 5.277 193.098 5.293 193.059 cv
5.305 193.023 5.324 192.992 5.348 192.965 cv
5.371 192.937 5.402 192.91 5.449 192.883 cv
7.492 191.57 li
7.508 191.559 7.527 191.547 7.559 191.539 cv
7.582 191.531 7.617 191.523 7.664 191.512 cv
7.703 191.504 7.754 191.496 7.809 191.492 cv
7.863 191.492 7.93 191.492 8.016 191.488 cv
8.121 191.492 8.215 191.496 8.289 191.504 cv
8.359 191.512 8.414 191.527 8.461 191.543 cv
8.5 191.562 8.527 191.582 8.543 191.605 cv
8.551 191.633 8.559 191.656 8.563 191.68 cv
8.563 199.477 li
10.168 199.477 li
10.203 199.48 10.238 199.488 10.27 199.508 cv
10.301 199.531 10.324 199.562 10.348 199.598 cv
10.363 199.637 10.379 199.684 10.395 199.742 cv
10.402 199.805 10.41 199.879 10.414 199.957 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.703 197.551 mo
17.703 197.941 17.641 198.32 17.523 198.68 cv
17.398 199.047 17.215 199.363 16.973 199.637 cv
16.723 199.914 16.41 200.137 16.035 200.301 cv
15.652 200.469 15.207 200.551 14.691 200.551 cv
14.32 200.551 13.992 200.508 13.711 200.414 cv
13.426 200.328 13.18 200.195 12.969 200.023 cv
12.758 199.855 12.582 199.648 12.445 199.402 cv
12.305 199.156 12.191 198.875 12.109 198.559 cv
12.023 198.246 11.965 197.902 11.93 197.523 cv
11.891 197.152 11.871 196.75 11.875 196.316 cv
11.871 195.937 11.891 195.555 11.934 195.164 cv
11.973 194.781 12.047 194.406 12.152 194.039 cv
12.258 193.68 12.402 193.34 12.582 193.023 cv
12.762 192.707 12.988 192.43 13.262 192.195 cv
13.535 191.961 13.859 191.773 14.238 191.633 cv
14.617 191.496 15.059 191.43 15.563 191.426 cv
15.73 191.43 15.902 191.437 16.074 191.457 cv
16.246 191.48 16.406 191.512 16.555 191.543 cv
16.703 191.582 16.824 191.617 16.926 191.656 cv
17.023 191.695 17.09 191.73 17.125 191.754 cv
17.152 191.781 17.176 191.809 17.195 191.836 cv
17.211 191.867 17.227 191.898 17.234 191.934 cv
17.242 191.969 17.246 192.008 17.254 192.051 cv
17.254 192.094 17.258 192.148 17.262 192.211 cv
17.258 192.297 17.258 192.367 17.258 192.422 cv
17.254 192.484 17.242 192.531 17.23 192.566 cv
17.211 192.605 17.191 192.633 17.168 192.648 cv
17.141 192.668 17.109 192.676 17.07 192.676 cv
17.02 192.676 16.949 192.66 16.863 192.629 cv
16.773 192.598 16.668 192.562 16.547 192.52 cv
16.422 192.484 16.273 192.449 16.098 192.414 cv
15.922 192.387 15.719 192.371 15.488 192.367 cv
15.059 192.371 14.691 192.457 14.387 192.629 cv
14.082 192.801 13.832 193.035 13.637 193.328 cv
13.441 193.621 13.297 193.961 13.207 194.344 cv
13.109 194.734 13.055 195.137 13.047 195.555 cv
13.164 195.488 13.301 195.422 13.449 195.352 cv
13.598 195.285 13.758 195.223 13.934 195.164 cv
14.109 195.113 14.297 195.066 14.492 195.031 cv
14.688 195 14.898 194.984 15.125 194.98 cv
15.602 194.984 16.004 195.051 16.336 195.176 cv
16.664 195.309 16.93 195.488 17.137 195.719 cv
17.336 195.949 17.48 196.219 17.57 196.531 cv
17.656 196.844 17.703 197.184 17.703 197.551 cv
cp
16.508 197.66 mo
16.508 197.398 16.48 197.156 16.43 196.937 cv
16.375 196.723 16.285 196.539 16.164 196.383 cv
16.039 196.234 15.875 196.117 15.672 196.035 cv
15.461 195.953 15.207 195.91 14.91 195.91 cv
14.738 195.91 14.57 195.926 14.402 195.957 cv
14.23 195.988 14.066 196.031 13.91 196.078 cv
13.75 196.133 13.602 196.195 13.461 196.266 cv
13.316 196.34 13.184 196.414 13.066 196.492 cv
13.063 197.086 13.102 197.582 13.18 197.977 cv
13.254 198.375 13.363 198.691 13.508 198.93 cv
13.652 199.172 13.832 199.344 14.047 199.445 cv
14.262 199.551 14.512 199.602 14.801 199.598 cv
15.09 199.602 15.344 199.547 15.559 199.434 cv
15.773 199.328 15.949 199.18 16.094 198.992 cv
16.234 198.809 16.34 198.602 16.406 198.371 cv
16.473 198.141 16.508 197.906 16.508 197.66 cv
cp
f
4.031 166.07 mo
18.219 166.07 li
18.219 183.16 li
4.031 183.16 li
cp
0 0 0 0 cmyk
ef
10.414 178.957 mo
10.41 179.047 10.402 179.117 10.391 179.176 cv
10.375 179.238 10.355 179.289 10.336 179.32 cv
10.313 179.359 10.289 179.383 10.258 179.398 cv
10.227 179.414 10.195 179.422 10.168 179.422 cv
5.531 179.422 li
5.496 179.422 5.469 179.414 5.441 179.398 cv
5.414 179.383 5.387 179.359 5.363 179.32 cv
5.336 179.289 5.316 179.238 5.305 179.176 cv
5.289 179.117 5.281 179.047 5.285 178.957 cv
5.281 178.879 5.289 178.805 5.305 178.742 cv
5.316 178.684 5.332 178.637 5.355 178.598 cv
5.371 178.562 5.398 178.531 5.43 178.508 cv
5.461 178.488 5.492 178.48 5.531 178.477 cv
7.383 178.477 li
7.383 171.73 li
5.668 172.75 li
5.578 172.801 5.508 172.828 5.461 172.836 cv
5.406 172.844 5.363 172.836 5.332 172.805 cv
5.297 172.777 5.277 172.727 5.266 172.656 cv
5.254 172.59 5.246 172.504 5.25 172.395 cv
5.246 172.32 5.25 172.254 5.262 172.195 cv
5.266 172.145 5.277 172.098 5.293 172.059 cv
5.305 172.023 5.324 171.992 5.348 171.965 cv
5.371 171.937 5.402 171.91 5.449 171.883 cv
7.492 170.57 li
7.508 170.559 7.527 170.547 7.559 170.539 cv
7.582 170.531 7.617 170.523 7.664 170.512 cv
7.703 170.504 7.754 170.496 7.809 170.492 cv
7.863 170.492 7.93 170.492 8.016 170.488 cv
8.121 170.492 8.215 170.496 8.289 170.504 cv
8.359 170.512 8.414 170.527 8.461 170.543 cv
8.5 170.562 8.527 170.582 8.543 170.605 cv
8.551 170.633 8.559 170.656 8.563 170.68 cv
8.563 178.477 li
10.168 178.477 li
10.203 178.48 10.238 178.488 10.27 178.508 cv
10.301 178.531 10.324 178.562 10.348 178.598 cv
10.363 178.637 10.379 178.684 10.395 178.742 cv
10.402 178.805 10.41 178.879 10.414 178.957 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.605 171.059 mo
17.602 171.145 17.598 171.219 17.594 171.281 cv
17.586 171.352 17.578 171.414 17.566 171.473 cv
17.555 171.539 17.539 171.598 17.52 171.652 cv
17.496 171.711 17.473 171.773 17.449 171.832 cv
14.254 179.195 li
14.227 179.254 14.199 179.297 14.168 179.328 cv
14.133 179.363 14.09 179.391 14.035 179.41 cv
13.98 179.43 13.91 179.441 13.832 179.453 cv
13.746 179.457 13.648 179.461 13.531 179.465 cv
13.375 179.461 13.254 179.453 13.168 179.441 cv
13.082 179.426 13.02 179.41 12.98 179.379 cv
12.941 179.352 12.922 179.312 12.93 179.27 cv
12.93 179.227 12.945 179.176 12.977 179.113 cv
16.336 171.586 li
12.078 171.586 li
11.992 171.59 11.926 171.543 11.883 171.449 cv
11.84 171.359 11.82 171.23 11.82 171.066 cv
11.82 170.98 11.824 170.906 11.836 170.84 cv
11.848 170.777 11.863 170.723 11.887 170.68 cv
11.906 170.637 11.934 170.605 11.969 170.582 cv
12 170.562 12.039 170.551 12.078 170.551 cv
17.25 170.551 li
17.309 170.551 17.363 170.559 17.414 170.574 cv
17.461 170.59 17.496 170.617 17.523 170.656 cv
17.547 170.695 17.566 170.75 17.582 170.812 cv
17.594 170.879 17.602 170.961 17.605 171.059 cv
cp
f
4.031 145.078 mo
18.219 145.078 li
18.219 162.172 li
4.031 162.172 li
cp
0 0 0 0 cmyk
ef
10.426 157.98 mo
10.422 158.07 10.414 158.145 10.402 158.203 cv
10.387 158.266 10.367 158.316 10.348 158.348 cv
10.324 158.387 10.301 158.41 10.27 158.426 cv
10.238 158.441 10.207 158.449 10.176 158.449 cv
5.535 158.449 li
5.504 158.449 5.473 158.441 5.445 158.426 cv
5.418 158.41 5.391 158.387 5.367 158.348 cv
5.336 158.316 5.316 158.266 5.309 158.203 cv
5.293 158.145 5.289 158.07 5.289 157.98 cv
5.289 157.902 5.293 157.832 5.309 157.77 cv
5.316 157.711 5.336 157.664 5.359 157.621 cv
5.379 157.586 5.402 157.555 5.434 157.531 cv
5.461 157.512 5.496 157.5 5.535 157.5 cv
7.391 157.5 li
7.391 150.746 li
5.672 151.766 li
5.582 151.816 5.512 151.844 5.461 151.852 cv
5.406 151.859 5.367 151.852 5.336 151.82 cv
5.305 151.793 5.281 151.742 5.27 151.672 cv
5.258 151.605 5.254 151.52 5.254 151.41 cv
5.254 151.336 5.254 151.27 5.262 151.211 cv
5.266 151.16 5.277 151.113 5.293 151.074 cv
5.305 151.039 5.324 151.008 5.352 150.98 cv
5.375 150.953 5.41 150.926 5.453 150.895 cv
7.5 149.582 li
7.516 149.574 7.539 149.562 7.566 149.551 cv
7.594 149.543 7.629 149.535 7.672 149.523 cv
7.711 149.516 7.758 149.508 7.816 149.504 cv
7.867 149.504 7.938 149.504 8.02 149.5 cv
8.129 149.504 8.219 149.508 8.297 149.516 cv
8.367 149.527 8.426 149.539 8.465 149.555 cv
8.504 149.57 8.531 149.594 8.547 149.617 cv
8.563 149.645 8.57 149.668 8.57 149.695 cv
8.57 157.5 li
10.176 157.5 li
10.211 157.5 10.242 157.512 10.277 157.531 cv
10.309 157.555 10.336 157.586 10.359 157.621 cv
10.375 157.664 10.391 157.711 10.406 157.77 cv
10.414 157.832 10.422 157.902 10.426 157.98 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.691 156.168 mo
17.691 156.559 17.621 156.898 17.484 157.195 cv
17.348 157.496 17.148 157.75 16.891 157.957 cv
16.629 158.164 16.313 158.32 15.934 158.422 cv
15.551 158.527 15.113 158.578 14.629 158.578 cv
14.168 158.578 13.758 158.531 13.398 158.437 cv
13.035 158.344 12.73 158.203 12.48 158.012 cv
12.227 157.824 12.035 157.594 11.902 157.316 cv
11.77 157.043 11.703 156.727 11.703 156.375 cv
11.703 156.098 11.746 155.844 11.84 155.609 cv
11.926 155.379 12.059 155.164 12.234 154.961 cv
12.402 154.766 12.613 154.578 12.871 154.406 cv
13.121 154.234 13.406 154.074 13.723 153.918 cv
13.445 153.777 13.203 153.625 12.996 153.469 cv
12.781 153.312 12.602 153.141 12.457 152.953 cv
12.309 152.77 12.199 152.574 12.125 152.359 cv
12.047 152.152 12.008 151.922 12.012 151.672 cv
12.008 151.363 12.063 151.07 12.18 150.797 cv
12.289 150.523 12.461 150.289 12.688 150.086 cv
12.914 149.887 13.199 149.727 13.551 149.609 cv
13.898 149.496 14.309 149.437 14.781 149.434 cv
15.227 149.437 15.613 149.492 15.941 149.594 cv
16.266 149.703 16.539 149.848 16.754 150.035 cv
16.965 150.223 17.121 150.441 17.223 150.691 cv
17.324 150.941 17.375 151.211 17.375 151.5 cv
17.375 151.734 17.336 151.961 17.262 152.176 cv
17.184 152.391 17.074 152.594 16.93 152.785 cv
16.781 152.977 16.602 153.156 16.391 153.324 cv
16.176 153.492 15.93 153.648 15.66 153.793 cv
15.98 153.957 16.27 154.121 16.527 154.289 cv
16.777 154.461 16.992 154.645 17.168 154.836 cv
17.336 155.031 17.465 155.238 17.559 155.453 cv
17.645 155.672 17.691 155.91 17.691 156.168 cv
cp
16.207 151.609 mo
16.203 151.422 16.168 151.246 16.105 151.09 cv
16.035 150.934 15.941 150.801 15.816 150.691 cv
15.688 150.582 15.527 150.5 15.34 150.437 cv
15.148 150.383 14.934 150.352 14.691 150.352 cv
14.195 150.352 13.82 150.465 13.566 150.691 cv
13.313 150.918 13.184 151.227 13.188 151.609 cv
13.184 151.793 13.215 151.957 13.277 152.109 cv
13.336 152.262 13.434 152.406 13.566 152.543 cv
13.699 152.684 13.863 152.82 14.063 152.945 cv
14.262 153.078 14.5 153.215 14.773 153.355 cv
15.234 153.121 15.586 152.855 15.836 152.566 cv
16.078 152.277 16.203 151.961 16.207 151.609 cv
cp
16.496 156.293 mo
16.496 156.082 16.457 155.891 16.379 155.719 cv
16.301 155.547 16.18 155.387 16.023 155.238 cv
15.863 155.09 15.668 154.949 15.434 154.809 cv
15.195 154.672 14.922 154.523 14.617 154.371 cv
14.324 154.512 14.07 154.656 13.855 154.797 cv
13.637 154.941 13.461 155.086 13.32 155.234 cv
13.18 155.387 13.074 155.547 13.004 155.715 cv
12.934 155.883 12.898 156.066 12.898 156.266 cv
12.898 156.711 13.051 157.055 13.355 157.297 cv
13.66 157.543 14.113 157.664 14.719 157.66 cv
15.301 157.664 15.742 157.543 16.047 157.293 cv
16.344 157.051 16.496 156.715 16.496 156.293 cv
cp
f
4.031 124.102 mo
18.219 124.102 li
18.219 141.192 li
4.031 141.192 li
cp
0 0 0 0 cmyk
ef
10.414 136.984 mo
10.41 137.074 10.402 137.145 10.391 137.203 cv
10.375 137.266 10.355 137.316 10.336 137.348 cv
10.313 137.387 10.289 137.41 10.258 137.426 cv
10.227 137.441 10.195 137.449 10.168 137.449 cv
5.531 137.449 li
5.496 137.449 5.469 137.441 5.441 137.426 cv
5.414 137.41 5.387 137.387 5.363 137.348 cv
5.336 137.316 5.316 137.266 5.305 137.203 cv
5.289 137.145 5.281 137.074 5.285 136.984 cv
5.281 136.906 5.289 136.832 5.305 136.77 cv
5.316 136.711 5.332 136.664 5.355 136.625 cv
5.371 136.59 5.398 136.559 5.43 136.535 cv
5.461 136.516 5.492 136.508 5.531 136.504 cv
7.383 136.504 li
7.383 129.758 li
5.668 130.777 li
5.578 130.828 5.508 130.855 5.461 130.863 cv
5.406 130.871 5.363 130.863 5.332 130.832 cv
5.297 130.805 5.277 130.754 5.266 130.684 cv
5.254 130.617 5.246 130.531 5.25 130.422 cv
5.246 130.348 5.25 130.281 5.262 130.223 cv
5.266 130.172 5.277 130.125 5.293 130.086 cv
5.305 130.051 5.324 130.02 5.348 129.992 cv
5.371 129.965 5.402 129.937 5.449 129.91 cv
7.492 128.598 li
7.508 128.586 7.527 128.574 7.559 128.566 cv
7.582 128.559 7.617 128.551 7.664 128.539 cv
7.703 128.531 7.754 128.523 7.809 128.52 cv
7.863 128.52 7.93 128.52 8.016 128.516 cv
8.121 128.52 8.215 128.523 8.289 128.531 cv
8.359 128.539 8.414 128.555 8.461 128.57 cv
8.5 128.59 8.527 128.609 8.543 128.633 cv
8.551 128.66 8.559 128.684 8.563 128.707 cv
8.563 136.504 li
10.168 136.504 li
10.203 136.508 10.238 136.516 10.27 136.535 cv
10.301 136.559 10.324 136.59 10.348 136.625 cv
10.363 136.664 10.379 136.711 10.395 136.77 cv
10.402 136.832 10.41 136.906 10.414 136.984 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.543 132.664 mo
17.539 133.051 17.516 133.437 17.473 133.828 cv
17.426 134.223 17.348 134.602 17.242 134.965 cv
17.129 135.328 16.984 135.668 16.801 135.984 cv
16.613 136.305 16.379 136.586 16.102 136.82 cv
15.816 137.062 15.48 137.246 15.098 137.379 cv
14.707 137.512 14.262 137.578 13.754 137.578 cv
13.555 137.578 13.363 137.562 13.18 137.539 cv
12.992 137.512 12.824 137.484 12.68 137.449 cv
12.527 137.414 12.402 137.375 12.305 137.332 cv
12.203 137.293 12.129 137.254 12.086 137.211 cv
12.039 137.172 12.008 137.117 11.988 137.043 cv
11.965 136.973 11.953 136.875 11.957 136.758 cv
11.953 136.656 11.957 136.578 11.965 136.52 cv
11.969 136.461 11.98 136.414 11.996 136.383 cv
12.012 136.352 12.031 136.332 12.055 136.316 cv
12.078 136.309 12.109 136.301 12.148 136.297 cv
12.195 136.301 12.266 136.316 12.359 136.348 cv
12.449 136.383 12.563 136.422 12.707 136.461 cv
12.844 136.504 13.008 136.543 13.195 136.574 cv
13.379 136.613 13.59 136.629 13.828 136.625 cv
14.27 136.629 14.648 136.543 14.969 136.371 cv
15.281 136.199 15.543 135.973 15.746 135.684 cv
15.949 135.398 16.098 135.062 16.199 134.68 cv
16.297 134.301 16.352 133.902 16.363 133.48 cv
16.117 133.625 15.828 133.75 15.492 133.855 cv
15.152 133.969 14.766 134.023 14.328 134.02 cv
13.836 134.023 13.422 133.957 13.086 133.82 cv
12.75 133.687 12.477 133.504 12.273 133.27 cv
12.066 133.039 11.922 132.762 11.836 132.437 cv
11.746 132.121 11.703 131.77 11.703 131.391 cv
11.703 131 11.758 130.629 11.875 130.27 cv
11.984 129.918 12.164 129.605 12.41 129.336 cv
12.648 129.066 12.957 128.852 13.336 128.691 cv
13.707 128.531 14.156 128.449 14.68 128.449 cv
15.047 128.449 15.371 128.496 15.66 128.59 cv
15.941 128.684 16.191 128.82 16.406 128.996 cv
16.613 129.172 16.793 129.383 16.941 129.633 cv
17.086 129.883 17.203 130.164 17.293 130.477 cv
17.379 130.793 17.441 131.137 17.484 131.504 cv
17.52 131.875 17.539 132.262 17.543 132.664 cv
cp
16.344 132.535 mo
16.344 131.953 16.305 131.461 16.227 131.059 cv
16.148 130.66 16.031 130.336 15.883 130.086 cv
15.73 129.84 15.547 129.66 15.328 129.551 cv
15.105 129.441 14.852 129.387 14.57 129.387 cv
14.266 129.387 14.012 129.441 13.805 129.551 cv
13.594 129.66 13.422 129.805 13.289 129.98 cv
13.152 130.164 13.051 130.367 12.988 130.594 cv
12.922 130.824 12.891 131.062 12.895 131.301 cv
12.891 131.574 12.922 131.82 12.98 132.039 cv
13.035 132.266 13.125 132.453 13.258 132.609 cv
13.383 132.766 13.551 132.887 13.758 132.973 cv
13.961 133.059 14.215 133.102 14.52 133.098 cv
14.859 133.102 15.191 133.051 15.516 132.945 cv
15.832 132.844 16.109 132.707 16.344 132.535 cv
cp
f
4.031 103.109 mo
18.219 103.109 li
18.219 120.199 li
4.031 120.199 li
cp
0 0 0 0 cmyk
ef
10.395 115.941 mo
10.391 116.027 10.387 116.102 10.375 116.164 cv
10.363 116.23 10.348 116.285 10.328 116.324 cv
10.305 116.371 10.277 116.402 10.246 116.418 cv
10.211 116.441 10.172 116.449 10.133 116.449 cv
5.23 116.449 li
5.168 116.449 5.109 116.441 5.063 116.426 cv
5.012 116.41 4.973 116.387 4.938 116.348 cv
4.902 116.316 4.875 116.262 4.863 116.191 cv
4.844 116.121 4.836 116.035 4.84 115.934 cv
4.836 115.844 4.84 115.766 4.848 115.695 cv
4.852 115.629 4.867 115.57 4.895 115.516 cv
4.918 115.465 4.949 115.41 4.984 115.355 cv
5.02 115.305 5.063 115.25 5.121 115.187 cv
6.895 113.363 li
7.305 112.945 7.633 112.57 7.883 112.234 cv
8.129 111.906 8.32 111.602 8.453 111.324 cv
8.586 111.051 8.672 110.801 8.719 110.574 cv
8.758 110.352 8.781 110.141 8.781 109.945 cv
8.781 109.75 8.746 109.566 8.68 109.387 cv
8.613 109.215 8.52 109.059 8.395 108.922 cv
8.27 108.793 8.113 108.687 7.926 108.605 cv
7.738 108.531 7.52 108.492 7.273 108.488 cv
6.984 108.492 6.727 108.531 6.5 108.605 cv
6.27 108.687 6.07 108.773 5.898 108.859 cv
5.727 108.953 5.582 109.035 5.465 109.113 cv
5.348 109.191 5.262 109.23 5.211 109.23 cv
5.176 109.23 5.145 109.223 5.121 109.203 cv
5.09 109.187 5.07 109.156 5.055 109.113 cv
5.039 109.074 5.023 109.02 5.016 108.949 cv
5.004 108.883 5 108.801 5.004 108.703 cv
5 108.637 5.004 108.578 5.012 108.527 cv
5.016 108.477 5.023 108.434 5.035 108.395 cv
5.043 108.359 5.059 108.324 5.078 108.293 cv
5.098 108.262 5.133 108.223 5.191 108.172 cv
5.242 108.125 5.336 108.059 5.473 107.977 cv
5.605 107.895 5.777 107.816 5.98 107.734 cv
6.184 107.656 6.406 107.586 6.652 107.531 cv
6.895 107.477 7.152 107.449 7.426 107.449 cv
7.852 107.449 8.227 107.512 8.551 107.633 cv
8.871 107.754 9.137 107.918 9.352 108.129 cv
9.563 108.34 9.723 108.586 9.828 108.859 cv
9.934 109.141 9.988 109.437 9.988 109.75 cv
9.988 110.039 9.961 110.32 9.91 110.598 cv
9.859 110.883 9.754 111.187 9.594 111.512 cv
9.43 111.84 9.195 112.203 8.891 112.602 cv
8.582 113.004 8.176 113.465 7.672 113.98 cv
6.266 115.449 li
10.125 115.449 li
10.156 115.453 10.191 115.465 10.23 115.48 cv
10.262 115.504 10.293 115.535 10.32 115.574 cv
10.344 115.617 10.363 115.668 10.375 115.727 cv
10.387 115.793 10.391 115.863 10.395 115.941 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.77 111.992 mo
17.766 112.676 17.715 113.297 17.609 113.859 cv
17.5 114.422 17.32 114.906 17.074 115.309 cv
16.82 115.715 16.492 116.027 16.094 116.246 cv
15.688 116.469 15.195 116.578 14.609 116.578 cv
14.051 116.578 13.578 116.48 13.199 116.281 cv
12.816 116.086 12.512 115.793 12.277 115.406 cv
12.043 115.02 11.875 114.547 11.781 113.98 cv
11.68 113.418 11.633 112.77 11.633 112.035 cv
11.633 111.363 11.688 110.742 11.797 110.176 cv
11.906 109.613 12.082 109.129 12.332 108.723 cv
12.574 108.32 12.898 108.008 13.305 107.781 cv
13.703 107.562 14.199 107.449 14.789 107.449 cv
15.348 107.449 15.82 107.551 16.203 107.746 cv
16.586 107.949 16.891 108.242 17.125 108.625 cv
17.355 109.016 17.523 109.488 17.621 110.051 cv
17.719 110.613 17.766 111.262 17.77 111.992 cv
cp
16.563 112.074 mo
16.559 111.633 16.543 111.234 16.516 110.883 cv
16.48 110.531 16.434 110.223 16.375 109.953 cv
16.309 109.684 16.23 109.453 16.133 109.258 cv
16.035 109.066 15.918 108.906 15.781 108.777 cv
15.641 108.652 15.48 108.559 15.309 108.5 cv
15.129 108.445 14.934 108.418 14.719 108.414 cv
14.328 108.418 14.012 108.508 13.773 108.691 cv
13.527 108.875 13.336 109.129 13.199 109.445 cv
13.059 109.766 12.965 110.137 12.914 110.566 cv
12.863 110.996 12.84 111.461 12.84 111.953 cv
12.84 112.617 12.871 113.18 12.941 113.641 cv
13.008 114.109 13.117 114.488 13.27 114.777 cv
13.414 115.074 13.605 115.285 13.836 115.414 cv
14.066 115.551 14.348 115.617 14.68 115.613 cv
14.934 115.617 15.156 115.578 15.352 115.492 cv
15.543 115.414 15.711 115.293 15.852 115.137 cv
15.992 114.984 16.105 114.801 16.199 114.586 cv
16.285 114.371 16.359 114.133 16.418 113.871 cv
16.469 113.613 16.508 113.332 16.531 113.027 cv
16.551 112.723 16.559 112.406 16.563 112.074 cv
cp
f
4.031 82.121 mo
18.219 82.121 li
18.219 99.211 li
4.031 99.211 li
cp
0 0 0 0 cmyk
ef
10.395 94.961 mo
10.391 95.047 10.387 95.121 10.375 95.184 cv
10.363 95.25 10.348 95.305 10.328 95.344 cv
10.305 95.391 10.277 95.422 10.246 95.437 cv
10.211 95.461 10.172 95.469 10.133 95.469 cv
5.23 95.469 li
5.168 95.469 5.109 95.461 5.063 95.445 cv
5.012 95.43 4.973 95.406 4.938 95.367 cv
4.902 95.336 4.875 95.281 4.863 95.211 cv
4.844 95.141 4.836 95.055 4.84 94.953 cv
4.836 94.863 4.84 94.785 4.848 94.715 cv
4.852 94.648 4.867 94.59 4.895 94.535 cv
4.918 94.484 4.949 94.43 4.984 94.375 cv
5.02 94.324 5.063 94.27 5.121 94.207 cv
6.895 92.383 li
7.305 91.965 7.633 91.59 7.883 91.254 cv
8.129 90.926 8.32 90.621 8.453 90.344 cv
8.586 90.07 8.672 89.82 8.719 89.594 cv
8.758 89.371 8.781 89.16 8.781 88.965 cv
8.781 88.77 8.746 88.586 8.68 88.406 cv
8.613 88.234 8.52 88.078 8.395 87.941 cv
8.27 87.812 8.113 87.707 7.926 87.625 cv
7.738 87.551 7.52 87.512 7.273 87.508 cv
6.984 87.512 6.727 87.551 6.5 87.625 cv
6.27 87.707 6.07 87.793 5.898 87.879 cv
5.727 87.973 5.582 88.055 5.465 88.133 cv
5.348 88.211 5.262 88.25 5.211 88.25 cv
5.176 88.25 5.145 88.242 5.121 88.223 cv
5.09 88.207 5.07 88.176 5.055 88.133 cv
5.039 88.094 5.023 88.039 5.016 87.969 cv
5.004 87.902 5 87.82 5.004 87.723 cv
5 87.656 5.004 87.598 5.012 87.547 cv
5.016 87.496 5.023 87.453 5.035 87.414 cv
5.043 87.379 5.059 87.344 5.078 87.312 cv
5.098 87.281 5.133 87.242 5.191 87.191 cv
5.242 87.145 5.336 87.078 5.473 86.996 cv
5.605 86.914 5.777 86.836 5.98 86.754 cv
6.184 86.676 6.406 86.605 6.652 86.551 cv
6.895 86.496 7.152 86.469 7.426 86.469 cv
7.852 86.469 8.227 86.531 8.551 86.652 cv
8.871 86.773 9.137 86.937 9.352 87.148 cv
9.563 87.359 9.723 87.605 9.828 87.879 cv
9.934 88.16 9.988 88.457 9.988 88.77 cv
9.988 89.059 9.961 89.34 9.91 89.617 cv
9.859 89.902 9.754 90.207 9.594 90.531 cv
9.43 90.859 9.195 91.223 8.891 91.621 cv
8.582 92.023 8.176 92.484 7.672 93 cv
6.266 94.469 li
10.125 94.469 li
10.156 94.473 10.191 94.484 10.23 94.5 cv
10.262 94.523 10.293 94.555 10.32 94.594 cv
10.344 94.637 10.363 94.687 10.375 94.746 cv
10.387 94.812 10.391 94.883 10.395 94.961 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.496 95.004 mo
17.492 95.094 17.484 95.164 17.473 95.223 cv
17.457 95.285 17.438 95.336 17.418 95.367 cv
17.395 95.406 17.371 95.43 17.34 95.445 cv
17.309 95.461 17.277 95.469 17.25 95.469 cv
12.613 95.469 li
12.578 95.469 12.551 95.461 12.523 95.445 cv
12.496 95.43 12.469 95.406 12.445 95.367 cv
12.418 95.336 12.398 95.285 12.387 95.223 cv
12.371 95.164 12.363 95.094 12.367 95.004 cv
12.363 94.926 12.371 94.852 12.387 94.789 cv
12.398 94.73 12.414 94.684 12.438 94.645 cv
12.453 94.609 12.48 94.578 12.512 94.555 cv
12.543 94.535 12.574 94.527 12.613 94.523 cv
14.465 94.523 li
14.465 87.777 li
12.75 88.797 li
12.66 88.848 12.59 88.875 12.543 88.883 cv
12.488 88.891 12.445 88.883 12.414 88.852 cv
12.379 88.824 12.359 88.773 12.348 88.703 cv
12.336 88.637 12.328 88.551 12.332 88.441 cv
12.328 88.367 12.332 88.301 12.344 88.242 cv
12.348 88.191 12.359 88.145 12.375 88.105 cv
12.387 88.07 12.406 88.039 12.43 88.012 cv
12.453 87.984 12.484 87.957 12.531 87.93 cv
14.574 86.617 li
14.59 86.605 14.609 86.594 14.641 86.586 cv
14.664 86.578 14.699 86.57 14.746 86.559 cv
14.785 86.551 14.836 86.543 14.891 86.539 cv
14.945 86.539 15.012 86.539 15.098 86.535 cv
15.203 86.539 15.297 86.543 15.371 86.551 cv
15.441 86.559 15.496 86.574 15.543 86.59 cv
15.582 86.609 15.609 86.629 15.625 86.652 cv
15.633 86.68 15.641 86.703 15.645 86.727 cv
15.645 94.523 li
17.25 94.523 li
17.285 94.527 17.32 94.535 17.352 94.555 cv
17.383 94.578 17.406 94.609 17.43 94.645 cv
17.445 94.684 17.461 94.73 17.477 94.789 cv
17.484 94.852 17.492 94.926 17.496 95.004 cv
cp
f
4.031 61.129 mo
18.219 61.129 li
18.219 78.219 li
4.031 78.219 li
cp
0 0 0 0 cmyk
ef
10.395 73.961 mo
10.391 74.047 10.387 74.121 10.375 74.184 cv
10.363 74.25 10.348 74.305 10.328 74.344 cv
10.305 74.391 10.277 74.422 10.246 74.437 cv
10.211 74.461 10.172 74.469 10.133 74.469 cv
5.23 74.469 li
5.168 74.469 5.109 74.461 5.063 74.445 cv
5.012 74.43 4.973 74.406 4.938 74.367 cv
4.902 74.336 4.875 74.281 4.863 74.211 cv
4.844 74.141 4.836 74.055 4.84 73.953 cv
4.836 73.863 4.84 73.785 4.848 73.715 cv
4.852 73.648 4.867 73.59 4.895 73.535 cv
4.918 73.484 4.949 73.43 4.984 73.375 cv
5.02 73.324 5.063 73.27 5.121 73.207 cv
6.895 71.383 li
7.305 70.965 7.633 70.59 7.883 70.254 cv
8.129 69.926 8.32 69.621 8.453 69.344 cv
8.586 69.07 8.672 68.82 8.719 68.594 cv
8.758 68.371 8.781 68.16 8.781 67.965 cv
8.781 67.77 8.746 67.586 8.68 67.406 cv
8.613 67.234 8.52 67.078 8.395 66.941 cv
8.27 66.812 8.113 66.707 7.926 66.625 cv
7.738 66.551 7.52 66.512 7.273 66.508 cv
6.984 66.512 6.727 66.551 6.5 66.625 cv
6.27 66.707 6.07 66.793 5.898 66.879 cv
5.727 66.973 5.582 67.055 5.465 67.133 cv
5.348 67.211 5.262 67.25 5.211 67.25 cv
5.176 67.25 5.145 67.242 5.121 67.223 cv
5.09 67.207 5.07 67.176 5.055 67.133 cv
5.039 67.094 5.023 67.039 5.016 66.969 cv
5.004 66.902 5 66.82 5.004 66.723 cv
5 66.656 5.004 66.598 5.012 66.547 cv
5.016 66.496 5.023 66.453 5.035 66.414 cv
5.043 66.379 5.059 66.344 5.078 66.312 cv
5.098 66.281 5.133 66.242 5.191 66.191 cv
5.242 66.145 5.336 66.078 5.473 65.996 cv
5.605 65.914 5.777 65.836 5.98 65.754 cv
6.184 65.676 6.406 65.605 6.652 65.551 cv
6.895 65.496 7.152 65.469 7.426 65.469 cv
7.852 65.469 8.227 65.531 8.551 65.652 cv
8.871 65.773 9.137 65.937 9.352 66.148 cv
9.563 66.359 9.723 66.605 9.828 66.879 cv
9.934 67.16 9.988 67.457 9.988 67.77 cv
9.988 68.059 9.961 68.34 9.91 68.617 cv
9.859 68.902 9.754 69.207 9.594 69.531 cv
9.43 69.859 9.195 70.223 8.891 70.621 cv
8.582 71.023 8.176 71.484 7.672 72 cv
6.266 73.469 li
10.125 73.469 li
10.156 73.473 10.191 73.484 10.23 73.5 cv
10.262 73.523 10.293 73.555 10.32 73.594 cv
10.344 73.637 10.363 73.687 10.375 73.746 cv
10.387 73.812 10.391 73.883 10.395 73.961 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.477 73.961 mo
17.473 74.047 17.469 74.121 17.457 74.184 cv
17.445 74.25 17.43 74.305 17.41 74.344 cv
17.387 74.391 17.359 74.422 17.328 74.437 cv
17.293 74.461 17.254 74.469 17.215 74.469 cv
12.313 74.469 li
12.25 74.469 12.191 74.461 12.145 74.445 cv
12.094 74.43 12.055 74.406 12.02 74.367 cv
11.984 74.336 11.957 74.281 11.945 74.211 cv
11.926 74.141 11.918 74.055 11.922 73.953 cv
11.918 73.863 11.922 73.785 11.93 73.715 cv
11.934 73.648 11.949 73.59 11.977 73.535 cv
12 73.484 12.031 73.43 12.066 73.375 cv
12.102 73.324 12.145 73.27 12.203 73.207 cv
13.977 71.383 li
14.387 70.965 14.715 70.59 14.965 70.254 cv
15.211 69.926 15.402 69.621 15.535 69.344 cv
15.668 69.07 15.754 68.82 15.801 68.594 cv
15.84 68.371 15.863 68.16 15.863 67.965 cv
15.863 67.77 15.828 67.586 15.762 67.406 cv
15.695 67.234 15.602 67.078 15.477 66.941 cv
15.352 66.812 15.195 66.707 15.008 66.625 cv
14.82 66.551 14.602 66.512 14.355 66.508 cv
14.066 66.512 13.809 66.551 13.582 66.625 cv
13.352 66.707 13.152 66.793 12.98 66.879 cv
12.809 66.973 12.664 67.055 12.547 67.133 cv
12.43 67.211 12.344 67.25 12.293 67.25 cv
12.258 67.25 12.227 67.242 12.203 67.223 cv
12.172 67.207 12.152 67.176 12.137 67.133 cv
12.121 67.094 12.105 67.039 12.098 66.969 cv
12.086 66.902 12.082 66.82 12.086 66.723 cv
12.082 66.656 12.086 66.598 12.094 66.547 cv
12.098 66.496 12.105 66.453 12.117 66.414 cv
12.125 66.379 12.141 66.344 12.16 66.312 cv
12.18 66.281 12.215 66.242 12.273 66.191 cv
12.324 66.145 12.418 66.078 12.555 65.996 cv
12.688 65.914 12.859 65.836 13.063 65.754 cv
13.266 65.676 13.488 65.605 13.734 65.551 cv
13.977 65.496 14.234 65.469 14.508 65.469 cv
14.934 65.469 15.309 65.531 15.633 65.652 cv
15.953 65.773 16.219 65.937 16.434 66.148 cv
16.645 66.359 16.805 66.605 16.91 66.879 cv
17.016 67.16 17.07 67.457 17.07 67.77 cv
17.07 68.059 17.043 68.34 16.992 68.617 cv
16.941 68.902 16.836 69.207 16.676 69.531 cv
16.512 69.859 16.277 70.223 15.973 70.621 cv
15.664 71.023 15.258 71.484 14.754 72 cv
13.348 73.469 li
17.207 73.469 li
17.238 73.473 17.273 73.484 17.313 73.5 cv
17.344 73.523 17.375 73.555 17.402 73.594 cv
17.426 73.637 17.445 73.687 17.457 73.746 cv
17.469 73.812 17.473 73.883 17.477 73.961 cv
cp
f
4.031 40.141 mo
18.219 40.141 li
18.219 57.231 li
4.031 57.231 li
cp
0 0 0 0 cmyk
ef
10.395 52.961 mo
10.391 53.047 10.387 53.121 10.375 53.184 cv
10.363 53.25 10.348 53.305 10.328 53.344 cv
10.305 53.391 10.277 53.422 10.246 53.437 cv
10.211 53.461 10.172 53.469 10.133 53.469 cv
5.23 53.469 li
5.168 53.469 5.109 53.461 5.063 53.445 cv
5.012 53.43 4.973 53.406 4.938 53.367 cv
4.902 53.336 4.875 53.281 4.863 53.211 cv
4.844 53.141 4.836 53.055 4.84 52.953 cv
4.836 52.863 4.84 52.785 4.848 52.715 cv
4.852 52.648 4.867 52.59 4.895 52.535 cv
4.918 52.484 4.949 52.43 4.984 52.375 cv
5.02 52.324 5.063 52.27 5.121 52.207 cv
6.895 50.383 li
7.305 49.965 7.633 49.59 7.883 49.254 cv
8.129 48.926 8.32 48.621 8.453 48.344 cv
8.586 48.07 8.672 47.82 8.719 47.594 cv
8.758 47.371 8.781 47.16 8.781 46.965 cv
8.781 46.77 8.746 46.586 8.68 46.406 cv
8.613 46.234 8.52 46.078 8.395 45.941 cv
8.27 45.812 8.113 45.707 7.926 45.625 cv
7.738 45.551 7.52 45.512 7.273 45.508 cv
6.984 45.512 6.727 45.551 6.5 45.625 cv
6.27 45.707 6.07 45.793 5.898 45.879 cv
5.727 45.973 5.582 46.055 5.465 46.133 cv
5.348 46.211 5.262 46.25 5.211 46.25 cv
5.176 46.25 5.145 46.242 5.121 46.223 cv
5.09 46.207 5.07 46.176 5.055 46.133 cv
5.039 46.094 5.023 46.039 5.016 45.969 cv
5.004 45.902 5 45.82 5.004 45.723 cv
5 45.656 5.004 45.598 5.012 45.547 cv
5.016 45.496 5.023 45.453 5.035 45.414 cv
5.043 45.379 5.059 45.344 5.078 45.312 cv
5.098 45.281 5.133 45.242 5.191 45.191 cv
5.242 45.145 5.336 45.078 5.473 44.996 cv
5.605 44.914 5.777 44.836 5.98 44.754 cv
6.184 44.676 6.406 44.605 6.652 44.551 cv
6.895 44.496 7.152 44.469 7.426 44.469 cv
7.852 44.469 8.227 44.531 8.551 44.652 cv
8.871 44.773 9.137 44.937 9.352 45.148 cv
9.563 45.359 9.723 45.605 9.828 45.879 cv
9.934 46.16 9.988 46.457 9.988 46.77 cv
9.988 47.059 9.961 47.34 9.91 47.617 cv
9.859 47.902 9.754 48.207 9.594 48.531 cv
9.43 48.859 9.195 49.223 8.891 49.621 cv
8.582 50.023 8.176 50.484 7.672 51 cv
6.266 52.469 li
10.125 52.469 li
10.156 52.473 10.191 52.484 10.23 52.5 cv
10.262 52.523 10.293 52.555 10.32 52.594 cv
10.344 52.637 10.363 52.687 10.375 52.746 cv
10.387 52.812 10.391 52.883 10.395 52.961 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.406 50.934 mo
17.402 51.344 17.332 51.711 17.191 52.035 cv
17.047 52.363 16.844 52.645 16.582 52.875 cv
16.316 53.109 15.988 53.285 15.602 53.41 cv
15.211 53.535 14.773 53.598 14.289 53.598 cv
13.984 53.598 13.707 53.57 13.453 53.523 cv
13.191 53.477 12.961 53.426 12.766 53.355 cv
12.563 53.293 12.398 53.223 12.266 53.152 cv
12.133 53.082 12.047 53.031 12.016 52.996 cv
11.977 52.969 11.953 52.937 11.938 52.902 cv
11.918 52.871 11.898 52.832 11.887 52.785 cv
11.871 52.742 11.863 52.687 11.855 52.617 cv
11.848 52.555 11.844 52.473 11.848 52.371 cv
11.844 52.211 11.859 52.098 11.895 52.031 cv
11.926 51.969 11.973 51.934 12.035 51.934 cv
12.078 51.934 12.16 51.973 12.285 52.043 cv
12.406 52.121 12.566 52.199 12.762 52.281 cv
12.953 52.367 13.18 52.445 13.445 52.516 cv
13.703 52.59 13.996 52.625 14.316 52.625 cv
14.625 52.625 14.895 52.586 15.133 52.508 cv
15.363 52.43 15.563 52.32 15.723 52.18 cv
15.879 52.039 15.996 51.871 16.078 51.676 cv
16.156 51.48 16.195 51.27 16.199 51.043 cv
16.195 50.793 16.145 50.566 16.047 50.363 cv
15.941 50.164 15.793 49.992 15.602 49.844 cv
15.402 49.699 15.164 49.586 14.879 49.508 cv
14.594 49.43 14.27 49.391 13.906 49.391 cv
13.035 49.391 li
12.992 49.391 12.957 49.383 12.922 49.367 cv
12.887 49.352 12.855 49.324 12.832 49.285 cv
12.805 49.25 12.785 49.203 12.77 49.145 cv
12.754 49.086 12.746 49.008 12.746 48.91 cv
12.746 48.824 12.75 48.754 12.766 48.695 cv
12.773 48.641 12.793 48.594 12.824 48.559 cv
12.848 48.523 12.879 48.5 12.91 48.48 cv
12.941 48.469 12.977 48.461 13.02 48.457 cv
13.793 48.457 li
14.094 48.461 14.363 48.422 14.605 48.34 cv
14.84 48.266 15.043 48.152 15.215 48.004 cv
15.379 47.859 15.508 47.684 15.598 47.48 cv
15.688 47.277 15.734 47.051 15.734 46.797 cv
15.734 46.617 15.703 46.441 15.645 46.273 cv
15.582 46.109 15.492 45.965 15.375 45.84 cv
15.254 45.715 15.102 45.617 14.922 45.547 cv
14.734 45.477 14.523 45.441 14.281 45.441 cv
14.016 45.441 13.77 45.484 13.551 45.562 cv
13.324 45.645 13.129 45.73 12.957 45.82 cv
12.781 45.914 12.637 46 12.523 46.078 cv
12.41 46.16 12.328 46.199 12.285 46.195 cv
12.25 46.199 12.223 46.191 12.199 46.18 cv
12.172 46.168 12.152 46.145 12.137 46.109 cv
12.121 46.078 12.109 46.031 12.102 45.965 cv
12.094 45.906 12.09 45.824 12.094 45.723 cv
12.09 45.656 12.09 45.598 12.098 45.543 cv
12.098 45.492 12.109 45.445 12.125 45.402 cv
12.141 45.367 12.156 45.332 12.176 45.297 cv
12.191 45.27 12.223 45.23 12.266 45.184 cv
12.309 45.141 12.395 45.078 12.531 44.996 cv
12.66 44.914 12.824 44.836 13.02 44.754 cv
13.211 44.676 13.434 44.605 13.691 44.551 cv
13.941 44.496 14.215 44.469 14.512 44.469 cv
14.918 44.469 15.281 44.523 15.594 44.625 cv
15.906 44.734 16.164 44.883 16.375 45.07 cv
16.578 45.266 16.734 45.496 16.84 45.762 cv
16.941 46.031 16.992 46.324 16.996 46.648 cv
16.992 46.93 16.957 47.191 16.887 47.426 cv
16.813 47.668 16.703 47.879 16.563 48.062 cv
16.418 48.25 16.246 48.406 16.043 48.535 cv
15.836 48.668 15.598 48.762 15.328 48.809 cv
15.328 48.82 li
15.633 48.855 15.914 48.93 16.168 49.051 cv
16.422 49.172 16.641 49.324 16.824 49.508 cv
17.004 49.691 17.145 49.906 17.25 50.148 cv
17.352 50.395 17.402 50.656 17.406 50.934 cv
cp
f
4.031 19.16 mo
18.219 19.16 li
18.219 36.2501 li
4.031 36.2501 li
cp
0 0 0 0 cmyk
ef
10.395 31.992 mo
10.391 32.078 10.387 32.152 10.375 32.215 cv
10.363 32.281 10.348 32.336 10.328 32.375 cv
10.305 32.422 10.277 32.453 10.246 32.469 cv
10.211 32.492 10.172 32.5 10.133 32.5 cv
5.23 32.5 li
5.168 32.5 5.109 32.492 5.063 32.477 cv
5.012 32.461 4.973 32.437 4.938 32.398 cv
4.902 32.367 4.875 32.312 4.863 32.242 cv
4.844 32.172 4.836 32.086 4.84 31.984 cv
4.836 31.895 4.84 31.816 4.848 31.746 cv
4.852 31.68 4.867 31.621 4.895 31.566 cv
4.918 31.516 4.949 31.461 4.984 31.406 cv
5.02 31.355 5.063 31.301 5.121 31.238 cv
6.895 29.414 li
7.305 28.996 7.633 28.621 7.883 28.285 cv
8.129 27.957 8.32 27.652 8.453 27.375 cv
8.586 27.102 8.672 26.852 8.719 26.625 cv
8.758 26.402 8.781 26.191 8.781 25.996 cv
8.781 25.801 8.746 25.617 8.68 25.437 cv
8.613 25.266 8.52 25.109 8.395 24.973 cv
8.27 24.844 8.113 24.738 7.926 24.656 cv
7.738 24.582 7.52 24.543 7.273 24.539 cv
6.984 24.543 6.727 24.582 6.5 24.656 cv
6.27 24.738 6.07 24.824 5.898 24.91 cv
5.727 25.004 5.582 25.086 5.465 25.164 cv
5.348 25.242 5.262 25.281 5.211 25.281 cv
5.176 25.281 5.145 25.273 5.121 25.254 cv
5.09 25.238 5.07 25.207 5.055 25.164 cv
5.039 25.125 5.023 25.07 5.016 25 cv
5.004 24.934 5 24.852 5.004 24.754 cv
5 24.687 5.004 24.629 5.012 24.578 cv
5.016 24.527 5.023 24.484 5.035 24.445 cv
5.043 24.41 5.059 24.375 5.078 24.344 cv
5.098 24.312 5.133 24.273 5.191 24.223 cv
5.242 24.176 5.336 24.109 5.473 24.027 cv
5.605 23.945 5.777 23.867 5.98 23.785 cv
6.184 23.707 6.406 23.637 6.652 23.582 cv
6.895 23.527 7.152 23.5 7.426 23.5 cv
7.852 23.5 8.227 23.562 8.551 23.684 cv
8.871 23.805 9.137 23.969 9.352 24.18 cv
9.563 24.391 9.723 24.637 9.828 24.91 cv
9.934 25.191 9.988 25.488 9.988 25.801 cv
9.988 26.09 9.961 26.371 9.91 26.648 cv
9.859 26.934 9.754 27.238 9.594 27.562 cv
9.43 27.891 9.195 28.254 8.891 28.652 cv
8.582 29.055 8.176 29.516 7.672 30.031 cv
6.266 31.5 li
10.125 31.5 li
10.156 31.504 10.191 31.516 10.23 31.531 cv
10.262 31.555 10.293 31.586 10.32 31.625 cv
10.344 31.668 10.363 31.719 10.375 31.777 cv
10.387 31.844 10.391 31.914 10.395 31.992 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
17.852 29.977 mo
17.848 30.129 17.824 30.25 17.781 30.336 cv
17.734 30.426 17.672 30.469 17.59 30.465 cv
16.59 30.465 li
16.59 32.328 li
16.59 32.367 16.578 32.398 16.563 32.422 cv
16.539 32.449 16.508 32.469 16.465 32.488 cv
16.414 32.504 16.352 32.516 16.281 32.527 cv
16.203 32.535 16.109 32.539 15.992 32.543 cv
15.875 32.539 15.777 32.535 15.707 32.527 cv
15.629 32.516 15.57 32.504 15.527 32.488 cv
15.48 32.469 15.449 32.449 15.434 32.422 cv
15.414 32.398 15.406 32.367 15.41 32.328 cv
15.41 30.465 li
11.781 30.465 li
11.723 30.469 11.68 30.461 11.645 30.445 cv
11.609 30.434 11.574 30.406 11.547 30.367 cv
11.516 30.332 11.496 30.281 11.484 30.211 cv
11.473 30.145 11.469 30.055 11.469 29.941 cv
11.469 29.859 11.469 29.781 11.477 29.711 cv
11.477 29.641 11.488 29.578 11.504 29.523 cv
11.516 29.469 11.531 29.414 11.559 29.359 cv
11.578 29.305 11.605 29.25 11.641 29.187 cv
14.801 23.801 li
14.82 23.766 14.855 23.734 14.902 23.707 cv
14.945 23.68 15 23.656 15.074 23.637 cv
15.141 23.621 15.227 23.609 15.332 23.598 cv
15.434 23.594 15.555 23.59 15.695 23.586 cv
15.844 23.59 15.98 23.594 16.098 23.605 cv
16.211 23.617 16.301 23.633 16.375 23.648 cv
16.441 23.668 16.496 23.691 16.535 23.723 cv
16.57 23.754 16.59 23.789 16.59 23.828 cv
16.59 29.492 li
17.59 29.492 li
17.664 29.496 17.727 29.535 17.777 29.613 cv
17.824 29.695 17.848 29.816 17.852 29.977 cv
cp
15.41 24.625 mo
15.398 24.625 li
12.547 29.492 li
15.41 29.492 li
cp
f
34.027 533.031 mo
34.023 533.121 34.016 533.191 34.004 533.25 cv
33.988 533.312 33.969 533.363 33.949 533.395 cv
33.926 533.434 33.902 533.457 33.871 533.473 cv
33.84 533.488 33.809 533.496 33.781 533.496 cv
29.145 533.496 li
29.109 533.496 29.082 533.488 29.055 533.473 cv
29.027 533.457 29 533.434 28.977 533.395 cv
28.949 533.363 28.93 533.312 28.918 533.25 cv
28.902 533.191 28.895 533.121 28.898 533.031 cv
28.895 532.953 28.902 532.879 28.918 532.816 cv
28.93 532.758 28.945 532.711 28.969 532.672 cv
28.984 532.637 29.012 532.605 29.043 532.582 cv
29.074 532.562 29.105 532.555 29.145 532.551 cv
30.996 532.551 li
30.996 525.805 li
29.281 526.824 li
29.191 526.875 29.121 526.902 29.074 526.91 cv
29.02 526.918 28.977 526.91 28.945 526.879 cv
28.91 526.852 28.891 526.801 28.879 526.73 cv
28.867 526.664 28.859 526.578 28.863 526.469 cv
28.859 526.395 28.863 526.328 28.875 526.27 cv
28.879 526.219 28.891 526.172 28.906 526.133 cv
28.918 526.098 28.938 526.066 28.961 526.039 cv
28.984 526.012 29.016 525.984 29.063 525.957 cv
31.105 524.645 li
31.121 524.633 31.141 524.621 31.172 524.613 cv
31.195 524.605 31.23 524.598 31.277 524.586 cv
31.316 524.578 31.367 524.57 31.422 524.566 cv
31.477 524.566 31.543 524.566 31.629 524.562 cv
31.734 524.566 31.828 524.57 31.902 524.578 cv
31.973 524.586 32.027 524.602 32.074 524.617 cv
32.113 524.637 32.141 524.656 32.156 524.68 cv
32.164 524.707 32.172 524.73 32.176 524.754 cv
32.176 532.551 li
33.781 532.551 li
33.816 532.555 33.852 532.562 33.883 532.582 cv
33.914 532.605 33.938 532.637 33.961 532.672 cv
33.977 532.711 33.992 532.758 34.008 532.816 cv
34.016 532.879 34.023 532.953 34.027 533.031 cv
cp
f
104.355 532.988 mo
104.352 533.074 104.348 533.148 104.336 533.211 cv
104.324 533.277 104.309 533.332 104.289 533.371 cv
104.266 533.418 104.238 533.449 104.207 533.465 cv
104.172 533.488 104.133 533.496 104.094 533.496 cv
99.191 533.496 li
99.129 533.496 99.07 533.488 99.023 533.473 cv
98.973 533.457 98.934 533.434 98.898 533.395 cv
98.863 533.363 98.836 533.309 98.824 533.238 cv
98.805 533.168 98.797 533.082 98.801 532.98 cv
98.797 532.891 98.801 532.812 98.809 532.742 cv
98.813 532.676 98.828 532.617 98.855 532.562 cv
98.879 532.512 98.91 532.457 98.945 532.402 cv
98.98 532.352 99.023 532.297 99.082 532.234 cv
100.855 530.41 li
101.266 529.992 101.594 529.617 101.844 529.281 cv
102.09 528.953 102.281 528.648 102.414 528.371 cv
102.547 528.098 102.633 527.848 102.68 527.621 cv
102.719 527.398 102.742 527.187 102.742 526.992 cv
102.742 526.797 102.707 526.613 102.641 526.434 cv
102.574 526.262 102.48 526.105 102.355 525.969 cv
102.23 525.84 102.074 525.734 101.887 525.652 cv
101.699 525.578 101.48 525.539 101.234 525.535 cv
100.945 525.539 100.688 525.578 100.461 525.652 cv
100.23 525.734 100.031 525.82 99.859 525.906 cv
99.688 526 99.543 526.082 99.426 526.16 cv
99.309 526.238 99.223 526.277 99.172 526.277 cv
99.137 526.277 99.105 526.27 99.082 526.25 cv
99.051 526.234 99.031 526.203 99.016 526.16 cv
99 526.121 98.984 526.066 98.977 525.996 cv
98.965 525.93 98.961 525.848 98.965 525.75 cv
98.961 525.684 98.965 525.625 98.973 525.574 cv
98.977 525.523 98.984 525.48 98.996 525.441 cv
99.004 525.406 99.02 525.371 99.039 525.34 cv
99.059 525.309 99.094 525.27 99.152 525.219 cv
99.203 525.172 99.297 525.105 99.434 525.023 cv
99.566 524.941 99.738 524.863 99.941 524.781 cv
100.145 524.703 100.367 524.633 100.613 524.578 cv
100.855 524.523 101.113 524.496 101.387 524.496 cv
101.813 524.496 102.188 524.559 102.512 524.68 cv
102.832 524.801 103.098 524.965 103.313 525.176 cv
103.523 525.387 103.684 525.633 103.789 525.906 cv
103.895 526.187 103.949 526.484 103.949 526.797 cv
103.949 527.086 103.922 527.367 103.871 527.645 cv
103.82 527.93 103.715 528.234 103.555 528.559 cv
103.391 528.887 103.156 529.25 102.852 529.648 cv
102.543 530.051 102.137 530.512 101.633 531.027 cv
100.227 532.496 li
104.086 532.496 li
104.117 532.5 104.152 532.512 104.191 532.527 cv
104.223 532.551 104.254 532.582 104.281 532.621 cv
104.305 532.664 104.324 532.715 104.336 532.773 cv
104.348 532.84 104.352 532.91 104.355 532.988 cv
cp
f
175.051 530.973 mo
175.047 531.125 175.023 531.246 174.98 531.332 cv
174.934 531.422 174.871 531.465 174.789 531.461 cv
173.789 531.461 li
173.789 533.324 li
173.789 533.363 173.777 533.395 173.762 533.418 cv
173.738 533.445 173.707 533.465 173.664 533.484 cv
173.613 533.5 173.551 533.512 173.48 533.523 cv
173.402 533.531 173.309 533.535 173.191 533.539 cv
173.074 533.535 172.977 533.531 172.906 533.523 cv
172.828 533.512 172.77 533.5 172.727 533.484 cv
172.68 533.465 172.648 533.445 172.633 533.418 cv
172.613 533.395 172.605 533.363 172.609 533.324 cv
172.609 531.461 li
168.98 531.461 li
168.922 531.465 168.879 531.457 168.844 531.441 cv
168.809 531.43 168.773 531.402 168.746 531.363 cv
168.715 531.328 168.695 531.277 168.684 531.207 cv
168.672 531.141 168.668 531.051 168.668 530.937 cv
168.668 530.855 168.668 530.777 168.676 530.707 cv
168.676 530.637 168.688 530.574 168.703 530.52 cv
168.715 530.465 168.73 530.41 168.758 530.355 cv
168.777 530.301 168.805 530.246 168.84 530.184 cv
172 524.797 li
172.02 524.762 172.055 524.73 172.102 524.703 cv
172.145 524.676 172.199 524.652 172.273 524.633 cv
172.34 524.617 172.426 524.605 172.531 524.594 cv
172.633 524.59 172.754 524.586 172.895 524.582 cv
173.043 524.586 173.18 524.59 173.297 524.602 cv
173.41 524.613 173.5 524.629 173.574 524.645 cv
173.641 524.664 173.695 524.687 173.734 524.719 cv
173.77 524.75 173.789 524.785 173.789 524.824 cv
173.789 530.488 li
174.789 530.488 li
174.863 530.492 174.926 530.531 174.977 530.609 cv
175.023 530.691 175.047 530.812 175.051 530.973 cv
cp
172.609 525.621 mo
172.598 525.621 li
169.746 530.488 li
172.609 530.488 li
cp
f
245.223 530.625 mo
245.223 531.016 245.16 531.395 245.043 531.754 cv
244.918 532.121 244.734 532.437 244.492 532.711 cv
244.242 532.988 243.93 533.211 243.555 533.375 cv
243.172 533.543 242.727 533.625 242.211 533.625 cv
241.84 533.625 241.512 533.582 241.23 533.488 cv
240.945 533.402 240.699 533.27 240.488 533.098 cv
240.277 532.93 240.102 532.723 239.965 532.477 cv
239.824 532.23 239.711 531.949 239.629 531.633 cv
239.543 531.32 239.484 530.977 239.449 530.598 cv
239.41 530.227 239.391 529.824 239.395 529.391 cv
239.391 529.012 239.41 528.629 239.453 528.238 cv
239.492 527.855 239.566 527.48 239.672 527.113 cv
239.777 526.754 239.922 526.414 240.102 526.098 cv
240.281 525.781 240.508 525.504 240.781 525.27 cv
241.055 525.035 241.379 524.848 241.758 524.707 cv
242.137 524.57 242.578 524.504 243.082 524.5 cv
243.25 524.504 243.422 524.512 243.594 524.531 cv
243.766 524.555 243.926 524.586 244.074 524.617 cv
244.223 524.656 244.344 524.691 244.445 524.73 cv
244.543 524.77 244.609 524.805 244.645 524.828 cv
244.672 524.855 244.695 524.883 244.715 524.91 cv
244.73 524.941 244.746 524.973 244.754 525.008 cv
244.762 525.043 244.766 525.082 244.773 525.125 cv
244.773 525.168 244.777 525.223 244.781 525.285 cv
244.777 525.371 244.777 525.441 244.777 525.496 cv
244.773 525.559 244.762 525.605 244.75 525.641 cv
244.73 525.68 244.711 525.707 244.688 525.723 cv
244.66 525.742 244.629 525.75 244.59 525.75 cv
244.539 525.75 244.469 525.734 244.383 525.703 cv
244.293 525.672 244.188 525.637 244.066 525.594 cv
243.941 525.559 243.793 525.523 243.617 525.488 cv
243.441 525.461 243.238 525.445 243.008 525.441 cv
242.578 525.445 242.211 525.531 241.906 525.703 cv
241.602 525.875 241.352 526.109 241.156 526.402 cv
240.961 526.695 240.816 527.035 240.727 527.418 cv
240.629 527.809 240.574 528.211 240.566 528.629 cv
240.684 528.562 240.82 528.496 240.969 528.426 cv
241.117 528.359 241.277 528.297 241.453 528.238 cv
241.629 528.187 241.816 528.141 242.012 528.105 cv
242.207 528.074 242.418 528.059 242.645 528.055 cv
243.121 528.059 243.523 528.125 243.855 528.25 cv
244.184 528.383 244.449 528.562 244.656 528.793 cv
244.855 529.023 245 529.293 245.09 529.605 cv
245.176 529.918 245.223 530.258 245.223 530.625 cv
cp
244.027 530.734 mo
244.027 530.473 244 530.23 243.949 530.012 cv
243.895 529.797 243.805 529.613 243.684 529.457 cv
243.559 529.309 243.395 529.191 243.191 529.109 cv
242.98 529.027 242.727 528.984 242.43 528.984 cv
242.258 528.984 242.09 529 241.922 529.031 cv
241.75 529.062 241.586 529.105 241.43 529.152 cv
241.27 529.207 241.121 529.27 240.98 529.34 cv
240.836 529.414 240.703 529.488 240.586 529.566 cv
240.582 530.16 240.621 530.656 240.699 531.051 cv
240.773 531.449 240.883 531.766 241.027 532.004 cv
241.172 532.246 241.352 532.418 241.566 532.52 cv
241.781 532.625 242.031 532.676 242.32 532.672 cv
242.609 532.676 242.863 532.621 243.078 532.508 cv
243.293 532.402 243.469 532.254 243.613 532.066 cv
243.754 531.883 243.859 531.676 243.926 531.445 cv
243.992 531.215 244.027 530.98 244.027 530.734 cv
cp
f
315.52 531.219 mo
315.52 531.605 315.449 531.949 315.313 532.246 cv
315.176 532.551 314.98 532.801 314.723 533.004 cv
314.465 533.211 314.145 533.367 313.766 533.469 cv
313.383 533.574 312.949 533.625 312.465 533.625 cv
312.004 533.625 311.594 533.578 311.234 533.484 cv
310.871 533.391 310.566 533.25 310.316 533.059 cv
310.066 532.875 309.875 532.645 309.742 532.367 cv
309.609 532.094 309.543 531.781 309.543 531.426 cv
309.543 531.152 309.586 530.895 309.68 530.66 cv
309.766 530.426 309.898 530.211 310.074 530.016 cv
310.242 529.82 310.453 529.637 310.707 529.461 cv
310.957 529.293 311.242 529.129 311.559 528.973 cv
311.285 528.832 311.043 528.684 310.832 528.523 cv
310.621 528.367 310.441 528.195 310.297 528.008 cv
310.148 527.824 310.039 527.629 309.965 527.418 cv
309.887 527.211 309.848 526.98 309.852 526.73 cv
309.848 526.422 309.902 526.129 310.02 525.855 cv
310.129 525.586 310.301 525.352 310.527 525.148 cv
310.754 524.949 311.039 524.789 311.391 524.672 cv
311.734 524.555 312.145 524.496 312.613 524.496 cv
313.059 524.496 313.445 524.551 313.773 524.656 cv
314.102 524.766 314.371 524.91 314.582 525.094 cv
314.793 525.281 314.949 525.5 315.055 525.75 cv
315.152 526 315.203 526.27 315.207 526.559 cv
315.203 526.793 315.164 527.02 315.094 527.23 cv
315.016 527.449 314.906 527.652 314.758 527.84 cv
314.609 528.035 314.43 528.215 314.219 528.379 cv
314.008 528.551 313.766 528.707 313.492 528.848 cv
313.813 529.012 314.098 529.176 314.355 529.344 cv
314.605 529.512 314.82 529.691 314.996 529.887 cv
315.164 530.082 315.293 530.289 315.387 530.504 cv
315.473 530.723 315.52 530.961 315.52 531.219 cv
cp
314.039 526.668 mo
314.035 526.48 314.004 526.305 313.938 526.148 cv
313.871 525.992 313.773 525.859 313.648 525.75 cv
313.52 525.641 313.359 525.559 313.172 525.5 cv
312.977 525.445 312.762 525.418 312.523 525.414 cv
312.027 525.418 311.652 525.527 311.402 525.75 cv
311.145 525.977 311.02 526.285 311.023 526.668 cv
311.02 526.848 311.051 527.012 311.113 527.164 cv
311.176 527.32 311.27 527.465 311.402 527.602 cv
311.527 527.738 311.691 527.871 311.895 528 cv
312.09 528.133 312.328 528.27 312.605 528.41 cv
313.066 528.176 313.422 527.914 313.668 527.621 cv
313.914 527.336 314.035 527.02 314.039 526.668 cv
cp
314.328 531.344 mo
314.324 531.137 314.285 530.945 314.211 530.773 cv
314.129 530.605 314.012 530.445 313.855 530.293 cv
313.699 530.145 313.5 530 313.266 529.859 cv
313.027 529.723 312.758 529.578 312.449 529.426 cv
312.16 529.57 311.906 529.711 311.691 529.852 cv
311.473 529.992 311.293 530.141 311.156 530.289 cv
311.016 530.445 310.91 530.602 310.84 530.766 cv
310.766 530.934 310.73 531.117 310.734 531.316 cv
310.73 531.762 310.883 532.105 311.191 532.344 cv
311.492 532.59 311.945 532.711 312.551 532.707 cv
313.133 532.711 313.578 532.59 313.879 532.34 cv
314.176 532.098 314.324 531.766 314.328 531.344 cv
cp
f
382.125 533.031 mo
382.121 533.121 382.113 533.191 382.102 533.25 cv
382.086 533.312 382.066 533.363 382.047 533.395 cv
382.023 533.434 382 533.457 381.969 533.473 cv
381.938 533.488 381.906 533.496 381.879 533.496 cv
377.242 533.496 li
377.207 533.496 377.18 533.488 377.152 533.473 cv
377.125 533.457 377.098 533.434 377.074 533.395 cv
377.047 533.363 377.027 533.312 377.016 533.25 cv
377 533.191 376.992 533.121 376.996 533.031 cv
376.992 532.953 377 532.879 377.016 532.816 cv
377.027 532.758 377.043 532.711 377.066 532.672 cv
377.082 532.637 377.109 532.605 377.141 532.582 cv
377.172 532.562 377.203 532.555 377.242 532.551 cv
379.094 532.551 li
379.094 525.805 li
377.379 526.824 li
377.289 526.875 377.219 526.902 377.172 526.91 cv
377.117 526.918 377.074 526.91 377.043 526.879 cv
377.008 526.852 376.988 526.801 376.977 526.73 cv
376.965 526.664 376.957 526.578 376.961 526.469 cv
376.957 526.395 376.961 526.328 376.973 526.27 cv
376.977 526.219 376.988 526.172 377.004 526.133 cv
377.016 526.098 377.035 526.066 377.059 526.039 cv
377.082 526.012 377.113 525.984 377.16 525.957 cv
379.203 524.645 li
379.219 524.633 379.238 524.621 379.27 524.613 cv
379.293 524.605 379.328 524.598 379.375 524.586 cv
379.414 524.578 379.465 524.57 379.52 524.566 cv
379.574 524.566 379.641 524.566 379.727 524.562 cv
379.832 524.566 379.926 524.57 380 524.578 cv
380.07 524.586 380.125 524.602 380.172 524.617 cv
380.211 524.637 380.238 524.656 380.254 524.68 cv
380.262 524.707 380.27 524.73 380.273 524.754 cv
380.273 532.551 li
381.879 532.551 li
381.914 532.555 381.949 532.562 381.98 532.582 cv
382.012 532.605 382.035 532.637 382.059 532.672 cv
382.074 532.711 382.09 532.758 382.105 532.816 cv
382.113 532.879 382.121 532.953 382.125 533.031 cv
cp
f
389.48 529.039 mo
389.477 529.723 389.426 530.344 389.32 530.906 cv
389.211 531.469 389.031 531.953 388.785 532.355 cv
388.531 532.762 388.203 533.074 387.805 533.293 cv
387.398 533.516 386.906 533.625 386.32 533.625 cv
385.762 533.625 385.289 533.527 384.91 533.328 cv
384.527 533.133 384.223 532.84 383.988 532.453 cv
383.754 532.066 383.586 531.594 383.492 531.027 cv
383.391 530.465 383.344 529.816 383.344 529.082 cv
383.344 528.41 383.398 527.789 383.508 527.223 cv
383.617 526.66 383.793 526.176 384.043 525.77 cv
384.285 525.367 384.609 525.055 385.016 524.828 cv
385.414 524.609 385.91 524.496 386.5 524.496 cv
387.059 524.496 387.531 524.598 387.914 524.793 cv
388.297 524.996 388.602 525.289 388.836 525.672 cv
389.066 526.062 389.234 526.535 389.332 527.098 cv
389.43 527.66 389.477 528.309 389.48 529.039 cv
cp
388.273 529.121 mo
388.27 528.68 388.254 528.281 388.227 527.93 cv
388.191 527.578 388.145 527.27 388.086 527 cv
388.02 526.73 387.941 526.5 387.844 526.305 cv
387.746 526.113 387.629 525.953 387.492 525.824 cv
387.352 525.699 387.191 525.605 387.02 525.547 cv
386.84 525.492 386.645 525.465 386.43 525.461 cv
386.039 525.465 385.723 525.555 385.484 525.738 cv
385.238 525.922 385.047 526.176 384.91 526.492 cv
384.77 526.812 384.676 527.184 384.625 527.613 cv
384.574 528.043 384.551 528.508 384.551 529 cv
384.551 529.664 384.582 530.227 384.652 530.687 cv
384.719 531.156 384.828 531.535 384.98 531.824 cv
385.125 532.121 385.316 532.332 385.547 532.461 cv
385.777 532.598 386.059 532.664 386.391 532.66 cv
386.645 532.664 386.867 532.625 387.063 532.539 cv
387.254 532.461 387.422 532.34 387.563 532.184 cv
387.703 532.031 387.816 531.848 387.91 531.633 cv
387.996 531.418 388.07 531.18 388.129 530.918 cv
388.18 530.66 388.219 530.379 388.242 530.074 cv
388.262 529.77 388.27 529.453 388.273 529.121 cv
cp
f
452.445 533.031 mo
452.441 533.121 452.434 533.191 452.422 533.25 cv
452.406 533.312 452.387 533.363 452.367 533.395 cv
452.344 533.434 452.32 533.457 452.289 533.473 cv
452.258 533.488 452.227 533.496 452.199 533.496 cv
447.563 533.496 li
447.527 533.496 447.5 533.488 447.473 533.473 cv
447.445 533.457 447.418 533.434 447.395 533.395 cv
447.367 533.363 447.348 533.312 447.336 533.25 cv
447.32 533.191 447.313 533.121 447.316 533.031 cv
447.313 532.953 447.32 532.879 447.336 532.816 cv
447.348 532.758 447.363 532.711 447.387 532.672 cv
447.402 532.637 447.43 532.605 447.461 532.582 cv
447.492 532.562 447.523 532.555 447.563 532.551 cv
449.414 532.551 li
449.414 525.805 li
447.699 526.824 li
447.609 526.875 447.539 526.902 447.492 526.91 cv
447.438 526.918 447.395 526.91 447.363 526.879 cv
447.328 526.852 447.309 526.801 447.297 526.73 cv
447.285 526.664 447.277 526.578 447.281 526.469 cv
447.277 526.395 447.281 526.328 447.293 526.27 cv
447.297 526.219 447.309 526.172 447.324 526.133 cv
447.336 526.098 447.355 526.066 447.379 526.039 cv
447.402 526.012 447.434 525.984 447.48 525.957 cv
449.523 524.645 li
449.539 524.633 449.559 524.621 449.59 524.613 cv
449.613 524.605 449.648 524.598 449.695 524.586 cv
449.734 524.578 449.785 524.57 449.84 524.566 cv
449.895 524.566 449.961 524.566 450.047 524.562 cv
450.152 524.566 450.246 524.57 450.32 524.578 cv
450.391 524.586 450.445 524.602 450.492 524.617 cv
450.531 524.637 450.559 524.656 450.574 524.68 cv
450.582 524.707 450.59 524.73 450.594 524.754 cv
450.594 532.551 li
452.199 532.551 li
452.234 532.555 452.27 532.562 452.301 532.582 cv
452.332 532.605 452.355 532.637 452.379 532.672 cv
452.395 532.711 452.41 532.758 452.426 532.816 cv
452.434 532.879 452.441 532.953 452.445 533.031 cv
cp
f
459.508 532.988 mo
459.504 533.074 459.5 533.148 459.488 533.211 cv
459.477 533.277 459.461 533.332 459.441 533.371 cv
459.418 533.418 459.391 533.449 459.359 533.465 cv
459.324 533.488 459.285 533.496 459.246 533.496 cv
454.344 533.496 li
454.281 533.496 454.223 533.488 454.176 533.473 cv
454.125 533.457 454.086 533.434 454.051 533.395 cv
454.016 533.363 453.988 533.309 453.977 533.238 cv
453.957 533.168 453.949 533.082 453.953 532.98 cv
453.949 532.891 453.953 532.812 453.961 532.742 cv
453.965 532.676 453.98 532.617 454.008 532.562 cv
454.031 532.512 454.063 532.457 454.098 532.402 cv
454.133 532.352 454.176 532.297 454.234 532.234 cv
456.008 530.41 li
456.418 529.992 456.746 529.617 456.996 529.281 cv
457.242 528.953 457.434 528.648 457.566 528.371 cv
457.699 528.098 457.785 527.848 457.832 527.621 cv
457.871 527.398 457.895 527.187 457.895 526.992 cv
457.895 526.797 457.859 526.613 457.793 526.434 cv
457.727 526.262 457.633 526.105 457.508 525.969 cv
457.383 525.84 457.227 525.734 457.039 525.652 cv
456.852 525.578 456.633 525.539 456.387 525.535 cv
456.098 525.539 455.84 525.578 455.613 525.652 cv
455.383 525.734 455.184 525.82 455.012 525.906 cv
454.84 526 454.695 526.082 454.578 526.16 cv
454.461 526.238 454.375 526.277 454.324 526.277 cv
454.289 526.277 454.258 526.27 454.234 526.25 cv
454.203 526.234 454.184 526.203 454.168 526.16 cv
454.152 526.121 454.137 526.066 454.129 525.996 cv
454.117 525.93 454.113 525.848 454.117 525.75 cv
454.113 525.684 454.117 525.625 454.125 525.574 cv
454.129 525.523 454.137 525.48 454.148 525.441 cv
454.156 525.406 454.172 525.371 454.191 525.34 cv
454.211 525.309 454.246 525.27 454.305 525.219 cv
454.355 525.172 454.449 525.105 454.586 525.023 cv
454.719 524.941 454.891 524.863 455.094 524.781 cv
455.297 524.703 455.52 524.633 455.766 524.578 cv
456.008 524.523 456.266 524.496 456.539 524.496 cv
456.965 524.496 457.34 524.559 457.664 524.68 cv
457.984 524.801 458.25 524.965 458.465 525.176 cv
458.676 525.387 458.836 525.633 458.941 525.906 cv
459.047 526.187 459.102 526.484 459.102 526.797 cv
459.102 527.086 459.074 527.367 459.023 527.645 cv
458.973 527.93 458.867 528.234 458.707 528.559 cv
458.543 528.887 458.309 529.25 458.004 529.648 cv
457.695 530.051 457.289 530.512 456.785 531.027 cv
455.379 532.496 li
459.238 532.496 li
459.27 532.5 459.305 532.512 459.344 532.527 cv
459.375 532.551 459.406 532.582 459.434 532.621 cv
459.457 532.664 459.477 532.715 459.488 532.773 cv
459.5 532.84 459.504 532.91 459.508 532.988 cv
cp
f
522.766 533.031 mo
522.762 533.121 522.754 533.191 522.742 533.25 cv
522.727 533.312 522.707 533.363 522.688 533.395 cv
522.664 533.434 522.641 533.457 522.609 533.473 cv
522.578 533.488 522.547 533.496 522.52 533.496 cv
517.883 533.496 li
517.848 533.496 517.82 533.488 517.793 533.473 cv
517.766 533.457 517.738 533.434 517.715 533.395 cv
517.688 533.363 517.668 533.312 517.656 533.25 cv
517.641 533.191 517.633 533.121 517.637 533.031 cv
517.633 532.953 517.641 532.879 517.656 532.816 cv
517.668 532.758 517.684 532.711 517.707 532.672 cv
517.723 532.637 517.75 532.605 517.781 532.582 cv
517.813 532.562 517.844 532.555 517.883 532.551 cv
519.734 532.551 li
519.734 525.805 li
518.02 526.824 li
517.93 526.875 517.859 526.902 517.813 526.91 cv
517.758 526.918 517.715 526.91 517.684 526.879 cv
517.648 526.852 517.629 526.801 517.617 526.73 cv
517.605 526.664 517.598 526.578 517.602 526.469 cv
517.598 526.395 517.602 526.328 517.613 526.27 cv
517.617 526.219 517.629 526.172 517.645 526.133 cv
517.656 526.098 517.676 526.066 517.699 526.039 cv
517.723 526.012 517.754 525.984 517.801 525.957 cv
519.844 524.645 li
519.859 524.633 519.879 524.621 519.91 524.613 cv
519.934 524.605 519.969 524.598 520.016 524.586 cv
520.055 524.578 520.105 524.57 520.16 524.566 cv
520.215 524.566 520.281 524.566 520.367 524.562 cv
520.473 524.566 520.566 524.57 520.641 524.578 cv
520.711 524.586 520.766 524.602 520.813 524.617 cv
520.852 524.637 520.879 524.656 520.895 524.68 cv
520.902 524.707 520.91 524.73 520.914 524.754 cv
520.914 532.551 li
522.52 532.551 li
522.555 532.555 522.59 532.562 522.621 532.582 cv
522.652 532.605 522.676 532.637 522.699 532.672 cv
522.715 532.711 522.73 532.758 522.746 532.816 cv
522.754 532.879 522.762 532.953 522.766 533.031 cv
cp
f
530.199 530.973 mo
530.195 531.125 530.172 531.246 530.129 531.332 cv
530.082 531.422 530.02 531.465 529.938 531.461 cv
528.938 531.461 li
528.938 533.324 li
528.938 533.363 528.926 533.395 528.91 533.418 cv
528.887 533.445 528.855 533.465 528.813 533.484 cv
528.762 533.5 528.699 533.512 528.629 533.523 cv
528.551 533.531 528.457 533.535 528.34 533.539 cv
528.223 533.535 528.125 533.531 528.055 533.523 cv
527.977 533.512 527.918 533.5 527.875 533.484 cv
527.828 533.465 527.797 533.445 527.781 533.418 cv
527.762 533.395 527.754 533.363 527.758 533.324 cv
527.758 531.461 li
524.129 531.461 li
524.07 531.465 524.027 531.457 523.992 531.441 cv
523.957 531.43 523.922 531.402 523.895 531.363 cv
523.863 531.328 523.844 531.277 523.832 531.207 cv
523.82 531.141 523.816 531.051 523.816 530.937 cv
523.816 530.855 523.816 530.777 523.824 530.707 cv
523.824 530.637 523.836 530.574 523.852 530.52 cv
523.863 530.465 523.879 530.41 523.906 530.355 cv
523.926 530.301 523.953 530.246 523.988 530.184 cv
527.148 524.797 li
527.168 524.762 527.203 524.73 527.25 524.703 cv
527.293 524.676 527.348 524.652 527.422 524.633 cv
527.488 524.617 527.574 524.605 527.68 524.594 cv
527.781 524.59 527.902 524.586 528.043 524.582 cv
528.191 524.586 528.328 524.59 528.445 524.602 cv
528.559 524.613 528.648 524.629 528.723 524.645 cv
528.789 524.664 528.844 524.687 528.883 524.719 cv
528.918 524.75 528.938 524.785 528.938 524.824 cv
528.938 530.488 li
529.938 530.488 li
530.012 530.492 530.074 530.531 530.125 530.609 cv
530.172 530.691 530.195 530.812 530.199 530.973 cv
cp
527.758 525.621 mo
527.746 525.621 li
524.895 530.488 li
527.758 530.488 li
cp
f
593.086 533.031 mo
593.082 533.121 593.074 533.191 593.063 533.25 cv
593.047 533.312 593.027 533.363 593.008 533.395 cv
592.984 533.434 592.961 533.457 592.93 533.473 cv
592.898 533.488 592.867 533.496 592.84 533.496 cv
588.203 533.496 li
588.168 533.496 588.141 533.488 588.113 533.473 cv
588.086 533.457 588.059 533.434 588.035 533.395 cv
588.008 533.363 587.988 533.312 587.977 533.25 cv
587.961 533.191 587.953 533.121 587.957 533.031 cv
587.953 532.953 587.961 532.879 587.977 532.816 cv
587.988 532.758 588.004 532.711 588.027 532.672 cv
588.043 532.637 588.07 532.605 588.102 532.582 cv
588.133 532.562 588.164 532.555 588.203 532.551 cv
590.055 532.551 li
590.055 525.805 li
588.34 526.824 li
588.25 526.875 588.18 526.902 588.133 526.91 cv
588.078 526.918 588.035 526.91 588.004 526.879 cv
587.969 526.852 587.949 526.801 587.938 526.73 cv
587.926 526.664 587.918 526.578 587.922 526.469 cv
587.918 526.395 587.922 526.328 587.934 526.27 cv
587.938 526.219 587.949 526.172 587.965 526.133 cv
587.977 526.098 587.996 526.066 588.02 526.039 cv
588.043 526.012 588.074 525.984 588.121 525.957 cv
590.164 524.645 li
590.18 524.633 590.199 524.621 590.23 524.613 cv
590.254 524.605 590.289 524.598 590.336 524.586 cv
590.375 524.578 590.426 524.57 590.48 524.566 cv
590.535 524.566 590.602 524.566 590.688 524.562 cv
590.793 524.566 590.887 524.57 590.961 524.578 cv
591.031 524.586 591.086 524.602 591.133 524.617 cv
591.172 524.637 591.199 524.656 591.215 524.68 cv
591.223 524.707 591.23 524.73 591.234 524.754 cv
591.234 532.551 li
592.84 532.551 li
592.875 532.555 592.91 532.562 592.941 532.582 cv
592.973 532.605 592.996 532.637 593.02 532.672 cv
593.035 532.711 593.051 532.758 593.066 532.816 cv
593.074 532.879 593.082 532.953 593.086 533.031 cv
cp
f
600.371 530.625 mo
600.371 531.016 600.309 531.395 600.191 531.754 cv
600.066 532.121 599.883 532.437 599.641 532.711 cv
599.391 532.988 599.078 533.211 598.703 533.375 cv
598.32 533.543 597.875 533.625 597.359 533.625 cv
596.988 533.625 596.66 533.582 596.379 533.488 cv
596.094 533.402 595.848 533.27 595.637 533.098 cv
595.426 532.93 595.25 532.723 595.113 532.477 cv
594.973 532.23 594.859 531.949 594.777 531.633 cv
594.691 531.32 594.633 530.977 594.598 530.598 cv
594.559 530.227 594.539 529.824 594.543 529.391 cv
594.539 529.012 594.559 528.629 594.602 528.238 cv
594.641 527.855 594.715 527.48 594.82 527.113 cv
594.926 526.754 595.07 526.414 595.25 526.098 cv
595.43 525.781 595.656 525.504 595.93 525.27 cv
596.203 525.035 596.527 524.848 596.906 524.707 cv
597.285 524.57 597.727 524.504 598.23 524.5 cv
598.398 524.504 598.57 524.512 598.742 524.531 cv
598.914 524.555 599.074 524.586 599.223 524.617 cv
599.371 524.656 599.492 524.691 599.594 524.73 cv
599.691 524.77 599.758 524.805 599.793 524.828 cv
599.82 524.855 599.844 524.883 599.863 524.91 cv
599.879 524.941 599.895 524.973 599.902 525.008 cv
599.91 525.043 599.914 525.082 599.922 525.125 cv
599.922 525.168 599.926 525.223 599.93 525.285 cv
599.926 525.371 599.926 525.441 599.926 525.496 cv
599.922 525.559 599.91 525.605 599.898 525.641 cv
599.879 525.68 599.859 525.707 599.836 525.723 cv
599.809 525.742 599.777 525.75 599.738 525.75 cv
599.688 525.75 599.617 525.734 599.531 525.703 cv
599.441 525.672 599.336 525.637 599.215 525.594 cv
599.09 525.559 598.941 525.523 598.766 525.488 cv
598.59 525.461 598.387 525.445 598.156 525.441 cv
597.727 525.445 597.359 525.531 597.055 525.703 cv
596.75 525.875 596.5 526.109 596.305 526.402 cv
596.109 526.695 595.965 527.035 595.875 527.418 cv
595.777 527.809 595.723 528.211 595.715 528.629 cv
595.832 528.562 595.969 528.496 596.117 528.426 cv
596.266 528.359 596.426 528.297 596.602 528.238 cv
596.777 528.187 596.965 528.141 597.16 528.105 cv
597.355 528.074 597.566 528.059 597.793 528.055 cv
598.27 528.059 598.672 528.125 599.004 528.25 cv
599.332 528.383 599.598 528.562 599.805 528.793 cv
600.004 529.023 600.148 529.293 600.238 529.605 cv
600.324 529.918 600.371 530.258 600.371 530.625 cv
cp
599.176 530.734 mo
599.176 530.473 599.148 530.23 599.098 530.012 cv
599.043 529.797 598.953 529.613 598.832 529.457 cv
598.707 529.309 598.543 529.191 598.34 529.109 cv
598.129 529.027 597.875 528.984 597.578 528.984 cv
597.406 528.984 597.238 529 597.07 529.031 cv
596.898 529.062 596.734 529.105 596.578 529.152 cv
596.418 529.207 596.27 529.27 596.129 529.34 cv
595.984 529.414 595.852 529.488 595.734 529.566 cv
595.73 530.16 595.77 530.656 595.848 531.051 cv
595.922 531.449 596.031 531.766 596.176 532.004 cv
596.32 532.246 596.5 532.418 596.715 532.52 cv
596.93 532.625 597.18 532.676 597.469 532.672 cv
597.758 532.676 598.012 532.621 598.227 532.508 cv
598.441 532.402 598.617 532.254 598.762 532.066 cv
598.902 531.883 599.008 531.676 599.074 531.445 cv
599.141 531.215 599.176 530.98 599.176 530.734 cv
cp
f
257.289 552.91 mo
257.285 553.016 257.27 553.105 257.234 553.176 cv
257.199 553.254 257.152 553.312 257.098 553.355 cv
257.039 553.406 256.977 553.441 256.91 553.457 cv
256.836 553.48 256.766 553.488 256.703 553.488 cv
256.258 553.488 li
256.117 553.488 255.996 553.477 255.891 553.445 cv
255.785 553.422 255.688 553.367 255.594 553.289 cv
255.5 553.215 255.406 553.113 255.313 552.98 cv
255.219 552.852 255.117 552.687 255.012 552.484 cv
251.938 546.746 li
251.773 546.453 251.609 546.145 251.449 545.816 cv
251.281 545.496 251.129 545.18 250.992 544.871 cv
250.977 544.871 li
250.984 545.246 250.992 545.629 251 546.016 cv
251.004 546.406 251.004 546.793 251.008 547.176 cv
251.008 553.262 li
251.004 553.301 250.992 553.336 250.973 553.367 cv
250.949 553.402 250.914 553.43 250.863 553.445 cv
250.809 553.465 250.738 553.477 250.656 553.492 cv
250.57 553.504 250.465 553.512 250.336 553.512 cv
250.199 553.512 250.09 553.504 250.008 553.492 cv
249.922 553.477 249.855 553.465 249.809 553.445 cv
249.758 553.43 249.723 553.402 249.699 553.367 cv
249.676 553.336 249.664 553.301 249.668 553.262 cv
249.668 543.957 li
249.664 543.75 249.723 543.602 249.844 543.512 cv
249.961 543.426 250.09 543.383 250.23 543.379 cv
250.891 543.379 li
251.043 543.383 251.176 543.395 251.281 543.418 cv
251.383 543.445 251.477 543.488 251.563 543.547 cv
251.645 543.609 251.723 543.691 251.805 543.797 cv
251.879 543.906 251.961 544.043 252.047 544.199 cv
254.414 548.625 li
254.559 548.898 254.699 549.164 254.836 549.418 cv
254.969 549.676 255.098 549.93 255.227 550.176 cv
255.348 550.43 255.473 550.676 255.598 550.914 cv
255.719 551.156 255.84 551.398 255.965 551.641 cv
255.973 551.641 li
255.961 551.234 255.953 550.805 255.953 550.359 cv
255.945 549.914 255.945 549.488 255.949 549.078 cv
255.949 543.605 li
255.945 543.57 255.957 543.535 255.98 543.504 cv
256.004 543.473 256.039 543.445 256.094 543.422 cv
256.141 543.398 256.211 543.383 256.297 543.371 cv
256.383 543.363 256.492 543.359 256.633 543.355 cv
256.75 543.359 256.855 543.363 256.945 543.371 cv
257.031 543.383 257.098 543.398 257.148 543.422 cv
257.195 543.445 257.23 543.473 257.254 543.504 cv
257.273 543.535 257.285 543.57 257.289 543.605 cv
cp
f
265.84 553.27 mo
265.836 553.316 265.828 553.352 265.813 553.375 cv
265.793 553.406 265.758 553.43 265.715 553.449 cv
265.668 553.469 265.609 553.48 265.535 553.496 cv
265.457 553.504 265.363 553.512 265.258 553.512 cv
265.133 553.512 265.035 553.504 264.965 553.496 cv
264.887 553.48 264.828 553.469 264.785 553.449 cv
264.738 553.43 264.707 553.406 264.695 553.375 cv
264.676 553.352 264.668 553.316 264.672 553.27 cv
264.672 552.344 li
264.27 552.789 263.875 553.109 263.488 553.309 cv
263.094 553.512 262.699 553.609 262.305 553.613 cv
261.832 553.609 261.438 553.535 261.121 553.379 cv
260.801 553.227 260.543 553.016 260.348 552.746 cv
260.145 552.48 260.004 552.168 259.922 551.809 cv
259.832 551.453 259.789 551.02 259.793 550.512 cv
259.793 546.258 li
259.789 546.219 259.797 546.184 259.82 546.152 cv
259.836 546.125 259.871 546.102 259.926 546.074 cv
259.973 546.055 260.043 546.039 260.129 546.027 cv
260.211 546.023 260.313 546.02 260.441 546.016 cv
260.563 546.02 260.668 546.023 260.754 546.027 cv
260.836 546.039 260.902 546.055 260.949 546.074 cv
260.996 546.102 261.031 546.125 261.055 546.152 cv
261.074 546.184 261.082 546.219 261.086 546.258 cv
261.086 550.34 li
261.082 550.754 261.113 551.082 261.176 551.328 cv
261.234 551.574 261.324 551.785 261.449 551.957 cv
261.566 552.137 261.723 552.27 261.914 552.363 cv
262.098 552.461 262.316 552.512 262.566 552.508 cv
262.887 552.512 263.207 552.395 263.531 552.164 cv
263.848 551.937 264.188 551.602 264.547 551.156 cv
264.547 546.258 li
264.547 546.219 264.555 546.184 264.574 546.152 cv
264.59 546.125 264.625 546.102 264.68 546.074 cv
264.73 546.055 264.797 546.039 264.879 546.027 cv
264.957 546.023 265.063 546.02 265.195 546.016 cv
265.316 546.02 265.422 546.023 265.508 546.027 cv
265.59 546.039 265.652 546.055 265.699 546.074 cv
265.742 546.102 265.777 546.125 265.805 546.152 cv
265.824 546.184 265.836 546.219 265.84 546.258 cv
cp
f
278.617 553.27 mo
278.613 553.316 278.605 553.352 278.586 553.375 cv
278.563 553.406 278.527 553.43 278.484 553.449 cv
278.434 553.469 278.367 553.48 278.289 553.496 cv
278.203 553.504 278.102 553.512 277.977 553.512 cv
277.844 553.512 277.734 553.504 277.656 553.496 cv
277.57 553.48 277.504 553.469 277.457 553.449 cv
277.402 553.43 277.367 553.406 277.352 553.375 cv
277.328 553.352 277.32 553.316 277.32 553.27 cv
277.32 549.008 li
277.32 548.715 277.293 548.445 277.242 548.199 cv
277.188 547.957 277.105 547.746 276.992 547.566 cv
276.879 547.391 276.734 547.254 276.559 547.16 cv
276.379 547.066 276.168 547.02 275.934 547.02 cv
275.637 547.02 275.34 547.137 275.043 547.363 cv
274.738 547.598 274.41 547.93 274.055 548.367 cv
274.055 553.27 li
274.051 553.316 274.039 553.352 274.023 553.375 cv
274 553.406 273.969 553.43 273.922 553.449 cv
273.871 553.469 273.805 553.48 273.723 553.496 cv
273.637 553.504 273.531 553.512 273.41 553.512 cv
273.289 553.512 273.188 553.504 273.102 553.496 cv
273.016 553.48 272.945 553.469 272.898 553.449 cv
272.844 553.43 272.813 553.406 272.797 553.375 cv
272.777 553.352 272.766 553.316 272.77 553.27 cv
272.77 549.008 li
272.766 548.715 272.738 548.445 272.684 548.199 cv
272.625 547.957 272.539 547.746 272.426 547.566 cv
272.313 547.391 272.168 547.254 271.996 547.16 cv
271.816 547.066 271.609 547.02 271.375 547.02 cv
271.074 547.02 270.777 547.137 270.477 547.363 cv
270.176 547.598 269.848 547.93 269.496 548.367 cv
269.496 553.27 li
269.492 553.316 269.48 553.352 269.465 553.375 cv
269.441 553.406 269.41 553.43 269.363 553.449 cv
269.316 553.469 269.25 553.48 269.172 553.496 cv
269.086 553.504 268.98 553.512 268.852 553.512 cv
268.723 553.512 268.617 553.504 268.539 553.496 cv
268.453 553.48 268.387 553.469 268.34 553.449 cv
268.285 553.43 268.254 553.406 268.238 553.375 cv
268.219 553.352 268.207 553.316 268.211 553.27 cv
268.211 546.258 li
268.207 546.219 268.215 546.184 268.234 546.152 cv
268.246 546.125 268.277 546.102 268.328 546.074 cv
268.371 546.055 268.434 546.039 268.508 546.027 cv
268.578 546.023 268.672 546.02 268.797 546.016 cv
268.906 546.02 269.004 546.023 269.082 546.027 cv
269.156 546.039 269.215 546.055 269.258 546.074 cv
269.297 546.102 269.324 546.125 269.344 546.152 cv
269.359 546.184 269.367 546.219 269.371 546.258 cv
269.371 547.184 li
269.762 546.742 270.145 546.422 270.52 546.215 cv
270.887 546.012 271.266 545.906 271.648 545.906 cv
271.938 545.906 272.195 545.941 272.43 546.008 cv
272.656 546.078 272.863 546.172 273.043 546.293 cv
273.219 546.414 273.367 546.559 273.496 546.727 cv
273.617 546.898 273.723 547.09 273.809 547.293 cv
274.039 547.043 274.262 546.828 274.473 546.648 cv
274.684 546.477 274.887 546.332 275.082 546.219 cv
275.277 546.113 275.465 546.035 275.648 545.98 cv
275.832 545.934 276.02 545.906 276.207 545.906 cv
276.66 545.906 277.039 545.988 277.344 546.145 cv
277.648 546.309 277.895 546.52 278.09 546.781 cv
278.277 547.047 278.414 547.355 278.496 547.711 cv
278.574 548.066 278.613 548.441 278.617 548.836 cv
cp
f
287.414 549.668 mo
287.41 550.277 287.344 550.828 287.215 551.312 cv
287.078 551.801 286.883 552.215 286.629 552.555 cv
286.371 552.898 286.055 553.16 285.684 553.34 cv
285.309 553.523 284.883 553.609 284.398 553.613 cv
284.172 553.609 283.965 553.59 283.777 553.547 cv
283.59 553.5 283.402 553.43 283.223 553.332 cv
283.035 553.234 282.855 553.109 282.676 552.957 cv
282.492 552.809 282.301 552.629 282.102 552.414 cv
282.102 553.27 li
282.102 553.316 282.09 553.352 282.07 553.379 cv
282.047 553.414 282.012 553.437 281.969 553.453 cv
281.918 553.469 281.859 553.48 281.793 553.496 cv
281.719 553.504 281.629 553.512 281.523 553.512 cv
281.414 553.512 281.328 553.504 281.258 553.496 cv
281.184 553.48 281.121 553.469 281.078 553.453 cv
281.027 553.437 280.996 553.414 280.984 553.379 cv
280.965 553.352 280.957 553.316 280.961 553.27 cv
280.961 542.859 li
280.957 542.82 280.969 542.785 280.988 542.75 cv
281.004 542.723 281.035 542.695 281.09 542.672 cv
281.137 542.652 281.203 542.637 281.289 542.625 cv
281.367 542.617 281.473 542.613 281.602 542.609 cv
281.73 542.613 281.836 542.617 281.922 542.625 cv
282 542.637 282.066 542.652 282.113 542.672 cv
282.16 542.695 282.191 542.723 282.215 542.75 cv
282.23 542.785 282.242 542.82 282.246 542.859 cv
282.246 547.059 li
282.453 546.848 282.656 546.668 282.852 546.523 cv
283.047 546.379 283.234 546.262 283.422 546.168 cv
283.605 546.082 283.793 546.016 283.984 545.969 cv
284.168 545.93 284.367 545.906 284.578 545.906 cv
285.082 545.906 285.516 546.008 285.883 546.211 cv
286.242 546.414 286.535 546.687 286.762 547.023 cv
286.984 547.367 287.152 547.766 287.258 548.223 cv
287.359 548.68 287.41 549.16 287.414 549.668 cv
cp
286.082 549.816 mo
286.078 549.461 286.051 549.113 286 548.773 cv
285.941 548.437 285.848 548.141 285.711 547.879 cv
285.574 547.621 285.395 547.41 285.172 547.25 cv
284.945 547.094 284.664 547.016 284.332 547.012 cv
284.164 547.016 284 547.039 283.84 547.082 cv
283.676 547.133 283.512 547.211 283.344 547.316 cv
283.176 547.43 283 547.57 282.824 547.738 cv
282.641 547.914 282.449 548.129 282.246 548.383 cv
282.246 551.18 li
282.602 551.613 282.941 551.945 283.266 552.168 cv
283.59 552.398 283.926 552.512 284.277 552.508 cv
284.598 552.512 284.875 552.434 285.109 552.273 cv
285.336 552.121 285.523 551.914 285.668 551.652 cv
285.813 551.398 285.918 551.109 285.984 550.789 cv
286.047 550.473 286.078 550.148 286.082 549.816 cv
cp
f
295.324 549.461 mo
295.32 549.664 295.27 549.805 295.172 549.891 cv
295.066 549.977 294.949 550.02 294.824 550.02 cv
290.207 550.02 li
290.203 550.41 290.242 550.762 290.324 551.074 cv
290.398 551.387 290.531 551.656 290.715 551.875 cv
290.895 552.102 291.129 552.273 291.426 552.391 cv
291.715 552.516 292.074 552.574 292.5 552.57 cv
292.832 552.574 293.129 552.547 293.391 552.488 cv
293.652 552.437 293.879 552.375 294.07 552.305 cv
294.258 552.238 294.414 552.18 294.539 552.121 cv
294.66 552.07 294.754 552.043 294.816 552.039 cv
294.852 552.043 294.883 552.051 294.914 552.066 cv
294.941 552.086 294.965 552.113 294.984 552.148 cv
294.996 552.187 295.008 552.238 295.02 552.301 cv
295.023 552.367 295.027 552.445 295.031 552.539 cv
295.027 552.609 295.023 552.668 295.023 552.715 cv
295.016 552.762 295.012 552.805 295.004 552.844 cv
294.996 552.883 294.98 552.918 294.965 552.949 cv
294.941 552.98 294.918 553.012 294.895 553.039 cv
294.863 553.07 294.781 553.117 294.641 553.18 cv
294.5 553.246 294.316 553.309 294.094 553.371 cv
293.867 553.434 293.609 553.488 293.316 553.539 cv
293.023 553.586 292.711 553.609 292.379 553.613 cv
291.801 553.609 291.293 553.531 290.863 553.371 cv
290.426 553.211 290.063 552.973 289.77 552.656 cv
289.469 552.34 289.246 551.945 289.098 551.465 cv
288.949 550.988 288.875 550.43 288.875 549.793 cv
288.875 549.195 288.949 548.656 289.105 548.172 cv
289.258 547.695 289.484 547.285 289.781 546.949 cv
290.074 546.613 290.43 546.355 290.844 546.176 cv
291.258 545.996 291.723 545.906 292.238 545.906 cv
292.789 545.906 293.258 545.996 293.645 546.172 cv
294.031 546.352 294.348 546.59 294.602 546.887 cv
294.848 547.187 295.031 547.539 295.148 547.937 cv
295.262 548.344 295.32 548.773 295.324 549.227 cv
cp
294.031 549.078 mo
294.047 548.402 293.895 547.871 293.578 547.488 cv
293.262 547.105 292.793 546.914 292.176 546.91 cv
291.852 546.914 291.57 546.973 291.332 547.09 cv
291.09 547.211 290.891 547.371 290.73 547.566 cv
290.566 547.766 290.441 547.996 290.355 548.258 cv
290.266 548.52 290.215 548.793 290.207 549.078 cv
cp
f
301.391 546.715 mo
301.387 546.832 301.387 546.93 301.383 547.004 cv
301.375 547.086 301.363 547.148 301.352 547.187 cv
301.332 547.234 301.313 547.266 301.293 547.289 cv
301.266 547.312 301.234 547.324 301.195 547.324 cv
301.152 547.324 301.102 547.312 301.043 547.289 cv
300.98 547.266 300.91 547.242 300.84 547.219 cv
300.762 547.195 300.68 547.176 300.586 547.152 cv
300.492 547.137 300.391 547.125 300.281 547.121 cv
300.148 547.125 300.02 547.152 299.898 547.199 cv
299.773 547.254 299.645 547.34 299.508 547.457 cv
299.367 547.582 299.223 547.738 299.074 547.934 cv
298.922 548.129 298.754 548.371 298.574 548.656 cv
298.574 553.27 li
298.57 553.316 298.559 553.352 298.543 553.375 cv
298.52 553.406 298.488 553.43 298.441 553.449 cv
298.395 553.469 298.328 553.48 298.25 553.496 cv
298.164 553.504 298.059 553.512 297.93 553.512 cv
297.801 553.512 297.695 553.504 297.617 553.496 cv
297.531 553.48 297.465 553.469 297.418 553.449 cv
297.363 553.43 297.332 553.406 297.316 553.375 cv
297.297 553.352 297.285 553.316 297.289 553.27 cv
297.289 546.258 li
297.285 546.219 297.293 546.184 297.313 546.152 cv
297.324 546.125 297.355 546.102 297.406 546.074 cv
297.449 546.055 297.512 546.039 297.586 546.027 cv
297.656 546.023 297.75 546.02 297.875 546.016 cv
297.984 546.02 298.082 546.023 298.16 546.027 cv
298.234 546.039 298.293 546.055 298.336 546.074 cv
298.375 546.102 298.402 546.125 298.422 546.152 cv
298.438 546.184 298.445 546.219 298.449 546.258 cv
298.449 547.277 li
298.637 546.996 298.82 546.77 298.992 546.594 cv
299.16 546.418 299.32 546.277 299.473 546.176 cv
299.621 546.074 299.77 546.004 299.918 545.965 cv
300.066 545.926 300.215 545.906 300.367 545.906 cv
300.434 545.906 300.512 545.91 300.598 545.918 cv
300.684 545.926 300.773 545.941 300.867 545.961 cv
300.961 545.984 301.043 546.008 301.121 546.031 cv
301.191 546.059 301.246 546.086 301.281 546.109 cv
301.309 546.141 301.328 546.164 301.344 546.184 cv
301.352 546.211 301.363 546.242 301.371 546.273 cv
301.379 546.312 301.383 546.363 301.387 546.434 cv
301.387 546.504 301.387 546.598 301.391 546.715 cv
cp
f
313.148 549.684 mo
313.145 550.262 313.07 550.789 312.922 551.266 cv
312.77 551.75 312.543 552.164 312.246 552.508 cv
311.945 552.859 311.57 553.129 311.125 553.32 cv
310.672 553.516 310.152 553.609 309.563 553.613 cv
308.984 553.609 308.48 553.527 308.055 553.355 cv
307.625 553.187 307.27 552.937 306.984 552.609 cv
306.695 552.281 306.48 551.887 306.344 551.418 cv
306.203 550.953 306.137 550.422 306.137 549.824 cv
306.137 549.258 306.207 548.73 306.355 548.25 cv
306.5 547.77 306.727 547.355 307.027 547.004 cv
307.324 546.656 307.695 546.387 308.145 546.195 cv
308.59 546.004 309.113 545.906 309.711 545.906 cv
310.289 545.906 310.789 545.992 311.219 546.164 cv
311.645 546.336 312.004 546.586 312.289 546.914 cv
312.574 547.242 312.789 547.641 312.934 548.105 cv
313.074 548.574 313.145 549.102 313.148 549.684 cv
cp
311.816 549.77 mo
311.813 549.395 311.777 549.035 311.711 548.695 cv
311.637 548.359 311.52 548.066 311.359 547.809 cv
311.195 547.559 310.977 547.355 310.699 547.203 cv
310.418 547.059 310.07 546.984 309.66 546.98 cv
309.273 546.984 308.945 547.051 308.672 547.184 cv
308.395 547.32 308.168 547.512 307.992 547.758 cv
307.813 548.004 307.68 548.297 307.598 548.633 cv
307.508 548.973 307.465 549.34 307.469 549.738 cv
307.465 550.125 307.5 550.488 307.574 550.824 cv
307.641 551.164 307.758 551.457 307.926 551.707 cv
308.09 551.961 308.313 552.164 308.59 552.309 cv
308.867 552.461 309.215 552.535 309.629 552.531 cv
310.004 552.535 310.332 552.465 310.613 552.328 cv
310.891 552.195 311.117 552.008 311.297 551.758 cv
311.473 551.516 311.602 551.223 311.688 550.887 cv
311.77 550.551 311.813 550.18 311.816 549.77 cv
cp
f
318.883 543.371 mo
318.879 543.473 318.875 543.551 318.867 543.609 cv
318.855 543.672 318.844 543.723 318.832 543.754 cv
318.816 543.793 318.801 543.816 318.781 543.828 cv
318.758 543.844 318.73 543.852 318.703 543.848 cv
318.664 543.852 318.617 543.84 318.566 543.812 cv
318.508 543.793 318.441 543.766 318.367 543.734 cv
318.285 543.707 318.195 543.68 318.09 543.656 cv
317.98 543.633 317.855 543.621 317.723 543.621 cv
317.527 543.621 317.363 543.652 317.23 543.715 cv
317.09 543.777 316.98 543.875 316.902 544.008 cv
316.816 544.141 316.758 544.312 316.723 544.523 cv
316.684 544.734 316.664 544.992 316.668 545.289 cv
316.668 546.055 li
318.234 546.055 li
318.273 546.059 318.309 546.066 318.34 546.082 cv
318.367 546.102 318.395 546.133 318.418 546.176 cv
318.441 546.223 318.457 546.281 318.473 546.344 cv
318.48 546.414 318.488 546.496 318.492 546.59 cv
318.488 546.781 318.465 546.914 318.422 546.996 cv
318.371 547.082 318.309 547.125 318.234 547.121 cv
316.668 547.121 li
316.668 553.27 li
316.664 553.316 316.656 553.352 316.637 553.375 cv
316.613 553.406 316.578 553.43 316.531 553.449 cv
316.48 553.469 316.414 553.48 316.332 553.496 cv
316.246 553.504 316.141 553.512 316.023 553.512 cv
315.895 553.512 315.793 553.504 315.711 553.496 cv
315.625 553.48 315.559 553.469 315.512 553.449 cv
315.461 553.43 315.426 553.406 315.406 553.375 cv
315.383 553.352 315.371 553.316 315.375 553.27 cv
315.375 547.121 li
314.387 547.121 li
314.301 547.125 314.238 547.082 314.199 546.996 cv
314.156 546.914 314.133 546.781 314.137 546.59 cv
314.133 546.496 314.141 546.414 314.152 546.344 cv
314.16 546.281 314.176 546.223 314.199 546.176 cv
314.219 546.133 314.242 546.102 314.277 546.082 cv
314.305 546.066 314.344 546.059 314.387 546.055 cv
315.375 546.055 li
315.375 545.328 li
315.371 544.844 315.418 544.426 315.512 544.07 cv
315.602 543.723 315.738 543.434 315.926 543.211 cv
316.109 542.988 316.344 542.824 316.633 542.715 cv
316.914 542.609 317.25 542.555 317.637 542.555 cv
317.813 542.555 317.988 542.574 318.164 542.605 cv
318.332 542.645 318.465 542.68 318.563 542.715 cv
318.652 542.758 318.715 542.793 318.75 542.82 cv
318.777 542.855 318.805 542.895 318.828 542.941 cv
318.848 542.992 318.859 543.055 318.871 543.121 cv
318.875 543.195 318.879 543.277 318.883 543.371 cv
cp
f
329.078 550.637 mo
329.074 551.109 328.988 551.531 328.816 551.898 cv
328.641 552.273 328.398 552.586 328.09 552.84 cv
327.781 553.098 327.418 553.289 327 553.418 cv
326.578 553.547 326.129 553.609 325.648 553.613 cv
325.309 553.609 324.992 553.582 324.707 553.527 cv
324.418 553.469 324.164 553.402 323.938 553.316 cv
323.711 553.238 323.52 553.152 323.367 553.059 cv
323.211 552.973 323.105 552.895 323.047 552.832 cv
322.988 552.77 322.945 552.691 322.918 552.598 cv
322.887 552.504 322.871 552.375 322.875 552.211 cv
322.871 552.098 322.875 552.004 322.891 551.926 cv
322.898 551.852 322.914 551.789 322.938 551.742 cv
322.953 551.695 322.98 551.664 323.016 551.645 cv
323.043 551.629 323.078 551.621 323.121 551.617 cv
323.191 551.621 323.293 551.664 323.43 551.75 cv
323.559 551.84 323.73 551.937 323.941 552.039 cv
324.148 552.148 324.398 552.246 324.691 552.332 cv
324.984 552.426 325.324 552.469 325.711 552.469 cv
326 552.469 326.266 552.43 326.508 552.352 cv
326.746 552.273 326.953 552.164 327.133 552.02 cv
327.305 551.879 327.441 551.703 327.535 551.492 cv
327.629 551.285 327.676 551.051 327.676 550.785 cv
327.676 550.504 327.609 550.258 327.48 550.051 cv
327.348 549.852 327.176 549.676 326.965 549.52 cv
326.75 549.371 326.508 549.23 326.234 549.098 cv
325.961 548.973 325.68 548.84 325.398 548.707 cv
325.109 548.574 324.832 548.43 324.563 548.266 cv
324.293 548.109 324.051 547.918 323.84 547.699 cv
323.621 547.48 323.449 547.227 323.32 546.93 cv
323.184 546.641 323.117 546.289 323.121 545.875 cv
323.117 545.457 323.195 545.082 323.352 544.75 cv
323.504 544.422 323.715 544.145 323.992 543.918 cv
324.262 543.699 324.586 543.527 324.965 543.41 cv
325.34 543.293 325.75 543.234 326.188 543.234 cv
326.406 543.234 326.629 543.254 326.859 543.293 cv
327.082 543.332 327.293 543.383 327.496 543.445 cv
327.691 543.512 327.871 543.586 328.031 543.664 cv
328.184 543.746 328.285 543.812 328.34 543.859 cv
328.387 543.914 328.422 543.953 328.438 543.977 cv
328.453 544.008 328.465 544.043 328.477 544.086 cv
328.484 544.133 328.492 544.187 328.5 544.246 cv
328.504 544.312 328.508 544.391 328.508 544.488 cv
328.508 544.582 328.504 544.668 328.496 544.738 cv
328.488 544.816 328.477 544.875 328.461 544.922 cv
328.445 544.969 328.422 545.004 328.395 545.027 cv
328.363 545.051 328.332 545.062 328.297 545.062 cv
328.238 545.062 328.148 545.027 328.027 544.957 cv
327.902 544.887 327.75 544.805 327.578 544.711 cv
327.398 544.621 327.191 544.539 326.953 544.461 cv
326.707 544.387 326.438 544.348 326.141 544.348 cv
325.859 544.348 325.613 544.387 325.406 544.461 cv
325.195 544.539 325.023 544.641 324.891 544.762 cv
324.754 544.887 324.652 545.031 324.586 545.203 cv
324.52 545.375 324.488 545.559 324.488 545.75 cv
324.488 546.035 324.551 546.277 324.68 546.477 cv
324.809 546.68 324.98 546.859 325.199 547.012 cv
325.41 547.172 325.656 547.312 325.934 547.441 cv
326.207 547.574 326.488 547.707 326.777 547.836 cv
327.063 547.969 327.344 548.113 327.617 548.27 cv
327.891 548.43 328.137 548.617 328.355 548.832 cv
328.57 549.051 328.742 549.305 328.879 549.598 cv
329.008 549.891 329.074 550.238 329.078 550.637 cv
cp
f
336.844 553.27 mo
336.84 553.316 336.832 553.352 336.816 553.375 cv
336.797 553.406 336.762 553.43 336.719 553.449 cv
336.672 553.469 336.613 553.48 336.539 553.496 cv
336.461 553.504 336.367 553.512 336.262 553.512 cv
336.137 553.512 336.039 553.504 335.969 553.496 cv
335.891 553.48 335.832 553.469 335.789 553.449 cv
335.742 553.43 335.711 553.406 335.699 553.375 cv
335.68 553.352 335.672 553.316 335.676 553.27 cv
335.676 552.344 li
335.273 552.789 334.879 553.109 334.492 553.309 cv
334.098 553.512 333.703 553.609 333.309 553.613 cv
332.836 553.609 332.441 553.535 332.125 553.379 cv
331.805 553.227 331.547 553.016 331.352 552.746 cv
331.148 552.48 331.008 552.168 330.926 551.809 cv
330.836 551.453 330.793 551.02 330.797 550.512 cv
330.797 546.258 li
330.793 546.219 330.801 546.184 330.824 546.152 cv
330.84 546.125 330.875 546.102 330.93 546.074 cv
330.977 546.055 331.047 546.039 331.133 546.027 cv
331.215 546.023 331.316 546.02 331.445 546.016 cv
331.566 546.02 331.672 546.023 331.758 546.027 cv
331.84 546.039 331.906 546.055 331.953 546.074 cv
332 546.102 332.035 546.125 332.059 546.152 cv
332.078 546.184 332.086 546.219 332.09 546.258 cv
332.09 550.34 li
332.086 550.754 332.117 551.082 332.18 551.328 cv
332.238 551.574 332.328 551.785 332.453 551.957 cv
332.57 552.137 332.727 552.27 332.918 552.363 cv
333.102 552.461 333.32 552.512 333.57 552.508 cv
333.891 552.512 334.211 552.395 334.535 552.164 cv
334.852 551.937 335.191 551.602 335.551 551.156 cv
335.551 546.258 li
335.551 546.219 335.559 546.184 335.578 546.152 cv
335.594 546.125 335.629 546.102 335.684 546.074 cv
335.734 546.055 335.801 546.039 335.883 546.027 cv
335.961 546.023 336.066 546.02 336.199 546.016 cv
336.32 546.02 336.426 546.023 336.512 546.027 cv
336.594 546.039 336.656 546.055 336.703 546.074 cv
336.746 546.102 336.781 546.125 336.809 546.152 cv
336.828 546.184 336.84 546.219 336.844 546.258 cv
cp
f
345.703 549.668 mo
345.699 550.277 345.633 550.828 345.504 551.312 cv
345.367 551.801 345.172 552.215 344.918 552.555 cv
344.66 552.898 344.344 553.16 343.973 553.34 cv
343.598 553.523 343.172 553.609 342.688 553.613 cv
342.461 553.609 342.254 553.59 342.066 553.547 cv
341.879 553.5 341.691 553.43 341.512 553.332 cv
341.324 553.234 341.145 553.109 340.965 552.957 cv
340.781 552.809 340.59 552.629 340.391 552.414 cv
340.391 553.27 li
340.391 553.316 340.379 553.352 340.359 553.379 cv
340.336 553.414 340.301 553.437 340.258 553.453 cv
340.207 553.469 340.148 553.48 340.082 553.496 cv
340.008 553.504 339.918 553.512 339.813 553.512 cv
339.703 553.512 339.617 553.504 339.547 553.496 cv
339.473 553.48 339.41 553.469 339.367 553.453 cv
339.316 553.437 339.285 553.414 339.273 553.379 cv
339.254 553.352 339.246 553.316 339.25 553.27 cv
339.25 542.859 li
339.246 542.82 339.258 542.785 339.277 542.75 cv
339.293 542.723 339.324 542.695 339.379 542.672 cv
339.426 542.652 339.492 542.637 339.578 542.625 cv
339.656 542.617 339.762 542.613 339.891 542.609 cv
340.02 542.613 340.125 542.617 340.211 542.625 cv
340.289 542.637 340.355 542.652 340.402 542.672 cv
340.449 542.695 340.48 542.723 340.504 542.75 cv
340.52 542.785 340.531 542.82 340.535 542.859 cv
340.535 547.059 li
340.742 546.848 340.945 546.668 341.141 546.523 cv
341.336 546.379 341.523 546.262 341.711 546.168 cv
341.895 546.082 342.082 546.016 342.273 545.969 cv
342.457 545.93 342.656 545.906 342.867 545.906 cv
343.371 545.906 343.805 546.008 344.172 546.211 cv
344.531 546.414 344.824 546.687 345.051 547.023 cv
345.273 547.367 345.441 547.766 345.547 548.223 cv
345.648 548.68 345.699 549.16 345.703 549.668 cv
cp
344.371 549.816 mo
344.367 549.461 344.34 549.113 344.289 548.773 cv
344.23 548.437 344.137 548.141 344 547.879 cv
343.863 547.621 343.684 547.41 343.461 547.25 cv
343.234 547.094 342.953 547.016 342.621 547.012 cv
342.453 547.016 342.289 547.039 342.129 547.082 cv
341.965 547.133 341.801 547.211 341.633 547.316 cv
341.465 547.43 341.289 547.57 341.113 547.738 cv
340.93 547.914 340.738 548.129 340.535 548.383 cv
340.535 551.18 li
340.891 551.613 341.23 551.945 341.555 552.168 cv
341.879 552.398 342.215 552.512 342.566 552.508 cv
342.887 552.512 343.164 552.434 343.398 552.273 cv
343.625 552.121 343.813 551.914 343.957 551.652 cv
344.102 551.398 344.207 551.109 344.273 550.789 cv
344.336 550.473 344.367 550.148 344.371 549.816 cv
cp
f
350.836 549.531 mo
350.836 549.734 350.813 549.871 350.766 549.949 cv
350.719 550.027 350.648 550.066 350.563 550.066 cv
347.305 550.066 li
347.211 550.066 347.145 550.027 347.098 549.945 cv
347.051 549.867 347.027 549.73 347.027 549.531 cv
347.027 549.336 347.051 549.195 347.098 549.117 cv
347.145 549.039 347.211 549 347.305 549 cv
350.563 549 li
350.602 549 350.641 549.008 350.676 549.023 cv
350.707 549.039 350.734 549.07 350.762 549.113 cv
350.781 549.16 350.801 549.215 350.816 549.281 cv
350.828 549.352 350.836 549.437 350.836 549.531 cv
cp
f
354.09 553.262 mo
354.086 553.305 354.078 553.34 354.059 553.371 cv
354.035 553.402 353.996 553.43 353.949 553.445 cv
353.895 553.465 353.828 553.477 353.742 553.492 cv
353.656 553.504 353.547 553.512 353.422 553.512 cv
353.293 553.512 353.188 553.504 353.102 553.492 cv
353.012 553.477 352.941 553.465 352.891 553.445 cv
352.836 553.43 352.801 553.402 352.781 553.371 cv
352.758 553.34 352.746 553.305 352.75 553.262 cv
352.75 543.582 li
352.746 543.543 352.758 543.508 352.785 543.473 cv
352.805 543.445 352.844 543.418 352.902 543.398 cv
352.953 543.383 353.023 543.367 353.113 543.352 cv
353.195 543.34 353.297 543.336 353.422 543.332 cv
353.547 543.336 353.656 543.34 353.742 543.352 cv
353.828 543.367 353.895 543.383 353.949 543.398 cv
353.996 543.418 354.035 543.445 354.059 543.473 cv
354.078 543.508 354.086 543.543 354.09 543.582 cv
cp
f
367.078 553.27 mo
367.074 553.316 367.066 553.352 367.047 553.375 cv
367.023 553.406 366.988 553.43 366.945 553.449 cv
366.895 553.469 366.828 553.48 366.75 553.496 cv
366.664 553.504 366.563 553.512 366.438 553.512 cv
366.305 553.512 366.195 553.504 366.117 553.496 cv
366.031 553.48 365.965 553.469 365.918 553.449 cv
365.863 553.43 365.828 553.406 365.813 553.375 cv
365.789 553.352 365.781 553.316 365.781 553.27 cv
365.781 549.008 li
365.781 548.715 365.754 548.445 365.703 548.199 cv
365.648 547.957 365.566 547.746 365.453 547.566 cv
365.34 547.391 365.195 547.254 365.02 547.16 cv
364.84 547.066 364.629 547.02 364.395 547.02 cv
364.098 547.02 363.801 547.137 363.504 547.363 cv
363.199 547.598 362.871 547.93 362.516 548.367 cv
362.516 553.27 li
362.512 553.316 362.5 553.352 362.484 553.375 cv
362.461 553.406 362.43 553.43 362.383 553.449 cv
362.332 553.469 362.266 553.48 362.184 553.496 cv
362.098 553.504 361.992 553.512 361.871 553.512 cv
361.75 553.512 361.648 553.504 361.563 553.496 cv
361.477 553.48 361.406 553.469 361.359 553.449 cv
361.305 553.43 361.273 553.406 361.258 553.375 cv
361.238 553.352 361.227 553.316 361.23 553.27 cv
361.23 549.008 li
361.227 548.715 361.199 548.445 361.145 548.199 cv
361.086 547.957 361 547.746 360.887 547.566 cv
360.773 547.391 360.629 547.254 360.457 547.16 cv
360.277 547.066 360.07 547.02 359.836 547.02 cv
359.535 547.02 359.238 547.137 358.938 547.363 cv
358.637 547.598 358.309 547.93 357.957 548.367 cv
357.957 553.27 li
357.953 553.316 357.941 553.352 357.926 553.375 cv
357.902 553.406 357.871 553.43 357.824 553.449 cv
357.777 553.469 357.711 553.48 357.633 553.496 cv
357.547 553.504 357.441 553.512 357.313 553.512 cv
357.184 553.512 357.078 553.504 357 553.496 cv
356.914 553.48 356.848 553.469 356.801 553.449 cv
356.746 553.43 356.715 553.406 356.699 553.375 cv
356.68 553.352 356.668 553.316 356.672 553.27 cv
356.672 546.258 li
356.668 546.219 356.676 546.184 356.695 546.152 cv
356.707 546.125 356.738 546.102 356.789 546.074 cv
356.832 546.055 356.895 546.039 356.969 546.027 cv
357.039 546.023 357.133 546.02 357.258 546.016 cv
357.367 546.02 357.465 546.023 357.543 546.027 cv
357.617 546.039 357.676 546.055 357.719 546.074 cv
357.758 546.102 357.785 546.125 357.805 546.152 cv
357.82 546.184 357.828 546.219 357.832 546.258 cv
357.832 547.184 li
358.223 546.742 358.605 546.422 358.98 546.215 cv
359.348 546.012 359.727 545.906 360.109 545.906 cv
360.398 545.906 360.656 545.941 360.891 546.008 cv
361.117 546.078 361.324 546.172 361.504 546.293 cv
361.68 546.414 361.828 546.559 361.957 546.727 cv
362.078 546.898 362.184 547.09 362.27 547.293 cv
362.5 547.043 362.723 546.828 362.934 546.648 cv
363.145 546.477 363.348 546.332 363.543 546.219 cv
363.738 546.113 363.926 546.035 364.109 545.98 cv
364.293 545.934 364.48 545.906 364.668 545.906 cv
365.121 545.906 365.5 545.988 365.805 546.145 cv
366.109 546.309 366.355 546.52 366.551 546.781 cv
366.738 547.047 366.875 547.355 366.957 547.711 cv
367.035 548.066 367.074 548.441 367.078 548.836 cv
cp
f
374.707 553.277 mo
374.703 553.34 374.684 553.387 374.645 553.418 cv
374.602 553.449 374.543 553.473 374.473 553.488 cv
374.395 553.504 374.289 553.512 374.152 553.512 cv
374.016 553.512 373.906 553.504 373.828 553.488 cv
373.742 553.473 373.684 553.449 373.652 553.418 cv
373.613 553.387 373.598 553.34 373.602 553.277 cv
373.602 552.578 li
373.293 552.906 372.949 553.16 372.574 553.34 cv
372.195 553.523 371.797 553.609 371.379 553.613 cv
371.004 553.609 370.672 553.562 370.375 553.469 cv
370.078 553.371 369.824 553.234 369.613 553.051 cv
369.402 552.871 369.238 552.648 369.121 552.383 cv
369.004 552.121 368.945 551.82 368.949 551.477 cv
368.945 551.086 369.023 550.742 369.188 550.449 cv
369.344 550.16 369.578 549.918 369.883 549.727 cv
370.184 549.535 370.551 549.391 370.988 549.293 cv
371.422 549.199 371.914 549.152 372.461 549.148 cv
373.43 549.148 li
373.43 548.602 li
373.426 548.332 373.398 548.094 373.344 547.887 cv
373.285 547.68 373.191 547.508 373.066 547.367 cv
372.934 547.23 372.77 547.125 372.57 547.055 cv
372.363 546.984 372.113 546.949 371.824 546.949 cv
371.504 546.949 371.219 546.988 370.969 547.062 cv
370.711 547.141 370.492 547.223 370.305 547.312 cv
370.117 547.406 369.957 547.492 369.832 547.562 cv
369.699 547.641 369.605 547.676 369.547 547.676 cv
369.504 547.676 369.469 547.668 369.438 547.645 cv
369.406 547.629 369.379 547.598 369.355 547.551 cv
369.332 547.512 369.313 547.457 369.305 547.391 cv
369.289 547.328 369.285 547.258 369.289 547.176 cv
369.285 547.051 369.293 546.945 369.316 546.867 cv
369.332 546.793 369.379 546.723 369.449 546.652 cv
369.52 546.586 369.641 546.508 369.813 546.418 cv
369.984 546.328 370.18 546.246 370.402 546.168 cv
370.625 546.098 370.871 546.035 371.137 545.98 cv
371.402 545.934 371.668 545.906 371.941 545.906 cv
372.441 545.906 372.871 545.965 373.223 546.078 cv
373.574 546.195 373.859 546.363 374.082 546.582 cv
374.297 546.805 374.457 547.078 374.559 547.402 cv
374.656 547.734 374.703 548.117 374.707 548.547 cv
cp
373.43 550.074 mo
372.328 550.074 li
371.973 550.078 371.668 550.109 371.41 550.164 cv
371.148 550.227 370.934 550.312 370.762 550.43 cv
370.59 550.547 370.465 550.687 370.387 550.852 cv
370.305 551.016 370.262 551.203 370.266 551.414 cv
370.262 551.781 370.379 552.074 370.609 552.285 cv
370.84 552.504 371.164 552.609 371.582 552.609 cv
371.918 552.609 372.23 552.523 372.52 552.352 cv
372.809 552.18 373.109 551.918 373.43 551.562 cv
cp
f
382.926 546.574 mo
382.922 546.758 382.898 546.891 382.852 546.969 cv
382.801 547.051 382.738 547.09 382.664 547.09 cv
381.656 547.09 li
381.836 547.277 381.965 547.484 382.039 547.711 cv
382.109 547.937 382.145 548.172 382.148 548.414 cv
382.145 548.82 382.078 549.18 381.953 549.492 cv
381.82 549.805 381.637 550.07 381.395 550.281 cv
381.152 550.5 380.863 550.664 380.535 550.777 cv
380.199 550.895 379.832 550.953 379.43 550.949 cv
379.141 550.953 378.867 550.914 378.613 550.836 cv
378.352 550.762 378.156 550.668 378.02 550.551 cv
377.926 550.648 377.848 550.754 377.789 550.871 cv
377.727 550.992 377.695 551.129 377.699 551.281 cv
377.695 551.465 377.781 551.617 377.953 551.734 cv
378.121 551.859 378.344 551.922 378.625 551.93 cv
380.457 552.008 li
380.805 552.02 381.121 552.066 381.414 552.152 cv
381.703 552.238 381.957 552.363 382.172 552.52 cv
382.383 552.68 382.551 552.871 382.672 553.102 cv
382.789 553.336 382.848 553.605 382.852 553.91 cv
382.848 554.23 382.781 554.535 382.648 554.828 cv
382.512 555.117 382.305 555.371 382.027 555.594 cv
381.746 555.812 381.391 555.988 380.961 556.117 cv
380.531 556.242 380.023 556.305 379.438 556.309 cv
378.867 556.305 378.383 556.258 377.988 556.164 cv
377.59 556.066 377.266 555.934 377.012 555.77 cv
376.758 555.602 376.574 555.406 376.461 555.176 cv
376.344 554.941 376.285 554.687 376.289 554.422 cv
376.285 554.25 376.305 554.086 376.352 553.926 cv
376.391 553.762 376.453 553.609 376.539 553.465 cv
376.621 553.32 376.73 553.184 376.859 553.047 cv
376.984 552.918 377.129 552.785 377.301 552.656 cv
377.043 552.527 376.855 552.363 376.734 552.164 cv
376.613 551.969 376.555 551.758 376.555 551.523 cv
376.555 551.211 376.617 550.926 376.746 550.676 cv
376.875 550.426 377.035 550.203 377.23 550.004 cv
377.066 549.812 376.941 549.598 376.848 549.355 cv
376.754 549.117 376.707 548.824 376.707 548.477 cv
376.707 548.082 376.773 547.723 376.91 547.402 cv
377.043 547.086 377.23 546.82 377.473 546.602 cv
377.711 546.387 377.996 546.219 378.332 546.098 cv
378.664 545.984 379.031 545.926 379.43 545.922 cv
379.641 545.926 379.84 545.937 380.023 545.957 cv
380.207 545.984 380.379 546.016 380.543 546.055 cv
382.664 546.055 li
382.75 546.059 382.816 546.102 382.859 546.184 cv
382.902 546.273 382.922 546.402 382.926 546.574 cv
cp
380.918 548.422 mo
380.914 547.949 380.781 547.578 380.523 547.305 cv
380.258 547.039 379.887 546.902 379.406 546.902 cv
379.152 546.902 378.934 546.945 378.754 547.027 cv
378.566 547.113 378.414 547.227 378.293 547.371 cv
378.172 547.52 378.082 547.687 378.023 547.875 cv
377.961 548.062 377.93 548.262 377.934 548.469 cv
377.93 548.934 378.063 549.297 378.324 549.562 cv
378.586 549.828 378.953 549.961 379.43 549.957 cv
379.68 549.961 379.898 549.922 380.09 549.836 cv
380.273 549.758 380.43 549.645 380.555 549.504 cv
380.676 549.363 380.766 549.199 380.828 549.008 cv
380.883 548.824 380.914 548.629 380.918 548.422 cv
cp
381.563 553.98 mo
381.559 553.676 381.434 553.445 381.191 553.281 cv
380.941 553.121 380.609 553.031 380.191 553.02 cv
378.375 552.957 li
378.207 553.09 378.07 553.215 377.969 553.328 cv
377.859 553.445 377.777 553.555 377.715 553.664 cv
377.652 553.77 377.609 553.875 377.586 553.98 cv
377.563 554.082 377.551 554.187 377.551 554.297 cv
377.551 554.633 377.719 554.887 378.063 555.066 cv
378.402 555.238 378.883 555.328 379.5 555.328 cv
379.887 555.328 380.211 555.289 380.477 555.215 cv
380.734 555.137 380.945 555.035 381.109 554.914 cv
381.266 554.785 381.383 554.645 381.457 554.484 cv
381.523 554.324 381.559 554.156 381.563 553.98 cv
cp
f
390.488 549.461 mo
390.484 549.664 390.434 549.805 390.336 549.891 cv
390.23 549.977 390.113 550.02 389.988 550.02 cv
385.371 550.02 li
385.367 550.41 385.406 550.762 385.488 551.074 cv
385.563 551.387 385.695 551.656 385.879 551.875 cv
386.059 552.102 386.293 552.273 386.59 552.391 cv
386.879 552.516 387.238 552.574 387.664 552.57 cv
387.996 552.574 388.293 552.547 388.555 552.488 cv
388.816 552.437 389.043 552.375 389.234 552.305 cv
389.422 552.238 389.578 552.18 389.703 552.121 cv
389.824 552.07 389.918 552.043 389.98 552.039 cv
390.016 552.043 390.047 552.051 390.078 552.066 cv
390.105 552.086 390.129 552.113 390.148 552.148 cv
390.16 552.187 390.172 552.238 390.184 552.301 cv
390.188 552.367 390.191 552.445 390.195 552.539 cv
390.191 552.609 390.188 552.668 390.188 552.715 cv
390.18 552.762 390.176 552.805 390.168 552.844 cv
390.16 552.883 390.145 552.918 390.129 552.949 cv
390.105 552.98 390.082 553.012 390.059 553.039 cv
390.027 553.07 389.945 553.117 389.805 553.18 cv
389.664 553.246 389.48 553.309 389.258 553.371 cv
389.031 553.434 388.773 553.488 388.48 553.539 cv
388.188 553.586 387.875 553.609 387.543 553.613 cv
386.965 553.609 386.457 553.531 386.027 553.371 cv
385.59 553.211 385.227 552.973 384.934 552.656 cv
384.633 552.34 384.41 551.945 384.262 551.465 cv
384.113 550.988 384.039 550.43 384.039 549.793 cv
384.039 549.195 384.113 548.656 384.27 548.172 cv
384.422 547.695 384.648 547.285 384.945 546.949 cv
385.238 546.613 385.594 546.355 386.008 546.176 cv
386.422 545.996 386.887 545.906 387.402 545.906 cv
387.953 545.906 388.422 545.996 388.809 546.172 cv
389.195 546.352 389.512 546.59 389.766 546.887 cv
390.012 547.187 390.195 547.539 390.313 547.937 cv
390.426 548.344 390.484 548.773 390.488 549.227 cv
cp
389.195 549.078 mo
389.211 548.402 389.059 547.871 388.742 547.488 cv
388.426 547.105 387.957 546.914 387.34 546.91 cv
387.016 546.914 386.734 546.973 386.496 547.09 cv
386.254 547.211 386.055 547.371 385.895 547.566 cv
385.73 547.766 385.605 547.996 385.52 548.258 cv
385.43 548.52 385.379 548.793 385.371 549.078 cv
cp
f
396.855 551.359 mo
396.852 551.723 396.785 552.043 396.656 552.32 cv
396.523 552.602 396.336 552.836 396.094 553.027 cv
395.848 553.223 395.555 553.367 395.219 553.465 cv
394.879 553.562 394.508 553.609 394.105 553.613 cv
393.852 553.609 393.613 553.59 393.391 553.555 cv
393.164 553.512 392.965 553.465 392.785 553.406 cv
392.605 553.348 392.453 553.285 392.328 553.219 cv
392.203 553.156 392.109 553.098 392.055 553.043 cv
391.996 552.992 391.957 552.922 391.934 552.824 cv
391.906 552.734 391.895 552.605 391.895 552.445 cv
391.895 552.348 391.898 552.266 391.91 552.195 cv
391.918 552.129 391.93 552.074 391.949 552.031 cv
391.961 551.992 391.984 551.961 392.012 551.941 cv
392.039 551.926 392.07 551.918 392.109 551.914 cv
392.164 551.918 392.25 551.953 392.363 552.02 cv
392.473 552.094 392.609 552.172 392.777 552.25 cv
392.938 552.336 393.129 552.41 393.355 552.48 cv
393.574 552.551 393.832 552.586 394.129 552.586 cv
394.344 552.586 394.543 552.562 394.723 552.516 cv
394.898 552.469 395.051 552.402 395.18 552.309 cv
395.309 552.223 395.41 552.105 395.48 551.961 cv
395.551 551.824 395.586 551.656 395.586 551.461 cv
395.586 551.266 395.535 551.102 395.434 550.965 cv
395.332 550.832 395.195 550.711 395.031 550.605 cv
394.863 550.504 394.68 550.414 394.473 550.328 cv
394.262 550.25 394.047 550.164 393.828 550.074 cv
393.609 549.988 393.395 549.887 393.184 549.773 cv
392.973 549.664 392.781 549.531 392.617 549.367 cv
392.445 549.211 392.313 549.016 392.215 548.789 cv
392.109 548.566 392.059 548.301 392.063 547.988 cv
392.059 547.715 392.113 547.449 392.223 547.195 cv
392.328 546.945 392.488 546.727 392.703 546.535 cv
392.914 546.348 393.18 546.195 393.5 546.078 cv
393.82 545.965 394.191 545.906 394.621 545.906 cv
394.805 545.906 394.992 545.922 395.18 545.953 cv
395.363 545.984 395.531 546.023 395.688 546.07 cv
395.836 546.117 395.965 546.168 396.074 546.223 cv
396.176 546.277 396.258 546.328 396.316 546.367 cv
396.367 546.414 396.402 546.449 396.426 546.477 cv
396.441 546.508 396.457 546.543 396.465 546.578 cv
396.473 546.621 396.48 546.668 396.488 546.723 cv
396.496 546.781 396.5 546.852 396.5 546.934 cv
396.5 547.023 396.496 547.102 396.488 547.164 cv
396.48 547.234 396.465 547.285 396.449 547.324 cv
396.426 547.367 396.406 547.398 396.383 547.414 cv
396.355 547.434 396.324 547.441 396.297 547.441 cv
396.246 547.441 396.18 547.414 396.094 547.355 cv
396.004 547.301 395.891 547.238 395.75 547.172 cv
395.609 547.109 395.441 547.051 395.254 546.988 cv
395.063 546.934 394.848 546.902 394.605 546.902 cv
394.383 546.902 394.191 546.93 394.027 546.977 cv
393.859 547.031 393.723 547.102 393.617 547.187 cv
393.512 547.281 393.43 547.387 393.379 547.512 cv
393.32 547.637 393.293 547.773 393.297 547.918 cv
393.293 548.121 393.344 548.289 393.449 548.426 cv
393.551 548.566 393.688 548.687 393.855 548.789 cv
394.02 548.895 394.211 548.988 394.426 549.07 cv
394.637 549.156 394.852 549.242 395.074 549.328 cv
395.293 549.418 395.512 549.52 395.73 549.625 cv
395.945 549.734 396.137 549.863 396.305 550.02 cv
396.469 550.176 396.602 550.363 396.703 550.582 cv
396.801 550.801 396.852 551.062 396.855 551.359 cv
cp
f
125.016 13.727 mo
125.012 14.258 124.914 14.723 124.719 15.121 cv
124.52 15.523 124.254 15.859 123.918 16.125 cv
123.578 16.395 123.18 16.594 122.73 16.727 cv
122.277 16.859 121.797 16.926 121.285 16.93 cv
120.934 16.926 120.609 16.898 120.313 16.844 cv
120.012 16.785 119.75 16.719 119.523 16.637 cv
119.293 16.559 119.102 16.473 118.949 16.383 cv
118.797 16.297 118.688 16.219 118.621 16.148 cv
118.551 16.082 118.5 15.984 118.477 15.859 cv
118.445 15.734 118.434 15.551 118.434 15.309 cv
118.434 15.148 118.438 15.016 118.449 14.902 cv
118.457 14.797 118.473 14.707 118.5 14.637 cv
118.52 14.57 118.551 14.523 118.594 14.492 cv
118.629 14.469 118.676 14.453 118.727 14.449 cv
118.797 14.453 118.898 14.496 119.035 14.578 cv
119.164 14.668 119.336 14.762 119.547 14.863 cv
119.754 14.969 120 15.066 120.289 15.148 cv
120.574 15.238 120.91 15.281 121.293 15.277 cv
121.543 15.281 121.766 15.25 121.961 15.187 cv
122.156 15.129 122.324 15.043 122.465 14.934 cv
122.602 14.824 122.707 14.691 122.781 14.531 cv
122.852 14.371 122.887 14.191 122.891 13.992 cv
122.887 13.766 122.824 13.57 122.703 13.402 cv
122.574 13.242 122.41 13.098 122.215 12.969 cv
122.012 12.844 121.785 12.723 121.531 12.609 cv
121.277 12.5 121.016 12.383 120.746 12.254 cv
120.473 12.133 120.211 11.988 119.957 11.828 cv
119.703 11.672 119.477 11.484 119.277 11.262 cv
119.074 11.043 118.91 10.781 118.789 10.477 cv
118.664 10.176 118.602 9.81598 118.605 9.39502 cv
118.602 8.914 118.691 8.48798 118.871 8.12097 cv
119.047 7.758 119.289 7.453 119.598 7.20697 cv
119.898 6.96899 120.258 6.789 120.672 6.66803 cv
121.086 6.55103 121.523 6.492 121.984 6.48798 cv
122.223 6.492 122.461 6.508 122.703 6.54303 cv
122.941 6.58197 123.164 6.633 123.371 6.69098 cv
123.578 6.75403 123.762 6.82397 123.926 6.89801 cv
124.082 6.97998 124.191 7.04303 124.246 7.09399 cv
124.297 7.14801 124.332 7.19501 124.352 7.22699 cv
124.367 7.26599 124.383 7.31201 124.398 7.37097 cv
124.41 7.43402 124.418 7.508 124.426 7.59802 cv
124.43 7.69098 124.434 7.80499 124.434 7.93701 cv
124.434 8.09003 124.43 8.21899 124.422 8.32001 cv
124.414 8.42603 124.398 8.51202 124.383 8.57397 cv
124.359 8.64502 124.336 8.69098 124.305 8.72302 cv
124.27 8.75403 124.223 8.77002 124.168 8.77002 cv
124.109 8.77002 124.02 8.73401 123.895 8.65997 cv
123.77 8.59003 123.613 8.51202 123.434 8.422 cv
123.25 8.34003 123.043 8.26202 122.805 8.19098 cv
122.563 8.125 122.297 8.09003 122.016 8.086 cv
121.789 8.09003 121.598 8.117 121.434 8.16803 cv
121.266 8.22302 121.125 8.297 121.016 8.39099 cv
120.902 8.48798 120.82 8.60498 120.766 8.73798 cv
120.711 8.87903 120.684 9.02002 120.684 9.16803 cv
120.684 9.39502 120.742 9.59003 120.867 9.75 cv
120.984 9.914 121.148 10.059 121.359 10.184 cv
121.563 10.312 121.797 10.434 122.055 10.543 cv
122.313 10.66 122.578 10.777 122.852 10.898 cv
123.121 11.027 123.383 11.168 123.645 11.324 cv
123.902 11.48 124.137 11.672 124.34 11.891 cv
124.543 12.117 124.703 12.375 124.828 12.672 cv
124.949 12.969 125.012 13.32 125.016 13.727 cv
cp
f
131.73 15.379 mo
131.727 15.516 131.723 15.629 131.719 15.719 cv
131.707 15.812 131.699 15.891 131.688 15.949 cv
131.672 16.012 131.656 16.062 131.641 16.098 cv
131.621 16.141 131.578 16.187 131.52 16.246 cv
131.453 16.309 131.348 16.383 131.199 16.465 cv
131.047 16.555 130.875 16.633 130.684 16.695 cv
130.492 16.766 130.285 16.816 130.059 16.859 cv
129.832 16.898 129.598 16.918 129.363 16.922 cv
128.824 16.918 128.352 16.84 127.938 16.672 cv
127.523 16.508 127.176 16.262 126.898 15.937 cv
126.613 15.613 126.402 15.219 126.262 14.75 cv
126.121 14.285 126.051 13.746 126.051 13.141 cv
126.051 12.445 126.137 11.848 126.309 11.34 cv
126.48 10.836 126.723 10.414 127.039 10.082 cv
127.348 9.75 127.715 9.50403 128.145 9.34003 cv
128.566 9.17999 129.035 9.09802 129.547 9.09802 cv
129.754 9.09802 129.957 9.117 130.16 9.15198 cv
130.355 9.19098 130.543 9.242 130.719 9.30103 cv
130.891 9.367 131.047 9.43701 131.188 9.51202 cv
131.324 9.59399 131.422 9.65997 131.48 9.71503 cv
131.535 9.77301 131.574 9.82001 131.602 9.85498 cv
131.621 9.89801 131.641 9.94897 131.656 10.008 cv
131.668 10.074 131.68 10.152 131.688 10.238 cv
131.695 10.332 131.699 10.441 131.699 10.57 cv
131.699 10.875 131.672 11.086 131.621 11.207 cv
131.566 11.328 131.5 11.391 131.418 11.387 cv
131.328 11.391 131.234 11.355 131.137 11.281 cv
131.035 11.211 130.918 11.129 130.785 11.039 cv
130.652 10.953 130.492 10.871 130.305 10.797 cv
130.117 10.727 129.891 10.691 129.633 10.687 cv
129.121 10.691 128.734 10.887 128.465 11.277 cv
128.191 11.668 128.055 12.242 128.059 13 cv
128.055 13.375 128.09 13.707 128.16 13.992 cv
128.227 14.277 128.324 14.516 128.461 14.707 cv
128.59 14.902 128.758 15.047 128.961 15.141 cv
129.16 15.238 129.391 15.285 129.656 15.285 cv
129.922 15.285 130.156 15.246 130.355 15.164 cv
130.547 15.086 130.715 14.996 130.863 14.895 cv
131.004 14.797 131.129 14.707 131.23 14.625 cv
131.328 14.547 131.41 14.508 131.48 14.504 cv
131.523 14.508 131.563 14.52 131.598 14.543 cv
131.625 14.57 131.648 14.617 131.672 14.687 cv
131.688 14.758 131.703 14.848 131.715 14.957 cv
131.723 15.066 131.727 15.207 131.73 15.379 cv
cp
f
139.004 16.508 mo
139 16.586 138.973 16.641 138.926 16.68 cv
138.871 16.723 138.789 16.75 138.68 16.77 cv
138.563 16.785 138.398 16.797 138.184 16.797 cv
137.945 16.797 137.773 16.785 137.672 16.77 cv
137.563 16.75 137.488 16.723 137.449 16.68 cv
137.402 16.641 137.383 16.586 137.383 16.508 cv
137.383 15.957 li
137.094 16.266 136.766 16.504 136.402 16.672 cv
136.035 16.844 135.629 16.926 135.184 16.93 cv
134.813 16.926 134.473 16.879 134.164 16.785 cv
133.855 16.691 133.59 16.551 133.363 16.355 cv
133.137 16.168 132.961 15.934 132.836 15.652 cv
132.711 15.375 132.648 15.047 132.652 14.668 cv
132.648 14.27 132.727 13.918 132.887 13.613 cv
133.043 13.316 133.281 13.07 133.598 12.875 cv
133.91 12.684 134.301 12.539 134.77 12.441 cv
135.238 12.352 135.781 12.305 136.398 12.301 cv
137.078 12.301 li
137.078 11.879 li
137.078 11.664 137.055 11.473 137.012 11.309 cv
136.965 11.148 136.891 11.012 136.793 10.898 cv
136.688 10.793 136.555 10.711 136.387 10.656 cv
136.215 10.605 136.004 10.582 135.762 10.578 cv
135.43 10.582 135.137 10.617 134.883 10.687 cv
134.621 10.762 134.395 10.844 134.199 10.93 cv
134 11.023 133.836 11.102 133.707 11.172 cv
133.57 11.246 133.461 11.285 133.383 11.281 cv
133.32 11.285 133.27 11.266 133.23 11.227 cv
133.184 11.191 133.148 11.141 133.121 11.07 cv
133.09 11.008 133.066 10.922 133.055 10.82 cv
133.035 10.723 133.027 10.613 133.031 10.492 cv
133.027 10.332 133.043 10.207 133.07 10.109 cv
133.094 10.02 133.141 9.93402 133.219 9.85498 cv
133.289 9.78101 133.418 9.69897 133.602 9.60901 cv
133.781 9.52002 133.992 9.43402 134.238 9.35498 cv
134.48 9.27698 134.75 9.21503 135.039 9.164 cv
135.328 9.117 135.625 9.09399 135.934 9.09003 cv
136.477 9.09399 136.941 9.14502 137.328 9.25 cv
137.715 9.35901 138.035 9.52301 138.285 9.742 cv
138.535 9.961 138.715 10.246 138.832 10.594 cv
138.941 10.945 139 11.359 139.004 11.832 cv
cp
137.078 13.531 mo
136.328 13.531 li
136.012 13.535 135.742 13.559 135.52 13.602 cv
135.293 13.652 135.109 13.723 134.973 13.812 cv
134.828 13.91 134.727 14.023 134.664 14.152 cv
134.598 14.289 134.563 14.437 134.566 14.605 cv
134.563 14.898 134.656 15.129 134.844 15.293 cv
135.027 15.461 135.285 15.543 135.613 15.543 cv
135.887 15.543 136.137 15.473 136.371 15.332 cv
136.598 15.191 136.836 14.988 137.078 14.715 cv
cp
f
142.926 16.484 mo
142.922 16.539 142.906 16.582 142.879 16.621 cv
142.844 16.66 142.789 16.695 142.719 16.719 cv
142.641 16.746 142.543 16.762 142.418 16.777 cv
142.293 16.789 142.133 16.797 141.945 16.797 cv
141.75 16.797 141.594 16.789 141.469 16.777 cv
141.344 16.762 141.242 16.746 141.168 16.719 cv
141.09 16.695 141.035 16.66 141.008 16.621 cv
140.973 16.582 140.957 16.539 140.961 16.484 cv
140.961 6.23798 li
140.957 6.18701 140.973 6.14099 141.008 6.09802 cv
141.035 6.05902 141.09 6.02301 141.168 5.992 cv
141.242 5.96503 141.344 5.94501 141.469 5.92603 cv
141.594 5.914 141.75 5.90601 141.945 5.90198 cv
142.133 5.90601 142.293 5.914 142.418 5.92603 cv
142.543 5.94501 142.641 5.96503 142.719 5.992 cv
142.789 6.02301 142.844 6.05902 142.879 6.09802 cv
142.906 6.14099 142.922 6.18701 142.926 6.23798 cv
cp
f
146.898 16.484 mo
146.895 16.539 146.879 16.582 146.852 16.621 cv
146.816 16.66 146.762 16.695 146.691 16.719 cv
146.613 16.746 146.516 16.762 146.391 16.777 cv
146.266 16.789 146.105 16.797 145.918 16.797 cv
145.723 16.797 145.566 16.789 145.441 16.777 cv
145.316 16.762 145.215 16.746 145.141 16.719 cv
145.063 16.695 145.008 16.66 144.98 16.621 cv
144.945 16.582 144.93 16.539 144.934 16.484 cv
144.934 9.55103 li
144.93 9.5 144.945 9.453 144.98 9.414 cv
145.008 9.375 145.063 9.34399 145.141 9.31201 cv
145.215 9.289 145.316 9.26599 145.441 9.24597 cv
145.566 9.23401 145.723 9.22699 145.918 9.22302 cv
146.105 9.22699 146.266 9.23401 146.391 9.24597 cv
146.516 9.26599 146.613 9.289 146.691 9.31201 cv
146.762 9.34399 146.816 9.375 146.852 9.414 cv
146.879 9.453 146.895 9.5 146.898 9.55103 cv
cp
147.047 7.17999 mo
147.047 7.578 146.965 7.85199 146.805 8 cv
146.641 8.15198 146.344 8.22699 145.91 8.22302 cv
145.465 8.22699 145.164 8.15198 145.016 8.008 cv
144.859 7.86298 144.785 7.60199 144.785 7.21899 cv
144.785 6.82397 144.863 6.55103 145.023 6.39801 cv
145.18 6.24597 145.48 6.16803 145.926 6.16803 cv
146.359 6.16803 146.656 6.242 146.813 6.39099 cv
146.969 6.539 147.047 6.80499 147.047 7.17999 cv
cp
f
155.504 16.484 mo
155.5 16.539 155.484 16.582 155.457 16.621 cv
155.422 16.66 155.371 16.695 155.301 16.719 cv
155.227 16.746 155.125 16.762 155 16.777 cv
154.871 16.789 154.715 16.797 154.531 16.797 cv
154.336 16.797 154.176 16.789 154.051 16.777 cv
153.922 16.762 153.82 16.746 153.75 16.719 cv
153.672 16.695 153.621 16.66 153.594 16.621 cv
153.559 16.582 153.543 16.539 153.547 16.484 cv
153.547 12.52 li
153.543 12.184 153.52 11.918 153.473 11.723 cv
153.422 11.531 153.348 11.367 153.258 11.23 cv
153.164 11.094 153.047 10.988 152.898 10.91 cv
152.75 10.836 152.574 10.797 152.379 10.797 cv
152.125 10.797 151.875 10.891 151.621 11.07 cv
151.367 11.254 151.102 11.516 150.828 11.863 cv
150.828 16.484 li
150.824 16.539 150.809 16.582 150.781 16.621 cv
150.746 16.66 150.691 16.695 150.621 16.719 cv
150.543 16.746 150.445 16.762 150.32 16.777 cv
150.195 16.789 150.035 16.797 149.848 16.797 cv
149.652 16.797 149.496 16.789 149.371 16.777 cv
149.246 16.762 149.145 16.746 149.07 16.719 cv
148.992 16.695 148.938 16.66 148.91 16.621 cv
148.875 16.582 148.859 16.539 148.863 16.484 cv
148.863 9.53497 li
148.859 9.48798 148.875 9.44098 148.902 9.39801 cv
148.926 9.36298 148.973 9.33197 149.043 9.30103 cv
149.109 9.27698 149.195 9.258 149.305 9.242 cv
149.41 9.23401 149.543 9.22699 149.707 9.22302 cv
149.871 9.22699 150.008 9.23401 150.117 9.242 cv
150.223 9.258 150.309 9.27698 150.371 9.30103 cv
150.43 9.33197 150.473 9.36298 150.5 9.39801 cv
150.523 9.44098 150.535 9.48798 150.539 9.53497 cv
150.539 10.336 li
150.922 9.92603 151.313 9.61298 151.711 9.40198 cv
152.105 9.19501 152.523 9.09399 152.957 9.09003 cv
153.426 9.09399 153.824 9.172 154.152 9.32397 cv
154.477 9.48401 154.738 9.69501 154.938 9.961 cv
155.137 10.23 155.281 10.543 155.371 10.898 cv
155.457 11.258 155.5 11.687 155.504 12.191 cv
cp
f
163.699 10.016 mo
163.695 10.27 163.668 10.453 163.613 10.57 cv
163.555 10.691 163.484 10.75 163.406 10.75 cv
162.586 10.75 li
162.699 10.875 162.781 11.02 162.832 11.176 cv
162.879 11.336 162.902 11.5 162.906 11.668 cv
162.902 12.078 162.836 12.437 162.703 12.75 cv
162.566 13.066 162.371 13.332 162.121 13.543 cv
161.867 13.762 161.566 13.926 161.211 14.035 cv
160.852 14.152 160.453 14.207 160.023 14.203 cv
159.797 14.207 159.586 14.18 159.383 14.121 cv
159.18 14.07 159.023 14.008 158.914 13.93 cv
158.852 14 158.793 14.078 158.746 14.172 cv
158.695 14.266 158.672 14.371 158.676 14.48 cv
158.672 14.637 158.738 14.758 158.871 14.852 cv
159 14.949 159.188 15.004 159.43 15.012 cv
161.121 15.074 li
161.516 15.09 161.867 15.148 162.176 15.242 cv
162.484 15.344 162.746 15.477 162.957 15.648 cv
163.168 15.824 163.328 16.035 163.438 16.277 cv
163.547 16.523 163.602 16.797 163.605 17.109 cv
163.602 17.445 163.527 17.77 163.379 18.078 cv
163.23 18.379 163.004 18.641 162.703 18.867 cv
162.398 19.086 162.02 19.266 161.566 19.398 cv
161.109 19.527 160.578 19.59 159.977 19.594 cv
159.379 19.59 158.875 19.543 158.457 19.453 cv
158.039 19.355 157.695 19.227 157.43 19.062 cv
157.16 18.895 156.965 18.695 156.848 18.469 cv
156.723 18.234 156.664 17.98 156.664 17.707 cv
156.664 17.535 156.684 17.375 156.73 17.219 cv
156.77 17.062 156.836 16.91 156.926 16.77 cv
157.008 16.625 157.113 16.492 157.238 16.359 cv
157.363 16.23 157.504 16.105 157.668 15.984 cv
157.441 15.871 157.27 15.711 157.148 15.5 cv
157.027 15.297 156.969 15.07 156.969 14.824 cv
156.969 14.523 157.035 14.246 157.176 13.988 cv
157.313 13.738 157.496 13.508 157.723 13.305 cv
157.539 13.125 157.395 12.91 157.285 12.652 cv
157.176 12.402 157.121 12.082 157.125 11.699 cv
157.121 11.297 157.191 10.937 157.336 10.613 cv
157.477 10.297 157.676 10.027 157.934 9.80499 cv
158.188 9.586 158.492 9.414 158.844 9.297 cv
159.195 9.17999 159.586 9.12097 160.016 9.12097 cv
160.234 9.12097 160.441 9.13702 160.641 9.15997 cv
160.84 9.19098 161.027 9.22699 161.199 9.27002 cv
163.406 9.27002 li
163.488 9.27301 163.559 9.33197 163.617 9.44098 cv
163.668 9.55902 163.695 9.75 163.699 10.016 cv
cp
161.184 11.66 mo
161.18 11.289 161.078 11 160.871 10.789 cv
160.66 10.586 160.367 10.48 159.992 10.477 cv
159.797 10.48 159.625 10.512 159.484 10.574 cv
159.336 10.641 159.215 10.73 159.121 10.84 cv
159.02 10.953 158.949 11.082 158.906 11.23 cv
158.855 11.379 158.832 11.535 158.836 11.691 cv
158.832 12.051 158.938 12.328 159.148 12.531 cv
159.355 12.738 159.645 12.844 160.016 12.84 cv
160.211 12.844 160.379 12.812 160.527 12.746 cv
160.668 12.687 160.789 12.602 160.891 12.488 cv
160.984 12.383 161.059 12.254 161.109 12.109 cv
161.156 11.969 161.18 11.82 161.184 11.66 cv
cp
161.645 17.211 mo
161.645 16.973 161.551 16.797 161.363 16.672 cv
161.176 16.551 160.918 16.48 160.59 16.469 cv
159.195 16.43 li
159.059 16.531 158.949 16.625 158.871 16.715 cv
158.789 16.805 158.727 16.891 158.68 16.977 cv
158.629 17.059 158.594 17.141 158.582 17.219 cv
158.563 17.297 158.555 17.375 158.559 17.461 cv
158.555 17.715 158.688 17.914 158.949 18.051 cv
159.211 18.184 159.582 18.25 160.063 18.254 cv
160.355 18.25 160.602 18.219 160.809 18.164 cv
161.008 18.102 161.172 18.023 161.301 17.926 cv
161.422 17.824 161.512 17.715 161.566 17.594 cv
161.617 17.473 161.645 17.344 161.645 17.211 cv
cp
f
169.891 14.52 mo
169.887 14.918 169.813 15.266 169.668 15.566 cv
169.52 15.867 169.313 16.121 169.043 16.32 cv
168.77 16.527 168.449 16.676 168.082 16.777 cv
167.715 16.875 167.313 16.926 166.883 16.93 cv
166.617 16.926 166.371 16.906 166.137 16.871 cv
165.902 16.828 165.691 16.781 165.504 16.723 cv
165.316 16.664 165.16 16.602 165.035 16.539 cv
164.91 16.477 164.816 16.418 164.762 16.363 cv
164.703 16.309 164.66 16.227 164.633 16.109 cv
164.598 15.996 164.582 15.82 164.586 15.59 cv
164.582 15.441 164.59 15.32 164.602 15.227 cv
164.609 15.137 164.625 15.066 164.648 15.008 cv
164.668 14.957 164.691 14.918 164.727 14.898 cv
164.754 14.883 164.793 14.875 164.84 14.871 cv
164.895 14.875 164.98 14.906 165.094 14.969 cv
165.203 15.035 165.34 15.109 165.512 15.184 cv
165.676 15.266 165.871 15.336 166.09 15.402 cv
166.309 15.473 166.559 15.508 166.844 15.504 cv
167.02 15.508 167.176 15.488 167.316 15.449 cv
167.449 15.414 167.57 15.363 167.676 15.293 cv
167.773 15.227 167.848 15.141 167.902 15.035 cv
167.949 14.934 167.977 14.812 167.98 14.676 cv
167.977 14.52 167.93 14.387 167.836 14.277 cv
167.742 14.168 167.613 14.07 167.457 13.984 cv
167.293 13.902 167.113 13.824 166.918 13.75 cv
166.715 13.68 166.512 13.602 166.301 13.508 cv
166.09 13.422 165.883 13.32 165.688 13.203 cv
165.484 13.094 165.305 12.953 165.148 12.785 cv
164.984 12.621 164.859 12.422 164.766 12.184 cv
164.672 11.953 164.625 11.672 164.625 11.34 cv
164.625 11.012 164.688 10.707 164.816 10.426 cv
164.945 10.152 165.133 9.914 165.379 9.71503 cv
165.621 9.52002 165.918 9.367 166.27 9.25403 cv
166.617 9.14801 167.012 9.09399 167.453 9.09003 cv
167.668 9.09399 167.879 9.10901 168.086 9.13702 cv
168.289 9.172 168.477 9.211 168.645 9.25403 cv
168.809 9.30499 168.949 9.35498 169.066 9.40601 cv
169.18 9.46503 169.262 9.51202 169.313 9.547 cv
169.359 9.59003 169.395 9.62903 169.418 9.664 cv
169.438 9.70697 169.449 9.75403 169.461 9.80499 cv
169.469 9.85901 169.48 9.92603 169.488 10.004 cv
169.496 10.09 169.5 10.187 169.5 10.305 cv
169.5 10.445 169.496 10.562 169.488 10.648 cv
169.48 10.742 169.465 10.812 169.449 10.859 cv
169.43 10.914 169.406 10.949 169.379 10.965 cv
169.344 10.988 169.309 10.996 169.27 10.992 cv
169.219 10.996 169.145 10.969 169.051 10.91 cv
168.949 10.859 168.828 10.801 168.68 10.734 cv
168.531 10.676 168.359 10.617 168.164 10.559 cv
167.969 10.508 167.746 10.48 167.5 10.477 cv
167.32 10.48 167.168 10.5 167.039 10.531 cv
166.906 10.57 166.797 10.621 166.719 10.687 cv
166.633 10.758 166.57 10.836 166.531 10.926 cv
166.484 11.02 166.465 11.117 166.469 11.219 cv
166.465 11.379 166.516 11.516 166.617 11.621 cv
166.715 11.734 166.844 11.828 167.008 11.91 cv
167.168 11.996 167.352 12.074 167.559 12.145 cv
167.762 12.219 167.969 12.301 168.18 12.383 cv
168.387 12.473 168.594 12.57 168.805 12.684 cv
169.008 12.797 169.191 12.937 169.352 13.102 cv
169.512 13.27 169.641 13.469 169.742 13.699 cv
169.836 13.934 169.887 14.207 169.891 14.52 cv
cp
f
182.004 12.937 mo
182 13.535 181.922 14.078 181.77 14.562 cv
181.609 15.055 181.375 15.473 181.059 15.824 cv
180.742 16.176 180.344 16.449 179.867 16.641 cv
179.387 16.832 178.828 16.926 178.191 16.93 cv
177.57 16.926 177.031 16.844 176.578 16.672 cv
176.117 16.504 175.738 16.254 175.441 15.926 cv
175.137 15.602 174.914 15.199 174.77 14.719 cv
174.625 14.242 174.555 13.695 174.555 13.078 cv
174.555 12.488 174.633 11.949 174.789 11.457 cv
174.945 10.969 175.184 10.547 175.504 10.195 cv
175.82 9.84802 176.215 9.57397 176.691 9.37903 cv
177.164 9.18701 177.723 9.09399 178.363 9.09003 cv
178.988 9.09399 179.527 9.17603 179.984 9.34399 cv
180.441 9.51599 180.82 9.76599 181.117 10.09 cv
181.414 10.418 181.637 10.82 181.785 11.297 cv
181.93 11.777 182 12.324 182.004 12.937 cv
cp
179.984 13.016 mo
179.98 12.68 179.953 12.363 179.902 12.07 cv
179.844 11.785 179.75 11.535 179.625 11.32 cv
179.492 11.109 179.32 10.941 179.109 10.82 cv
178.891 10.703 178.621 10.645 178.293 10.641 cv
178.004 10.645 177.75 10.699 177.531 10.801 cv
177.313 10.91 177.133 11.066 176.992 11.27 cv
176.852 11.477 176.746 11.723 176.676 12.008 cv
176.605 12.301 176.57 12.629 176.57 12.992 cv
176.57 13.34 176.598 13.656 176.656 13.941 cv
176.711 14.234 176.805 14.484 176.934 14.695 cv
177.059 14.91 177.23 15.074 177.453 15.187 cv
177.668 15.309 177.938 15.367 178.262 15.363 cv
178.555 15.367 178.813 15.312 179.035 15.203 cv
179.25 15.098 179.43 14.945 179.57 14.738 cv
179.711 14.539 179.813 14.293 179.883 14.004 cv
179.945 13.719 179.98 13.391 179.984 13.016 cv
cp
f
187.754 6.883 mo
187.75 7.03497 187.746 7.15601 187.738 7.24597 cv
187.727 7.34003 187.711 7.40997 187.691 7.45697 cv
187.668 7.508 187.645 7.54303 187.621 7.55902 cv
187.594 7.578 187.566 7.586 187.535 7.586 cv
187.496 7.586 187.453 7.578 187.414 7.55902 cv
187.367 7.54303 187.313 7.52301 187.25 7.5 cv
187.18 7.47998 187.105 7.461 187.02 7.44098 cv
186.93 7.42603 186.824 7.41803 186.707 7.414 cv
186.563 7.41803 186.441 7.43701 186.344 7.47998 cv
186.242 7.52698 186.16 7.59802 186.094 7.69098 cv
186.023 7.789 185.973 7.914 185.945 8.06598 cv
185.91 8.21899 185.895 8.40601 185.898 8.62903 cv
185.898 9.27002 li
187.168 9.27002 li
187.211 9.27301 187.254 9.28497 187.297 9.30902 cv
187.332 9.336 187.367 9.37903 187.395 9.43701 cv
187.418 9.5 187.438 9.58197 187.453 9.68402 cv
187.465 9.78497 187.469 9.914 187.473 10.062 cv
187.469 10.352 187.445 10.555 187.395 10.676 cv
187.34 10.801 187.262 10.863 187.168 10.859 cv
185.898 10.859 li
185.898 16.484 li
185.895 16.539 185.879 16.582 185.852 16.621 cv
185.816 16.66 185.766 16.695 185.695 16.719 cv
185.621 16.746 185.52 16.762 185.391 16.777 cv
185.258 16.789 185.098 16.797 184.914 16.797 cv
184.727 16.797 184.57 16.789 184.445 16.777 cv
184.316 16.762 184.215 16.746 184.141 16.719 cv
184.063 16.695 184.012 16.66 183.984 16.621 cv
183.953 16.582 183.938 16.539 183.941 16.484 cv
183.941 10.859 li
183.07 10.859 li
182.969 10.863 182.895 10.801 182.848 10.676 cv
182.797 10.555 182.77 10.352 182.773 10.062 cv
182.77 9.914 182.777 9.78497 182.793 9.68402 cv
182.805 9.58197 182.824 9.5 182.848 9.43701 cv
182.871 9.37903 182.902 9.336 182.941 9.30902 cv
182.98 9.28497 183.023 9.27301 183.078 9.27002 cv
183.941 9.27002 li
183.941 8.68402 li
183.938 8.21503 183.984 7.80103 184.082 7.44098 cv
184.172 7.086 184.32 6.789 184.523 6.55499 cv
184.723 6.32001 184.977 6.14502 185.285 6.02002 cv
185.594 5.90198 185.957 5.84003 186.383 5.84003 cv
186.578 5.84003 186.77 5.85901 186.957 5.89099 cv
187.137 5.92999 187.281 5.96503 187.387 6 cv
187.488 6.04303 187.559 6.078 187.598 6.10901 cv
187.633 6.14502 187.664 6.19501 187.688 6.258 cv
187.711 6.32397 187.727 6.40601 187.738 6.508 cv
187.746 6.60901 187.75 6.73401 187.754 6.883 cv
cp
f
196.324 15.801 mo
196.324 16.027 196.309 16.203 196.281 16.324 cv
196.25 16.449 196.211 16.535 196.168 16.582 cv
196.117 16.633 196.051 16.676 195.961 16.715 cv
195.867 16.754 195.758 16.785 195.641 16.816 cv
195.516 16.84 195.383 16.863 195.242 16.883 cv
195.098 16.895 194.957 16.902 194.813 16.906 cv
194.422 16.902 194.082 16.852 193.797 16.758 cv
193.512 16.656 193.277 16.508 193.09 16.301 cv
192.902 16.098 192.762 15.84 192.676 15.527 cv
192.582 15.219 192.539 14.848 192.543 14.418 cv
192.543 10.859 li
191.711 10.859 li
191.609 10.863 191.535 10.801 191.484 10.676 cv
191.43 10.555 191.402 10.352 191.406 10.062 cv
191.402 9.914 191.41 9.78497 191.426 9.68402 cv
191.438 9.58197 191.457 9.5 191.484 9.43701 cv
191.508 9.37903 191.539 9.336 191.582 9.30902 cv
191.617 9.28497 191.664 9.27301 191.719 9.27002 cv
192.543 9.27002 li
192.543 7.71899 li
192.539 7.672 192.555 7.625 192.586 7.578 cv
192.613 7.539 192.664 7.50403 192.742 7.47302 cv
192.816 7.44897 192.918 7.42603 193.047 7.40997 cv
193.172 7.39801 193.328 7.39502 193.52 7.39099 cv
193.707 7.39502 193.867 7.39801 193.996 7.40997 cv
194.121 7.42603 194.223 7.44897 194.297 7.47302 cv
194.367 7.50403 194.418 7.539 194.453 7.578 cv
194.48 7.625 194.496 7.672 194.5 7.71899 cv
194.5 9.27002 li
196.012 9.27002 li
196.063 9.27301 196.109 9.28497 196.148 9.30902 cv
196.188 9.336 196.219 9.37903 196.246 9.43701 cv
196.27 9.5 196.289 9.58197 196.305 9.68402 cv
196.316 9.78497 196.324 9.914 196.324 10.062 cv
196.324 10.352 196.297 10.555 196.246 10.676 cv
196.191 10.801 196.117 10.863 196.02 10.859 cv
194.5 10.859 li
194.5 14.125 li
194.496 14.504 194.555 14.789 194.68 14.977 cv
194.797 15.168 195.012 15.262 195.316 15.262 cv
195.418 15.262 195.512 15.254 195.598 15.234 cv
195.68 15.219 195.754 15.199 195.82 15.172 cv
195.883 15.152 195.938 15.129 195.984 15.109 cv
196.027 15.094 196.066 15.086 196.105 15.082 cv
196.133 15.086 196.164 15.094 196.195 15.109 cv
196.223 15.129 196.242 15.168 196.262 15.219 cv
196.273 15.277 196.289 15.352 196.305 15.441 cv
196.316 15.539 196.324 15.656 196.324 15.801 cv
cp
f
204.387 16.484 mo
204.383 16.539 204.367 16.582 204.34 16.621 cv
204.305 16.66 204.254 16.695 204.184 16.719 cv
204.109 16.746 204.008 16.762 203.883 16.777 cv
203.754 16.789 203.598 16.797 203.414 16.797 cv
203.219 16.797 203.059 16.789 202.934 16.777 cv
202.805 16.762 202.703 16.746 202.633 16.719 cv
202.555 16.695 202.504 16.66 202.477 16.621 cv
202.441 16.582 202.426 16.539 202.43 16.484 cv
202.43 12.52 li
202.426 12.184 202.402 11.918 202.355 11.723 cv
202.305 11.531 202.23 11.367 202.141 11.23 cv
202.047 11.094 201.93 10.988 201.781 10.91 cv
201.633 10.836 201.457 10.797 201.262 10.797 cv
201.008 10.797 200.758 10.891 200.504 11.07 cv
200.25 11.254 199.984 11.516 199.711 11.863 cv
199.711 16.484 li
199.707 16.539 199.691 16.582 199.664 16.621 cv
199.629 16.66 199.574 16.695 199.504 16.719 cv
199.426 16.746 199.328 16.762 199.203 16.777 cv
199.078 16.789 198.918 16.797 198.73 16.797 cv
198.535 16.797 198.379 16.789 198.254 16.777 cv
198.129 16.762 198.027 16.746 197.953 16.719 cv
197.875 16.695 197.82 16.66 197.793 16.621 cv
197.758 16.582 197.742 16.539 197.746 16.484 cv
197.746 6.23798 li
197.742 6.18701 197.758 6.14099 197.793 6.09802 cv
197.82 6.05902 197.875 6.02301 197.953 5.992 cv
198.027 5.96503 198.129 5.94501 198.254 5.92603 cv
198.379 5.914 198.535 5.90601 198.73 5.90198 cv
198.918 5.90601 199.078 5.914 199.203 5.92603 cv
199.328 5.94501 199.426 5.96503 199.504 5.992 cv
199.574 6.02301 199.629 6.05902 199.664 6.09802 cv
199.691 6.14099 199.707 6.18701 199.711 6.23798 cv
199.711 10.078 li
200.047 9.75 200.391 9.50403 200.742 9.336 cv
201.09 9.17603 201.457 9.09399 201.84 9.09003 cv
202.309 9.09399 202.707 9.172 203.035 9.32397 cv
203.359 9.48401 203.621 9.69501 203.82 9.96503 cv
204.02 10.234 204.164 10.551 204.254 10.91 cv
204.34 11.273 204.383 11.711 204.387 12.223 cv
cp
f
212.676 12.809 mo
212.672 13.047 212.621 13.223 212.516 13.336 cv
212.406 13.453 212.258 13.512 212.078 13.508 cv
207.844 13.508 li
207.84 13.809 207.875 14.078 207.949 14.316 cv
208.016 14.559 208.129 14.762 208.285 14.93 cv
208.438 15.102 208.633 15.23 208.875 15.316 cv
209.113 15.406 209.402 15.449 209.746 15.449 cv
210.086 15.449 210.387 15.426 210.648 15.375 cv
210.906 15.328 211.133 15.273 211.324 15.211 cv
211.512 15.152 211.668 15.098 211.797 15.047 cv
211.918 15 212.02 14.977 212.102 14.973 cv
212.145 14.977 212.184 14.984 212.219 15 cv
212.246 15.02 212.273 15.051 212.293 15.098 cv
212.313 15.145 212.324 15.211 212.336 15.297 cv
212.34 15.383 212.344 15.492 212.348 15.621 cv
212.344 15.738 212.344 15.836 212.34 15.914 cv
212.332 15.996 212.324 16.062 212.316 16.117 cv
212.305 16.176 212.289 16.227 212.27 16.262 cv
212.25 16.305 212.223 16.34 212.191 16.375 cv
212.156 16.414 212.063 16.465 211.914 16.523 cv
211.758 16.59 211.566 16.652 211.336 16.707 cv
211.098 16.77 210.828 16.816 210.531 16.863 cv
210.227 16.902 209.906 16.926 209.566 16.93 cv
208.945 16.926 208.402 16.852 207.941 16.695 cv
207.473 16.543 207.086 16.305 206.777 15.988 cv
206.461 15.672 206.227 15.273 206.078 14.789 cv
205.922 14.309 205.848 13.742 205.852 13.086 cv
205.848 12.473 205.926 11.914 206.09 11.418 cv
206.246 10.922 206.48 10.504 206.793 10.156 cv
207.098 9.81201 207.473 9.547 207.91 9.36298 cv
208.348 9.18402 208.84 9.09399 209.395 9.09003 cv
209.973 9.09399 210.473 9.17999 210.887 9.34802 cv
211.301 9.52301 211.637 9.76202 211.902 10.062 cv
212.164 10.367 212.359 10.727 212.488 11.141 cv
212.609 11.559 212.672 12.008 212.676 12.496 cv
cp
210.773 12.246 mo
210.785 11.695 210.676 11.262 210.441 10.949 cv
210.207 10.637 209.84 10.48 209.348 10.477 cv
209.098 10.48 208.883 10.527 208.699 10.617 cv
208.512 10.715 208.359 10.84 208.238 10.996 cv
208.113 11.156 208.02 11.344 207.957 11.559 cv
207.891 11.773 207.852 12.004 207.844 12.246 cv
cp
f
225.023 9.72998 mo
225.023 10.297 224.934 10.801 224.758 11.234 cv
224.578 11.672 224.32 12.039 223.984 12.336 cv
223.645 12.641 223.23 12.867 222.742 13.02 cv
222.25 13.176 221.672 13.254 221.008 13.25 cv
220.168 13.25 li
220.168 16.469 li
220.164 16.523 220.148 16.57 220.117 16.609 cv
220.082 16.652 220.027 16.687 219.949 16.711 cv
219.871 16.738 219.766 16.758 219.637 16.773 cv
219.504 16.789 219.34 16.797 219.141 16.797 cv
218.941 16.797 218.773 16.789 218.645 16.773 cv
218.508 16.758 218.402 16.738 218.328 16.711 cv
218.246 16.687 218.191 16.652 218.164 16.609 cv
218.129 16.57 218.113 16.523 218.117 16.469 cv
218.117 7.39801 li
218.113 7.15601 218.18 6.97302 218.309 6.84802 cv
218.434 6.72699 218.602 6.66803 218.813 6.664 cv
221.188 6.664 li
221.422 6.66803 221.652 6.67603 221.871 6.69098 cv
222.086 6.711 222.344 6.75 222.645 6.80902 cv
222.945 6.87097 223.25 6.97998 223.563 7.14099 cv
223.871 7.30499 224.133 7.51202 224.352 7.75403 cv
224.566 8.00403 224.734 8.29303 224.852 8.62097 cv
224.965 8.953 225.023 9.32001 225.023 9.72998 cv
cp
222.879 9.875 mo
222.879 9.52698 222.816 9.23401 222.691 9.00403 cv
222.566 8.77698 222.41 8.60901 222.23 8.49597 cv
222.047 8.39099 221.859 8.32001 221.66 8.289 cv
221.457 8.26202 221.25 8.25 221.039 8.24597 cv
220.168 8.24597 li
220.168 11.668 li
221.086 11.668 li
221.414 11.672 221.688 11.625 221.91 11.535 cv
222.129 11.449 222.309 11.328 222.449 11.168 cv
222.586 11.012 222.691 10.82 222.77 10.598 cv
222.84 10.379 222.879 10.141 222.879 9.875 cv
cp
f
230.961 10.18 mo
230.961 10.371 230.953 10.523 230.945 10.641 cv
230.93 10.762 230.914 10.855 230.898 10.922 cv
230.875 10.992 230.848 11.039 230.816 11.062 cv
230.777 11.09 230.734 11.102 230.688 11.102 cv
230.641 11.102 230.594 11.094 230.547 11.074 cv
230.492 11.059 230.434 11.039 230.371 11.016 cv
230.301 10.996 230.23 10.977 230.156 10.957 cv
230.074 10.941 229.988 10.934 229.898 10.93 cv
229.785 10.934 229.676 10.953 229.57 10.996 cv
229.461 11.043 229.348 11.113 229.234 11.203 cv
229.113 11.297 228.992 11.422 228.867 11.574 cv
228.738 11.734 228.602 11.926 228.457 12.152 cv
228.457 16.484 li
228.453 16.539 228.438 16.582 228.41 16.621 cv
228.375 16.66 228.32 16.695 228.25 16.719 cv
228.172 16.746 228.074 16.762 227.949 16.777 cv
227.824 16.789 227.664 16.797 227.477 16.797 cv
227.281 16.797 227.125 16.789 227 16.777 cv
226.875 16.762 226.773 16.746 226.699 16.719 cv
226.621 16.695 226.566 16.66 226.539 16.621 cv
226.504 16.582 226.488 16.539 226.492 16.484 cv
226.492 9.53497 li
226.488 9.48798 226.504 9.44098 226.531 9.39801 cv
226.555 9.36298 226.602 9.33197 226.672 9.30103 cv
226.738 9.27698 226.824 9.258 226.934 9.242 cv
227.039 9.23401 227.172 9.22699 227.336 9.22302 cv
227.5 9.22699 227.637 9.23401 227.746 9.242 cv
227.852 9.258 227.938 9.27698 228 9.30103 cv
228.059 9.33197 228.102 9.36298 228.129 9.39801 cv
228.152 9.44098 228.164 9.48798 228.168 9.53497 cv
228.168 10.398 li
228.348 10.141 228.52 9.92999 228.684 9.758 cv
228.84 9.59399 228.996 9.45697 229.145 9.35498 cv
229.289 9.258 229.434 9.19098 229.578 9.14801 cv
229.723 9.11298 229.867 9.09399 230.016 9.09003 cv
230.082 9.09399 230.156 9.09802 230.234 9.10199 cv
230.313 9.11298 230.391 9.125 230.477 9.14099 cv
230.555 9.15997 230.629 9.17999 230.695 9.203 cv
230.754 9.22699 230.801 9.25403 230.832 9.27698 cv
230.859 9.30902 230.879 9.336 230.895 9.36298 cv
230.906 9.39801 230.918 9.44098 230.93 9.492 cv
230.938 9.55103 230.945 9.633 230.953 9.73798 cv
230.957 9.84802 230.961 9.99597 230.961 10.18 cv
cp
f
238.469 12.809 mo
238.465 13.047 238.414 13.223 238.309 13.336 cv
238.199 13.453 238.051 13.512 237.871 13.508 cv
233.637 13.508 li
233.633 13.809 233.668 14.078 233.742 14.316 cv
233.809 14.559 233.922 14.762 234.078 14.93 cv
234.23 15.102 234.426 15.23 234.668 15.316 cv
234.906 15.406 235.195 15.449 235.539 15.449 cv
235.879 15.449 236.18 15.426 236.441 15.375 cv
236.699 15.328 236.926 15.273 237.117 15.211 cv
237.305 15.152 237.461 15.098 237.59 15.047 cv
237.711 15 237.813 14.977 237.895 14.973 cv
237.938 14.977 237.977 14.984 238.012 15 cv
238.039 15.02 238.066 15.051 238.086 15.098 cv
238.105 15.145 238.117 15.211 238.129 15.297 cv
238.133 15.383 238.137 15.492 238.141 15.621 cv
238.137 15.738 238.137 15.836 238.133 15.914 cv
238.125 15.996 238.117 16.062 238.109 16.117 cv
238.098 16.176 238.082 16.227 238.063 16.262 cv
238.043 16.305 238.016 16.34 237.984 16.375 cv
237.949 16.414 237.855 16.465 237.707 16.523 cv
237.551 16.59 237.359 16.652 237.129 16.707 cv
236.891 16.77 236.621 16.816 236.324 16.863 cv
236.02 16.902 235.699 16.926 235.359 16.93 cv
234.738 16.926 234.195 16.852 233.734 16.695 cv
233.266 16.543 232.879 16.305 232.57 15.988 cv
232.254 15.672 232.02 15.273 231.871 14.789 cv
231.715 14.309 231.641 13.742 231.645 13.086 cv
231.641 12.473 231.719 11.914 231.883 11.418 cv
232.039 10.922 232.273 10.504 232.586 10.156 cv
232.891 9.81201 233.266 9.547 233.703 9.36298 cv
234.141 9.18402 234.633 9.09399 235.188 9.09003 cv
235.766 9.09399 236.266 9.17999 236.68 9.34802 cv
237.094 9.52301 237.43 9.76202 237.695 10.062 cv
237.957 10.367 238.152 10.727 238.281 11.141 cv
238.402 11.559 238.465 12.008 238.469 12.496 cv
cp
236.566 12.246 mo
236.578 11.695 236.469 11.262 236.234 10.949 cv
236 10.637 235.633 10.48 235.141 10.477 cv
234.891 10.48 234.676 10.527 234.492 10.617 cv
234.305 10.715 234.152 10.84 234.031 10.996 cv
233.906 11.156 233.813 11.344 233.75 11.559 cv
233.684 11.773 233.645 12.004 233.637 12.246 cv
cp
f
247.074 12.906 mo
247.074 13.527 247.008 14.086 246.875 14.582 cv
246.742 15.078 246.547 15.5 246.293 15.848 cv
246.039 16.195 245.723 16.465 245.344 16.648 cv
244.961 16.836 244.527 16.926 244.043 16.93 cv
243.836 16.926 243.648 16.906 243.484 16.871 cv
243.313 16.828 243.148 16.77 242.992 16.691 cv
242.832 16.613 242.676 16.516 242.523 16.391 cv
242.363 16.273 242.203 16.133 242.039 15.969 cv
242.039 19.242 li
242.035 19.289 242.02 19.336 241.992 19.383 cv
241.957 19.422 241.902 19.457 241.832 19.488 cv
241.754 19.512 241.656 19.535 241.531 19.555 cv
241.406 19.566 241.246 19.574 241.059 19.578 cv
240.863 19.574 240.707 19.566 240.582 19.555 cv
240.457 19.535 240.355 19.512 240.281 19.488 cv
240.203 19.457 240.148 19.422 240.121 19.383 cv
240.086 19.336 240.07 19.289 240.074 19.242 cv
240.074 9.53497 li
240.07 9.48798 240.086 9.44098 240.113 9.39801 cv
240.137 9.36298 240.18 9.33197 240.25 9.30103 cv
240.313 9.27698 240.398 9.258 240.508 9.242 cv
240.609 9.23401 240.746 9.22699 240.91 9.22302 cv
241.066 9.22699 241.195 9.23401 241.301 9.242 cv
241.406 9.258 241.492 9.27698 241.559 9.30103 cv
241.621 9.33197 241.668 9.36298 241.695 9.39801 cv
241.719 9.44098 241.73 9.48798 241.734 9.53497 cv
241.734 10.352 li
241.934 10.145 242.133 9.96503 242.332 9.80499 cv
242.523 9.64801 242.723 9.51599 242.926 9.40601 cv
243.129 9.30499 243.336 9.22302 243.555 9.16803 cv
243.766 9.117 243.996 9.09399 244.246 9.09003 cv
244.75 9.09399 245.184 9.19098 245.547 9.39099 cv
245.902 9.59399 246.195 9.87097 246.422 10.215 cv
246.645 10.566 246.809 10.969 246.918 11.43 cv
247.02 11.891 247.074 12.383 247.074 12.906 cv
cp
245.031 13.047 mo
245.027 12.754 245.008 12.473 244.965 12.195 cv
244.918 11.926 244.84 11.684 244.738 11.469 cv
244.629 11.258 244.488 11.086 244.316 10.957 cv
244.141 10.832 243.926 10.77 243.668 10.766 cv
243.535 10.77 243.406 10.789 243.281 10.824 cv
243.152 10.867 243.023 10.93 242.891 11.016 cv
242.758 11.105 242.621 11.219 242.484 11.359 cv
242.34 11.5 242.191 11.676 242.039 11.879 cv
242.039 14.172 li
242.313 14.52 242.574 14.789 242.824 14.977 cv
243.07 15.168 243.332 15.262 243.605 15.262 cv
243.859 15.262 244.074 15.199 244.258 15.066 cv
244.434 14.941 244.582 14.77 244.695 14.559 cv
244.809 14.348 244.891 14.109 244.949 13.844 cv
245 13.578 245.027 13.312 245.031 13.047 cv
cp
f
254.57 16.508 mo
254.566 16.586 254.539 16.641 254.492 16.68 cv
254.438 16.723 254.355 16.75 254.246 16.77 cv
254.129 16.785 253.965 16.797 253.75 16.797 cv
253.512 16.797 253.34 16.785 253.238 16.77 cv
253.129 16.75 253.055 16.723 253.016 16.68 cv
252.969 16.641 252.949 16.586 252.949 16.508 cv
252.949 15.957 li
252.66 16.266 252.332 16.504 251.969 16.672 cv
251.602 16.844 251.195 16.926 250.75 16.93 cv
250.379 16.926 250.039 16.879 249.73 16.785 cv
249.422 16.691 249.156 16.551 248.93 16.355 cv
248.703 16.168 248.527 15.934 248.402 15.652 cv
248.277 15.375 248.215 15.047 248.219 14.668 cv
248.215 14.27 248.293 13.918 248.453 13.613 cv
248.609 13.316 248.848 13.07 249.164 12.875 cv
249.477 12.684 249.867 12.539 250.336 12.441 cv
250.805 12.352 251.348 12.305 251.965 12.301 cv
252.645 12.301 li
252.645 11.879 li
252.645 11.664 252.621 11.473 252.578 11.309 cv
252.531 11.148 252.457 11.012 252.359 10.898 cv
252.254 10.793 252.121 10.711 251.953 10.656 cv
251.781 10.605 251.57 10.582 251.328 10.578 cv
250.996 10.582 250.703 10.617 250.449 10.687 cv
250.188 10.762 249.961 10.844 249.766 10.93 cv
249.566 11.023 249.402 11.102 249.273 11.172 cv
249.137 11.246 249.027 11.285 248.949 11.281 cv
248.887 11.285 248.836 11.266 248.797 11.227 cv
248.75 11.191 248.715 11.141 248.688 11.07 cv
248.656 11.008 248.633 10.922 248.621 10.82 cv
248.602 10.723 248.594 10.613 248.598 10.492 cv
248.594 10.332 248.609 10.207 248.637 10.109 cv
248.66 10.02 248.707 9.93402 248.785 9.85498 cv
248.855 9.78101 248.984 9.69897 249.168 9.60901 cv
249.348 9.52002 249.559 9.43402 249.805 9.35498 cv
250.047 9.27698 250.316 9.21503 250.605 9.164 cv
250.895 9.117 251.191 9.09399 251.5 9.09003 cv
252.043 9.09399 252.508 9.14502 252.895 9.25 cv
253.281 9.35901 253.602 9.52301 253.852 9.742 cv
254.102 9.961 254.281 10.246 254.398 10.594 cv
254.508 10.945 254.566 11.359 254.57 11.832 cv
cp
252.645 13.531 mo
251.895 13.531 li
251.578 13.535 251.309 13.559 251.086 13.602 cv
250.859 13.652 250.676 13.723 250.539 13.812 cv
250.395 13.91 250.293 14.023 250.23 14.152 cv
250.164 14.289 250.129 14.437 250.133 14.605 cv
250.129 14.898 250.223 15.129 250.41 15.293 cv
250.594 15.461 250.852 15.543 251.18 15.543 cv
251.453 15.543 251.703 15.473 251.938 15.332 cv
252.164 15.191 252.402 14.988 252.645 14.715 cv
cp
f
260.996 10.18 mo
260.996 10.371 260.988 10.523 260.98 10.641 cv
260.965 10.762 260.949 10.855 260.934 10.922 cv
260.91 10.992 260.883 11.039 260.852 11.062 cv
260.813 11.09 260.77 11.102 260.723 11.102 cv
260.676 11.102 260.629 11.094 260.582 11.074 cv
260.527 11.059 260.469 11.039 260.406 11.016 cv
260.336 10.996 260.266 10.977 260.191 10.957 cv
260.109 10.941 260.023 10.934 259.934 10.93 cv
259.82 10.934 259.711 10.953 259.605 10.996 cv
259.496 11.043 259.383 11.113 259.27 11.203 cv
259.148 11.297 259.027 11.422 258.902 11.574 cv
258.773 11.734 258.637 11.926 258.492 12.152 cv
258.492 16.484 li
258.488 16.539 258.473 16.582 258.445 16.621 cv
258.41 16.66 258.355 16.695 258.285 16.719 cv
258.207 16.746 258.109 16.762 257.984 16.777 cv
257.859 16.789 257.699 16.797 257.512 16.797 cv
257.316 16.797 257.16 16.789 257.035 16.777 cv
256.91 16.762 256.809 16.746 256.734 16.719 cv
256.656 16.695 256.602 16.66 256.574 16.621 cv
256.539 16.582 256.523 16.539 256.527 16.484 cv
256.527 9.53497 li
256.523 9.48798 256.539 9.44098 256.566 9.39801 cv
256.59 9.36298 256.637 9.33197 256.707 9.30103 cv
256.773 9.27698 256.859 9.258 256.969 9.242 cv
257.074 9.23401 257.207 9.22699 257.371 9.22302 cv
257.535 9.22699 257.672 9.23401 257.781 9.242 cv
257.887 9.258 257.973 9.27698 258.035 9.30103 cv
258.094 9.33197 258.137 9.36298 258.164 9.39801 cv
258.188 9.44098 258.199 9.48798 258.203 9.53497 cv
258.203 10.398 li
258.383 10.141 258.555 9.92999 258.719 9.758 cv
258.875 9.59399 259.031 9.45697 259.18 9.35498 cv
259.324 9.258 259.469 9.19098 259.613 9.14801 cv
259.758 9.11298 259.902 9.09399 260.051 9.09003 cv
260.117 9.09399 260.191 9.09802 260.27 9.10199 cv
260.348 9.11298 260.426 9.125 260.512 9.14099 cv
260.59 9.15997 260.664 9.17999 260.73 9.203 cv
260.789 9.22699 260.836 9.25403 260.867 9.27698 cv
260.895 9.30902 260.914 9.336 260.93 9.36298 cv
260.941 9.39801 260.953 9.44098 260.965 9.492 cv
260.973 9.55103 260.98 9.633 260.988 9.73798 cv
260.992 9.84802 260.996 9.99597 260.996 10.18 cv
cp
f
267.734 16.508 mo
267.73 16.586 267.703 16.641 267.656 16.68 cv
267.602 16.723 267.52 16.75 267.41 16.77 cv
267.293 16.785 267.129 16.797 266.914 16.797 cv
266.676 16.797 266.504 16.785 266.402 16.77 cv
266.293 16.75 266.219 16.723 266.18 16.68 cv
266.133 16.641 266.113 16.586 266.113 16.508 cv
266.113 15.957 li
265.824 16.266 265.496 16.504 265.133 16.672 cv
264.766 16.844 264.359 16.926 263.914 16.93 cv
263.543 16.926 263.203 16.879 262.895 16.785 cv
262.586 16.691 262.32 16.551 262.094 16.355 cv
261.867 16.168 261.691 15.934 261.566 15.652 cv
261.441 15.375 261.379 15.047 261.383 14.668 cv
261.379 14.27 261.457 13.918 261.617 13.613 cv
261.773 13.316 262.012 13.07 262.328 12.875 cv
262.641 12.684 263.031 12.539 263.5 12.441 cv
263.969 12.352 264.512 12.305 265.129 12.301 cv
265.809 12.301 li
265.809 11.879 li
265.809 11.664 265.785 11.473 265.742 11.309 cv
265.695 11.148 265.621 11.012 265.523 10.898 cv
265.418 10.793 265.285 10.711 265.117 10.656 cv
264.945 10.605 264.734 10.582 264.492 10.578 cv
264.16 10.582 263.867 10.617 263.613 10.687 cv
263.352 10.762 263.125 10.844 262.93 10.93 cv
262.73 11.023 262.566 11.102 262.438 11.172 cv
262.301 11.246 262.191 11.285 262.113 11.281 cv
262.051 11.285 262 11.266 261.961 11.227 cv
261.914 11.191 261.879 11.141 261.852 11.07 cv
261.82 11.008 261.797 10.922 261.785 10.82 cv
261.766 10.723 261.758 10.613 261.762 10.492 cv
261.758 10.332 261.773 10.207 261.801 10.109 cv
261.824 10.02 261.871 9.93402 261.949 9.85498 cv
262.02 9.78101 262.148 9.69897 262.332 9.60901 cv
262.512 9.52002 262.723 9.43402 262.969 9.35498 cv
263.211 9.27698 263.48 9.21503 263.77 9.164 cv
264.059 9.117 264.355 9.09399 264.664 9.09003 cv
265.207 9.09399 265.672 9.14502 266.059 9.25 cv
266.445 9.35901 266.766 9.52301 267.016 9.742 cv
267.266 9.961 267.445 10.246 267.563 10.594 cv
267.672 10.945 267.73 11.359 267.734 11.832 cv
cp
265.809 13.531 mo
265.059 13.531 li
264.742 13.535 264.473 13.559 264.25 13.602 cv
264.023 13.652 263.84 13.723 263.703 13.812 cv
263.559 13.91 263.457 14.023 263.395 14.152 cv
263.328 14.289 263.293 14.437 263.297 14.605 cv
263.293 14.898 263.387 15.129 263.574 15.293 cv
263.758 15.461 264.016 15.543 264.344 15.543 cv
264.617 15.543 264.867 15.473 265.102 15.332 cv
265.328 15.191 265.566 14.988 265.809 14.715 cv
cp
f
273.73 15.801 mo
273.73 16.027 273.715 16.203 273.688 16.324 cv
273.656 16.449 273.617 16.535 273.574 16.582 cv
273.523 16.633 273.457 16.676 273.367 16.715 cv
273.273 16.754 273.164 16.785 273.047 16.816 cv
272.922 16.84 272.789 16.863 272.648 16.883 cv
272.504 16.895 272.363 16.902 272.219 16.906 cv
271.828 16.902 271.488 16.852 271.203 16.758 cv
270.918 16.656 270.684 16.508 270.496 16.301 cv
270.309 16.098 270.168 15.84 270.082 15.527 cv
269.988 15.219 269.945 14.848 269.949 14.418 cv
269.949 10.859 li
269.117 10.859 li
269.016 10.863 268.941 10.801 268.891 10.676 cv
268.836 10.555 268.809 10.352 268.813 10.062 cv
268.809 9.914 268.816 9.78497 268.832 9.68402 cv
268.844 9.58197 268.863 9.5 268.891 9.43701 cv
268.914 9.37903 268.945 9.336 268.988 9.30902 cv
269.023 9.28497 269.07 9.27301 269.125 9.27002 cv
269.949 9.27002 li
269.949 7.71899 li
269.945 7.672 269.961 7.625 269.992 7.578 cv
270.02 7.539 270.07 7.50403 270.148 7.47302 cv
270.223 7.44897 270.324 7.42603 270.453 7.40997 cv
270.578 7.39801 270.734 7.39502 270.926 7.39099 cv
271.113 7.39502 271.273 7.39801 271.402 7.40997 cv
271.527 7.42603 271.629 7.44897 271.703 7.47302 cv
271.773 7.50403 271.824 7.539 271.859 7.578 cv
271.887 7.625 271.902 7.672 271.906 7.71899 cv
271.906 9.27002 li
273.418 9.27002 li
273.469 9.27301 273.516 9.28497 273.555 9.30902 cv
273.594 9.336 273.625 9.37903 273.652 9.43701 cv
273.676 9.5 273.695 9.58197 273.711 9.68402 cv
273.723 9.78497 273.73 9.914 273.73 10.062 cv
273.73 10.352 273.703 10.555 273.652 10.676 cv
273.598 10.801 273.523 10.863 273.426 10.859 cv
271.906 10.859 li
271.906 14.125 li
271.902 14.504 271.961 14.789 272.086 14.977 cv
272.203 15.168 272.418 15.262 272.723 15.262 cv
272.824 15.262 272.918 15.254 273.004 15.234 cv
273.086 15.219 273.16 15.199 273.227 15.172 cv
273.289 15.152 273.344 15.129 273.391 15.109 cv
273.434 15.094 273.473 15.086 273.512 15.082 cv
273.539 15.086 273.57 15.094 273.602 15.109 cv
273.629 15.129 273.648 15.168 273.668 15.219 cv
273.68 15.277 273.695 15.352 273.711 15.441 cv
273.723 15.539 273.73 15.656 273.73 15.801 cv
cp
f
277.117 16.484 mo
277.113 16.539 277.098 16.582 277.07 16.621 cv
277.035 16.66 276.98 16.695 276.91 16.719 cv
276.832 16.746 276.734 16.762 276.609 16.777 cv
276.484 16.789 276.324 16.797 276.137 16.797 cv
275.941 16.797 275.785 16.789 275.66 16.777 cv
275.535 16.762 275.434 16.746 275.359 16.719 cv
275.281 16.695 275.227 16.66 275.199 16.621 cv
275.164 16.582 275.148 16.539 275.152 16.484 cv
275.152 9.55103 li
275.148 9.5 275.164 9.453 275.199 9.414 cv
275.227 9.375 275.281 9.34399 275.359 9.31201 cv
275.434 9.289 275.535 9.26599 275.66 9.24597 cv
275.785 9.23401 275.941 9.22699 276.137 9.22302 cv
276.324 9.22699 276.484 9.23401 276.609 9.24597 cv
276.734 9.26599 276.832 9.289 276.91 9.31201 cv
276.98 9.34399 277.035 9.375 277.07 9.414 cv
277.098 9.453 277.113 9.5 277.117 9.55103 cv
cp
277.266 7.17999 mo
277.266 7.578 277.184 7.85199 277.023 8 cv
276.859 8.15198 276.563 8.22699 276.129 8.22302 cv
275.684 8.22699 275.383 8.15198 275.234 8.008 cv
275.078 7.86298 275.004 7.60199 275.004 7.21899 cv
275.004 6.82397 275.082 6.55103 275.242 6.39801 cv
275.398 6.24597 275.699 6.16803 276.145 6.16803 cv
276.578 6.16803 276.875 6.242 277.031 6.39099 cv
277.188 6.539 277.266 6.80499 277.266 7.17999 cv
cp
f
286.109 12.937 mo
286.105 13.535 286.027 14.078 285.875 14.562 cv
285.715 15.055 285.48 15.473 285.164 15.824 cv
284.848 16.176 284.449 16.449 283.973 16.641 cv
283.492 16.832 282.934 16.926 282.297 16.93 cv
281.676 16.926 281.137 16.844 280.684 16.672 cv
280.223 16.504 279.844 16.254 279.547 15.926 cv
279.242 15.602 279.02 15.199 278.875 14.719 cv
278.73 14.242 278.66 13.695 278.66 13.078 cv
278.66 12.488 278.738 11.949 278.895 11.457 cv
279.051 10.969 279.289 10.547 279.609 10.195 cv
279.926 9.84802 280.32 9.57397 280.797 9.37903 cv
281.27 9.18701 281.828 9.09399 282.469 9.09003 cv
283.094 9.09399 283.633 9.17603 284.09 9.34399 cv
284.547 9.51599 284.926 9.76599 285.223 10.09 cv
285.52 10.418 285.742 10.82 285.891 11.297 cv
286.035 11.777 286.105 12.324 286.109 12.937 cv
cp
284.09 13.016 mo
284.086 12.68 284.059 12.363 284.008 12.07 cv
283.949 11.785 283.855 11.535 283.73 11.32 cv
283.598 11.109 283.426 10.941 283.215 10.82 cv
282.996 10.703 282.727 10.645 282.398 10.641 cv
282.109 10.645 281.855 10.699 281.637 10.801 cv
281.418 10.91 281.238 11.066 281.098 11.27 cv
280.957 11.477 280.852 11.723 280.781 12.008 cv
280.711 12.301 280.676 12.629 280.676 12.992 cv
280.676 13.34 280.703 13.656 280.762 13.941 cv
280.816 14.234 280.91 14.484 281.039 14.695 cv
281.164 14.91 281.336 15.074 281.559 15.187 cv
281.773 15.309 282.043 15.367 282.367 15.363 cv
282.66 15.367 282.918 15.312 283.141 15.203 cv
283.355 15.098 283.535 14.945 283.676 14.738 cv
283.816 14.539 283.918 14.293 283.988 14.004 cv
284.051 13.719 284.086 13.391 284.09 13.016 cv
cp
f
294.355 16.484 mo
294.352 16.539 294.336 16.582 294.309 16.621 cv
294.273 16.66 294.223 16.695 294.152 16.719 cv
294.078 16.746 293.977 16.762 293.852 16.777 cv
293.723 16.789 293.566 16.797 293.383 16.797 cv
293.188 16.797 293.027 16.789 292.902 16.777 cv
292.773 16.762 292.672 16.746 292.602 16.719 cv
292.523 16.695 292.473 16.66 292.445 16.621 cv
292.41 16.582 292.395 16.539 292.398 16.484 cv
292.398 12.52 li
292.395 12.184 292.371 11.918 292.324 11.723 cv
292.273 11.531 292.199 11.367 292.109 11.23 cv
292.016 11.094 291.898 10.988 291.75 10.91 cv
291.602 10.836 291.426 10.797 291.23 10.797 cv
290.977 10.797 290.727 10.891 290.473 11.07 cv
290.219 11.254 289.953 11.516 289.68 11.863 cv
289.68 16.484 li
289.676 16.539 289.66 16.582 289.633 16.621 cv
289.598 16.66 289.543 16.695 289.473 16.719 cv
289.395 16.746 289.297 16.762 289.172 16.777 cv
289.047 16.789 288.887 16.797 288.699 16.797 cv
288.504 16.797 288.348 16.789 288.223 16.777 cv
288.098 16.762 287.996 16.746 287.922 16.719 cv
287.844 16.695 287.789 16.66 287.762 16.621 cv
287.727 16.582 287.711 16.539 287.715 16.484 cv
287.715 9.53497 li
287.711 9.48798 287.727 9.44098 287.754 9.39801 cv
287.777 9.36298 287.824 9.33197 287.895 9.30103 cv
287.961 9.27698 288.047 9.258 288.156 9.242 cv
288.262 9.23401 288.395 9.22699 288.559 9.22302 cv
288.723 9.22699 288.859 9.23401 288.969 9.242 cv
289.074 9.258 289.16 9.27698 289.223 9.30103 cv
289.281 9.33197 289.324 9.36298 289.352 9.39801 cv
289.375 9.44098 289.387 9.48798 289.391 9.53497 cv
289.391 10.336 li
289.773 9.92603 290.164 9.61298 290.563 9.40198 cv
290.957 9.19501 291.375 9.09399 291.809 9.09003 cv
292.277 9.09399 292.676 9.172 293.004 9.32397 cv
293.328 9.48401 293.59 9.69501 293.789 9.961 cv
293.988 10.23 294.133 10.543 294.223 10.898 cv
294.309 11.258 294.352 11.687 294.355 12.191 cv
cp
f
306.766 7.508 mo
306.762 7.664 306.754 7.79303 306.746 7.89502 cv
306.73 8.00403 306.711 8.09003 306.688 8.15198 cv
306.656 8.21899 306.625 8.26599 306.59 8.29303 cv
306.547 8.328 306.504 8.34399 306.461 8.34003 cv
303.938 8.34003 li
303.938 16.469 li
303.938 16.523 303.918 16.57 303.887 16.609 cv
303.848 16.652 303.793 16.687 303.719 16.711 cv
303.637 16.738 303.531 16.758 303.402 16.773 cv
303.266 16.789 303.102 16.797 302.906 16.797 cv
302.711 16.797 302.547 16.789 302.414 16.773 cv
302.281 16.758 302.176 16.738 302.098 16.711 cv
302.02 16.687 301.961 16.652 301.93 16.609 cv
301.891 16.57 301.875 16.523 301.879 16.469 cv
301.879 8.34003 li
299.355 8.34003 li
299.301 8.34399 299.254 8.328 299.223 8.29303 cv
299.184 8.26599 299.152 8.21899 299.129 8.15198 cv
299.098 8.09003 299.078 8.00403 299.07 7.89502 cv
299.055 7.79303 299.051 7.664 299.051 7.508 cv
299.051 7.35498 299.055 7.22302 299.07 7.10901 cv
299.078 7.00403 299.098 6.914 299.129 6.84802 cv
299.152 6.78497 299.184 6.73798 299.223 6.70697 cv
299.254 6.67999 299.301 6.66803 299.355 6.664 cv
306.461 6.664 li
306.504 6.66803 306.547 6.67999 306.59 6.70697 cv
306.625 6.73798 306.656 6.78497 306.688 6.84802 cv
306.711 6.914 306.73 7.00403 306.746 7.10901 cv
306.754 7.22302 306.762 7.35498 306.766 7.508 cv
cp
f
309.805 16.484 mo
309.801 16.539 309.785 16.582 309.758 16.621 cv
309.723 16.66 309.668 16.695 309.598 16.719 cv
309.52 16.746 309.422 16.762 309.297 16.777 cv
309.172 16.789 309.012 16.797 308.824 16.797 cv
308.629 16.797 308.473 16.789 308.348 16.777 cv
308.223 16.762 308.121 16.746 308.047 16.719 cv
307.969 16.695 307.914 16.66 307.887 16.621 cv
307.852 16.582 307.836 16.539 307.84 16.484 cv
307.84 9.55103 li
307.836 9.5 307.852 9.453 307.887 9.414 cv
307.914 9.375 307.969 9.34399 308.047 9.31201 cv
308.121 9.289 308.223 9.26599 308.348 9.24597 cv
308.473 9.23401 308.629 9.22699 308.824 9.22302 cv
309.012 9.22699 309.172 9.23401 309.297 9.24597 cv
309.422 9.26599 309.52 9.289 309.598 9.31201 cv
309.668 9.34399 309.723 9.375 309.758 9.414 cv
309.785 9.453 309.801 9.5 309.805 9.55103 cv
cp
309.953 7.17999 mo
309.953 7.578 309.871 7.85199 309.711 8 cv
309.547 8.15198 309.25 8.22699 308.816 8.22302 cv
308.371 8.22699 308.07 8.15198 307.922 8.008 cv
307.766 7.86298 307.691 7.60199 307.691 7.21899 cv
307.691 6.82397 307.77 6.55103 307.93 6.39801 cv
308.086 6.24597 308.387 6.16803 308.832 6.16803 cv
309.266 6.16803 309.563 6.242 309.719 6.39099 cv
309.875 6.539 309.953 6.80499 309.953 7.17999 cv
cp
f
322.855 16.484 mo
322.852 16.539 322.836 16.582 322.809 16.621 cv
322.773 16.66 322.723 16.695 322.652 16.719 cv
322.578 16.746 322.477 16.762 322.355 16.777 cv
322.23 16.789 322.074 16.797 321.883 16.797 cv
321.684 16.797 321.523 16.789 321.398 16.777 cv
321.273 16.762 321.172 16.746 321.098 16.719 cv
321.02 16.695 320.969 16.66 320.941 16.621 cv
320.914 16.582 320.898 16.539 320.902 16.484 cv
320.902 12.363 li
320.898 12.133 320.879 11.918 320.836 11.723 cv
320.789 11.531 320.719 11.367 320.633 11.23 cv
320.539 11.094 320.426 10.988 320.289 10.91 cv
320.148 10.836 319.984 10.797 319.793 10.797 cv
319.559 10.797 319.32 10.891 319.082 11.07 cv
318.844 11.254 318.586 11.516 318.305 11.863 cv
318.305 16.484 li
318.305 16.539 318.289 16.582 318.258 16.621 cv
318.227 16.66 318.172 16.695 318.098 16.719 cv
318.02 16.746 317.918 16.762 317.797 16.777 cv
317.672 16.789 317.52 16.797 317.332 16.797 cv
317.137 16.797 316.977 16.789 316.855 16.777 cv
316.727 16.762 316.625 16.746 316.555 16.719 cv
316.477 16.695 316.426 16.66 316.395 16.621 cv
316.363 16.582 316.348 16.539 316.348 16.484 cv
316.348 12.363 li
316.348 12.133 316.324 11.918 316.281 11.723 cv
316.238 11.531 316.172 11.367 316.086 11.23 cv
315.992 11.094 315.879 10.988 315.742 10.91 cv
315.598 10.836 315.434 10.797 315.25 10.797 cv
315.008 10.797 314.77 10.891 314.531 11.07 cv
314.293 11.254 314.035 11.516 313.762 11.863 cv
313.762 16.484 li
313.758 16.539 313.742 16.582 313.715 16.621 cv
313.68 16.66 313.625 16.695 313.555 16.719 cv
313.477 16.746 313.379 16.762 313.254 16.777 cv
313.129 16.789 312.969 16.797 312.781 16.797 cv
312.586 16.797 312.43 16.789 312.305 16.777 cv
312.18 16.762 312.078 16.746 312.004 16.719 cv
311.926 16.695 311.871 16.66 311.844 16.621 cv
311.809 16.582 311.793 16.539 311.797 16.484 cv
311.797 9.53497 li
311.793 9.48798 311.809 9.44098 311.836 9.39801 cv
311.859 9.36298 311.906 9.33197 311.977 9.30103 cv
312.043 9.27698 312.129 9.258 312.238 9.242 cv
312.344 9.23401 312.477 9.22699 312.641 9.22302 cv
312.805 9.22699 312.941 9.23401 313.051 9.242 cv
313.156 9.258 313.242 9.27698 313.305 9.30103 cv
313.363 9.33197 313.406 9.36298 313.434 9.39801 cv
313.457 9.44098 313.469 9.48798 313.473 9.53497 cv
313.473 10.336 li
313.855 9.92603 314.238 9.61298 314.621 9.40198 cv
315 9.19501 315.402 9.09399 315.82 9.09003 cv
316.105 9.09399 316.359 9.12097 316.59 9.17999 cv
316.816 9.242 317.023 9.328 317.203 9.43701 cv
317.383 9.55103 317.535 9.68701 317.664 9.84003 cv
317.793 9.99597 317.902 10.168 317.992 10.359 cv
318.199 10.137 318.402 9.94501 318.605 9.78497 cv
318.801 9.625 319 9.492 319.195 9.39099 cv
319.391 9.289 319.586 9.21503 319.781 9.164 cv
319.977 9.117 320.176 9.09399 320.379 9.09003 cv
320.84 9.09399 321.227 9.172 321.547 9.32397 cv
321.859 9.48401 322.117 9.69501 322.313 9.961 cv
322.508 10.23 322.645 10.543 322.73 10.898 cv
322.809 11.258 322.852 11.637 322.855 12.035 cv
cp
f
331.195 12.809 mo
331.191 13.047 331.141 13.223 331.035 13.336 cv
330.926 13.453 330.777 13.512 330.598 13.508 cv
326.363 13.508 li
326.359 13.809 326.395 14.078 326.469 14.316 cv
326.535 14.559 326.648 14.762 326.805 14.93 cv
326.957 15.102 327.152 15.23 327.395 15.316 cv
327.633 15.406 327.922 15.449 328.266 15.449 cv
328.605 15.449 328.906 15.426 329.168 15.375 cv
329.426 15.328 329.652 15.273 329.844 15.211 cv
330.031 15.152 330.188 15.098 330.316 15.047 cv
330.438 15 330.539 14.977 330.621 14.973 cv
330.664 14.977 330.703 14.984 330.738 15 cv
330.766 15.02 330.793 15.051 330.813 15.098 cv
330.832 15.145 330.844 15.211 330.855 15.297 cv
330.859 15.383 330.863 15.492 330.867 15.621 cv
330.863 15.738 330.863 15.836 330.859 15.914 cv
330.852 15.996 330.844 16.062 330.836 16.117 cv
330.824 16.176 330.809 16.227 330.789 16.262 cv
330.77 16.305 330.742 16.34 330.711 16.375 cv
330.676 16.414 330.582 16.465 330.434 16.523 cv
330.277 16.59 330.086 16.652 329.855 16.707 cv
329.617 16.77 329.348 16.816 329.051 16.863 cv
328.746 16.902 328.426 16.926 328.086 16.93 cv
327.465 16.926 326.922 16.852 326.461 16.695 cv
325.992 16.543 325.605 16.305 325.297 15.988 cv
324.98 15.672 324.746 15.273 324.598 14.789 cv
324.441 14.309 324.367 13.742 324.371 13.086 cv
324.367 12.473 324.445 11.914 324.609 11.418 cv
324.766 10.922 325 10.504 325.313 10.156 cv
325.617 9.81201 325.992 9.547 326.43 9.36298 cv
326.867 9.18402 327.359 9.09399 327.914 9.09003 cv
328.492 9.09399 328.992 9.17999 329.406 9.34802 cv
329.82 9.52301 330.156 9.76202 330.422 10.062 cv
330.684 10.367 330.879 10.727 331.008 11.141 cv
331.129 11.559 331.191 12.008 331.195 12.496 cv
cp
329.293 12.246 mo
329.305 11.695 329.195 11.262 328.961 10.949 cv
328.727 10.637 328.359 10.48 327.867 10.477 cv
327.617 10.48 327.402 10.527 327.219 10.617 cv
327.031 10.715 326.879 10.84 326.758 10.996 cv
326.633 11.156 326.539 11.344 326.477 11.559 cv
326.41 11.773 326.371 12.004 326.363 12.246 cv
cp
f
337.695 14.52 mo
337.691 14.918 337.617 15.266 337.473 15.566 cv
337.324 15.867 337.117 16.121 336.848 16.32 cv
336.574 16.527 336.254 16.676 335.887 16.777 cv
335.52 16.875 335.117 16.926 334.688 16.93 cv
334.422 16.926 334.176 16.906 333.941 16.871 cv
333.707 16.828 333.496 16.781 333.309 16.723 cv
333.121 16.664 332.965 16.602 332.84 16.539 cv
332.715 16.477 332.621 16.418 332.566 16.363 cv
332.508 16.309 332.465 16.227 332.438 16.109 cv
332.402 15.996 332.387 15.82 332.391 15.59 cv
332.387 15.441 332.395 15.32 332.406 15.227 cv
332.414 15.137 332.43 15.066 332.453 15.008 cv
332.473 14.957 332.496 14.918 332.531 14.898 cv
332.559 14.883 332.598 14.875 332.645 14.871 cv
332.699 14.875 332.785 14.906 332.898 14.969 cv
333.008 15.035 333.145 15.109 333.316 15.184 cv
333.48 15.266 333.676 15.336 333.895 15.402 cv
334.113 15.473 334.363 15.508 334.648 15.504 cv
334.824 15.508 334.98 15.488 335.121 15.449 cv
335.254 15.414 335.375 15.363 335.48 15.293 cv
335.578 15.227 335.652 15.141 335.707 15.035 cv
335.754 14.934 335.781 14.812 335.785 14.676 cv
335.781 14.52 335.734 14.387 335.641 14.277 cv
335.547 14.168 335.418 14.07 335.262 13.984 cv
335.098 13.902 334.918 13.824 334.723 13.75 cv
334.52 13.68 334.316 13.602 334.105 13.508 cv
333.895 13.422 333.688 13.32 333.492 13.203 cv
333.289 13.094 333.109 12.953 332.953 12.785 cv
332.789 12.621 332.664 12.422 332.57 12.184 cv
332.477 11.953 332.43 11.672 332.43 11.34 cv
332.43 11.012 332.492 10.707 332.621 10.426 cv
332.75 10.152 332.938 9.914 333.184 9.71503 cv
333.426 9.52002 333.723 9.367 334.074 9.25403 cv
334.422 9.14801 334.816 9.09399 335.258 9.09003 cv
335.473 9.09399 335.684 9.10901 335.891 9.13702 cv
336.094 9.172 336.281 9.211 336.449 9.25403 cv
336.613 9.30499 336.754 9.35498 336.871 9.40601 cv
336.984 9.46503 337.066 9.51202 337.117 9.547 cv
337.164 9.59003 337.199 9.62903 337.223 9.664 cv
337.242 9.70697 337.254 9.75403 337.266 9.80499 cv
337.273 9.85901 337.285 9.92603 337.293 10.004 cv
337.301 10.09 337.305 10.187 337.305 10.305 cv
337.305 10.445 337.301 10.562 337.293 10.648 cv
337.285 10.742 337.27 10.812 337.254 10.859 cv
337.234 10.914 337.211 10.949 337.184 10.965 cv
337.148 10.988 337.113 10.996 337.074 10.992 cv
337.023 10.996 336.949 10.969 336.855 10.91 cv
336.754 10.859 336.633 10.801 336.484 10.734 cv
336.336 10.676 336.164 10.617 335.969 10.559 cv
335.773 10.508 335.551 10.48 335.305 10.477 cv
335.125 10.48 334.973 10.5 334.844 10.531 cv
334.711 10.57 334.602 10.621 334.523 10.687 cv
334.438 10.758 334.375 10.836 334.336 10.926 cv
334.289 11.02 334.27 11.117 334.273 11.219 cv
334.27 11.379 334.32 11.516 334.422 11.621 cv
334.52 11.734 334.648 11.828 334.813 11.91 cv
334.973 11.996 335.156 12.074 335.363 12.145 cv
335.566 12.219 335.773 12.301 335.984 12.383 cv
336.191 12.473 336.398 12.57 336.609 12.684 cv
336.813 12.797 336.996 12.937 337.156 13.102 cv
337.316 13.27 337.445 13.469 337.547 13.699 cv
337.641 13.934 337.691 14.207 337.695 14.52 cv
cp
f
349.887 12.937 mo
349.883 13.535 349.805 14.078 349.652 14.562 cv
349.492 15.055 349.258 15.473 348.941 15.824 cv
348.625 16.176 348.227 16.449 347.75 16.641 cv
347.27 16.832 346.711 16.926 346.074 16.93 cv
345.453 16.926 344.914 16.844 344.461 16.672 cv
344 16.504 343.621 16.254 343.324 15.926 cv
343.02 15.602 342.797 15.199 342.652 14.719 cv
342.508 14.242 342.438 13.695 342.438 13.078 cv
342.438 12.488 342.516 11.949 342.672 11.457 cv
342.828 10.969 343.066 10.547 343.387 10.195 cv
343.703 9.84802 344.098 9.57397 344.574 9.37903 cv
345.047 9.18701 345.605 9.09399 346.246 9.09003 cv
346.871 9.09399 347.41 9.17603 347.867 9.34399 cv
348.324 9.51599 348.703 9.76599 349 10.09 cv
349.297 10.418 349.52 10.82 349.668 11.297 cv
349.813 11.777 349.883 12.324 349.887 12.937 cv
cp
347.867 13.016 mo
347.863 12.68 347.836 12.363 347.785 12.07 cv
347.727 11.785 347.633 11.535 347.508 11.32 cv
347.375 11.109 347.203 10.941 346.992 10.82 cv
346.773 10.703 346.504 10.645 346.176 10.641 cv
345.887 10.645 345.633 10.699 345.414 10.801 cv
345.195 10.91 345.016 11.066 344.875 11.27 cv
344.734 11.477 344.629 11.723 344.559 12.008 cv
344.488 12.301 344.453 12.629 344.453 12.992 cv
344.453 13.34 344.48 13.656 344.539 13.941 cv
344.594 14.234 344.688 14.484 344.816 14.695 cv
344.941 14.91 345.113 15.074 345.336 15.187 cv
345.551 15.309 345.82 15.367 346.145 15.363 cv
346.438 15.367 346.695 15.312 346.918 15.203 cv
347.133 15.098 347.313 14.945 347.453 14.738 cv
347.594 14.539 347.695 14.293 347.766 14.004 cv
347.828 13.719 347.863 13.391 347.867 13.016 cv
cp
f
355.668 6.883 mo
355.664 7.03497 355.66 7.15601 355.652 7.24597 cv
355.641 7.34003 355.625 7.40997 355.605 7.45697 cv
355.582 7.508 355.559 7.54303 355.535 7.55902 cv
355.508 7.578 355.48 7.586 355.449 7.586 cv
355.41 7.586 355.367 7.578 355.328 7.55902 cv
355.281 7.54303 355.227 7.52301 355.164 7.5 cv
355.094 7.47998 355.02 7.461 354.934 7.44098 cv
354.844 7.42603 354.738 7.41803 354.621 7.414 cv
354.477 7.41803 354.355 7.43701 354.258 7.47998 cv
354.156 7.52698 354.074 7.59802 354.008 7.69098 cv
353.938 7.789 353.887 7.914 353.859 8.06598 cv
353.824 8.21899 353.809 8.40601 353.813 8.62903 cv
353.813 9.27002 li
355.082 9.27002 li
355.125 9.27301 355.168 9.28497 355.211 9.30902 cv
355.246 9.336 355.281 9.37903 355.309 9.43701 cv
355.332 9.5 355.352 9.58197 355.367 9.68402 cv
355.379 9.78497 355.383 9.914 355.387 10.062 cv
355.383 10.352 355.359 10.555 355.309 10.676 cv
355.254 10.801 355.176 10.863 355.082 10.859 cv
353.813 10.859 li
353.813 16.484 li
353.809 16.539 353.793 16.582 353.766 16.621 cv
353.73 16.66 353.68 16.695 353.609 16.719 cv
353.535 16.746 353.434 16.762 353.305 16.777 cv
353.172 16.789 353.012 16.797 352.828 16.797 cv
352.641 16.797 352.484 16.789 352.359 16.777 cv
352.23 16.762 352.129 16.746 352.055 16.719 cv
351.977 16.695 351.926 16.66 351.898 16.621 cv
351.867 16.582 351.852 16.539 351.855 16.484 cv
351.855 10.859 li
350.984 10.859 li
350.883 10.863 350.809 10.801 350.762 10.676 cv
350.711 10.555 350.684 10.352 350.688 10.062 cv
350.684 9.914 350.691 9.78497 350.707 9.68402 cv
350.719 9.58197 350.738 9.5 350.762 9.43701 cv
350.785 9.37903 350.816 9.336 350.855 9.30902 cv
350.895 9.28497 350.938 9.27301 350.992 9.27002 cv
351.855 9.27002 li
351.855 8.68402 li
351.852 8.21503 351.898 7.80103 351.996 7.44098 cv
352.086 7.086 352.234 6.789 352.438 6.55499 cv
352.637 6.32001 352.891 6.14502 353.199 6.02002 cv
353.508 5.90198 353.871 5.84003 354.297 5.84003 cv
354.492 5.84003 354.684 5.85901 354.871 5.89099 cv
355.051 5.92999 355.195 5.96503 355.301 6 cv
355.402 6.04303 355.473 6.078 355.512 6.10901 cv
355.547 6.14502 355.578 6.19501 355.602 6.258 cv
355.625 6.32397 355.641 6.40601 355.652 6.508 cv
355.66 6.60901 355.664 6.73401 355.668 6.883 cv
cp
f
366.219 13.727 mo
366.215 14.258 366.117 14.723 365.922 15.121 cv
365.723 15.523 365.457 15.859 365.121 16.125 cv
364.781 16.395 364.383 16.594 363.934 16.727 cv
363.48 16.859 363 16.926 362.488 16.93 cv
362.137 16.926 361.813 16.898 361.516 16.844 cv
361.215 16.785 360.953 16.719 360.727 16.637 cv
360.496 16.559 360.305 16.473 360.152 16.383 cv
360 16.297 359.891 16.219 359.824 16.148 cv
359.754 16.082 359.703 15.984 359.68 15.859 cv
359.648 15.734 359.637 15.551 359.637 15.309 cv
359.637 15.148 359.641 15.016 359.652 14.902 cv
359.66 14.797 359.676 14.707 359.703 14.637 cv
359.723 14.57 359.754 14.523 359.797 14.492 cv
359.832 14.469 359.879 14.453 359.93 14.449 cv
360 14.453 360.102 14.496 360.238 14.578 cv
360.367 14.668 360.539 14.762 360.75 14.863 cv
360.957 14.969 361.203 15.066 361.492 15.148 cv
361.777 15.238 362.113 15.281 362.496 15.277 cv
362.746 15.281 362.969 15.25 363.164 15.187 cv
363.359 15.129 363.527 15.043 363.668 14.934 cv
363.805 14.824 363.91 14.691 363.984 14.531 cv
364.055 14.371 364.09 14.191 364.094 13.992 cv
364.09 13.766 364.027 13.57 363.906 13.402 cv
363.777 13.242 363.613 13.098 363.418 12.969 cv
363.215 12.844 362.988 12.723 362.734 12.609 cv
362.48 12.5 362.219 12.383 361.949 12.254 cv
361.676 12.133 361.414 11.988 361.16 11.828 cv
360.906 11.672 360.68 11.484 360.48 11.262 cv
360.277 11.043 360.113 10.781 359.992 10.477 cv
359.867 10.176 359.805 9.81598 359.809 9.39502 cv
359.805 8.914 359.895 8.48798 360.074 8.12097 cv
360.25 7.758 360.492 7.453 360.801 7.20697 cv
361.102 6.96899 361.461 6.789 361.875 6.66803 cv
362.289 6.55103 362.727 6.492 363.188 6.48798 cv
363.426 6.492 363.664 6.508 363.906 6.54303 cv
364.145 6.58197 364.367 6.633 364.574 6.69098 cv
364.781 6.75403 364.965 6.82397 365.129 6.89801 cv
365.285 6.97998 365.395 7.04303 365.449 7.09399 cv
365.5 7.14801 365.535 7.19501 365.555 7.22699 cv
365.57 7.26599 365.586 7.31201 365.602 7.37097 cv
365.613 7.43402 365.621 7.508 365.629 7.59802 cv
365.633 7.69098 365.637 7.80499 365.637 7.93701 cv
365.637 8.09003 365.633 8.21899 365.625 8.32001 cv
365.617 8.42603 365.602 8.51202 365.586 8.57397 cv
365.563 8.64502 365.539 8.69098 365.508 8.72302 cv
365.473 8.75403 365.426 8.77002 365.371 8.77002 cv
365.313 8.77002 365.223 8.73401 365.098 8.65997 cv
364.973 8.59003 364.816 8.51202 364.637 8.422 cv
364.453 8.34003 364.246 8.26202 364.008 8.19098 cv
363.766 8.125 363.5 8.09003 363.219 8.086 cv
362.992 8.09003 362.801 8.117 362.637 8.16803 cv
362.469 8.22302 362.328 8.297 362.219 8.39099 cv
362.105 8.48798 362.023 8.60498 361.969 8.73798 cv
361.914 8.87903 361.887 9.02002 361.887 9.16803 cv
361.887 9.39502 361.945 9.59003 362.07 9.75 cv
362.188 9.914 362.352 10.059 362.563 10.184 cv
362.766 10.312 363 10.434 363.258 10.543 cv
363.516 10.66 363.781 10.777 364.055 10.898 cv
364.324 11.027 364.586 11.168 364.848 11.324 cv
365.105 11.48 365.34 11.672 365.543 11.891 cv
365.746 12.117 365.906 12.375 366.031 12.672 cv
366.152 12.969 366.215 13.32 366.219 13.727 cv
cp
f
374.266 16.484 mo
374.262 16.539 374.25 16.582 374.227 16.621 cv
374.199 16.66 374.152 16.695 374.09 16.719 cv
374.023 16.746 373.938 16.762 373.832 16.777 cv
373.727 16.789 373.594 16.797 373.434 16.797 cv
373.258 16.797 373.117 16.789 373.016 16.777 cv
372.906 16.762 372.824 16.746 372.762 16.719 cv
372.699 16.695 372.652 16.66 372.629 16.621 cv
372.598 16.582 372.586 16.539 372.59 16.484 cv
372.59 15.684 li
372.203 16.098 371.813 16.41 371.418 16.617 cv
371.016 16.824 370.605 16.926 370.184 16.93 cv
369.703 16.926 369.301 16.852 368.977 16.695 cv
368.652 16.543 368.391 16.328 368.191 16.059 cv
367.988 15.789 367.844 15.477 367.762 15.117 cv
367.672 14.762 367.629 14.32 367.633 13.789 cv
367.633 9.53497 li
367.629 9.48798 367.645 9.44098 367.676 9.39801 cv
367.703 9.36298 367.754 9.33197 367.832 9.30103 cv
367.906 9.27698 368.008 9.258 368.137 9.242 cv
368.262 9.23401 368.418 9.22699 368.609 9.22302 cv
368.797 9.22699 368.957 9.23401 369.082 9.242 cv
369.207 9.258 369.305 9.27698 369.383 9.30103 cv
369.453 9.33197 369.508 9.36298 369.543 9.39801 cv
369.57 9.44098 369.586 9.48798 369.59 9.53497 cv
369.59 13.461 li
369.586 13.828 369.609 14.105 369.66 14.297 cv
369.703 14.488 369.773 14.652 369.875 14.789 cv
369.969 14.93 370.094 15.035 370.242 15.109 cv
370.391 15.187 370.563 15.227 370.758 15.223 cv
371.008 15.227 371.258 15.137 371.512 14.949 cv
371.762 14.77 372.031 14.504 372.316 14.156 cv
372.316 9.53497 li
372.316 9.48798 372.328 9.44098 372.359 9.39801 cv
372.383 9.36298 372.438 9.33197 372.516 9.30103 cv
372.59 9.27698 372.688 9.258 372.816 9.242 cv
372.938 9.23401 373.098 9.22699 373.293 9.22302 cv
373.484 9.22699 373.641 9.23401 373.766 9.242 cv
373.887 9.258 373.988 9.27698 374.063 9.30103 cv
374.133 9.33197 374.184 9.36298 374.219 9.39801 cv
374.246 9.44098 374.262 9.48798 374.266 9.53497 cv
cp
f
383.195 12.914 mo
383.195 13.535 383.125 14.094 382.992 14.586 cv
382.852 15.082 382.656 15.5 382.406 15.848 cv
382.148 16.195 381.836 16.465 381.469 16.648 cv
381.094 16.836 380.672 16.926 380.203 16.93 cv
379.965 16.926 379.746 16.902 379.547 16.863 cv
379.34 16.816 379.148 16.75 378.965 16.648 cv
378.781 16.555 378.598 16.43 378.422 16.273 cv
378.238 16.125 378.055 15.941 377.871 15.73 cv
377.871 16.484 li
377.867 16.547 377.855 16.594 377.828 16.629 cv
377.797 16.672 377.75 16.703 377.688 16.727 cv
377.621 16.75 377.531 16.766 377.426 16.781 cv
377.316 16.789 377.188 16.797 377.031 16.797 cv
376.867 16.797 376.73 16.789 376.629 16.781 cv
376.52 16.766 376.434 16.75 376.371 16.727 cv
376.301 16.703 376.258 16.672 376.234 16.629 cv
376.207 16.594 376.191 16.547 376.195 16.484 cv
376.195 6.23798 li
376.191 6.18701 376.207 6.14099 376.242 6.09802 cv
376.27 6.05902 376.324 6.02301 376.402 5.992 cv
376.477 5.96503 376.578 5.94501 376.703 5.92603 cv
376.828 5.914 376.984 5.90601 377.18 5.90198 cv
377.367 5.90601 377.527 5.914 377.652 5.92603 cv
377.777 5.94501 377.875 5.96503 377.953 5.992 cv
378.023 6.02301 378.078 6.05902 378.113 6.09802 cv
378.141 6.14099 378.156 6.18701 378.16 6.23798 cv
378.16 10.078 li
378.336 9.90198 378.512 9.75403 378.691 9.62903 cv
378.863 9.508 379.039 9.40198 379.219 9.32001 cv
379.391 9.242 379.574 9.18402 379.766 9.14502 cv
379.949 9.10901 380.148 9.09399 380.359 9.09003 cv
380.871 9.09399 381.305 9.19501 381.668 9.39801 cv
382.023 9.60498 382.316 9.883 382.543 10.23 cv
382.766 10.578 382.93 10.984 383.039 11.449 cv
383.141 11.914 383.195 12.402 383.195 12.914 cv
cp
381.16 13.055 mo
381.156 12.762 381.133 12.477 381.094 12.199 cv
381.047 11.926 380.973 11.684 380.863 11.469 cv
380.754 11.258 380.609 11.086 380.438 10.957 cv
380.262 10.832 380.043 10.77 379.781 10.766 cv
379.648 10.77 379.523 10.785 379.398 10.82 cv
379.273 10.859 379.145 10.922 379.012 11.008 cv
378.879 11.098 378.742 11.215 378.605 11.352 cv
378.461 11.492 378.313 11.664 378.16 11.871 cv
378.16 14.18 li
378.434 14.535 378.695 14.805 378.949 14.984 cv
379.199 15.172 379.465 15.262 379.742 15.262 cv
379.996 15.262 380.211 15.199 380.391 15.066 cv
380.563 14.941 380.711 14.773 380.828 14.562 cv
380.945 14.359 381.027 14.121 381.082 13.852 cv
381.129 13.59 381.156 13.324 381.16 13.055 cv
cp
f
388.305 12.832 mo
388.301 13.133 388.273 13.344 388.219 13.461 cv
388.16 13.586 388.07 13.645 387.945 13.641 cv
384.703 13.641 li
384.574 13.645 384.48 13.582 384.426 13.457 cv
384.363 13.336 384.336 13.129 384.34 12.832 cv
384.336 12.543 384.363 12.336 384.426 12.215 cv
384.48 12.098 384.574 12.039 384.703 12.035 cv
387.945 12.035 li
388.008 12.039 388.059 12.051 388.105 12.074 cv
388.145 12.102 388.184 12.148 388.219 12.207 cv
388.246 12.273 388.27 12.355 388.285 12.457 cv
388.297 12.562 388.301 12.687 388.305 12.832 cv
cp
f
391.957 16.469 mo
391.953 16.523 391.938 16.57 391.906 16.609 cv
391.871 16.652 391.813 16.687 391.738 16.711 cv
391.656 16.738 391.555 16.758 391.426 16.773 cv
391.293 16.789 391.125 16.797 390.93 16.797 cv
390.727 16.797 390.563 16.789 390.434 16.773 cv
390.297 16.758 390.191 16.738 390.117 16.711 cv
390.035 16.687 389.98 16.652 389.949 16.609 cv
389.914 16.57 389.895 16.523 389.898 16.469 cv
389.898 6.94501 li
389.895 6.89801 389.914 6.85199 389.949 6.80499 cv
389.98 6.76599 390.035 6.72998 390.121 6.703 cv
390.199 6.67999 390.305 6.65997 390.438 6.64099 cv
390.563 6.62903 390.727 6.62097 390.93 6.617 cv
391.125 6.62097 391.293 6.62903 391.426 6.64099 cv
391.555 6.65997 391.656 6.67999 391.738 6.703 cv
391.813 6.72998 391.871 6.76599 391.906 6.80499 cv
391.938 6.85199 391.953 6.89801 391.957 6.94501 cv
cp
f
405.035 16.484 mo
405.031 16.539 405.016 16.582 404.988 16.621 cv
404.953 16.66 404.902 16.695 404.832 16.719 cv
404.758 16.746 404.656 16.762 404.535 16.777 cv
404.41 16.789 404.254 16.797 404.063 16.797 cv
403.863 16.797 403.703 16.789 403.578 16.777 cv
403.453 16.762 403.352 16.746 403.277 16.719 cv
403.199 16.695 403.148 16.66 403.121 16.621 cv
403.094 16.582 403.078 16.539 403.082 16.484 cv
403.082 12.363 li
403.078 12.133 403.059 11.918 403.016 11.723 cv
402.969 11.531 402.898 11.367 402.813 11.23 cv
402.719 11.094 402.605 10.988 402.469 10.91 cv
402.328 10.836 402.164 10.797 401.973 10.797 cv
401.738 10.797 401.5 10.891 401.262 11.07 cv
401.023 11.254 400.766 11.516 400.484 11.863 cv
400.484 16.484 li
400.484 16.539 400.469 16.582 400.438 16.621 cv
400.406 16.66 400.352 16.695 400.277 16.719 cv
400.199 16.746 400.098 16.762 399.977 16.777 cv
399.852 16.789 399.699 16.797 399.512 16.797 cv
399.316 16.797 399.156 16.789 399.035 16.777 cv
398.906 16.762 398.805 16.746 398.734 16.719 cv
398.656 16.695 398.605 16.66 398.574 16.621 cv
398.543 16.582 398.527 16.539 398.527 16.484 cv
398.527 12.363 li
398.527 12.133 398.504 11.918 398.461 11.723 cv
398.418 11.531 398.352 11.367 398.266 11.23 cv
398.172 11.094 398.059 10.988 397.922 10.91 cv
397.777 10.836 397.613 10.797 397.43 10.797 cv
397.188 10.797 396.949 10.891 396.711 11.07 cv
396.473 11.254 396.215 11.516 395.941 11.863 cv
395.941 16.484 li
395.938 16.539 395.922 16.582 395.895 16.621 cv
395.859 16.66 395.805 16.695 395.734 16.719 cv
395.656 16.746 395.559 16.762 395.434 16.777 cv
395.309 16.789 395.148 16.797 394.961 16.797 cv
394.766 16.797 394.609 16.789 394.484 16.777 cv
394.359 16.762 394.258 16.746 394.184 16.719 cv
394.105 16.695 394.051 16.66 394.023 16.621 cv
393.988 16.582 393.973 16.539 393.977 16.484 cv
393.977 9.53497 li
393.973 9.48798 393.988 9.44098 394.016 9.39801 cv
394.039 9.36298 394.086 9.33197 394.156 9.30103 cv
394.223 9.27698 394.309 9.258 394.418 9.242 cv
394.523 9.23401 394.656 9.22699 394.82 9.22302 cv
394.984 9.22699 395.121 9.23401 395.23 9.242 cv
395.336 9.258 395.422 9.27698 395.484 9.30103 cv
395.543 9.33197 395.586 9.36298 395.613 9.39801 cv
395.637 9.44098 395.648 9.48798 395.652 9.53497 cv
395.652 10.336 li
396.035 9.92603 396.418 9.61298 396.801 9.40198 cv
397.18 9.19501 397.582 9.09399 398 9.09003 cv
398.285 9.09399 398.539 9.12097 398.77 9.17999 cv
398.996 9.242 399.203 9.328 399.383 9.43701 cv
399.563 9.55103 399.715 9.68701 399.844 9.84003 cv
399.973 9.99597 400.082 10.168 400.172 10.359 cv
400.379 10.137 400.582 9.94501 400.785 9.78497 cv
400.98 9.625 401.18 9.492 401.375 9.39099 cv
401.57 9.289 401.766 9.21503 401.961 9.164 cv
402.156 9.117 402.355 9.09399 402.559 9.09003 cv
403.02 9.09399 403.406 9.172 403.727 9.32397 cv
404.039 9.48401 404.297 9.69501 404.492 9.961 cv
404.688 10.23 404.824 10.543 404.91 10.898 cv
404.988 11.258 405.031 11.637 405.035 12.035 cv
cp
f
412.879 16.508 mo
412.875 16.586 412.848 16.641 412.801 16.68 cv
412.746 16.723 412.664 16.75 412.555 16.77 cv
412.438 16.785 412.273 16.797 412.059 16.797 cv
411.82 16.797 411.648 16.785 411.547 16.77 cv
411.438 16.75 411.363 16.723 411.324 16.68 cv
411.277 16.641 411.258 16.586 411.258 16.508 cv
411.258 15.957 li
410.969 16.266 410.641 16.504 410.277 16.672 cv
409.91 16.844 409.504 16.926 409.059 16.93 cv
408.688 16.926 408.348 16.879 408.039 16.785 cv
407.73 16.691 407.465 16.551 407.238 16.355 cv
407.012 16.168 406.836 15.934 406.711 15.652 cv
406.586 15.375 406.523 15.047 406.527 14.668 cv
406.523 14.27 406.602 13.918 406.762 13.613 cv
406.918 13.316 407.156 13.07 407.473 12.875 cv
407.785 12.684 408.176 12.539 408.645 12.441 cv
409.113 12.352 409.656 12.305 410.273 12.301 cv
410.953 12.301 li
410.953 11.879 li
410.953 11.664 410.93 11.473 410.887 11.309 cv
410.84 11.148 410.766 11.012 410.668 10.898 cv
410.563 10.793 410.43 10.711 410.262 10.656 cv
410.09 10.605 409.879 10.582 409.637 10.578 cv
409.305 10.582 409.012 10.617 408.758 10.687 cv
408.496 10.762 408.27 10.844 408.074 10.93 cv
407.875 11.023 407.711 11.102 407.582 11.172 cv
407.445 11.246 407.336 11.285 407.258 11.281 cv
407.195 11.285 407.145 11.266 407.105 11.227 cv
407.059 11.191 407.023 11.141 406.996 11.07 cv
406.965 11.008 406.941 10.922 406.93 10.82 cv
406.91 10.723 406.902 10.613 406.906 10.492 cv
406.902 10.332 406.918 10.207 406.945 10.109 cv
406.969 10.02 407.016 9.93402 407.094 9.85498 cv
407.164 9.78101 407.293 9.69897 407.477 9.60901 cv
407.656 9.52002 407.867 9.43402 408.113 9.35498 cv
408.355 9.27698 408.625 9.21503 408.914 9.164 cv
409.203 9.117 409.5 9.09399 409.809 9.09003 cv
410.352 9.09399 410.816 9.14502 411.203 9.25 cv
411.59 9.35901 411.91 9.52301 412.16 9.742 cv
412.41 9.961 412.59 10.246 412.707 10.594 cv
412.816 10.945 412.875 11.359 412.879 11.832 cv
cp
410.953 13.531 mo
410.203 13.531 li
409.887 13.535 409.617 13.559 409.395 13.602 cv
409.168 13.652 408.984 13.723 408.848 13.812 cv
408.703 13.91 408.602 14.023 408.539 14.152 cv
408.473 14.289 408.438 14.437 408.441 14.605 cv
408.438 14.898 408.531 15.129 408.719 15.293 cv
408.902 15.461 409.16 15.543 409.488 15.543 cv
409.762 15.543 410.012 15.473 410.246 15.332 cv
410.473 15.191 410.711 14.988 410.953 14.715 cv
cp
f
421.102 10.016 mo
421.098 10.27 421.07 10.453 421.016 10.57 cv
420.957 10.691 420.887 10.75 420.809 10.75 cv
419.988 10.75 li
420.102 10.875 420.184 11.02 420.234 11.176 cv
420.281 11.336 420.305 11.5 420.309 11.668 cv
420.305 12.078 420.238 12.437 420.105 12.75 cv
419.969 13.066 419.773 13.332 419.523 13.543 cv
419.27 13.762 418.969 13.926 418.613 14.035 cv
418.254 14.152 417.855 14.207 417.426 14.203 cv
417.199 14.207 416.988 14.18 416.785 14.121 cv
416.582 14.07 416.426 14.008 416.316 13.93 cv
416.254 14 416.195 14.078 416.148 14.172 cv
416.098 14.266 416.074 14.371 416.078 14.48 cv
416.074 14.637 416.141 14.758 416.273 14.852 cv
416.402 14.949 416.59 15.004 416.832 15.012 cv
418.523 15.074 li
418.918 15.09 419.27 15.148 419.578 15.242 cv
419.887 15.344 420.148 15.477 420.359 15.648 cv
420.57 15.824 420.73 16.035 420.84 16.277 cv
420.949 16.523 421.004 16.797 421.008 17.109 cv
421.004 17.445 420.93 17.77 420.781 18.078 cv
420.633 18.379 420.406 18.641 420.105 18.867 cv
419.801 19.086 419.422 19.266 418.969 19.398 cv
418.512 19.527 417.98 19.59 417.379 19.594 cv
416.781 19.59 416.277 19.543 415.859 19.453 cv
415.441 19.355 415.098 19.227 414.832 19.062 cv
414.563 18.895 414.367 18.695 414.25 18.469 cv
414.125 18.234 414.066 17.98 414.066 17.707 cv
414.066 17.535 414.086 17.375 414.133 17.219 cv
414.172 17.062 414.238 16.91 414.328 16.77 cv
414.41 16.625 414.516 16.492 414.641 16.359 cv
414.766 16.23 414.906 16.105 415.07 15.984 cv
414.844 15.871 414.672 15.711 414.551 15.5 cv
414.43 15.297 414.371 15.07 414.371 14.824 cv
414.371 14.523 414.438 14.246 414.578 13.988 cv
414.715 13.738 414.898 13.508 415.125 13.305 cv
414.941 13.125 414.797 12.91 414.688 12.652 cv
414.578 12.402 414.523 12.082 414.527 11.699 cv
414.523 11.297 414.594 10.937 414.738 10.613 cv
414.879 10.297 415.078 10.027 415.336 9.80499 cv
415.59 9.586 415.895 9.414 416.246 9.297 cv
416.598 9.17999 416.988 9.12097 417.418 9.12097 cv
417.637 9.12097 417.844 9.13702 418.043 9.15997 cv
418.242 9.19098 418.43 9.22699 418.602 9.27002 cv
420.809 9.27002 li
420.891 9.27301 420.961 9.33197 421.02 9.44098 cv
421.07 9.55902 421.098 9.75 421.102 10.016 cv
cp
418.586 11.66 mo
418.582 11.289 418.48 11 418.273 10.789 cv
418.063 10.586 417.77 10.48 417.395 10.477 cv
417.199 10.48 417.027 10.512 416.887 10.574 cv
416.738 10.641 416.617 10.73 416.523 10.84 cv
416.422 10.953 416.352 11.082 416.309 11.23 cv
416.258 11.379 416.234 11.535 416.238 11.691 cv
416.234 12.051 416.34 12.328 416.551 12.531 cv
416.758 12.738 417.047 12.844 417.418 12.84 cv
417.613 12.844 417.781 12.812 417.93 12.746 cv
418.07 12.687 418.191 12.602 418.293 12.488 cv
418.387 12.383 418.461 12.254 418.512 12.109 cv
418.559 11.969 418.582 11.82 418.586 11.66 cv
cp
419.047 17.211 mo
419.047 16.973 418.953 16.797 418.766 16.672 cv
418.578 16.551 418.32 16.48 417.992 16.469 cv
416.598 16.43 li
416.461 16.531 416.352 16.625 416.273 16.715 cv
416.191 16.805 416.129 16.891 416.082 16.977 cv
416.031 17.059 415.996 17.141 415.984 17.219 cv
415.965 17.297 415.957 17.375 415.961 17.461 cv
415.957 17.715 416.09 17.914 416.352 18.051 cv
416.613 18.184 416.984 18.25 417.465 18.254 cv
417.758 18.25 418.004 18.219 418.211 18.164 cv
418.41 18.102 418.574 18.023 418.703 17.926 cv
418.824 17.824 418.914 17.715 418.969 17.594 cv
419.02 17.473 419.047 17.344 419.047 17.211 cv
cp
f
428.711 12.809 mo
428.707 13.047 428.656 13.223 428.551 13.336 cv
428.441 13.453 428.293 13.512 428.113 13.508 cv
423.879 13.508 li
423.875 13.809 423.91 14.078 423.984 14.316 cv
424.051 14.559 424.164 14.762 424.32 14.93 cv
424.473 15.102 424.668 15.23 424.91 15.316 cv
425.148 15.406 425.438 15.449 425.781 15.449 cv
426.121 15.449 426.422 15.426 426.684 15.375 cv
426.941 15.328 427.168 15.273 427.359 15.211 cv
427.547 15.152 427.703 15.098 427.832 15.047 cv
427.953 15 428.055 14.977 428.137 14.973 cv
428.18 14.977 428.219 14.984 428.254 15 cv
428.281 15.02 428.309 15.051 428.328 15.098 cv
428.348 15.145 428.359 15.211 428.371 15.297 cv
428.375 15.383 428.379 15.492 428.383 15.621 cv
428.379 15.738 428.379 15.836 428.375 15.914 cv
428.367 15.996 428.359 16.062 428.352 16.117 cv
428.34 16.176 428.324 16.227 428.305 16.262 cv
428.285 16.305 428.258 16.34 428.227 16.375 cv
428.191 16.414 428.098 16.465 427.949 16.523 cv
427.793 16.59 427.602 16.652 427.371 16.707 cv
427.133 16.77 426.863 16.816 426.566 16.863 cv
426.262 16.902 425.941 16.926 425.602 16.93 cv
424.98 16.926 424.438 16.852 423.977 16.695 cv
423.508 16.543 423.121 16.305 422.813 15.988 cv
422.496 15.672 422.262 15.273 422.113 14.789 cv
421.957 14.309 421.883 13.742 421.887 13.086 cv
421.883 12.473 421.961 11.914 422.125 11.418 cv
422.281 10.922 422.516 10.504 422.828 10.156 cv
423.133 9.81201 423.508 9.547 423.945 9.36298 cv
424.383 9.18402 424.875 9.09399 425.43 9.09003 cv
426.008 9.09399 426.508 9.17999 426.922 9.34802 cv
427.336 9.52301 427.672 9.76202 427.938 10.062 cv
428.199 10.367 428.395 10.727 428.523 11.141 cv
428.645 11.559 428.707 12.008 428.711 12.496 cv
cp
426.809 12.246 mo
426.82 11.695 426.711 11.262 426.477 10.949 cv
426.242 10.637 425.875 10.48 425.383 10.477 cv
425.133 10.48 424.918 10.527 424.734 10.617 cv
424.547 10.715 424.395 10.84 424.273 10.996 cv
424.148 11.156 424.055 11.344 423.992 11.559 cv
423.926 11.773 423.887 12.004 423.879 12.246 cv
cp
f
435.215 14.52 mo
435.211 14.918 435.137 15.266 434.992 15.566 cv
434.844 15.867 434.637 16.121 434.367 16.32 cv
434.094 16.527 433.773 16.676 433.406 16.777 cv
433.039 16.875 432.637 16.926 432.207 16.93 cv
431.941 16.926 431.695 16.906 431.461 16.871 cv
431.227 16.828 431.016 16.781 430.828 16.723 cv
430.641 16.664 430.484 16.602 430.359 16.539 cv
430.234 16.477 430.141 16.418 430.086 16.363 cv
430.027 16.309 429.984 16.227 429.957 16.109 cv
429.922 15.996 429.906 15.82 429.91 15.59 cv
429.906 15.441 429.914 15.32 429.926 15.227 cv
429.934 15.137 429.949 15.066 429.973 15.008 cv
429.992 14.957 430.016 14.918 430.051 14.898 cv
430.078 14.883 430.117 14.875 430.164 14.871 cv
430.219 14.875 430.305 14.906 430.418 14.969 cv
430.527 15.035 430.664 15.109 430.836 15.184 cv
431 15.266 431.195 15.336 431.414 15.402 cv
431.633 15.473 431.883 15.508 432.168 15.504 cv
432.344 15.508 432.5 15.488 432.641 15.449 cv
432.773 15.414 432.895 15.363 433 15.293 cv
433.098 15.227 433.172 15.141 433.227 15.035 cv
433.273 14.934 433.301 14.812 433.305 14.676 cv
433.301 14.52 433.254 14.387 433.16 14.277 cv
433.066 14.168 432.938 14.07 432.781 13.984 cv
432.617 13.902 432.438 13.824 432.242 13.75 cv
432.039 13.68 431.836 13.602 431.625 13.508 cv
431.414 13.422 431.207 13.32 431.012 13.203 cv
430.809 13.094 430.629 12.953 430.473 12.785 cv
430.309 12.621 430.184 12.422 430.09 12.184 cv
429.996 11.953 429.949 11.672 429.949 11.34 cv
429.949 11.012 430.012 10.707 430.141 10.426 cv
430.27 10.152 430.457 9.914 430.703 9.71503 cv
430.945 9.52002 431.242 9.367 431.594 9.25403 cv
431.941 9.14801 432.336 9.09399 432.777 9.09003 cv
432.992 9.09399 433.203 9.10901 433.41 9.13702 cv
433.613 9.172 433.801 9.211 433.969 9.25403 cv
434.133 9.30499 434.273 9.35498 434.391 9.40601 cv
434.504 9.46503 434.586 9.51202 434.637 9.547 cv
434.684 9.59003 434.719 9.62903 434.742 9.664 cv
434.762 9.70697 434.773 9.75403 434.785 9.80499 cv
434.793 9.85901 434.805 9.92603 434.813 10.004 cv
434.82 10.09 434.824 10.187 434.824 10.305 cv
434.824 10.445 434.82 10.562 434.813 10.648 cv
434.805 10.742 434.789 10.812 434.773 10.859 cv
434.754 10.914 434.73 10.949 434.703 10.965 cv
434.668 10.988 434.633 10.996 434.594 10.992 cv
434.543 10.996 434.469 10.969 434.375 10.91 cv
434.273 10.859 434.152 10.801 434.004 10.734 cv
433.855 10.676 433.684 10.617 433.488 10.559 cv
433.293 10.508 433.07 10.48 432.824 10.477 cv
432.645 10.48 432.492 10.5 432.363 10.531 cv
432.23 10.57 432.121 10.621 432.043 10.687 cv
431.957 10.758 431.895 10.836 431.855 10.926 cv
431.809 11.02 431.789 11.117 431.793 11.219 cv
431.789 11.379 431.84 11.516 431.941 11.621 cv
432.039 11.734 432.168 11.828 432.332 11.91 cv
432.492 11.996 432.676 12.074 432.883 12.145 cv
433.086 12.219 433.293 12.301 433.504 12.383 cv
433.711 12.473 433.918 12.57 434.129 12.684 cv
434.332 12.797 434.516 12.937 434.676 13.102 cv
434.836 13.27 434.965 13.469 435.066 13.699 cv
435.16 13.934 435.211 14.207 435.215 14.52 cv
cp
f
444.004 12.832 mo
444 13.133 443.973 13.344 443.918 13.461 cv
443.859 13.586 443.77 13.645 443.645 13.641 cv
440.402 13.641 li
440.273 13.645 440.18 13.582 440.125 13.457 cv
440.063 13.336 440.035 13.129 440.039 12.832 cv
440.035 12.543 440.063 12.336 440.125 12.215 cv
440.18 12.098 440.273 12.039 440.402 12.035 cv
443.645 12.035 li
443.707 12.039 443.758 12.051 443.805 12.074 cv
443.844 12.102 443.883 12.148 443.918 12.207 cv
443.945 12.273 443.969 12.355 443.984 12.457 cv
443.996 12.562 444 12.687 444.004 12.832 cv
cp
f
454.742 15.895 mo
454.738 16.051 454.734 16.184 454.723 16.285 cv
454.707 16.395 454.688 16.48 454.664 16.551 cv
454.637 16.621 454.602 16.672 454.566 16.703 cv
454.523 16.734 454.48 16.75 454.43 16.75 cv
449.809 16.75 li
449.633 16.75 449.488 16.699 449.375 16.598 cv
449.254 16.496 449.195 16.332 449.199 16.102 cv
449.199 6.94501 li
449.195 6.89801 449.215 6.85199 449.25 6.80499 cv
449.281 6.76599 449.336 6.72998 449.418 6.703 cv
449.492 6.67999 449.598 6.65997 449.734 6.64099 cv
449.863 6.62903 450.027 6.62097 450.23 6.617 cv
450.426 6.62097 450.594 6.62903 450.727 6.64099 cv
450.855 6.65997 450.957 6.67999 451.039 6.703 cv
451.113 6.72998 451.172 6.76599 451.207 6.80499 cv
451.238 6.85199 451.254 6.89801 451.258 6.94501 cv
451.258 15.059 li
454.43 15.059 li
454.48 15.062 454.523 15.078 454.566 15.102 cv
454.602 15.133 454.637 15.18 454.664 15.242 cv
454.688 15.312 454.707 15.398 454.723 15.5 cv
454.734 15.609 454.738 15.738 454.742 15.895 cv
cp
f
462.863 12.937 mo
462.859 13.535 462.781 14.078 462.629 14.562 cv
462.469 15.055 462.234 15.473 461.918 15.824 cv
461.602 16.176 461.203 16.449 460.727 16.641 cv
460.246 16.832 459.688 16.926 459.051 16.93 cv
458.43 16.926 457.891 16.844 457.438 16.672 cv
456.977 16.504 456.598 16.254 456.301 15.926 cv
455.996 15.602 455.773 15.199 455.629 14.719 cv
455.484 14.242 455.414 13.695 455.414 13.078 cv
455.414 12.488 455.492 11.949 455.648 11.457 cv
455.805 10.969 456.043 10.547 456.363 10.195 cv
456.68 9.84802 457.074 9.57397 457.551 9.37903 cv
458.023 9.18701 458.582 9.09399 459.223 9.09003 cv
459.848 9.09399 460.387 9.17603 460.844 9.34399 cv
461.301 9.51599 461.68 9.76599 461.977 10.09 cv
462.273 10.418 462.496 10.82 462.645 11.297 cv
462.789 11.777 462.859 12.324 462.863 12.937 cv
cp
460.844 13.016 mo
460.84 12.68 460.813 12.363 460.762 12.07 cv
460.703 11.785 460.609 11.535 460.484 11.32 cv
460.352 11.109 460.18 10.941 459.969 10.82 cv
459.75 10.703 459.48 10.645 459.152 10.641 cv
458.863 10.645 458.609 10.699 458.391 10.801 cv
458.172 10.91 457.992 11.066 457.852 11.27 cv
457.711 11.477 457.605 11.723 457.535 12.008 cv
457.465 12.301 457.43 12.629 457.43 12.992 cv
457.43 13.34 457.457 13.656 457.516 13.941 cv
457.57 14.234 457.664 14.484 457.793 14.695 cv
457.918 14.91 458.09 15.074 458.313 15.187 cv
458.527 15.309 458.797 15.367 459.121 15.363 cv
459.414 15.367 459.672 15.312 459.895 15.203 cv
460.109 15.098 460.289 14.945 460.43 14.738 cv
460.57 14.539 460.672 14.293 460.742 14.004 cv
460.805 13.719 460.84 13.391 460.844 13.016 cv
cp
f
469.68 15.379 mo
469.676 15.516 469.672 15.629 469.668 15.719 cv
469.656 15.812 469.648 15.891 469.637 15.949 cv
469.621 16.012 469.605 16.062 469.59 16.098 cv
469.57 16.141 469.527 16.187 469.469 16.246 cv
469.402 16.309 469.297 16.383 469.148 16.465 cv
468.996 16.555 468.824 16.633 468.633 16.695 cv
468.441 16.766 468.234 16.816 468.008 16.859 cv
467.781 16.898 467.547 16.918 467.313 16.922 cv
466.773 16.918 466.301 16.84 465.887 16.672 cv
465.473 16.508 465.125 16.262 464.848 15.937 cv
464.563 15.613 464.352 15.219 464.211 14.75 cv
464.07 14.285 464 13.746 464 13.141 cv
464 12.445 464.086 11.848 464.258 11.34 cv
464.43 10.836 464.672 10.414 464.988 10.082 cv
465.297 9.75 465.664 9.50403 466.094 9.34003 cv
466.516 9.17999 466.984 9.09802 467.496 9.09802 cv
467.703 9.09802 467.906 9.117 468.109 9.15198 cv
468.305 9.19098 468.492 9.242 468.668 9.30103 cv
468.84 9.367 468.996 9.43701 469.137 9.51202 cv
469.273 9.59399 469.371 9.65997 469.43 9.71503 cv
469.484 9.77301 469.523 9.82001 469.551 9.85498 cv
469.57 9.89801 469.59 9.94897 469.605 10.008 cv
469.617 10.074 469.629 10.152 469.637 10.238 cv
469.645 10.332 469.648 10.441 469.648 10.57 cv
469.648 10.875 469.621 11.086 469.57 11.207 cv
469.516 11.328 469.449 11.391 469.367 11.387 cv
469.277 11.391 469.184 11.355 469.086 11.281 cv
468.984 11.211 468.867 11.129 468.734 11.039 cv
468.602 10.953 468.441 10.871 468.254 10.797 cv
468.066 10.727 467.84 10.691 467.582 10.687 cv
467.07 10.691 466.684 10.887 466.414 11.277 cv
466.141 11.668 466.004 12.242 466.008 13 cv
466.004 13.375 466.039 13.707 466.109 13.992 cv
466.176 14.277 466.273 14.516 466.41 14.707 cv
466.539 14.902 466.707 15.047 466.91 15.141 cv
467.109 15.238 467.34 15.285 467.605 15.285 cv
467.871 15.285 468.105 15.246 468.305 15.164 cv
468.496 15.086 468.664 14.996 468.813 14.895 cv
468.953 14.797 469.078 14.707 469.18 14.625 cv
469.277 14.547 469.359 14.508 469.43 14.504 cv
469.473 14.508 469.512 14.52 469.547 14.543 cv
469.574 14.57 469.598 14.617 469.621 14.687 cv
469.637 14.758 469.652 14.848 469.664 14.957 cv
469.672 15.066 469.676 15.207 469.68 15.379 cv
cp
f
476.969 16.508 mo
476.965 16.586 476.938 16.641 476.891 16.68 cv
476.836 16.723 476.754 16.75 476.645 16.77 cv
476.527 16.785 476.363 16.797 476.148 16.797 cv
475.91 16.797 475.738 16.785 475.637 16.77 cv
475.527 16.75 475.453 16.723 475.414 16.68 cv
475.367 16.641 475.348 16.586 475.348 16.508 cv
475.348 15.957 li
475.059 16.266 474.73 16.504 474.367 16.672 cv
474 16.844 473.594 16.926 473.148 16.93 cv
472.777 16.926 472.438 16.879 472.129 16.785 cv
471.82 16.691 471.555 16.551 471.328 16.355 cv
471.102 16.168 470.926 15.934 470.801 15.652 cv
470.676 15.375 470.613 15.047 470.617 14.668 cv
470.613 14.27 470.691 13.918 470.852 13.613 cv
471.008 13.316 471.246 13.07 471.563 12.875 cv
471.875 12.684 472.266 12.539 472.734 12.441 cv
473.203 12.352 473.746 12.305 474.363 12.301 cv
475.043 12.301 li
475.043 11.879 li
475.043 11.664 475.02 11.473 474.977 11.309 cv
474.93 11.148 474.855 11.012 474.758 10.898 cv
474.652 10.793 474.52 10.711 474.352 10.656 cv
474.18 10.605 473.969 10.582 473.727 10.578 cv
473.395 10.582 473.102 10.617 472.848 10.687 cv
472.586 10.762 472.359 10.844 472.164 10.93 cv
471.965 11.023 471.801 11.102 471.672 11.172 cv
471.535 11.246 471.426 11.285 471.348 11.281 cv
471.285 11.285 471.234 11.266 471.195 11.227 cv
471.148 11.191 471.113 11.141 471.086 11.07 cv
471.055 11.008 471.031 10.922 471.02 10.82 cv
471 10.723 470.992 10.613 470.996 10.492 cv
470.992 10.332 471.008 10.207 471.035 10.109 cv
471.059 10.02 471.105 9.93402 471.184 9.85498 cv
471.254 9.78101 471.383 9.69897 471.566 9.60901 cv
471.746 9.52002 471.957 9.43402 472.203 9.35498 cv
472.445 9.27698 472.715 9.21503 473.004 9.164 cv
473.293 9.117 473.59 9.09399 473.898 9.09003 cv
474.441 9.09399 474.906 9.14502 475.293 9.25 cv
475.68 9.35901 476 9.52301 476.25 9.742 cv
476.5 9.961 476.68 10.246 476.797 10.594 cv
476.906 10.945 476.965 11.359 476.969 11.832 cv
cp
475.043 13.531 mo
474.293 13.531 li
473.977 13.535 473.707 13.559 473.484 13.602 cv
473.258 13.652 473.074 13.723 472.938 13.812 cv
472.793 13.91 472.691 14.023 472.629 14.152 cv
472.563 14.289 472.527 14.437 472.531 14.605 cv
472.527 14.898 472.621 15.129 472.809 15.293 cv
472.992 15.461 473.25 15.543 473.578 15.543 cv
473.852 15.543 474.102 15.473 474.336 15.332 cv
474.563 15.191 474.801 14.988 475.043 14.715 cv
cp
f
480.891 16.484 mo
480.887 16.539 480.871 16.582 480.844 16.621 cv
480.809 16.66 480.754 16.695 480.684 16.719 cv
480.605 16.746 480.508 16.762 480.383 16.777 cv
480.258 16.789 480.098 16.797 479.91 16.797 cv
479.715 16.797 479.559 16.789 479.434 16.777 cv
479.309 16.762 479.207 16.746 479.133 16.719 cv
479.055 16.695 479 16.66 478.973 16.621 cv
478.938 16.582 478.922 16.539 478.926 16.484 cv
478.926 6.23798 li
478.922 6.18701 478.938 6.14099 478.973 6.09802 cv
479 6.05902 479.055 6.02301 479.133 5.992 cv
479.207 5.96503 479.309 5.94501 479.434 5.92603 cv
479.559 5.914 479.715 5.90601 479.91 5.90198 cv
480.098 5.90601 480.258 5.914 480.383 5.92603 cv
480.508 5.94501 480.605 5.96503 480.684 5.992 cv
480.754 6.02301 480.809 6.05902 480.844 6.09802 cv
480.871 6.14099 480.887 6.18701 480.891 6.23798 cv
cp
f
498.379 16.469 mo
498.375 16.523 498.363 16.57 498.336 16.609 cv
498.305 16.652 498.25 16.687 498.18 16.711 cv
498.102 16.738 498.004 16.758 497.879 16.773 cv
497.754 16.789 497.594 16.797 497.402 16.797 cv
497.215 16.797 497.059 16.789 496.938 16.773 cv
496.809 16.758 496.711 16.738 496.641 16.711 cv
496.566 16.687 496.516 16.652 496.484 16.609 cv
496.453 16.57 496.438 16.523 496.438 16.469 cv
496.438 8.26202 li
496.422 8.26202 li
493.5 16.461 li
493.477 16.531 493.441 16.586 493.398 16.629 cv
493.348 16.676 493.285 16.711 493.207 16.734 cv
493.125 16.762 493.023 16.777 492.898 16.785 cv
492.773 16.793 492.621 16.797 492.449 16.797 cv
492.27 16.797 492.121 16.789 491.996 16.777 cv
491.871 16.762 491.766 16.742 491.688 16.715 cv
491.602 16.687 491.539 16.652 491.496 16.609 cv
491.445 16.57 491.414 16.523 491.402 16.461 cv
488.582 8.26202 li
488.566 8.26202 li
488.566 16.469 li
488.563 16.523 488.547 16.57 488.523 16.609 cv
488.492 16.652 488.441 16.687 488.363 16.711 cv
488.285 16.738 488.184 16.758 488.063 16.773 cv
487.938 16.789 487.781 16.797 487.594 16.797 cv
487.402 16.797 487.246 16.789 487.125 16.773 cv
486.996 16.758 486.895 16.738 486.824 16.711 cv
486.746 16.687 486.695 16.652 486.668 16.609 cv
486.637 16.57 486.621 16.523 486.625 16.469 cv
486.625 7.48401 li
486.621 7.22302 486.691 7.02002 486.836 6.875 cv
486.973 6.73798 487.16 6.66803 487.398 6.664 cv
488.738 6.664 li
488.977 6.66803 489.18 6.68701 489.352 6.72302 cv
489.52 6.76599 489.668 6.828 489.797 6.91803 cv
489.918 7.01202 490.023 7.133 490.109 7.27698 cv
490.191 7.42999 490.262 7.61298 490.328 7.828 cv
492.512 13.836 li
492.543 13.836 li
494.801 7.84399 li
494.867 7.625 494.941 7.44098 495.023 7.289 cv
495.102 7.14099 495.195 7.02002 495.305 6.922 cv
495.41 6.83197 495.535 6.76599 495.68 6.72302 cv
495.824 6.68701 495.992 6.66803 496.188 6.664 cv
497.566 6.664 li
497.703 6.66803 497.824 6.68402 497.93 6.71899 cv
498.027 6.758 498.109 6.81201 498.18 6.87903 cv
498.242 6.953 498.293 7.039 498.328 7.13702 cv
498.359 7.242 498.375 7.35901 498.379 7.48401 cv
cp
f
507.488 12.937 mo
507.484 13.535 507.406 14.078 507.254 14.562 cv
507.094 15.055 506.859 15.473 506.543 15.824 cv
506.227 16.176 505.828 16.449 505.352 16.641 cv
504.871 16.832 504.313 16.926 503.676 16.93 cv
503.055 16.926 502.516 16.844 502.063 16.672 cv
501.602 16.504 501.223 16.254 500.926 15.926 cv
500.621 15.602 500.398 15.199 500.254 14.719 cv
500.109 14.242 500.039 13.695 500.039 13.078 cv
500.039 12.488 500.117 11.949 500.273 11.457 cv
500.43 10.969 500.668 10.547 500.988 10.195 cv
501.305 9.84802 501.699 9.57397 502.176 9.37903 cv
502.648 9.18701 503.207 9.09399 503.848 9.09003 cv
504.473 9.09399 505.012 9.17603 505.469 9.34399 cv
505.926 9.51599 506.305 9.76599 506.602 10.09 cv
506.898 10.418 507.121 10.82 507.27 11.297 cv
507.414 11.777 507.484 12.324 507.488 12.937 cv
cp
505.469 13.016 mo
505.465 12.68 505.438 12.363 505.387 12.07 cv
505.328 11.785 505.234 11.535 505.109 11.32 cv
504.977 11.109 504.805 10.941 504.594 10.82 cv
504.375 10.703 504.105 10.645 503.777 10.641 cv
503.488 10.645 503.234 10.699 503.016 10.801 cv
502.797 10.91 502.617 11.066 502.477 11.27 cv
502.336 11.477 502.23 11.723 502.16 12.008 cv
502.09 12.301 502.055 12.629 502.055 12.992 cv
502.055 13.34 502.082 13.656 502.141 13.941 cv
502.195 14.234 502.289 14.484 502.418 14.695 cv
502.543 14.91 502.715 15.074 502.938 15.187 cv
503.152 15.309 503.422 15.367 503.746 15.363 cv
504.039 15.367 504.297 15.312 504.52 15.203 cv
504.734 15.098 504.914 14.945 505.055 14.738 cv
505.195 14.539 505.297 14.293 505.367 14.004 cv
505.43 13.719 505.465 13.391 505.469 13.016 cv
cp
f
515.637 16.484 mo
515.633 16.547 515.621 16.594 515.598 16.629 cv
515.57 16.672 515.523 16.703 515.465 16.727 cv
515.398 16.75 515.316 16.766 515.211 16.781 cv
515.105 16.789 514.973 16.797 514.82 16.797 cv
514.648 16.797 514.516 16.789 514.414 16.781 cv
514.309 16.766 514.223 16.75 514.16 16.727 cv
514.094 16.703 514.047 16.672 514.02 16.629 cv
513.988 16.594 513.973 16.547 513.977 16.484 cv
513.977 15.715 li
513.617 16.102 513.242 16.398 512.852 16.609 cv
512.453 16.82 512.02 16.926 511.547 16.93 cv
511.012 16.926 510.563 16.824 510.199 16.621 cv
509.832 16.418 509.535 16.145 509.305 15.793 cv
509.07 15.449 508.902 15.043 508.801 14.574 cv
508.699 14.113 508.648 13.621 508.648 13.102 cv
508.648 12.488 508.711 11.934 508.844 11.437 cv
508.973 10.945 509.168 10.523 509.426 10.176 cv
509.68 9.828 509.996 9.56201 510.375 9.37097 cv
510.754 9.18701 511.191 9.09399 511.688 9.09003 cv
512.074 9.09399 512.426 9.172 512.746 9.328 cv
513.059 9.48798 513.375 9.71899 513.688 10.023 cv
513.688 6.26202 li
513.688 6.211 513.699 6.164 513.73 6.12097 cv
513.754 6.08197 513.809 6.047 513.887 6.01599 cv
513.961 5.98798 514.059 5.96899 514.188 5.94897 cv
514.309 5.93701 514.469 5.92999 514.664 5.92603 cv
514.855 5.92999 515.012 5.93701 515.137 5.94897 cv
515.258 5.96899 515.359 5.98798 515.434 6.01599 cv
515.504 6.047 515.555 6.08197 515.59 6.12097 cv
515.617 6.164 515.633 6.211 515.637 6.26202 cv
cp
513.688 11.84 mo
513.406 11.488 513.137 11.219 512.883 11.031 cv
512.621 10.844 512.352 10.75 512.074 10.75 cv
511.82 10.75 511.602 10.816 511.418 10.941 cv
511.23 11.074 511.082 11.242 510.973 11.453 cv
510.859 11.664 510.777 11.902 510.723 12.164 cv
510.668 12.43 510.641 12.699 510.641 12.969 cv
510.641 13.266 510.664 13.547 510.711 13.82 cv
510.758 14.098 510.832 14.344 510.941 14.559 cv
511.043 14.773 511.188 14.945 511.367 15.074 cv
511.543 15.207 511.766 15.273 512.035 15.27 cv
512.168 15.273 512.297 15.254 512.43 15.211 cv
512.555 15.176 512.688 15.113 512.82 15.02 cv
512.953 14.934 513.09 14.816 513.23 14.672 cv
513.371 14.531 513.523 14.355 513.688 14.148 cv
cp
f
524.035 12.809 mo
524.031 13.047 523.98 13.223 523.875 13.336 cv
523.766 13.453 523.617 13.512 523.438 13.508 cv
519.203 13.508 li
519.199 13.809 519.234 14.078 519.309 14.316 cv
519.375 14.559 519.488 14.762 519.645 14.93 cv
519.797 15.102 519.992 15.23 520.234 15.316 cv
520.473 15.406 520.762 15.449 521.105 15.449 cv
521.445 15.449 521.746 15.426 522.008 15.375 cv
522.266 15.328 522.492 15.273 522.684 15.211 cv
522.871 15.152 523.027 15.098 523.156 15.047 cv
523.277 15 523.379 14.977 523.461 14.973 cv
523.504 14.977 523.543 14.984 523.578 15 cv
523.605 15.02 523.633 15.051 523.652 15.098 cv
523.672 15.145 523.684 15.211 523.695 15.297 cv
523.699 15.383 523.703 15.492 523.707 15.621 cv
523.703 15.738 523.703 15.836 523.699 15.914 cv
523.691 15.996 523.684 16.062 523.676 16.117 cv
523.664 16.176 523.648 16.227 523.629 16.262 cv
523.609 16.305 523.582 16.34 523.551 16.375 cv
523.516 16.414 523.422 16.465 523.273 16.523 cv
523.117 16.59 522.926 16.652 522.695 16.707 cv
522.457 16.77 522.188 16.816 521.891 16.863 cv
521.586 16.902 521.266 16.926 520.926 16.93 cv
520.305 16.926 519.762 16.852 519.301 16.695 cv
518.832 16.543 518.445 16.305 518.137 15.988 cv
517.82 15.672 517.586 15.273 517.438 14.789 cv
517.281 14.309 517.207 13.742 517.211 13.086 cv
517.207 12.473 517.285 11.914 517.449 11.418 cv
517.605 10.922 517.84 10.504 518.152 10.156 cv
518.457 9.81201 518.832 9.547 519.27 9.36298 cv
519.707 9.18402 520.199 9.09399 520.754 9.09003 cv
521.332 9.09399 521.832 9.17999 522.246 9.34802 cv
522.66 9.52301 522.996 9.76202 523.262 10.062 cv
523.523 10.367 523.719 10.727 523.848 11.141 cv
523.969 11.559 524.031 12.008 524.035 12.496 cv
cp
522.133 12.246 mo
522.145 11.695 522.035 11.262 521.801 10.949 cv
521.566 10.637 521.199 10.48 520.707 10.477 cv
520.457 10.48 520.242 10.527 520.059 10.617 cv
519.871 10.715 519.719 10.84 519.598 10.996 cv
519.473 11.156 519.379 11.344 519.316 11.559 cv
519.25 11.773 519.211 12.004 519.203 12.246 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
