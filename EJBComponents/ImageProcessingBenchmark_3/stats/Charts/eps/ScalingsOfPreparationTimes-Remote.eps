%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ScalingsOfPreparationTimes-Remote.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 3:58:38 p.m.
%%BoundingBox: 0 0 635 544
%%HiResBoundingBox: 0 0 634.9201 543.2400
%%CropBox: 0 0 634.9201 543.2400
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -543.24 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 543.24 li
634.92 543.24 li
634.92 0 li
cp
clp
gsave
0 543.24 mo
635 543.24 li
635 -.76001 li
0 -.76001 li
cp
clp
0 0 mo
634.922 0 li
634.922 543.238 li
0 543.238 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
32.879 478.078 mo
619.32 478.078 li
32.879 457.68 mo
619.32 457.68 li
32.879 437.398 mo
619.32 437.398 li
32.879 417 mo
619.32 417 li
32.879 396.602 mo
619.32 396.602 li
32.879 376.199 mo
619.32 376.199 li
32.879 355.801 mo
619.32 355.801 li
32.879 335.398 mo
619.32 335.398 li
32.879 315.121 mo
619.32 315.121 li
32.879 294.719 mo
619.32 294.719 li
32.879 274.32 mo
619.32 274.32 li
32.879 253.922 mo
619.32 253.922 li
32.879 233.52 mo
619.32 233.52 li
32.879 213.121 mo
619.32 213.121 li
32.879 192.84 mo
619.32 192.84 li
32.879 172.441 mo
619.32 172.441 li
32.879 152.039 mo
619.32 152.039 li
32.879 131.641 mo
619.32 131.641 li
32.879 111.238 mo
619.32 111.238 li
32.879 90.84 mo
619.32 90.84 li
32.879 70.559 mo
619.32 70.559 li
32.879 50.16 mo
619.32 50.16 li
32.879 29.762 mo
619.32 29.762 li
.326574 .281529 .277562 0 cmyk
@
69.48 29.762 mo
69.48 498.48 li
142.801 29.762 mo
142.801 498.48 li
216.121 29.762 mo
216.121 498.48 li
289.441 29.762 mo
289.441 498.48 li
362.762 29.762 mo
362.762 498.48 li
436.078 29.762 mo
436.078 498.48 li
509.398 29.762 mo
509.398 498.48 li
582.719 29.762 mo
582.719 498.48 li
.175235 .144778 .143648 0 cmyk
@
32.879 29.762 mo
32.879 498.48 li
106.199 29.762 mo
106.199 498.48 li
179.398 29.762 mo
179.398 498.48 li
252.719 29.762 mo
252.719 498.48 li
326.039 29.762 mo
326.039 498.48 li
399.359 29.762 mo
399.359 498.48 li
472.68 29.762 mo
472.68 498.48 li
546 29.762 mo
546 498.48 li
619.32 29.762 mo
619.32 498.48 li
.326574 .281529 .277562 0 cmyk
@
12.719 489.121 mo
19.801 489.121 li
19.801 506.281 li
12.719 506.281 li
cp
0 0 0 0 cmyk
ef
12.719 468.84 mo
19.801 468.84 li
19.801 485.879 li
12.719 485.879 li
cp
ef
12.719 448.441 mo
19.801 448.441 li
19.801 465.48 li
12.719 465.48 li
cp
ef
12.719 428.039 mo
19.801 428.039 li
19.801 445.078 li
12.719 445.078 li
cp
ef
12.719 407.641 mo
19.801 407.641 li
19.801 424.68 li
12.719 424.68 li
cp
ef
12.719 387.238 mo
19.801 387.238 li
19.801 404.398 li
12.719 404.398 li
cp
ef
12.719 366.84 mo
19.801 366.84 li
19.801 384 li
12.719 384 li
cp
ef
12.719 346.559 mo
19.801 346.559 li
19.801 363.602 li
12.719 363.602 li
cp
ef
12.719 326.16 mo
19.801 326.16 li
19.801 343.199 li
12.719 343.199 li
cp
ef
5.641 305.762 mo
19.801 305.762 li
19.801 322.801 li
5.641 322.801 li
cp
ef
5.641 285.359 mo
19.801 285.359 li
19.801 302.398 li
5.641 302.398 li
cp
ef
5.641 264.961 mo
19.801 264.961 li
19.801 282.121 li
5.641 282.121 li
cp
ef
5.641 244.559 mo
19.801 244.559 li
19.801 261.719 li
5.641 261.719 li
cp
ef
5.641 224.281 mo
19.801 224.281 li
19.801 241.32 li
5.641 241.32 li
cp
ef
5.641 203.879 mo
19.801 203.879 li
19.801 220.922 li
5.641 220.922 li
cp
ef
5.641 183.48 mo
19.801 183.48 li
19.801 200.519 li
5.641 200.519 li
cp
ef
5.641 163.078 mo
19.801 163.078 li
19.801 180.121 li
5.641 180.121 li
cp
ef
5.641 142.68 mo
19.801 142.68 li
19.801 159.84 li
5.641 159.84 li
cp
ef
5.641 122.281 mo
19.801 122.281 li
19.801 139.441 li
5.641 139.441 li
cp
ef
5.641 102 mo
19.801 102 li
19.801 119.039 li
5.641 119.039 li
cp
ef
5.641 81.602 mo
19.801 81.602 li
19.801 98.641 li
5.641 98.641 li
cp
ef
5.641 61.199 mo
19.801 61.199 li
19.801 78.238 li
5.641 78.238 li
cp
ef
5.641 40.801 mo
19.801 40.801 li
19.801 57.84 li
5.641 57.84 li
cp
ef
5.641 20.398 mo
19.801 20.398 li
19.801 37.558 li
5.641 37.558 li
cp
ef
.96 lw
32.879 498.48 mo
619.32 498.48 li
.369879 .299321 .304356 .000976577 cmyk
@
32.879 498.48 mo
32.879 502.922 li
106.199 498.48 mo
106.199 502.922 li
179.398 498.48 mo
179.398 502.922 li
252.719 498.48 mo
252.719 502.922 li
326.039 498.48 mo
326.039 502.922 li
399.359 498.48 mo
399.359 502.922 li
472.68 498.48 mo
472.68 502.922 li
546 498.48 mo
546 502.922 li
619.32 498.48 mo
619.32 502.922 li
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
1 lc
32.879 498.48 mo
106.199 478.559 li
179.398 418.801 li
252.719 368.52 li
326.039 357 li
399.359 314.16 li
472.68 274.441 li
546 159.602 li
619.32 192.961 li
.62829 .284672 0 0 cmyk
@
grestore
1 lw
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
.62829 .284672 0 0 cmyk
@
101.07 473.469 mo
111.031 473.469 li
111.031 483.43 li
101.07 483.43 li
cp
@
174.391 413.711 mo
184.352 413.711 li
184.352 423.672 li
174.391 423.672 li
cp
@
247.711 363.43 mo
257.672 363.43 li
257.672 373.391 li
247.711 373.391 li
cp
@
321.031 351.91 mo
330.988 351.91 li
330.988 361.871 li
321.031 361.871 li
cp
@
394.352 308.949 mo
404.309 308.949 li
404.309 318.91 li
394.352 318.91 li
cp
@
467.672 269.23 mo
477.629 269.23 li
477.629 279.191 li
467.672 279.191 li
cp
@
540.988 154.391 mo
550.949 154.391 li
550.949 164.352 li
540.988 164.352 li
cp
@
614.309 187.871 mo
624.27 187.871 li
624.27 197.828 li
614.309 197.828 li
cp
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
.96 lw
1 lc
32.879 498.48 mo
106.199 477.84 li
179.398 415.078 li
252.719 392.641 li
326.039 350.16 li
399.359 307.922 li
472.68 265.922 li
546 224.398 li
619.32 182.762 li
.0321965 .622736 .922606 .000579843 cmyk
@
grestore
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
.0321965 .622736 .922606 .000579843 cmyk
@
101.07 472.75 mo
111.031 472.75 li
111.031 482.711 li
101.07 482.711 li
cp
@
174.391 409.988 mo
184.352 409.988 li
184.352 419.949 li
174.391 419.949 li
cp
@
247.711 387.43 mo
257.672 387.43 li
257.672 397.391 li
247.711 397.391 li
cp
@
321.031 345.07 mo
330.988 345.07 li
330.988 355.031 li
321.031 355.031 li
cp
@
394.352 302.828 mo
404.309 302.828 li
404.309 312.789 li
394.352 312.789 li
cp
@
467.672 260.711 mo
477.629 260.711 li
477.629 270.672 li
467.672 270.672 li
cp
@
540.988 219.309 mo
550.949 219.309 li
550.949 229.27 li
540.988 229.27 li
cp
@
614.309 177.551 mo
624.27 177.551 li
624.27 187.512 li
614.309 187.512 li
cp
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
.96 lw
1 lc
32.879 498.48 mo
106.199 473.762 li
179.398 426.719 li
252.719 379.441 li
326.039 333.238 li
472.68 240.84 li
546 193.441 li
619.32 147.602 li
.621118 .109194 .980743 .0040589 cmyk
@
grestore
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
.621118 .109194 .980743 .0040589 cmyk
@
101.07 468.551 mo
111.031 468.551 li
111.031 478.512 li
101.07 478.512 li
cp
@
174.391 421.512 mo
184.352 421.512 li
184.352 431.469 li
174.391 431.469 li
cp
@
247.711 374.23 mo
257.672 374.23 li
257.672 384.191 li
247.711 384.191 li
cp
@
321.031 328.031 mo
330.988 328.031 li
330.988 337.988 li
321.031 337.988 li
cp
@
394.352 281.949 mo
404.309 281.949 li
404.309 291.91 li
394.352 291.91 li
cp
@
467.672 235.75 mo
477.629 235.75 li
477.629 245.711 li
467.672 245.711 li
cp
@
540.988 188.23 mo
550.949 188.23 li
550.949 198.191 li
540.988 198.191 li
cp
@
614.309 142.391 mo
624.27 142.391 li
624.27 152.352 li
614.309 152.352 li
cp
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
.96 lw
1 lc
32.879 498.48 mo
106.199 473.762 li
179.398 424.68 li
252.719 379.32 li
326.039 333.48 li
399.359 286.441 li
472.68 240 li
546 192.238 li
619.32 60.48 li
0 .993988 1 0 cmyk
@
grestore
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
0 .993988 1 0 cmyk
@
101.07 468.672 mo
111.031 468.672 li
111.031 478.629 li
101.07 478.629 li
cp
@
174.391 419.59 mo
184.352 419.59 li
184.352 429.551 li
174.391 429.551 li
cp
@
247.711 374.109 mo
257.672 374.109 li
257.672 384.07 li
247.711 384.07 li
cp
@
321.031 328.27 mo
330.988 328.27 li
330.988 338.231 li
321.031 338.231 li
cp
@
394.352 281.352 mo
404.309 281.352 li
404.309 291.309 li
394.352 291.309 li
cp
@
467.672 234.789 mo
477.629 234.789 li
477.629 244.75 li
467.672 244.75 li
cp
@
540.988 187.031 mo
550.949 187.031 li
550.949 196.988 li
540.988 196.988 li
cp
@
614.309 55.27 mo
624.27 55.27 li
624.27 65.231 li
614.309 65.231 li
cp
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
32.879 498.48 mo
106.199 477.719 li
179.398 437.16 li
252.719 415.078 li
326.039 342.602 li
399.359 352.199 li
472.68 312.84 li
546 276.961 li
619.32 186.602 li
.62829 .284672 0 0 cmyk
@
grestore
[4 3 ] 0 dsh
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
.62829 .284672 0 0 cmyk
@
101.07 472.629 mo
111.031 472.629 li
111.031 482.59 li
101.07 482.59 li
cp
@
174.391 432.07 mo
184.352 432.07 li
184.352 442.031 li
174.391 442.031 li
cp
@
247.711 409.871 mo
257.672 409.871 li
257.672 419.828 li
247.711 419.828 li
cp
@
321.031 337.391 mo
330.988 337.391 li
330.988 347.352 li
321.031 347.352 li
cp
@
394.352 346.988 mo
404.309 346.988 li
404.309 356.949 li
394.352 356.949 li
cp
@
467.672 307.629 mo
477.629 307.629 li
477.629 317.59 li
467.672 317.59 li
cp
@
540.988 271.871 mo
550.949 271.871 li
550.949 281.828 li
540.988 281.828 li
cp
@
614.309 181.391 mo
624.27 181.391 li
624.27 191.352 li
614.309 191.352 li
cp
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
32.879 498.48 mo
106.199 478.922 li
179.398 437.281 li
252.719 438.238 li
326.039 400.078 li
399.359 366.602 li
472.68 319.199 li
546 319.441 li
619.32 288.121 li
.0321965 .622736 .922606 .000579843 cmyk
@
grestore
[] 0 dsh
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
.0321965 .622736 .922606 .000579843 cmyk
@
101.07 473.711 mo
111.031 473.711 li
111.031 483.672 li
101.07 483.672 li
cp
@
174.391 432.191 mo
184.352 432.191 li
184.352 442.148 li
174.391 442.148 li
cp
@
247.711 433.148 mo
257.672 433.148 li
257.672 443.109 li
247.711 443.109 li
cp
@
321.031 394.871 mo
330.988 394.871 li
330.988 404.828 li
321.031 404.828 li
cp
@
394.352 361.391 mo
404.309 361.391 li
404.309 371.352 li
394.352 371.352 li
cp
@
467.672 314.109 mo
477.629 314.109 li
477.629 324.07 li
467.672 324.07 li
cp
@
540.988 314.352 mo
550.949 314.352 li
550.949 324.309 li
540.988 324.309 li
cp
@
614.309 283.031 mo
624.27 283.031 li
624.27 292.988 li
614.309 292.988 li
cp
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
32.879 498.48 mo
106.199 478.801 li
179.398 435.238 li
252.719 436.199 li
326.039 417.359 li
399.359 382.559 li
472.68 360.48 li
546 350.641 li
619.32 316.559 li
.467353 0 .87747 0 cmyk
@
grestore
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
.621118 .109194 .980743 .0040589 cmyk
@
101.07 473.59 mo
111.031 473.59 li
111.031 483.551 li
101.07 483.551 li
cp
@
174.391 430.031 mo
184.352 430.031 li
184.352 439.988 li
174.391 439.988 li
cp
@
247.711 431.109 mo
257.672 431.109 li
257.672 441.07 li
247.711 441.07 li
cp
@
321.031 412.148 mo
330.988 412.148 li
330.988 422.109 li
321.031 422.109 li
cp
@
394.352 377.352 mo
404.309 377.352 li
404.309 387.309 li
394.352 387.309 li
cp
@
467.672 355.27 mo
477.629 355.27 li
477.629 365.231 li
467.672 365.231 li
cp
@
540.988 345.551 mo
550.949 345.551 li
550.949 355.512 li
540.988 355.512 li
cp
@
614.309 311.352 mo
624.27 311.352 li
624.27 321.309 li
614.309 321.309 li
cp
@
gsave
32.762 29.641 mo
620.039 29.641 li
620.039 499.079 li
32.762 499.079 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
32.879 498.48 mo
106.199 472.559 li
179.398 424.68 li
252.719 426.121 li
326.039 404.039 li
399.359 387.121 li
472.68 312.602 li
546 295.32 li
619.32 327.961 li
0 .993988 1 0 cmyk
@
grestore
27.75 493.391 mo
37.711 493.391 li
37.711 503.352 li
27.75 503.352 li
cp
0 .993988 1 0 cmyk
@
101.07 467.352 mo
111.031 467.352 li
111.031 477.309 li
101.07 477.309 li
cp
@
174.391 419.59 mo
184.352 419.59 li
184.352 429.551 li
174.391 429.551 li
cp
@
247.711 421.031 mo
257.672 421.031 li
257.672 430.988 li
247.711 430.988 li
cp
@
321.031 398.949 mo
330.988 398.949 li
330.988 408.91 li
321.031 408.91 li
cp
@
394.352 381.91 mo
404.309 381.91 li
404.309 391.871 li
394.352 391.871 li
cp
@
467.672 307.391 mo
477.629 307.391 li
477.629 317.352 li
467.672 317.352 li
cp
@
540.988 290.109 mo
550.949 290.109 li
550.949 300.07 li
540.988 300.07 li
cp
@
614.309 322.871 mo
624.27 322.871 li
624.27 332.828 li
614.309 332.828 li
cp
@
12.77 489.113 mo
19.864 489.113 li
19.864 506.203 li
12.77 506.203 li
cp
0 0 0 0 cmyk
ef
19.145 502.07 mo
19.141 502.16 19.133 502.23 19.121 502.289 cv
19.105 502.352 19.086 502.402 19.066 502.434 cv
19.043 502.473 19.02 502.496 18.988 502.512 cv
18.957 502.527 18.926 502.535 18.898 502.535 cv
14.262 502.535 li
14.227 502.535 14.199 502.527 14.172 502.512 cv
14.145 502.496 14.117 502.473 14.094 502.434 cv
14.066 502.402 14.047 502.352 14.035 502.289 cv
14.02 502.23 14.012 502.16 14.016 502.07 cv
14.012 501.992 14.02 501.918 14.035 501.855 cv
14.047 501.797 14.063 501.75 14.086 501.711 cv
14.102 501.676 14.129 501.645 14.16 501.621 cv
14.191 501.602 14.223 501.594 14.262 501.59 cv
16.113 501.59 li
16.113 494.844 li
14.398 495.863 li
14.309 495.914 14.238 495.941 14.191 495.949 cv
14.137 495.957 14.094 495.949 14.063 495.918 cv
14.027 495.891 14.008 495.84 13.996 495.77 cv
13.984 495.703 13.977 495.617 13.98 495.508 cv
13.977 495.434 13.98 495.367 13.992 495.309 cv
13.996 495.258 14.008 495.211 14.023 495.172 cv
14.035 495.137 14.055 495.105 14.078 495.078 cv
14.102 495.051 14.133 495.023 14.18 494.996 cv
16.223 493.684 li
16.238 493.672 16.258 493.66 16.289 493.652 cv
16.313 493.645 16.348 493.637 16.395 493.625 cv
16.434 493.617 16.484 493.609 16.539 493.605 cv
16.594 493.605 16.66 493.605 16.746 493.602 cv
16.852 493.605 16.945 493.609 17.02 493.617 cv
17.09 493.625 17.145 493.641 17.191 493.656 cv
17.23 493.676 17.258 493.695 17.273 493.719 cv
17.281 493.746 17.289 493.77 17.293 493.793 cv
17.293 501.59 li
18.898 501.59 li
18.934 501.594 18.969 501.602 19 501.621 cv
19.031 501.645 19.055 501.676 19.078 501.711 cv
19.094 501.75 19.109 501.797 19.125 501.855 cv
19.133 501.918 19.141 501.992 19.145 502.07 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 468.73 mo
19.864 468.73 li
19.864 485.82 li
12.77 485.82 li
cp
0 0 0 0 cmyk
ef
19.125 481.629 mo
19.121 481.715 19.117 481.789 19.105 481.852 cv
19.094 481.918 19.078 481.973 19.059 482.012 cv
19.035 482.059 19.008 482.09 18.977 482.105 cv
18.941 482.129 18.902 482.137 18.863 482.137 cv
13.961 482.137 li
13.898 482.137 13.84 482.129 13.793 482.113 cv
13.742 482.098 13.703 482.074 13.668 482.035 cv
13.633 482.004 13.605 481.949 13.594 481.879 cv
13.574 481.809 13.566 481.723 13.57 481.621 cv
13.566 481.531 13.57 481.453 13.578 481.383 cv
13.582 481.316 13.598 481.258 13.625 481.203 cv
13.648 481.152 13.68 481.098 13.715 481.043 cv
13.75 480.992 13.793 480.937 13.852 480.875 cv
15.625 479.051 li
16.035 478.633 16.363 478.258 16.613 477.922 cv
16.859 477.594 17.051 477.289 17.184 477.012 cv
17.316 476.738 17.402 476.488 17.449 476.262 cv
17.488 476.039 17.512 475.828 17.512 475.633 cv
17.512 475.437 17.477 475.254 17.41 475.074 cv
17.344 474.902 17.25 474.746 17.125 474.609 cv
17 474.48 16.844 474.375 16.656 474.293 cv
16.469 474.219 16.25 474.18 16.004 474.176 cv
15.715 474.18 15.457 474.219 15.23 474.293 cv
15 474.375 14.801 474.461 14.629 474.547 cv
14.457 474.641 14.313 474.723 14.195 474.801 cv
14.078 474.879 13.992 474.918 13.941 474.918 cv
13.906 474.918 13.875 474.91 13.852 474.891 cv
13.82 474.875 13.801 474.844 13.785 474.801 cv
13.77 474.762 13.754 474.707 13.746 474.637 cv
13.734 474.57 13.73 474.488 13.734 474.391 cv
13.73 474.324 13.734 474.266 13.742 474.215 cv
13.746 474.164 13.754 474.121 13.766 474.082 cv
13.773 474.047 13.789 474.012 13.809 473.98 cv
13.828 473.949 13.863 473.91 13.922 473.859 cv
13.973 473.812 14.066 473.746 14.203 473.664 cv
14.336 473.582 14.508 473.504 14.711 473.422 cv
14.914 473.344 15.137 473.273 15.383 473.219 cv
15.625 473.164 15.883 473.137 16.156 473.137 cv
16.582 473.137 16.957 473.199 17.281 473.32 cv
17.602 473.441 17.867 473.605 18.082 473.816 cv
18.293 474.027 18.453 474.273 18.559 474.547 cv
18.664 474.828 18.719 475.125 18.719 475.437 cv
18.719 475.727 18.691 476.008 18.641 476.285 cv
18.59 476.57 18.484 476.875 18.324 477.199 cv
18.16 477.527 17.926 477.891 17.621 478.289 cv
17.313 478.691 16.906 479.152 16.402 479.668 cv
14.996 481.137 li
18.855 481.137 li
18.887 481.141 18.922 481.152 18.961 481.168 cv
18.992 481.191 19.023 481.223 19.051 481.262 cv
19.074 481.305 19.094 481.355 19.105 481.414 cv
19.117 481.48 19.121 481.551 19.125 481.629 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 448.352 mo
19.864 448.352 li
19.864 465.442 li
12.77 465.442 li
cp
0 0 0 0 cmyk
ef
19.055 459.227 mo
19.051 459.637 18.98 460.004 18.84 460.328 cv
18.695 460.656 18.492 460.937 18.23 461.168 cv
17.965 461.402 17.637 461.578 17.25 461.703 cv
16.859 461.828 16.422 461.891 15.938 461.891 cv
15.633 461.891 15.355 461.863 15.102 461.816 cv
14.84 461.77 14.609 461.719 14.414 461.648 cv
14.211 461.586 14.047 461.516 13.914 461.445 cv
13.781 461.375 13.695 461.324 13.664 461.289 cv
13.625 461.262 13.602 461.23 13.586 461.195 cv
13.566 461.164 13.547 461.125 13.535 461.078 cv
13.52 461.035 13.512 460.98 13.504 460.91 cv
13.496 460.848 13.492 460.766 13.496 460.664 cv
13.492 460.504 13.508 460.391 13.543 460.324 cv
13.574 460.262 13.621 460.227 13.684 460.227 cv
13.727 460.227 13.809 460.266 13.934 460.336 cv
14.055 460.414 14.215 460.492 14.41 460.574 cv
14.602 460.66 14.828 460.738 15.094 460.809 cv
15.352 460.883 15.645 460.918 15.965 460.918 cv
16.273 460.918 16.543 460.879 16.781 460.801 cv
17.012 460.723 17.211 460.613 17.371 460.473 cv
17.527 460.332 17.645 460.164 17.727 459.969 cv
17.805 459.773 17.844 459.562 17.848 459.336 cv
17.844 459.086 17.793 458.859 17.695 458.656 cv
17.59 458.457 17.441 458.285 17.25 458.137 cv
17.051 457.992 16.813 457.879 16.527 457.801 cv
16.242 457.723 15.918 457.684 15.555 457.684 cv
14.684 457.684 li
14.641 457.684 14.605 457.676 14.57 457.66 cv
14.535 457.645 14.504 457.617 14.48 457.578 cv
14.453 457.543 14.434 457.496 14.418 457.437 cv
14.402 457.379 14.395 457.301 14.395 457.203 cv
14.395 457.117 14.398 457.047 14.414 456.988 cv
14.422 456.934 14.441 456.887 14.473 456.852 cv
14.496 456.816 14.527 456.793 14.559 456.773 cv
14.59 456.762 14.625 456.754 14.668 456.75 cv
15.441 456.75 li
15.742 456.754 16.012 456.715 16.254 456.633 cv
16.488 456.559 16.691 456.445 16.863 456.297 cv
17.027 456.152 17.156 455.977 17.246 455.773 cv
17.336 455.57 17.383 455.344 17.383 455.09 cv
17.383 454.91 17.352 454.734 17.293 454.566 cv
17.23 454.402 17.141 454.258 17.023 454.133 cv
16.902 454.008 16.75 453.91 16.57 453.84 cv
16.383 453.77 16.172 453.734 15.93 453.734 cv
15.664 453.734 15.418 453.777 15.199 453.855 cv
14.973 453.937 14.777 454.023 14.605 454.113 cv
14.43 454.207 14.285 454.293 14.172 454.371 cv
14.059 454.453 13.977 454.492 13.934 454.488 cv
13.898 454.492 13.871 454.484 13.848 454.473 cv
13.82 454.461 13.801 454.437 13.785 454.402 cv
13.77 454.371 13.758 454.324 13.75 454.258 cv
13.742 454.199 13.738 454.117 13.742 454.016 cv
13.738 453.949 13.738 453.891 13.746 453.836 cv
13.746 453.785 13.758 453.738 13.773 453.695 cv
13.789 453.66 13.805 453.625 13.824 453.59 cv
13.84 453.562 13.871 453.523 13.914 453.477 cv
13.957 453.434 14.043 453.371 14.18 453.289 cv
14.309 453.207 14.473 453.129 14.668 453.047 cv
14.859 452.969 15.082 452.898 15.34 452.844 cv
15.59 452.789 15.863 452.762 16.16 452.762 cv
16.566 452.762 16.93 452.816 17.242 452.918 cv
17.555 453.027 17.813 453.176 18.023 453.363 cv
18.227 453.559 18.383 453.789 18.488 454.055 cv
18.59 454.324 18.641 454.617 18.645 454.941 cv
18.641 455.223 18.605 455.484 18.535 455.719 cv
18.461 455.961 18.352 456.172 18.211 456.355 cv
18.066 456.543 17.895 456.699 17.691 456.828 cv
17.484 456.961 17.246 457.055 16.977 457.102 cv
16.977 457.113 li
17.281 457.148 17.563 457.223 17.816 457.344 cv
18.07 457.465 18.289 457.617 18.473 457.801 cv
18.652 457.984 18.793 458.199 18.898 458.441 cv
19 458.687 19.051 458.949 19.055 459.227 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 427.969 mo
19.864 427.969 li
19.864 445.059 li
12.77 445.059 li
cp
0 0 0 0 cmyk
ef
19.5 438.855 mo
19.496 439.008 19.473 439.129 19.43 439.215 cv
19.383 439.305 19.32 439.348 19.238 439.344 cv
18.238 439.344 li
18.238 441.207 li
18.238 441.246 18.227 441.277 18.211 441.301 cv
18.188 441.328 18.156 441.348 18.113 441.367 cv
18.063 441.383 18 441.395 17.93 441.406 cv
17.852 441.414 17.758 441.418 17.641 441.422 cv
17.523 441.418 17.426 441.414 17.355 441.406 cv
17.277 441.395 17.219 441.383 17.176 441.367 cv
17.129 441.348 17.098 441.328 17.082 441.301 cv
17.063 441.277 17.055 441.246 17.059 441.207 cv
17.059 439.344 li
13.43 439.344 li
13.371 439.348 13.328 439.34 13.293 439.324 cv
13.258 439.312 13.223 439.285 13.195 439.246 cv
13.164 439.211 13.145 439.16 13.133 439.09 cv
13.121 439.023 13.117 438.934 13.117 438.82 cv
13.117 438.738 13.117 438.66 13.125 438.59 cv
13.125 438.52 13.137 438.457 13.152 438.402 cv
13.164 438.348 13.18 438.293 13.207 438.238 cv
13.227 438.184 13.254 438.129 13.289 438.066 cv
16.449 432.68 li
16.469 432.645 16.504 432.613 16.551 432.586 cv
16.594 432.559 16.648 432.535 16.723 432.516 cv
16.789 432.5 16.875 432.488 16.98 432.477 cv
17.082 432.473 17.203 432.469 17.344 432.465 cv
17.492 432.469 17.629 432.473 17.746 432.484 cv
17.859 432.496 17.949 432.512 18.023 432.527 cv
18.09 432.547 18.145 432.57 18.184 432.602 cv
18.219 432.633 18.238 432.668 18.238 432.707 cv
18.238 438.371 li
19.238 438.371 li
19.313 438.375 19.375 438.414 19.426 438.492 cv
19.473 438.574 19.496 438.695 19.5 438.855 cv
cp
17.059 433.504 mo
17.047 433.504 li
14.195 438.371 li
17.059 438.371 li
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 407.59 mo
19.864 407.59 li
19.864 424.68 li
12.77 424.68 li
cp
0 0 0 0 cmyk
ef
19.082 418.129 mo
19.082 418.605 19 419.027 18.84 419.398 cv
18.68 419.77 18.453 420.082 18.164 420.336 cv
17.867 420.59 17.52 420.785 17.117 420.914 cv
16.711 421.047 16.262 421.109 15.77 421.109 cv
15.492 421.109 15.23 421.09 14.988 421.051 cv
14.738 421.012 14.52 420.965 14.332 420.91 cv
14.137 420.855 13.98 420.801 13.855 420.742 cv
13.73 420.691 13.652 420.648 13.621 420.613 cv
13.586 420.582 13.563 420.551 13.551 420.523 cv
13.535 420.496 13.52 420.465 13.512 420.422 cv
13.496 420.387 13.488 420.336 13.488 420.273 cv
13.48 420.215 13.48 420.145 13.48 420.062 cv
13.48 419.988 13.484 419.918 13.492 419.855 cv
13.5 419.793 13.512 419.742 13.531 419.703 cv
13.547 419.664 13.566 419.637 13.594 419.617 cv
13.617 419.602 13.648 419.594 13.68 419.59 cv
13.727 419.594 13.797 419.621 13.891 419.676 cv
13.984 419.734 14.113 419.797 14.277 419.863 cv
14.441 419.93 14.641 419.992 14.883 420.051 cv
15.117 420.109 15.402 420.137 15.738 420.137 cv
16.039 420.137 16.32 420.102 16.578 420.027 cv
16.832 419.957 17.055 419.844 17.242 419.687 cv
17.426 419.535 17.57 419.34 17.676 419.102 cv
17.781 418.867 17.832 418.578 17.836 418.238 cv
17.832 417.957 17.789 417.707 17.699 417.488 cv
17.609 417.27 17.473 417.09 17.289 416.945 cv
17.102 416.805 16.867 416.699 16.586 416.625 cv
16.301 416.555 15.961 416.516 15.574 416.516 cv
15.289 416.516 15.051 416.531 14.852 416.559 cv
14.648 416.59 14.461 416.605 14.289 416.602 cv
14.16 416.605 14.066 416.574 14.016 416.512 cv
13.957 416.453 13.93 416.34 13.934 416.168 cv
13.934 412.555 li
13.93 412.406 13.965 412.297 14.039 412.219 cv
14.105 412.148 14.207 412.109 14.344 412.109 cv
18.273 412.109 li
18.309 412.109 18.344 412.121 18.379 412.141 cv
18.41 412.164 18.438 412.195 18.465 412.234 cv
18.484 412.277 18.5 412.328 18.516 412.391 cv
18.523 412.457 18.531 412.535 18.535 412.617 cv
18.531 412.785 18.508 412.91 18.469 413 cv
18.422 413.094 18.363 413.141 18.285 413.137 cv
15.113 413.137 li
15.113 415.625 li
15.266 415.605 15.422 415.594 15.586 415.586 cv
15.742 415.582 15.93 415.578 16.145 415.578 cv
16.629 415.578 17.055 415.641 17.422 415.762 cv
17.785 415.883 18.09 416.055 18.34 416.273 cv
18.582 416.5 18.77 416.766 18.895 417.078 cv
19.02 417.395 19.082 417.746 19.082 418.129 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 387.211 mo
19.864 387.211 li
19.864 404.301 li
12.77 404.301 li
cp
0 0 0 0 cmyk
ef
19.352 397.738 mo
19.352 398.129 19.289 398.508 19.172 398.867 cv
19.047 399.234 18.863 399.551 18.621 399.824 cv
18.371 400.102 18.059 400.324 17.684 400.488 cv
17.301 400.656 16.855 400.738 16.34 400.738 cv
15.969 400.738 15.641 400.695 15.359 400.602 cv
15.074 400.516 14.828 400.383 14.617 400.211 cv
14.406 400.043 14.23 399.836 14.094 399.59 cv
13.953 399.344 13.84 399.062 13.758 398.746 cv
13.672 398.434 13.613 398.09 13.578 397.711 cv
13.539 397.34 13.52 396.937 13.523 396.504 cv
13.52 396.125 13.539 395.742 13.582 395.352 cv
13.621 394.969 13.695 394.594 13.801 394.227 cv
13.906 393.867 14.051 393.527 14.23 393.211 cv
14.41 392.895 14.637 392.617 14.91 392.383 cv
15.184 392.148 15.508 391.961 15.887 391.82 cv
16.266 391.684 16.707 391.617 17.211 391.613 cv
17.379 391.617 17.551 391.625 17.723 391.645 cv
17.895 391.668 18.055 391.699 18.203 391.73 cv
18.352 391.77 18.473 391.805 18.574 391.844 cv
18.672 391.883 18.738 391.918 18.773 391.941 cv
18.801 391.969 18.824 391.996 18.844 392.023 cv
18.859 392.055 18.875 392.086 18.883 392.121 cv
18.891 392.156 18.895 392.195 18.902 392.238 cv
18.902 392.281 18.906 392.336 18.91 392.398 cv
18.906 392.484 18.906 392.555 18.906 392.609 cv
18.902 392.672 18.891 392.719 18.879 392.754 cv
18.859 392.793 18.84 392.82 18.816 392.836 cv
18.789 392.855 18.758 392.863 18.719 392.863 cv
18.668 392.863 18.598 392.848 18.512 392.816 cv
18.422 392.785 18.316 392.75 18.195 392.707 cv
18.07 392.672 17.922 392.637 17.746 392.602 cv
17.57 392.574 17.367 392.559 17.137 392.555 cv
16.707 392.559 16.34 392.645 16.035 392.816 cv
15.73 392.988 15.48 393.223 15.285 393.516 cv
15.09 393.809 14.945 394.148 14.855 394.531 cv
14.758 394.922 14.703 395.324 14.695 395.742 cv
14.813 395.676 14.949 395.609 15.098 395.539 cv
15.246 395.473 15.406 395.41 15.582 395.352 cv
15.758 395.301 15.945 395.254 16.141 395.219 cv
16.336 395.187 16.547 395.172 16.773 395.168 cv
17.25 395.172 17.652 395.238 17.984 395.363 cv
18.313 395.496 18.578 395.676 18.785 395.906 cv
18.984 396.137 19.129 396.406 19.219 396.719 cv
19.305 397.031 19.352 397.371 19.352 397.738 cv
cp
18.156 397.848 mo
18.156 397.586 18.129 397.344 18.078 397.125 cv
18.023 396.91 17.934 396.727 17.813 396.57 cv
17.688 396.422 17.523 396.305 17.32 396.223 cv
17.109 396.141 16.855 396.098 16.559 396.098 cv
16.387 396.098 16.219 396.113 16.051 396.145 cv
15.879 396.176 15.715 396.219 15.559 396.266 cv
15.398 396.32 15.25 396.383 15.109 396.453 cv
14.965 396.527 14.832 396.602 14.715 396.68 cv
14.711 397.273 14.75 397.77 14.828 398.164 cv
14.902 398.562 15.012 398.879 15.156 399.117 cv
15.301 399.359 15.48 399.531 15.695 399.633 cv
15.91 399.738 16.16 399.789 16.449 399.785 cv
16.738 399.789 16.992 399.734 17.207 399.621 cv
17.422 399.516 17.598 399.367 17.742 399.18 cv
17.883 398.996 17.988 398.789 18.055 398.559 cv
18.121 398.328 18.156 398.094 18.156 397.848 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 366.828 mo
19.864 366.828 li
19.864 383.922 li
12.77 383.922 li
cp
0 0 0 0 cmyk
ef
19.254 371.867 mo
19.25 371.953 19.246 372.027 19.242 372.09 cv
19.234 372.16 19.227 372.223 19.215 372.281 cv
19.203 372.348 19.188 372.406 19.168 372.461 cv
19.145 372.52 19.121 372.582 19.098 372.641 cv
15.902 380.004 li
15.875 380.062 15.848 380.105 15.816 380.137 cv
15.781 380.172 15.738 380.199 15.684 380.219 cv
15.629 380.238 15.559 380.25 15.48 380.262 cv
15.395 380.266 15.297 380.27 15.18 380.273 cv
15.023 380.27 14.902 380.262 14.816 380.25 cv
14.73 380.234 14.668 380.219 14.629 380.187 cv
14.59 380.16 14.57 380.121 14.578 380.078 cv
14.578 380.035 14.594 379.984 14.625 379.922 cv
17.984 372.395 li
13.727 372.395 li
13.641 372.398 13.574 372.352 13.531 372.258 cv
13.488 372.168 13.469 372.039 13.469 371.875 cv
13.469 371.789 13.473 371.715 13.484 371.648 cv
13.496 371.586 13.512 371.531 13.535 371.488 cv
13.555 371.445 13.582 371.414 13.617 371.391 cv
13.648 371.371 13.688 371.359 13.727 371.359 cv
18.898 371.359 li
18.957 371.359 19.012 371.367 19.063 371.383 cv
19.109 371.398 19.145 371.426 19.172 371.465 cv
19.195 371.504 19.215 371.559 19.23 371.621 cv
19.242 371.687 19.25 371.77 19.254 371.867 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 346.449 mo
19.864 346.449 li
19.864 363.539 li
12.77 363.539 li
cp
0 0 0 0 cmyk
ef
19.328 357.551 mo
19.328 357.937 19.258 358.281 19.121 358.578 cv
18.984 358.883 18.789 359.133 18.531 359.336 cv
18.273 359.543 17.953 359.699 17.574 359.801 cv
17.191 359.906 16.758 359.957 16.273 359.957 cv
15.813 359.957 15.402 359.91 15.043 359.816 cv
14.68 359.723 14.375 359.582 14.125 359.391 cv
13.875 359.207 13.684 358.977 13.551 358.699 cv
13.418 358.426 13.352 358.113 13.352 357.758 cv
13.352 357.484 13.395 357.227 13.488 356.992 cv
13.574 356.758 13.707 356.543 13.883 356.348 cv
14.051 356.152 14.262 355.969 14.516 355.793 cv
14.766 355.625 15.051 355.461 15.367 355.305 cv
15.094 355.164 14.852 355.016 14.641 354.855 cv
14.43 354.699 14.25 354.527 14.105 354.34 cv
13.957 354.156 13.848 353.961 13.773 353.75 cv
13.695 353.543 13.656 353.312 13.66 353.062 cv
13.656 352.754 13.711 352.461 13.828 352.187 cv
13.938 351.918 14.109 351.684 14.336 351.48 cv
14.563 351.281 14.848 351.121 15.199 351.004 cv
15.543 350.887 15.953 350.828 16.422 350.828 cv
16.867 350.828 17.254 350.883 17.582 350.988 cv
17.91 351.098 18.18 351.242 18.391 351.426 cv
18.602 351.613 18.758 351.832 18.863 352.082 cv
18.961 352.332 19.012 352.602 19.016 352.891 cv
19.012 353.125 18.973 353.352 18.902 353.562 cv
18.824 353.781 18.715 353.984 18.566 354.172 cv
18.418 354.367 18.238 354.547 18.027 354.711 cv
17.816 354.883 17.574 355.039 17.301 355.18 cv
17.621 355.344 17.906 355.508 18.164 355.676 cv
18.414 355.844 18.629 356.023 18.805 356.219 cv
18.973 356.414 19.102 356.621 19.195 356.836 cv
19.281 357.055 19.328 357.293 19.328 357.551 cv
cp
17.848 353 mo
17.844 352.812 17.813 352.637 17.746 352.48 cv
17.68 352.324 17.582 352.191 17.457 352.082 cv
17.328 351.973 17.168 351.891 16.98 351.832 cv
16.785 351.777 16.57 351.75 16.332 351.746 cv
15.836 351.75 15.461 351.859 15.211 352.082 cv
14.953 352.309 14.828 352.617 14.832 353 cv
14.828 353.18 14.859 353.344 14.922 353.496 cv
14.984 353.652 15.078 353.797 15.211 353.934 cv
15.336 354.07 15.5 354.203 15.703 354.332 cv
15.898 354.465 16.137 354.602 16.414 354.742 cv
16.875 354.508 17.23 354.246 17.477 353.953 cv
17.723 353.668 17.844 353.352 17.848 353 cv
cp
18.137 357.676 mo
18.133 357.469 18.094 357.277 18.02 357.105 cv
17.938 356.937 17.82 356.777 17.664 356.625 cv
17.508 356.477 17.309 356.332 17.074 356.191 cv
16.836 356.055 16.566 355.91 16.258 355.758 cv
15.969 355.902 15.715 356.043 15.5 356.184 cv
15.281 356.324 15.102 356.473 14.965 356.621 cv
14.824 356.777 14.719 356.934 14.648 357.098 cv
14.574 357.266 14.539 357.449 14.543 357.648 cv
14.539 358.094 14.691 358.437 15 358.676 cv
15.301 358.922 15.754 359.043 16.359 359.039 cv
16.941 359.043 17.387 358.922 17.688 358.672 cv
17.984 358.43 18.133 358.098 18.137 357.676 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
12.77 326.07 mo
19.864 326.07 li
19.864 343.16 li
12.77 343.16 li
cp
0 0 0 0 cmyk
ef
19.191 334.676 mo
19.188 335.062 19.164 335.449 19.121 335.84 cv
19.074 336.234 18.996 336.613 18.891 336.977 cv
18.777 337.34 18.633 337.68 18.449 337.996 cv
18.262 338.316 18.027 338.598 17.75 338.832 cv
17.465 339.074 17.129 339.258 16.746 339.391 cv
16.355 339.523 15.91 339.59 15.402 339.59 cv
15.203 339.59 15.012 339.574 14.828 339.551 cv
14.641 339.523 14.473 339.496 14.328 339.461 cv
14.176 339.426 14.051 339.387 13.953 339.344 cv
13.852 339.305 13.777 339.266 13.734 339.223 cv
13.688 339.184 13.656 339.129 13.637 339.055 cv
13.613 338.984 13.602 338.887 13.605 338.77 cv
13.602 338.668 13.605 338.59 13.613 338.531 cv
13.617 338.473 13.629 338.426 13.645 338.395 cv
13.66 338.363 13.68 338.344 13.703 338.328 cv
13.727 338.32 13.758 338.312 13.797 338.309 cv
13.844 338.312 13.914 338.328 14.008 338.359 cv
14.098 338.395 14.211 338.434 14.355 338.473 cv
14.492 338.516 14.656 338.555 14.844 338.586 cv
15.027 338.625 15.238 338.641 15.477 338.637 cv
15.918 338.641 16.297 338.555 16.617 338.383 cv
16.93 338.211 17.191 337.984 17.395 337.695 cv
17.598 337.41 17.746 337.074 17.848 336.691 cv
17.945 336.312 18 335.914 18.012 335.492 cv
17.766 335.637 17.477 335.762 17.141 335.867 cv
16.801 335.98 16.414 336.035 15.977 336.031 cv
15.484 336.035 15.07 335.969 14.734 335.832 cv
14.398 335.699 14.125 335.516 13.922 335.281 cv
13.715 335.051 13.57 334.773 13.484 334.449 cv
13.395 334.133 13.352 333.781 13.352 333.402 cv
13.352 333.012 13.406 332.641 13.523 332.281 cv
13.633 331.93 13.813 331.617 14.059 331.348 cv
14.297 331.078 14.605 330.863 14.984 330.703 cv
15.355 330.543 15.805 330.461 16.328 330.461 cv
16.695 330.461 17.02 330.508 17.309 330.602 cv
17.59 330.695 17.84 330.832 18.055 331.008 cv
18.262 331.184 18.441 331.395 18.59 331.645 cv
18.734 331.895 18.852 332.176 18.941 332.488 cv
19.027 332.805 19.09 333.148 19.133 333.516 cv
19.168 333.887 19.188 334.273 19.191 334.676 cv
cp
17.992 334.547 mo
17.992 333.965 17.953 333.473 17.875 333.07 cv
17.797 332.672 17.68 332.348 17.531 332.098 cv
17.379 331.852 17.195 331.672 16.977 331.562 cv
16.754 331.453 16.5 331.398 16.219 331.398 cv
15.914 331.398 15.66 331.453 15.453 331.562 cv
15.242 331.672 15.07 331.816 14.938 331.992 cv
14.801 332.176 14.699 332.379 14.637 332.605 cv
14.57 332.836 14.539 333.074 14.543 333.312 cv
14.539 333.586 14.57 333.832 14.629 334.051 cv
14.684 334.277 14.773 334.465 14.906 334.621 cv
15.031 334.777 15.199 334.898 15.406 334.984 cv
15.609 335.07 15.863 335.113 16.168 335.109 cv
16.508 335.113 16.84 335.062 17.164 334.957 cv
17.48 334.855 17.758 334.719 17.992 334.547 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
5.68 305.691 mo
19.871 305.691 li
19.871 322.781 li
5.68 322.781 li
cp
0 0 0 0 cmyk
ef
12.047 318.613 mo
12.043 318.703 12.035 318.773 12.023 318.832 cv
12.008 318.895 11.988 318.945 11.969 318.977 cv
11.945 319.016 11.922 319.039 11.891 319.055 cv
11.859 319.07 11.828 319.078 11.801 319.078 cv
7.164 319.078 li
7.129 319.078 7.102 319.07 7.074 319.055 cv
7.047 319.039 7.02 319.016 6.996 318.977 cv
6.969 318.945 6.949 318.895 6.938 318.832 cv
6.922 318.773 6.914 318.703 6.918 318.613 cv
6.914 318.535 6.922 318.461 6.938 318.398 cv
6.949 318.34 6.965 318.293 6.988 318.254 cv
7.004 318.219 7.031 318.187 7.063 318.164 cv
7.094 318.145 7.125 318.137 7.164 318.133 cv
9.016 318.133 li
9.016 311.387 li
7.301 312.406 li
7.211 312.457 7.141 312.484 7.094 312.492 cv
7.039 312.5 6.996 312.492 6.965 312.461 cv
6.93 312.434 6.91 312.383 6.898 312.312 cv
6.887 312.246 6.879 312.16 6.883 312.051 cv
6.879 311.977 6.883 311.91 6.895 311.852 cv
6.898 311.801 6.91 311.754 6.926 311.715 cv
6.938 311.68 6.957 311.648 6.98 311.621 cv
7.004 311.594 7.035 311.566 7.082 311.539 cv
9.125 310.227 li
9.141 310.215 9.16 310.203 9.191 310.195 cv
9.215 310.187 9.25 310.18 9.297 310.168 cv
9.336 310.16 9.387 310.152 9.441 310.148 cv
9.496 310.148 9.563 310.148 9.648 310.145 cv
9.754 310.148 9.848 310.152 9.922 310.16 cv
9.992 310.168 10.047 310.184 10.094 310.199 cv
10.133 310.219 10.16 310.238 10.176 310.262 cv
10.184 310.289 10.191 310.312 10.195 310.336 cv
10.195 318.133 li
11.801 318.133 li
11.836 318.137 11.871 318.145 11.902 318.164 cv
11.934 318.187 11.957 318.219 11.98 318.254 cv
11.996 318.293 12.012 318.34 12.027 318.398 cv
12.035 318.461 12.043 318.535 12.047 318.613 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.398 314.621 mo
19.395 315.305 19.344 315.926 19.238 316.488 cv
19.129 317.051 18.949 317.535 18.703 317.937 cv
18.449 318.344 18.121 318.656 17.723 318.875 cv
17.316 319.098 16.824 319.207 16.238 319.207 cv
15.68 319.207 15.207 319.109 14.828 318.91 cv
14.445 318.715 14.141 318.422 13.906 318.035 cv
13.672 317.648 13.504 317.176 13.41 316.609 cv
13.309 316.047 13.262 315.398 13.262 314.664 cv
13.262 313.992 13.316 313.371 13.426 312.805 cv
13.535 312.242 13.711 311.758 13.961 311.352 cv
14.203 310.949 14.527 310.637 14.934 310.41 cv
15.332 310.191 15.828 310.078 16.418 310.078 cv
16.977 310.078 17.449 310.18 17.832 310.375 cv
18.215 310.578 18.52 310.871 18.754 311.254 cv
18.984 311.645 19.152 312.117 19.25 312.68 cv
19.348 313.242 19.395 313.891 19.398 314.621 cv
cp
18.191 314.703 mo
18.188 314.262 18.172 313.863 18.145 313.512 cv
18.109 313.16 18.063 312.852 18.004 312.582 cv
17.938 312.312 17.859 312.082 17.762 311.887 cv
17.664 311.695 17.547 311.535 17.41 311.406 cv
17.27 311.281 17.109 311.187 16.938 311.129 cv
16.758 311.074 16.563 311.047 16.348 311.043 cv
15.957 311.047 15.641 311.137 15.402 311.32 cv
15.156 311.504 14.965 311.758 14.828 312.074 cv
14.688 312.395 14.594 312.766 14.543 313.195 cv
14.492 313.625 14.469 314.09 14.469 314.582 cv
14.469 315.246 14.5 315.809 14.57 316.27 cv
14.637 316.738 14.746 317.117 14.898 317.406 cv
15.043 317.703 15.234 317.914 15.465 318.043 cv
15.695 318.18 15.977 318.246 16.309 318.242 cv
16.563 318.246 16.785 318.207 16.98 318.121 cv
17.172 318.043 17.34 317.922 17.48 317.766 cv
17.621 317.613 17.734 317.43 17.828 317.215 cv
17.914 317 17.988 316.762 18.047 316.5 cv
18.098 316.242 18.137 315.961 18.16 315.656 cv
18.18 315.352 18.188 315.035 18.191 314.703 cv
cp
f
5.68 285.309 mo
19.871 285.309 li
19.871 302.399 li
5.68 302.399 li
cp
0 0 0 0 cmyk
ef
12.047 298.215 mo
12.043 298.305 12.035 298.375 12.023 298.434 cv
12.008 298.496 11.988 298.547 11.969 298.578 cv
11.945 298.617 11.922 298.641 11.891 298.656 cv
11.859 298.672 11.828 298.68 11.801 298.68 cv
7.164 298.68 li
7.129 298.68 7.102 298.672 7.074 298.656 cv
7.047 298.641 7.02 298.617 6.996 298.578 cv
6.969 298.547 6.949 298.496 6.938 298.434 cv
6.922 298.375 6.914 298.305 6.918 298.215 cv
6.914 298.137 6.922 298.062 6.938 298 cv
6.949 297.941 6.965 297.895 6.988 297.855 cv
7.004 297.82 7.031 297.789 7.063 297.766 cv
7.094 297.746 7.125 297.738 7.164 297.734 cv
9.016 297.734 li
9.016 290.988 li
7.301 292.008 li
7.211 292.059 7.141 292.086 7.094 292.094 cv
7.039 292.102 6.996 292.094 6.965 292.062 cv
6.93 292.035 6.91 291.984 6.898 291.914 cv
6.887 291.848 6.879 291.762 6.883 291.652 cv
6.879 291.578 6.883 291.512 6.895 291.453 cv
6.898 291.402 6.91 291.355 6.926 291.316 cv
6.938 291.281 6.957 291.25 6.98 291.223 cv
7.004 291.195 7.035 291.168 7.082 291.141 cv
9.125 289.828 li
9.141 289.816 9.16 289.805 9.191 289.797 cv
9.215 289.789 9.25 289.781 9.297 289.77 cv
9.336 289.762 9.387 289.754 9.441 289.75 cv
9.496 289.75 9.563 289.75 9.648 289.746 cv
9.754 289.75 9.848 289.754 9.922 289.762 cv
9.992 289.77 10.047 289.785 10.094 289.801 cv
10.133 289.82 10.16 289.84 10.176 289.863 cv
10.184 289.891 10.191 289.914 10.195 289.937 cv
10.195 297.734 li
11.801 297.734 li
11.836 297.738 11.871 297.746 11.902 297.766 cv
11.934 297.789 11.957 297.82 11.98 297.855 cv
11.996 297.895 12.012 297.941 12.027 298 cv
12.035 298.062 12.043 298.137 12.047 298.215 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.125 298.215 mo
19.121 298.305 19.113 298.375 19.102 298.434 cv
19.086 298.496 19.066 298.547 19.047 298.578 cv
19.023 298.617 19 298.641 18.969 298.656 cv
18.938 298.672 18.906 298.68 18.879 298.68 cv
14.242 298.68 li
14.207 298.68 14.18 298.672 14.152 298.656 cv
14.125 298.641 14.098 298.617 14.074 298.578 cv
14.047 298.547 14.027 298.496 14.016 298.434 cv
14 298.375 13.992 298.305 13.996 298.215 cv
13.992 298.137 14 298.062 14.016 298 cv
14.027 297.941 14.043 297.895 14.066 297.855 cv
14.082 297.82 14.109 297.789 14.141 297.766 cv
14.172 297.746 14.203 297.738 14.242 297.734 cv
16.094 297.734 li
16.094 290.988 li
14.379 292.008 li
14.289 292.059 14.219 292.086 14.172 292.094 cv
14.117 292.102 14.074 292.094 14.043 292.062 cv
14.008 292.035 13.988 291.984 13.977 291.914 cv
13.965 291.848 13.957 291.762 13.961 291.652 cv
13.957 291.578 13.961 291.512 13.973 291.453 cv
13.977 291.402 13.988 291.355 14.004 291.316 cv
14.016 291.281 14.035 291.25 14.059 291.223 cv
14.082 291.195 14.113 291.168 14.16 291.141 cv
16.203 289.828 li
16.219 289.816 16.238 289.805 16.27 289.797 cv
16.293 289.789 16.328 289.781 16.375 289.77 cv
16.414 289.762 16.465 289.754 16.52 289.75 cv
16.574 289.75 16.641 289.75 16.727 289.746 cv
16.832 289.75 16.926 289.754 17 289.762 cv
17.07 289.77 17.125 289.785 17.172 289.801 cv
17.211 289.82 17.238 289.84 17.254 289.863 cv
17.262 289.891 17.27 289.914 17.273 289.937 cv
17.273 297.734 li
18.879 297.734 li
18.914 297.738 18.949 297.746 18.98 297.766 cv
19.012 297.789 19.035 297.82 19.059 297.855 cv
19.074 297.895 19.09 297.941 19.105 298 cv
19.113 298.062 19.121 298.137 19.125 298.215 cv
cp
f
5.68 264.93 mo
19.871 264.93 li
19.871 282.02 li
5.68 282.02 li
cp
0 0 0 0 cmyk
ef
12.047 277.836 mo
12.043 277.926 12.035 277.996 12.023 278.055 cv
12.008 278.117 11.988 278.168 11.969 278.199 cv
11.945 278.238 11.922 278.262 11.891 278.277 cv
11.859 278.293 11.828 278.301 11.801 278.301 cv
7.164 278.301 li
7.129 278.301 7.102 278.293 7.074 278.277 cv
7.047 278.262 7.02 278.238 6.996 278.199 cv
6.969 278.168 6.949 278.117 6.938 278.055 cv
6.922 277.996 6.914 277.926 6.918 277.836 cv
6.914 277.758 6.922 277.684 6.938 277.621 cv
6.949 277.562 6.965 277.516 6.988 277.477 cv
7.004 277.441 7.031 277.41 7.063 277.387 cv
7.094 277.367 7.125 277.359 7.164 277.355 cv
9.016 277.355 li
9.016 270.609 li
7.301 271.629 li
7.211 271.68 7.141 271.707 7.094 271.715 cv
7.039 271.723 6.996 271.715 6.965 271.684 cv
6.93 271.656 6.91 271.605 6.898 271.535 cv
6.887 271.469 6.879 271.383 6.883 271.273 cv
6.879 271.199 6.883 271.133 6.895 271.074 cv
6.898 271.023 6.91 270.977 6.926 270.937 cv
6.938 270.902 6.957 270.871 6.98 270.844 cv
7.004 270.816 7.035 270.789 7.082 270.762 cv
9.125 269.449 li
9.141 269.437 9.16 269.426 9.191 269.418 cv
9.215 269.41 9.25 269.402 9.297 269.391 cv
9.336 269.383 9.387 269.375 9.441 269.371 cv
9.496 269.371 9.563 269.371 9.648 269.367 cv
9.754 269.371 9.848 269.375 9.922 269.383 cv
9.992 269.391 10.047 269.406 10.094 269.422 cv
10.133 269.441 10.16 269.461 10.176 269.484 cv
10.184 269.512 10.191 269.535 10.195 269.559 cv
10.195 277.355 li
11.801 277.355 li
11.836 277.359 11.871 277.367 11.902 277.387 cv
11.934 277.41 11.957 277.441 11.98 277.477 cv
11.996 277.516 12.012 277.562 12.027 277.621 cv
12.035 277.684 12.043 277.758 12.047 277.836 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.105 277.793 mo
19.102 277.879 19.098 277.953 19.086 278.016 cv
19.074 278.082 19.059 278.137 19.039 278.176 cv
19.016 278.223 18.988 278.254 18.957 278.27 cv
18.922 278.293 18.883 278.301 18.844 278.301 cv
13.941 278.301 li
13.879 278.301 13.82 278.293 13.773 278.277 cv
13.723 278.262 13.684 278.238 13.648 278.199 cv
13.613 278.168 13.586 278.113 13.574 278.043 cv
13.555 277.973 13.547 277.887 13.551 277.785 cv
13.547 277.695 13.551 277.617 13.559 277.547 cv
13.563 277.48 13.578 277.422 13.605 277.367 cv
13.629 277.316 13.66 277.262 13.695 277.207 cv
13.73 277.156 13.773 277.102 13.832 277.039 cv
15.605 275.215 li
16.016 274.797 16.344 274.422 16.594 274.086 cv
16.84 273.758 17.031 273.453 17.164 273.176 cv
17.297 272.902 17.383 272.652 17.43 272.426 cv
17.469 272.203 17.492 271.992 17.492 271.797 cv
17.492 271.602 17.457 271.418 17.391 271.238 cv
17.324 271.066 17.23 270.91 17.105 270.773 cv
16.98 270.645 16.824 270.539 16.637 270.457 cv
16.449 270.383 16.23 270.344 15.984 270.34 cv
15.695 270.344 15.438 270.383 15.211 270.457 cv
14.98 270.539 14.781 270.625 14.609 270.711 cv
14.438 270.805 14.293 270.887 14.176 270.965 cv
14.059 271.043 13.973 271.082 13.922 271.082 cv
13.887 271.082 13.855 271.074 13.832 271.055 cv
13.801 271.039 13.781 271.008 13.766 270.965 cv
13.75 270.926 13.734 270.871 13.727 270.801 cv
13.715 270.734 13.711 270.652 13.715 270.555 cv
13.711 270.488 13.715 270.43 13.723 270.379 cv
13.727 270.328 13.734 270.285 13.746 270.246 cv
13.754 270.211 13.77 270.176 13.789 270.145 cv
13.809 270.113 13.844 270.074 13.902 270.023 cv
13.953 269.977 14.047 269.91 14.184 269.828 cv
14.316 269.746 14.488 269.668 14.691 269.586 cv
14.895 269.508 15.117 269.437 15.363 269.383 cv
15.605 269.328 15.863 269.301 16.137 269.301 cv
16.563 269.301 16.938 269.363 17.262 269.484 cv
17.582 269.605 17.848 269.77 18.063 269.98 cv
18.273 270.191 18.434 270.437 18.539 270.711 cv
18.645 270.992 18.699 271.289 18.699 271.602 cv
18.699 271.891 18.672 272.172 18.621 272.449 cv
18.57 272.734 18.465 273.039 18.305 273.363 cv
18.141 273.691 17.906 274.055 17.602 274.453 cv
17.293 274.855 16.887 275.316 16.383 275.832 cv
14.977 277.301 li
18.836 277.301 li
18.867 277.305 18.902 277.316 18.941 277.332 cv
18.973 277.355 19.004 277.387 19.031 277.426 cv
19.055 277.469 19.074 277.52 19.086 277.578 cv
19.098 277.645 19.102 277.715 19.105 277.793 cv
cp
f
5.68 244.551 mo
19.871 244.551 li
19.871 261.641 li
5.68 261.641 li
cp
0 0 0 0 cmyk
ef
12.047 257.465 mo
12.043 257.555 12.035 257.625 12.023 257.684 cv
12.008 257.746 11.988 257.797 11.969 257.828 cv
11.945 257.867 11.922 257.891 11.891 257.906 cv
11.859 257.922 11.828 257.93 11.801 257.93 cv
7.164 257.93 li
7.129 257.93 7.102 257.922 7.074 257.906 cv
7.047 257.891 7.02 257.867 6.996 257.828 cv
6.969 257.797 6.949 257.746 6.938 257.684 cv
6.922 257.625 6.914 257.555 6.918 257.465 cv
6.914 257.387 6.922 257.312 6.938 257.25 cv
6.949 257.191 6.965 257.145 6.988 257.105 cv
7.004 257.07 7.031 257.039 7.063 257.016 cv
7.094 256.996 7.125 256.988 7.164 256.984 cv
9.016 256.984 li
9.016 250.238 li
7.301 251.258 li
7.211 251.309 7.141 251.336 7.094 251.344 cv
7.039 251.352 6.996 251.344 6.965 251.312 cv
6.93 251.285 6.91 251.234 6.898 251.164 cv
6.887 251.098 6.879 251.012 6.883 250.902 cv
6.879 250.828 6.883 250.762 6.895 250.703 cv
6.898 250.652 6.91 250.605 6.926 250.566 cv
6.938 250.531 6.957 250.5 6.98 250.473 cv
7.004 250.445 7.035 250.418 7.082 250.391 cv
9.125 249.078 li
9.141 249.066 9.16 249.055 9.191 249.047 cv
9.215 249.039 9.25 249.031 9.297 249.02 cv
9.336 249.012 9.387 249.004 9.441 249 cv
9.496 249 9.563 249 9.648 248.996 cv
9.754 249 9.848 249.004 9.922 249.012 cv
9.992 249.02 10.047 249.035 10.094 249.051 cv
10.133 249.07 10.16 249.09 10.176 249.113 cv
10.184 249.141 10.191 249.164 10.195 249.187 cv
10.195 256.984 li
11.801 256.984 li
11.836 256.988 11.871 256.996 11.902 257.016 cv
11.934 257.039 11.957 257.07 11.98 257.105 cv
11.996 257.145 12.012 257.191 12.027 257.25 cv
12.035 257.312 12.043 257.387 12.047 257.465 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.035 255.395 mo
19.031 255.805 18.961 256.172 18.82 256.496 cv
18.676 256.824 18.473 257.105 18.211 257.336 cv
17.945 257.57 17.617 257.746 17.23 257.871 cv
16.84 257.996 16.402 258.059 15.918 258.059 cv
15.613 258.059 15.336 258.031 15.082 257.984 cv
14.82 257.937 14.59 257.887 14.395 257.816 cv
14.191 257.754 14.027 257.684 13.895 257.613 cv
13.762 257.543 13.676 257.492 13.645 257.457 cv
13.605 257.43 13.582 257.398 13.566 257.363 cv
13.547 257.332 13.527 257.293 13.516 257.246 cv
13.5 257.203 13.492 257.148 13.484 257.078 cv
13.477 257.016 13.473 256.934 13.477 256.832 cv
13.473 256.672 13.488 256.559 13.523 256.492 cv
13.555 256.43 13.602 256.395 13.664 256.395 cv
13.707 256.395 13.789 256.434 13.914 256.504 cv
14.035 256.582 14.195 256.66 14.391 256.742 cv
14.582 256.828 14.809 256.906 15.074 256.977 cv
15.332 257.051 15.625 257.086 15.945 257.086 cv
16.254 257.086 16.523 257.047 16.762 256.969 cv
16.992 256.891 17.191 256.781 17.352 256.641 cv
17.508 256.5 17.625 256.332 17.707 256.137 cv
17.785 255.941 17.824 255.73 17.828 255.504 cv
17.824 255.254 17.773 255.027 17.676 254.824 cv
17.57 254.625 17.422 254.453 17.23 254.305 cv
17.031 254.16 16.793 254.047 16.508 253.969 cv
16.223 253.891 15.898 253.852 15.535 253.852 cv
14.664 253.852 li
14.621 253.852 14.586 253.844 14.551 253.828 cv
14.516 253.812 14.484 253.785 14.461 253.746 cv
14.434 253.711 14.414 253.664 14.398 253.605 cv
14.383 253.547 14.375 253.469 14.375 253.371 cv
14.375 253.285 14.379 253.215 14.395 253.156 cv
14.402 253.102 14.422 253.055 14.453 253.02 cv
14.477 252.984 14.508 252.961 14.539 252.941 cv
14.57 252.93 14.605 252.922 14.648 252.918 cv
15.422 252.918 li
15.723 252.922 15.992 252.883 16.234 252.801 cv
16.469 252.727 16.672 252.613 16.844 252.465 cv
17.008 252.32 17.137 252.145 17.227 251.941 cv
17.316 251.738 17.363 251.512 17.363 251.258 cv
17.363 251.078 17.332 250.902 17.273 250.734 cv
17.211 250.57 17.121 250.426 17.004 250.301 cv
16.883 250.176 16.73 250.078 16.551 250.008 cv
16.363 249.937 16.152 249.902 15.91 249.902 cv
15.645 249.902 15.398 249.945 15.18 250.023 cv
14.953 250.105 14.758 250.191 14.586 250.281 cv
14.41 250.375 14.266 250.461 14.152 250.539 cv
14.039 250.621 13.957 250.66 13.914 250.656 cv
13.879 250.66 13.852 250.652 13.828 250.641 cv
13.801 250.629 13.781 250.605 13.766 250.57 cv
13.75 250.539 13.738 250.492 13.73 250.426 cv
13.723 250.367 13.719 250.285 13.723 250.184 cv
13.719 250.117 13.719 250.059 13.727 250.004 cv
13.727 249.953 13.738 249.906 13.754 249.863 cv
13.77 249.828 13.785 249.793 13.805 249.758 cv
13.82 249.73 13.852 249.691 13.895 249.645 cv
13.938 249.602 14.023 249.539 14.16 249.457 cv
14.289 249.375 14.453 249.297 14.648 249.215 cv
14.84 249.137 15.063 249.066 15.32 249.012 cv
15.57 248.957 15.844 248.93 16.141 248.93 cv
16.547 248.93 16.91 248.984 17.223 249.086 cv
17.535 249.195 17.793 249.344 18.004 249.531 cv
18.207 249.727 18.363 249.957 18.469 250.223 cv
18.57 250.492 18.621 250.785 18.625 251.109 cv
18.621 251.391 18.586 251.652 18.516 251.887 cv
18.441 252.129 18.332 252.34 18.191 252.523 cv
18.047 252.711 17.875 252.867 17.672 252.996 cv
17.465 253.129 17.227 253.223 16.957 253.27 cv
16.957 253.281 li
17.262 253.316 17.543 253.391 17.797 253.512 cv
18.051 253.633 18.27 253.785 18.453 253.969 cv
18.633 254.152 18.773 254.367 18.879 254.609 cv
18.98 254.855 19.031 255.117 19.035 255.395 cv
cp
f
5.68 224.172 mo
19.871 224.172 li
19.871 241.262 li
5.68 241.262 li
cp
0 0 0 0 cmyk
ef
12.059 237.082 mo
12.055 237.172 12.047 237.246 12.035 237.305 cv
12.02 237.367 12 237.418 11.98 237.449 cv
11.957 237.488 11.934 237.512 11.902 237.527 cv
11.871 237.543 11.84 237.551 11.809 237.551 cv
7.168 237.551 li
7.137 237.551 7.105 237.543 7.078 237.527 cv
7.051 237.512 7.023 237.488 7 237.449 cv
6.969 237.418 6.949 237.367 6.941 237.305 cv
6.926 237.246 6.922 237.172 6.922 237.082 cv
6.922 237.004 6.926 236.934 6.941 236.871 cv
6.949 236.812 6.969 236.766 6.992 236.723 cv
7.012 236.687 7.035 236.656 7.066 236.633 cv
7.094 236.613 7.129 236.602 7.168 236.602 cv
9.023 236.602 li
9.023 229.848 li
7.305 230.867 li
7.215 230.918 7.145 230.945 7.094 230.953 cv
7.039 230.961 7 230.953 6.969 230.922 cv
6.938 230.895 6.914 230.844 6.902 230.773 cv
6.891 230.707 6.887 230.621 6.887 230.512 cv
6.887 230.437 6.887 230.371 6.895 230.312 cv
6.898 230.262 6.91 230.215 6.926 230.176 cv
6.938 230.141 6.957 230.109 6.984 230.082 cv
7.008 230.055 7.043 230.027 7.086 229.996 cv
9.133 228.684 li
9.148 228.676 9.172 228.664 9.199 228.652 cv
9.227 228.645 9.262 228.637 9.305 228.625 cv
9.344 228.617 9.391 228.609 9.449 228.605 cv
9.5 228.605 9.57 228.605 9.652 228.602 cv
9.762 228.605 9.852 228.609 9.93 228.617 cv
10 228.629 10.059 228.641 10.098 228.656 cv
10.137 228.672 10.164 228.695 10.18 228.719 cv
10.195 228.746 10.203 228.77 10.203 228.797 cv
10.203 236.602 li
11.809 236.602 li
11.844 236.602 11.875 236.613 11.91 236.633 cv
11.941 236.656 11.969 236.687 11.992 236.723 cv
12.008 236.766 12.023 236.812 12.039 236.871 cv
12.047 236.934 12.055 237.004 12.059 237.082 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.492 235.023 mo
19.488 235.18 19.465 235.297 19.422 235.383 cv
19.375 235.469 19.313 235.512 19.23 235.512 cv
18.23 235.512 li
18.23 237.379 li
18.23 237.418 18.219 237.449 18.199 237.473 cv
18.18 237.5 18.148 237.52 18.102 237.539 cv
18.055 237.555 17.992 237.566 17.918 237.578 cv
17.84 237.586 17.742 237.59 17.629 237.594 cv
17.512 237.59 17.418 237.586 17.344 237.578 cv
17.266 237.566 17.207 237.555 17.164 237.539 cv
17.117 237.52 17.086 237.5 17.07 237.473 cv
17.055 237.449 17.047 237.418 17.047 237.379 cv
17.047 235.512 li
13.414 235.512 li
13.359 235.512 13.313 235.508 13.277 235.492 cv
13.238 235.48 13.203 235.453 13.176 235.414 cv
13.145 235.379 13.125 235.328 13.113 235.258 cv
13.102 235.191 13.098 235.102 13.098 234.988 cv
13.098 234.906 13.098 234.828 13.105 234.758 cv
13.105 234.691 13.117 234.629 13.133 234.566 cv
13.145 234.512 13.16 234.457 13.188 234.402 cv
13.207 234.355 13.234 234.297 13.27 234.234 cv
16.438 228.836 li
16.461 228.805 16.492 228.773 16.539 228.742 cv
16.578 228.719 16.637 228.695 16.711 228.672 cv
16.777 228.656 16.863 228.645 16.969 228.637 cv
17.066 228.633 17.188 228.629 17.332 228.625 cv
17.484 228.629 17.617 228.633 17.734 228.641 cv
17.844 228.652 17.938 228.668 18.012 228.684 cv
18.078 228.707 18.133 228.73 18.172 228.758 cv
18.211 228.789 18.23 228.824 18.23 228.863 cv
18.23 234.535 li
19.23 234.535 li
19.305 234.539 19.367 234.578 19.418 234.656 cv
19.465 234.738 19.488 234.863 19.492 235.023 cv
cp
17.047 229.66 mo
17.035 229.66 li
14.176 234.535 li
17.047 234.535 li
cp
f
5.68 203.789 mo
19.871 203.789 li
19.871 220.879 li
5.68 220.879 li
cp
0 0 0 0 cmyk
ef
12.047 216.684 mo
12.043 216.773 12.035 216.844 12.023 216.902 cv
12.008 216.965 11.988 217.016 11.969 217.047 cv
11.945 217.086 11.922 217.109 11.891 217.125 cv
11.859 217.141 11.828 217.148 11.801 217.148 cv
7.164 217.148 li
7.129 217.148 7.102 217.141 7.074 217.125 cv
7.047 217.109 7.02 217.086 6.996 217.047 cv
6.969 217.016 6.949 216.965 6.938 216.902 cv
6.922 216.844 6.914 216.773 6.918 216.684 cv
6.914 216.605 6.922 216.531 6.938 216.469 cv
6.949 216.41 6.965 216.363 6.988 216.324 cv
7.004 216.289 7.031 216.258 7.063 216.234 cv
7.094 216.215 7.125 216.207 7.164 216.203 cv
9.016 216.203 li
9.016 209.457 li
7.301 210.477 li
7.211 210.527 7.141 210.555 7.094 210.562 cv
7.039 210.57 6.996 210.562 6.965 210.531 cv
6.93 210.504 6.91 210.453 6.898 210.383 cv
6.887 210.316 6.879 210.23 6.883 210.121 cv
6.879 210.047 6.883 209.98 6.895 209.922 cv
6.898 209.871 6.91 209.824 6.926 209.785 cv
6.938 209.75 6.957 209.719 6.98 209.691 cv
7.004 209.664 7.035 209.637 7.082 209.609 cv
9.125 208.297 li
9.141 208.285 9.16 208.273 9.191 208.266 cv
9.215 208.258 9.25 208.25 9.297 208.238 cv
9.336 208.23 9.387 208.223 9.441 208.219 cv
9.496 208.219 9.563 208.219 9.648 208.215 cv
9.754 208.219 9.848 208.223 9.922 208.23 cv
9.992 208.238 10.047 208.254 10.094 208.27 cv
10.133 208.289 10.16 208.309 10.176 208.332 cv
10.184 208.359 10.191 208.383 10.195 208.406 cv
10.195 216.203 li
11.801 216.203 li
11.836 216.207 11.871 216.215 11.902 216.234 cv
11.934 216.258 11.957 216.289 11.98 216.324 cv
11.996 216.363 12.012 216.41 12.027 216.469 cv
12.035 216.531 12.043 216.605 12.047 216.684 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.063 214.297 mo
19.063 214.773 18.98 215.195 18.82 215.566 cv
18.66 215.937 18.434 216.25 18.145 216.504 cv
17.848 216.758 17.5 216.953 17.098 217.082 cv
16.691 217.215 16.242 217.277 15.75 217.277 cv
15.473 217.277 15.211 217.258 14.969 217.219 cv
14.719 217.18 14.5 217.133 14.313 217.078 cv
14.117 217.023 13.961 216.969 13.836 216.91 cv
13.711 216.859 13.633 216.816 13.602 216.781 cv
13.566 216.75 13.543 216.719 13.531 216.691 cv
13.516 216.664 13.5 216.633 13.492 216.59 cv
13.477 216.555 13.469 216.504 13.469 216.441 cv
13.461 216.383 13.461 216.312 13.461 216.23 cv
13.461 216.156 13.465 216.086 13.473 216.023 cv
13.48 215.961 13.492 215.91 13.512 215.871 cv
13.527 215.832 13.547 215.805 13.574 215.785 cv
13.598 215.77 13.629 215.762 13.66 215.758 cv
13.707 215.762 13.777 215.789 13.871 215.844 cv
13.965 215.902 14.094 215.965 14.258 216.031 cv
14.422 216.098 14.621 216.16 14.863 216.219 cv
15.098 216.277 15.383 216.305 15.719 216.305 cv
16.02 216.305 16.301 216.27 16.559 216.195 cv
16.813 216.125 17.035 216.012 17.223 215.855 cv
17.406 215.703 17.551 215.508 17.656 215.27 cv
17.762 215.035 17.813 214.746 17.816 214.406 cv
17.813 214.125 17.77 213.875 17.68 213.656 cv
17.59 213.437 17.453 213.258 17.27 213.113 cv
17.082 212.973 16.848 212.867 16.566 212.793 cv
16.281 212.723 15.941 212.684 15.555 212.684 cv
15.27 212.684 15.031 212.699 14.832 212.727 cv
14.629 212.758 14.441 212.773 14.27 212.77 cv
14.141 212.773 14.047 212.742 13.996 212.68 cv
13.938 212.621 13.91 212.508 13.914 212.336 cv
13.914 208.723 li
13.91 208.574 13.945 208.465 14.02 208.387 cv
14.086 208.316 14.188 208.277 14.324 208.277 cv
18.254 208.277 li
18.289 208.277 18.324 208.289 18.359 208.309 cv
18.391 208.332 18.418 208.363 18.445 208.402 cv
18.465 208.445 18.48 208.496 18.496 208.559 cv
18.504 208.625 18.512 208.703 18.516 208.785 cv
18.512 208.953 18.488 209.078 18.449 209.168 cv
18.402 209.262 18.344 209.309 18.266 209.305 cv
15.094 209.305 li
15.094 211.793 li
15.246 211.773 15.402 211.762 15.566 211.754 cv
15.723 211.75 15.91 211.746 16.125 211.746 cv
16.609 211.746 17.035 211.809 17.402 211.93 cv
17.766 212.051 18.07 212.223 18.32 212.441 cv
18.563 212.668 18.75 212.934 18.875 213.246 cv
19 213.562 19.063 213.914 19.063 214.297 cv
cp
f
5.68 183.41 mo
19.871 183.41 li
19.871 200.5 li
5.68 200.5 li
cp
0 0 0 0 cmyk
ef
12.047 196.316 mo
12.043 196.406 12.035 196.477 12.023 196.535 cv
12.008 196.598 11.988 196.648 11.969 196.68 cv
11.945 196.719 11.922 196.742 11.891 196.758 cv
11.859 196.773 11.828 196.781 11.801 196.781 cv
7.164 196.781 li
7.129 196.781 7.102 196.773 7.074 196.758 cv
7.047 196.742 7.02 196.719 6.996 196.68 cv
6.969 196.648 6.949 196.598 6.938 196.535 cv
6.922 196.477 6.914 196.406 6.918 196.316 cv
6.914 196.238 6.922 196.164 6.938 196.102 cv
6.949 196.043 6.965 195.996 6.988 195.957 cv
7.004 195.922 7.031 195.891 7.063 195.867 cv
7.094 195.848 7.125 195.84 7.164 195.836 cv
9.016 195.836 li
9.016 189.09 li
7.301 190.109 li
7.211 190.16 7.141 190.187 7.094 190.195 cv
7.039 190.203 6.996 190.195 6.965 190.164 cv
6.93 190.137 6.91 190.086 6.898 190.016 cv
6.887 189.949 6.879 189.863 6.883 189.754 cv
6.879 189.68 6.883 189.613 6.895 189.555 cv
6.898 189.504 6.91 189.457 6.926 189.418 cv
6.938 189.383 6.957 189.352 6.98 189.324 cv
7.004 189.297 7.035 189.27 7.082 189.242 cv
9.125 187.93 li
9.141 187.918 9.16 187.906 9.191 187.898 cv
9.215 187.891 9.25 187.883 9.297 187.871 cv
9.336 187.863 9.387 187.855 9.441 187.852 cv
9.496 187.852 9.563 187.852 9.648 187.848 cv
9.754 187.852 9.848 187.855 9.922 187.863 cv
9.992 187.871 10.047 187.887 10.094 187.902 cv
10.133 187.922 10.16 187.941 10.176 187.965 cv
10.184 187.992 10.191 188.016 10.195 188.039 cv
10.195 195.836 li
11.801 195.836 li
11.836 195.84 11.871 195.848 11.902 195.867 cv
11.934 195.891 11.957 195.922 11.98 195.957 cv
11.996 195.996 12.012 196.043 12.027 196.102 cv
12.035 196.164 12.043 196.238 12.047 196.316 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.332 193.91 mo
19.332 194.301 19.27 194.68 19.152 195.039 cv
19.027 195.406 18.844 195.723 18.602 195.996 cv
18.352 196.273 18.039 196.496 17.664 196.66 cv
17.281 196.828 16.836 196.91 16.32 196.91 cv
15.949 196.91 15.621 196.867 15.34 196.773 cv
15.055 196.687 14.809 196.555 14.598 196.383 cv
14.387 196.215 14.211 196.008 14.074 195.762 cv
13.934 195.516 13.82 195.234 13.738 194.918 cv
13.652 194.605 13.594 194.262 13.559 193.883 cv
13.52 193.512 13.5 193.109 13.504 192.676 cv
13.5 192.297 13.52 191.914 13.563 191.523 cv
13.602 191.141 13.676 190.766 13.781 190.398 cv
13.887 190.039 14.031 189.699 14.211 189.383 cv
14.391 189.066 14.617 188.789 14.891 188.555 cv
15.164 188.32 15.488 188.133 15.867 187.992 cv
16.246 187.855 16.688 187.789 17.191 187.785 cv
17.359 187.789 17.531 187.797 17.703 187.816 cv
17.875 187.84 18.035 187.871 18.184 187.902 cv
18.332 187.941 18.453 187.977 18.555 188.016 cv
18.652 188.055 18.719 188.09 18.754 188.113 cv
18.781 188.141 18.805 188.168 18.824 188.195 cv
18.84 188.227 18.855 188.258 18.863 188.293 cv
18.871 188.328 18.875 188.367 18.883 188.41 cv
18.883 188.453 18.887 188.508 18.891 188.57 cv
18.887 188.656 18.887 188.727 18.887 188.781 cv
18.883 188.844 18.871 188.891 18.859 188.926 cv
18.84 188.965 18.82 188.992 18.797 189.008 cv
18.77 189.027 18.738 189.035 18.699 189.035 cv
18.648 189.035 18.578 189.02 18.492 188.988 cv
18.402 188.957 18.297 188.922 18.176 188.879 cv
18.051 188.844 17.902 188.809 17.727 188.773 cv
17.551 188.746 17.348 188.73 17.117 188.727 cv
16.688 188.73 16.32 188.816 16.016 188.988 cv
15.711 189.16 15.461 189.395 15.266 189.687 cv
15.07 189.98 14.926 190.32 14.836 190.703 cv
14.738 191.094 14.684 191.496 14.676 191.914 cv
14.793 191.848 14.93 191.781 15.078 191.711 cv
15.227 191.645 15.387 191.582 15.563 191.523 cv
15.738 191.473 15.926 191.426 16.121 191.391 cv
16.316 191.359 16.527 191.344 16.754 191.34 cv
17.23 191.344 17.633 191.41 17.965 191.535 cv
18.293 191.668 18.559 191.848 18.766 192.078 cv
18.965 192.309 19.109 192.578 19.199 192.891 cv
19.285 193.203 19.332 193.543 19.332 193.91 cv
cp
18.137 194.02 mo
18.137 193.758 18.109 193.516 18.059 193.297 cv
18.004 193.082 17.914 192.898 17.793 192.742 cv
17.668 192.594 17.504 192.477 17.301 192.395 cv
17.09 192.312 16.836 192.27 16.539 192.27 cv
16.367 192.27 16.199 192.285 16.031 192.316 cv
15.859 192.348 15.695 192.391 15.539 192.437 cv
15.379 192.492 15.23 192.555 15.09 192.625 cv
14.945 192.699 14.813 192.773 14.695 192.852 cv
14.691 193.445 14.73 193.941 14.809 194.336 cv
14.883 194.734 14.992 195.051 15.137 195.289 cv
15.281 195.531 15.461 195.703 15.676 195.805 cv
15.891 195.91 16.141 195.961 16.43 195.957 cv
16.719 195.961 16.973 195.906 17.188 195.793 cv
17.402 195.687 17.578 195.539 17.723 195.352 cv
17.863 195.168 17.969 194.961 18.035 194.73 cv
18.102 194.5 18.137 194.266 18.137 194.02 cv
cp
f
5.68 163.031 mo
19.871 163.031 li
19.871 180.121 li
5.68 180.121 li
cp
0 0 0 0 cmyk
ef
12.047 175.934 mo
12.043 176.023 12.035 176.094 12.023 176.152 cv
12.008 176.215 11.988 176.266 11.969 176.297 cv
11.945 176.336 11.922 176.359 11.891 176.375 cv
11.859 176.391 11.828 176.398 11.801 176.398 cv
7.164 176.398 li
7.129 176.398 7.102 176.391 7.074 176.375 cv
7.047 176.359 7.02 176.336 6.996 176.297 cv
6.969 176.266 6.949 176.215 6.938 176.152 cv
6.922 176.094 6.914 176.023 6.918 175.934 cv
6.914 175.855 6.922 175.781 6.938 175.719 cv
6.949 175.66 6.965 175.613 6.988 175.574 cv
7.004 175.539 7.031 175.508 7.063 175.484 cv
7.094 175.465 7.125 175.457 7.164 175.453 cv
9.016 175.453 li
9.016 168.707 li
7.301 169.727 li
7.211 169.777 7.141 169.805 7.094 169.812 cv
7.039 169.82 6.996 169.812 6.965 169.781 cv
6.93 169.754 6.91 169.703 6.898 169.633 cv
6.887 169.566 6.879 169.48 6.883 169.371 cv
6.879 169.297 6.883 169.23 6.895 169.172 cv
6.898 169.121 6.91 169.074 6.926 169.035 cv
6.938 169 6.957 168.969 6.98 168.941 cv
7.004 168.914 7.035 168.887 7.082 168.859 cv
9.125 167.547 li
9.141 167.535 9.16 167.523 9.191 167.516 cv
9.215 167.508 9.25 167.5 9.297 167.488 cv
9.336 167.48 9.387 167.473 9.441 167.469 cv
9.496 167.469 9.563 167.469 9.648 167.465 cv
9.754 167.469 9.848 167.473 9.922 167.48 cv
9.992 167.488 10.047 167.504 10.094 167.52 cv
10.133 167.539 10.16 167.559 10.176 167.582 cv
10.184 167.609 10.191 167.633 10.195 167.656 cv
10.195 175.453 li
11.801 175.453 li
11.836 175.457 11.871 175.465 11.902 175.484 cv
11.934 175.508 11.957 175.539 11.98 175.574 cv
11.996 175.613 12.012 175.66 12.027 175.719 cv
12.035 175.781 12.043 175.855 12.047 175.934 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.234 168.035 mo
19.23 168.121 19.227 168.195 19.223 168.258 cv
19.215 168.328 19.207 168.391 19.195 168.449 cv
19.184 168.516 19.168 168.574 19.148 168.629 cv
19.125 168.687 19.102 168.75 19.078 168.809 cv
15.883 176.172 li
15.855 176.23 15.828 176.273 15.797 176.305 cv
15.762 176.34 15.719 176.367 15.664 176.387 cv
15.609 176.406 15.539 176.418 15.461 176.43 cv
15.375 176.434 15.277 176.437 15.16 176.441 cv
15.004 176.437 14.883 176.43 14.797 176.418 cv
14.711 176.402 14.648 176.387 14.609 176.355 cv
14.57 176.328 14.551 176.289 14.559 176.246 cv
14.559 176.203 14.574 176.152 14.605 176.09 cv
17.965 168.562 li
13.707 168.562 li
13.621 168.566 13.555 168.52 13.512 168.426 cv
13.469 168.336 13.449 168.207 13.449 168.043 cv
13.449 167.957 13.453 167.883 13.465 167.816 cv
13.477 167.754 13.492 167.699 13.516 167.656 cv
13.535 167.613 13.563 167.582 13.598 167.559 cv
13.629 167.539 13.668 167.527 13.707 167.527 cv
18.879 167.527 li
18.938 167.527 18.992 167.535 19.043 167.551 cv
19.09 167.566 19.125 167.594 19.152 167.633 cv
19.176 167.672 19.195 167.727 19.211 167.789 cv
19.223 167.855 19.23 167.937 19.234 168.035 cv
cp
f
5.68 142.648 mo
19.871 142.648 li
19.871 159.738 li
5.68 159.738 li
cp
0 0 0 0 cmyk
ef
12.047 155.535 mo
12.043 155.625 12.035 155.695 12.023 155.754 cv
12.008 155.816 11.988 155.867 11.969 155.898 cv
11.945 155.937 11.922 155.961 11.891 155.977 cv
11.859 155.992 11.828 156 11.801 156 cv
7.164 156 li
7.129 156 7.102 155.992 7.074 155.977 cv
7.047 155.961 7.02 155.937 6.996 155.898 cv
6.969 155.867 6.949 155.816 6.938 155.754 cv
6.922 155.695 6.914 155.625 6.918 155.535 cv
6.914 155.457 6.922 155.383 6.938 155.32 cv
6.949 155.262 6.965 155.215 6.988 155.176 cv
7.004 155.141 7.031 155.109 7.063 155.086 cv
7.094 155.066 7.125 155.059 7.164 155.055 cv
9.016 155.055 li
9.016 148.309 li
7.301 149.328 li
7.211 149.379 7.141 149.406 7.094 149.414 cv
7.039 149.422 6.996 149.414 6.965 149.383 cv
6.93 149.355 6.91 149.305 6.898 149.234 cv
6.887 149.168 6.879 149.082 6.883 148.973 cv
6.879 148.898 6.883 148.832 6.895 148.773 cv
6.898 148.723 6.91 148.676 6.926 148.637 cv
6.938 148.602 6.957 148.57 6.98 148.543 cv
7.004 148.516 7.035 148.488 7.082 148.461 cv
9.125 147.148 li
9.141 147.137 9.16 147.125 9.191 147.117 cv
9.215 147.109 9.25 147.102 9.297 147.09 cv
9.336 147.082 9.387 147.074 9.441 147.07 cv
9.496 147.07 9.563 147.07 9.648 147.066 cv
9.754 147.07 9.848 147.074 9.922 147.082 cv
9.992 147.09 10.047 147.105 10.094 147.121 cv
10.133 147.141 10.16 147.16 10.176 147.184 cv
10.184 147.211 10.191 147.234 10.195 147.258 cv
10.195 155.055 li
11.801 155.055 li
11.836 155.059 11.871 155.066 11.902 155.086 cv
11.934 155.109 11.957 155.141 11.98 155.176 cv
11.996 155.215 12.012 155.262 12.027 155.32 cv
12.035 155.383 12.043 155.457 12.047 155.535 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.309 153.723 mo
19.309 154.109 19.238 154.453 19.102 154.75 cv
18.965 155.055 18.77 155.305 18.512 155.508 cv
18.254 155.715 17.934 155.871 17.555 155.973 cv
17.172 156.078 16.738 156.129 16.254 156.129 cv
15.793 156.129 15.383 156.082 15.023 155.988 cv
14.66 155.895 14.355 155.754 14.105 155.562 cv
13.855 155.379 13.664 155.148 13.531 154.871 cv
13.398 154.598 13.332 154.285 13.332 153.93 cv
13.332 153.656 13.375 153.398 13.469 153.164 cv
13.555 152.93 13.688 152.715 13.863 152.52 cv
14.031 152.324 14.242 152.141 14.496 151.965 cv
14.746 151.797 15.031 151.633 15.348 151.477 cv
15.074 151.336 14.832 151.187 14.621 151.027 cv
14.41 150.871 14.23 150.699 14.086 150.512 cv
13.938 150.328 13.828 150.133 13.754 149.922 cv
13.676 149.715 13.637 149.484 13.641 149.234 cv
13.637 148.926 13.691 148.633 13.809 148.359 cv
13.918 148.09 14.09 147.855 14.316 147.652 cv
14.543 147.453 14.828 147.293 15.18 147.176 cv
15.523 147.059 15.934 147 16.402 147 cv
16.848 147 17.234 147.055 17.563 147.16 cv
17.891 147.27 18.16 147.414 18.371 147.598 cv
18.582 147.785 18.738 148.004 18.844 148.254 cv
18.941 148.504 18.992 148.773 18.996 149.062 cv
18.992 149.297 18.953 149.523 18.883 149.734 cv
18.805 149.953 18.695 150.156 18.547 150.344 cv
18.398 150.539 18.219 150.719 18.008 150.883 cv
17.797 151.055 17.555 151.211 17.281 151.352 cv
17.602 151.516 17.887 151.68 18.145 151.848 cv
18.395 152.016 18.609 152.195 18.785 152.391 cv
18.953 152.586 19.082 152.793 19.176 153.008 cv
19.262 153.227 19.309 153.465 19.309 153.723 cv
cp
17.828 149.172 mo
17.824 148.984 17.793 148.809 17.727 148.652 cv
17.66 148.496 17.563 148.363 17.438 148.254 cv
17.309 148.145 17.148 148.062 16.961 148.004 cv
16.766 147.949 16.551 147.922 16.313 147.918 cv
15.816 147.922 15.441 148.031 15.191 148.254 cv
14.934 148.48 14.809 148.789 14.813 149.172 cv
14.809 149.352 14.84 149.516 14.902 149.668 cv
14.965 149.824 15.059 149.969 15.191 150.105 cv
15.316 150.242 15.48 150.375 15.684 150.504 cv
15.879 150.637 16.117 150.773 16.395 150.914 cv
16.855 150.68 17.211 150.418 17.457 150.125 cv
17.703 149.84 17.824 149.523 17.828 149.172 cv
cp
18.117 153.848 mo
18.113 153.641 18.074 153.449 18 153.277 cv
17.918 153.109 17.801 152.949 17.645 152.797 cv
17.488 152.648 17.289 152.504 17.055 152.363 cv
16.816 152.227 16.547 152.082 16.238 151.93 cv
15.949 152.074 15.695 152.215 15.48 152.355 cv
15.262 152.496 15.082 152.645 14.945 152.793 cv
14.805 152.949 14.699 153.105 14.629 153.27 cv
14.555 153.437 14.52 153.621 14.523 153.82 cv
14.52 154.266 14.672 154.609 14.98 154.848 cv
15.281 155.094 15.734 155.215 16.34 155.211 cv
16.922 155.215 17.367 155.094 17.668 154.844 cv
17.965 154.602 18.113 154.27 18.117 153.848 cv
cp
f
5.68 122.27 mo
19.871 122.27 li
19.871 139.36 li
5.68 139.36 li
cp
0 0 0 0 cmyk
ef
12.047 135.156 mo
12.043 135.246 12.035 135.316 12.023 135.375 cv
12.008 135.437 11.988 135.488 11.969 135.52 cv
11.945 135.559 11.922 135.582 11.891 135.598 cv
11.859 135.613 11.828 135.621 11.801 135.621 cv
7.164 135.621 li
7.129 135.621 7.102 135.613 7.074 135.598 cv
7.047 135.582 7.02 135.559 6.996 135.52 cv
6.969 135.488 6.949 135.437 6.938 135.375 cv
6.922 135.316 6.914 135.246 6.918 135.156 cv
6.914 135.078 6.922 135.004 6.938 134.941 cv
6.949 134.883 6.965 134.836 6.988 134.797 cv
7.004 134.762 7.031 134.73 7.063 134.707 cv
7.094 134.687 7.125 134.68 7.164 134.676 cv
9.016 134.676 li
9.016 127.93 li
7.301 128.949 li
7.211 129 7.141 129.027 7.094 129.035 cv
7.039 129.043 6.996 129.035 6.965 129.004 cv
6.93 128.977 6.91 128.926 6.898 128.855 cv
6.887 128.789 6.879 128.703 6.883 128.594 cv
6.879 128.52 6.883 128.453 6.895 128.395 cv
6.898 128.344 6.91 128.297 6.926 128.258 cv
6.938 128.223 6.957 128.191 6.98 128.164 cv
7.004 128.137 7.035 128.109 7.082 128.082 cv
9.125 126.77 li
9.141 126.758 9.16 126.746 9.191 126.738 cv
9.215 126.73 9.25 126.723 9.297 126.711 cv
9.336 126.703 9.387 126.695 9.441 126.691 cv
9.496 126.691 9.563 126.691 9.648 126.687 cv
9.754 126.691 9.848 126.695 9.922 126.703 cv
9.992 126.711 10.047 126.727 10.094 126.742 cv
10.133 126.762 10.16 126.781 10.176 126.805 cv
10.184 126.832 10.191 126.855 10.195 126.879 cv
10.195 134.676 li
11.801 134.676 li
11.836 134.68 11.871 134.687 11.902 134.707 cv
11.934 134.73 11.957 134.762 11.98 134.797 cv
11.996 134.836 12.012 134.883 12.027 134.941 cv
12.035 135.004 12.043 135.078 12.047 135.156 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.172 130.836 mo
19.168 131.223 19.145 131.609 19.102 132 cv
19.055 132.395 18.977 132.773 18.871 133.137 cv
18.758 133.5 18.613 133.84 18.43 134.156 cv
18.242 134.477 18.008 134.758 17.73 134.992 cv
17.445 135.234 17.109 135.418 16.727 135.551 cv
16.336 135.684 15.891 135.75 15.383 135.75 cv
15.184 135.75 14.992 135.734 14.809 135.711 cv
14.621 135.684 14.453 135.656 14.309 135.621 cv
14.156 135.586 14.031 135.547 13.934 135.504 cv
13.832 135.465 13.758 135.426 13.715 135.383 cv
13.668 135.344 13.637 135.289 13.617 135.215 cv
13.594 135.145 13.582 135.047 13.586 134.93 cv
13.582 134.828 13.586 134.75 13.594 134.691 cv
13.598 134.633 13.609 134.586 13.625 134.555 cv
13.641 134.523 13.66 134.504 13.684 134.488 cv
13.707 134.48 13.738 134.473 13.777 134.469 cv
13.824 134.473 13.895 134.488 13.988 134.52 cv
14.078 134.555 14.191 134.594 14.336 134.633 cv
14.473 134.676 14.637 134.715 14.824 134.746 cv
15.008 134.785 15.219 134.801 15.457 134.797 cv
15.898 134.801 16.277 134.715 16.598 134.543 cv
16.91 134.371 17.172 134.145 17.375 133.855 cv
17.578 133.57 17.727 133.234 17.828 132.852 cv
17.926 132.473 17.98 132.074 17.992 131.652 cv
17.746 131.797 17.457 131.922 17.121 132.027 cv
16.781 132.141 16.395 132.195 15.957 132.191 cv
15.465 132.195 15.051 132.129 14.715 131.992 cv
14.379 131.859 14.105 131.676 13.902 131.441 cv
13.695 131.211 13.551 130.934 13.465 130.609 cv
13.375 130.293 13.332 129.941 13.332 129.562 cv
13.332 129.172 13.387 128.801 13.504 128.441 cv
13.613 128.09 13.793 127.777 14.039 127.508 cv
14.277 127.238 14.586 127.023 14.965 126.863 cv
15.336 126.703 15.785 126.621 16.309 126.621 cv
16.676 126.621 17 126.668 17.289 126.762 cv
17.57 126.855 17.82 126.992 18.035 127.168 cv
18.242 127.344 18.422 127.555 18.57 127.805 cv
18.715 128.055 18.832 128.336 18.922 128.648 cv
19.008 128.965 19.07 129.309 19.113 129.676 cv
19.148 130.047 19.168 130.434 19.172 130.836 cv
cp
17.973 130.707 mo
17.973 130.125 17.934 129.633 17.855 129.23 cv
17.777 128.832 17.66 128.508 17.512 128.258 cv
17.359 128.012 17.176 127.832 16.957 127.723 cv
16.734 127.613 16.48 127.559 16.199 127.559 cv
15.895 127.559 15.641 127.613 15.434 127.723 cv
15.223 127.832 15.051 127.977 14.918 128.152 cv
14.781 128.336 14.68 128.539 14.617 128.766 cv
14.551 128.996 14.52 129.234 14.523 129.473 cv
14.52 129.746 14.551 129.992 14.609 130.211 cv
14.664 130.437 14.754 130.625 14.887 130.781 cv
15.012 130.937 15.18 131.059 15.387 131.145 cv
15.59 131.23 15.844 131.273 16.148 131.27 cv
16.488 131.273 16.82 131.223 17.145 131.117 cv
17.461 131.016 17.738 130.879 17.973 130.707 cv
cp
f
5.68 101.891 mo
19.871 101.891 li
19.871 118.981 li
5.68 118.981 li
cp
0 0 0 0 cmyk
ef
12.027 114.742 mo
12.023 114.828 12.02 114.902 12.008 114.965 cv
11.996 115.031 11.98 115.086 11.961 115.125 cv
11.938 115.172 11.91 115.203 11.879 115.219 cv
11.844 115.242 11.805 115.25 11.766 115.25 cv
6.863 115.25 li
6.801 115.25 6.742 115.242 6.695 115.227 cv
6.645 115.211 6.605 115.187 6.57 115.148 cv
6.535 115.117 6.508 115.062 6.496 114.992 cv
6.477 114.922 6.469 114.836 6.473 114.734 cv
6.469 114.645 6.473 114.566 6.48 114.496 cv
6.484 114.43 6.5 114.371 6.527 114.316 cv
6.551 114.266 6.582 114.211 6.617 114.156 cv
6.652 114.105 6.695 114.051 6.754 113.988 cv
8.527 112.164 li
8.938 111.746 9.266 111.371 9.516 111.035 cv
9.762 110.707 9.953 110.402 10.086 110.125 cv
10.219 109.852 10.305 109.602 10.352 109.375 cv
10.391 109.152 10.414 108.941 10.414 108.746 cv
10.414 108.551 10.379 108.367 10.313 108.187 cv
10.246 108.016 10.152 107.859 10.027 107.723 cv
9.902 107.594 9.746 107.488 9.559 107.406 cv
9.371 107.332 9.152 107.293 8.906 107.289 cv
8.617 107.293 8.359 107.332 8.133 107.406 cv
7.902 107.488 7.703 107.574 7.531 107.66 cv
7.359 107.754 7.215 107.836 7.098 107.914 cv
6.98 107.992 6.895 108.031 6.844 108.031 cv
6.809 108.031 6.777 108.023 6.754 108.004 cv
6.723 107.988 6.703 107.957 6.688 107.914 cv
6.672 107.875 6.656 107.82 6.648 107.75 cv
6.637 107.684 6.633 107.602 6.637 107.504 cv
6.633 107.437 6.637 107.379 6.645 107.328 cv
6.648 107.277 6.656 107.234 6.668 107.195 cv
6.676 107.16 6.691 107.125 6.711 107.094 cv
6.73 107.062 6.766 107.023 6.824 106.973 cv
6.875 106.926 6.969 106.859 7.105 106.777 cv
7.238 106.695 7.41 106.617 7.613 106.535 cv
7.816 106.457 8.039 106.387 8.285 106.332 cv
8.527 106.277 8.785 106.25 9.059 106.25 cv
9.484 106.25 9.859 106.312 10.184 106.434 cv
10.504 106.555 10.77 106.719 10.984 106.93 cv
11.195 107.141 11.355 107.387 11.461 107.66 cv
11.566 107.941 11.621 108.238 11.621 108.551 cv
11.621 108.84 11.594 109.121 11.543 109.398 cv
11.492 109.684 11.387 109.988 11.227 110.312 cv
11.063 110.641 10.828 111.004 10.523 111.402 cv
10.215 111.805 9.809 112.266 9.305 112.781 cv
7.898 114.25 li
11.758 114.25 li
11.789 114.254 11.824 114.266 11.863 114.281 cv
11.895 114.305 11.926 114.336 11.953 114.375 cv
11.977 114.418 11.996 114.469 12.008 114.527 cv
12.02 114.594 12.023 114.664 12.027 114.742 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.398 110.793 mo
19.395 111.477 19.344 112.098 19.238 112.66 cv
19.129 113.223 18.949 113.707 18.703 114.109 cv
18.449 114.516 18.121 114.828 17.723 115.047 cv
17.316 115.27 16.824 115.379 16.238 115.379 cv
15.68 115.379 15.207 115.281 14.828 115.082 cv
14.445 114.887 14.141 114.594 13.906 114.207 cv
13.672 113.82 13.504 113.348 13.41 112.781 cv
13.309 112.219 13.262 111.57 13.262 110.836 cv
13.262 110.164 13.316 109.543 13.426 108.977 cv
13.535 108.414 13.711 107.93 13.961 107.523 cv
14.203 107.121 14.527 106.809 14.934 106.582 cv
15.332 106.363 15.828 106.25 16.418 106.25 cv
16.977 106.25 17.449 106.352 17.832 106.547 cv
18.215 106.75 18.52 107.043 18.754 107.426 cv
18.984 107.816 19.152 108.289 19.25 108.852 cv
19.348 109.414 19.395 110.062 19.398 110.793 cv
cp
18.191 110.875 mo
18.188 110.434 18.172 110.035 18.145 109.684 cv
18.109 109.332 18.063 109.023 18.004 108.754 cv
17.938 108.484 17.859 108.254 17.762 108.059 cv
17.664 107.867 17.547 107.707 17.41 107.578 cv
17.27 107.453 17.109 107.359 16.938 107.301 cv
16.758 107.246 16.563 107.219 16.348 107.215 cv
15.957 107.219 15.641 107.309 15.402 107.492 cv
15.156 107.676 14.965 107.93 14.828 108.246 cv
14.688 108.566 14.594 108.937 14.543 109.367 cv
14.492 109.797 14.469 110.262 14.469 110.754 cv
14.469 111.418 14.5 111.98 14.57 112.441 cv
14.637 112.91 14.746 113.289 14.898 113.578 cv
15.043 113.875 15.234 114.086 15.465 114.215 cv
15.695 114.352 15.977 114.418 16.309 114.414 cv
16.563 114.418 16.785 114.379 16.98 114.293 cv
17.172 114.215 17.34 114.094 17.48 113.937 cv
17.621 113.785 17.734 113.602 17.828 113.387 cv
17.914 113.172 17.988 112.934 18.047 112.672 cv
18.098 112.414 18.137 112.133 18.16 111.828 cv
18.18 111.523 18.188 111.207 18.191 110.875 cv
cp
f
5.68 81.512 mo
19.871 81.512 li
19.871 98.602 li
5.68 98.602 li
cp
0 0 0 0 cmyk
ef
12.027 94.344 mo
12.023 94.43 12.02 94.504 12.008 94.566 cv
11.996 94.633 11.98 94.687 11.961 94.727 cv
11.938 94.773 11.91 94.805 11.879 94.82 cv
11.844 94.844 11.805 94.852 11.766 94.852 cv
6.863 94.852 li
6.801 94.852 6.742 94.844 6.695 94.828 cv
6.645 94.812 6.605 94.789 6.57 94.75 cv
6.535 94.719 6.508 94.664 6.496 94.594 cv
6.477 94.523 6.469 94.437 6.473 94.336 cv
6.469 94.246 6.473 94.168 6.48 94.098 cv
6.484 94.031 6.5 93.973 6.527 93.918 cv
6.551 93.867 6.582 93.812 6.617 93.758 cv
6.652 93.707 6.695 93.652 6.754 93.59 cv
8.527 91.766 li
8.938 91.348 9.266 90.973 9.516 90.637 cv
9.762 90.309 9.953 90.004 10.086 89.727 cv
10.219 89.453 10.305 89.203 10.352 88.977 cv
10.391 88.754 10.414 88.543 10.414 88.348 cv
10.414 88.152 10.379 87.969 10.313 87.789 cv
10.246 87.617 10.152 87.461 10.027 87.324 cv
9.902 87.195 9.746 87.09 9.559 87.008 cv
9.371 86.934 9.152 86.895 8.906 86.891 cv
8.617 86.895 8.359 86.934 8.133 87.008 cv
7.902 87.09 7.703 87.176 7.531 87.262 cv
7.359 87.355 7.215 87.437 7.098 87.516 cv
6.98 87.594 6.895 87.633 6.844 87.633 cv
6.809 87.633 6.777 87.625 6.754 87.605 cv
6.723 87.59 6.703 87.559 6.688 87.516 cv
6.672 87.477 6.656 87.422 6.648 87.352 cv
6.637 87.285 6.633 87.203 6.637 87.105 cv
6.633 87.039 6.637 86.98 6.645 86.93 cv
6.648 86.879 6.656 86.836 6.668 86.797 cv
6.676 86.762 6.691 86.727 6.711 86.695 cv
6.73 86.664 6.766 86.625 6.824 86.574 cv
6.875 86.527 6.969 86.461 7.105 86.379 cv
7.238 86.297 7.41 86.219 7.613 86.137 cv
7.816 86.059 8.039 85.988 8.285 85.934 cv
8.527 85.879 8.785 85.852 9.059 85.852 cv
9.484 85.852 9.859 85.914 10.184 86.035 cv
10.504 86.156 10.77 86.32 10.984 86.531 cv
11.195 86.742 11.355 86.988 11.461 87.262 cv
11.566 87.543 11.621 87.84 11.621 88.152 cv
11.621 88.441 11.594 88.723 11.543 89 cv
11.492 89.285 11.387 89.59 11.227 89.914 cv
11.063 90.242 10.828 90.605 10.523 91.004 cv
10.215 91.406 9.809 91.867 9.305 92.383 cv
7.898 93.852 li
11.758 93.852 li
11.789 93.855 11.824 93.867 11.863 93.883 cv
11.895 93.906 11.926 93.937 11.953 93.977 cv
11.977 94.02 11.996 94.07 12.008 94.129 cv
12.02 94.195 12.023 94.266 12.027 94.344 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.125 94.387 mo
19.121 94.477 19.113 94.547 19.102 94.605 cv
19.086 94.668 19.066 94.719 19.047 94.75 cv
19.023 94.789 19 94.812 18.969 94.828 cv
18.938 94.844 18.906 94.852 18.879 94.852 cv
14.242 94.852 li
14.207 94.852 14.18 94.844 14.152 94.828 cv
14.125 94.812 14.098 94.789 14.074 94.75 cv
14.047 94.719 14.027 94.668 14.016 94.605 cv
14 94.547 13.992 94.477 13.996 94.387 cv
13.992 94.309 14 94.234 14.016 94.172 cv
14.027 94.113 14.043 94.066 14.066 94.027 cv
14.082 93.992 14.109 93.961 14.141 93.937 cv
14.172 93.918 14.203 93.91 14.242 93.906 cv
16.094 93.906 li
16.094 87.16 li
14.379 88.18 li
14.289 88.23 14.219 88.258 14.172 88.266 cv
14.117 88.273 14.074 88.266 14.043 88.234 cv
14.008 88.207 13.988 88.156 13.977 88.086 cv
13.965 88.02 13.957 87.934 13.961 87.824 cv
13.957 87.75 13.961 87.684 13.973 87.625 cv
13.977 87.574 13.988 87.527 14.004 87.488 cv
14.016 87.453 14.035 87.422 14.059 87.395 cv
14.082 87.367 14.113 87.34 14.16 87.312 cv
16.203 86 li
16.219 85.988 16.238 85.977 16.27 85.969 cv
16.293 85.961 16.328 85.953 16.375 85.941 cv
16.414 85.934 16.465 85.926 16.52 85.922 cv
16.574 85.922 16.641 85.922 16.727 85.918 cv
16.832 85.922 16.926 85.926 17 85.934 cv
17.07 85.941 17.125 85.957 17.172 85.973 cv
17.211 85.992 17.238 86.012 17.254 86.035 cv
17.262 86.062 17.27 86.086 17.273 86.109 cv
17.273 93.906 li
18.879 93.906 li
18.914 93.91 18.949 93.918 18.98 93.937 cv
19.012 93.961 19.035 93.992 19.059 94.027 cv
19.074 94.066 19.09 94.113 19.105 94.172 cv
19.113 94.234 19.121 94.309 19.125 94.387 cv
cp
f
5.68 61.129 mo
19.871 61.129 li
19.871 78.219 li
5.68 78.219 li
cp
0 0 0 0 cmyk
ef
12.027 73.961 mo
12.023 74.047 12.02 74.121 12.008 74.184 cv
11.996 74.25 11.98 74.305 11.961 74.344 cv
11.938 74.391 11.91 74.422 11.879 74.437 cv
11.844 74.461 11.805 74.469 11.766 74.469 cv
6.863 74.469 li
6.801 74.469 6.742 74.461 6.695 74.445 cv
6.645 74.43 6.605 74.406 6.57 74.367 cv
6.535 74.336 6.508 74.281 6.496 74.211 cv
6.477 74.141 6.469 74.055 6.473 73.953 cv
6.469 73.863 6.473 73.785 6.48 73.715 cv
6.484 73.648 6.5 73.59 6.527 73.535 cv
6.551 73.484 6.582 73.43 6.617 73.375 cv
6.652 73.324 6.695 73.27 6.754 73.207 cv
8.527 71.383 li
8.938 70.965 9.266 70.59 9.516 70.254 cv
9.762 69.926 9.953 69.621 10.086 69.344 cv
10.219 69.07 10.305 68.82 10.352 68.594 cv
10.391 68.371 10.414 68.16 10.414 67.965 cv
10.414 67.77 10.379 67.586 10.313 67.406 cv
10.246 67.234 10.152 67.078 10.027 66.941 cv
9.902 66.812 9.746 66.707 9.559 66.625 cv
9.371 66.551 9.152 66.512 8.906 66.508 cv
8.617 66.512 8.359 66.551 8.133 66.625 cv
7.902 66.707 7.703 66.793 7.531 66.879 cv
7.359 66.973 7.215 67.055 7.098 67.133 cv
6.98 67.211 6.895 67.25 6.844 67.25 cv
6.809 67.25 6.777 67.242 6.754 67.223 cv
6.723 67.207 6.703 67.176 6.688 67.133 cv
6.672 67.094 6.656 67.039 6.648 66.969 cv
6.637 66.902 6.633 66.82 6.637 66.723 cv
6.633 66.656 6.637 66.598 6.645 66.547 cv
6.648 66.496 6.656 66.453 6.668 66.414 cv
6.676 66.379 6.691 66.344 6.711 66.312 cv
6.73 66.281 6.766 66.242 6.824 66.191 cv
6.875 66.145 6.969 66.078 7.105 65.996 cv
7.238 65.914 7.41 65.836 7.613 65.754 cv
7.816 65.676 8.039 65.605 8.285 65.551 cv
8.527 65.496 8.785 65.469 9.059 65.469 cv
9.484 65.469 9.859 65.531 10.184 65.652 cv
10.504 65.773 10.77 65.937 10.984 66.148 cv
11.195 66.359 11.355 66.605 11.461 66.879 cv
11.566 67.16 11.621 67.457 11.621 67.77 cv
11.621 68.059 11.594 68.34 11.543 68.617 cv
11.492 68.902 11.387 69.207 11.227 69.531 cv
11.063 69.859 10.828 70.223 10.523 70.621 cv
10.215 71.023 9.809 71.484 9.305 72 cv
7.898 73.469 li
11.758 73.469 li
11.789 73.473 11.824 73.484 11.863 73.5 cv
11.895 73.523 11.926 73.555 11.953 73.594 cv
11.977 73.637 11.996 73.687 12.008 73.746 cv
12.02 73.812 12.023 73.883 12.027 73.961 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.105 73.961 mo
19.102 74.047 19.098 74.121 19.086 74.184 cv
19.074 74.25 19.059 74.305 19.039 74.344 cv
19.016 74.391 18.988 74.422 18.957 74.437 cv
18.922 74.461 18.883 74.469 18.844 74.469 cv
13.941 74.469 li
13.879 74.469 13.82 74.461 13.773 74.445 cv
13.723 74.43 13.684 74.406 13.648 74.367 cv
13.613 74.336 13.586 74.281 13.574 74.211 cv
13.555 74.141 13.547 74.055 13.551 73.953 cv
13.547 73.863 13.551 73.785 13.559 73.715 cv
13.563 73.648 13.578 73.59 13.605 73.535 cv
13.629 73.484 13.66 73.43 13.695 73.375 cv
13.73 73.324 13.773 73.27 13.832 73.207 cv
15.605 71.383 li
16.016 70.965 16.344 70.59 16.594 70.254 cv
16.84 69.926 17.031 69.621 17.164 69.344 cv
17.297 69.07 17.383 68.82 17.43 68.594 cv
17.469 68.371 17.492 68.16 17.492 67.965 cv
17.492 67.77 17.457 67.586 17.391 67.406 cv
17.324 67.234 17.23 67.078 17.105 66.941 cv
16.98 66.812 16.824 66.707 16.637 66.625 cv
16.449 66.551 16.23 66.512 15.984 66.508 cv
15.695 66.512 15.438 66.551 15.211 66.625 cv
14.98 66.707 14.781 66.793 14.609 66.879 cv
14.438 66.973 14.293 67.055 14.176 67.133 cv
14.059 67.211 13.973 67.25 13.922 67.25 cv
13.887 67.25 13.855 67.242 13.832 67.223 cv
13.801 67.207 13.781 67.176 13.766 67.133 cv
13.75 67.094 13.734 67.039 13.727 66.969 cv
13.715 66.902 13.711 66.82 13.715 66.723 cv
13.711 66.656 13.715 66.598 13.723 66.547 cv
13.727 66.496 13.734 66.453 13.746 66.414 cv
13.754 66.379 13.77 66.344 13.789 66.312 cv
13.809 66.281 13.844 66.242 13.902 66.191 cv
13.953 66.145 14.047 66.078 14.184 65.996 cv
14.316 65.914 14.488 65.836 14.691 65.754 cv
14.895 65.676 15.117 65.605 15.363 65.551 cv
15.605 65.496 15.863 65.469 16.137 65.469 cv
16.563 65.469 16.938 65.531 17.262 65.652 cv
17.582 65.773 17.848 65.937 18.063 66.148 cv
18.273 66.359 18.434 66.605 18.539 66.879 cv
18.645 67.16 18.699 67.457 18.699 67.77 cv
18.699 68.059 18.672 68.34 18.621 68.617 cv
18.57 68.902 18.465 69.207 18.305 69.531 cv
18.141 69.859 17.906 70.223 17.602 70.621 cv
17.293 71.023 16.887 71.484 16.383 72 cv
14.977 73.469 li
18.836 73.469 li
18.867 73.473 18.902 73.484 18.941 73.5 cv
18.973 73.523 19.004 73.555 19.031 73.594 cv
19.055 73.637 19.074 73.687 19.086 73.746 cv
19.098 73.812 19.102 73.883 19.105 73.961 cv
cp
f
5.68 40.75 mo
19.871 40.75 li
19.871 57.84 li
5.68 57.84 li
cp
0 0 0 0 cmyk
ef
12.027 53.594 mo
12.023 53.68 12.02 53.754 12.008 53.816 cv
11.996 53.883 11.98 53.937 11.961 53.977 cv
11.938 54.023 11.91 54.055 11.879 54.07 cv
11.844 54.094 11.805 54.102 11.766 54.102 cv
6.863 54.102 li
6.801 54.102 6.742 54.094 6.695 54.078 cv
6.645 54.062 6.605 54.039 6.57 54 cv
6.535 53.969 6.508 53.914 6.496 53.844 cv
6.477 53.773 6.469 53.687 6.473 53.586 cv
6.469 53.496 6.473 53.418 6.48 53.348 cv
6.484 53.281 6.5 53.223 6.527 53.168 cv
6.551 53.117 6.582 53.062 6.617 53.008 cv
6.652 52.957 6.695 52.902 6.754 52.84 cv
8.527 51.016 li
8.938 50.598 9.266 50.223 9.516 49.887 cv
9.762 49.559 9.953 49.254 10.086 48.977 cv
10.219 48.703 10.305 48.453 10.352 48.227 cv
10.391 48.004 10.414 47.793 10.414 47.598 cv
10.414 47.402 10.379 47.219 10.313 47.039 cv
10.246 46.867 10.152 46.711 10.027 46.574 cv
9.902 46.445 9.746 46.34 9.559 46.258 cv
9.371 46.184 9.152 46.145 8.906 46.141 cv
8.617 46.145 8.359 46.184 8.133 46.258 cv
7.902 46.34 7.703 46.426 7.531 46.512 cv
7.359 46.605 7.215 46.687 7.098 46.766 cv
6.98 46.844 6.895 46.883 6.844 46.883 cv
6.809 46.883 6.777 46.875 6.754 46.855 cv
6.723 46.84 6.703 46.809 6.688 46.766 cv
6.672 46.727 6.656 46.672 6.648 46.602 cv
6.637 46.535 6.633 46.453 6.637 46.355 cv
6.633 46.289 6.637 46.23 6.645 46.18 cv
6.648 46.129 6.656 46.086 6.668 46.047 cv
6.676 46.012 6.691 45.977 6.711 45.945 cv
6.73 45.914 6.766 45.875 6.824 45.824 cv
6.875 45.777 6.969 45.711 7.105 45.629 cv
7.238 45.547 7.41 45.469 7.613 45.387 cv
7.816 45.309 8.039 45.238 8.285 45.184 cv
8.527 45.129 8.785 45.102 9.059 45.102 cv
9.484 45.102 9.859 45.164 10.184 45.285 cv
10.504 45.406 10.77 45.57 10.984 45.781 cv
11.195 45.992 11.355 46.238 11.461 46.512 cv
11.566 46.793 11.621 47.09 11.621 47.402 cv
11.621 47.691 11.594 47.973 11.543 48.25 cv
11.492 48.535 11.387 48.84 11.227 49.164 cv
11.063 49.492 10.828 49.855 10.523 50.254 cv
10.215 50.656 9.809 51.117 9.305 51.633 cv
7.898 53.102 li
11.758 53.102 li
11.789 53.105 11.824 53.117 11.863 53.133 cv
11.895 53.156 11.926 53.187 11.953 53.227 cv
11.977 53.27 11.996 53.32 12.008 53.379 cv
12.02 53.445 12.023 53.516 12.027 53.594 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.035 51.566 mo
19.031 51.977 18.961 52.344 18.82 52.668 cv
18.676 52.996 18.473 53.277 18.211 53.508 cv
17.945 53.742 17.617 53.918 17.23 54.043 cv
16.84 54.168 16.402 54.23 15.918 54.23 cv
15.613 54.23 15.336 54.203 15.082 54.156 cv
14.82 54.109 14.59 54.059 14.395 53.988 cv
14.191 53.926 14.027 53.855 13.895 53.785 cv
13.762 53.715 13.676 53.664 13.645 53.629 cv
13.605 53.602 13.582 53.57 13.566 53.535 cv
13.547 53.504 13.527 53.465 13.516 53.418 cv
13.5 53.375 13.492 53.32 13.484 53.25 cv
13.477 53.187 13.473 53.105 13.477 53.004 cv
13.473 52.844 13.488 52.73 13.523 52.664 cv
13.555 52.602 13.602 52.566 13.664 52.566 cv
13.707 52.566 13.789 52.605 13.914 52.676 cv
14.035 52.754 14.195 52.832 14.391 52.914 cv
14.582 53 14.809 53.078 15.074 53.148 cv
15.332 53.223 15.625 53.258 15.945 53.258 cv
16.254 53.258 16.523 53.219 16.762 53.141 cv
16.992 53.062 17.191 52.953 17.352 52.812 cv
17.508 52.672 17.625 52.504 17.707 52.309 cv
17.785 52.113 17.824 51.902 17.828 51.676 cv
17.824 51.426 17.773 51.199 17.676 50.996 cv
17.57 50.797 17.422 50.625 17.23 50.477 cv
17.031 50.332 16.793 50.219 16.508 50.141 cv
16.223 50.062 15.898 50.023 15.535 50.023 cv
14.664 50.023 li
14.621 50.023 14.586 50.016 14.551 50 cv
14.516 49.984 14.484 49.957 14.461 49.918 cv
14.434 49.883 14.414 49.836 14.398 49.777 cv
14.383 49.719 14.375 49.641 14.375 49.543 cv
14.375 49.457 14.379 49.387 14.395 49.328 cv
14.402 49.273 14.422 49.227 14.453 49.191 cv
14.477 49.156 14.508 49.133 14.539 49.113 cv
14.57 49.102 14.605 49.094 14.648 49.09 cv
15.422 49.09 li
15.723 49.094 15.992 49.055 16.234 48.973 cv
16.469 48.898 16.672 48.785 16.844 48.637 cv
17.008 48.492 17.137 48.316 17.227 48.113 cv
17.316 47.91 17.363 47.684 17.363 47.43 cv
17.363 47.25 17.332 47.074 17.273 46.906 cv
17.211 46.742 17.121 46.598 17.004 46.473 cv
16.883 46.348 16.73 46.25 16.551 46.18 cv
16.363 46.109 16.152 46.074 15.91 46.074 cv
15.645 46.074 15.398 46.117 15.18 46.195 cv
14.953 46.277 14.758 46.363 14.586 46.453 cv
14.41 46.547 14.266 46.633 14.152 46.711 cv
14.039 46.793 13.957 46.832 13.914 46.828 cv
13.879 46.832 13.852 46.824 13.828 46.812 cv
13.801 46.801 13.781 46.777 13.766 46.742 cv
13.75 46.711 13.738 46.664 13.73 46.598 cv
13.723 46.539 13.719 46.457 13.723 46.355 cv
13.719 46.289 13.719 46.23 13.727 46.176 cv
13.727 46.125 13.738 46.078 13.754 46.035 cv
13.77 46 13.785 45.965 13.805 45.93 cv
13.82 45.902 13.852 45.863 13.895 45.816 cv
13.938 45.773 14.023 45.711 14.16 45.629 cv
14.289 45.547 14.453 45.469 14.648 45.387 cv
14.84 45.309 15.063 45.238 15.32 45.184 cv
15.57 45.129 15.844 45.102 16.141 45.102 cv
16.547 45.102 16.91 45.156 17.223 45.258 cv
17.535 45.367 17.793 45.516 18.004 45.703 cv
18.207 45.898 18.363 46.129 18.469 46.395 cv
18.57 46.664 18.621 46.957 18.625 47.281 cv
18.621 47.562 18.586 47.824 18.516 48.059 cv
18.441 48.301 18.332 48.512 18.191 48.695 cv
18.047 48.883 17.875 49.039 17.672 49.168 cv
17.465 49.301 17.227 49.395 16.957 49.441 cv
16.957 49.453 li
17.262 49.488 17.543 49.562 17.797 49.684 cv
18.051 49.805 18.27 49.957 18.453 50.141 cv
18.633 50.324 18.773 50.539 18.879 50.781 cv
18.98 51.027 19.031 51.289 19.035 51.566 cv
cp
f
5.68 20.371 mo
19.871 20.371 li
19.871 37.461 li
5.68 37.461 li
cp
0 0 0 0 cmyk
ef
12.027 33.191 mo
12.023 33.277 12.02 33.352 12.008 33.414 cv
11.996 33.48 11.98 33.535 11.961 33.574 cv
11.938 33.621 11.91 33.652 11.879 33.668 cv
11.844 33.691 11.805 33.699 11.766 33.699 cv
6.863 33.699 li
6.801 33.699 6.742 33.691 6.695 33.676 cv
6.645 33.66 6.605 33.637 6.57 33.598 cv
6.535 33.566 6.508 33.512 6.496 33.441 cv
6.477 33.371 6.469 33.285 6.473 33.184 cv
6.469 33.094 6.473 33.016 6.48 32.945 cv
6.484 32.879 6.5 32.82 6.527 32.766 cv
6.551 32.715 6.582 32.66 6.617 32.605 cv
6.652 32.555 6.695 32.5 6.754 32.437 cv
8.527 30.613 li
8.938 30.195 9.266 29.82 9.516 29.484 cv
9.762 29.156 9.953 28.852 10.086 28.574 cv
10.219 28.301 10.305 28.051 10.352 27.824 cv
10.391 27.602 10.414 27.391 10.414 27.195 cv
10.414 27 10.379 26.816 10.313 26.637 cv
10.246 26.465 10.152 26.309 10.027 26.172 cv
9.902 26.043 9.746 25.937 9.559 25.855 cv
9.371 25.781 9.152 25.742 8.906 25.738 cv
8.617 25.742 8.359 25.781 8.133 25.855 cv
7.902 25.937 7.703 26.023 7.531 26.109 cv
7.359 26.203 7.215 26.285 7.098 26.363 cv
6.98 26.441 6.895 26.48 6.844 26.48 cv
6.809 26.48 6.777 26.473 6.754 26.453 cv
6.723 26.437 6.703 26.406 6.688 26.363 cv
6.672 26.324 6.656 26.27 6.648 26.199 cv
6.637 26.133 6.633 26.051 6.637 25.953 cv
6.633 25.887 6.637 25.828 6.645 25.777 cv
6.648 25.727 6.656 25.684 6.668 25.645 cv
6.676 25.609 6.691 25.574 6.711 25.543 cv
6.73 25.512 6.766 25.473 6.824 25.422 cv
6.875 25.375 6.969 25.309 7.105 25.227 cv
7.238 25.145 7.41 25.066 7.613 24.984 cv
7.816 24.906 8.039 24.836 8.285 24.781 cv
8.527 24.727 8.785 24.699 9.059 24.699 cv
9.484 24.699 9.859 24.762 10.184 24.883 cv
10.504 25.004 10.77 25.168 10.984 25.379 cv
11.195 25.59 11.355 25.836 11.461 26.109 cv
11.566 26.391 11.621 26.687 11.621 27 cv
11.621 27.289 11.594 27.57 11.543 27.848 cv
11.492 28.133 11.387 28.437 11.227 28.762 cv
11.063 29.09 10.828 29.453 10.523 29.852 cv
10.215 30.254 9.809 30.715 9.305 31.23 cv
7.898 32.699 li
11.758 32.699 li
11.789 32.703 11.824 32.715 11.863 32.73 cv
11.895 32.754 11.926 32.785 11.953 32.824 cv
11.977 32.867 11.996 32.918 12.008 32.977 cv
12.02 33.043 12.023 33.113 12.027 33.191 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
19.48 31.176 mo
19.477 31.328 19.453 31.449 19.41 31.535 cv
19.363 31.625 19.301 31.668 19.219 31.664 cv
18.219 31.664 li
18.219 33.527 li
18.219 33.566 18.207 33.598 18.191 33.621 cv
18.168 33.648 18.137 33.668 18.094 33.687 cv
18.043 33.703 17.98 33.715 17.91 33.727 cv
17.832 33.734 17.738 33.738 17.621 33.742 cv
17.504 33.738 17.406 33.734 17.336 33.727 cv
17.258 33.715 17.199 33.703 17.156 33.687 cv
17.109 33.668 17.078 33.648 17.063 33.621 cv
17.043 33.598 17.035 33.566 17.039 33.527 cv
17.039 31.664 li
13.41 31.664 li
13.352 31.668 13.309 31.66 13.273 31.645 cv
13.238 31.633 13.203 31.605 13.176 31.566 cv
13.145 31.531 13.125 31.48 13.113 31.41 cv
13.102 31.344 13.098 31.254 13.098 31.141 cv
13.098 31.059 13.098 30.98 13.105 30.91 cv
13.105 30.84 13.117 30.777 13.133 30.723 cv
13.145 30.668 13.16 30.613 13.188 30.559 cv
13.207 30.504 13.234 30.449 13.27 30.387 cv
16.43 25 li
16.449 24.965 16.484 24.934 16.531 24.906 cv
16.574 24.879 16.629 24.855 16.703 24.836 cv
16.77 24.82 16.855 24.809 16.961 24.797 cv
17.063 24.793 17.184 24.789 17.324 24.785 cv
17.473 24.789 17.609 24.793 17.727 24.805 cv
17.84 24.816 17.93 24.832 18.004 24.848 cv
18.07 24.867 18.125 24.891 18.164 24.922 cv
18.199 24.953 18.219 24.988 18.219 25.027 cv
18.219 30.691 li
19.219 30.691 li
19.293 30.695 19.355 30.734 19.406 30.812 cv
19.453 30.895 19.477 31.016 19.48 31.176 cv
cp
17.039 25.824 mo
17.027 25.824 li
14.176 30.691 li
17.039 30.691 li
cp
f
35.684 520.262 mo
35.68 520.352 35.672 520.422 35.66 520.48 cv
35.645 520.543 35.625 520.594 35.605 520.625 cv
35.582 520.664 35.559 520.687 35.527 520.703 cv
35.496 520.719 35.465 520.727 35.438 520.727 cv
30.801 520.727 li
30.766 520.727 30.738 520.719 30.711 520.703 cv
30.684 520.687 30.656 520.664 30.633 520.625 cv
30.605 520.594 30.586 520.543 30.574 520.48 cv
30.559 520.422 30.551 520.352 30.555 520.262 cv
30.551 520.184 30.559 520.109 30.574 520.047 cv
30.586 519.988 30.602 519.941 30.625 519.902 cv
30.641 519.867 30.668 519.836 30.699 519.812 cv
30.73 519.793 30.762 519.785 30.801 519.781 cv
32.652 519.781 li
32.652 513.035 li
30.938 514.055 li
30.848 514.105 30.777 514.133 30.73 514.141 cv
30.676 514.148 30.633 514.141 30.602 514.109 cv
30.566 514.082 30.547 514.031 30.535 513.961 cv
30.523 513.895 30.516 513.809 30.52 513.699 cv
30.516 513.625 30.52 513.559 30.531 513.5 cv
30.535 513.449 30.547 513.402 30.563 513.363 cv
30.574 513.328 30.594 513.297 30.617 513.27 cv
30.641 513.242 30.672 513.215 30.719 513.187 cv
32.762 511.875 li
32.777 511.863 32.797 511.852 32.828 511.844 cv
32.852 511.836 32.887 511.828 32.934 511.816 cv
32.973 511.809 33.023 511.801 33.078 511.797 cv
33.133 511.797 33.199 511.797 33.285 511.793 cv
33.391 511.797 33.484 511.801 33.559 511.809 cv
33.629 511.816 33.684 511.832 33.73 511.848 cv
33.77 511.867 33.797 511.887 33.813 511.91 cv
33.82 511.937 33.828 511.961 33.832 511.984 cv
33.832 519.781 li
35.438 519.781 li
35.473 519.785 35.508 519.793 35.539 519.812 cv
35.57 519.836 35.594 519.867 35.617 519.902 cv
35.633 519.941 35.648 519.988 35.664 520.047 cv
35.672 520.109 35.68 520.184 35.684 520.262 cv
cp
f
108.984 520.219 mo
108.98 520.305 108.977 520.379 108.965 520.441 cv
108.953 520.508 108.938 520.562 108.918 520.602 cv
108.895 520.648 108.867 520.68 108.836 520.695 cv
108.801 520.719 108.762 520.727 108.723 520.727 cv
103.82 520.727 li
103.758 520.727 103.699 520.719 103.652 520.703 cv
103.602 520.687 103.563 520.664 103.527 520.625 cv
103.492 520.594 103.465 520.539 103.453 520.469 cv
103.434 520.398 103.426 520.312 103.43 520.211 cv
103.426 520.121 103.43 520.043 103.438 519.973 cv
103.441 519.906 103.457 519.848 103.484 519.793 cv
103.508 519.742 103.539 519.687 103.574 519.633 cv
103.609 519.582 103.652 519.527 103.711 519.465 cv
105.484 517.641 li
105.895 517.223 106.223 516.848 106.473 516.512 cv
106.719 516.184 106.91 515.879 107.043 515.602 cv
107.176 515.328 107.262 515.078 107.309 514.852 cv
107.348 514.629 107.371 514.418 107.371 514.223 cv
107.371 514.027 107.336 513.844 107.27 513.664 cv
107.203 513.492 107.109 513.336 106.984 513.199 cv
106.859 513.07 106.703 512.965 106.516 512.883 cv
106.328 512.809 106.109 512.77 105.863 512.766 cv
105.574 512.77 105.316 512.809 105.09 512.883 cv
104.859 512.965 104.66 513.051 104.488 513.137 cv
104.316 513.23 104.172 513.312 104.055 513.391 cv
103.938 513.469 103.852 513.508 103.801 513.508 cv
103.766 513.508 103.734 513.5 103.711 513.48 cv
103.68 513.465 103.66 513.434 103.645 513.391 cv
103.629 513.352 103.613 513.297 103.605 513.227 cv
103.594 513.16 103.59 513.078 103.594 512.98 cv
103.59 512.914 103.594 512.855 103.602 512.805 cv
103.605 512.754 103.613 512.711 103.625 512.672 cv
103.633 512.637 103.648 512.602 103.668 512.57 cv
103.688 512.539 103.723 512.5 103.781 512.449 cv
103.832 512.402 103.926 512.336 104.063 512.254 cv
104.195 512.172 104.367 512.094 104.57 512.012 cv
104.773 511.934 104.996 511.863 105.242 511.809 cv
105.484 511.754 105.742 511.727 106.016 511.727 cv
106.441 511.727 106.816 511.789 107.141 511.91 cv
107.461 512.031 107.727 512.195 107.941 512.406 cv
108.152 512.617 108.313 512.863 108.418 513.137 cv
108.523 513.418 108.578 513.715 108.578 514.027 cv
108.578 514.316 108.551 514.598 108.5 514.875 cv
108.449 515.16 108.344 515.465 108.184 515.789 cv
108.02 516.117 107.785 516.48 107.48 516.879 cv
107.172 517.281 106.766 517.742 106.262 518.258 cv
104.855 519.727 li
108.715 519.727 li
108.746 519.73 108.781 519.742 108.82 519.758 cv
108.852 519.781 108.883 519.812 108.91 519.852 cv
108.934 519.895 108.953 519.945 108.965 520.004 cv
108.977 520.07 108.98 520.141 108.984 520.219 cv
cp
f
182.699 518.203 mo
182.695 518.355 182.672 518.477 182.629 518.562 cv
182.582 518.652 182.52 518.695 182.438 518.691 cv
181.438 518.691 li
181.438 520.555 li
181.438 520.594 181.426 520.625 181.41 520.648 cv
181.387 520.676 181.355 520.695 181.313 520.715 cv
181.262 520.73 181.199 520.742 181.129 520.754 cv
181.051 520.762 180.957 520.766 180.84 520.77 cv
180.723 520.766 180.625 520.762 180.555 520.754 cv
180.477 520.742 180.418 520.73 180.375 520.715 cv
180.328 520.695 180.297 520.676 180.281 520.648 cv
180.262 520.625 180.254 520.594 180.258 520.555 cv
180.258 518.691 li
176.629 518.691 li
176.57 518.695 176.527 518.687 176.492 518.672 cv
176.457 518.66 176.422 518.633 176.395 518.594 cv
176.363 518.559 176.344 518.508 176.332 518.437 cv
176.32 518.371 176.316 518.281 176.316 518.168 cv
176.316 518.086 176.316 518.008 176.324 517.937 cv
176.324 517.867 176.336 517.805 176.352 517.75 cv
176.363 517.695 176.379 517.641 176.406 517.586 cv
176.426 517.531 176.453 517.477 176.488 517.414 cv
179.648 512.027 li
179.668 511.992 179.703 511.961 179.75 511.934 cv
179.793 511.906 179.848 511.883 179.922 511.863 cv
179.988 511.848 180.074 511.836 180.18 511.824 cv
180.281 511.82 180.402 511.816 180.543 511.812 cv
180.691 511.816 180.828 511.82 180.945 511.832 cv
181.059 511.844 181.148 511.859 181.223 511.875 cv
181.289 511.895 181.344 511.918 181.383 511.949 cv
181.418 511.98 181.438 512.016 181.438 512.055 cv
181.438 517.719 li
182.438 517.719 li
182.512 517.723 182.574 517.762 182.625 517.84 cv
182.672 517.922 182.695 518.043 182.699 518.203 cv
cp
180.258 512.852 mo
180.246 512.852 li
177.395 517.719 li
180.258 517.719 li
cp
f
255.871 517.855 mo
255.871 518.246 255.809 518.625 255.691 518.984 cv
255.566 519.352 255.383 519.668 255.141 519.941 cv
254.891 520.219 254.578 520.441 254.203 520.605 cv
253.82 520.773 253.375 520.855 252.859 520.855 cv
252.488 520.855 252.16 520.812 251.879 520.719 cv
251.594 520.633 251.348 520.5 251.137 520.328 cv
250.926 520.16 250.75 519.953 250.613 519.707 cv
250.473 519.461 250.359 519.18 250.277 518.863 cv
250.191 518.551 250.133 518.207 250.098 517.828 cv
250.059 517.457 250.039 517.055 250.043 516.621 cv
250.039 516.242 250.059 515.859 250.102 515.469 cv
250.141 515.086 250.215 514.711 250.32 514.344 cv
250.426 513.984 250.57 513.645 250.75 513.328 cv
250.93 513.012 251.156 512.734 251.43 512.5 cv
251.703 512.266 252.027 512.078 252.406 511.937 cv
252.785 511.801 253.227 511.734 253.73 511.73 cv
253.898 511.734 254.07 511.742 254.242 511.762 cv
254.414 511.785 254.574 511.816 254.723 511.848 cv
254.871 511.887 254.992 511.922 255.094 511.961 cv
255.191 512 255.258 512.035 255.293 512.059 cv
255.32 512.086 255.344 512.113 255.363 512.141 cv
255.379 512.172 255.395 512.203 255.402 512.238 cv
255.41 512.273 255.414 512.312 255.422 512.355 cv
255.422 512.398 255.426 512.453 255.43 512.516 cv
255.426 512.602 255.426 512.672 255.426 512.727 cv
255.422 512.789 255.41 512.836 255.398 512.871 cv
255.379 512.91 255.359 512.937 255.336 512.953 cv
255.309 512.973 255.277 512.98 255.238 512.98 cv
255.188 512.98 255.117 512.965 255.031 512.934 cv
254.941 512.902 254.836 512.867 254.715 512.824 cv
254.59 512.789 254.441 512.754 254.266 512.719 cv
254.09 512.691 253.887 512.676 253.656 512.672 cv
253.227 512.676 252.859 512.762 252.555 512.934 cv
252.25 513.105 252 513.34 251.805 513.633 cv
251.609 513.926 251.465 514.266 251.375 514.648 cv
251.277 515.039 251.223 515.441 251.215 515.859 cv
251.332 515.793 251.469 515.727 251.617 515.656 cv
251.766 515.59 251.926 515.527 252.102 515.469 cv
252.277 515.418 252.465 515.371 252.66 515.336 cv
252.855 515.305 253.066 515.289 253.293 515.285 cv
253.77 515.289 254.172 515.355 254.504 515.48 cv
254.832 515.613 255.098 515.793 255.305 516.023 cv
255.504 516.254 255.648 516.523 255.738 516.836 cv
255.824 517.148 255.871 517.488 255.871 517.855 cv
cp
254.676 517.965 mo
254.676 517.703 254.648 517.461 254.598 517.242 cv
254.543 517.027 254.453 516.844 254.332 516.687 cv
254.207 516.539 254.043 516.422 253.84 516.34 cv
253.629 516.258 253.375 516.215 253.078 516.215 cv
252.906 516.215 252.738 516.23 252.57 516.262 cv
252.398 516.293 252.234 516.336 252.078 516.383 cv
251.918 516.437 251.77 516.5 251.629 516.57 cv
251.484 516.645 251.352 516.719 251.234 516.797 cv
251.23 517.391 251.27 517.887 251.348 518.281 cv
251.422 518.68 251.531 518.996 251.676 519.234 cv
251.82 519.477 252 519.648 252.215 519.75 cv
252.43 519.855 252.68 519.906 252.969 519.902 cv
253.258 519.906 253.512 519.852 253.727 519.738 cv
253.941 519.633 254.117 519.484 254.262 519.297 cv
254.402 519.113 254.508 518.906 254.574 518.676 cv
254.641 518.445 254.676 518.211 254.676 517.965 cv
cp
f
329.168 518.449 mo
329.168 518.836 329.098 519.18 328.961 519.477 cv
328.824 519.781 328.629 520.031 328.371 520.234 cv
328.113 520.441 327.793 520.598 327.414 520.699 cv
327.031 520.805 326.598 520.855 326.113 520.855 cv
325.652 520.855 325.242 520.809 324.883 520.715 cv
324.52 520.621 324.215 520.48 323.965 520.289 cv
323.715 520.105 323.523 519.875 323.391 519.598 cv
323.258 519.324 323.191 519.012 323.191 518.656 cv
323.191 518.383 323.234 518.125 323.328 517.891 cv
323.414 517.656 323.547 517.441 323.723 517.246 cv
323.891 517.051 324.102 516.867 324.355 516.691 cv
324.605 516.523 324.891 516.359 325.207 516.203 cv
324.934 516.062 324.691 515.914 324.48 515.754 cv
324.27 515.598 324.09 515.426 323.945 515.238 cv
323.797 515.055 323.688 514.859 323.613 514.648 cv
323.535 514.441 323.496 514.211 323.5 513.961 cv
323.496 513.652 323.551 513.359 323.668 513.086 cv
323.777 512.816 323.949 512.582 324.176 512.379 cv
324.402 512.18 324.688 512.02 325.039 511.902 cv
325.383 511.785 325.793 511.727 326.262 511.727 cv
326.707 511.727 327.094 511.781 327.422 511.887 cv
327.75 511.996 328.02 512.141 328.23 512.324 cv
328.441 512.512 328.598 512.73 328.703 512.98 cv
328.801 513.23 328.852 513.5 328.855 513.789 cv
328.852 514.023 328.813 514.25 328.742 514.461 cv
328.664 514.68 328.555 514.883 328.406 515.07 cv
328.258 515.266 328.078 515.445 327.867 515.609 cv
327.656 515.781 327.414 515.937 327.141 516.078 cv
327.461 516.242 327.746 516.406 328.004 516.574 cv
328.254 516.742 328.469 516.922 328.645 517.117 cv
328.813 517.312 328.941 517.52 329.035 517.734 cv
329.121 517.953 329.168 518.191 329.168 518.449 cv
cp
327.688 513.898 mo
327.684 513.711 327.652 513.535 327.586 513.379 cv
327.52 513.223 327.422 513.09 327.297 512.98 cv
327.168 512.871 327.008 512.789 326.82 512.73 cv
326.625 512.676 326.41 512.648 326.172 512.645 cv
325.676 512.648 325.301 512.758 325.051 512.98 cv
324.793 513.207 324.668 513.516 324.672 513.898 cv
324.668 514.078 324.699 514.242 324.762 514.395 cv
324.824 514.551 324.918 514.695 325.051 514.832 cv
325.176 514.969 325.34 515.102 325.543 515.23 cv
325.738 515.363 325.977 515.5 326.254 515.641 cv
326.715 515.406 327.07 515.145 327.316 514.852 cv
327.563 514.566 327.684 514.25 327.688 513.898 cv
cp
327.977 518.574 mo
327.973 518.367 327.934 518.176 327.859 518.004 cv
327.777 517.836 327.66 517.676 327.504 517.523 cv
327.348 517.375 327.148 517.23 326.914 517.09 cv
326.676 516.953 326.406 516.809 326.098 516.656 cv
325.809 516.801 325.555 516.941 325.34 517.082 cv
325.121 517.223 324.941 517.371 324.805 517.52 cv
324.664 517.676 324.559 517.832 324.488 517.996 cv
324.414 518.164 324.379 518.348 324.383 518.547 cv
324.379 518.992 324.531 519.336 324.84 519.574 cv
325.141 519.82 325.594 519.941 326.199 519.937 cv
326.781 519.941 327.227 519.82 327.527 519.57 cv
327.824 519.328 327.973 518.996 327.977 518.574 cv
cp
f
398.777 520.262 mo
398.773 520.352 398.766 520.422 398.754 520.48 cv
398.738 520.543 398.719 520.594 398.699 520.625 cv
398.676 520.664 398.652 520.687 398.621 520.703 cv
398.59 520.719 398.559 520.727 398.531 520.727 cv
393.895 520.727 li
393.859 520.727 393.832 520.719 393.805 520.703 cv
393.777 520.687 393.75 520.664 393.727 520.625 cv
393.699 520.594 393.68 520.543 393.668 520.48 cv
393.652 520.422 393.645 520.352 393.648 520.262 cv
393.645 520.184 393.652 520.109 393.668 520.047 cv
393.68 519.988 393.695 519.941 393.719 519.902 cv
393.734 519.867 393.762 519.836 393.793 519.812 cv
393.824 519.793 393.855 519.785 393.895 519.781 cv
395.746 519.781 li
395.746 513.035 li
394.031 514.055 li
393.941 514.105 393.871 514.133 393.824 514.141 cv
393.77 514.148 393.727 514.141 393.695 514.109 cv
393.66 514.082 393.641 514.031 393.629 513.961 cv
393.617 513.895 393.609 513.809 393.613 513.699 cv
393.609 513.625 393.613 513.559 393.625 513.5 cv
393.629 513.449 393.641 513.402 393.656 513.363 cv
393.668 513.328 393.688 513.297 393.711 513.27 cv
393.734 513.242 393.766 513.215 393.813 513.187 cv
395.855 511.875 li
395.871 511.863 395.891 511.852 395.922 511.844 cv
395.945 511.836 395.98 511.828 396.027 511.816 cv
396.066 511.809 396.117 511.801 396.172 511.797 cv
396.227 511.797 396.293 511.797 396.379 511.793 cv
396.484 511.797 396.578 511.801 396.652 511.809 cv
396.723 511.816 396.777 511.832 396.824 511.848 cv
396.863 511.867 396.891 511.887 396.906 511.91 cv
396.914 511.937 396.922 511.961 396.926 511.984 cv
396.926 519.781 li
398.531 519.781 li
398.566 519.785 398.602 519.793 398.633 519.812 cv
398.664 519.836 398.688 519.867 398.711 519.902 cv
398.727 519.941 398.742 519.988 398.758 520.047 cv
398.766 520.109 398.773 520.184 398.777 520.262 cv
cp
f
406.129 516.27 mo
406.125 516.953 406.074 517.574 405.969 518.137 cv
405.859 518.699 405.68 519.184 405.434 519.586 cv
405.18 519.992 404.852 520.305 404.453 520.523 cv
404.047 520.746 403.555 520.855 402.969 520.855 cv
402.41 520.855 401.938 520.758 401.559 520.559 cv
401.176 520.363 400.871 520.07 400.637 519.684 cv
400.402 519.297 400.234 518.824 400.141 518.258 cv
400.039 517.695 399.992 517.047 399.992 516.312 cv
399.992 515.641 400.047 515.02 400.156 514.453 cv
400.266 513.891 400.441 513.406 400.691 513 cv
400.934 512.598 401.258 512.285 401.664 512.059 cv
402.063 511.84 402.559 511.727 403.148 511.727 cv
403.707 511.727 404.18 511.828 404.563 512.023 cv
404.945 512.227 405.25 512.52 405.484 512.902 cv
405.715 513.293 405.883 513.766 405.98 514.328 cv
406.078 514.891 406.125 515.539 406.129 516.27 cv
cp
404.922 516.352 mo
404.918 515.91 404.902 515.512 404.875 515.16 cv
404.84 514.809 404.793 514.5 404.734 514.23 cv
404.668 513.961 404.59 513.73 404.492 513.535 cv
404.395 513.344 404.277 513.184 404.141 513.055 cv
404 512.93 403.84 512.836 403.668 512.777 cv
403.488 512.723 403.293 512.695 403.078 512.691 cv
402.688 512.695 402.371 512.785 402.133 512.969 cv
401.887 513.152 401.695 513.406 401.559 513.723 cv
401.418 514.043 401.324 514.414 401.273 514.844 cv
401.223 515.273 401.199 515.738 401.199 516.23 cv
401.199 516.895 401.23 517.457 401.301 517.918 cv
401.367 518.387 401.477 518.766 401.629 519.055 cv
401.773 519.352 401.965 519.562 402.195 519.691 cv
402.426 519.828 402.707 519.895 403.039 519.891 cv
403.293 519.895 403.516 519.855 403.711 519.77 cv
403.902 519.691 404.07 519.57 404.211 519.414 cv
404.352 519.262 404.465 519.078 404.559 518.863 cv
404.645 518.648 404.719 518.41 404.777 518.148 cv
404.828 517.891 404.867 517.609 404.891 517.305 cv
404.91 517 404.918 516.684 404.922 516.352 cv
cp
f
472.094 520.262 mo
472.09 520.352 472.082 520.422 472.07 520.48 cv
472.055 520.543 472.035 520.594 472.016 520.625 cv
471.992 520.664 471.969 520.687 471.938 520.703 cv
471.906 520.719 471.875 520.727 471.848 520.727 cv
467.211 520.727 li
467.176 520.727 467.148 520.719 467.121 520.703 cv
467.094 520.687 467.066 520.664 467.043 520.625 cv
467.016 520.594 466.996 520.543 466.984 520.48 cv
466.969 520.422 466.961 520.352 466.965 520.262 cv
466.961 520.184 466.969 520.109 466.984 520.047 cv
466.996 519.988 467.012 519.941 467.035 519.902 cv
467.051 519.867 467.078 519.836 467.109 519.812 cv
467.141 519.793 467.172 519.785 467.211 519.781 cv
469.063 519.781 li
469.063 513.035 li
467.348 514.055 li
467.258 514.105 467.188 514.133 467.141 514.141 cv
467.086 514.148 467.043 514.141 467.012 514.109 cv
466.977 514.082 466.957 514.031 466.945 513.961 cv
466.934 513.895 466.926 513.809 466.93 513.699 cv
466.926 513.625 466.93 513.559 466.941 513.5 cv
466.945 513.449 466.957 513.402 466.973 513.363 cv
466.984 513.328 467.004 513.297 467.027 513.27 cv
467.051 513.242 467.082 513.215 467.129 513.187 cv
469.172 511.875 li
469.188 511.863 469.207 511.852 469.238 511.844 cv
469.262 511.836 469.297 511.828 469.344 511.816 cv
469.383 511.809 469.434 511.801 469.488 511.797 cv
469.543 511.797 469.609 511.797 469.695 511.793 cv
469.801 511.797 469.895 511.801 469.969 511.809 cv
470.039 511.816 470.094 511.832 470.141 511.848 cv
470.18 511.867 470.207 511.887 470.223 511.91 cv
470.23 511.937 470.238 511.961 470.242 511.984 cv
470.242 519.781 li
471.848 519.781 li
471.883 519.785 471.918 519.793 471.949 519.812 cv
471.98 519.836 472.004 519.867 472.027 519.902 cv
472.043 519.941 472.059 519.988 472.074 520.047 cv
472.082 520.109 472.09 520.184 472.094 520.262 cv
cp
f
479.156 520.219 mo
479.152 520.305 479.148 520.379 479.137 520.441 cv
479.125 520.508 479.109 520.562 479.09 520.602 cv
479.066 520.648 479.039 520.68 479.008 520.695 cv
478.973 520.719 478.934 520.727 478.895 520.727 cv
473.992 520.727 li
473.93 520.727 473.871 520.719 473.824 520.703 cv
473.773 520.687 473.734 520.664 473.699 520.625 cv
473.664 520.594 473.637 520.539 473.625 520.469 cv
473.605 520.398 473.598 520.312 473.602 520.211 cv
473.598 520.121 473.602 520.043 473.609 519.973 cv
473.613 519.906 473.629 519.848 473.656 519.793 cv
473.68 519.742 473.711 519.687 473.746 519.633 cv
473.781 519.582 473.824 519.527 473.883 519.465 cv
475.656 517.641 li
476.066 517.223 476.395 516.848 476.645 516.512 cv
476.891 516.184 477.082 515.879 477.215 515.602 cv
477.348 515.328 477.434 515.078 477.48 514.852 cv
477.52 514.629 477.543 514.418 477.543 514.223 cv
477.543 514.027 477.508 513.844 477.441 513.664 cv
477.375 513.492 477.281 513.336 477.156 513.199 cv
477.031 513.07 476.875 512.965 476.688 512.883 cv
476.5 512.809 476.281 512.77 476.035 512.766 cv
475.746 512.77 475.488 512.809 475.262 512.883 cv
475.031 512.965 474.832 513.051 474.66 513.137 cv
474.488 513.23 474.344 513.312 474.227 513.391 cv
474.109 513.469 474.023 513.508 473.973 513.508 cv
473.938 513.508 473.906 513.5 473.883 513.48 cv
473.852 513.465 473.832 513.434 473.816 513.391 cv
473.801 513.352 473.785 513.297 473.777 513.227 cv
473.766 513.16 473.762 513.078 473.766 512.98 cv
473.762 512.914 473.766 512.855 473.773 512.805 cv
473.777 512.754 473.785 512.711 473.797 512.672 cv
473.805 512.637 473.82 512.602 473.84 512.57 cv
473.859 512.539 473.895 512.5 473.953 512.449 cv
474.004 512.402 474.098 512.336 474.234 512.254 cv
474.367 512.172 474.539 512.094 474.742 512.012 cv
474.945 511.934 475.168 511.863 475.414 511.809 cv
475.656 511.754 475.914 511.727 476.188 511.727 cv
476.613 511.727 476.988 511.789 477.313 511.91 cv
477.633 512.031 477.898 512.195 478.113 512.406 cv
478.324 512.617 478.484 512.863 478.59 513.137 cv
478.695 513.418 478.75 513.715 478.75 514.027 cv
478.75 514.316 478.723 514.598 478.672 514.875 cv
478.621 515.16 478.516 515.465 478.355 515.789 cv
478.191 516.117 477.957 516.48 477.652 516.879 cv
477.344 517.281 476.938 517.742 476.434 518.258 cv
475.027 519.727 li
478.887 519.727 li
478.918 519.73 478.953 519.742 478.992 519.758 cv
479.023 519.781 479.055 519.812 479.082 519.852 cv
479.105 519.895 479.125 519.945 479.137 520.004 cv
479.148 520.07 479.152 520.141 479.156 520.219 cv
cp
f
545.414 520.262 mo
545.41 520.352 545.402 520.422 545.391 520.48 cv
545.375 520.543 545.355 520.594 545.336 520.625 cv
545.313 520.664 545.289 520.687 545.258 520.703 cv
545.227 520.719 545.195 520.727 545.168 520.727 cv
540.531 520.727 li
540.496 520.727 540.469 520.719 540.441 520.703 cv
540.414 520.687 540.387 520.664 540.363 520.625 cv
540.336 520.594 540.316 520.543 540.305 520.48 cv
540.289 520.422 540.281 520.352 540.285 520.262 cv
540.281 520.184 540.289 520.109 540.305 520.047 cv
540.316 519.988 540.332 519.941 540.355 519.902 cv
540.371 519.867 540.398 519.836 540.43 519.812 cv
540.461 519.793 540.492 519.785 540.531 519.781 cv
542.383 519.781 li
542.383 513.035 li
540.668 514.055 li
540.578 514.105 540.508 514.133 540.461 514.141 cv
540.406 514.148 540.363 514.141 540.332 514.109 cv
540.297 514.082 540.277 514.031 540.266 513.961 cv
540.254 513.895 540.246 513.809 540.25 513.699 cv
540.246 513.625 540.25 513.559 540.262 513.5 cv
540.266 513.449 540.277 513.402 540.293 513.363 cv
540.305 513.328 540.324 513.297 540.348 513.27 cv
540.371 513.242 540.402 513.215 540.449 513.187 cv
542.492 511.875 li
542.508 511.863 542.527 511.852 542.559 511.844 cv
542.582 511.836 542.617 511.828 542.664 511.816 cv
542.703 511.809 542.754 511.801 542.809 511.797 cv
542.863 511.797 542.93 511.797 543.016 511.793 cv
543.121 511.797 543.215 511.801 543.289 511.809 cv
543.359 511.816 543.414 511.832 543.461 511.848 cv
543.5 511.867 543.527 511.887 543.543 511.91 cv
543.551 511.937 543.559 511.961 543.563 511.984 cv
543.563 519.781 li
545.168 519.781 li
545.203 519.785 545.238 519.793 545.27 519.812 cv
545.301 519.836 545.324 519.867 545.348 519.902 cv
545.363 519.941 545.379 519.988 545.395 520.047 cv
545.402 520.109 545.41 520.184 545.414 520.262 cv
cp
f
552.852 518.203 mo
552.848 518.355 552.824 518.477 552.781 518.562 cv
552.734 518.652 552.672 518.695 552.59 518.691 cv
551.59 518.691 li
551.59 520.555 li
551.59 520.594 551.578 520.625 551.563 520.648 cv
551.539 520.676 551.508 520.695 551.465 520.715 cv
551.414 520.73 551.352 520.742 551.281 520.754 cv
551.203 520.762 551.109 520.766 550.992 520.77 cv
550.875 520.766 550.777 520.762 550.707 520.754 cv
550.629 520.742 550.57 520.73 550.527 520.715 cv
550.48 520.695 550.449 520.676 550.434 520.648 cv
550.414 520.625 550.406 520.594 550.41 520.555 cv
550.41 518.691 li
546.781 518.691 li
546.723 518.695 546.68 518.687 546.645 518.672 cv
546.609 518.66 546.574 518.633 546.547 518.594 cv
546.516 518.559 546.496 518.508 546.484 518.437 cv
546.473 518.371 546.469 518.281 546.469 518.168 cv
546.469 518.086 546.469 518.008 546.477 517.937 cv
546.477 517.867 546.488 517.805 546.504 517.75 cv
546.516 517.695 546.531 517.641 546.559 517.586 cv
546.578 517.531 546.605 517.477 546.641 517.414 cv
549.801 512.027 li
549.82 511.992 549.855 511.961 549.902 511.934 cv
549.945 511.906 550 511.883 550.074 511.863 cv
550.141 511.848 550.227 511.836 550.332 511.824 cv
550.434 511.82 550.555 511.816 550.695 511.812 cv
550.844 511.816 550.98 511.82 551.098 511.832 cv
551.211 511.844 551.301 511.859 551.375 511.875 cv
551.441 511.895 551.496 511.918 551.535 511.949 cv
551.57 511.98 551.59 512.016 551.59 512.055 cv
551.59 517.719 li
552.59 517.719 li
552.664 517.723 552.727 517.762 552.777 517.84 cv
552.824 517.922 552.848 518.043 552.852 518.203 cv
cp
550.41 512.852 mo
550.398 512.852 li
547.547 517.719 li
550.41 517.719 li
cp
f
618.734 520.262 mo
618.73 520.352 618.723 520.422 618.711 520.48 cv
618.695 520.543 618.676 520.594 618.656 520.625 cv
618.633 520.664 618.609 520.687 618.578 520.703 cv
618.547 520.719 618.516 520.727 618.488 520.727 cv
613.852 520.727 li
613.816 520.727 613.789 520.719 613.762 520.703 cv
613.734 520.687 613.707 520.664 613.684 520.625 cv
613.656 520.594 613.637 520.543 613.625 520.48 cv
613.609 520.422 613.602 520.352 613.605 520.262 cv
613.602 520.184 613.609 520.109 613.625 520.047 cv
613.637 519.988 613.652 519.941 613.676 519.902 cv
613.691 519.867 613.719 519.836 613.75 519.812 cv
613.781 519.793 613.813 519.785 613.852 519.781 cv
615.703 519.781 li
615.703 513.035 li
613.988 514.055 li
613.898 514.105 613.828 514.133 613.781 514.141 cv
613.727 514.148 613.684 514.141 613.652 514.109 cv
613.617 514.082 613.598 514.031 613.586 513.961 cv
613.574 513.895 613.566 513.809 613.57 513.699 cv
613.566 513.625 613.57 513.559 613.582 513.5 cv
613.586 513.449 613.598 513.402 613.613 513.363 cv
613.625 513.328 613.645 513.297 613.668 513.27 cv
613.691 513.242 613.723 513.215 613.77 513.187 cv
615.813 511.875 li
615.828 511.863 615.848 511.852 615.879 511.844 cv
615.902 511.836 615.938 511.828 615.984 511.816 cv
616.023 511.809 616.074 511.801 616.129 511.797 cv
616.184 511.797 616.25 511.797 616.336 511.793 cv
616.441 511.797 616.535 511.801 616.609 511.809 cv
616.68 511.816 616.734 511.832 616.781 511.848 cv
616.82 511.867 616.848 511.887 616.863 511.91 cv
616.871 511.937 616.879 511.961 616.883 511.984 cv
616.883 519.781 li
618.488 519.781 li
618.523 519.785 618.559 519.793 618.59 519.812 cv
618.621 519.836 618.645 519.867 618.668 519.902 cv
618.684 519.941 618.699 519.988 618.715 520.047 cv
618.723 520.109 618.73 520.184 618.734 520.262 cv
cp
f
626.023 517.855 mo
626.023 518.246 625.961 518.625 625.844 518.984 cv
625.719 519.352 625.535 519.668 625.293 519.941 cv
625.043 520.219 624.73 520.441 624.355 520.605 cv
623.973 520.773 623.527 520.855 623.012 520.855 cv
622.641 520.855 622.313 520.812 622.031 520.719 cv
621.746 520.633 621.5 520.5 621.289 520.328 cv
621.078 520.16 620.902 519.953 620.766 519.707 cv
620.625 519.461 620.512 519.18 620.43 518.863 cv
620.344 518.551 620.285 518.207 620.25 517.828 cv
620.211 517.457 620.191 517.055 620.195 516.621 cv
620.191 516.242 620.211 515.859 620.254 515.469 cv
620.293 515.086 620.367 514.711 620.473 514.344 cv
620.578 513.984 620.723 513.645 620.902 513.328 cv
621.082 513.012 621.309 512.734 621.582 512.5 cv
621.855 512.266 622.18 512.078 622.559 511.937 cv
622.938 511.801 623.379 511.734 623.883 511.73 cv
624.051 511.734 624.223 511.742 624.395 511.762 cv
624.566 511.785 624.727 511.816 624.875 511.848 cv
625.023 511.887 625.145 511.922 625.246 511.961 cv
625.344 512 625.41 512.035 625.445 512.059 cv
625.473 512.086 625.496 512.113 625.516 512.141 cv
625.531 512.172 625.547 512.203 625.555 512.238 cv
625.563 512.273 625.566 512.312 625.574 512.355 cv
625.574 512.398 625.578 512.453 625.582 512.516 cv
625.578 512.602 625.578 512.672 625.578 512.727 cv
625.574 512.789 625.563 512.836 625.551 512.871 cv
625.531 512.91 625.512 512.937 625.488 512.953 cv
625.461 512.973 625.43 512.98 625.391 512.98 cv
625.34 512.98 625.27 512.965 625.184 512.934 cv
625.094 512.902 624.988 512.867 624.867 512.824 cv
624.742 512.789 624.594 512.754 624.418 512.719 cv
624.242 512.691 624.039 512.676 623.809 512.672 cv
623.379 512.676 623.012 512.762 622.707 512.934 cv
622.402 513.105 622.152 513.34 621.957 513.633 cv
621.762 513.926 621.617 514.266 621.527 514.648 cv
621.43 515.039 621.375 515.441 621.367 515.859 cv
621.484 515.793 621.621 515.727 621.77 515.656 cv
621.918 515.59 622.078 515.527 622.254 515.469 cv
622.43 515.418 622.617 515.371 622.813 515.336 cv
623.008 515.305 623.219 515.289 623.445 515.285 cv
623.922 515.289 624.324 515.355 624.656 515.48 cv
624.984 515.613 625.25 515.793 625.457 516.023 cv
625.656 516.254 625.801 516.523 625.891 516.836 cv
625.977 517.148 626.023 517.488 626.023 517.855 cv
cp
624.828 517.965 mo
624.828 517.703 624.801 517.461 624.75 517.242 cv
624.695 517.027 624.605 516.844 624.484 516.687 cv
624.359 516.539 624.195 516.422 623.992 516.34 cv
623.781 516.258 623.527 516.215 623.23 516.215 cv
623.059 516.215 622.891 516.23 622.723 516.262 cv
622.551 516.293 622.387 516.336 622.23 516.383 cv
622.07 516.437 621.922 516.5 621.781 516.57 cv
621.637 516.645 621.504 516.719 621.387 516.797 cv
621.383 517.391 621.422 517.887 621.5 518.281 cv
621.574 518.68 621.684 518.996 621.828 519.234 cv
621.973 519.477 622.152 519.648 622.367 519.75 cv
622.582 519.855 622.832 519.906 623.121 519.902 cv
623.41 519.906 623.664 519.852 623.879 519.738 cv
624.094 519.633 624.27 519.484 624.414 519.297 cv
624.555 519.113 624.66 518.906 624.727 518.676 cv
624.793 518.445 624.828 518.211 624.828 517.965 cv
cp
f
268.02 536.949 mo
268.016 537.055 268 537.145 267.965 537.215 cv
267.93 537.293 267.883 537.352 267.828 537.395 cv
267.77 537.445 267.707 537.48 267.641 537.496 cv
267.566 537.52 267.496 537.527 267.434 537.527 cv
266.988 537.527 li
266.848 537.527 266.727 537.516 266.621 537.484 cv
266.516 537.461 266.418 537.406 266.324 537.328 cv
266.23 537.254 266.137 537.152 266.043 537.02 cv
265.949 536.891 265.848 536.727 265.742 536.523 cv
262.668 530.785 li
262.504 530.492 262.34 530.184 262.18 529.855 cv
262.012 529.535 261.859 529.219 261.723 528.91 cv
261.707 528.91 li
261.715 529.285 261.723 529.668 261.73 530.055 cv
261.734 530.445 261.734 530.832 261.738 531.215 cv
261.738 537.301 li
261.734 537.34 261.723 537.375 261.703 537.406 cv
261.68 537.441 261.645 537.469 261.594 537.484 cv
261.539 537.504 261.469 537.516 261.387 537.531 cv
261.301 537.543 261.195 537.551 261.066 537.551 cv
260.93 537.551 260.82 537.543 260.738 537.531 cv
260.652 537.516 260.586 537.504 260.539 537.484 cv
260.488 537.469 260.453 537.441 260.43 537.406 cv
260.406 537.375 260.395 537.34 260.398 537.301 cv
260.398 527.996 li
260.395 527.789 260.453 527.641 260.574 527.551 cv
260.691 527.465 260.82 527.422 260.961 527.418 cv
261.621 527.418 li
261.773 527.422 261.906 527.434 262.012 527.457 cv
262.113 527.484 262.207 527.527 262.293 527.586 cv
262.375 527.648 262.453 527.73 262.535 527.836 cv
262.609 527.945 262.691 528.082 262.777 528.238 cv
265.145 532.664 li
265.289 532.937 265.43 533.203 265.566 533.457 cv
265.699 533.715 265.828 533.969 265.957 534.215 cv
266.078 534.469 266.203 534.715 266.328 534.953 cv
266.449 535.195 266.57 535.437 266.695 535.68 cv
266.703 535.68 li
266.691 535.273 266.684 534.844 266.684 534.398 cv
266.676 533.953 266.676 533.527 266.68 533.117 cv
266.68 527.645 li
266.676 527.609 266.688 527.574 266.711 527.543 cv
266.734 527.512 266.77 527.484 266.824 527.461 cv
266.871 527.437 266.941 527.422 267.027 527.41 cv
267.113 527.402 267.223 527.398 267.363 527.395 cv
267.48 527.398 267.586 527.402 267.676 527.41 cv
267.762 527.422 267.828 527.437 267.879 527.461 cv
267.926 527.484 267.961 527.512 267.984 527.543 cv
268.004 527.574 268.016 527.609 268.02 527.645 cv
cp
f
276.57 537.309 mo
276.566 537.355 276.559 537.391 276.543 537.414 cv
276.523 537.445 276.488 537.469 276.445 537.488 cv
276.398 537.508 276.34 537.52 276.266 537.535 cv
276.188 537.543 276.094 537.551 275.988 537.551 cv
275.863 537.551 275.766 537.543 275.695 537.535 cv
275.617 537.52 275.559 537.508 275.516 537.488 cv
275.469 537.469 275.438 537.445 275.426 537.414 cv
275.406 537.391 275.398 537.355 275.402 537.309 cv
275.402 536.383 li
275 536.828 274.605 537.148 274.219 537.348 cv
273.824 537.551 273.43 537.648 273.035 537.652 cv
272.563 537.648 272.168 537.574 271.852 537.418 cv
271.531 537.266 271.273 537.055 271.078 536.785 cv
270.875 536.52 270.734 536.207 270.652 535.848 cv
270.563 535.492 270.52 535.059 270.523 534.551 cv
270.523 530.297 li
270.52 530.258 270.527 530.223 270.551 530.191 cv
270.566 530.164 270.602 530.141 270.656 530.113 cv
270.703 530.094 270.773 530.078 270.859 530.066 cv
270.941 530.062 271.043 530.059 271.172 530.055 cv
271.293 530.059 271.398 530.062 271.484 530.066 cv
271.566 530.078 271.633 530.094 271.68 530.113 cv
271.727 530.141 271.762 530.164 271.785 530.191 cv
271.805 530.223 271.813 530.258 271.816 530.297 cv
271.816 534.379 li
271.813 534.793 271.844 535.121 271.906 535.367 cv
271.965 535.613 272.055 535.824 272.18 535.996 cv
272.297 536.176 272.453 536.309 272.645 536.402 cv
272.828 536.5 273.047 536.551 273.297 536.547 cv
273.617 536.551 273.938 536.434 274.262 536.203 cv
274.578 535.977 274.918 535.641 275.277 535.195 cv
275.277 530.297 li
275.277 530.258 275.285 530.223 275.305 530.191 cv
275.32 530.164 275.355 530.141 275.41 530.113 cv
275.461 530.094 275.527 530.078 275.609 530.066 cv
275.688 530.062 275.793 530.059 275.926 530.055 cv
276.047 530.059 276.152 530.062 276.238 530.066 cv
276.32 530.078 276.383 530.094 276.43 530.113 cv
276.473 530.141 276.508 530.164 276.535 530.191 cv
276.555 530.223 276.566 530.258 276.57 530.297 cv
cp
f
289.348 537.309 mo
289.344 537.355 289.336 537.391 289.316 537.414 cv
289.293 537.445 289.258 537.469 289.215 537.488 cv
289.164 537.508 289.098 537.52 289.02 537.535 cv
288.934 537.543 288.832 537.551 288.707 537.551 cv
288.574 537.551 288.465 537.543 288.387 537.535 cv
288.301 537.52 288.234 537.508 288.188 537.488 cv
288.133 537.469 288.098 537.445 288.082 537.414 cv
288.059 537.391 288.051 537.355 288.051 537.309 cv
288.051 533.047 li
288.051 532.754 288.023 532.484 287.973 532.238 cv
287.918 531.996 287.836 531.785 287.723 531.605 cv
287.609 531.43 287.465 531.293 287.289 531.199 cv
287.109 531.105 286.898 531.059 286.664 531.059 cv
286.367 531.059 286.07 531.176 285.773 531.402 cv
285.469 531.637 285.141 531.969 284.785 532.406 cv
284.785 537.309 li
284.781 537.355 284.77 537.391 284.754 537.414 cv
284.73 537.445 284.699 537.469 284.652 537.488 cv
284.602 537.508 284.535 537.52 284.453 537.535 cv
284.367 537.543 284.262 537.551 284.141 537.551 cv
284.02 537.551 283.918 537.543 283.832 537.535 cv
283.746 537.52 283.676 537.508 283.629 537.488 cv
283.574 537.469 283.543 537.445 283.527 537.414 cv
283.508 537.391 283.496 537.355 283.5 537.309 cv
283.5 533.047 li
283.496 532.754 283.469 532.484 283.414 532.238 cv
283.355 531.996 283.27 531.785 283.156 531.605 cv
283.043 531.43 282.898 531.293 282.727 531.199 cv
282.547 531.105 282.34 531.059 282.105 531.059 cv
281.805 531.059 281.508 531.176 281.207 531.402 cv
280.906 531.637 280.578 531.969 280.227 532.406 cv
280.227 537.309 li
280.223 537.355 280.211 537.391 280.195 537.414 cv
280.172 537.445 280.141 537.469 280.094 537.488 cv
280.047 537.508 279.98 537.52 279.902 537.535 cv
279.816 537.543 279.711 537.551 279.582 537.551 cv
279.453 537.551 279.348 537.543 279.27 537.535 cv
279.184 537.52 279.117 537.508 279.07 537.488 cv
279.016 537.469 278.984 537.445 278.969 537.414 cv
278.949 537.391 278.938 537.355 278.941 537.309 cv
278.941 530.297 li
278.938 530.258 278.945 530.223 278.965 530.191 cv
278.977 530.164 279.008 530.141 279.059 530.113 cv
279.102 530.094 279.164 530.078 279.238 530.066 cv
279.309 530.062 279.402 530.059 279.527 530.055 cv
279.637 530.059 279.734 530.062 279.813 530.066 cv
279.887 530.078 279.945 530.094 279.988 530.113 cv
280.027 530.141 280.055 530.164 280.074 530.191 cv
280.09 530.223 280.098 530.258 280.102 530.297 cv
280.102 531.223 li
280.492 530.781 280.875 530.461 281.25 530.254 cv
281.617 530.051 281.996 529.945 282.379 529.945 cv
282.668 529.945 282.926 529.98 283.16 530.047 cv
283.387 530.117 283.594 530.211 283.773 530.332 cv
283.949 530.453 284.098 530.598 284.227 530.766 cv
284.348 530.937 284.453 531.129 284.539 531.332 cv
284.77 531.082 284.992 530.867 285.203 530.687 cv
285.414 530.516 285.617 530.371 285.813 530.258 cv
286.008 530.152 286.195 530.074 286.379 530.02 cv
286.563 529.973 286.75 529.945 286.938 529.945 cv
287.391 529.945 287.77 530.027 288.074 530.184 cv
288.379 530.348 288.625 530.559 288.82 530.82 cv
289.008 531.086 289.145 531.395 289.227 531.75 cv
289.305 532.105 289.344 532.48 289.348 532.875 cv
cp
f
298.145 533.707 mo
298.141 534.316 298.074 534.867 297.945 535.352 cv
297.809 535.84 297.613 536.254 297.359 536.594 cv
297.102 536.937 296.785 537.199 296.414 537.379 cv
296.039 537.562 295.613 537.648 295.129 537.652 cv
294.902 537.648 294.695 537.629 294.508 537.586 cv
294.32 537.539 294.133 537.469 293.953 537.371 cv
293.766 537.273 293.586 537.148 293.406 536.996 cv
293.223 536.848 293.031 536.668 292.832 536.453 cv
292.832 537.309 li
292.832 537.355 292.82 537.391 292.801 537.418 cv
292.777 537.453 292.742 537.477 292.699 537.492 cv
292.648 537.508 292.59 537.52 292.523 537.535 cv
292.449 537.543 292.359 537.551 292.254 537.551 cv
292.145 537.551 292.059 537.543 291.988 537.535 cv
291.914 537.52 291.852 537.508 291.809 537.492 cv
291.758 537.477 291.727 537.453 291.715 537.418 cv
291.695 537.391 291.688 537.355 291.691 537.309 cv
291.691 526.898 li
291.688 526.859 291.699 526.824 291.719 526.789 cv
291.734 526.762 291.766 526.734 291.82 526.711 cv
291.867 526.691 291.934 526.676 292.02 526.664 cv
292.098 526.656 292.203 526.652 292.332 526.648 cv
292.461 526.652 292.566 526.656 292.652 526.664 cv
292.73 526.676 292.797 526.691 292.844 526.711 cv
292.891 526.734 292.922 526.762 292.945 526.789 cv
292.961 526.824 292.973 526.859 292.977 526.898 cv
292.977 531.098 li
293.184 530.887 293.387 530.707 293.582 530.562 cv
293.777 530.418 293.965 530.301 294.152 530.207 cv
294.336 530.121 294.523 530.055 294.715 530.008 cv
294.898 529.969 295.098 529.945 295.309 529.945 cv
295.813 529.945 296.246 530.047 296.613 530.25 cv
296.973 530.453 297.266 530.727 297.492 531.062 cv
297.715 531.406 297.883 531.805 297.988 532.262 cv
298.09 532.719 298.141 533.199 298.145 533.707 cv
cp
296.813 533.855 mo
296.809 533.5 296.781 533.152 296.73 532.812 cv
296.672 532.477 296.578 532.18 296.441 531.918 cv
296.305 531.66 296.125 531.449 295.902 531.289 cv
295.676 531.133 295.395 531.055 295.063 531.051 cv
294.895 531.055 294.73 531.078 294.57 531.121 cv
294.406 531.172 294.242 531.25 294.074 531.355 cv
293.906 531.469 293.73 531.609 293.555 531.777 cv
293.371 531.953 293.18 532.168 292.977 532.422 cv
292.977 535.219 li
293.332 535.652 293.672 535.984 293.996 536.207 cv
294.32 536.437 294.656 536.551 295.008 536.547 cv
295.328 536.551 295.605 536.473 295.84 536.312 cv
296.066 536.16 296.254 535.953 296.398 535.691 cv
296.543 535.437 296.648 535.148 296.715 534.828 cv
296.777 534.512 296.809 534.187 296.813 533.855 cv
cp
f
306.055 533.5 mo
306.051 533.703 306 533.844 305.902 533.93 cv
305.797 534.016 305.68 534.059 305.555 534.059 cv
300.938 534.059 li
300.934 534.449 300.973 534.801 301.055 535.113 cv
301.129 535.426 301.262 535.695 301.445 535.914 cv
301.625 536.141 301.859 536.312 302.156 536.43 cv
302.445 536.555 302.805 536.613 303.23 536.609 cv
303.563 536.613 303.859 536.586 304.121 536.527 cv
304.383 536.477 304.609 536.414 304.801 536.344 cv
304.988 536.277 305.145 536.219 305.27 536.16 cv
305.391 536.109 305.484 536.082 305.547 536.078 cv
305.582 536.082 305.613 536.09 305.645 536.105 cv
305.672 536.125 305.695 536.152 305.715 536.187 cv
305.727 536.227 305.738 536.277 305.75 536.34 cv
305.754 536.406 305.758 536.484 305.762 536.578 cv
305.758 536.648 305.754 536.707 305.754 536.754 cv
305.746 536.801 305.742 536.844 305.734 536.883 cv
305.727 536.922 305.711 536.957 305.695 536.988 cv
305.672 537.02 305.648 537.051 305.625 537.078 cv
305.594 537.109 305.512 537.156 305.371 537.219 cv
305.23 537.285 305.047 537.348 304.824 537.41 cv
304.598 537.473 304.34 537.527 304.047 537.578 cv
303.754 537.625 303.441 537.648 303.109 537.652 cv
302.531 537.648 302.023 537.57 301.594 537.41 cv
301.156 537.25 300.793 537.012 300.5 536.695 cv
300.199 536.379 299.977 535.984 299.828 535.504 cv
299.68 535.027 299.605 534.469 299.605 533.832 cv
299.605 533.234 299.68 532.695 299.836 532.211 cv
299.988 531.734 300.215 531.324 300.512 530.988 cv
300.805 530.652 301.16 530.395 301.574 530.215 cv
301.988 530.035 302.453 529.945 302.969 529.945 cv
303.52 529.945 303.988 530.035 304.375 530.211 cv
304.762 530.391 305.078 530.629 305.332 530.926 cv
305.578 531.227 305.762 531.578 305.879 531.977 cv
305.992 532.383 306.051 532.812 306.055 533.266 cv
cp
304.762 533.117 mo
304.777 532.441 304.625 531.91 304.309 531.527 cv
303.992 531.145 303.523 530.953 302.906 530.949 cv
302.582 530.953 302.301 531.012 302.063 531.129 cv
301.82 531.25 301.621 531.41 301.461 531.605 cv
301.297 531.805 301.172 532.035 301.086 532.297 cv
300.996 532.559 300.945 532.832 300.938 533.117 cv
cp
f
312.121 530.754 mo
312.117 530.871 312.117 530.969 312.113 531.043 cv
312.105 531.125 312.094 531.187 312.082 531.227 cv
312.063 531.273 312.043 531.305 312.023 531.328 cv
311.996 531.352 311.965 531.363 311.926 531.363 cv
311.883 531.363 311.832 531.352 311.773 531.328 cv
311.711 531.305 311.641 531.281 311.57 531.258 cv
311.492 531.234 311.41 531.215 311.316 531.191 cv
311.223 531.176 311.121 531.164 311.012 531.16 cv
310.879 531.164 310.75 531.191 310.629 531.238 cv
310.504 531.293 310.375 531.379 310.238 531.496 cv
310.098 531.621 309.953 531.777 309.805 531.973 cv
309.652 532.168 309.484 532.41 309.305 532.695 cv
309.305 537.309 li
309.301 537.355 309.289 537.391 309.273 537.414 cv
309.25 537.445 309.219 537.469 309.172 537.488 cv
309.125 537.508 309.059 537.52 308.98 537.535 cv
308.895 537.543 308.789 537.551 308.66 537.551 cv
308.531 537.551 308.426 537.543 308.348 537.535 cv
308.262 537.52 308.195 537.508 308.148 537.488 cv
308.094 537.469 308.063 537.445 308.047 537.414 cv
308.027 537.391 308.016 537.355 308.02 537.309 cv
308.02 530.297 li
308.016 530.258 308.023 530.223 308.043 530.191 cv
308.055 530.164 308.086 530.141 308.137 530.113 cv
308.18 530.094 308.242 530.078 308.316 530.066 cv
308.387 530.062 308.48 530.059 308.605 530.055 cv
308.715 530.059 308.813 530.062 308.891 530.066 cv
308.965 530.078 309.023 530.094 309.066 530.113 cv
309.105 530.141 309.133 530.164 309.152 530.191 cv
309.168 530.223 309.176 530.258 309.18 530.297 cv
309.18 531.316 li
309.367 531.035 309.551 530.809 309.723 530.633 cv
309.891 530.457 310.051 530.316 310.203 530.215 cv
310.352 530.113 310.5 530.043 310.648 530.004 cv
310.797 529.965 310.945 529.945 311.098 529.945 cv
311.164 529.945 311.242 529.949 311.328 529.957 cv
311.414 529.965 311.504 529.98 311.598 530 cv
311.691 530.023 311.773 530.047 311.852 530.07 cv
311.922 530.098 311.977 530.125 312.012 530.148 cv
312.039 530.18 312.059 530.203 312.074 530.223 cv
312.082 530.25 312.094 530.281 312.102 530.312 cv
312.109 530.352 312.113 530.402 312.117 530.473 cv
312.117 530.543 312.117 530.637 312.121 530.754 cv
cp
f
323.879 533.723 mo
323.875 534.301 323.801 534.828 323.652 535.305 cv
323.5 535.789 323.273 536.203 322.977 536.547 cv
322.676 536.898 322.301 537.168 321.855 537.359 cv
321.402 537.555 320.883 537.648 320.293 537.652 cv
319.715 537.648 319.211 537.566 318.785 537.395 cv
318.355 537.227 318 536.977 317.715 536.648 cv
317.426 536.32 317.211 535.926 317.074 535.457 cv
316.934 534.992 316.867 534.461 316.867 533.863 cv
316.867 533.297 316.938 532.77 317.086 532.289 cv
317.23 531.809 317.457 531.395 317.758 531.043 cv
318.055 530.695 318.426 530.426 318.875 530.234 cv
319.32 530.043 319.844 529.945 320.441 529.945 cv
321.02 529.945 321.52 530.031 321.949 530.203 cv
322.375 530.375 322.734 530.625 323.02 530.953 cv
323.305 531.281 323.52 531.68 323.664 532.145 cv
323.805 532.613 323.875 533.141 323.879 533.723 cv
cp
322.547 533.809 mo
322.543 533.434 322.508 533.074 322.441 532.734 cv
322.367 532.398 322.25 532.105 322.09 531.848 cv
321.926 531.598 321.707 531.395 321.43 531.242 cv
321.148 531.098 320.801 531.023 320.391 531.02 cv
320.004 531.023 319.676 531.09 319.402 531.223 cv
319.125 531.359 318.898 531.551 318.723 531.797 cv
318.543 532.043 318.41 532.336 318.328 532.672 cv
318.238 533.012 318.195 533.379 318.199 533.777 cv
318.195 534.164 318.23 534.527 318.305 534.863 cv
318.371 535.203 318.488 535.496 318.656 535.746 cv
318.82 536 319.043 536.203 319.32 536.348 cv
319.598 536.5 319.945 536.574 320.359 536.57 cv
320.734 536.574 321.063 536.504 321.344 536.367 cv
321.621 536.234 321.848 536.047 322.027 535.797 cv
322.203 535.555 322.332 535.262 322.418 534.926 cv
322.5 534.59 322.543 534.219 322.547 533.809 cv
cp
f
329.609 527.41 mo
329.605 527.512 329.602 527.59 329.594 527.648 cv
329.582 527.711 329.57 527.762 329.559 527.793 cv
329.543 527.832 329.527 527.855 329.508 527.867 cv
329.484 527.883 329.457 527.891 329.43 527.887 cv
329.391 527.891 329.344 527.879 329.293 527.852 cv
329.234 527.832 329.168 527.805 329.094 527.773 cv
329.012 527.746 328.922 527.719 328.816 527.695 cv
328.707 527.672 328.582 527.66 328.449 527.66 cv
328.254 527.66 328.09 527.691 327.957 527.754 cv
327.816 527.816 327.707 527.914 327.629 528.047 cv
327.543 528.18 327.484 528.352 327.449 528.562 cv
327.41 528.773 327.391 529.031 327.395 529.328 cv
327.395 530.094 li
328.961 530.094 li
329 530.098 329.035 530.105 329.066 530.121 cv
329.094 530.141 329.121 530.172 329.145 530.215 cv
329.168 530.262 329.184 530.32 329.199 530.383 cv
329.207 530.453 329.215 530.535 329.219 530.629 cv
329.215 530.82 329.191 530.953 329.148 531.035 cv
329.098 531.121 329.035 531.164 328.961 531.16 cv
327.395 531.16 li
327.395 537.309 li
327.391 537.355 327.383 537.391 327.363 537.414 cv
327.34 537.445 327.305 537.469 327.258 537.488 cv
327.207 537.508 327.141 537.52 327.059 537.535 cv
326.973 537.543 326.867 537.551 326.75 537.551 cv
326.621 537.551 326.52 537.543 326.438 537.535 cv
326.352 537.52 326.285 537.508 326.238 537.488 cv
326.188 537.469 326.152 537.445 326.133 537.414 cv
326.109 537.391 326.098 537.355 326.102 537.309 cv
326.102 531.16 li
325.113 531.16 li
325.027 531.164 324.965 531.121 324.926 531.035 cv
324.883 530.953 324.859 530.82 324.863 530.629 cv
324.859 530.535 324.867 530.453 324.879 530.383 cv
324.887 530.32 324.902 530.262 324.926 530.215 cv
324.945 530.172 324.969 530.141 325.004 530.121 cv
325.031 530.105 325.07 530.098 325.113 530.094 cv
326.102 530.094 li
326.102 529.367 li
326.098 528.883 326.145 528.465 326.238 528.109 cv
326.328 527.762 326.465 527.473 326.652 527.25 cv
326.836 527.027 327.07 526.863 327.359 526.754 cv
327.641 526.648 327.977 526.594 328.363 526.594 cv
328.539 526.594 328.715 526.613 328.891 526.645 cv
329.059 526.684 329.191 526.719 329.289 526.754 cv
329.379 526.797 329.441 526.832 329.477 526.859 cv
329.504 526.895 329.531 526.934 329.555 526.98 cv
329.574 527.031 329.586 527.094 329.598 527.16 cv
329.602 527.234 329.605 527.316 329.609 527.41 cv
cp
f
339.809 534.676 mo
339.805 535.148 339.719 535.57 339.547 535.937 cv
339.371 536.312 339.129 536.625 338.82 536.879 cv
338.512 537.137 338.148 537.328 337.73 537.457 cv
337.309 537.586 336.859 537.648 336.379 537.652 cv
336.039 537.648 335.723 537.621 335.438 537.566 cv
335.148 537.508 334.895 537.441 334.668 537.355 cv
334.441 537.277 334.25 537.191 334.098 537.098 cv
333.941 537.012 333.836 536.934 333.777 536.871 cv
333.719 536.809 333.676 536.73 333.648 536.637 cv
333.617 536.543 333.602 536.414 333.605 536.25 cv
333.602 536.137 333.605 536.043 333.621 535.965 cv
333.629 535.891 333.645 535.828 333.668 535.781 cv
333.684 535.734 333.711 535.703 333.746 535.684 cv
333.773 535.668 333.809 535.66 333.852 535.656 cv
333.922 535.66 334.023 535.703 334.16 535.789 cv
334.289 535.879 334.461 535.977 334.672 536.078 cv
334.879 536.187 335.129 536.285 335.422 536.371 cv
335.715 536.465 336.055 536.508 336.441 536.508 cv
336.73 536.508 336.996 536.469 337.238 536.391 cv
337.477 536.312 337.684 536.203 337.863 536.059 cv
338.035 535.918 338.172 535.742 338.266 535.531 cv
338.359 535.324 338.406 535.09 338.406 534.824 cv
338.406 534.543 338.34 534.297 338.211 534.09 cv
338.078 533.891 337.906 533.715 337.695 533.559 cv
337.48 533.41 337.238 533.27 336.965 533.137 cv
336.691 533.012 336.41 532.879 336.129 532.746 cv
335.84 532.613 335.563 532.469 335.293 532.305 cv
335.023 532.148 334.781 531.957 334.57 531.738 cv
334.352 531.52 334.18 531.266 334.051 530.969 cv
333.914 530.68 333.848 530.328 333.852 529.914 cv
333.848 529.496 333.926 529.121 334.082 528.789 cv
334.234 528.461 334.445 528.184 334.723 527.957 cv
334.992 527.738 335.316 527.566 335.695 527.449 cv
336.07 527.332 336.48 527.273 336.918 527.273 cv
337.137 527.273 337.359 527.293 337.59 527.332 cv
337.813 527.371 338.023 527.422 338.227 527.484 cv
338.422 527.551 338.602 527.625 338.762 527.703 cv
338.914 527.785 339.016 527.852 339.07 527.898 cv
339.117 527.953 339.152 527.992 339.168 528.016 cv
339.184 528.047 339.195 528.082 339.207 528.125 cv
339.215 528.172 339.223 528.227 339.23 528.285 cv
339.234 528.352 339.238 528.43 339.238 528.527 cv
339.238 528.621 339.234 528.707 339.227 528.777 cv
339.219 528.855 339.207 528.914 339.191 528.961 cv
339.176 529.008 339.152 529.043 339.125 529.066 cv
339.094 529.09 339.063 529.102 339.027 529.102 cv
338.969 529.102 338.879 529.066 338.758 528.996 cv
338.633 528.926 338.48 528.844 338.309 528.75 cv
338.129 528.66 337.922 528.578 337.684 528.5 cv
337.438 528.426 337.168 528.387 336.871 528.387 cv
336.59 528.387 336.344 528.426 336.137 528.5 cv
335.926 528.578 335.754 528.68 335.621 528.801 cv
335.484 528.926 335.383 529.07 335.316 529.242 cv
335.25 529.414 335.219 529.598 335.219 529.789 cv
335.219 530.074 335.281 530.316 335.41 530.516 cv
335.539 530.719 335.711 530.898 335.93 531.051 cv
336.141 531.211 336.387 531.352 336.664 531.48 cv
336.938 531.613 337.219 531.746 337.508 531.875 cv
337.793 532.008 338.074 532.152 338.348 532.309 cv
338.621 532.469 338.867 532.656 339.086 532.871 cv
339.301 533.09 339.473 533.344 339.609 533.637 cv
339.738 533.93 339.805 534.277 339.809 534.676 cv
cp
f
347.574 537.309 mo
347.57 537.355 347.563 537.391 347.547 537.414 cv
347.527 537.445 347.492 537.469 347.449 537.488 cv
347.402 537.508 347.344 537.52 347.27 537.535 cv
347.191 537.543 347.098 537.551 346.992 537.551 cv
346.867 537.551 346.77 537.543 346.699 537.535 cv
346.621 537.52 346.563 537.508 346.52 537.488 cv
346.473 537.469 346.441 537.445 346.43 537.414 cv
346.41 537.391 346.402 537.355 346.406 537.309 cv
346.406 536.383 li
346.004 536.828 345.609 537.148 345.223 537.348 cv
344.828 537.551 344.434 537.648 344.039 537.652 cv
343.566 537.648 343.172 537.574 342.855 537.418 cv
342.535 537.266 342.277 537.055 342.082 536.785 cv
341.879 536.52 341.738 536.207 341.656 535.848 cv
341.566 535.492 341.523 535.059 341.527 534.551 cv
341.527 530.297 li
341.523 530.258 341.531 530.223 341.555 530.191 cv
341.57 530.164 341.605 530.141 341.66 530.113 cv
341.707 530.094 341.777 530.078 341.863 530.066 cv
341.945 530.062 342.047 530.059 342.176 530.055 cv
342.297 530.059 342.402 530.062 342.488 530.066 cv
342.57 530.078 342.637 530.094 342.684 530.113 cv
342.73 530.141 342.766 530.164 342.789 530.191 cv
342.809 530.223 342.816 530.258 342.82 530.297 cv
342.82 534.379 li
342.816 534.793 342.848 535.121 342.91 535.367 cv
342.969 535.613 343.059 535.824 343.184 535.996 cv
343.301 536.176 343.457 536.309 343.648 536.402 cv
343.832 536.5 344.051 536.551 344.301 536.547 cv
344.621 536.551 344.941 536.434 345.266 536.203 cv
345.582 535.977 345.922 535.641 346.281 535.195 cv
346.281 530.297 li
346.281 530.258 346.289 530.223 346.309 530.191 cv
346.324 530.164 346.359 530.141 346.414 530.113 cv
346.465 530.094 346.531 530.078 346.613 530.066 cv
346.691 530.062 346.797 530.059 346.93 530.055 cv
347.051 530.059 347.156 530.062 347.242 530.066 cv
347.324 530.078 347.387 530.094 347.434 530.113 cv
347.477 530.141 347.512 530.164 347.539 530.191 cv
347.559 530.223 347.57 530.258 347.574 530.297 cv
cp
f
356.434 533.707 mo
356.43 534.316 356.363 534.867 356.234 535.352 cv
356.098 535.84 355.902 536.254 355.648 536.594 cv
355.391 536.937 355.074 537.199 354.703 537.379 cv
354.328 537.562 353.902 537.648 353.418 537.652 cv
353.191 537.648 352.984 537.629 352.797 537.586 cv
352.609 537.539 352.422 537.469 352.242 537.371 cv
352.055 537.273 351.875 537.148 351.695 536.996 cv
351.512 536.848 351.32 536.668 351.121 536.453 cv
351.121 537.309 li
351.121 537.355 351.109 537.391 351.09 537.418 cv
351.066 537.453 351.031 537.477 350.988 537.492 cv
350.938 537.508 350.879 537.52 350.813 537.535 cv
350.738 537.543 350.648 537.551 350.543 537.551 cv
350.434 537.551 350.348 537.543 350.277 537.535 cv
350.203 537.52 350.141 537.508 350.098 537.492 cv
350.047 537.477 350.016 537.453 350.004 537.418 cv
349.984 537.391 349.977 537.355 349.98 537.309 cv
349.98 526.898 li
349.977 526.859 349.988 526.824 350.008 526.789 cv
350.023 526.762 350.055 526.734 350.109 526.711 cv
350.156 526.691 350.223 526.676 350.309 526.664 cv
350.387 526.656 350.492 526.652 350.621 526.648 cv
350.75 526.652 350.855 526.656 350.941 526.664 cv
351.02 526.676 351.086 526.691 351.133 526.711 cv
351.18 526.734 351.211 526.762 351.234 526.789 cv
351.25 526.824 351.262 526.859 351.266 526.898 cv
351.266 531.098 li
351.473 530.887 351.676 530.707 351.871 530.562 cv
352.066 530.418 352.254 530.301 352.441 530.207 cv
352.625 530.121 352.813 530.055 353.004 530.008 cv
353.188 529.969 353.387 529.945 353.598 529.945 cv
354.102 529.945 354.535 530.047 354.902 530.25 cv
355.262 530.453 355.555 530.727 355.781 531.062 cv
356.004 531.406 356.172 531.805 356.277 532.262 cv
356.379 532.719 356.43 533.199 356.434 533.707 cv
cp
355.102 533.855 mo
355.098 533.5 355.07 533.152 355.02 532.812 cv
354.961 532.477 354.867 532.18 354.73 531.918 cv
354.594 531.66 354.414 531.449 354.191 531.289 cv
353.965 531.133 353.684 531.055 353.352 531.051 cv
353.184 531.055 353.02 531.078 352.859 531.121 cv
352.695 531.172 352.531 531.25 352.363 531.355 cv
352.195 531.469 352.02 531.609 351.844 531.777 cv
351.66 531.953 351.469 532.168 351.266 532.422 cv
351.266 535.219 li
351.621 535.652 351.961 535.984 352.285 536.207 cv
352.609 536.437 352.945 536.551 353.297 536.547 cv
353.617 536.551 353.895 536.473 354.129 536.312 cv
354.355 536.16 354.543 535.953 354.688 535.691 cv
354.832 535.437 354.938 535.148 355.004 534.828 cv
355.066 534.512 355.098 534.187 355.102 533.855 cv
cp
f
361.586 533.57 mo
361.586 533.773 361.563 533.91 361.516 533.988 cv
361.469 534.066 361.398 534.105 361.313 534.105 cv
358.055 534.105 li
357.961 534.105 357.895 534.066 357.848 533.984 cv
357.801 533.906 357.777 533.77 357.777 533.57 cv
357.777 533.375 357.801 533.234 357.848 533.156 cv
357.895 533.078 357.961 533.039 358.055 533.039 cv
361.313 533.039 li
361.352 533.039 361.391 533.047 361.426 533.062 cv
361.457 533.078 361.484 533.109 361.512 533.152 cv
361.531 533.199 361.551 533.254 361.566 533.32 cv
361.578 533.391 361.586 533.477 361.586 533.57 cv
cp
f
364.84 537.301 mo
364.836 537.344 364.828 537.379 364.809 537.41 cv
364.785 537.441 364.746 537.469 364.699 537.484 cv
364.645 537.504 364.578 537.516 364.492 537.531 cv
364.406 537.543 364.297 537.551 364.172 537.551 cv
364.043 537.551 363.938 537.543 363.852 537.531 cv
363.762 537.516 363.691 537.504 363.641 537.484 cv
363.586 537.469 363.551 537.441 363.531 537.41 cv
363.508 537.379 363.496 537.344 363.5 537.301 cv
363.5 527.621 li
363.496 527.582 363.508 527.547 363.535 527.512 cv
363.555 527.484 363.594 527.457 363.652 527.437 cv
363.703 527.422 363.773 527.406 363.863 527.391 cv
363.945 527.379 364.047 527.375 364.172 527.371 cv
364.297 527.375 364.406 527.379 364.492 527.391 cv
364.578 527.406 364.645 527.422 364.699 527.437 cv
364.746 527.457 364.785 527.484 364.809 527.512 cv
364.828 527.547 364.836 527.582 364.84 527.621 cv
cp
f
377.828 537.309 mo
377.824 537.355 377.816 537.391 377.797 537.414 cv
377.773 537.445 377.738 537.469 377.695 537.488 cv
377.645 537.508 377.578 537.52 377.5 537.535 cv
377.414 537.543 377.313 537.551 377.188 537.551 cv
377.055 537.551 376.945 537.543 376.867 537.535 cv
376.781 537.52 376.715 537.508 376.668 537.488 cv
376.613 537.469 376.578 537.445 376.563 537.414 cv
376.539 537.391 376.531 537.355 376.531 537.309 cv
376.531 533.047 li
376.531 532.754 376.504 532.484 376.453 532.238 cv
376.398 531.996 376.316 531.785 376.203 531.605 cv
376.09 531.43 375.945 531.293 375.77 531.199 cv
375.59 531.105 375.379 531.059 375.145 531.059 cv
374.848 531.059 374.551 531.176 374.254 531.402 cv
373.949 531.637 373.621 531.969 373.266 532.406 cv
373.266 537.309 li
373.262 537.355 373.25 537.391 373.234 537.414 cv
373.211 537.445 373.18 537.469 373.133 537.488 cv
373.082 537.508 373.016 537.52 372.934 537.535 cv
372.848 537.543 372.742 537.551 372.621 537.551 cv
372.5 537.551 372.398 537.543 372.313 537.535 cv
372.227 537.52 372.156 537.508 372.109 537.488 cv
372.055 537.469 372.023 537.445 372.008 537.414 cv
371.988 537.391 371.977 537.355 371.98 537.309 cv
371.98 533.047 li
371.977 532.754 371.949 532.484 371.895 532.238 cv
371.836 531.996 371.75 531.785 371.637 531.605 cv
371.523 531.43 371.379 531.293 371.207 531.199 cv
371.027 531.105 370.82 531.059 370.586 531.059 cv
370.285 531.059 369.988 531.176 369.688 531.402 cv
369.387 531.637 369.059 531.969 368.707 532.406 cv
368.707 537.309 li
368.703 537.355 368.691 537.391 368.676 537.414 cv
368.652 537.445 368.621 537.469 368.574 537.488 cv
368.527 537.508 368.461 537.52 368.383 537.535 cv
368.297 537.543 368.191 537.551 368.063 537.551 cv
367.934 537.551 367.828 537.543 367.75 537.535 cv
367.664 537.52 367.598 537.508 367.551 537.488 cv
367.496 537.469 367.465 537.445 367.449 537.414 cv
367.43 537.391 367.418 537.355 367.422 537.309 cv
367.422 530.297 li
367.418 530.258 367.426 530.223 367.445 530.191 cv
367.457 530.164 367.488 530.141 367.539 530.113 cv
367.582 530.094 367.645 530.078 367.719 530.066 cv
367.789 530.062 367.883 530.059 368.008 530.055 cv
368.117 530.059 368.215 530.062 368.293 530.066 cv
368.367 530.078 368.426 530.094 368.469 530.113 cv
368.508 530.141 368.535 530.164 368.555 530.191 cv
368.57 530.223 368.578 530.258 368.582 530.297 cv
368.582 531.223 li
368.973 530.781 369.355 530.461 369.73 530.254 cv
370.098 530.051 370.477 529.945 370.859 529.945 cv
371.148 529.945 371.406 529.98 371.641 530.047 cv
371.867 530.117 372.074 530.211 372.254 530.332 cv
372.43 530.453 372.578 530.598 372.707 530.766 cv
372.828 530.937 372.934 531.129 373.02 531.332 cv
373.25 531.082 373.473 530.867 373.684 530.687 cv
373.895 530.516 374.098 530.371 374.293 530.258 cv
374.488 530.152 374.676 530.074 374.859 530.02 cv
375.043 529.973 375.23 529.945 375.418 529.945 cv
375.871 529.945 376.25 530.027 376.555 530.184 cv
376.859 530.348 377.105 530.559 377.301 530.82 cv
377.488 531.086 377.625 531.395 377.707 531.75 cv
377.785 532.105 377.824 532.48 377.828 532.875 cv
cp
f
385.457 537.316 mo
385.453 537.379 385.434 537.426 385.395 537.457 cv
385.352 537.488 385.293 537.512 385.223 537.527 cv
385.145 537.543 385.039 537.551 384.902 537.551 cv
384.766 537.551 384.656 537.543 384.578 537.527 cv
384.492 537.512 384.434 537.488 384.402 537.457 cv
384.363 537.426 384.348 537.379 384.352 537.316 cv
384.352 536.617 li
384.043 536.945 383.699 537.199 383.324 537.379 cv
382.945 537.562 382.547 537.648 382.129 537.652 cv
381.754 537.648 381.422 537.602 381.125 537.508 cv
380.828 537.41 380.574 537.273 380.363 537.09 cv
380.152 536.91 379.988 536.687 379.871 536.422 cv
379.754 536.16 379.695 535.859 379.699 535.516 cv
379.695 535.125 379.773 534.781 379.938 534.488 cv
380.094 534.199 380.328 533.957 380.633 533.766 cv
380.934 533.574 381.301 533.43 381.738 533.332 cv
382.172 533.238 382.664 533.191 383.211 533.187 cv
384.18 533.187 li
384.18 532.641 li
384.176 532.371 384.148 532.133 384.094 531.926 cv
384.035 531.719 383.941 531.547 383.816 531.406 cv
383.684 531.27 383.52 531.164 383.32 531.094 cv
383.113 531.023 382.863 530.988 382.574 530.988 cv
382.254 530.988 381.969 531.027 381.719 531.102 cv
381.461 531.18 381.242 531.262 381.055 531.352 cv
380.867 531.445 380.707 531.531 380.582 531.602 cv
380.449 531.68 380.355 531.715 380.297 531.715 cv
380.254 531.715 380.219 531.707 380.188 531.684 cv
380.156 531.668 380.129 531.637 380.105 531.59 cv
380.082 531.551 380.063 531.496 380.055 531.43 cv
380.039 531.367 380.035 531.297 380.039 531.215 cv
380.035 531.09 380.043 530.984 380.066 530.906 cv
380.082 530.832 380.129 530.762 380.199 530.691 cv
380.27 530.625 380.391 530.547 380.563 530.457 cv
380.734 530.367 380.93 530.285 381.152 530.207 cv
381.375 530.137 381.621 530.074 381.887 530.02 cv
382.152 529.973 382.418 529.945 382.691 529.945 cv
383.191 529.945 383.621 530.004 383.973 530.117 cv
384.324 530.234 384.609 530.402 384.832 530.621 cv
385.047 530.844 385.207 531.117 385.309 531.441 cv
385.406 531.773 385.453 532.156 385.457 532.586 cv
cp
384.18 534.113 mo
383.078 534.113 li
382.723 534.117 382.418 534.148 382.16 534.203 cv
381.898 534.266 381.684 534.352 381.512 534.469 cv
381.34 534.586 381.215 534.727 381.137 534.891 cv
381.055 535.055 381.012 535.242 381.016 535.453 cv
381.012 535.82 381.129 536.113 381.359 536.324 cv
381.59 536.543 381.914 536.648 382.332 536.648 cv
382.668 536.648 382.98 536.562 383.27 536.391 cv
383.559 536.219 383.859 535.957 384.18 535.602 cv
cp
f
393.676 530.613 mo
393.672 530.797 393.648 530.93 393.602 531.008 cv
393.551 531.09 393.488 531.129 393.414 531.129 cv
392.406 531.129 li
392.586 531.316 392.715 531.523 392.789 531.75 cv
392.859 531.977 392.895 532.211 392.898 532.453 cv
392.895 532.859 392.828 533.219 392.703 533.531 cv
392.57 533.844 392.387 534.109 392.145 534.32 cv
391.902 534.539 391.613 534.703 391.285 534.816 cv
390.949 534.934 390.582 534.992 390.18 534.988 cv
389.891 534.992 389.617 534.953 389.363 534.875 cv
389.102 534.801 388.906 534.707 388.77 534.59 cv
388.676 534.687 388.598 534.793 388.539 534.91 cv
388.477 535.031 388.445 535.168 388.449 535.32 cv
388.445 535.504 388.531 535.656 388.703 535.773 cv
388.871 535.898 389.094 535.961 389.375 535.969 cv
391.207 536.047 li
391.555 536.059 391.871 536.105 392.164 536.191 cv
392.453 536.277 392.707 536.402 392.922 536.559 cv
393.133 536.719 393.301 536.91 393.422 537.141 cv
393.539 537.375 393.598 537.645 393.602 537.949 cv
393.598 538.27 393.531 538.574 393.398 538.867 cv
393.262 539.156 393.055 539.41 392.777 539.633 cv
392.496 539.852 392.141 540.027 391.711 540.156 cv
391.281 540.281 390.773 540.344 390.188 540.348 cv
389.617 540.344 389.133 540.297 388.738 540.203 cv
388.34 540.105 388.016 539.973 387.762 539.809 cv
387.508 539.641 387.324 539.445 387.211 539.215 cv
387.094 538.98 387.035 538.727 387.039 538.461 cv
387.035 538.289 387.055 538.125 387.102 537.965 cv
387.141 537.801 387.203 537.648 387.289 537.504 cv
387.371 537.359 387.48 537.223 387.609 537.086 cv
387.734 536.957 387.879 536.824 388.051 536.695 cv
387.793 536.566 387.605 536.402 387.484 536.203 cv
387.363 536.008 387.305 535.797 387.305 535.562 cv
387.305 535.25 387.367 534.965 387.496 534.715 cv
387.625 534.465 387.785 534.242 387.98 534.043 cv
387.816 533.852 387.691 533.637 387.598 533.395 cv
387.504 533.156 387.457 532.863 387.457 532.516 cv
387.457 532.121 387.523 531.762 387.66 531.441 cv
387.793 531.125 387.98 530.859 388.223 530.641 cv
388.461 530.426 388.746 530.258 389.082 530.137 cv
389.414 530.023 389.781 529.965 390.18 529.961 cv
390.391 529.965 390.59 529.977 390.773 529.996 cv
390.957 530.023 391.129 530.055 391.293 530.094 cv
393.414 530.094 li
393.5 530.098 393.566 530.141 393.609 530.223 cv
393.652 530.312 393.672 530.441 393.676 530.613 cv
cp
391.668 532.461 mo
391.664 531.988 391.531 531.617 391.273 531.344 cv
391.008 531.078 390.637 530.941 390.156 530.941 cv
389.902 530.941 389.684 530.984 389.504 531.066 cv
389.316 531.152 389.164 531.266 389.043 531.41 cv
388.922 531.559 388.832 531.727 388.773 531.914 cv
388.711 532.102 388.68 532.301 388.684 532.508 cv
388.68 532.973 388.813 533.336 389.074 533.602 cv
389.336 533.867 389.703 534 390.18 533.996 cv
390.43 534 390.648 533.961 390.84 533.875 cv
391.023 533.797 391.18 533.684 391.305 533.543 cv
391.426 533.402 391.516 533.238 391.578 533.047 cv
391.633 532.863 391.664 532.668 391.668 532.461 cv
cp
392.313 538.02 mo
392.309 537.715 392.184 537.484 391.941 537.32 cv
391.691 537.16 391.359 537.07 390.941 537.059 cv
389.125 536.996 li
388.957 537.129 388.82 537.254 388.719 537.367 cv
388.609 537.484 388.527 537.594 388.465 537.703 cv
388.402 537.809 388.359 537.914 388.336 538.02 cv
388.313 538.121 388.301 538.227 388.301 538.336 cv
388.301 538.672 388.469 538.926 388.813 539.105 cv
389.152 539.277 389.633 539.367 390.25 539.367 cv
390.637 539.367 390.961 539.328 391.227 539.254 cv
391.484 539.176 391.695 539.074 391.859 538.953 cv
392.016 538.824 392.133 538.684 392.207 538.523 cv
392.273 538.363 392.309 538.195 392.313 538.02 cv
cp
f
401.238 533.5 mo
401.234 533.703 401.184 533.844 401.086 533.93 cv
400.98 534.016 400.863 534.059 400.738 534.059 cv
396.121 534.059 li
396.117 534.449 396.156 534.801 396.238 535.113 cv
396.313 535.426 396.445 535.695 396.629 535.914 cv
396.809 536.141 397.043 536.312 397.34 536.43 cv
397.629 536.555 397.988 536.613 398.414 536.609 cv
398.746 536.613 399.043 536.586 399.305 536.527 cv
399.566 536.477 399.793 536.414 399.984 536.344 cv
400.172 536.277 400.328 536.219 400.453 536.16 cv
400.574 536.109 400.668 536.082 400.73 536.078 cv
400.766 536.082 400.797 536.09 400.828 536.105 cv
400.855 536.125 400.879 536.152 400.898 536.187 cv
400.91 536.227 400.922 536.277 400.934 536.34 cv
400.938 536.406 400.941 536.484 400.945 536.578 cv
400.941 536.648 400.938 536.707 400.938 536.754 cv
400.93 536.801 400.926 536.844 400.918 536.883 cv
400.91 536.922 400.895 536.957 400.879 536.988 cv
400.855 537.02 400.832 537.051 400.809 537.078 cv
400.777 537.109 400.695 537.156 400.555 537.219 cv
400.414 537.285 400.23 537.348 400.008 537.41 cv
399.781 537.473 399.523 537.527 399.23 537.578 cv
398.938 537.625 398.625 537.648 398.293 537.652 cv
397.715 537.648 397.207 537.57 396.777 537.41 cv
396.34 537.25 395.977 537.012 395.684 536.695 cv
395.383 536.379 395.16 535.984 395.012 535.504 cv
394.863 535.027 394.789 534.469 394.789 533.832 cv
394.789 533.234 394.863 532.695 395.02 532.211 cv
395.172 531.734 395.398 531.324 395.695 530.988 cv
395.988 530.652 396.344 530.395 396.758 530.215 cv
397.172 530.035 397.637 529.945 398.152 529.945 cv
398.703 529.945 399.172 530.035 399.559 530.211 cv
399.945 530.391 400.262 530.629 400.516 530.926 cv
400.762 531.227 400.945 531.578 401.063 531.977 cv
401.176 532.383 401.234 532.812 401.238 533.266 cv
cp
399.945 533.117 mo
399.961 532.441 399.809 531.91 399.492 531.527 cv
399.176 531.145 398.707 530.953 398.09 530.949 cv
397.766 530.953 397.484 531.012 397.246 531.129 cv
397.004 531.25 396.805 531.41 396.645 531.605 cv
396.48 531.805 396.355 532.035 396.27 532.297 cv
396.18 532.559 396.129 532.832 396.121 533.117 cv
cp
f
407.605 535.398 mo
407.602 535.762 407.535 536.082 407.406 536.359 cv
407.273 536.641 407.086 536.875 406.844 537.066 cv
406.598 537.262 406.305 537.406 405.969 537.504 cv
405.629 537.602 405.258 537.648 404.855 537.652 cv
404.602 537.648 404.363 537.629 404.141 537.594 cv
403.914 537.551 403.715 537.504 403.535 537.445 cv
403.355 537.387 403.203 537.324 403.078 537.258 cv
402.953 537.195 402.859 537.137 402.805 537.082 cv
402.746 537.031 402.707 536.961 402.684 536.863 cv
402.656 536.773 402.645 536.645 402.645 536.484 cv
402.645 536.387 402.648 536.305 402.66 536.234 cv
402.668 536.168 402.68 536.113 402.699 536.07 cv
402.711 536.031 402.734 536 402.762 535.98 cv
402.789 535.965 402.82 535.957 402.859 535.953 cv
402.914 535.957 403 535.992 403.113 536.059 cv
403.223 536.133 403.359 536.211 403.527 536.289 cv
403.688 536.375 403.879 536.449 404.105 536.52 cv
404.324 536.59 404.582 536.625 404.879 536.625 cv
405.094 536.625 405.293 536.602 405.473 536.555 cv
405.648 536.508 405.801 536.441 405.93 536.348 cv
406.059 536.262 406.16 536.145 406.23 536 cv
406.301 535.863 406.336 535.695 406.336 535.5 cv
406.336 535.305 406.285 535.141 406.184 535.004 cv
406.082 534.871 405.945 534.75 405.781 534.645 cv
405.613 534.543 405.43 534.453 405.223 534.367 cv
405.012 534.289 404.797 534.203 404.578 534.113 cv
404.359 534.027 404.145 533.926 403.934 533.812 cv
403.723 533.703 403.531 533.57 403.367 533.406 cv
403.195 533.25 403.063 533.055 402.965 532.828 cv
402.859 532.605 402.809 532.34 402.813 532.027 cv
402.809 531.754 402.863 531.488 402.973 531.234 cv
403.078 530.984 403.238 530.766 403.453 530.574 cv
403.664 530.387 403.93 530.234 404.25 530.117 cv
404.57 530.004 404.941 529.945 405.371 529.945 cv
405.555 529.945 405.742 529.961 405.93 529.992 cv
406.113 530.023 406.281 530.062 406.438 530.109 cv
406.586 530.156 406.715 530.207 406.824 530.262 cv
406.926 530.316 407.008 530.367 407.066 530.406 cv
407.117 530.453 407.152 530.488 407.176 530.516 cv
407.191 530.547 407.207 530.582 407.215 530.617 cv
407.223 530.66 407.23 530.707 407.238 530.762 cv
407.246 530.82 407.25 530.891 407.25 530.973 cv
407.25 531.062 407.246 531.141 407.238 531.203 cv
407.23 531.273 407.215 531.324 407.199 531.363 cv
407.176 531.406 407.156 531.437 407.133 531.453 cv
407.105 531.473 407.074 531.48 407.047 531.48 cv
406.996 531.48 406.93 531.453 406.844 531.395 cv
406.754 531.34 406.641 531.277 406.5 531.211 cv
406.359 531.148 406.191 531.09 406.004 531.027 cv
405.813 530.973 405.598 530.941 405.355 530.941 cv
405.133 530.941 404.941 530.969 404.777 531.016 cv
404.609 531.07 404.473 531.141 404.367 531.227 cv
404.262 531.32 404.18 531.426 404.129 531.551 cv
404.07 531.676 404.043 531.812 404.047 531.957 cv
404.043 532.16 404.094 532.328 404.199 532.465 cv
404.301 532.605 404.438 532.727 404.605 532.828 cv
404.77 532.934 404.961 533.027 405.176 533.109 cv
405.387 533.195 405.602 533.281 405.824 533.367 cv
406.043 533.457 406.262 533.559 406.48 533.664 cv
406.695 533.773 406.887 533.902 407.055 534.059 cv
407.219 534.215 407.352 534.402 407.453 534.621 cv
407.551 534.84 407.602 535.102 407.605 535.398 cv
cp
f
116.133 13.676 mo
116.129 14.207 116.031 14.672 115.836 15.07 cv
115.637 15.473 115.371 15.809 115.035 16.074 cv
114.695 16.344 114.297 16.543 113.848 16.676 cv
113.395 16.809 112.914 16.875 112.402 16.879 cv
112.051 16.875 111.727 16.848 111.43 16.793 cv
111.129 16.734 110.867 16.668 110.641 16.586 cv
110.41 16.508 110.219 16.422 110.066 16.332 cv
109.914 16.246 109.805 16.168 109.738 16.098 cv
109.668 16.031 109.617 15.934 109.594 15.809 cv
109.563 15.684 109.551 15.5 109.551 15.258 cv
109.551 15.098 109.555 14.965 109.566 14.852 cv
109.574 14.746 109.59 14.656 109.617 14.586 cv
109.637 14.52 109.668 14.473 109.711 14.441 cv
109.746 14.418 109.793 14.402 109.844 14.398 cv
109.914 14.402 110.016 14.445 110.152 14.527 cv
110.281 14.617 110.453 14.711 110.664 14.812 cv
110.871 14.918 111.117 15.016 111.406 15.098 cv
111.691 15.187 112.027 15.23 112.41 15.227 cv
112.66 15.23 112.883 15.199 113.078 15.137 cv
113.273 15.078 113.441 14.992 113.582 14.883 cv
113.719 14.773 113.824 14.641 113.898 14.48 cv
113.969 14.32 114.004 14.141 114.008 13.941 cv
114.004 13.715 113.941 13.52 113.82 13.352 cv
113.691 13.191 113.527 13.047 113.332 12.918 cv
113.129 12.793 112.902 12.672 112.648 12.559 cv
112.395 12.449 112.133 12.332 111.863 12.203 cv
111.59 12.082 111.328 11.937 111.074 11.777 cv
110.82 11.621 110.594 11.434 110.395 11.211 cv
110.191 10.992 110.027 10.73 109.906 10.426 cv
109.781 10.125 109.719 9.76599 109.723 9.34399 cv
109.719 8.86298 109.809 8.43701 109.988 8.07001 cv
110.164 7.70697 110.406 7.40198 110.715 7.15601 cv
111.016 6.91803 111.375 6.73798 111.789 6.617 cv
112.203 6.5 112.641 6.44098 113.102 6.43701 cv
113.34 6.44098 113.578 6.45697 113.82 6.492 cv
114.059 6.53101 114.281 6.58197 114.488 6.64099 cv
114.695 6.703 114.879 6.77301 115.043 6.84802 cv
115.199 6.92999 115.309 6.992 115.363 7.04303 cv
115.414 7.09802 115.449 7.14502 115.469 7.17603 cv
115.484 7.21503 115.5 7.26202 115.516 7.32001 cv
115.527 7.383 115.535 7.45697 115.543 7.547 cv
115.547 7.64099 115.551 7.75403 115.551 7.88702 cv
115.551 8.039 115.547 8.16803 115.539 8.27002 cv
115.531 8.375 115.516 8.461 115.5 8.52301 cv
115.477 8.59399 115.453 8.64099 115.422 8.672 cv
115.387 8.703 115.34 8.71899 115.285 8.71899 cv
115.227 8.71899 115.137 8.68402 115.012 8.60901 cv
114.887 8.539 114.73 8.461 114.551 8.37097 cv
114.367 8.289 114.16 8.211 113.922 8.14099 cv
113.68 8.07397 113.414 8.039 113.133 8.03497 cv
112.906 8.039 112.715 8.06598 112.551 8.117 cv
112.383 8.172 112.242 8.24597 112.133 8.34003 cv
112.02 8.43701 111.938 8.55499 111.883 8.68701 cv
111.828 8.828 111.801 8.96899 111.801 9.117 cv
111.801 9.34399 111.859 9.539 111.984 9.69897 cv
112.102 9.86298 112.266 10.008 112.477 10.133 cv
112.68 10.262 112.914 10.383 113.172 10.492 cv
113.43 10.609 113.695 10.727 113.969 10.848 cv
114.238 10.977 114.5 11.117 114.762 11.273 cv
115.02 11.43 115.254 11.621 115.457 11.84 cv
115.66 12.066 115.82 12.324 115.945 12.621 cv
116.066 12.918 116.129 13.27 116.133 13.676 cv
cp
f
122.852 15.328 mo
122.848 15.465 122.844 15.578 122.84 15.668 cv
122.828 15.762 122.82 15.84 122.809 15.898 cv
122.793 15.961 122.777 16.012 122.762 16.047 cv
122.742 16.09 122.699 16.137 122.641 16.195 cv
122.574 16.258 122.469 16.332 122.32 16.414 cv
122.168 16.504 121.996 16.582 121.805 16.645 cv
121.613 16.715 121.406 16.766 121.18 16.809 cv
120.953 16.848 120.719 16.867 120.484 16.871 cv
119.945 16.867 119.473 16.789 119.059 16.621 cv
118.645 16.457 118.297 16.211 118.02 15.887 cv
117.734 15.562 117.523 15.168 117.383 14.699 cv
117.242 14.234 117.172 13.695 117.172 13.09 cv
117.172 12.395 117.258 11.797 117.43 11.289 cv
117.602 10.785 117.844 10.363 118.16 10.031 cv
118.469 9.69897 118.836 9.453 119.266 9.289 cv
119.688 9.12903 120.156 9.047 120.668 9.047 cv
120.875 9.047 121.078 9.06598 121.281 9.10199 cv
121.477 9.14099 121.664 9.19098 121.84 9.25 cv
122.012 9.31598 122.168 9.38702 122.309 9.461 cv
122.445 9.54303 122.543 9.60901 122.602 9.664 cv
122.656 9.72302 122.695 9.77002 122.723 9.80499 cv
122.742 9.84802 122.762 9.89801 122.777 9.95697 cv
122.789 10.023 122.801 10.102 122.809 10.187 cv
122.816 10.281 122.82 10.391 122.82 10.52 cv
122.82 10.824 122.793 11.035 122.742 11.156 cv
122.688 11.277 122.621 11.34 122.539 11.336 cv
122.449 11.34 122.355 11.305 122.258 11.23 cv
122.156 11.16 122.039 11.078 121.906 10.988 cv
121.773 10.902 121.613 10.82 121.426 10.746 cv
121.238 10.676 121.012 10.641 120.754 10.637 cv
120.242 10.641 119.855 10.836 119.586 11.227 cv
119.313 11.617 119.176 12.191 119.18 12.949 cv
119.176 13.324 119.211 13.656 119.281 13.941 cv
119.348 14.227 119.445 14.465 119.582 14.656 cv
119.711 14.852 119.879 14.996 120.082 15.09 cv
120.281 15.187 120.512 15.234 120.777 15.234 cv
121.043 15.234 121.277 15.195 121.477 15.113 cv
121.668 15.035 121.836 14.945 121.984 14.844 cv
122.125 14.746 122.25 14.656 122.352 14.574 cv
122.449 14.496 122.531 14.457 122.602 14.453 cv
122.645 14.457 122.684 14.469 122.719 14.492 cv
122.746 14.52 122.77 14.566 122.793 14.637 cv
122.809 14.707 122.824 14.797 122.836 14.906 cv
122.844 15.016 122.848 15.156 122.852 15.328 cv
cp
f
130.121 16.457 mo
130.117 16.535 130.09 16.59 130.043 16.629 cv
129.988 16.672 129.906 16.699 129.797 16.719 cv
129.68 16.734 129.516 16.746 129.301 16.746 cv
129.063 16.746 128.891 16.734 128.789 16.719 cv
128.68 16.699 128.605 16.672 128.566 16.629 cv
128.52 16.59 128.5 16.535 128.5 16.457 cv
128.5 15.906 li
128.211 16.215 127.883 16.453 127.52 16.621 cv
127.152 16.793 126.746 16.875 126.301 16.879 cv
125.93 16.875 125.59 16.828 125.281 16.734 cv
124.973 16.641 124.707 16.5 124.48 16.305 cv
124.254 16.117 124.078 15.883 123.953 15.602 cv
123.828 15.324 123.766 14.996 123.77 14.617 cv
123.766 14.219 123.844 13.867 124.004 13.562 cv
124.16 13.266 124.398 13.02 124.715 12.824 cv
125.027 12.633 125.418 12.488 125.887 12.391 cv
126.355 12.301 126.898 12.254 127.516 12.25 cv
128.195 12.25 li
128.195 11.828 li
128.195 11.613 128.172 11.422 128.129 11.258 cv
128.082 11.098 128.008 10.961 127.91 10.848 cv
127.805 10.742 127.672 10.66 127.504 10.605 cv
127.332 10.555 127.121 10.531 126.879 10.527 cv
126.547 10.531 126.254 10.566 126 10.637 cv
125.738 10.711 125.512 10.793 125.316 10.879 cv
125.117 10.973 124.953 11.051 124.824 11.121 cv
124.688 11.195 124.578 11.234 124.5 11.23 cv
124.438 11.234 124.387 11.215 124.348 11.176 cv
124.301 11.141 124.266 11.09 124.238 11.02 cv
124.207 10.957 124.184 10.871 124.172 10.77 cv
124.152 10.672 124.145 10.562 124.148 10.441 cv
124.145 10.281 124.16 10.156 124.188 10.059 cv
124.211 9.96899 124.258 9.883 124.336 9.80499 cv
124.406 9.72998 124.535 9.64801 124.719 9.55902 cv
124.898 9.46899 125.109 9.383 125.355 9.30499 cv
125.598 9.22699 125.867 9.164 126.156 9.11298 cv
126.445 9.06598 126.742 9.04303 127.051 9.039 cv
127.594 9.04303 128.059 9.09399 128.445 9.19897 cv
128.832 9.30902 129.152 9.47302 129.402 9.69098 cv
129.652 9.90997 129.832 10.195 129.949 10.543 cv
130.059 10.895 130.117 11.309 130.121 11.781 cv
cp
128.195 13.48 mo
127.445 13.48 li
127.129 13.484 126.859 13.508 126.637 13.551 cv
126.41 13.602 126.227 13.672 126.09 13.762 cv
125.945 13.859 125.844 13.973 125.781 14.102 cv
125.715 14.238 125.68 14.387 125.684 14.555 cv
125.68 14.848 125.773 15.078 125.961 15.242 cv
126.145 15.41 126.402 15.492 126.73 15.492 cv
127.004 15.492 127.254 15.422 127.488 15.281 cv
127.715 15.141 127.953 14.937 128.195 14.664 cv
cp
f
134.047 16.434 mo
134.043 16.488 134.027 16.531 134 16.57 cv
133.965 16.609 133.91 16.645 133.84 16.668 cv
133.762 16.695 133.664 16.711 133.539 16.727 cv
133.414 16.738 133.254 16.746 133.066 16.746 cv
132.871 16.746 132.715 16.738 132.59 16.727 cv
132.465 16.711 132.363 16.695 132.289 16.668 cv
132.211 16.645 132.156 16.609 132.129 16.57 cv
132.094 16.531 132.078 16.488 132.082 16.434 cv
132.082 6.18701 li
132.078 6.13702 132.094 6.09003 132.129 6.047 cv
132.156 6.008 132.211 5.97302 132.289 5.94098 cv
132.363 5.914 132.465 5.89502 132.59 5.875 cv
132.715 5.86298 132.871 5.85498 133.066 5.85199 cv
133.254 5.85498 133.414 5.86298 133.539 5.875 cv
133.664 5.89502 133.762 5.914 133.84 5.94098 cv
133.91 5.97302 133.965 6.008 134 6.047 cv
134.027 6.09003 134.043 6.13702 134.047 6.18701 cv
cp
f
138.02 16.434 mo
138.016 16.488 138 16.531 137.973 16.57 cv
137.938 16.609 137.883 16.645 137.813 16.668 cv
137.734 16.695 137.637 16.711 137.512 16.727 cv
137.387 16.738 137.227 16.746 137.039 16.746 cv
136.844 16.746 136.688 16.738 136.563 16.727 cv
136.438 16.711 136.336 16.695 136.262 16.668 cv
136.184 16.645 136.129 16.609 136.102 16.57 cv
136.066 16.531 136.051 16.488 136.055 16.434 cv
136.055 9.5 li
136.051 9.44897 136.066 9.40198 136.102 9.36298 cv
136.129 9.32397 136.184 9.29303 136.262 9.26202 cv
136.336 9.23798 136.438 9.21503 136.563 9.19501 cv
136.688 9.18402 136.844 9.17603 137.039 9.172 cv
137.227 9.17603 137.387 9.18402 137.512 9.19501 cv
137.637 9.21503 137.734 9.23798 137.813 9.26202 cv
137.883 9.29303 137.938 9.32397 137.973 9.36298 cv
138 9.40198 138.016 9.44897 138.02 9.5 cv
cp
138.168 7.12903 mo
138.168 7.52698 138.086 7.80103 137.926 7.94897 cv
137.762 8.10199 137.465 8.17603 137.031 8.172 cv
136.586 8.17603 136.285 8.10199 136.137 7.95697 cv
135.98 7.81201 135.906 7.55103 135.906 7.16803 cv
135.906 6.77301 135.984 6.5 136.145 6.34802 cv
136.301 6.19501 136.602 6.117 137.047 6.117 cv
137.48 6.117 137.777 6.19098 137.934 6.34003 cv
138.09 6.48798 138.168 6.75403 138.168 7.12903 cv
cp
f
146.621 16.434 mo
146.617 16.488 146.602 16.531 146.574 16.57 cv
146.539 16.609 146.488 16.645 146.418 16.668 cv
146.344 16.695 146.242 16.711 146.117 16.727 cv
145.988 16.738 145.832 16.746 145.648 16.746 cv
145.453 16.746 145.293 16.738 145.168 16.727 cv
145.039 16.711 144.938 16.695 144.867 16.668 cv
144.789 16.645 144.738 16.609 144.711 16.57 cv
144.676 16.531 144.66 16.488 144.664 16.434 cv
144.664 12.469 li
144.66 12.133 144.637 11.867 144.59 11.672 cv
144.539 11.48 144.465 11.316 144.375 11.18 cv
144.281 11.043 144.164 10.937 144.016 10.859 cv
143.867 10.785 143.691 10.746 143.496 10.746 cv
143.242 10.746 142.992 10.84 142.738 11.02 cv
142.484 11.203 142.219 11.465 141.945 11.812 cv
141.945 16.434 li
141.941 16.488 141.926 16.531 141.898 16.57 cv
141.863 16.609 141.809 16.645 141.738 16.668 cv
141.66 16.695 141.563 16.711 141.438 16.727 cv
141.313 16.738 141.152 16.746 140.965 16.746 cv
140.77 16.746 140.613 16.738 140.488 16.727 cv
140.363 16.711 140.262 16.695 140.188 16.668 cv
140.109 16.645 140.055 16.609 140.027 16.57 cv
139.992 16.531 139.977 16.488 139.98 16.434 cv
139.98 9.48401 li
139.977 9.43701 139.992 9.39099 140.02 9.34802 cv
140.043 9.31201 140.09 9.28101 140.16 9.25 cv
140.227 9.22699 140.313 9.20697 140.422 9.19098 cv
140.527 9.18402 140.66 9.17603 140.824 9.172 cv
140.988 9.17603 141.125 9.18402 141.234 9.19098 cv
141.34 9.20697 141.426 9.22699 141.488 9.25 cv
141.547 9.28101 141.59 9.31201 141.617 9.34802 cv
141.641 9.39099 141.652 9.43701 141.656 9.48401 cv
141.656 10.285 li
142.039 9.875 142.43 9.56201 142.828 9.35199 cv
143.223 9.14502 143.641 9.04303 144.074 9.039 cv
144.543 9.04303 144.941 9.12097 145.27 9.27301 cv
145.594 9.43402 145.855 9.64502 146.055 9.90997 cv
146.254 10.18 146.398 10.492 146.488 10.848 cv
146.574 11.207 146.617 11.637 146.621 12.141 cv
cp
f
154.816 9.96503 mo
154.813 10.219 154.785 10.402 154.73 10.52 cv
154.672 10.641 154.602 10.699 154.523 10.699 cv
153.703 10.699 li
153.816 10.824 153.898 10.969 153.949 11.125 cv
153.996 11.285 154.02 11.449 154.023 11.617 cv
154.02 12.027 153.953 12.387 153.82 12.699 cv
153.684 13.016 153.488 13.281 153.238 13.492 cv
152.984 13.711 152.684 13.875 152.328 13.984 cv
151.969 14.102 151.57 14.156 151.141 14.152 cv
150.914 14.156 150.703 14.129 150.5 14.07 cv
150.297 14.02 150.141 13.957 150.031 13.879 cv
149.969 13.949 149.91 14.027 149.863 14.121 cv
149.813 14.215 149.789 14.32 149.793 14.43 cv
149.789 14.586 149.855 14.707 149.988 14.801 cv
150.117 14.898 150.305 14.953 150.547 14.961 cv
152.238 15.023 li
152.633 15.039 152.984 15.098 153.293 15.191 cv
153.602 15.293 153.863 15.426 154.074 15.598 cv
154.285 15.773 154.445 15.984 154.555 16.227 cv
154.664 16.473 154.719 16.746 154.723 17.059 cv
154.719 17.395 154.645 17.719 154.496 18.027 cv
154.348 18.328 154.121 18.59 153.82 18.816 cv
153.516 19.035 153.137 19.215 152.684 19.348 cv
152.227 19.477 151.695 19.539 151.094 19.543 cv
150.496 19.539 149.992 19.492 149.574 19.402 cv
149.156 19.305 148.813 19.176 148.547 19.012 cv
148.277 18.844 148.082 18.645 147.965 18.418 cv
147.84 18.184 147.781 17.93 147.781 17.656 cv
147.781 17.484 147.801 17.324 147.848 17.168 cv
147.887 17.012 147.953 16.859 148.043 16.719 cv
148.125 16.574 148.23 16.441 148.355 16.309 cv
148.48 16.18 148.621 16.055 148.785 15.934 cv
148.559 15.82 148.387 15.66 148.266 15.449 cv
148.145 15.246 148.086 15.02 148.086 14.773 cv
148.086 14.473 148.152 14.195 148.293 13.937 cv
148.43 13.687 148.613 13.457 148.84 13.254 cv
148.656 13.074 148.512 12.859 148.402 12.602 cv
148.293 12.352 148.238 12.031 148.242 11.648 cv
148.238 11.246 148.309 10.887 148.453 10.562 cv
148.594 10.246 148.793 9.97699 149.051 9.75403 cv
149.305 9.53497 149.609 9.36298 149.961 9.24597 cv
150.313 9.12903 150.703 9.07001 151.133 9.07001 cv
151.352 9.07001 151.559 9.086 151.758 9.10901 cv
151.957 9.14099 152.145 9.17603 152.316 9.21899 cv
154.523 9.21899 li
154.605 9.22302 154.676 9.28101 154.734 9.39099 cv
154.785 9.508 154.813 9.69897 154.816 9.96503 cv
cp
152.301 11.609 mo
152.297 11.238 152.195 10.949 151.988 10.738 cv
151.777 10.535 151.484 10.43 151.109 10.426 cv
150.914 10.43 150.742 10.461 150.602 10.523 cv
150.453 10.59 150.332 10.68 150.238 10.789 cv
150.137 10.902 150.066 11.031 150.023 11.18 cv
149.973 11.328 149.949 11.484 149.953 11.641 cv
149.949 12 150.055 12.277 150.266 12.48 cv
150.473 12.687 150.762 12.793 151.133 12.789 cv
151.328 12.793 151.496 12.762 151.645 12.695 cv
151.785 12.637 151.906 12.551 152.008 12.437 cv
152.102 12.332 152.176 12.203 152.227 12.059 cv
152.273 11.918 152.297 11.77 152.301 11.609 cv
cp
152.762 17.16 mo
152.762 16.922 152.668 16.746 152.48 16.621 cv
152.293 16.5 152.035 16.43 151.707 16.418 cv
150.313 16.379 li
150.176 16.48 150.066 16.574 149.988 16.664 cv
149.906 16.754 149.844 16.84 149.797 16.926 cv
149.746 17.008 149.711 17.09 149.699 17.168 cv
149.68 17.246 149.672 17.324 149.676 17.41 cv
149.672 17.664 149.805 17.863 150.066 18 cv
150.328 18.133 150.699 18.199 151.18 18.203 cv
151.473 18.199 151.719 18.168 151.926 18.113 cv
152.125 18.051 152.289 17.973 152.418 17.875 cv
152.539 17.773 152.629 17.664 152.684 17.543 cv
152.734 17.422 152.762 17.293 152.762 17.16 cv
cp
f
161.012 14.469 mo
161.008 14.867 160.934 15.215 160.789 15.516 cv
160.641 15.816 160.434 16.07 160.164 16.27 cv
159.891 16.477 159.57 16.625 159.203 16.727 cv
158.836 16.824 158.434 16.875 158.004 16.879 cv
157.738 16.875 157.492 16.855 157.258 16.82 cv
157.023 16.777 156.813 16.73 156.625 16.672 cv
156.438 16.613 156.281 16.551 156.156 16.488 cv
156.031 16.426 155.938 16.367 155.883 16.312 cv
155.824 16.258 155.781 16.176 155.754 16.059 cv
155.719 15.945 155.703 15.77 155.707 15.539 cv
155.703 15.391 155.711 15.27 155.723 15.176 cv
155.73 15.086 155.746 15.016 155.77 14.957 cv
155.789 14.906 155.813 14.867 155.848 14.848 cv
155.875 14.832 155.914 14.824 155.961 14.82 cv
156.016 14.824 156.102 14.855 156.215 14.918 cv
156.324 14.984 156.461 15.059 156.633 15.133 cv
156.797 15.215 156.992 15.285 157.211 15.352 cv
157.43 15.422 157.68 15.457 157.965 15.453 cv
158.141 15.457 158.297 15.437 158.438 15.398 cv
158.57 15.363 158.691 15.312 158.797 15.242 cv
158.895 15.176 158.969 15.09 159.023 14.984 cv
159.07 14.883 159.098 14.762 159.102 14.625 cv
159.098 14.469 159.051 14.336 158.957 14.227 cv
158.863 14.117 158.734 14.02 158.578 13.934 cv
158.414 13.852 158.234 13.773 158.039 13.699 cv
157.836 13.629 157.633 13.551 157.422 13.457 cv
157.211 13.371 157.004 13.27 156.809 13.152 cv
156.605 13.043 156.426 12.902 156.27 12.734 cv
156.105 12.57 155.98 12.371 155.887 12.133 cv
155.793 11.902 155.746 11.621 155.746 11.289 cv
155.746 10.961 155.809 10.656 155.938 10.375 cv
156.066 10.102 156.254 9.86298 156.5 9.664 cv
156.742 9.46899 157.039 9.31598 157.391 9.203 cv
157.738 9.09802 158.133 9.04303 158.574 9.039 cv
158.789 9.04303 159 9.05902 159.207 9.086 cv
159.41 9.12097 159.598 9.15997 159.766 9.203 cv
159.93 9.25403 160.07 9.30499 160.188 9.35498 cv
160.301 9.414 160.383 9.461 160.434 9.49597 cv
160.48 9.539 160.516 9.578 160.539 9.61298 cv
160.559 9.65601 160.57 9.703 160.582 9.75403 cv
160.59 9.80902 160.602 9.875 160.609 9.953 cv
160.617 10.039 160.621 10.137 160.621 10.254 cv
160.621 10.395 160.617 10.512 160.609 10.598 cv
160.602 10.691 160.586 10.762 160.57 10.809 cv
160.551 10.863 160.527 10.898 160.5 10.914 cv
160.465 10.937 160.43 10.945 160.391 10.941 cv
160.34 10.945 160.266 10.918 160.172 10.859 cv
160.07 10.809 159.949 10.75 159.801 10.684 cv
159.652 10.625 159.48 10.566 159.285 10.508 cv
159.09 10.457 158.867 10.43 158.621 10.426 cv
158.441 10.43 158.289 10.449 158.16 10.48 cv
158.027 10.52 157.918 10.57 157.84 10.637 cv
157.754 10.707 157.691 10.785 157.652 10.875 cv
157.605 10.969 157.586 11.066 157.59 11.168 cv
157.586 11.328 157.637 11.465 157.738 11.57 cv
157.836 11.684 157.965 11.777 158.129 11.859 cv
158.289 11.945 158.473 12.023 158.68 12.094 cv
158.883 12.168 159.09 12.25 159.301 12.332 cv
159.508 12.422 159.715 12.52 159.926 12.633 cv
160.129 12.746 160.313 12.887 160.473 13.051 cv
160.633 13.219 160.762 13.418 160.863 13.648 cv
160.957 13.883 161.008 14.156 161.012 14.469 cv
cp
f
173.125 12.887 mo
173.121 13.484 173.043 14.027 172.891 14.512 cv
172.73 15.004 172.496 15.422 172.18 15.773 cv
171.863 16.125 171.465 16.398 170.988 16.59 cv
170.508 16.781 169.949 16.875 169.313 16.879 cv
168.691 16.875 168.152 16.793 167.699 16.621 cv
167.238 16.453 166.859 16.203 166.563 15.875 cv
166.258 15.551 166.035 15.148 165.891 14.668 cv
165.746 14.191 165.676 13.645 165.676 13.027 cv
165.676 12.437 165.754 11.898 165.91 11.406 cv
166.066 10.918 166.305 10.496 166.625 10.145 cv
166.941 9.797 167.336 9.52301 167.813 9.328 cv
168.285 9.13702 168.844 9.04303 169.484 9.039 cv
170.109 9.04303 170.648 9.125 171.105 9.29303 cv
171.563 9.46503 171.941 9.71503 172.238 10.039 cv
172.535 10.367 172.758 10.77 172.906 11.246 cv
173.051 11.727 173.121 12.273 173.125 12.887 cv
cp
171.105 12.965 mo
171.102 12.629 171.074 12.312 171.023 12.02 cv
170.965 11.734 170.871 11.484 170.746 11.27 cv
170.613 11.059 170.441 10.891 170.23 10.77 cv
170.012 10.652 169.742 10.594 169.414 10.59 cv
169.125 10.594 168.871 10.648 168.652 10.75 cv
168.434 10.859 168.254 11.016 168.113 11.219 cv
167.973 11.426 167.867 11.672 167.797 11.957 cv
167.727 12.25 167.691 12.578 167.691 12.941 cv
167.691 13.289 167.719 13.605 167.777 13.891 cv
167.832 14.184 167.926 14.434 168.055 14.645 cv
168.18 14.859 168.352 15.023 168.574 15.137 cv
168.789 15.258 169.059 15.316 169.383 15.312 cv
169.676 15.316 169.934 15.262 170.156 15.152 cv
170.371 15.047 170.551 14.895 170.691 14.687 cv
170.832 14.488 170.934 14.242 171.004 13.953 cv
171.066 13.668 171.102 13.34 171.105 12.965 cv
cp
f
178.875 6.83197 mo
178.871 6.98401 178.867 7.10498 178.859 7.19501 cv
178.848 7.289 178.832 7.35901 178.813 7.40601 cv
178.789 7.45697 178.766 7.492 178.742 7.508 cv
178.715 7.52698 178.688 7.53497 178.656 7.53497 cv
178.617 7.53497 178.574 7.52698 178.535 7.508 cv
178.488 7.492 178.434 7.47302 178.371 7.44897 cv
178.301 7.42999 178.227 7.40997 178.141 7.39099 cv
178.051 7.375 177.945 7.367 177.828 7.36298 cv
177.684 7.367 177.563 7.38702 177.465 7.42999 cv
177.363 7.47699 177.281 7.547 177.215 7.64099 cv
177.145 7.73798 177.094 7.86298 177.066 8.01599 cv
177.031 8.16803 177.016 8.35498 177.02 8.578 cv
177.02 9.21899 li
178.289 9.21899 li
178.332 9.22302 178.375 9.23401 178.418 9.258 cv
178.453 9.28497 178.488 9.328 178.516 9.38702 cv
178.539 9.44897 178.559 9.53101 178.574 9.633 cv
178.586 9.73401 178.59 9.86298 178.594 10.012 cv
178.59 10.301 178.566 10.504 178.516 10.625 cv
178.461 10.75 178.383 10.812 178.289 10.809 cv
177.02 10.809 li
177.02 16.434 li
177.016 16.488 177 16.531 176.973 16.57 cv
176.938 16.609 176.887 16.645 176.816 16.668 cv
176.742 16.695 176.641 16.711 176.512 16.727 cv
176.379 16.738 176.219 16.746 176.035 16.746 cv
175.848 16.746 175.691 16.738 175.566 16.727 cv
175.438 16.711 175.336 16.695 175.262 16.668 cv
175.184 16.645 175.133 16.609 175.105 16.57 cv
175.074 16.531 175.059 16.488 175.063 16.434 cv
175.063 10.809 li
174.191 10.809 li
174.09 10.812 174.016 10.75 173.969 10.625 cv
173.918 10.504 173.891 10.301 173.895 10.012 cv
173.891 9.86298 173.898 9.73401 173.914 9.633 cv
173.926 9.53101 173.945 9.44897 173.969 9.38702 cv
173.992 9.328 174.023 9.28497 174.063 9.258 cv
174.102 9.23401 174.145 9.22302 174.199 9.21899 cv
175.063 9.21899 li
175.063 8.633 li
175.059 8.164 175.105 7.75 175.203 7.39099 cv
175.293 7.03497 175.441 6.73798 175.645 6.50403 cv
175.844 6.27002 176.098 6.09399 176.406 5.96899 cv
176.715 5.85199 177.078 5.789 177.504 5.789 cv
177.699 5.789 177.891 5.80902 178.078 5.84003 cv
178.258 5.87903 178.402 5.914 178.508 5.94897 cv
178.609 5.992 178.68 6.02698 178.719 6.05902 cv
178.754 6.09399 178.785 6.14502 178.809 6.20697 cv
178.832 6.27301 178.848 6.35498 178.859 6.45697 cv
178.867 6.55902 178.871 6.68402 178.875 6.83197 cv
cp
f
187.445 15.75 mo
187.445 15.977 187.43 16.152 187.402 16.273 cv
187.371 16.398 187.332 16.484 187.289 16.531 cv
187.238 16.582 187.172 16.625 187.082 16.664 cv
186.988 16.703 186.879 16.734 186.762 16.766 cv
186.637 16.789 186.504 16.812 186.363 16.832 cv
186.219 16.844 186.078 16.852 185.934 16.855 cv
185.543 16.852 185.203 16.801 184.918 16.707 cv
184.633 16.605 184.398 16.457 184.211 16.25 cv
184.023 16.047 183.883 15.789 183.797 15.477 cv
183.703 15.168 183.66 14.797 183.664 14.367 cv
183.664 10.809 li
182.832 10.809 li
182.73 10.812 182.656 10.75 182.605 10.625 cv
182.551 10.504 182.523 10.301 182.527 10.012 cv
182.523 9.86298 182.531 9.73401 182.547 9.633 cv
182.559 9.53101 182.578 9.44897 182.605 9.38702 cv
182.629 9.328 182.66 9.28497 182.703 9.258 cv
182.738 9.23401 182.785 9.22302 182.84 9.21899 cv
183.664 9.21899 li
183.664 7.66803 li
183.66 7.62097 183.676 7.57397 183.707 7.52698 cv
183.734 7.48798 183.785 7.453 183.863 7.422 cv
183.938 7.39801 184.039 7.375 184.168 7.35901 cv
184.293 7.34802 184.449 7.34399 184.641 7.34003 cv
184.828 7.34399 184.988 7.34802 185.117 7.35901 cv
185.242 7.375 185.344 7.39801 185.418 7.422 cv
185.488 7.453 185.539 7.48798 185.574 7.52698 cv
185.602 7.57397 185.617 7.62097 185.621 7.66803 cv
185.621 9.21899 li
187.133 9.21899 li
187.184 9.22302 187.23 9.23401 187.27 9.258 cv
187.309 9.28497 187.34 9.328 187.367 9.38702 cv
187.391 9.44897 187.41 9.53101 187.426 9.633 cv
187.438 9.73401 187.445 9.86298 187.445 10.012 cv
187.445 10.301 187.418 10.504 187.367 10.625 cv
187.313 10.75 187.238 10.812 187.141 10.809 cv
185.621 10.809 li
185.621 14.074 li
185.617 14.453 185.676 14.738 185.801 14.926 cv
185.918 15.117 186.133 15.211 186.438 15.211 cv
186.539 15.211 186.633 15.203 186.719 15.184 cv
186.801 15.168 186.875 15.148 186.941 15.121 cv
187.004 15.102 187.059 15.078 187.105 15.059 cv
187.148 15.043 187.188 15.035 187.227 15.031 cv
187.254 15.035 187.285 15.043 187.316 15.059 cv
187.344 15.078 187.363 15.117 187.383 15.168 cv
187.395 15.227 187.41 15.301 187.426 15.391 cv
187.438 15.488 187.445 15.605 187.445 15.75 cv
cp
f
195.508 16.434 mo
195.504 16.488 195.488 16.531 195.461 16.57 cv
195.426 16.609 195.375 16.645 195.305 16.668 cv
195.23 16.695 195.129 16.711 195.004 16.727 cv
194.875 16.738 194.719 16.746 194.535 16.746 cv
194.34 16.746 194.18 16.738 194.055 16.727 cv
193.926 16.711 193.824 16.695 193.754 16.668 cv
193.676 16.645 193.625 16.609 193.598 16.57 cv
193.563 16.531 193.547 16.488 193.551 16.434 cv
193.551 12.469 li
193.547 12.133 193.523 11.867 193.477 11.672 cv
193.426 11.48 193.352 11.316 193.262 11.18 cv
193.168 11.043 193.051 10.937 192.902 10.859 cv
192.754 10.785 192.578 10.746 192.383 10.746 cv
192.129 10.746 191.879 10.84 191.625 11.02 cv
191.371 11.203 191.105 11.465 190.832 11.812 cv
190.832 16.434 li
190.828 16.488 190.813 16.531 190.785 16.57 cv
190.75 16.609 190.695 16.645 190.625 16.668 cv
190.547 16.695 190.449 16.711 190.324 16.727 cv
190.199 16.738 190.039 16.746 189.852 16.746 cv
189.656 16.746 189.5 16.738 189.375 16.727 cv
189.25 16.711 189.148 16.695 189.074 16.668 cv
188.996 16.645 188.941 16.609 188.914 16.57 cv
188.879 16.531 188.863 16.488 188.867 16.434 cv
188.867 6.18701 li
188.863 6.13702 188.879 6.09003 188.914 6.047 cv
188.941 6.008 188.996 5.97302 189.074 5.94098 cv
189.148 5.914 189.25 5.89502 189.375 5.875 cv
189.5 5.86298 189.656 5.85498 189.852 5.85199 cv
190.039 5.85498 190.199 5.86298 190.324 5.875 cv
190.449 5.89502 190.547 5.914 190.625 5.94098 cv
190.695 5.97302 190.75 6.008 190.785 6.047 cv
190.813 6.09003 190.828 6.13702 190.832 6.18701 cv
190.832 10.027 li
191.168 9.69897 191.512 9.453 191.863 9.28497 cv
192.211 9.125 192.578 9.04303 192.961 9.039 cv
193.43 9.04303 193.828 9.12097 194.156 9.27301 cv
194.48 9.43402 194.742 9.64502 194.941 9.914 cv
195.141 10.184 195.285 10.5 195.375 10.859 cv
195.461 11.223 195.504 11.66 195.508 12.172 cv
cp
f
203.797 12.758 mo
203.793 12.996 203.742 13.172 203.637 13.285 cv
203.527 13.402 203.379 13.461 203.199 13.457 cv
198.965 13.457 li
198.961 13.758 198.996 14.027 199.07 14.266 cv
199.137 14.508 199.25 14.711 199.406 14.879 cv
199.559 15.051 199.754 15.18 199.996 15.266 cv
200.234 15.355 200.523 15.398 200.867 15.398 cv
201.207 15.398 201.508 15.375 201.77 15.324 cv
202.027 15.277 202.254 15.223 202.445 15.16 cv
202.633 15.102 202.789 15.047 202.918 14.996 cv
203.039 14.949 203.141 14.926 203.223 14.922 cv
203.266 14.926 203.305 14.934 203.34 14.949 cv
203.367 14.969 203.395 15 203.414 15.047 cv
203.434 15.094 203.445 15.16 203.457 15.246 cv
203.461 15.332 203.465 15.441 203.469 15.57 cv
203.465 15.687 203.465 15.785 203.461 15.863 cv
203.453 15.945 203.445 16.012 203.438 16.066 cv
203.426 16.125 203.41 16.176 203.391 16.211 cv
203.371 16.254 203.344 16.289 203.313 16.324 cv
203.277 16.363 203.184 16.414 203.035 16.473 cv
202.879 16.539 202.688 16.602 202.457 16.656 cv
202.219 16.719 201.949 16.766 201.652 16.812 cv
201.348 16.852 201.027 16.875 200.688 16.879 cv
200.066 16.875 199.523 16.801 199.063 16.645 cv
198.594 16.492 198.207 16.254 197.898 15.937 cv
197.582 15.621 197.348 15.223 197.199 14.738 cv
197.043 14.258 196.969 13.691 196.973 13.035 cv
196.969 12.422 197.047 11.863 197.211 11.367 cv
197.367 10.871 197.602 10.453 197.914 10.105 cv
198.219 9.76202 198.594 9.49597 199.031 9.31201 cv
199.469 9.133 199.961 9.04303 200.516 9.039 cv
201.094 9.04303 201.594 9.12903 202.008 9.297 cv
202.422 9.47302 202.758 9.711 203.023 10.012 cv
203.285 10.316 203.48 10.676 203.609 11.09 cv
203.73 11.508 203.793 11.957 203.797 12.445 cv
cp
201.895 12.195 mo
201.906 11.645 201.797 11.211 201.563 10.898 cv
201.328 10.586 200.961 10.43 200.469 10.426 cv
200.219 10.43 200.004 10.477 199.82 10.566 cv
199.633 10.664 199.48 10.789 199.359 10.945 cv
199.234 11.105 199.141 11.293 199.078 11.508 cv
199.012 11.723 198.973 11.953 198.965 12.195 cv
cp
f
216.145 9.67999 mo
216.145 10.246 216.055 10.75 215.879 11.184 cv
215.699 11.621 215.441 11.988 215.105 12.285 cv
214.766 12.59 214.352 12.816 213.863 12.969 cv
213.371 13.125 212.793 13.203 212.129 13.199 cv
211.289 13.199 li
211.289 16.418 li
211.285 16.473 211.27 16.52 211.238 16.559 cv
211.203 16.602 211.148 16.637 211.07 16.66 cv
210.992 16.687 210.887 16.707 210.758 16.723 cv
210.625 16.738 210.461 16.746 210.262 16.746 cv
210.063 16.746 209.895 16.738 209.766 16.723 cv
209.629 16.707 209.523 16.687 209.449 16.66 cv
209.367 16.637 209.313 16.602 209.285 16.559 cv
209.25 16.52 209.234 16.473 209.238 16.418 cv
209.238 7.34802 li
209.234 7.10498 209.301 6.922 209.43 6.797 cv
209.555 6.67603 209.723 6.617 209.934 6.61298 cv
212.309 6.61298 li
212.543 6.617 212.773 6.625 212.992 6.64099 cv
213.207 6.65997 213.465 6.69897 213.766 6.758 cv
214.066 6.82001 214.371 6.92999 214.684 7.09003 cv
214.992 7.25403 215.254 7.461 215.473 7.703 cv
215.688 7.953 215.855 8.242 215.973 8.57001 cv
216.086 8.90198 216.145 9.27002 216.145 9.67999 cv
cp
214 9.82397 mo
214 9.47699 213.938 9.18402 213.813 8.953 cv
213.688 8.72699 213.531 8.55902 213.352 8.44501 cv
213.168 8.34003 212.98 8.27002 212.781 8.23798 cv
212.578 8.211 212.371 8.19897 212.16 8.19501 cv
211.289 8.19501 li
211.289 11.617 li
212.207 11.617 li
212.535 11.621 212.809 11.574 213.031 11.484 cv
213.25 11.398 213.43 11.277 213.57 11.117 cv
213.707 10.961 213.813 10.77 213.891 10.547 cv
213.961 10.328 214 10.09 214 9.82397 cv
cp
f
222.078 10.129 mo
222.078 10.32 222.07 10.473 222.063 10.59 cv
222.047 10.711 222.031 10.805 222.016 10.871 cv
221.992 10.941 221.965 10.988 221.934 11.012 cv
221.895 11.039 221.852 11.051 221.805 11.051 cv
221.758 11.051 221.711 11.043 221.664 11.023 cv
221.609 11.008 221.551 10.988 221.488 10.965 cv
221.418 10.945 221.348 10.926 221.273 10.906 cv
221.191 10.891 221.105 10.883 221.016 10.879 cv
220.902 10.883 220.793 10.902 220.688 10.945 cv
220.578 10.992 220.465 11.062 220.352 11.152 cv
220.23 11.246 220.109 11.371 219.984 11.523 cv
219.855 11.684 219.719 11.875 219.574 12.102 cv
219.574 16.434 li
219.57 16.488 219.555 16.531 219.527 16.57 cv
219.492 16.609 219.438 16.645 219.367 16.668 cv
219.289 16.695 219.191 16.711 219.066 16.727 cv
218.941 16.738 218.781 16.746 218.594 16.746 cv
218.398 16.746 218.242 16.738 218.117 16.727 cv
217.992 16.711 217.891 16.695 217.816 16.668 cv
217.738 16.645 217.684 16.609 217.656 16.57 cv
217.621 16.531 217.605 16.488 217.609 16.434 cv
217.609 9.48401 li
217.605 9.43701 217.621 9.39099 217.648 9.34802 cv
217.672 9.31201 217.719 9.28101 217.789 9.25 cv
217.855 9.22699 217.941 9.20697 218.051 9.19098 cv
218.156 9.18402 218.289 9.17603 218.453 9.172 cv
218.617 9.17603 218.754 9.18402 218.863 9.19098 cv
218.969 9.20697 219.055 9.22699 219.117 9.25 cv
219.176 9.28101 219.219 9.31201 219.246 9.34802 cv
219.27 9.39099 219.281 9.43701 219.285 9.48401 cv
219.285 10.348 li
219.465 10.09 219.637 9.87903 219.801 9.70697 cv
219.957 9.54303 220.113 9.40601 220.262 9.30499 cv
220.406 9.20697 220.551 9.14099 220.695 9.09802 cv
220.84 9.06201 220.984 9.04303 221.133 9.039 cv
221.199 9.04303 221.273 9.047 221.352 9.05103 cv
221.43 9.06201 221.508 9.07397 221.594 9.09003 cv
221.672 9.10901 221.746 9.12903 221.813 9.15198 cv
221.871 9.17603 221.918 9.203 221.949 9.22699 cv
221.977 9.258 221.996 9.28497 222.012 9.31201 cv
222.023 9.34802 222.035 9.39099 222.047 9.44098 cv
222.055 9.5 222.063 9.58197 222.07 9.68701 cv
222.074 9.797 222.078 9.94501 222.078 10.129 cv
cp
f
229.586 12.758 mo
229.582 12.996 229.531 13.172 229.426 13.285 cv
229.316 13.402 229.168 13.461 228.988 13.457 cv
224.754 13.457 li
224.75 13.758 224.785 14.027 224.859 14.266 cv
224.926 14.508 225.039 14.711 225.195 14.879 cv
225.348 15.051 225.543 15.18 225.785 15.266 cv
226.023 15.355 226.313 15.398 226.656 15.398 cv
226.996 15.398 227.297 15.375 227.559 15.324 cv
227.816 15.277 228.043 15.223 228.234 15.16 cv
228.422 15.102 228.578 15.047 228.707 14.996 cv
228.828 14.949 228.93 14.926 229.012 14.922 cv
229.055 14.926 229.094 14.934 229.129 14.949 cv
229.156 14.969 229.184 15 229.203 15.047 cv
229.223 15.094 229.234 15.16 229.246 15.246 cv
229.25 15.332 229.254 15.441 229.258 15.57 cv
229.254 15.687 229.254 15.785 229.25 15.863 cv
229.242 15.945 229.234 16.012 229.227 16.066 cv
229.215 16.125 229.199 16.176 229.18 16.211 cv
229.16 16.254 229.133 16.289 229.102 16.324 cv
229.066 16.363 228.973 16.414 228.824 16.473 cv
228.668 16.539 228.477 16.602 228.246 16.656 cv
228.008 16.719 227.738 16.766 227.441 16.812 cv
227.137 16.852 226.816 16.875 226.477 16.879 cv
225.855 16.875 225.313 16.801 224.852 16.645 cv
224.383 16.492 223.996 16.254 223.688 15.937 cv
223.371 15.621 223.137 15.223 222.988 14.738 cv
222.832 14.258 222.758 13.691 222.762 13.035 cv
222.758 12.422 222.836 11.863 223 11.367 cv
223.156 10.871 223.391 10.453 223.703 10.105 cv
224.008 9.76202 224.383 9.49597 224.82 9.31201 cv
225.258 9.133 225.75 9.04303 226.305 9.039 cv
226.883 9.04303 227.383 9.12903 227.797 9.297 cv
228.211 9.47302 228.547 9.711 228.813 10.012 cv
229.074 10.316 229.27 10.676 229.398 11.09 cv
229.52 11.508 229.582 11.957 229.586 12.445 cv
cp
227.684 12.195 mo
227.695 11.645 227.586 11.211 227.352 10.898 cv
227.117 10.586 226.75 10.43 226.258 10.426 cv
226.008 10.43 225.793 10.477 225.609 10.566 cv
225.422 10.664 225.27 10.789 225.148 10.945 cv
225.023 11.105 224.93 11.293 224.867 11.508 cv
224.801 11.723 224.762 11.953 224.754 12.195 cv
cp
f
238.191 12.855 mo
238.191 13.477 238.125 14.035 237.992 14.531 cv
237.859 15.027 237.664 15.449 237.41 15.797 cv
237.156 16.145 236.84 16.414 236.461 16.598 cv
236.078 16.785 235.645 16.875 235.16 16.879 cv
234.953 16.875 234.766 16.855 234.602 16.82 cv
234.43 16.777 234.266 16.719 234.109 16.641 cv
233.949 16.562 233.793 16.465 233.641 16.34 cv
233.48 16.223 233.32 16.082 233.156 15.918 cv
233.156 19.191 li
233.152 19.238 233.137 19.285 233.109 19.332 cv
233.074 19.371 233.02 19.406 232.949 19.437 cv
232.871 19.461 232.773 19.484 232.648 19.504 cv
232.523 19.516 232.363 19.523 232.176 19.527 cv
231.98 19.523 231.824 19.516 231.699 19.504 cv
231.574 19.484 231.473 19.461 231.398 19.437 cv
231.32 19.406 231.266 19.371 231.238 19.332 cv
231.203 19.285 231.188 19.238 231.191 19.191 cv
231.191 9.48401 li
231.188 9.43701 231.203 9.39099 231.23 9.34802 cv
231.254 9.31201 231.297 9.28101 231.367 9.25 cv
231.43 9.22699 231.516 9.20697 231.625 9.19098 cv
231.727 9.18402 231.863 9.17603 232.027 9.172 cv
232.184 9.17603 232.313 9.18402 232.418 9.19098 cv
232.523 9.20697 232.609 9.22699 232.676 9.25 cv
232.738 9.28101 232.785 9.31201 232.813 9.34802 cv
232.836 9.39099 232.848 9.43701 232.852 9.48401 cv
232.852 10.301 li
233.051 10.094 233.25 9.914 233.449 9.75403 cv
233.641 9.59802 233.84 9.46503 234.043 9.35498 cv
234.246 9.25403 234.453 9.172 234.672 9.117 cv
234.883 9.06598 235.113 9.04303 235.363 9.039 cv
235.867 9.04303 236.301 9.14099 236.664 9.34003 cv
237.02 9.54303 237.313 9.82001 237.539 10.164 cv
237.762 10.516 237.926 10.918 238.035 11.379 cv
238.137 11.84 238.191 12.332 238.191 12.855 cv
cp
236.148 12.996 mo
236.145 12.703 236.125 12.422 236.082 12.145 cv
236.035 11.875 235.957 11.633 235.855 11.418 cv
235.746 11.207 235.605 11.035 235.434 10.906 cv
235.258 10.781 235.043 10.719 234.785 10.715 cv
234.652 10.719 234.523 10.738 234.398 10.773 cv
234.27 10.816 234.141 10.879 234.008 10.965 cv
233.875 11.055 233.738 11.168 233.602 11.309 cv
233.457 11.449 233.309 11.625 233.156 11.828 cv
233.156 14.121 li
233.43 14.469 233.691 14.738 233.941 14.926 cv
234.188 15.117 234.449 15.211 234.723 15.211 cv
234.977 15.211 235.191 15.148 235.375 15.016 cv
235.551 14.891 235.699 14.719 235.813 14.508 cv
235.926 14.297 236.008 14.059 236.066 13.793 cv
236.117 13.527 236.145 13.262 236.148 12.996 cv
cp
f
245.688 16.457 mo
245.684 16.535 245.656 16.59 245.609 16.629 cv
245.555 16.672 245.473 16.699 245.363 16.719 cv
245.246 16.734 245.082 16.746 244.867 16.746 cv
244.629 16.746 244.457 16.734 244.355 16.719 cv
244.246 16.699 244.172 16.672 244.133 16.629 cv
244.086 16.59 244.066 16.535 244.066 16.457 cv
244.066 15.906 li
243.777 16.215 243.449 16.453 243.086 16.621 cv
242.719 16.793 242.313 16.875 241.867 16.879 cv
241.496 16.875 241.156 16.828 240.848 16.734 cv
240.539 16.641 240.273 16.5 240.047 16.305 cv
239.82 16.117 239.645 15.883 239.52 15.602 cv
239.395 15.324 239.332 14.996 239.336 14.617 cv
239.332 14.219 239.41 13.867 239.57 13.562 cv
239.727 13.266 239.965 13.02 240.281 12.824 cv
240.594 12.633 240.984 12.488 241.453 12.391 cv
241.922 12.301 242.465 12.254 243.082 12.25 cv
243.762 12.25 li
243.762 11.828 li
243.762 11.613 243.738 11.422 243.695 11.258 cv
243.648 11.098 243.574 10.961 243.477 10.848 cv
243.371 10.742 243.238 10.66 243.07 10.605 cv
242.898 10.555 242.688 10.531 242.445 10.527 cv
242.113 10.531 241.82 10.566 241.566 10.637 cv
241.305 10.711 241.078 10.793 240.883 10.879 cv
240.684 10.973 240.52 11.051 240.391 11.121 cv
240.254 11.195 240.145 11.234 240.066 11.23 cv
240.004 11.234 239.953 11.215 239.914 11.176 cv
239.867 11.141 239.832 11.09 239.805 11.02 cv
239.773 10.957 239.75 10.871 239.738 10.77 cv
239.719 10.672 239.711 10.562 239.715 10.441 cv
239.711 10.281 239.727 10.156 239.754 10.059 cv
239.777 9.96899 239.824 9.883 239.902 9.80499 cv
239.973 9.72998 240.102 9.64801 240.285 9.55902 cv
240.465 9.46899 240.676 9.383 240.922 9.30499 cv
241.164 9.22699 241.434 9.164 241.723 9.11298 cv
242.012 9.06598 242.309 9.04303 242.617 9.039 cv
243.16 9.04303 243.625 9.09399 244.012 9.19897 cv
244.398 9.30902 244.719 9.47302 244.969 9.69098 cv
245.219 9.90997 245.398 10.195 245.516 10.543 cv
245.625 10.895 245.684 11.309 245.688 11.781 cv
cp
243.762 13.48 mo
243.012 13.48 li
242.695 13.484 242.426 13.508 242.203 13.551 cv
241.977 13.602 241.793 13.672 241.656 13.762 cv
241.512 13.859 241.41 13.973 241.348 14.102 cv
241.281 14.238 241.246 14.387 241.25 14.555 cv
241.246 14.848 241.34 15.078 241.527 15.242 cv
241.711 15.41 241.969 15.492 242.297 15.492 cv
242.57 15.492 242.82 15.422 243.055 15.281 cv
243.281 15.141 243.52 14.937 243.762 14.664 cv
cp
f
252.117 10.129 mo
252.117 10.32 252.109 10.473 252.102 10.59 cv
252.086 10.711 252.07 10.805 252.055 10.871 cv
252.031 10.941 252.004 10.988 251.973 11.012 cv
251.934 11.039 251.891 11.051 251.844 11.051 cv
251.797 11.051 251.75 11.043 251.703 11.023 cv
251.648 11.008 251.59 10.988 251.527 10.965 cv
251.457 10.945 251.387 10.926 251.313 10.906 cv
251.23 10.891 251.145 10.883 251.055 10.879 cv
250.941 10.883 250.832 10.902 250.727 10.945 cv
250.617 10.992 250.504 11.062 250.391 11.152 cv
250.27 11.246 250.148 11.371 250.023 11.523 cv
249.895 11.684 249.758 11.875 249.613 12.102 cv
249.613 16.434 li
249.609 16.488 249.594 16.531 249.566 16.57 cv
249.531 16.609 249.477 16.645 249.406 16.668 cv
249.328 16.695 249.23 16.711 249.105 16.727 cv
248.98 16.738 248.82 16.746 248.633 16.746 cv
248.438 16.746 248.281 16.738 248.156 16.727 cv
248.031 16.711 247.93 16.695 247.855 16.668 cv
247.777 16.645 247.723 16.609 247.695 16.57 cv
247.66 16.531 247.645 16.488 247.648 16.434 cv
247.648 9.48401 li
247.645 9.43701 247.66 9.39099 247.688 9.34802 cv
247.711 9.31201 247.758 9.28101 247.828 9.25 cv
247.895 9.22699 247.98 9.20697 248.09 9.19098 cv
248.195 9.18402 248.328 9.17603 248.492 9.172 cv
248.656 9.17603 248.793 9.18402 248.902 9.19098 cv
249.008 9.20697 249.094 9.22699 249.156 9.25 cv
249.215 9.28101 249.258 9.31201 249.285 9.34802 cv
249.309 9.39099 249.32 9.43701 249.324 9.48401 cv
249.324 10.348 li
249.504 10.09 249.676 9.87903 249.84 9.70697 cv
249.996 9.54303 250.152 9.40601 250.301 9.30499 cv
250.445 9.20697 250.59 9.14099 250.734 9.09802 cv
250.879 9.06201 251.023 9.04303 251.172 9.039 cv
251.238 9.04303 251.313 9.047 251.391 9.05103 cv
251.469 9.06201 251.547 9.07397 251.633 9.09003 cv
251.711 9.10901 251.785 9.12903 251.852 9.15198 cv
251.91 9.17603 251.957 9.203 251.988 9.22699 cv
252.016 9.258 252.035 9.28497 252.051 9.31201 cv
252.063 9.34802 252.074 9.39099 252.086 9.44098 cv
252.094 9.5 252.102 9.58197 252.109 9.68701 cv
252.113 9.797 252.117 9.94501 252.117 10.129 cv
cp
f
258.855 16.457 mo
258.852 16.535 258.824 16.59 258.777 16.629 cv
258.723 16.672 258.641 16.699 258.531 16.719 cv
258.414 16.734 258.25 16.746 258.035 16.746 cv
257.797 16.746 257.625 16.734 257.523 16.719 cv
257.414 16.699 257.34 16.672 257.301 16.629 cv
257.254 16.59 257.234 16.535 257.234 16.457 cv
257.234 15.906 li
256.945 16.215 256.617 16.453 256.254 16.621 cv
255.887 16.793 255.48 16.875 255.035 16.879 cv
254.664 16.875 254.324 16.828 254.016 16.734 cv
253.707 16.641 253.441 16.5 253.215 16.305 cv
252.988 16.117 252.813 15.883 252.688 15.602 cv
252.563 15.324 252.5 14.996 252.504 14.617 cv
252.5 14.219 252.578 13.867 252.738 13.562 cv
252.895 13.266 253.133 13.02 253.449 12.824 cv
253.762 12.633 254.152 12.488 254.621 12.391 cv
255.09 12.301 255.633 12.254 256.25 12.25 cv
256.93 12.25 li
256.93 11.828 li
256.93 11.613 256.906 11.422 256.863 11.258 cv
256.816 11.098 256.742 10.961 256.645 10.848 cv
256.539 10.742 256.406 10.66 256.238 10.605 cv
256.066 10.555 255.855 10.531 255.613 10.527 cv
255.281 10.531 254.988 10.566 254.734 10.637 cv
254.473 10.711 254.246 10.793 254.051 10.879 cv
253.852 10.973 253.688 11.051 253.559 11.121 cv
253.422 11.195 253.313 11.234 253.234 11.23 cv
253.172 11.234 253.121 11.215 253.082 11.176 cv
253.035 11.141 253 11.09 252.973 11.02 cv
252.941 10.957 252.918 10.871 252.906 10.77 cv
252.887 10.672 252.879 10.562 252.883 10.441 cv
252.879 10.281 252.895 10.156 252.922 10.059 cv
252.945 9.96899 252.992 9.883 253.07 9.80499 cv
253.141 9.72998 253.27 9.64801 253.453 9.55902 cv
253.633 9.46899 253.844 9.383 254.09 9.30499 cv
254.332 9.22699 254.602 9.164 254.891 9.11298 cv
255.18 9.06598 255.477 9.04303 255.785 9.039 cv
256.328 9.04303 256.793 9.09399 257.18 9.19897 cv
257.566 9.30902 257.887 9.47302 258.137 9.69098 cv
258.387 9.90997 258.566 10.195 258.684 10.543 cv
258.793 10.895 258.852 11.309 258.855 11.781 cv
cp
256.93 13.48 mo
256.18 13.48 li
255.863 13.484 255.594 13.508 255.371 13.551 cv
255.145 13.602 254.961 13.672 254.824 13.762 cv
254.68 13.859 254.578 13.973 254.516 14.102 cv
254.449 14.238 254.414 14.387 254.418 14.555 cv
254.414 14.848 254.508 15.078 254.695 15.242 cv
254.879 15.41 255.137 15.492 255.465 15.492 cv
255.738 15.492 255.988 15.422 256.223 15.281 cv
256.449 15.141 256.688 14.937 256.93 14.664 cv
cp
f
264.852 15.75 mo
264.852 15.977 264.836 16.152 264.809 16.273 cv
264.777 16.398 264.738 16.484 264.695 16.531 cv
264.645 16.582 264.578 16.625 264.488 16.664 cv
264.395 16.703 264.285 16.734 264.168 16.766 cv
264.043 16.789 263.91 16.812 263.77 16.832 cv
263.625 16.844 263.484 16.852 263.34 16.855 cv
262.949 16.852 262.609 16.801 262.324 16.707 cv
262.039 16.605 261.805 16.457 261.617 16.25 cv
261.43 16.047 261.289 15.789 261.203 15.477 cv
261.109 15.168 261.066 14.797 261.07 14.367 cv
261.07 10.809 li
260.238 10.809 li
260.137 10.812 260.063 10.75 260.012 10.625 cv
259.957 10.504 259.93 10.301 259.934 10.012 cv
259.93 9.86298 259.938 9.73401 259.953 9.633 cv
259.965 9.53101 259.984 9.44897 260.012 9.38702 cv
260.035 9.328 260.066 9.28497 260.109 9.258 cv
260.145 9.23401 260.191 9.22302 260.246 9.21899 cv
261.07 9.21899 li
261.07 7.66803 li
261.066 7.62097 261.082 7.57397 261.113 7.52698 cv
261.141 7.48798 261.191 7.453 261.27 7.422 cv
261.344 7.39801 261.445 7.375 261.574 7.35901 cv
261.699 7.34802 261.855 7.34399 262.047 7.34003 cv
262.234 7.34399 262.395 7.34802 262.523 7.35901 cv
262.648 7.375 262.75 7.39801 262.824 7.422 cv
262.895 7.453 262.945 7.48798 262.98 7.52698 cv
263.008 7.57397 263.023 7.62097 263.027 7.66803 cv
263.027 9.21899 li
264.539 9.21899 li
264.59 9.22302 264.637 9.23401 264.676 9.258 cv
264.715 9.28497 264.746 9.328 264.773 9.38702 cv
264.797 9.44897 264.816 9.53101 264.832 9.633 cv
264.844 9.73401 264.852 9.86298 264.852 10.012 cv
264.852 10.301 264.824 10.504 264.773 10.625 cv
264.719 10.75 264.645 10.812 264.547 10.809 cv
263.027 10.809 li
263.027 14.074 li
263.023 14.453 263.082 14.738 263.207 14.926 cv
263.324 15.117 263.539 15.211 263.844 15.211 cv
263.945 15.211 264.039 15.203 264.125 15.184 cv
264.207 15.168 264.281 15.148 264.348 15.121 cv
264.41 15.102 264.465 15.078 264.512 15.059 cv
264.555 15.043 264.594 15.035 264.633 15.031 cv
264.66 15.035 264.691 15.043 264.723 15.059 cv
264.75 15.078 264.77 15.117 264.789 15.168 cv
264.801 15.227 264.816 15.301 264.832 15.391 cv
264.844 15.488 264.852 15.605 264.852 15.75 cv
cp
f
268.238 16.434 mo
268.234 16.488 268.219 16.531 268.191 16.57 cv
268.156 16.609 268.102 16.645 268.031 16.668 cv
267.953 16.695 267.855 16.711 267.73 16.727 cv
267.605 16.738 267.445 16.746 267.258 16.746 cv
267.063 16.746 266.906 16.738 266.781 16.727 cv
266.656 16.711 266.555 16.695 266.48 16.668 cv
266.402 16.645 266.348 16.609 266.32 16.57 cv
266.285 16.531 266.27 16.488 266.273 16.434 cv
266.273 9.5 li
266.27 9.44897 266.285 9.40198 266.32 9.36298 cv
266.348 9.32397 266.402 9.29303 266.48 9.26202 cv
266.555 9.23798 266.656 9.21503 266.781 9.19501 cv
266.906 9.18402 267.063 9.17603 267.258 9.172 cv
267.445 9.17603 267.605 9.18402 267.73 9.19501 cv
267.855 9.21503 267.953 9.23798 268.031 9.26202 cv
268.102 9.29303 268.156 9.32397 268.191 9.36298 cv
268.219 9.40198 268.234 9.44897 268.238 9.5 cv
cp
268.387 7.12903 mo
268.387 7.52698 268.305 7.80103 268.145 7.94897 cv
267.98 8.10199 267.684 8.17603 267.25 8.172 cv
266.805 8.17603 266.504 8.10199 266.355 7.95697 cv
266.199 7.81201 266.125 7.55103 266.125 7.16803 cv
266.125 6.77301 266.203 6.5 266.363 6.34802 cv
266.52 6.19501 266.82 6.117 267.266 6.117 cv
267.699 6.117 267.996 6.19098 268.152 6.34003 cv
268.309 6.48798 268.387 6.75403 268.387 7.12903 cv
cp
f
277.23 12.887 mo
277.227 13.484 277.148 14.027 276.996 14.512 cv
276.836 15.004 276.602 15.422 276.285 15.773 cv
275.969 16.125 275.57 16.398 275.094 16.59 cv
274.613 16.781 274.055 16.875 273.418 16.879 cv
272.797 16.875 272.258 16.793 271.805 16.621 cv
271.344 16.453 270.965 16.203 270.668 15.875 cv
270.363 15.551 270.141 15.148 269.996 14.668 cv
269.852 14.191 269.781 13.645 269.781 13.027 cv
269.781 12.437 269.859 11.898 270.016 11.406 cv
270.172 10.918 270.41 10.496 270.73 10.145 cv
271.047 9.797 271.441 9.52301 271.918 9.328 cv
272.391 9.13702 272.949 9.04303 273.59 9.039 cv
274.215 9.04303 274.754 9.125 275.211 9.29303 cv
275.668 9.46503 276.047 9.71503 276.344 10.039 cv
276.641 10.367 276.863 10.77 277.012 11.246 cv
277.156 11.727 277.227 12.273 277.23 12.887 cv
cp
275.211 12.965 mo
275.207 12.629 275.18 12.312 275.129 12.02 cv
275.07 11.734 274.977 11.484 274.852 11.27 cv
274.719 11.059 274.547 10.891 274.336 10.77 cv
274.117 10.652 273.848 10.594 273.52 10.59 cv
273.23 10.594 272.977 10.648 272.758 10.75 cv
272.539 10.859 272.359 11.016 272.219 11.219 cv
272.078 11.426 271.973 11.672 271.902 11.957 cv
271.832 12.25 271.797 12.578 271.797 12.941 cv
271.797 13.289 271.824 13.605 271.883 13.891 cv
271.938 14.184 272.031 14.434 272.16 14.645 cv
272.285 14.859 272.457 15.023 272.68 15.137 cv
272.895 15.258 273.164 15.316 273.488 15.312 cv
273.781 15.316 274.039 15.262 274.262 15.152 cv
274.477 15.047 274.656 14.895 274.797 14.687 cv
274.938 14.488 275.039 14.242 275.109 13.953 cv
275.172 13.668 275.207 13.34 275.211 12.965 cv
cp
f
285.473 16.434 mo
285.469 16.488 285.453 16.531 285.426 16.57 cv
285.391 16.609 285.34 16.645 285.27 16.668 cv
285.195 16.695 285.094 16.711 284.969 16.727 cv
284.84 16.738 284.684 16.746 284.5 16.746 cv
284.305 16.746 284.145 16.738 284.02 16.727 cv
283.891 16.711 283.789 16.695 283.719 16.668 cv
283.641 16.645 283.59 16.609 283.563 16.57 cv
283.527 16.531 283.512 16.488 283.516 16.434 cv
283.516 12.469 li
283.512 12.133 283.488 11.867 283.441 11.672 cv
283.391 11.48 283.316 11.316 283.227 11.18 cv
283.133 11.043 283.016 10.937 282.867 10.859 cv
282.719 10.785 282.543 10.746 282.348 10.746 cv
282.094 10.746 281.844 10.84 281.59 11.02 cv
281.336 11.203 281.07 11.465 280.797 11.812 cv
280.797 16.434 li
280.793 16.488 280.777 16.531 280.75 16.57 cv
280.715 16.609 280.66 16.645 280.59 16.668 cv
280.512 16.695 280.414 16.711 280.289 16.727 cv
280.164 16.738 280.004 16.746 279.816 16.746 cv
279.621 16.746 279.465 16.738 279.34 16.727 cv
279.215 16.711 279.113 16.695 279.039 16.668 cv
278.961 16.645 278.906 16.609 278.879 16.57 cv
278.844 16.531 278.828 16.488 278.832 16.434 cv
278.832 9.48401 li
278.828 9.43701 278.844 9.39099 278.871 9.34802 cv
278.895 9.31201 278.941 9.28101 279.012 9.25 cv
279.078 9.22699 279.164 9.20697 279.273 9.19098 cv
279.379 9.18402 279.512 9.17603 279.676 9.172 cv
279.84 9.17603 279.977 9.18402 280.086 9.19098 cv
280.191 9.20697 280.277 9.22699 280.34 9.25 cv
280.398 9.28101 280.441 9.31201 280.469 9.34802 cv
280.492 9.39099 280.504 9.43701 280.508 9.48401 cv
280.508 10.285 li
280.891 9.875 281.281 9.56201 281.68 9.35199 cv
282.074 9.14502 282.492 9.04303 282.926 9.039 cv
283.395 9.04303 283.793 9.12097 284.121 9.27301 cv
284.445 9.43402 284.707 9.64502 284.906 9.90997 cv
285.105 10.18 285.25 10.492 285.34 10.848 cv
285.426 11.207 285.469 11.637 285.473 12.141 cv
cp
f
297.887 7.45697 mo
297.883 7.61298 297.875 7.742 297.867 7.84399 cv
297.852 7.953 297.832 8.039 297.809 8.10199 cv
297.777 8.16803 297.746 8.21503 297.711 8.242 cv
297.668 8.27698 297.625 8.29303 297.582 8.289 cv
295.059 8.289 li
295.059 16.418 li
295.059 16.473 295.039 16.52 295.008 16.559 cv
294.969 16.602 294.914 16.637 294.84 16.66 cv
294.758 16.687 294.652 16.707 294.523 16.723 cv
294.387 16.738 294.223 16.746 294.027 16.746 cv
293.832 16.746 293.668 16.738 293.535 16.723 cv
293.402 16.707 293.297 16.687 293.219 16.66 cv
293.141 16.637 293.082 16.602 293.051 16.559 cv
293.012 16.52 292.996 16.473 293 16.418 cv
293 8.289 li
290.477 8.289 li
290.422 8.29303 290.375 8.27698 290.344 8.242 cv
290.305 8.21503 290.273 8.16803 290.25 8.10199 cv
290.219 8.039 290.199 7.953 290.191 7.84399 cv
290.176 7.742 290.172 7.61298 290.172 7.45697 cv
290.172 7.30499 290.176 7.172 290.191 7.05902 cv
290.199 6.953 290.219 6.86298 290.25 6.797 cv
290.273 6.73401 290.305 6.68701 290.344 6.65601 cv
290.375 6.62903 290.422 6.617 290.477 6.61298 cv
297.582 6.61298 li
297.625 6.617 297.668 6.62903 297.711 6.65601 cv
297.746 6.68701 297.777 6.73401 297.809 6.797 cv
297.832 6.86298 297.852 6.953 297.867 7.05902 cv
297.875 7.172 297.883 7.30499 297.887 7.45697 cv
cp
f
300.926 16.434 mo
300.922 16.488 300.906 16.531 300.879 16.57 cv
300.844 16.609 300.789 16.645 300.719 16.668 cv
300.641 16.695 300.543 16.711 300.418 16.727 cv
300.293 16.738 300.133 16.746 299.945 16.746 cv
299.75 16.746 299.594 16.738 299.469 16.727 cv
299.344 16.711 299.242 16.695 299.168 16.668 cv
299.09 16.645 299.035 16.609 299.008 16.57 cv
298.973 16.531 298.957 16.488 298.961 16.434 cv
298.961 9.5 li
298.957 9.44897 298.973 9.40198 299.008 9.36298 cv
299.035 9.32397 299.09 9.29303 299.168 9.26202 cv
299.242 9.23798 299.344 9.21503 299.469 9.19501 cv
299.594 9.18402 299.75 9.17603 299.945 9.172 cv
300.133 9.17603 300.293 9.18402 300.418 9.19501 cv
300.543 9.21503 300.641 9.23798 300.719 9.26202 cv
300.789 9.29303 300.844 9.32397 300.879 9.36298 cv
300.906 9.40198 300.922 9.44897 300.926 9.5 cv
cp
301.074 7.12903 mo
301.074 7.52698 300.992 7.80103 300.832 7.94897 cv
300.668 8.10199 300.371 8.17603 299.938 8.172 cv
299.492 8.17603 299.191 8.10199 299.043 7.95697 cv
298.887 7.81201 298.813 7.55103 298.813 7.16803 cv
298.813 6.77301 298.891 6.5 299.051 6.34802 cv
299.207 6.19501 299.508 6.117 299.953 6.117 cv
300.387 6.117 300.684 6.19098 300.84 6.34003 cv
300.996 6.48798 301.074 6.75403 301.074 7.12903 cv
cp
f
313.977 16.434 mo
313.973 16.488 313.957 16.531 313.93 16.57 cv
313.895 16.609 313.844 16.645 313.773 16.668 cv
313.699 16.695 313.598 16.711 313.477 16.727 cv
313.352 16.738 313.195 16.746 313.004 16.746 cv
312.805 16.746 312.645 16.738 312.52 16.727 cv
312.395 16.711 312.293 16.695 312.219 16.668 cv
312.141 16.645 312.09 16.609 312.063 16.57 cv
312.035 16.531 312.02 16.488 312.023 16.434 cv
312.023 12.312 li
312.02 12.082 312 11.867 311.957 11.672 cv
311.91 11.48 311.84 11.316 311.754 11.18 cv
311.66 11.043 311.547 10.937 311.41 10.859 cv
311.27 10.785 311.105 10.746 310.914 10.746 cv
310.68 10.746 310.441 10.84 310.203 11.02 cv
309.965 11.203 309.707 11.465 309.426 11.812 cv
309.426 16.434 li
309.426 16.488 309.41 16.531 309.379 16.57 cv
309.348 16.609 309.293 16.645 309.219 16.668 cv
309.141 16.695 309.039 16.711 308.918 16.727 cv
308.793 16.738 308.641 16.746 308.453 16.746 cv
308.258 16.746 308.098 16.738 307.977 16.727 cv
307.848 16.711 307.746 16.695 307.676 16.668 cv
307.598 16.645 307.547 16.609 307.516 16.57 cv
307.484 16.531 307.469 16.488 307.469 16.434 cv
307.469 12.312 li
307.469 12.082 307.445 11.867 307.402 11.672 cv
307.359 11.48 307.293 11.316 307.207 11.18 cv
307.113 11.043 307 10.937 306.863 10.859 cv
306.719 10.785 306.555 10.746 306.371 10.746 cv
306.129 10.746 305.891 10.84 305.652 11.02 cv
305.414 11.203 305.156 11.465 304.883 11.812 cv
304.883 16.434 li
304.879 16.488 304.863 16.531 304.836 16.57 cv
304.801 16.609 304.746 16.645 304.676 16.668 cv
304.598 16.695 304.5 16.711 304.375 16.727 cv
304.25 16.738 304.09 16.746 303.902 16.746 cv
303.707 16.746 303.551 16.738 303.426 16.727 cv
303.301 16.711 303.199 16.695 303.125 16.668 cv
303.047 16.645 302.992 16.609 302.965 16.57 cv
302.93 16.531 302.914 16.488 302.918 16.434 cv
302.918 9.48401 li
302.914 9.43701 302.93 9.39099 302.957 9.34802 cv
302.98 9.31201 303.027 9.28101 303.098 9.25 cv
303.164 9.22699 303.25 9.20697 303.359 9.19098 cv
303.465 9.18402 303.598 9.17603 303.762 9.172 cv
303.926 9.17603 304.063 9.18402 304.172 9.19098 cv
304.277 9.20697 304.363 9.22699 304.426 9.25 cv
304.484 9.28101 304.527 9.31201 304.555 9.34802 cv
304.578 9.39099 304.59 9.43701 304.594 9.48401 cv
304.594 10.285 li
304.977 9.875 305.359 9.56201 305.742 9.35199 cv
306.121 9.14502 306.523 9.04303 306.941 9.039 cv
307.227 9.04303 307.48 9.07001 307.711 9.12903 cv
307.938 9.19098 308.145 9.27698 308.324 9.38702 cv
308.504 9.5 308.656 9.63702 308.785 9.789 cv
308.914 9.94501 309.023 10.117 309.113 10.309 cv
309.32 10.086 309.523 9.89502 309.727 9.73401 cv
309.922 9.57397 310.121 9.44098 310.316 9.34003 cv
310.512 9.23798 310.707 9.164 310.902 9.11298 cv
311.098 9.06598 311.297 9.04303 311.5 9.039 cv
311.961 9.04303 312.348 9.12097 312.668 9.27301 cv
312.98 9.43402 313.238 9.64502 313.434 9.90997 cv
313.629 10.18 313.766 10.492 313.852 10.848 cv
313.93 11.207 313.973 11.586 313.977 11.984 cv
cp
f
322.313 12.758 mo
322.309 12.996 322.258 13.172 322.152 13.285 cv
322.043 13.402 321.895 13.461 321.715 13.457 cv
317.48 13.457 li
317.477 13.758 317.512 14.027 317.586 14.266 cv
317.652 14.508 317.766 14.711 317.922 14.879 cv
318.074 15.051 318.27 15.18 318.512 15.266 cv
318.75 15.355 319.039 15.398 319.383 15.398 cv
319.723 15.398 320.023 15.375 320.285 15.324 cv
320.543 15.277 320.77 15.223 320.961 15.16 cv
321.148 15.102 321.305 15.047 321.434 14.996 cv
321.555 14.949 321.656 14.926 321.738 14.922 cv
321.781 14.926 321.82 14.934 321.855 14.949 cv
321.883 14.969 321.91 15 321.93 15.047 cv
321.949 15.094 321.961 15.16 321.973 15.246 cv
321.977 15.332 321.98 15.441 321.984 15.57 cv
321.98 15.687 321.98 15.785 321.977 15.863 cv
321.969 15.945 321.961 16.012 321.953 16.066 cv
321.941 16.125 321.926 16.176 321.906 16.211 cv
321.887 16.254 321.859 16.289 321.828 16.324 cv
321.793 16.363 321.699 16.414 321.551 16.473 cv
321.395 16.539 321.203 16.602 320.973 16.656 cv
320.734 16.719 320.465 16.766 320.168 16.812 cv
319.863 16.852 319.543 16.875 319.203 16.879 cv
318.582 16.875 318.039 16.801 317.578 16.645 cv
317.109 16.492 316.723 16.254 316.414 15.937 cv
316.098 15.621 315.863 15.223 315.715 14.738 cv
315.559 14.258 315.484 13.691 315.488 13.035 cv
315.484 12.422 315.563 11.863 315.727 11.367 cv
315.883 10.871 316.117 10.453 316.43 10.105 cv
316.734 9.76202 317.109 9.49597 317.547 9.31201 cv
317.984 9.133 318.477 9.04303 319.031 9.039 cv
319.609 9.04303 320.109 9.12903 320.523 9.297 cv
320.938 9.47302 321.273 9.711 321.539 10.012 cv
321.801 10.316 321.996 10.676 322.125 11.09 cv
322.246 11.508 322.309 11.957 322.313 12.445 cv
cp
320.41 12.195 mo
320.422 11.645 320.313 11.211 320.078 10.898 cv
319.844 10.586 319.477 10.43 318.984 10.426 cv
318.734 10.43 318.52 10.477 318.336 10.566 cv
318.148 10.664 317.996 10.789 317.875 10.945 cv
317.75 11.105 317.656 11.293 317.594 11.508 cv
317.527 11.723 317.488 11.953 317.48 12.195 cv
cp
f
328.816 14.469 mo
328.813 14.867 328.738 15.215 328.594 15.516 cv
328.445 15.816 328.238 16.07 327.969 16.27 cv
327.695 16.477 327.375 16.625 327.008 16.727 cv
326.641 16.824 326.238 16.875 325.809 16.879 cv
325.543 16.875 325.297 16.855 325.063 16.82 cv
324.828 16.777 324.617 16.73 324.43 16.672 cv
324.242 16.613 324.086 16.551 323.961 16.488 cv
323.836 16.426 323.742 16.367 323.688 16.312 cv
323.629 16.258 323.586 16.176 323.559 16.059 cv
323.523 15.945 323.508 15.77 323.512 15.539 cv
323.508 15.391 323.516 15.27 323.527 15.176 cv
323.535 15.086 323.551 15.016 323.574 14.957 cv
323.594 14.906 323.617 14.867 323.652 14.848 cv
323.68 14.832 323.719 14.824 323.766 14.82 cv
323.82 14.824 323.906 14.855 324.02 14.918 cv
324.129 14.984 324.266 15.059 324.438 15.133 cv
324.602 15.215 324.797 15.285 325.016 15.352 cv
325.234 15.422 325.484 15.457 325.77 15.453 cv
325.945 15.457 326.102 15.437 326.242 15.398 cv
326.375 15.363 326.496 15.312 326.602 15.242 cv
326.699 15.176 326.773 15.09 326.828 14.984 cv
326.875 14.883 326.902 14.762 326.906 14.625 cv
326.902 14.469 326.855 14.336 326.762 14.227 cv
326.668 14.117 326.539 14.02 326.383 13.934 cv
326.219 13.852 326.039 13.773 325.844 13.699 cv
325.641 13.629 325.438 13.551 325.227 13.457 cv
325.016 13.371 324.809 13.27 324.613 13.152 cv
324.41 13.043 324.23 12.902 324.074 12.734 cv
323.91 12.57 323.785 12.371 323.691 12.133 cv
323.598 11.902 323.551 11.621 323.551 11.289 cv
323.551 10.961 323.613 10.656 323.742 10.375 cv
323.871 10.102 324.059 9.86298 324.305 9.664 cv
324.547 9.46899 324.844 9.31598 325.195 9.203 cv
325.543 9.09802 325.938 9.04303 326.379 9.039 cv
326.594 9.04303 326.805 9.05902 327.012 9.086 cv
327.215 9.12097 327.402 9.15997 327.57 9.203 cv
327.734 9.25403 327.875 9.30499 327.992 9.35498 cv
328.105 9.414 328.188 9.461 328.238 9.49597 cv
328.285 9.539 328.32 9.578 328.344 9.61298 cv
328.363 9.65601 328.375 9.703 328.387 9.75403 cv
328.395 9.80902 328.406 9.875 328.414 9.953 cv
328.422 10.039 328.426 10.137 328.426 10.254 cv
328.426 10.395 328.422 10.512 328.414 10.598 cv
328.406 10.691 328.391 10.762 328.375 10.809 cv
328.355 10.863 328.332 10.898 328.305 10.914 cv
328.27 10.937 328.234 10.945 328.195 10.941 cv
328.145 10.945 328.07 10.918 327.977 10.859 cv
327.875 10.809 327.754 10.75 327.605 10.684 cv
327.457 10.625 327.285 10.566 327.09 10.508 cv
326.895 10.457 326.672 10.43 326.426 10.426 cv
326.246 10.43 326.094 10.449 325.965 10.48 cv
325.832 10.52 325.723 10.57 325.645 10.637 cv
325.559 10.707 325.496 10.785 325.457 10.875 cv
325.41 10.969 325.391 11.066 325.395 11.168 cv
325.391 11.328 325.441 11.465 325.543 11.57 cv
325.641 11.684 325.77 11.777 325.934 11.859 cv
326.094 11.945 326.277 12.023 326.484 12.094 cv
326.688 12.168 326.895 12.25 327.105 12.332 cv
327.313 12.422 327.52 12.52 327.73 12.633 cv
327.934 12.746 328.117 12.887 328.277 13.051 cv
328.438 13.219 328.566 13.418 328.668 13.648 cv
328.762 13.883 328.813 14.156 328.816 14.469 cv
cp
f
341.008 12.887 mo
341.004 13.484 340.926 14.027 340.773 14.512 cv
340.613 15.004 340.379 15.422 340.063 15.773 cv
339.746 16.125 339.348 16.398 338.871 16.59 cv
338.391 16.781 337.832 16.875 337.195 16.879 cv
336.574 16.875 336.035 16.793 335.582 16.621 cv
335.121 16.453 334.742 16.203 334.445 15.875 cv
334.141 15.551 333.918 15.148 333.773 14.668 cv
333.629 14.191 333.559 13.645 333.559 13.027 cv
333.559 12.437 333.637 11.898 333.793 11.406 cv
333.949 10.918 334.188 10.496 334.508 10.145 cv
334.824 9.797 335.219 9.52301 335.695 9.328 cv
336.168 9.13702 336.727 9.04303 337.367 9.039 cv
337.992 9.04303 338.531 9.125 338.988 9.29303 cv
339.445 9.46503 339.824 9.71503 340.121 10.039 cv
340.418 10.367 340.641 10.77 340.789 11.246 cv
340.934 11.727 341.004 12.273 341.008 12.887 cv
cp
338.988 12.965 mo
338.984 12.629 338.957 12.312 338.906 12.02 cv
338.848 11.734 338.754 11.484 338.629 11.27 cv
338.496 11.059 338.324 10.891 338.113 10.77 cv
337.895 10.652 337.625 10.594 337.297 10.59 cv
337.008 10.594 336.754 10.648 336.535 10.75 cv
336.316 10.859 336.137 11.016 335.996 11.219 cv
335.855 11.426 335.75 11.672 335.68 11.957 cv
335.609 12.25 335.574 12.578 335.574 12.941 cv
335.574 13.289 335.602 13.605 335.66 13.891 cv
335.715 14.184 335.809 14.434 335.938 14.645 cv
336.063 14.859 336.234 15.023 336.457 15.137 cv
336.672 15.258 336.941 15.316 337.266 15.312 cv
337.559 15.316 337.816 15.262 338.039 15.152 cv
338.254 15.047 338.434 14.895 338.574 14.687 cv
338.715 14.488 338.816 14.242 338.887 13.953 cv
338.949 13.668 338.984 13.34 338.988 12.965 cv
cp
f
346.789 6.83197 mo
346.785 6.98401 346.781 7.10498 346.773 7.19501 cv
346.762 7.289 346.746 7.35901 346.727 7.40601 cv
346.703 7.45697 346.68 7.492 346.656 7.508 cv
346.629 7.52698 346.602 7.53497 346.57 7.53497 cv
346.531 7.53497 346.488 7.52698 346.449 7.508 cv
346.402 7.492 346.348 7.47302 346.285 7.44897 cv
346.215 7.42999 346.141 7.40997 346.055 7.39099 cv
345.965 7.375 345.859 7.367 345.742 7.36298 cv
345.598 7.367 345.477 7.38702 345.379 7.42999 cv
345.277 7.47699 345.195 7.547 345.129 7.64099 cv
345.059 7.73798 345.008 7.86298 344.98 8.01599 cv
344.945 8.16803 344.93 8.35498 344.934 8.578 cv
344.934 9.21899 li
346.203 9.21899 li
346.246 9.22302 346.289 9.23401 346.332 9.258 cv
346.367 9.28497 346.402 9.328 346.43 9.38702 cv
346.453 9.44897 346.473 9.53101 346.488 9.633 cv
346.5 9.73401 346.504 9.86298 346.508 10.012 cv
346.504 10.301 346.48 10.504 346.43 10.625 cv
346.375 10.75 346.297 10.812 346.203 10.809 cv
344.934 10.809 li
344.934 16.434 li
344.93 16.488 344.914 16.531 344.887 16.57 cv
344.852 16.609 344.801 16.645 344.73 16.668 cv
344.656 16.695 344.555 16.711 344.426 16.727 cv
344.293 16.738 344.133 16.746 343.949 16.746 cv
343.762 16.746 343.605 16.738 343.48 16.727 cv
343.352 16.711 343.25 16.695 343.176 16.668 cv
343.098 16.645 343.047 16.609 343.02 16.57 cv
342.988 16.531 342.973 16.488 342.977 16.434 cv
342.977 10.809 li
342.105 10.809 li
342.004 10.812 341.93 10.75 341.883 10.625 cv
341.832 10.504 341.805 10.301 341.809 10.012 cv
341.805 9.86298 341.813 9.73401 341.828 9.633 cv
341.84 9.53101 341.859 9.44897 341.883 9.38702 cv
341.906 9.328 341.938 9.28497 341.977 9.258 cv
342.016 9.23401 342.059 9.22302 342.113 9.21899 cv
342.977 9.21899 li
342.977 8.633 li
342.973 8.164 343.02 7.75 343.117 7.39099 cv
343.207 7.03497 343.355 6.73798 343.559 6.50403 cv
343.758 6.27002 344.012 6.09399 344.32 5.96899 cv
344.629 5.85199 344.992 5.789 345.418 5.789 cv
345.613 5.789 345.805 5.80902 345.992 5.84003 cv
346.172 5.87903 346.316 5.914 346.422 5.94897 cv
346.523 5.992 346.594 6.02698 346.633 6.05902 cv
346.668 6.09399 346.699 6.14502 346.723 6.20697 cv
346.746 6.27301 346.762 6.35498 346.773 6.45697 cv
346.781 6.55902 346.785 6.68402 346.789 6.83197 cv
cp
f
357.336 13.676 mo
357.332 14.207 357.234 14.672 357.039 15.07 cv
356.84 15.473 356.574 15.809 356.238 16.074 cv
355.898 16.344 355.5 16.543 355.051 16.676 cv
354.598 16.809 354.117 16.875 353.605 16.879 cv
353.254 16.875 352.93 16.848 352.633 16.793 cv
352.332 16.734 352.07 16.668 351.844 16.586 cv
351.613 16.508 351.422 16.422 351.27 16.332 cv
351.117 16.246 351.008 16.168 350.941 16.098 cv
350.871 16.031 350.82 15.934 350.797 15.809 cv
350.766 15.684 350.754 15.5 350.754 15.258 cv
350.754 15.098 350.758 14.965 350.77 14.852 cv
350.777 14.746 350.793 14.656 350.82 14.586 cv
350.84 14.52 350.871 14.473 350.914 14.441 cv
350.949 14.418 350.996 14.402 351.047 14.398 cv
351.117 14.402 351.219 14.445 351.355 14.527 cv
351.484 14.617 351.656 14.711 351.867 14.812 cv
352.074 14.918 352.32 15.016 352.609 15.098 cv
352.895 15.187 353.23 15.23 353.613 15.227 cv
353.863 15.23 354.086 15.199 354.281 15.137 cv
354.477 15.078 354.645 14.992 354.785 14.883 cv
354.922 14.773 355.027 14.641 355.102 14.48 cv
355.172 14.32 355.207 14.141 355.211 13.941 cv
355.207 13.715 355.145 13.52 355.023 13.352 cv
354.895 13.191 354.73 13.047 354.535 12.918 cv
354.332 12.793 354.105 12.672 353.852 12.559 cv
353.598 12.449 353.336 12.332 353.066 12.203 cv
352.793 12.082 352.531 11.937 352.277 11.777 cv
352.023 11.621 351.797 11.434 351.598 11.211 cv
351.395 10.992 351.23 10.73 351.109 10.426 cv
350.984 10.125 350.922 9.76599 350.926 9.34399 cv
350.922 8.86298 351.012 8.43701 351.191 8.07001 cv
351.367 7.70697 351.609 7.40198 351.918 7.15601 cv
352.219 6.91803 352.578 6.73798 352.992 6.617 cv
353.406 6.5 353.844 6.44098 354.305 6.43701 cv
354.543 6.44098 354.781 6.45697 355.023 6.492 cv
355.262 6.53101 355.484 6.58197 355.691 6.64099 cv
355.898 6.703 356.082 6.77301 356.246 6.84802 cv
356.402 6.92999 356.512 6.992 356.566 7.04303 cv
356.617 7.09802 356.652 7.14502 356.672 7.17603 cv
356.688 7.21503 356.703 7.26202 356.719 7.32001 cv
356.73 7.383 356.738 7.45697 356.746 7.547 cv
356.75 7.64099 356.754 7.75403 356.754 7.88702 cv
356.754 8.039 356.75 8.16803 356.742 8.27002 cv
356.734 8.375 356.719 8.461 356.703 8.52301 cv
356.68 8.59399 356.656 8.64099 356.625 8.672 cv
356.59 8.703 356.543 8.71899 356.488 8.71899 cv
356.43 8.71899 356.34 8.68402 356.215 8.60901 cv
356.09 8.539 355.934 8.461 355.754 8.37097 cv
355.57 8.289 355.363 8.211 355.125 8.14099 cv
354.883 8.07397 354.617 8.039 354.336 8.03497 cv
354.109 8.039 353.918 8.06598 353.754 8.117 cv
353.586 8.172 353.445 8.24597 353.336 8.34003 cv
353.223 8.43701 353.141 8.55499 353.086 8.68701 cv
353.031 8.828 353.004 8.96899 353.004 9.117 cv
353.004 9.34399 353.063 9.539 353.188 9.69897 cv
353.305 9.86298 353.469 10.008 353.68 10.133 cv
353.883 10.262 354.117 10.383 354.375 10.492 cv
354.633 10.609 354.898 10.727 355.172 10.848 cv
355.441 10.977 355.703 11.117 355.965 11.273 cv
356.223 11.43 356.457 11.621 356.66 11.84 cv
356.863 12.066 357.023 12.324 357.148 12.621 cv
357.27 12.918 357.332 13.27 357.336 13.676 cv
cp
f
365.387 16.434 mo
365.383 16.488 365.371 16.531 365.348 16.57 cv
365.32 16.609 365.273 16.645 365.211 16.668 cv
365.145 16.695 365.059 16.711 364.953 16.727 cv
364.848 16.738 364.715 16.746 364.555 16.746 cv
364.379 16.746 364.238 16.738 364.137 16.727 cv
364.027 16.711 363.945 16.695 363.883 16.668 cv
363.82 16.645 363.773 16.609 363.75 16.57 cv
363.719 16.531 363.707 16.488 363.711 16.434 cv
363.711 15.633 li
363.324 16.047 362.934 16.359 362.539 16.566 cv
362.137 16.773 361.727 16.875 361.305 16.879 cv
360.824 16.875 360.422 16.801 360.098 16.645 cv
359.773 16.492 359.512 16.277 359.313 16.008 cv
359.109 15.738 358.965 15.426 358.883 15.066 cv
358.793 14.711 358.75 14.27 358.754 13.738 cv
358.754 9.48401 li
358.75 9.43701 358.766 9.39099 358.797 9.34802 cv
358.824 9.31201 358.875 9.28101 358.953 9.25 cv
359.027 9.22699 359.129 9.20697 359.258 9.19098 cv
359.383 9.18402 359.539 9.17603 359.73 9.172 cv
359.918 9.17603 360.078 9.18402 360.203 9.19098 cv
360.328 9.20697 360.426 9.22699 360.504 9.25 cv
360.574 9.28101 360.629 9.31201 360.664 9.34802 cv
360.691 9.39099 360.707 9.43701 360.711 9.48401 cv
360.711 13.41 li
360.707 13.777 360.73 14.055 360.781 14.246 cv
360.824 14.437 360.895 14.602 360.996 14.738 cv
361.09 14.879 361.215 14.984 361.363 15.059 cv
361.512 15.137 361.684 15.176 361.879 15.172 cv
362.129 15.176 362.379 15.086 362.633 14.898 cv
362.883 14.719 363.152 14.453 363.438 14.105 cv
363.438 9.48401 li
363.438 9.43701 363.449 9.39099 363.48 9.34802 cv
363.504 9.31201 363.559 9.28101 363.637 9.25 cv
363.711 9.22699 363.809 9.20697 363.938 9.19098 cv
364.059 9.18402 364.219 9.17603 364.414 9.172 cv
364.605 9.17603 364.762 9.18402 364.887 9.19098 cv
365.008 9.20697 365.109 9.22699 365.184 9.25 cv
365.254 9.28101 365.305 9.31201 365.34 9.34802 cv
365.367 9.39099 365.383 9.43701 365.387 9.48401 cv
cp
f
374.316 12.863 mo
374.316 13.484 374.246 14.043 374.113 14.535 cv
373.973 15.031 373.777 15.449 373.527 15.797 cv
373.27 16.145 372.957 16.414 372.59 16.598 cv
372.215 16.785 371.793 16.875 371.324 16.879 cv
371.086 16.875 370.867 16.852 370.668 16.812 cv
370.461 16.766 370.27 16.699 370.086 16.598 cv
369.902 16.504 369.719 16.379 369.543 16.223 cv
369.359 16.074 369.176 15.891 368.992 15.68 cv
368.992 16.434 li
368.988 16.496 368.977 16.543 368.949 16.578 cv
368.918 16.621 368.871 16.652 368.809 16.676 cv
368.742 16.699 368.652 16.715 368.547 16.73 cv
368.438 16.738 368.309 16.746 368.152 16.746 cv
367.988 16.746 367.852 16.738 367.75 16.73 cv
367.641 16.715 367.555 16.699 367.492 16.676 cv
367.422 16.652 367.379 16.621 367.355 16.578 cv
367.328 16.543 367.313 16.496 367.316 16.434 cv
367.316 6.18701 li
367.313 6.13702 367.328 6.09003 367.363 6.047 cv
367.391 6.008 367.445 5.97302 367.523 5.94098 cv
367.598 5.914 367.699 5.89502 367.824 5.875 cv
367.949 5.86298 368.105 5.85498 368.301 5.85199 cv
368.488 5.85498 368.648 5.86298 368.773 5.875 cv
368.898 5.89502 368.996 5.914 369.074 5.94098 cv
369.145 5.97302 369.199 6.008 369.234 6.047 cv
369.262 6.09003 369.277 6.13702 369.281 6.18701 cv
369.281 10.027 li
369.457 9.85199 369.633 9.703 369.813 9.578 cv
369.984 9.45697 370.16 9.35199 370.34 9.27002 cv
370.512 9.19098 370.695 9.133 370.887 9.09399 cv
371.07 9.05902 371.27 9.04303 371.48 9.039 cv
371.992 9.04303 372.426 9.14502 372.789 9.34802 cv
373.145 9.55499 373.438 9.83197 373.664 10.18 cv
373.887 10.527 374.051 10.934 374.16 11.398 cv
374.262 11.863 374.316 12.352 374.316 12.863 cv
cp
372.281 13.004 mo
372.277 12.711 372.254 12.426 372.215 12.148 cv
372.168 11.875 372.094 11.633 371.984 11.418 cv
371.875 11.207 371.73 11.035 371.559 10.906 cv
371.383 10.781 371.164 10.719 370.902 10.715 cv
370.77 10.719 370.645 10.734 370.52 10.77 cv
370.395 10.809 370.266 10.871 370.133 10.957 cv
370 11.047 369.863 11.164 369.727 11.301 cv
369.582 11.441 369.434 11.613 369.281 11.82 cv
369.281 14.129 li
369.555 14.484 369.816 14.754 370.07 14.934 cv
370.32 15.121 370.586 15.211 370.863 15.211 cv
371.117 15.211 371.332 15.148 371.512 15.016 cv
371.684 14.891 371.832 14.723 371.949 14.512 cv
372.066 14.309 372.148 14.07 372.203 13.801 cv
372.25 13.539 372.277 13.273 372.281 13.004 cv
cp
f
379.426 12.781 mo
379.422 13.082 379.395 13.293 379.34 13.41 cv
379.281 13.535 379.191 13.594 379.066 13.59 cv
375.824 13.59 li
375.695 13.594 375.602 13.531 375.547 13.406 cv
375.484 13.285 375.457 13.078 375.461 12.781 cv
375.457 12.492 375.484 12.285 375.547 12.164 cv
375.602 12.047 375.695 11.988 375.824 11.984 cv
379.066 11.984 li
379.129 11.988 379.18 12 379.227 12.023 cv
379.266 12.051 379.305 12.098 379.34 12.156 cv
379.367 12.223 379.391 12.305 379.406 12.406 cv
379.418 12.512 379.422 12.637 379.426 12.781 cv
cp
f
383.078 16.418 mo
383.074 16.473 383.059 16.52 383.027 16.559 cv
382.992 16.602 382.934 16.637 382.859 16.66 cv
382.777 16.687 382.676 16.707 382.547 16.723 cv
382.414 16.738 382.246 16.746 382.051 16.746 cv
381.848 16.746 381.684 16.738 381.555 16.723 cv
381.418 16.707 381.313 16.687 381.238 16.66 cv
381.156 16.637 381.102 16.602 381.07 16.559 cv
381.035 16.52 381.016 16.473 381.02 16.418 cv
381.02 6.89502 li
381.016 6.84802 381.035 6.80103 381.07 6.75403 cv
381.102 6.71503 381.156 6.67999 381.242 6.65198 cv
381.32 6.62903 381.426 6.60901 381.559 6.59003 cv
381.684 6.578 381.848 6.57001 382.051 6.56598 cv
382.246 6.57001 382.414 6.578 382.547 6.59003 cv
382.676 6.60901 382.777 6.62903 382.859 6.65198 cv
382.934 6.67999 382.992 6.71503 383.027 6.75403 cv
383.059 6.80103 383.074 6.84802 383.078 6.89502 cv
cp
f
396.156 16.434 mo
396.152 16.488 396.137 16.531 396.109 16.57 cv
396.074 16.609 396.023 16.645 395.953 16.668 cv
395.879 16.695 395.777 16.711 395.656 16.727 cv
395.531 16.738 395.375 16.746 395.184 16.746 cv
394.984 16.746 394.824 16.738 394.699 16.727 cv
394.574 16.711 394.473 16.695 394.398 16.668 cv
394.32 16.645 394.27 16.609 394.242 16.57 cv
394.215 16.531 394.199 16.488 394.203 16.434 cv
394.203 12.312 li
394.199 12.082 394.18 11.867 394.137 11.672 cv
394.09 11.48 394.02 11.316 393.934 11.18 cv
393.84 11.043 393.727 10.937 393.59 10.859 cv
393.449 10.785 393.285 10.746 393.094 10.746 cv
392.859 10.746 392.621 10.84 392.383 11.02 cv
392.145 11.203 391.887 11.465 391.605 11.812 cv
391.605 16.434 li
391.605 16.488 391.59 16.531 391.559 16.57 cv
391.527 16.609 391.473 16.645 391.398 16.668 cv
391.32 16.695 391.219 16.711 391.098 16.727 cv
390.973 16.738 390.82 16.746 390.633 16.746 cv
390.438 16.746 390.277 16.738 390.156 16.727 cv
390.027 16.711 389.926 16.695 389.855 16.668 cv
389.777 16.645 389.727 16.609 389.695 16.57 cv
389.664 16.531 389.648 16.488 389.648 16.434 cv
389.648 12.312 li
389.648 12.082 389.625 11.867 389.582 11.672 cv
389.539 11.48 389.473 11.316 389.387 11.18 cv
389.293 11.043 389.18 10.937 389.043 10.859 cv
388.898 10.785 388.734 10.746 388.551 10.746 cv
388.309 10.746 388.07 10.84 387.832 11.02 cv
387.594 11.203 387.336 11.465 387.063 11.812 cv
387.063 16.434 li
387.059 16.488 387.043 16.531 387.016 16.57 cv
386.98 16.609 386.926 16.645 386.855 16.668 cv
386.777 16.695 386.68 16.711 386.555 16.727 cv
386.43 16.738 386.27 16.746 386.082 16.746 cv
385.887 16.746 385.73 16.738 385.605 16.727 cv
385.48 16.711 385.379 16.695 385.305 16.668 cv
385.227 16.645 385.172 16.609 385.145 16.57 cv
385.109 16.531 385.094 16.488 385.098 16.434 cv
385.098 9.48401 li
385.094 9.43701 385.109 9.39099 385.137 9.34802 cv
385.16 9.31201 385.207 9.28101 385.277 9.25 cv
385.344 9.22699 385.43 9.20697 385.539 9.19098 cv
385.645 9.18402 385.777 9.17603 385.941 9.172 cv
386.105 9.17603 386.242 9.18402 386.352 9.19098 cv
386.457 9.20697 386.543 9.22699 386.605 9.25 cv
386.664 9.28101 386.707 9.31201 386.734 9.34802 cv
386.758 9.39099 386.77 9.43701 386.773 9.48401 cv
386.773 10.285 li
387.156 9.875 387.539 9.56201 387.922 9.35199 cv
388.301 9.14502 388.703 9.04303 389.121 9.039 cv
389.406 9.04303 389.66 9.07001 389.891 9.12903 cv
390.117 9.19098 390.324 9.27698 390.504 9.38702 cv
390.684 9.5 390.836 9.63702 390.965 9.789 cv
391.094 9.94501 391.203 10.117 391.293 10.309 cv
391.5 10.086 391.703 9.89502 391.906 9.73401 cv
392.102 9.57397 392.301 9.44098 392.496 9.34003 cv
392.691 9.23798 392.887 9.164 393.082 9.11298 cv
393.277 9.06598 393.477 9.04303 393.68 9.039 cv
394.141 9.04303 394.527 9.12097 394.848 9.27301 cv
395.16 9.43402 395.418 9.64502 395.613 9.90997 cv
395.809 10.18 395.945 10.492 396.031 10.848 cv
396.109 11.207 396.152 11.586 396.156 11.984 cv
cp
f
404 16.457 mo
403.996 16.535 403.969 16.59 403.922 16.629 cv
403.867 16.672 403.785 16.699 403.676 16.719 cv
403.559 16.734 403.395 16.746 403.18 16.746 cv
402.941 16.746 402.77 16.734 402.668 16.719 cv
402.559 16.699 402.484 16.672 402.445 16.629 cv
402.398 16.59 402.379 16.535 402.379 16.457 cv
402.379 15.906 li
402.09 16.215 401.762 16.453 401.398 16.621 cv
401.031 16.793 400.625 16.875 400.18 16.879 cv
399.809 16.875 399.469 16.828 399.16 16.734 cv
398.852 16.641 398.586 16.5 398.359 16.305 cv
398.133 16.117 397.957 15.883 397.832 15.602 cv
397.707 15.324 397.645 14.996 397.648 14.617 cv
397.645 14.219 397.723 13.867 397.883 13.562 cv
398.039 13.266 398.277 13.02 398.594 12.824 cv
398.906 12.633 399.297 12.488 399.766 12.391 cv
400.234 12.301 400.777 12.254 401.395 12.25 cv
402.074 12.25 li
402.074 11.828 li
402.074 11.613 402.051 11.422 402.008 11.258 cv
401.961 11.098 401.887 10.961 401.789 10.848 cv
401.684 10.742 401.551 10.66 401.383 10.605 cv
401.211 10.555 401 10.531 400.758 10.527 cv
400.426 10.531 400.133 10.566 399.879 10.637 cv
399.617 10.711 399.391 10.793 399.195 10.879 cv
398.996 10.973 398.832 11.051 398.703 11.121 cv
398.566 11.195 398.457 11.234 398.379 11.23 cv
398.316 11.234 398.266 11.215 398.227 11.176 cv
398.18 11.141 398.145 11.09 398.117 11.02 cv
398.086 10.957 398.063 10.871 398.051 10.77 cv
398.031 10.672 398.023 10.562 398.027 10.441 cv
398.023 10.281 398.039 10.156 398.066 10.059 cv
398.09 9.96899 398.137 9.883 398.215 9.80499 cv
398.285 9.72998 398.414 9.64801 398.598 9.55902 cv
398.777 9.46899 398.988 9.383 399.234 9.30499 cv
399.477 9.22699 399.746 9.164 400.035 9.11298 cv
400.324 9.06598 400.621 9.04303 400.93 9.039 cv
401.473 9.04303 401.938 9.09399 402.324 9.19897 cv
402.711 9.30902 403.031 9.47302 403.281 9.69098 cv
403.531 9.90997 403.711 10.195 403.828 10.543 cv
403.938 10.895 403.996 11.309 404 11.781 cv
cp
402.074 13.48 mo
401.324 13.48 li
401.008 13.484 400.738 13.508 400.516 13.551 cv
400.289 13.602 400.105 13.672 399.969 13.762 cv
399.824 13.859 399.723 13.973 399.66 14.102 cv
399.594 14.238 399.559 14.387 399.563 14.555 cv
399.559 14.848 399.652 15.078 399.84 15.242 cv
400.023 15.41 400.281 15.492 400.609 15.492 cv
400.883 15.492 401.133 15.422 401.367 15.281 cv
401.594 15.141 401.832 14.937 402.074 14.664 cv
cp
f
412.223 9.96503 mo
412.219 10.219 412.191 10.402 412.137 10.52 cv
412.078 10.641 412.008 10.699 411.93 10.699 cv
411.109 10.699 li
411.223 10.824 411.305 10.969 411.355 11.125 cv
411.402 11.285 411.426 11.449 411.43 11.617 cv
411.426 12.027 411.359 12.387 411.227 12.699 cv
411.09 13.016 410.895 13.281 410.645 13.492 cv
410.391 13.711 410.09 13.875 409.734 13.984 cv
409.375 14.102 408.977 14.156 408.547 14.152 cv
408.32 14.156 408.109 14.129 407.906 14.07 cv
407.703 14.02 407.547 13.957 407.438 13.879 cv
407.375 13.949 407.316 14.027 407.27 14.121 cv
407.219 14.215 407.195 14.32 407.199 14.43 cv
407.195 14.586 407.262 14.707 407.395 14.801 cv
407.523 14.898 407.711 14.953 407.953 14.961 cv
409.645 15.023 li
410.039 15.039 410.391 15.098 410.699 15.191 cv
411.008 15.293 411.27 15.426 411.48 15.598 cv
411.691 15.773 411.852 15.984 411.961 16.227 cv
412.07 16.473 412.125 16.746 412.129 17.059 cv
412.125 17.395 412.051 17.719 411.902 18.027 cv
411.754 18.328 411.527 18.59 411.227 18.816 cv
410.922 19.035 410.543 19.215 410.09 19.348 cv
409.633 19.477 409.102 19.539 408.5 19.543 cv
407.902 19.539 407.398 19.492 406.98 19.402 cv
406.563 19.305 406.219 19.176 405.953 19.012 cv
405.684 18.844 405.488 18.645 405.371 18.418 cv
405.246 18.184 405.188 17.93 405.188 17.656 cv
405.188 17.484 405.207 17.324 405.254 17.168 cv
405.293 17.012 405.359 16.859 405.449 16.719 cv
405.531 16.574 405.637 16.441 405.762 16.309 cv
405.887 16.18 406.027 16.055 406.191 15.934 cv
405.965 15.82 405.793 15.66 405.672 15.449 cv
405.551 15.246 405.492 15.02 405.492 14.773 cv
405.492 14.473 405.559 14.195 405.699 13.937 cv
405.836 13.687 406.02 13.457 406.246 13.254 cv
406.063 13.074 405.918 12.859 405.809 12.602 cv
405.699 12.352 405.645 12.031 405.648 11.648 cv
405.645 11.246 405.715 10.887 405.859 10.562 cv
406 10.246 406.199 9.97699 406.457 9.75403 cv
406.711 9.53497 407.016 9.36298 407.367 9.24597 cv
407.719 9.12903 408.109 9.07001 408.539 9.07001 cv
408.758 9.07001 408.965 9.086 409.164 9.10901 cv
409.363 9.14099 409.551 9.17603 409.723 9.21899 cv
411.93 9.21899 li
412.012 9.22302 412.082 9.28101 412.141 9.39099 cv
412.191 9.508 412.219 9.69897 412.223 9.96503 cv
cp
409.707 11.609 mo
409.703 11.238 409.602 10.949 409.395 10.738 cv
409.184 10.535 408.891 10.43 408.516 10.426 cv
408.32 10.43 408.148 10.461 408.008 10.523 cv
407.859 10.59 407.738 10.68 407.645 10.789 cv
407.543 10.902 407.473 11.031 407.43 11.18 cv
407.379 11.328 407.355 11.484 407.359 11.641 cv
407.355 12 407.461 12.277 407.672 12.48 cv
407.879 12.687 408.168 12.793 408.539 12.789 cv
408.734 12.793 408.902 12.762 409.051 12.695 cv
409.191 12.637 409.313 12.551 409.414 12.437 cv
409.508 12.332 409.582 12.203 409.633 12.059 cv
409.68 11.918 409.703 11.77 409.707 11.609 cv
cp
410.168 17.16 mo
410.168 16.922 410.074 16.746 409.887 16.621 cv
409.699 16.5 409.441 16.43 409.113 16.418 cv
407.719 16.379 li
407.582 16.48 407.473 16.574 407.395 16.664 cv
407.313 16.754 407.25 16.84 407.203 16.926 cv
407.152 17.008 407.117 17.09 407.105 17.168 cv
407.086 17.246 407.078 17.324 407.082 17.41 cv
407.078 17.664 407.211 17.863 407.473 18 cv
407.734 18.133 408.105 18.199 408.586 18.203 cv
408.879 18.199 409.125 18.168 409.332 18.113 cv
409.531 18.051 409.695 17.973 409.824 17.875 cv
409.945 17.773 410.035 17.664 410.09 17.543 cv
410.141 17.422 410.168 17.293 410.168 17.16 cv
cp
f
419.832 12.758 mo
419.828 12.996 419.777 13.172 419.672 13.285 cv
419.563 13.402 419.414 13.461 419.234 13.457 cv
415 13.457 li
414.996 13.758 415.031 14.027 415.105 14.266 cv
415.172 14.508 415.285 14.711 415.441 14.879 cv
415.594 15.051 415.789 15.18 416.031 15.266 cv
416.27 15.355 416.559 15.398 416.902 15.398 cv
417.242 15.398 417.543 15.375 417.805 15.324 cv
418.063 15.277 418.289 15.223 418.48 15.16 cv
418.668 15.102 418.824 15.047 418.953 14.996 cv
419.074 14.949 419.176 14.926 419.258 14.922 cv
419.301 14.926 419.34 14.934 419.375 14.949 cv
419.402 14.969 419.43 15 419.449 15.047 cv
419.469 15.094 419.48 15.16 419.492 15.246 cv
419.496 15.332 419.5 15.441 419.504 15.57 cv
419.5 15.687 419.5 15.785 419.496 15.863 cv
419.488 15.945 419.48 16.012 419.473 16.066 cv
419.461 16.125 419.445 16.176 419.426 16.211 cv
419.406 16.254 419.379 16.289 419.348 16.324 cv
419.313 16.363 419.219 16.414 419.07 16.473 cv
418.914 16.539 418.723 16.602 418.492 16.656 cv
418.254 16.719 417.984 16.766 417.688 16.812 cv
417.383 16.852 417.063 16.875 416.723 16.879 cv
416.102 16.875 415.559 16.801 415.098 16.645 cv
414.629 16.492 414.242 16.254 413.934 15.937 cv
413.617 15.621 413.383 15.223 413.234 14.738 cv
413.078 14.258 413.004 13.691 413.008 13.035 cv
413.004 12.422 413.082 11.863 413.246 11.367 cv
413.402 10.871 413.637 10.453 413.949 10.105 cv
414.254 9.76202 414.629 9.49597 415.066 9.31201 cv
415.504 9.133 415.996 9.04303 416.551 9.039 cv
417.129 9.04303 417.629 9.12903 418.043 9.297 cv
418.457 9.47302 418.793 9.711 419.059 10.012 cv
419.32 10.316 419.516 10.676 419.645 11.09 cv
419.766 11.508 419.828 11.957 419.832 12.445 cv
cp
417.93 12.195 mo
417.941 11.645 417.832 11.211 417.598 10.898 cv
417.363 10.586 416.996 10.43 416.504 10.426 cv
416.254 10.43 416.039 10.477 415.855 10.566 cv
415.668 10.664 415.516 10.789 415.395 10.945 cv
415.27 11.105 415.176 11.293 415.113 11.508 cv
415.047 11.723 415.008 11.953 415 12.195 cv
cp
f
426.332 14.469 mo
426.328 14.867 426.254 15.215 426.109 15.516 cv
425.961 15.816 425.754 16.07 425.484 16.27 cv
425.211 16.477 424.891 16.625 424.523 16.727 cv
424.156 16.824 423.754 16.875 423.324 16.879 cv
423.059 16.875 422.813 16.855 422.578 16.82 cv
422.344 16.777 422.133 16.73 421.945 16.672 cv
421.758 16.613 421.602 16.551 421.477 16.488 cv
421.352 16.426 421.258 16.367 421.203 16.312 cv
421.145 16.258 421.102 16.176 421.074 16.059 cv
421.039 15.945 421.023 15.77 421.027 15.539 cv
421.023 15.391 421.031 15.27 421.043 15.176 cv
421.051 15.086 421.066 15.016 421.09 14.957 cv
421.109 14.906 421.133 14.867 421.168 14.848 cv
421.195 14.832 421.234 14.824 421.281 14.82 cv
421.336 14.824 421.422 14.855 421.535 14.918 cv
421.645 14.984 421.781 15.059 421.953 15.133 cv
422.117 15.215 422.313 15.285 422.531 15.352 cv
422.75 15.422 423 15.457 423.285 15.453 cv
423.461 15.457 423.617 15.437 423.758 15.398 cv
423.891 15.363 424.012 15.312 424.117 15.242 cv
424.215 15.176 424.289 15.09 424.344 14.984 cv
424.391 14.883 424.418 14.762 424.422 14.625 cv
424.418 14.469 424.371 14.336 424.277 14.227 cv
424.184 14.117 424.055 14.02 423.898 13.934 cv
423.734 13.852 423.555 13.773 423.359 13.699 cv
423.156 13.629 422.953 13.551 422.742 13.457 cv
422.531 13.371 422.324 13.27 422.129 13.152 cv
421.926 13.043 421.746 12.902 421.59 12.734 cv
421.426 12.57 421.301 12.371 421.207 12.133 cv
421.113 11.902 421.066 11.621 421.066 11.289 cv
421.066 10.961 421.129 10.656 421.258 10.375 cv
421.387 10.102 421.574 9.86298 421.82 9.664 cv
422.063 9.46899 422.359 9.31598 422.711 9.203 cv
423.059 9.09802 423.453 9.04303 423.895 9.039 cv
424.109 9.04303 424.32 9.05902 424.527 9.086 cv
424.73 9.12097 424.918 9.15997 425.086 9.203 cv
425.25 9.25403 425.391 9.30499 425.508 9.35498 cv
425.621 9.414 425.703 9.461 425.754 9.49597 cv
425.801 9.539 425.836 9.578 425.859 9.61298 cv
425.879 9.65601 425.891 9.703 425.902 9.75403 cv
425.91 9.80902 425.922 9.875 425.93 9.953 cv
425.938 10.039 425.941 10.137 425.941 10.254 cv
425.941 10.395 425.938 10.512 425.93 10.598 cv
425.922 10.691 425.906 10.762 425.891 10.809 cv
425.871 10.863 425.848 10.898 425.82 10.914 cv
425.785 10.937 425.75 10.945 425.711 10.941 cv
425.66 10.945 425.586 10.918 425.492 10.859 cv
425.391 10.809 425.27 10.75 425.121 10.684 cv
424.973 10.625 424.801 10.566 424.605 10.508 cv
424.41 10.457 424.188 10.43 423.941 10.426 cv
423.762 10.43 423.609 10.449 423.48 10.48 cv
423.348 10.52 423.238 10.57 423.16 10.637 cv
423.074 10.707 423.012 10.785 422.973 10.875 cv
422.926 10.969 422.906 11.066 422.91 11.168 cv
422.906 11.328 422.957 11.465 423.059 11.57 cv
423.156 11.684 423.285 11.777 423.449 11.859 cv
423.609 11.945 423.793 12.023 424 12.094 cv
424.203 12.168 424.41 12.25 424.621 12.332 cv
424.828 12.422 425.035 12.52 425.246 12.633 cv
425.449 12.746 425.633 12.887 425.793 13.051 cv
425.953 13.219 426.082 13.418 426.184 13.648 cv
426.277 13.883 426.328 14.156 426.332 14.469 cv
cp
f
435.105 12.781 mo
435.102 13.082 435.074 13.293 435.02 13.41 cv
434.961 13.535 434.871 13.594 434.746 13.59 cv
431.504 13.59 li
431.375 13.594 431.281 13.531 431.227 13.406 cv
431.164 13.285 431.137 13.078 431.141 12.781 cv
431.137 12.492 431.164 12.285 431.227 12.164 cv
431.281 12.047 431.375 11.988 431.504 11.984 cv
434.746 11.984 li
434.809 11.988 434.859 12 434.906 12.023 cv
434.945 12.051 434.984 12.098 435.02 12.156 cv
435.047 12.223 435.07 12.305 435.086 12.406 cv
435.098 12.512 435.102 12.637 435.105 12.781 cv
cp
f
447.777 16.434 mo
447.777 16.496 447.766 16.543 447.746 16.578 cv
447.727 16.621 447.68 16.652 447.602 16.676 cv
447.523 16.699 447.406 16.715 447.258 16.73 cv
447.102 16.738 446.898 16.746 446.641 16.746 cv
446.422 16.746 446.246 16.738 446.117 16.73 cv
445.988 16.715 445.887 16.699 445.813 16.672 cv
445.734 16.645 445.68 16.609 445.652 16.562 cv
445.617 16.523 445.594 16.469 445.574 16.402 cv
444.668 14.152 li
444.559 13.898 444.453 13.672 444.352 13.473 cv
444.242 13.277 444.129 13.113 444.004 12.98 cv
443.875 12.852 443.727 12.75 443.563 12.68 cv
443.395 12.613 443.203 12.582 442.988 12.578 cv
442.348 12.578 li
442.348 16.418 li
442.344 16.473 442.328 16.52 442.297 16.559 cv
442.262 16.602 442.207 16.637 442.129 16.66 cv
442.051 16.687 441.945 16.707 441.816 16.723 cv
441.684 16.738 441.52 16.746 441.32 16.746 cv
441.121 16.746 440.953 16.738 440.824 16.723 cv
440.688 16.707 440.582 16.687 440.508 16.66 cv
440.426 16.637 440.371 16.602 440.344 16.559 cv
440.309 16.52 440.293 16.473 440.297 16.418 cv
440.297 7.26202 li
440.293 7.03497 440.352 6.87097 440.473 6.76599 cv
440.586 6.66803 440.73 6.617 440.906 6.61298 cv
443.516 6.61298 li
443.777 6.617 443.996 6.62097 444.172 6.62903 cv
444.34 6.64099 444.496 6.65198 444.641 6.66803 cv
445.043 6.72699 445.406 6.828 445.73 6.96503 cv
446.055 7.10901 446.332 7.29303 446.559 7.51599 cv
446.785 7.74597 446.957 8.01202 447.078 8.32001 cv
447.195 8.62903 447.254 8.98401 447.258 9.383 cv
447.254 9.72302 447.211 10.031 447.129 10.305 cv
447.039 10.586 446.914 10.832 446.75 11.051 cv
446.582 11.27 446.375 11.461 446.133 11.617 cv
445.887 11.781 445.609 11.91 445.301 12.008 cv
445.449 12.082 445.594 12.172 445.727 12.273 cv
445.859 12.383 445.98 12.508 446.098 12.652 cv
446.211 12.801 446.324 12.969 446.43 13.156 cv
446.531 13.348 446.633 13.562 446.734 13.801 cv
447.586 15.789 li
447.66 15.988 447.711 16.129 447.738 16.219 cv
447.762 16.312 447.777 16.387 447.777 16.434 cv
cp
445.137 9.59399 mo
445.133 9.26202 445.059 8.97998 444.91 8.75 cv
444.758 8.52301 444.512 8.36298 444.172 8.26599 cv
444.066 8.242 443.949 8.21899 443.816 8.203 cv
443.684 8.18701 443.5 8.17999 443.266 8.17999 cv
442.348 8.17999 li
442.348 11.043 li
443.391 11.043 li
443.68 11.047 443.938 11.012 444.156 10.937 cv
444.375 10.871 444.555 10.77 444.699 10.641 cv
444.844 10.516 444.953 10.363 445.027 10.184 cv
445.098 10.008 445.133 9.81201 445.137 9.59399 cv
cp
f
455.363 12.758 mo
455.359 12.996 455.309 13.172 455.203 13.285 cv
455.094 13.402 454.945 13.461 454.766 13.457 cv
450.531 13.457 li
450.527 13.758 450.563 14.027 450.637 14.266 cv
450.703 14.508 450.816 14.711 450.973 14.879 cv
451.125 15.051 451.32 15.18 451.563 15.266 cv
451.801 15.355 452.09 15.398 452.434 15.398 cv
452.773 15.398 453.074 15.375 453.336 15.324 cv
453.594 15.277 453.82 15.223 454.012 15.16 cv
454.199 15.102 454.355 15.047 454.484 14.996 cv
454.605 14.949 454.707 14.926 454.789 14.922 cv
454.832 14.926 454.871 14.934 454.906 14.949 cv
454.934 14.969 454.961 15 454.98 15.047 cv
455 15.094 455.012 15.16 455.023 15.246 cv
455.027 15.332 455.031 15.441 455.035 15.57 cv
455.031 15.687 455.031 15.785 455.027 15.863 cv
455.02 15.945 455.012 16.012 455.004 16.066 cv
454.992 16.125 454.977 16.176 454.957 16.211 cv
454.938 16.254 454.91 16.289 454.879 16.324 cv
454.844 16.363 454.75 16.414 454.602 16.473 cv
454.445 16.539 454.254 16.602 454.023 16.656 cv
453.785 16.719 453.516 16.766 453.219 16.812 cv
452.914 16.852 452.594 16.875 452.254 16.879 cv
451.633 16.875 451.09 16.801 450.629 16.645 cv
450.16 16.492 449.773 16.254 449.465 15.937 cv
449.148 15.621 448.914 15.223 448.766 14.738 cv
448.609 14.258 448.535 13.691 448.539 13.035 cv
448.535 12.422 448.613 11.863 448.777 11.367 cv
448.934 10.871 449.168 10.453 449.48 10.105 cv
449.785 9.76202 450.16 9.49597 450.598 9.31201 cv
451.035 9.133 451.527 9.04303 452.082 9.039 cv
452.66 9.04303 453.16 9.12903 453.574 9.297 cv
453.988 9.47302 454.324 9.711 454.59 10.012 cv
454.852 10.316 455.047 10.676 455.176 11.09 cv
455.297 11.508 455.359 11.957 455.363 12.445 cv
cp
453.461 12.195 mo
453.473 11.645 453.363 11.211 453.129 10.898 cv
452.895 10.586 452.527 10.43 452.035 10.426 cv
451.785 10.43 451.57 10.477 451.387 10.566 cv
451.199 10.664 451.047 10.789 450.926 10.945 cv
450.801 11.105 450.707 11.293 450.645 11.508 cv
450.578 11.723 450.539 11.953 450.531 12.195 cv
cp
f
468.027 16.434 mo
468.023 16.488 468.008 16.531 467.98 16.57 cv
467.945 16.609 467.895 16.645 467.824 16.668 cv
467.75 16.695 467.648 16.711 467.527 16.727 cv
467.402 16.738 467.246 16.746 467.055 16.746 cv
466.855 16.746 466.695 16.738 466.57 16.727 cv
466.445 16.711 466.344 16.695 466.27 16.668 cv
466.191 16.645 466.141 16.609 466.113 16.57 cv
466.086 16.531 466.07 16.488 466.074 16.434 cv
466.074 12.312 li
466.07 12.082 466.051 11.867 466.008 11.672 cv
465.961 11.48 465.891 11.316 465.805 11.18 cv
465.711 11.043 465.598 10.937 465.461 10.859 cv
465.32 10.785 465.156 10.746 464.965 10.746 cv
464.73 10.746 464.492 10.84 464.254 11.02 cv
464.016 11.203 463.758 11.465 463.477 11.812 cv
463.477 16.434 li
463.477 16.488 463.461 16.531 463.43 16.57 cv
463.398 16.609 463.344 16.645 463.27 16.668 cv
463.191 16.695 463.09 16.711 462.969 16.727 cv
462.844 16.738 462.691 16.746 462.504 16.746 cv
462.309 16.746 462.148 16.738 462.027 16.727 cv
461.898 16.711 461.797 16.695 461.727 16.668 cv
461.648 16.645 461.598 16.609 461.566 16.57 cv
461.535 16.531 461.52 16.488 461.52 16.434 cv
461.52 12.312 li
461.52 12.082 461.496 11.867 461.453 11.672 cv
461.41 11.48 461.344 11.316 461.258 11.18 cv
461.164 11.043 461.051 10.937 460.914 10.859 cv
460.77 10.785 460.605 10.746 460.422 10.746 cv
460.18 10.746 459.941 10.84 459.703 11.02 cv
459.465 11.203 459.207 11.465 458.934 11.812 cv
458.934 16.434 li
458.93 16.488 458.914 16.531 458.887 16.57 cv
458.852 16.609 458.797 16.645 458.727 16.668 cv
458.648 16.695 458.551 16.711 458.426 16.727 cv
458.301 16.738 458.141 16.746 457.953 16.746 cv
457.758 16.746 457.602 16.738 457.477 16.727 cv
457.352 16.711 457.25 16.695 457.176 16.668 cv
457.098 16.645 457.043 16.609 457.016 16.57 cv
456.98 16.531 456.965 16.488 456.969 16.434 cv
456.969 9.48401 li
456.965 9.43701 456.98 9.39099 457.008 9.34802 cv
457.031 9.31201 457.078 9.28101 457.148 9.25 cv
457.215 9.22699 457.301 9.20697 457.41 9.19098 cv
457.516 9.18402 457.648 9.17603 457.813 9.172 cv
457.977 9.17603 458.113 9.18402 458.223 9.19098 cv
458.328 9.20697 458.414 9.22699 458.477 9.25 cv
458.535 9.28101 458.578 9.31201 458.605 9.34802 cv
458.629 9.39099 458.641 9.43701 458.645 9.48401 cv
458.645 10.285 li
459.027 9.875 459.41 9.56201 459.793 9.35199 cv
460.172 9.14502 460.574 9.04303 460.992 9.039 cv
461.277 9.04303 461.531 9.07001 461.762 9.12903 cv
461.988 9.19098 462.195 9.27698 462.375 9.38702 cv
462.555 9.5 462.707 9.63702 462.836 9.789 cv
462.965 9.94501 463.074 10.117 463.164 10.309 cv
463.371 10.086 463.574 9.89502 463.777 9.73401 cv
463.973 9.57397 464.172 9.44098 464.367 9.34003 cv
464.563 9.23798 464.758 9.164 464.953 9.11298 cv
465.148 9.06598 465.348 9.04303 465.551 9.039 cv
466.012 9.04303 466.398 9.12097 466.719 9.27301 cv
467.031 9.43402 467.289 9.64502 467.484 9.90997 cv
467.68 10.18 467.816 10.492 467.902 10.848 cv
467.98 11.207 468.023 11.586 468.027 11.984 cv
cp
f
476.977 12.887 mo
476.973 13.484 476.895 14.027 476.742 14.512 cv
476.582 15.004 476.348 15.422 476.031 15.773 cv
475.715 16.125 475.316 16.398 474.84 16.59 cv
474.359 16.781 473.801 16.875 473.164 16.879 cv
472.543 16.875 472.004 16.793 471.551 16.621 cv
471.09 16.453 470.711 16.203 470.414 15.875 cv
470.109 15.551 469.887 15.148 469.742 14.668 cv
469.598 14.191 469.527 13.645 469.527 13.027 cv
469.527 12.437 469.605 11.898 469.762 11.406 cv
469.918 10.918 470.156 10.496 470.477 10.145 cv
470.793 9.797 471.188 9.52301 471.664 9.328 cv
472.137 9.13702 472.695 9.04303 473.336 9.039 cv
473.961 9.04303 474.5 9.125 474.957 9.29303 cv
475.414 9.46503 475.793 9.71503 476.09 10.039 cv
476.387 10.367 476.609 10.77 476.758 11.246 cv
476.902 11.727 476.973 12.273 476.977 12.887 cv
cp
474.957 12.965 mo
474.953 12.629 474.926 12.312 474.875 12.02 cv
474.816 11.734 474.723 11.484 474.598 11.27 cv
474.465 11.059 474.293 10.891 474.082 10.77 cv
473.863 10.652 473.594 10.594 473.266 10.59 cv
472.977 10.594 472.723 10.648 472.504 10.75 cv
472.285 10.859 472.105 11.016 471.965 11.219 cv
471.824 11.426 471.719 11.672 471.648 11.957 cv
471.578 12.25 471.543 12.578 471.543 12.941 cv
471.543 13.289 471.57 13.605 471.629 13.891 cv
471.684 14.184 471.777 14.434 471.906 14.645 cv
472.031 14.859 472.203 15.023 472.426 15.137 cv
472.641 15.258 472.91 15.316 473.234 15.312 cv
473.527 15.316 473.785 15.262 474.008 15.152 cv
474.223 15.047 474.402 14.895 474.543 14.687 cv
474.684 14.488 474.785 14.242 474.855 13.953 cv
474.918 13.668 474.953 13.34 474.957 12.965 cv
cp
f
482.68 15.75 mo
482.68 15.977 482.664 16.152 482.637 16.273 cv
482.605 16.398 482.566 16.484 482.523 16.531 cv
482.473 16.582 482.406 16.625 482.316 16.664 cv
482.223 16.703 482.113 16.734 481.996 16.766 cv
481.871 16.789 481.738 16.812 481.598 16.832 cv
481.453 16.844 481.313 16.852 481.168 16.855 cv
480.777 16.852 480.438 16.801 480.152 16.707 cv
479.867 16.605 479.633 16.457 479.445 16.25 cv
479.258 16.047 479.117 15.789 479.031 15.477 cv
478.938 15.168 478.895 14.797 478.898 14.367 cv
478.898 10.809 li
478.066 10.809 li
477.965 10.812 477.891 10.75 477.84 10.625 cv
477.785 10.504 477.758 10.301 477.762 10.012 cv
477.758 9.86298 477.766 9.73401 477.781 9.633 cv
477.793 9.53101 477.813 9.44897 477.84 9.38702 cv
477.863 9.328 477.895 9.28497 477.938 9.258 cv
477.973 9.23401 478.02 9.22302 478.074 9.21899 cv
478.898 9.21899 li
478.898 7.66803 li
478.895 7.62097 478.91 7.57397 478.941 7.52698 cv
478.969 7.48798 479.02 7.453 479.098 7.422 cv
479.172 7.39801 479.273 7.375 479.402 7.35901 cv
479.527 7.34802 479.684 7.34399 479.875 7.34003 cv
480.063 7.34399 480.223 7.34802 480.352 7.35901 cv
480.477 7.375 480.578 7.39801 480.652 7.422 cv
480.723 7.453 480.773 7.48798 480.809 7.52698 cv
480.836 7.57397 480.852 7.62097 480.855 7.66803 cv
480.855 9.21899 li
482.367 9.21899 li
482.418 9.22302 482.465 9.23401 482.504 9.258 cv
482.543 9.28497 482.574 9.328 482.602 9.38702 cv
482.625 9.44897 482.645 9.53101 482.66 9.633 cv
482.672 9.73401 482.68 9.86298 482.68 10.012 cv
482.68 10.301 482.652 10.504 482.602 10.625 cv
482.547 10.75 482.473 10.812 482.375 10.809 cv
480.855 10.809 li
480.855 14.074 li
480.852 14.453 480.91 14.738 481.035 14.926 cv
481.152 15.117 481.367 15.211 481.672 15.211 cv
481.773 15.211 481.867 15.203 481.953 15.184 cv
482.035 15.168 482.109 15.148 482.176 15.121 cv
482.238 15.102 482.293 15.078 482.34 15.059 cv
482.383 15.043 482.422 15.035 482.461 15.031 cv
482.488 15.035 482.52 15.043 482.551 15.059 cv
482.578 15.078 482.598 15.117 482.617 15.168 cv
482.629 15.227 482.645 15.301 482.66 15.391 cv
482.672 15.488 482.68 15.605 482.68 15.75 cv
cp
f
490.27 12.758 mo
490.266 12.996 490.215 13.172 490.109 13.285 cv
490 13.402 489.852 13.461 489.672 13.457 cv
485.438 13.457 li
485.434 13.758 485.469 14.027 485.543 14.266 cv
485.609 14.508 485.723 14.711 485.879 14.879 cv
486.031 15.051 486.227 15.18 486.469 15.266 cv
486.707 15.355 486.996 15.398 487.34 15.398 cv
487.68 15.398 487.98 15.375 488.242 15.324 cv
488.5 15.277 488.727 15.223 488.918 15.16 cv
489.105 15.102 489.262 15.047 489.391 14.996 cv
489.512 14.949 489.613 14.926 489.695 14.922 cv
489.738 14.926 489.777 14.934 489.813 14.949 cv
489.84 14.969 489.867 15 489.887 15.047 cv
489.906 15.094 489.918 15.16 489.93 15.246 cv
489.934 15.332 489.938 15.441 489.941 15.57 cv
489.938 15.687 489.938 15.785 489.934 15.863 cv
489.926 15.945 489.918 16.012 489.91 16.066 cv
489.898 16.125 489.883 16.176 489.863 16.211 cv
489.844 16.254 489.816 16.289 489.785 16.324 cv
489.75 16.363 489.656 16.414 489.508 16.473 cv
489.352 16.539 489.16 16.602 488.93 16.656 cv
488.691 16.719 488.422 16.766 488.125 16.812 cv
487.82 16.852 487.5 16.875 487.16 16.879 cv
486.539 16.875 485.996 16.801 485.535 16.645 cv
485.066 16.492 484.68 16.254 484.371 15.937 cv
484.055 15.621 483.82 15.223 483.672 14.738 cv
483.516 14.258 483.441 13.691 483.445 13.035 cv
483.441 12.422 483.52 11.863 483.684 11.367 cv
483.84 10.871 484.074 10.453 484.387 10.105 cv
484.691 9.76202 485.066 9.49597 485.504 9.31201 cv
485.941 9.133 486.434 9.04303 486.988 9.039 cv
487.566 9.04303 488.066 9.12903 488.48 9.297 cv
488.895 9.47302 489.23 9.711 489.496 10.012 cv
489.758 10.316 489.953 10.676 490.082 11.09 cv
490.203 11.508 490.266 11.957 490.27 12.445 cv
cp
488.367 12.195 mo
488.379 11.645 488.27 11.211 488.035 10.898 cv
487.801 10.586 487.434 10.43 486.941 10.426 cv
486.691 10.43 486.477 10.477 486.293 10.566 cv
486.105 10.664 485.953 10.789 485.832 10.945 cv
485.707 11.105 485.613 11.293 485.551 11.508 cv
485.484 11.723 485.445 11.953 485.438 12.195 cv
cp
f
507.465 16.418 mo
507.461 16.473 507.449 16.52 507.422 16.559 cv
507.391 16.602 507.336 16.637 507.266 16.66 cv
507.188 16.687 507.09 16.707 506.965 16.723 cv
506.84 16.738 506.68 16.746 506.488 16.746 cv
506.301 16.746 506.145 16.738 506.023 16.723 cv
505.895 16.707 505.797 16.687 505.727 16.66 cv
505.652 16.637 505.602 16.602 505.57 16.559 cv
505.539 16.52 505.523 16.473 505.523 16.418 cv
505.523 8.211 li
505.508 8.211 li
502.586 16.41 li
502.563 16.48 502.527 16.535 502.484 16.578 cv
502.434 16.625 502.371 16.66 502.293 16.684 cv
502.211 16.711 502.109 16.727 501.984 16.734 cv
501.859 16.742 501.707 16.746 501.535 16.746 cv
501.355 16.746 501.207 16.738 501.082 16.727 cv
500.957 16.711 500.852 16.691 500.773 16.664 cv
500.688 16.637 500.625 16.602 500.582 16.559 cv
500.531 16.52 500.5 16.473 500.488 16.41 cv
497.668 8.211 li
497.652 8.211 li
497.652 16.418 li
497.648 16.473 497.633 16.52 497.609 16.559 cv
497.578 16.602 497.527 16.637 497.449 16.66 cv
497.371 16.687 497.27 16.707 497.148 16.723 cv
497.023 16.738 496.867 16.746 496.68 16.746 cv
496.488 16.746 496.332 16.738 496.211 16.723 cv
496.082 16.707 495.98 16.687 495.91 16.66 cv
495.832 16.637 495.781 16.602 495.754 16.559 cv
495.723 16.52 495.707 16.473 495.711 16.418 cv
495.711 7.43402 li
495.707 7.172 495.777 6.96899 495.922 6.82397 cv
496.059 6.68701 496.246 6.617 496.484 6.61298 cv
497.824 6.61298 li
498.063 6.617 498.266 6.63702 498.438 6.672 cv
498.605 6.71503 498.754 6.77698 498.883 6.867 cv
499.004 6.961 499.109 7.08197 499.195 7.22699 cv
499.277 7.37903 499.348 7.56201 499.414 7.77698 cv
501.598 13.785 li
501.629 13.785 li
503.887 7.79303 li
503.953 7.57397 504.027 7.39099 504.109 7.23798 cv
504.188 7.09003 504.281 6.96899 504.391 6.87097 cv
504.496 6.78101 504.621 6.71503 504.766 6.672 cv
504.91 6.63702 505.078 6.617 505.273 6.61298 cv
506.652 6.61298 li
506.789 6.617 506.91 6.633 507.016 6.66803 cv
507.113 6.70697 507.195 6.76202 507.266 6.828 cv
507.328 6.90198 507.379 6.98798 507.414 7.086 cv
507.445 7.19098 507.461 7.30902 507.465 7.43402 cv
cp
f
516.574 12.887 mo
516.57 13.484 516.492 14.027 516.34 14.512 cv
516.18 15.004 515.945 15.422 515.629 15.773 cv
515.313 16.125 514.914 16.398 514.438 16.59 cv
513.957 16.781 513.398 16.875 512.762 16.879 cv
512.141 16.875 511.602 16.793 511.148 16.621 cv
510.688 16.453 510.309 16.203 510.012 15.875 cv
509.707 15.551 509.484 15.148 509.34 14.668 cv
509.195 14.191 509.125 13.645 509.125 13.027 cv
509.125 12.437 509.203 11.898 509.359 11.406 cv
509.516 10.918 509.754 10.496 510.074 10.145 cv
510.391 9.797 510.785 9.52301 511.262 9.328 cv
511.734 9.13702 512.293 9.04303 512.934 9.039 cv
513.559 9.04303 514.098 9.125 514.555 9.29303 cv
515.012 9.46503 515.391 9.71503 515.688 10.039 cv
515.984 10.367 516.207 10.77 516.355 11.246 cv
516.5 11.727 516.57 12.273 516.574 12.887 cv
cp
514.555 12.965 mo
514.551 12.629 514.523 12.312 514.473 12.02 cv
514.414 11.734 514.32 11.484 514.195 11.27 cv
514.063 11.059 513.891 10.891 513.68 10.77 cv
513.461 10.652 513.191 10.594 512.863 10.59 cv
512.574 10.594 512.32 10.648 512.102 10.75 cv
511.883 10.859 511.703 11.016 511.563 11.219 cv
511.422 11.426 511.316 11.672 511.246 11.957 cv
511.176 12.25 511.141 12.578 511.141 12.941 cv
511.141 13.289 511.168 13.605 511.227 13.891 cv
511.281 14.184 511.375 14.434 511.504 14.645 cv
511.629 14.859 511.801 15.023 512.023 15.137 cv
512.238 15.258 512.508 15.316 512.832 15.312 cv
513.125 15.316 513.383 15.262 513.605 15.152 cv
513.82 15.047 514 14.895 514.141 14.687 cv
514.281 14.488 514.383 14.242 514.453 13.953 cv
514.516 13.668 514.551 13.34 514.555 12.965 cv
cp
f
524.723 16.434 mo
524.719 16.496 524.707 16.543 524.684 16.578 cv
524.656 16.621 524.609 16.652 524.551 16.676 cv
524.484 16.699 524.402 16.715 524.297 16.73 cv
524.191 16.738 524.059 16.746 523.906 16.746 cv
523.734 16.746 523.602 16.738 523.5 16.73 cv
523.395 16.715 523.309 16.699 523.246 16.676 cv
523.18 16.652 523.133 16.621 523.105 16.578 cv
523.074 16.543 523.059 16.496 523.063 16.434 cv
523.063 15.664 li
522.703 16.051 522.328 16.348 521.938 16.559 cv
521.539 16.77 521.105 16.875 520.633 16.879 cv
520.098 16.875 519.648 16.773 519.285 16.57 cv
518.918 16.367 518.621 16.094 518.391 15.742 cv
518.156 15.398 517.988 14.992 517.887 14.523 cv
517.785 14.062 517.734 13.57 517.734 13.051 cv
517.734 12.437 517.797 11.883 517.93 11.387 cv
518.059 10.895 518.254 10.473 518.512 10.125 cv
518.766 9.77698 519.082 9.51202 519.461 9.32001 cv
519.84 9.13702 520.277 9.04303 520.773 9.039 cv
521.16 9.04303 521.512 9.12097 521.832 9.27698 cv
522.145 9.43701 522.461 9.66803 522.773 9.97302 cv
522.773 6.211 li
522.773 6.15997 522.785 6.11298 522.816 6.07001 cv
522.84 6.03101 522.895 5.99597 522.973 5.96503 cv
523.047 5.93701 523.145 5.91803 523.273 5.89801 cv
523.395 5.88702 523.555 5.87903 523.75 5.875 cv
523.941 5.87903 524.098 5.88702 524.223 5.89801 cv
524.344 5.91803 524.445 5.93701 524.52 5.96503 cv
524.59 5.99597 524.641 6.03101 524.676 6.07001 cv
524.703 6.11298 524.719 6.15997 524.723 6.211 cv
cp
522.773 11.789 mo
522.492 11.437 522.223 11.168 521.969 10.98 cv
521.707 10.793 521.438 10.699 521.16 10.699 cv
520.906 10.699 520.688 10.766 520.504 10.891 cv
520.316 11.023 520.168 11.191 520.059 11.402 cv
519.945 11.613 519.863 11.852 519.809 12.113 cv
519.754 12.379 519.727 12.648 519.727 12.918 cv
519.727 13.215 519.75 13.496 519.797 13.77 cv
519.844 14.047 519.918 14.293 520.027 14.508 cv
520.129 14.723 520.273 14.895 520.453 15.023 cv
520.629 15.156 520.852 15.223 521.121 15.219 cv
521.254 15.223 521.383 15.203 521.516 15.16 cv
521.641 15.125 521.773 15.062 521.906 14.969 cv
522.039 14.883 522.176 14.766 522.316 14.621 cv
522.457 14.48 522.609 14.305 522.773 14.098 cv
cp
f
533.121 12.758 mo
533.117 12.996 533.066 13.172 532.961 13.285 cv
532.852 13.402 532.703 13.461 532.523 13.457 cv
528.289 13.457 li
528.285 13.758 528.32 14.027 528.395 14.266 cv
528.461 14.508 528.574 14.711 528.73 14.879 cv
528.883 15.051 529.078 15.18 529.32 15.266 cv
529.559 15.355 529.848 15.398 530.191 15.398 cv
530.531 15.398 530.832 15.375 531.094 15.324 cv
531.352 15.277 531.578 15.223 531.77 15.16 cv
531.957 15.102 532.113 15.047 532.242 14.996 cv
532.363 14.949 532.465 14.926 532.547 14.922 cv
532.59 14.926 532.629 14.934 532.664 14.949 cv
532.691 14.969 532.719 15 532.738 15.047 cv
532.758 15.094 532.77 15.16 532.781 15.246 cv
532.785 15.332 532.789 15.441 532.793 15.57 cv
532.789 15.687 532.789 15.785 532.785 15.863 cv
532.777 15.945 532.77 16.012 532.762 16.066 cv
532.75 16.125 532.734 16.176 532.715 16.211 cv
532.695 16.254 532.668 16.289 532.637 16.324 cv
532.602 16.363 532.508 16.414 532.359 16.473 cv
532.203 16.539 532.012 16.602 531.781 16.656 cv
531.543 16.719 531.273 16.766 530.977 16.812 cv
530.672 16.852 530.352 16.875 530.012 16.879 cv
529.391 16.875 528.848 16.801 528.387 16.645 cv
527.918 16.492 527.531 16.254 527.223 15.937 cv
526.906 15.621 526.672 15.223 526.523 14.738 cv
526.367 14.258 526.293 13.691 526.297 13.035 cv
526.293 12.422 526.371 11.863 526.535 11.367 cv
526.691 10.871 526.926 10.453 527.238 10.105 cv
527.543 9.76202 527.918 9.49597 528.355 9.31201 cv
528.793 9.133 529.285 9.04303 529.84 9.039 cv
530.418 9.04303 530.918 9.12903 531.332 9.297 cv
531.746 9.47302 532.082 9.711 532.348 10.012 cv
532.609 10.316 532.805 10.676 532.934 11.09 cv
533.055 11.508 533.117 11.957 533.121 12.445 cv
cp
531.219 12.195 mo
531.23 11.645 531.121 11.211 530.887 10.898 cv
530.652 10.586 530.285 10.43 529.793 10.426 cv
529.543 10.43 529.328 10.477 529.145 10.566 cv
528.957 10.664 528.805 10.789 528.684 10.945 cv
528.559 11.105 528.465 11.293 528.402 11.508 cv
528.336 11.723 528.297 11.953 528.289 12.195 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
