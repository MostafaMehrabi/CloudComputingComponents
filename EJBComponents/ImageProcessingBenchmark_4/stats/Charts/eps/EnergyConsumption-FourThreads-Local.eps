%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-FourThreads-Local.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 2:27:46 p.m.
%%BoundingBox: 0 0 628 537
%%HiResBoundingBox: 0 0 627.1200 536.1601
%%CropBox: 0 0 627.1200 536.1601
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -536.16 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 536.16 li
627.12 536.16 li
627.12 0 li
cp
clp
0 6.10352e-5 mo
627.121 6.10352e-5 li
627.121 536.16 li
0 536.16 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
54.48 480.121 mo
611.762 480.121 li
54.48 454.078 mo
611.762 454.078 li
54.48 428.039 mo
611.762 428.039 li
54.48 402 mo
611.762 402 li
54.48 375.961 mo
611.762 375.961 li
54.48 349.922 mo
611.762 349.922 li
54.48 323.879 mo
611.762 323.879 li
54.48 297.84 mo
611.762 297.84 li
54.48 271.801 mo
611.762 271.801 li
54.48 245.762 mo
611.762 245.762 li
54.48 219.719 mo
611.762 219.719 li
54.48 193.68 mo
611.762 193.68 li
54.48 167.641 mo
611.762 167.641 li
54.48 141.602 mo
611.762 141.602 li
54.48 115.559 mo
611.762 115.559 li
54.48 89.519 mo
611.762 89.519 li
54.48 63.48 mo
611.762 63.48 li
54.48 37.441 mo
611.762 37.441 li
.140414 .108034 .108034 0 cmyk
@
54.48 467.039 mo
611.762 467.039 li
54.48 441 mo
611.762 441 li
54.48 414.961 mo
611.762 414.961 li
54.48 388.922 mo
611.762 388.922 li
54.48 362.879 mo
611.762 362.879 li
54.48 336.84 mo
611.762 336.84 li
54.48 310.801 mo
611.762 310.801 li
54.48 284.762 mo
611.762 284.762 li
54.48 258.719 mo
611.762 258.719 li
54.48 232.68 mo
611.762 232.68 li
54.48 206.641 mo
611.762 206.641 li
54.48 180.602 mo
611.762 180.602 li
54.48 154.559 mo
611.762 154.559 li
54.48 128.519 mo
611.762 128.519 li
54.48 102.48 mo
611.762 102.48 li
54.48 76.441 mo
611.762 76.441 li
54.48 50.398 mo
611.762 50.398 li
54.48 24.359 mo
611.762 24.359 li
.328344 .284215 .278569 .000915541 cmyk
@
89.281 24.359 mo
89.281 493.078 li
159 24.359 mo
159 493.078 li
228.602 24.359 mo
228.602 493.078 li
298.32 24.359 mo
298.32 493.078 li
367.922 24.359 mo
367.922 493.078 li
437.641 24.359 mo
437.641 493.078 li
507.359 24.359 mo
507.359 493.078 li
576.961 24.359 mo
576.961 493.078 li
.178592 .148898 .143923 0 cmyk
@
54.48 24.359 mo
54.48 493.078 li
124.078 24.359 mo
124.078 493.078 li
193.801 24.359 mo
193.801 493.078 li
263.52 24.359 mo
263.52 493.078 li
333.121 24.359 mo
333.121 493.078 li
402.84 24.359 mo
402.84 493.078 li
472.441 24.359 mo
472.441 493.078 li
542.16 24.359 mo
542.16 493.078 li
611.762 24.359 mo
611.762 493.078 li
.328344 .284215 .278569 .000915541 cmyk
@
34.441 483.84 mo
41.519 483.84 li
41.519 500.879 li
34.441 500.879 li
cp
0 0 0 0 cmyk
ef
34.441 457.801 mo
41.519 457.801 li
41.519 474.84 li
34.441 474.84 li
cp
ef
34.441 431.762 mo
41.519 431.762 li
41.519 448.801 li
34.441 448.801 li
cp
ef
34.441 405.719 mo
41.519 405.719 li
41.519 422.762 li
34.441 422.762 li
cp
ef
34.441 379.68 mo
41.519 379.68 li
41.519 396.719 li
34.441 396.719 li
cp
ef
27.238 353.641 mo
41.519 353.641 li
41.519 370.68 li
27.238 370.68 li
cp
ef
27.238 327.602 mo
41.519 327.602 li
41.519 344.641 li
27.238 344.641 li
cp
ef
27.238 301.559 mo
41.519 301.559 li
41.519 318.602 li
27.238 318.602 li
cp
ef
27.238 275.519 mo
41.519 275.519 li
41.519 292.558 li
27.238 292.558 li
cp
ef
27.238 249.48 mo
41.519 249.48 li
41.519 266.519 li
27.238 266.519 li
cp
ef
27.238 223.441 mo
41.519 223.441 li
41.519 240.48 li
27.238 240.48 li
cp
ef
27.238 197.398 mo
41.519 197.398 li
41.519 214.441 li
27.238 214.441 li
cp
ef
27.238 171.359 mo
41.519 171.359 li
41.519 188.398 li
27.238 188.398 li
cp
ef
27.238 145.32 mo
41.519 145.32 li
41.519 162.359 li
27.238 162.359 li
cp
ef
27.238 119.281 mo
41.519 119.281 li
41.519 136.32 li
27.238 136.32 li
cp
ef
27.238 93.238 mo
41.519 93.238 li
41.519 110.281 li
27.238 110.281 li
cp
ef
27.238 67.199 mo
41.519 67.199 li
41.519 84.238 li
27.238 84.238 li
cp
ef
27.238 41.16 mo
41.519 41.16 li
41.519 58.199 li
27.238 58.199 li
cp
ef
27.238 15.121 mo
41.519 15.121 li
41.519 32.16 li
27.238 32.16 li
cp
ef
.96 lw
54.48 493.078 mo
611.762 493.078 li
.367803 .29575 .300999 .00198367 cmyk
@
54.48 493.078 mo
54.48 497.519 li
124.078 493.078 mo
124.078 497.519 li
193.801 493.078 mo
193.801 497.519 li
263.52 493.078 mo
263.52 497.519 li
333.121 493.078 mo
333.121 497.519 li
402.84 493.078 mo
402.84 497.519 li
472.441 493.078 mo
472.441 497.519 li
542.16 493.078 mo
542.16 497.519 li
611.762 493.078 mo
611.762 497.519 li
@
gsave
54.48 24.359 mo
612.48 24.359 li
612.48 493.8 li
54.48 493.8 li
cp
clp
1 lc
54.48 480.121 mo
124.078 484.68 li
193.801 487.32 li
263.52 483.602 li
333.121 486.238 li
402.84 485.52 li
472.441 485.16 li
542.16 484.559 li
611.762 485.16 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
59.41 485.129 mo
49.328 475.051 li
49.328 485.129 mo
59.41 475.051 li
.62768 .285466 0 0 cmyk
@
129.129 489.691 mo
119.051 479.609 li
119.051 489.691 mo
129.129 479.609 li
@
198.852 492.211 mo
188.77 482.129 li
188.77 492.211 mo
198.852 482.129 li
@
268.449 488.488 mo
258.371 478.41 li
258.371 488.488 mo
268.449 478.41 li
@
338.172 491.129 mo
328.09 481.051 li
328.09 491.129 mo
338.172 481.051 li
@
407.77 490.41 mo
397.691 480.328 li
397.691 490.41 mo
407.77 480.328 li
@
477.488 490.172 mo
467.41 480.09 li
467.41 490.172 mo
477.488 480.09 li
@
547.09 489.449 mo
537.012 479.371 li
537.012 489.449 mo
547.09 479.371 li
@
616.809 490.172 mo
606.73 480.09 li
606.73 490.172 mo
616.809 480.09 li
@
gsave
54.48 24.359 mo
612.48 24.359 li
612.48 493.8 li
54.48 493.8 li
cp
clp
.96 lw
1 lc
54.48 458.16 mo
124.078 471.121 li
193.801 475.922 li
263.52 471 li
333.121 476.398 li
402.84 469.559 li
472.441 476.762 li
542.16 470.398 li
611.762 474.84 li
.466651 0 .889799 0 cmyk
@
grestore
59.41 463.051 mo
49.328 452.969 li
49.328 463.051 mo
59.41 452.969 li
.466651 0 .889799 0 cmyk
@
129.129 476.012 mo
119.051 465.93 li
119.051 476.012 mo
129.129 465.93 li
@
198.852 480.93 mo
188.77 470.852 li
188.77 480.93 mo
198.852 470.852 li
@
268.449 476.012 mo
258.371 465.93 li
258.371 476.012 mo
268.449 465.93 li
@
338.172 481.41 mo
328.09 471.328 li
328.09 481.41 mo
338.172 471.328 li
@
407.77 474.57 mo
397.691 464.488 li
397.691 474.57 mo
407.77 464.488 li
@
477.488 481.648 mo
467.41 471.57 li
467.41 481.648 mo
477.488 471.57 li
@
547.09 475.289 mo
537.012 465.211 li
537.012 475.289 mo
547.09 465.211 li
@
616.809 479.73 mo
606.73 469.648 li
606.73 479.73 mo
616.809 469.648 li
@
gsave
54.48 24.359 mo
612.48 24.359 li
612.48 493.8 li
54.48 493.8 li
cp
clp
.96 lw
1 lc
54.48 375 mo
124.078 418.559 li
193.801 434.039 li
263.52 411.48 li
333.121 428.641 li
402.84 423.84 li
472.441 421.078 li
542.16 429.719 li
611.762 422.281 li
0 .990631 1 .000396735 cmyk
@
grestore
59.41 379.891 mo
49.328 369.809 li
49.328 379.891 mo
59.41 369.809 li
0 .990631 1 .000396735 cmyk
@
129.129 423.57 mo
119.051 413.488 li
119.051 423.57 mo
129.129 413.488 li
@
198.852 439.051 mo
188.77 428.969 li
188.77 439.051 mo
198.852 428.969 li
@
268.449 416.371 mo
258.371 406.289 li
258.371 416.371 mo
268.449 406.289 li
@
338.172 433.531 mo
328.09 423.449 li
328.09 433.531 mo
338.172 423.449 li
@
407.77 428.73 mo
397.691 418.648 li
397.691 428.73 mo
407.77 418.648 li
@
477.488 426.09 mo
467.41 416.012 li
467.41 426.09 mo
477.488 416.012 li
@
547.09 434.609 mo
537.012 424.531 li
537.012 434.609 mo
547.09 424.531 li
@
616.809 427.172 mo
606.73 417.09 li
606.73 427.172 mo
616.809 417.09 li
@
gsave
54.48 24.359 mo
612.48 24.359 li
612.48 493.8 li
54.48 493.8 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
54.48 415.078 mo
124.078 444 li
193.801 454.922 li
263.52 440.281 li
333.121 454.922 li
402.84 448.801 li
472.441 455.52 li
542.16 434.281 li
611.762 451.441 li
@
grestore
59.41 420.09 mo
49.328 410.012 li
49.328 420.09 mo
59.41 410.012 li
@
129.129 449.012 mo
119.051 438.93 li
119.051 449.012 mo
129.129 438.93 li
@
198.852 459.809 mo
188.77 449.73 li
188.77 459.809 mo
198.852 449.73 li
@
268.449 445.172 mo
258.371 435.09 li
258.371 445.172 mo
268.449 435.09 li
@
338.172 459.809 mo
328.09 449.73 li
328.09 459.809 mo
338.172 449.73 li
@
407.77 453.809 mo
397.691 443.73 li
397.691 453.809 mo
407.77 443.73 li
@
477.488 460.41 mo
467.41 450.328 li
467.41 460.41 mo
477.488 450.328 li
@
547.09 439.289 mo
537.012 429.211 li
537.012 439.289 mo
547.09 429.211 li
@
616.809 456.449 mo
606.73 446.371 li
606.73 456.449 mo
616.809 446.371 li
@
gsave
54.48 24.359 mo
612.48 24.359 li
612.48 493.8 li
54.48 493.8 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
54.48 279.602 mo
124.078 359.641 li
193.801 393 li
263.52 365.641 li
333.121 370.441 li
402.84 345.48 li
472.441 351.121 li
542.16 356.641 li
611.762 346.922 li
.62768 .285466 0 0 cmyk
@
grestore
58.93 284.012 mo
49.809 274.891 li
49.809 284.012 mo
58.93 274.891 li
.62768 .285466 0 0 cmyk
@
128.648 364.172 mo
119.531 355.051 li
119.531 364.172 mo
128.648 355.051 li
@
198.371 397.531 mo
189.25 388.41 li
189.25 397.531 mo
198.371 388.41 li
@
267.969 370.172 mo
258.852 361.051 li
258.852 370.172 mo
267.969 361.051 li
@
337.691 374.852 mo
328.57 365.73 li
328.57 374.852 mo
337.691 365.73 li
@
407.289 349.891 mo
398.172 340.769 li
398.172 349.891 mo
407.289 340.769 li
@
477.012 355.648 mo
467.891 346.531 li
467.891 355.648 mo
477.012 346.531 li
@
546.609 361.172 mo
537.488 352.051 li
537.488 361.172 mo
546.609 352.051 li
@
616.328 351.328 mo
607.211 342.211 li
607.211 351.328 mo
616.328 342.211 li
@
gsave
54.48 24.359 mo
612.48 24.359 li
612.48 493.8 li
54.48 493.8 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
54.48 328.32 mo
124.078 387.48 li
193.801 412.68 li
263.52 389.52 li
333.121 393 li
402.84 375.602 li
472.441 386.281 li
542.16 396.121 li
611.762 388.801 li
.466651 0 .889799 0 cmyk
@
grestore
59.41 333.211 mo
49.328 323.129 li
49.328 333.211 mo
59.41 323.129 li
.466651 0 .889799 0 cmyk
@
129.129 392.488 mo
119.051 382.41 li
119.051 392.488 mo
129.129 382.41 li
@
198.852 417.691 mo
188.77 407.609 li
188.77 417.691 mo
198.852 407.609 li
@
268.449 394.531 mo
258.371 384.449 li
258.371 394.531 mo
268.449 384.449 li
@
338.172 398.012 mo
328.09 387.93 li
328.09 398.012 mo
338.172 387.93 li
@
407.77 380.488 mo
397.691 370.41 li
397.691 380.488 mo
407.77 370.41 li
@
477.488 391.172 mo
467.41 381.09 li
467.41 391.172 mo
477.488 381.09 li
@
547.09 401.012 mo
537.012 390.93 li
537.012 401.012 mo
547.09 390.93 li
@
616.809 393.691 mo
606.73 383.609 li
606.73 393.691 mo
616.809 383.609 li
@
34.398 483.781 mo
41.496 483.781 li
41.496 500.871 li
34.398 500.871 li
cp
0 0 0 0 cmyk
ef
41.051 492.727 mo
41.047 493.41 40.996 494.031 40.891 494.594 cv
40.781 495.156 40.602 495.641 40.355 496.043 cv
40.102 496.449 39.773 496.762 39.375 496.98 cv
38.969 497.203 38.477 497.312 37.891 497.312 cv
37.332 497.312 36.859 497.215 36.48 497.016 cv
36.098 496.82 35.793 496.527 35.559 496.141 cv
35.324 495.754 35.156 495.281 35.063 494.715 cv
34.961 494.152 34.914 493.504 34.914 492.77 cv
34.914 492.098 34.969 491.477 35.078 490.91 cv
35.188 490.348 35.363 489.863 35.613 489.457 cv
35.855 489.055 36.18 488.742 36.586 488.516 cv
36.984 488.297 37.48 488.184 38.07 488.184 cv
38.629 488.184 39.102 488.285 39.484 488.48 cv
39.867 488.684 40.172 488.977 40.406 489.359 cv
40.637 489.75 40.805 490.223 40.902 490.785 cv
41 491.348 41.047 491.996 41.051 492.727 cv
cp
39.844 492.809 mo
39.84 492.367 39.824 491.969 39.797 491.617 cv
39.762 491.266 39.715 490.957 39.656 490.687 cv
39.59 490.418 39.512 490.187 39.414 489.992 cv
39.316 489.801 39.199 489.641 39.063 489.512 cv
38.922 489.387 38.762 489.293 38.59 489.234 cv
38.41 489.18 38.215 489.152 38 489.148 cv
37.609 489.152 37.293 489.242 37.055 489.426 cv
36.809 489.609 36.617 489.863 36.48 490.18 cv
36.34 490.5 36.246 490.871 36.195 491.301 cv
36.145 491.73 36.121 492.195 36.121 492.687 cv
36.121 493.352 36.152 493.914 36.223 494.375 cv
36.289 494.844 36.398 495.223 36.551 495.512 cv
36.695 495.809 36.887 496.02 37.117 496.148 cv
37.348 496.285 37.629 496.352 37.961 496.348 cv
38.215 496.352 38.438 496.312 38.633 496.227 cv
38.824 496.148 38.992 496.027 39.133 495.871 cv
39.273 495.719 39.387 495.535 39.48 495.32 cv
39.566 495.105 39.641 494.867 39.699 494.605 cv
39.75 494.348 39.789 494.066 39.813 493.762 cv
39.832 493.457 39.84 493.141 39.844 492.809 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
34.398 457.742 mo
41.496 457.742 li
41.496 474.832 li
34.398 474.832 li
cp
0 0 0 0 cmyk
ef
40.758 470.637 mo
40.754 470.723 40.75 470.797 40.738 470.859 cv
40.727 470.926 40.711 470.98 40.691 471.02 cv
40.668 471.066 40.641 471.098 40.609 471.113 cv
40.574 471.137 40.535 471.145 40.496 471.145 cv
35.594 471.145 li
35.531 471.145 35.473 471.137 35.426 471.121 cv
35.375 471.105 35.336 471.082 35.301 471.043 cv
35.266 471.012 35.238 470.957 35.227 470.887 cv
35.207 470.816 35.199 470.73 35.203 470.629 cv
35.199 470.539 35.203 470.461 35.211 470.391 cv
35.215 470.324 35.23 470.266 35.258 470.211 cv
35.281 470.16 35.313 470.105 35.348 470.051 cv
35.383 470 35.426 469.945 35.484 469.883 cv
37.258 468.059 li
37.668 467.641 37.996 467.266 38.246 466.93 cv
38.492 466.602 38.684 466.297 38.816 466.02 cv
38.949 465.746 39.035 465.496 39.082 465.27 cv
39.121 465.047 39.145 464.836 39.145 464.641 cv
39.145 464.445 39.109 464.262 39.043 464.082 cv
38.977 463.91 38.883 463.754 38.758 463.617 cv
38.633 463.488 38.477 463.383 38.289 463.301 cv
38.102 463.227 37.883 463.187 37.637 463.184 cv
37.348 463.187 37.09 463.227 36.863 463.301 cv
36.633 463.383 36.434 463.469 36.262 463.555 cv
36.09 463.648 35.945 463.73 35.828 463.809 cv
35.711 463.887 35.625 463.926 35.574 463.926 cv
35.539 463.926 35.508 463.918 35.484 463.898 cv
35.453 463.883 35.434 463.852 35.418 463.809 cv
35.402 463.77 35.387 463.715 35.379 463.645 cv
35.367 463.578 35.363 463.496 35.367 463.398 cv
35.363 463.332 35.367 463.273 35.375 463.223 cv
35.379 463.172 35.387 463.129 35.398 463.09 cv
35.406 463.055 35.422 463.02 35.441 462.988 cv
35.461 462.957 35.496 462.918 35.555 462.867 cv
35.605 462.82 35.699 462.754 35.836 462.672 cv
35.969 462.59 36.141 462.512 36.344 462.43 cv
36.547 462.352 36.77 462.281 37.016 462.227 cv
37.258 462.172 37.516 462.145 37.789 462.145 cv
38.215 462.145 38.59 462.207 38.914 462.328 cv
39.234 462.449 39.5 462.613 39.715 462.824 cv
39.926 463.035 40.086 463.281 40.191 463.555 cv
40.297 463.836 40.352 464.133 40.352 464.445 cv
40.352 464.734 40.324 465.016 40.273 465.293 cv
40.223 465.578 40.117 465.883 39.957 466.207 cv
39.793 466.535 39.559 466.898 39.254 467.297 cv
38.945 467.699 38.539 468.16 38.035 468.676 cv
36.629 470.145 li
40.488 470.145 li
40.52 470.148 40.555 470.16 40.594 470.176 cv
40.625 470.199 40.656 470.23 40.684 470.27 cv
40.707 470.312 40.727 470.363 40.738 470.422 cv
40.75 470.488 40.754 470.559 40.758 470.637 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
34.398 431.699 mo
41.496 431.699 li
41.496 448.789 li
34.398 448.789 li
cp
0 0 0 0 cmyk
ef
41.133 442.578 mo
41.129 442.73 41.105 442.852 41.063 442.937 cv
41.016 443.027 40.953 443.07 40.871 443.066 cv
39.871 443.066 li
39.871 444.93 li
39.871 444.969 39.859 445 39.844 445.023 cv
39.82 445.051 39.789 445.07 39.746 445.09 cv
39.695 445.105 39.633 445.117 39.563 445.129 cv
39.484 445.137 39.391 445.141 39.273 445.145 cv
39.156 445.141 39.059 445.137 38.988 445.129 cv
38.91 445.117 38.852 445.105 38.809 445.09 cv
38.762 445.07 38.73 445.051 38.715 445.023 cv
38.695 445 38.688 444.969 38.691 444.93 cv
38.691 443.066 li
35.063 443.066 li
35.004 443.07 34.961 443.062 34.926 443.047 cv
34.891 443.035 34.855 443.008 34.828 442.969 cv
34.797 442.934 34.777 442.883 34.766 442.812 cv
34.754 442.746 34.75 442.656 34.75 442.543 cv
34.75 442.461 34.75 442.383 34.758 442.312 cv
34.758 442.242 34.77 442.18 34.785 442.125 cv
34.797 442.07 34.813 442.016 34.84 441.961 cv
34.859 441.906 34.887 441.852 34.922 441.789 cv
38.082 436.402 li
38.102 436.367 38.137 436.336 38.184 436.309 cv
38.227 436.281 38.281 436.258 38.355 436.238 cv
38.422 436.223 38.508 436.211 38.613 436.199 cv
38.715 436.195 38.836 436.191 38.977 436.187 cv
39.125 436.191 39.262 436.195 39.379 436.207 cv
39.492 436.219 39.582 436.234 39.656 436.25 cv
39.723 436.27 39.777 436.293 39.816 436.324 cv
39.852 436.355 39.871 436.391 39.871 436.43 cv
39.871 442.094 li
40.871 442.094 li
40.945 442.098 41.008 442.137 41.059 442.215 cv
41.105 442.297 41.129 442.418 41.133 442.578 cv
cp
38.691 437.227 mo
38.68 437.227 li
35.828 442.094 li
38.691 442.094 li
cp
.629114 .553033 .543389 .289647 cmyk
f
34.398 405.66 mo
41.496 405.66 li
41.496 422.75 li
34.398 422.75 li
cp
0 0 0 0 cmyk
ef
40.984 416.187 mo
40.984 416.578 40.922 416.957 40.805 417.316 cv
40.68 417.684 40.496 418 40.254 418.273 cv
40.004 418.551 39.691 418.773 39.316 418.937 cv
38.934 419.105 38.488 419.187 37.973 419.187 cv
37.602 419.187 37.273 419.145 36.992 419.051 cv
36.707 418.965 36.461 418.832 36.25 418.66 cv
36.039 418.492 35.863 418.285 35.727 418.039 cv
35.586 417.793 35.473 417.512 35.391 417.195 cv
35.305 416.883 35.246 416.539 35.211 416.16 cv
35.172 415.789 35.152 415.387 35.156 414.953 cv
35.152 414.574 35.172 414.191 35.215 413.801 cv
35.254 413.418 35.328 413.043 35.434 412.676 cv
35.539 412.316 35.684 411.977 35.863 411.66 cv
36.043 411.344 36.27 411.066 36.543 410.832 cv
36.816 410.598 37.141 410.41 37.52 410.27 cv
37.898 410.133 38.34 410.066 38.844 410.062 cv
39.012 410.066 39.184 410.074 39.355 410.094 cv
39.527 410.117 39.688 410.148 39.836 410.18 cv
39.984 410.219 40.105 410.254 40.207 410.293 cv
40.305 410.332 40.371 410.367 40.406 410.391 cv
40.434 410.418 40.457 410.445 40.477 410.473 cv
40.492 410.504 40.508 410.535 40.516 410.57 cv
40.523 410.605 40.527 410.645 40.535 410.687 cv
40.535 410.73 40.539 410.785 40.543 410.848 cv
40.539 410.934 40.539 411.004 40.539 411.059 cv
40.535 411.121 40.523 411.168 40.512 411.203 cv
40.492 411.242 40.473 411.27 40.449 411.285 cv
40.422 411.305 40.391 411.312 40.352 411.312 cv
40.301 411.312 40.23 411.297 40.145 411.266 cv
40.055 411.234 39.949 411.199 39.828 411.156 cv
39.703 411.121 39.555 411.086 39.379 411.051 cv
39.203 411.023 39 411.008 38.77 411.004 cv
38.34 411.008 37.973 411.094 37.668 411.266 cv
37.363 411.437 37.113 411.672 36.918 411.965 cv
36.723 412.258 36.578 412.598 36.488 412.98 cv
36.391 413.371 36.336 413.773 36.328 414.191 cv
36.445 414.125 36.582 414.059 36.73 413.988 cv
36.879 413.922 37.039 413.859 37.215 413.801 cv
37.391 413.75 37.578 413.703 37.773 413.668 cv
37.969 413.637 38.18 413.621 38.406 413.617 cv
38.883 413.621 39.285 413.687 39.617 413.812 cv
39.945 413.945 40.211 414.125 40.418 414.355 cv
40.617 414.586 40.762 414.855 40.852 415.168 cv
40.938 415.48 40.984 415.82 40.984 416.187 cv
cp
39.789 416.297 mo
39.789 416.035 39.762 415.793 39.711 415.574 cv
39.656 415.359 39.566 415.176 39.445 415.02 cv
39.32 414.871 39.156 414.754 38.953 414.672 cv
38.742 414.59 38.488 414.547 38.191 414.547 cv
38.02 414.547 37.852 414.562 37.684 414.594 cv
37.512 414.625 37.348 414.668 37.191 414.715 cv
37.031 414.77 36.883 414.832 36.742 414.902 cv
36.598 414.977 36.465 415.051 36.348 415.129 cv
36.344 415.723 36.383 416.219 36.461 416.613 cv
36.535 417.012 36.645 417.328 36.789 417.566 cv
36.934 417.809 37.113 417.98 37.328 418.082 cv
37.543 418.187 37.793 418.238 38.082 418.234 cv
38.371 418.238 38.625 418.184 38.84 418.07 cv
39.055 417.965 39.23 417.816 39.375 417.629 cv
39.516 417.445 39.621 417.238 39.688 417.008 cv
39.754 416.777 39.789 416.543 39.789 416.297 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
34.398 379.621 mo
41.496 379.621 li
41.496 396.711 li
34.398 396.711 li
cp
0 0 0 0 cmyk
ef
40.961 390.742 mo
40.961 391.129 40.891 391.473 40.754 391.77 cv
40.617 392.074 40.422 392.324 40.164 392.527 cv
39.906 392.734 39.586 392.891 39.207 392.992 cv
38.824 393.098 38.391 393.148 37.906 393.148 cv
37.445 393.148 37.035 393.102 36.676 393.008 cv
36.313 392.914 36.008 392.773 35.758 392.582 cv
35.508 392.398 35.316 392.168 35.184 391.891 cv
35.051 391.617 34.984 391.305 34.984 390.949 cv
34.984 390.676 35.027 390.418 35.121 390.184 cv
35.207 389.949 35.34 389.734 35.516 389.539 cv
35.684 389.344 35.895 389.16 36.148 388.984 cv
36.398 388.816 36.684 388.652 37 388.496 cv
36.727 388.355 36.484 388.207 36.273 388.047 cv
36.063 387.891 35.883 387.719 35.738 387.531 cv
35.59 387.348 35.48 387.152 35.406 386.941 cv
35.328 386.734 35.289 386.504 35.293 386.254 cv
35.289 385.945 35.344 385.652 35.461 385.379 cv
35.57 385.109 35.742 384.875 35.969 384.672 cv
36.195 384.473 36.48 384.312 36.832 384.195 cv
37.176 384.078 37.586 384.02 38.055 384.02 cv
38.5 384.02 38.887 384.074 39.215 384.18 cv
39.543 384.289 39.813 384.434 40.023 384.617 cv
40.234 384.805 40.391 385.023 40.496 385.273 cv
40.594 385.523 40.645 385.793 40.648 386.082 cv
40.645 386.316 40.605 386.543 40.535 386.754 cv
40.457 386.973 40.348 387.176 40.199 387.363 cv
40.051 387.559 39.871 387.738 39.66 387.902 cv
39.449 388.074 39.207 388.23 38.934 388.371 cv
39.254 388.535 39.539 388.699 39.797 388.867 cv
40.047 389.035 40.262 389.215 40.438 389.41 cv
40.605 389.605 40.734 389.812 40.828 390.027 cv
40.914 390.246 40.961 390.484 40.961 390.742 cv
cp
39.48 386.191 mo
39.477 386.004 39.445 385.828 39.379 385.672 cv
39.313 385.516 39.215 385.383 39.09 385.273 cv
38.961 385.164 38.801 385.082 38.613 385.023 cv
38.418 384.969 38.203 384.941 37.965 384.937 cv
37.469 384.941 37.094 385.051 36.844 385.273 cv
36.586 385.5 36.461 385.809 36.465 386.191 cv
36.461 386.371 36.492 386.535 36.555 386.687 cv
36.617 386.844 36.711 386.988 36.844 387.125 cv
36.969 387.262 37.133 387.395 37.336 387.523 cv
37.531 387.656 37.77 387.793 38.047 387.934 cv
38.508 387.699 38.863 387.437 39.109 387.145 cv
39.355 386.859 39.477 386.543 39.48 386.191 cv
cp
39.77 390.867 mo
39.766 390.66 39.727 390.469 39.652 390.297 cv
39.57 390.129 39.453 389.969 39.297 389.816 cv
39.141 389.668 38.941 389.523 38.707 389.383 cv
38.469 389.246 38.199 389.102 37.891 388.949 cv
37.602 389.094 37.348 389.234 37.133 389.375 cv
36.914 389.516 36.734 389.664 36.598 389.812 cv
36.457 389.969 36.352 390.125 36.281 390.289 cv
36.207 390.457 36.172 390.641 36.176 390.84 cv
36.172 391.285 36.324 391.629 36.633 391.867 cv
36.934 392.113 37.387 392.234 37.992 392.23 cv
38.574 392.234 39.02 392.113 39.32 391.863 cv
39.617 391.621 39.766 391.289 39.77 390.867 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
27.301 353.578 mo
41.489 353.578 li
41.489 370.672 li
27.301 370.672 li
cp
0 0 0 0 cmyk
ef
33.664 366.516 mo
33.66 366.605 33.652 366.676 33.641 366.734 cv
33.625 366.797 33.605 366.848 33.586 366.879 cv
33.563 366.918 33.539 366.941 33.508 366.957 cv
33.477 366.973 33.445 366.98 33.418 366.98 cv
28.781 366.98 li
28.746 366.98 28.719 366.973 28.691 366.957 cv
28.664 366.941 28.637 366.918 28.613 366.879 cv
28.586 366.848 28.566 366.797 28.555 366.734 cv
28.539 366.676 28.531 366.605 28.535 366.516 cv
28.531 366.437 28.539 366.363 28.555 366.301 cv
28.566 366.242 28.582 366.195 28.605 366.156 cv
28.621 366.121 28.648 366.09 28.68 366.066 cv
28.711 366.047 28.742 366.039 28.781 366.035 cv
30.633 366.035 li
30.633 359.289 li
28.918 360.309 li
28.828 360.359 28.758 360.387 28.711 360.395 cv
28.656 360.402 28.613 360.395 28.582 360.363 cv
28.547 360.336 28.527 360.285 28.516 360.215 cv
28.504 360.148 28.496 360.062 28.5 359.953 cv
28.496 359.879 28.5 359.812 28.512 359.754 cv
28.516 359.703 28.527 359.656 28.543 359.617 cv
28.555 359.582 28.574 359.551 28.598 359.523 cv
28.621 359.496 28.652 359.469 28.699 359.441 cv
30.742 358.129 li
30.758 358.117 30.777 358.105 30.809 358.098 cv
30.832 358.09 30.867 358.082 30.914 358.07 cv
30.953 358.062 31.004 358.055 31.059 358.051 cv
31.113 358.051 31.18 358.051 31.266 358.047 cv
31.371 358.051 31.465 358.055 31.539 358.062 cv
31.609 358.07 31.664 358.086 31.711 358.102 cv
31.75 358.121 31.777 358.141 31.793 358.164 cv
31.801 358.191 31.809 358.215 31.813 358.238 cv
31.813 366.035 li
33.418 366.035 li
33.453 366.039 33.488 366.047 33.52 366.066 cv
33.551 366.09 33.574 366.121 33.598 366.156 cv
33.613 366.195 33.629 366.242 33.645 366.301 cv
33.652 366.363 33.66 366.437 33.664 366.516 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.02 362.523 mo
41.016 363.207 40.965 363.828 40.859 364.391 cv
40.75 364.953 40.57 365.437 40.324 365.84 cv
40.07 366.246 39.742 366.559 39.344 366.777 cv
38.938 367 38.445 367.109 37.859 367.109 cv
37.301 367.109 36.828 367.012 36.449 366.812 cv
36.066 366.617 35.762 366.324 35.527 365.937 cv
35.293 365.551 35.125 365.078 35.031 364.512 cv
34.93 363.949 34.883 363.301 34.883 362.566 cv
34.883 361.895 34.938 361.273 35.047 360.707 cv
35.156 360.145 35.332 359.66 35.582 359.254 cv
35.824 358.852 36.148 358.539 36.555 358.312 cv
36.953 358.094 37.449 357.98 38.039 357.98 cv
38.598 357.98 39.07 358.082 39.453 358.277 cv
39.836 358.48 40.141 358.773 40.375 359.156 cv
40.605 359.547 40.773 360.02 40.871 360.582 cv
40.969 361.145 41.016 361.793 41.02 362.523 cv
cp
39.813 362.605 mo
39.809 362.164 39.793 361.766 39.766 361.414 cv
39.73 361.062 39.684 360.754 39.625 360.484 cv
39.559 360.215 39.48 359.984 39.383 359.789 cv
39.285 359.598 39.168 359.437 39.031 359.309 cv
38.891 359.184 38.73 359.09 38.559 359.031 cv
38.379 358.977 38.184 358.949 37.969 358.945 cv
37.578 358.949 37.262 359.039 37.023 359.223 cv
36.777 359.406 36.586 359.66 36.449 359.977 cv
36.309 360.297 36.215 360.668 36.164 361.098 cv
36.113 361.527 36.09 361.992 36.09 362.484 cv
36.09 363.148 36.121 363.711 36.191 364.172 cv
36.258 364.641 36.367 365.02 36.52 365.309 cv
36.664 365.605 36.855 365.816 37.086 365.945 cv
37.316 366.082 37.598 366.148 37.93 366.145 cv
38.184 366.148 38.406 366.109 38.602 366.023 cv
38.793 365.945 38.961 365.824 39.102 365.668 cv
39.242 365.516 39.355 365.332 39.449 365.117 cv
39.535 364.902 39.609 364.664 39.668 364.402 cv
39.719 364.145 39.758 363.863 39.781 363.559 cv
39.801 363.254 39.809 362.937 39.813 362.605 cv
cp
f
27.301 327.539 mo
41.489 327.539 li
41.489 344.629 li
27.301 344.629 li
cp
0 0 0 0 cmyk
ef
33.664 340.457 mo
33.66 340.547 33.652 340.617 33.641 340.676 cv
33.625 340.738 33.605 340.789 33.586 340.82 cv
33.563 340.859 33.539 340.883 33.508 340.898 cv
33.477 340.914 33.445 340.922 33.418 340.922 cv
28.781 340.922 li
28.746 340.922 28.719 340.914 28.691 340.898 cv
28.664 340.883 28.637 340.859 28.613 340.82 cv
28.586 340.789 28.566 340.738 28.555 340.676 cv
28.539 340.617 28.531 340.547 28.535 340.457 cv
28.531 340.379 28.539 340.305 28.555 340.242 cv
28.566 340.184 28.582 340.137 28.605 340.098 cv
28.621 340.062 28.648 340.031 28.68 340.008 cv
28.711 339.988 28.742 339.98 28.781 339.977 cv
30.633 339.977 li
30.633 333.23 li
28.918 334.25 li
28.828 334.301 28.758 334.328 28.711 334.336 cv
28.656 334.344 28.613 334.336 28.582 334.305 cv
28.547 334.277 28.527 334.227 28.516 334.156 cv
28.504 334.09 28.496 334.004 28.5 333.895 cv
28.496 333.82 28.5 333.754 28.512 333.695 cv
28.516 333.645 28.527 333.598 28.543 333.559 cv
28.555 333.523 28.574 333.492 28.598 333.465 cv
28.621 333.437 28.652 333.41 28.699 333.383 cv
30.742 332.07 li
30.758 332.059 30.777 332.047 30.809 332.039 cv
30.832 332.031 30.867 332.023 30.914 332.012 cv
30.953 332.004 31.004 331.996 31.059 331.992 cv
31.113 331.992 31.18 331.992 31.266 331.988 cv
31.371 331.992 31.465 331.996 31.539 332.004 cv
31.609 332.012 31.664 332.027 31.711 332.043 cv
31.75 332.062 31.777 332.082 31.793 332.105 cv
31.801 332.133 31.809 332.156 31.813 332.18 cv
31.813 339.977 li
33.418 339.977 li
33.453 339.98 33.488 339.988 33.52 340.008 cv
33.551 340.031 33.574 340.062 33.598 340.098 cv
33.613 340.137 33.629 340.184 33.645 340.242 cv
33.652 340.305 33.66 340.379 33.664 340.457 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.727 340.414 mo
40.723 340.5 40.719 340.574 40.707 340.637 cv
40.695 340.703 40.68 340.758 40.66 340.797 cv
40.637 340.844 40.609 340.875 40.578 340.891 cv
40.543 340.914 40.504 340.922 40.465 340.922 cv
35.563 340.922 li
35.5 340.922 35.441 340.914 35.395 340.898 cv
35.344 340.883 35.305 340.859 35.27 340.82 cv
35.234 340.789 35.207 340.734 35.195 340.664 cv
35.176 340.594 35.168 340.508 35.172 340.406 cv
35.168 340.316 35.172 340.238 35.18 340.168 cv
35.184 340.102 35.199 340.043 35.227 339.988 cv
35.25 339.937 35.281 339.883 35.316 339.828 cv
35.352 339.777 35.395 339.723 35.453 339.66 cv
37.227 337.836 li
37.637 337.418 37.965 337.043 38.215 336.707 cv
38.461 336.379 38.652 336.074 38.785 335.797 cv
38.918 335.523 39.004 335.273 39.051 335.047 cv
39.09 334.824 39.113 334.613 39.113 334.418 cv
39.113 334.223 39.078 334.039 39.012 333.859 cv
38.945 333.687 38.852 333.531 38.727 333.395 cv
38.602 333.266 38.445 333.16 38.258 333.078 cv
38.07 333.004 37.852 332.965 37.605 332.961 cv
37.316 332.965 37.059 333.004 36.832 333.078 cv
36.602 333.16 36.402 333.246 36.23 333.332 cv
36.059 333.426 35.914 333.508 35.797 333.586 cv
35.68 333.664 35.594 333.703 35.543 333.703 cv
35.508 333.703 35.477 333.695 35.453 333.676 cv
35.422 333.66 35.402 333.629 35.387 333.586 cv
35.371 333.547 35.355 333.492 35.348 333.422 cv
35.336 333.355 35.332 333.273 35.336 333.176 cv
35.332 333.109 35.336 333.051 35.344 333 cv
35.348 332.949 35.355 332.906 35.367 332.867 cv
35.375 332.832 35.391 332.797 35.41 332.766 cv
35.43 332.734 35.465 332.695 35.523 332.645 cv
35.574 332.598 35.668 332.531 35.805 332.449 cv
35.938 332.367 36.109 332.289 36.313 332.207 cv
36.516 332.129 36.738 332.059 36.984 332.004 cv
37.227 331.949 37.484 331.922 37.758 331.922 cv
38.184 331.922 38.559 331.984 38.883 332.105 cv
39.203 332.227 39.469 332.391 39.684 332.602 cv
39.895 332.812 40.055 333.059 40.16 333.332 cv
40.266 333.613 40.32 333.91 40.32 334.223 cv
40.32 334.512 40.293 334.793 40.242 335.07 cv
40.191 335.355 40.086 335.66 39.926 335.984 cv
39.762 336.312 39.527 336.676 39.223 337.074 cv
38.914 337.477 38.508 337.937 38.004 338.453 cv
36.598 339.922 li
40.457 339.922 li
40.488 339.926 40.523 339.937 40.563 339.953 cv
40.594 339.977 40.625 340.008 40.652 340.047 cv
40.676 340.09 40.695 340.141 40.707 340.199 cv
40.719 340.266 40.723 340.336 40.727 340.414 cv
cp
f
27.301 301.512 mo
41.489 301.512 li
41.489 318.602 li
27.301 318.602 li
cp
0 0 0 0 cmyk
ef
33.664 314.414 mo
33.66 314.504 33.652 314.574 33.641 314.633 cv
33.625 314.695 33.605 314.746 33.586 314.777 cv
33.563 314.816 33.539 314.84 33.508 314.855 cv
33.477 314.871 33.445 314.879 33.418 314.879 cv
28.781 314.879 li
28.746 314.879 28.719 314.871 28.691 314.855 cv
28.664 314.84 28.637 314.816 28.613 314.777 cv
28.586 314.746 28.566 314.695 28.555 314.633 cv
28.539 314.574 28.531 314.504 28.535 314.414 cv
28.531 314.336 28.539 314.262 28.555 314.199 cv
28.566 314.141 28.582 314.094 28.605 314.055 cv
28.621 314.02 28.648 313.988 28.68 313.965 cv
28.711 313.945 28.742 313.937 28.781 313.934 cv
30.633 313.934 li
30.633 307.187 li
28.918 308.207 li
28.828 308.258 28.758 308.285 28.711 308.293 cv
28.656 308.301 28.613 308.293 28.582 308.262 cv
28.547 308.234 28.527 308.184 28.516 308.113 cv
28.504 308.047 28.496 307.961 28.5 307.852 cv
28.496 307.777 28.5 307.711 28.512 307.652 cv
28.516 307.602 28.527 307.555 28.543 307.516 cv
28.555 307.48 28.574 307.449 28.598 307.422 cv
28.621 307.395 28.652 307.367 28.699 307.34 cv
30.742 306.027 li
30.758 306.016 30.777 306.004 30.809 305.996 cv
30.832 305.988 30.867 305.98 30.914 305.969 cv
30.953 305.961 31.004 305.953 31.059 305.949 cv
31.113 305.949 31.18 305.949 31.266 305.945 cv
31.371 305.949 31.465 305.953 31.539 305.961 cv
31.609 305.969 31.664 305.984 31.711 306 cv
31.75 306.02 31.777 306.039 31.793 306.062 cv
31.801 306.09 31.809 306.113 31.813 306.137 cv
31.813 313.934 li
33.418 313.934 li
33.453 313.937 33.488 313.945 33.52 313.965 cv
33.551 313.988 33.574 314.02 33.598 314.055 cv
33.613 314.094 33.629 314.141 33.645 314.199 cv
33.652 314.262 33.66 314.336 33.664 314.414 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.102 312.355 mo
41.098 312.508 41.074 312.629 41.031 312.715 cv
40.984 312.805 40.922 312.848 40.84 312.844 cv
39.84 312.844 li
39.84 314.707 li
39.84 314.746 39.828 314.777 39.813 314.801 cv
39.789 314.828 39.758 314.848 39.715 314.867 cv
39.664 314.883 39.602 314.895 39.531 314.906 cv
39.453 314.914 39.359 314.918 39.242 314.922 cv
39.125 314.918 39.027 314.914 38.957 314.906 cv
38.879 314.895 38.82 314.883 38.777 314.867 cv
38.73 314.848 38.699 314.828 38.684 314.801 cv
38.664 314.777 38.656 314.746 38.66 314.707 cv
38.66 312.844 li
35.031 312.844 li
34.973 312.848 34.93 312.84 34.895 312.824 cv
34.859 312.812 34.824 312.785 34.797 312.746 cv
34.766 312.711 34.746 312.66 34.734 312.59 cv
34.723 312.523 34.719 312.434 34.719 312.32 cv
34.719 312.238 34.719 312.16 34.727 312.09 cv
34.727 312.02 34.738 311.957 34.754 311.902 cv
34.766 311.848 34.781 311.793 34.809 311.738 cv
34.828 311.684 34.855 311.629 34.891 311.566 cv
38.051 306.18 li
38.07 306.145 38.105 306.113 38.152 306.086 cv
38.195 306.059 38.25 306.035 38.324 306.016 cv
38.391 306 38.477 305.988 38.582 305.977 cv
38.684 305.973 38.805 305.969 38.945 305.965 cv
39.094 305.969 39.23 305.973 39.348 305.984 cv
39.461 305.996 39.551 306.012 39.625 306.027 cv
39.691 306.047 39.746 306.07 39.785 306.102 cv
39.82 306.133 39.84 306.168 39.84 306.207 cv
39.84 311.871 li
40.84 311.871 li
40.914 311.875 40.977 311.914 41.027 311.992 cv
41.074 312.074 41.098 312.195 41.102 312.355 cv
cp
38.66 307.004 mo
38.648 307.004 li
35.797 311.871 li
38.66 311.871 li
cp
f
27.301 275.469 mo
41.489 275.469 li
41.489 292.559 li
27.301 292.559 li
cp
0 0 0 0 cmyk
ef
33.664 288.375 mo
33.66 288.465 33.652 288.535 33.641 288.594 cv
33.625 288.656 33.605 288.707 33.586 288.738 cv
33.563 288.777 33.539 288.801 33.508 288.816 cv
33.477 288.832 33.445 288.84 33.418 288.84 cv
28.781 288.84 li
28.746 288.84 28.719 288.832 28.691 288.816 cv
28.664 288.801 28.637 288.777 28.613 288.738 cv
28.586 288.707 28.566 288.656 28.555 288.594 cv
28.539 288.535 28.531 288.465 28.535 288.375 cv
28.531 288.297 28.539 288.223 28.555 288.16 cv
28.566 288.102 28.582 288.055 28.605 288.016 cv
28.621 287.98 28.648 287.949 28.68 287.926 cv
28.711 287.906 28.742 287.898 28.781 287.895 cv
30.633 287.895 li
30.633 281.148 li
28.918 282.168 li
28.828 282.219 28.758 282.246 28.711 282.254 cv
28.656 282.262 28.613 282.254 28.582 282.223 cv
28.547 282.195 28.527 282.145 28.516 282.074 cv
28.504 282.008 28.496 281.922 28.5 281.812 cv
28.496 281.738 28.5 281.672 28.512 281.613 cv
28.516 281.562 28.527 281.516 28.543 281.477 cv
28.555 281.441 28.574 281.41 28.598 281.383 cv
28.621 281.355 28.652 281.328 28.699 281.301 cv
30.742 279.988 li
30.758 279.977 30.777 279.965 30.809 279.957 cv
30.832 279.949 30.867 279.941 30.914 279.93 cv
30.953 279.922 31.004 279.914 31.059 279.91 cv
31.113 279.91 31.18 279.91 31.266 279.906 cv
31.371 279.91 31.465 279.914 31.539 279.922 cv
31.609 279.93 31.664 279.945 31.711 279.961 cv
31.75 279.98 31.777 280 31.793 280.023 cv
31.801 280.051 31.809 280.074 31.813 280.098 cv
31.813 287.895 li
33.418 287.895 li
33.453 287.898 33.488 287.906 33.52 287.926 cv
33.551 287.949 33.574 287.98 33.598 288.016 cv
33.613 288.055 33.629 288.102 33.645 288.16 cv
33.652 288.223 33.66 288.297 33.664 288.375 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.953 285.969 mo
40.953 286.359 40.891 286.738 40.773 287.098 cv
40.648 287.465 40.465 287.781 40.223 288.055 cv
39.973 288.332 39.66 288.555 39.285 288.719 cv
38.902 288.887 38.457 288.969 37.941 288.969 cv
37.57 288.969 37.242 288.926 36.961 288.832 cv
36.676 288.746 36.43 288.613 36.219 288.441 cv
36.008 288.273 35.832 288.066 35.695 287.82 cv
35.555 287.574 35.441 287.293 35.359 286.977 cv
35.273 286.664 35.215 286.32 35.18 285.941 cv
35.141 285.57 35.121 285.168 35.125 284.734 cv
35.121 284.355 35.141 283.973 35.184 283.582 cv
35.223 283.199 35.297 282.824 35.402 282.457 cv
35.508 282.098 35.652 281.758 35.832 281.441 cv
36.012 281.125 36.238 280.848 36.512 280.613 cv
36.785 280.379 37.109 280.191 37.488 280.051 cv
37.867 279.914 38.309 279.848 38.813 279.844 cv
38.98 279.848 39.152 279.855 39.324 279.875 cv
39.496 279.898 39.656 279.93 39.805 279.961 cv
39.953 280 40.074 280.035 40.176 280.074 cv
40.273 280.113 40.34 280.148 40.375 280.172 cv
40.402 280.199 40.426 280.227 40.445 280.254 cv
40.461 280.285 40.477 280.316 40.484 280.352 cv
40.492 280.387 40.496 280.426 40.504 280.469 cv
40.504 280.512 40.508 280.566 40.512 280.629 cv
40.508 280.715 40.508 280.785 40.508 280.84 cv
40.504 280.902 40.492 280.949 40.48 280.984 cv
40.461 281.023 40.441 281.051 40.418 281.066 cv
40.391 281.086 40.359 281.094 40.32 281.094 cv
40.27 281.094 40.199 281.078 40.113 281.047 cv
40.023 281.016 39.918 280.98 39.797 280.937 cv
39.672 280.902 39.523 280.867 39.348 280.832 cv
39.172 280.805 38.969 280.789 38.738 280.785 cv
38.309 280.789 37.941 280.875 37.637 281.047 cv
37.332 281.219 37.082 281.453 36.887 281.746 cv
36.691 282.039 36.547 282.379 36.457 282.762 cv
36.359 283.152 36.305 283.555 36.297 283.973 cv
36.414 283.906 36.551 283.84 36.699 283.77 cv
36.848 283.703 37.008 283.641 37.184 283.582 cv
37.359 283.531 37.547 283.484 37.742 283.449 cv
37.938 283.418 38.148 283.402 38.375 283.398 cv
38.852 283.402 39.254 283.469 39.586 283.594 cv
39.914 283.727 40.18 283.906 40.387 284.137 cv
40.586 284.367 40.73 284.637 40.82 284.949 cv
40.906 285.262 40.953 285.602 40.953 285.969 cv
cp
39.758 286.078 mo
39.758 285.816 39.73 285.574 39.68 285.355 cv
39.625 285.141 39.535 284.957 39.414 284.801 cv
39.289 284.652 39.125 284.535 38.922 284.453 cv
38.711 284.371 38.457 284.328 38.16 284.328 cv
37.988 284.328 37.82 284.344 37.652 284.375 cv
37.48 284.406 37.316 284.449 37.16 284.496 cv
37 284.551 36.852 284.613 36.711 284.684 cv
36.566 284.758 36.434 284.832 36.316 284.91 cv
36.313 285.504 36.352 286 36.43 286.395 cv
36.504 286.793 36.613 287.109 36.758 287.348 cv
36.902 287.59 37.082 287.762 37.297 287.863 cv
37.512 287.969 37.762 288.02 38.051 288.016 cv
38.34 288.02 38.594 287.965 38.809 287.852 cv
39.023 287.746 39.199 287.598 39.344 287.41 cv
39.484 287.227 39.59 287.02 39.656 286.789 cv
39.723 286.559 39.758 286.324 39.758 286.078 cv
cp
f
27.301 249.43 mo
41.489 249.43 li
41.489 266.52 li
27.301 266.52 li
cp
0 0 0 0 cmyk
ef
33.664 262.336 mo
33.66 262.426 33.652 262.496 33.641 262.555 cv
33.625 262.617 33.605 262.668 33.586 262.699 cv
33.563 262.738 33.539 262.762 33.508 262.777 cv
33.477 262.793 33.445 262.801 33.418 262.801 cv
28.781 262.801 li
28.746 262.801 28.719 262.793 28.691 262.777 cv
28.664 262.762 28.637 262.738 28.613 262.699 cv
28.586 262.668 28.566 262.617 28.555 262.555 cv
28.539 262.496 28.531 262.426 28.535 262.336 cv
28.531 262.258 28.539 262.184 28.555 262.121 cv
28.566 262.062 28.582 262.016 28.605 261.977 cv
28.621 261.941 28.648 261.91 28.68 261.887 cv
28.711 261.867 28.742 261.859 28.781 261.855 cv
30.633 261.855 li
30.633 255.109 li
28.918 256.129 li
28.828 256.18 28.758 256.207 28.711 256.215 cv
28.656 256.223 28.613 256.215 28.582 256.184 cv
28.547 256.156 28.527 256.105 28.516 256.035 cv
28.504 255.969 28.496 255.883 28.5 255.773 cv
28.496 255.699 28.5 255.633 28.512 255.574 cv
28.516 255.523 28.527 255.477 28.543 255.437 cv
28.555 255.402 28.574 255.371 28.598 255.344 cv
28.621 255.316 28.652 255.289 28.699 255.262 cv
30.742 253.949 li
30.758 253.937 30.777 253.926 30.809 253.918 cv
30.832 253.91 30.867 253.902 30.914 253.891 cv
30.953 253.883 31.004 253.875 31.059 253.871 cv
31.113 253.871 31.18 253.871 31.266 253.867 cv
31.371 253.871 31.465 253.875 31.539 253.883 cv
31.609 253.891 31.664 253.906 31.711 253.922 cv
31.75 253.941 31.777 253.961 31.793 253.984 cv
31.801 254.012 31.809 254.035 31.813 254.059 cv
31.813 261.855 li
33.418 261.855 li
33.453 261.859 33.488 261.867 33.52 261.887 cv
33.551 261.91 33.574 261.941 33.598 261.977 cv
33.613 262.016 33.629 262.062 33.645 262.121 cv
33.652 262.184 33.66 262.258 33.664 262.336 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.93 260.523 mo
40.93 260.91 40.859 261.254 40.723 261.551 cv
40.586 261.855 40.391 262.105 40.133 262.309 cv
39.875 262.516 39.555 262.672 39.176 262.773 cv
38.793 262.879 38.359 262.93 37.875 262.93 cv
37.414 262.93 37.004 262.883 36.645 262.789 cv
36.281 262.695 35.977 262.555 35.727 262.363 cv
35.477 262.18 35.285 261.949 35.152 261.672 cv
35.02 261.398 34.953 261.086 34.953 260.73 cv
34.953 260.457 34.996 260.199 35.09 259.965 cv
35.176 259.73 35.309 259.516 35.484 259.32 cv
35.652 259.125 35.863 258.941 36.117 258.766 cv
36.367 258.598 36.652 258.434 36.969 258.277 cv
36.695 258.137 36.453 257.988 36.242 257.828 cv
36.031 257.672 35.852 257.5 35.707 257.312 cv
35.559 257.129 35.449 256.934 35.375 256.723 cv
35.297 256.516 35.258 256.285 35.262 256.035 cv
35.258 255.727 35.313 255.434 35.43 255.16 cv
35.539 254.891 35.711 254.656 35.938 254.453 cv
36.164 254.254 36.449 254.094 36.801 253.977 cv
37.145 253.859 37.555 253.801 38.023 253.801 cv
38.469 253.801 38.855 253.855 39.184 253.961 cv
39.512 254.07 39.781 254.215 39.992 254.398 cv
40.203 254.586 40.359 254.805 40.465 255.055 cv
40.563 255.305 40.613 255.574 40.617 255.863 cv
40.613 256.098 40.574 256.324 40.504 256.535 cv
40.426 256.754 40.316 256.957 40.168 257.145 cv
40.02 257.34 39.84 257.52 39.629 257.684 cv
39.418 257.855 39.176 258.012 38.902 258.152 cv
39.223 258.316 39.508 258.48 39.766 258.648 cv
40.016 258.816 40.23 258.996 40.406 259.191 cv
40.574 259.387 40.703 259.594 40.797 259.809 cv
40.883 260.027 40.93 260.266 40.93 260.523 cv
cp
39.449 255.973 mo
39.445 255.785 39.414 255.609 39.348 255.453 cv
39.281 255.297 39.184 255.164 39.059 255.055 cv
38.93 254.945 38.77 254.863 38.582 254.805 cv
38.387 254.75 38.172 254.723 37.934 254.719 cv
37.438 254.723 37.063 254.832 36.813 255.055 cv
36.555 255.281 36.43 255.59 36.434 255.973 cv
36.43 256.152 36.461 256.316 36.523 256.469 cv
36.586 256.625 36.68 256.77 36.813 256.906 cv
36.938 257.043 37.102 257.176 37.305 257.305 cv
37.5 257.437 37.738 257.574 38.016 257.715 cv
38.477 257.48 38.832 257.219 39.078 256.926 cv
39.324 256.641 39.445 256.324 39.449 255.973 cv
cp
39.738 260.648 mo
39.734 260.441 39.695 260.25 39.621 260.078 cv
39.539 259.91 39.422 259.75 39.266 259.598 cv
39.109 259.449 38.91 259.305 38.676 259.164 cv
38.438 259.027 38.168 258.883 37.859 258.73 cv
37.57 258.875 37.316 259.016 37.102 259.156 cv
36.883 259.297 36.703 259.445 36.566 259.594 cv
36.426 259.75 36.32 259.906 36.25 260.07 cv
36.176 260.238 36.141 260.422 36.145 260.621 cv
36.141 261.066 36.293 261.41 36.602 261.648 cv
36.902 261.895 37.355 262.016 37.961 262.012 cv
38.543 262.016 38.988 261.895 39.289 261.645 cv
39.586 261.402 39.734 261.07 39.738 260.648 cv
cp
f
27.301 223.391 mo
41.489 223.391 li
41.489 240.481 li
27.301 240.481 li
cp
0 0 0 0 cmyk
ef
33.645 236.254 mo
33.641 236.34 33.637 236.414 33.625 236.477 cv
33.613 236.543 33.598 236.598 33.578 236.637 cv
33.555 236.684 33.527 236.715 33.496 236.73 cv
33.461 236.754 33.422 236.762 33.383 236.762 cv
28.48 236.762 li
28.418 236.762 28.359 236.754 28.313 236.738 cv
28.262 236.723 28.223 236.699 28.188 236.66 cv
28.152 236.629 28.125 236.574 28.113 236.504 cv
28.094 236.434 28.086 236.348 28.09 236.246 cv
28.086 236.156 28.09 236.078 28.098 236.008 cv
28.102 235.941 28.117 235.883 28.145 235.828 cv
28.168 235.777 28.199 235.723 28.234 235.668 cv
28.27 235.617 28.313 235.562 28.371 235.5 cv
30.145 233.676 li
30.555 233.258 30.883 232.883 31.133 232.547 cv
31.379 232.219 31.57 231.914 31.703 231.637 cv
31.836 231.363 31.922 231.113 31.969 230.887 cv
32.008 230.664 32.031 230.453 32.031 230.258 cv
32.031 230.062 31.996 229.879 31.93 229.699 cv
31.863 229.527 31.77 229.371 31.645 229.234 cv
31.52 229.105 31.363 229 31.176 228.918 cv
30.988 228.844 30.77 228.805 30.523 228.801 cv
30.234 228.805 29.977 228.844 29.75 228.918 cv
29.52 229 29.32 229.086 29.148 229.172 cv
28.977 229.266 28.832 229.348 28.715 229.426 cv
28.598 229.504 28.512 229.543 28.461 229.543 cv
28.426 229.543 28.395 229.535 28.371 229.516 cv
28.34 229.5 28.32 229.469 28.305 229.426 cv
28.289 229.387 28.273 229.332 28.266 229.262 cv
28.254 229.195 28.25 229.113 28.254 229.016 cv
28.25 228.949 28.254 228.891 28.262 228.84 cv
28.266 228.789 28.273 228.746 28.285 228.707 cv
28.293 228.672 28.309 228.637 28.328 228.605 cv
28.348 228.574 28.383 228.535 28.441 228.484 cv
28.492 228.437 28.586 228.371 28.723 228.289 cv
28.855 228.207 29.027 228.129 29.23 228.047 cv
29.434 227.969 29.656 227.898 29.902 227.844 cv
30.145 227.789 30.402 227.762 30.676 227.762 cv
31.102 227.762 31.477 227.824 31.801 227.945 cv
32.121 228.066 32.387 228.23 32.602 228.441 cv
32.813 228.652 32.973 228.898 33.078 229.172 cv
33.184 229.453 33.238 229.75 33.238 230.062 cv
33.238 230.352 33.211 230.633 33.16 230.91 cv
33.109 231.195 33.004 231.5 32.844 231.824 cv
32.68 232.152 32.445 232.516 32.141 232.914 cv
31.832 233.316 31.426 233.777 30.922 234.293 cv
29.516 235.762 li
33.375 235.762 li
33.406 235.766 33.441 235.777 33.48 235.793 cv
33.512 235.816 33.543 235.848 33.57 235.887 cv
33.594 235.93 33.613 235.98 33.625 236.039 cv
33.637 236.105 33.641 236.176 33.645 236.254 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.02 232.305 mo
41.016 232.988 40.965 233.609 40.859 234.172 cv
40.75 234.734 40.57 235.219 40.324 235.621 cv
40.07 236.027 39.742 236.34 39.344 236.559 cv
38.938 236.781 38.445 236.891 37.859 236.891 cv
37.301 236.891 36.828 236.793 36.449 236.594 cv
36.066 236.398 35.762 236.105 35.527 235.719 cv
35.293 235.332 35.125 234.859 35.031 234.293 cv
34.93 233.73 34.883 233.082 34.883 232.348 cv
34.883 231.676 34.938 231.055 35.047 230.488 cv
35.156 229.926 35.332 229.441 35.582 229.035 cv
35.824 228.633 36.148 228.32 36.555 228.094 cv
36.953 227.875 37.449 227.762 38.039 227.762 cv
38.598 227.762 39.07 227.863 39.453 228.059 cv
39.836 228.262 40.141 228.555 40.375 228.937 cv
40.605 229.328 40.773 229.801 40.871 230.363 cv
40.969 230.926 41.016 231.574 41.02 232.305 cv
cp
39.813 232.387 mo
39.809 231.945 39.793 231.547 39.766 231.195 cv
39.73 230.844 39.684 230.535 39.625 230.266 cv
39.559 229.996 39.48 229.766 39.383 229.57 cv
39.285 229.379 39.168 229.219 39.031 229.09 cv
38.891 228.965 38.73 228.871 38.559 228.812 cv
38.379 228.758 38.184 228.73 37.969 228.727 cv
37.578 228.73 37.262 228.82 37.023 229.004 cv
36.777 229.187 36.586 229.441 36.449 229.758 cv
36.309 230.078 36.215 230.449 36.164 230.879 cv
36.113 231.309 36.09 231.773 36.09 232.266 cv
36.09 232.93 36.121 233.492 36.191 233.953 cv
36.258 234.422 36.367 234.801 36.52 235.09 cv
36.664 235.387 36.855 235.598 37.086 235.727 cv
37.316 235.863 37.598 235.93 37.93 235.926 cv
38.184 235.93 38.406 235.891 38.602 235.805 cv
38.793 235.727 38.961 235.605 39.102 235.449 cv
39.242 235.297 39.355 235.113 39.449 234.898 cv
39.535 234.684 39.609 234.445 39.668 234.184 cv
39.719 233.926 39.758 233.645 39.781 233.34 cv
39.801 233.035 39.809 232.719 39.813 232.387 cv
cp
f
27.301 197.352 mo
41.489 197.352 li
41.489 214.442 li
27.301 214.442 li
cp
0 0 0 0 cmyk
ef
33.645 210.211 mo
33.641 210.297 33.637 210.371 33.625 210.434 cv
33.613 210.5 33.598 210.555 33.578 210.594 cv
33.555 210.641 33.527 210.672 33.496 210.687 cv
33.461 210.711 33.422 210.719 33.383 210.719 cv
28.48 210.719 li
28.418 210.719 28.359 210.711 28.313 210.695 cv
28.262 210.68 28.223 210.656 28.188 210.617 cv
28.152 210.586 28.125 210.531 28.113 210.461 cv
28.094 210.391 28.086 210.305 28.09 210.203 cv
28.086 210.113 28.09 210.035 28.098 209.965 cv
28.102 209.898 28.117 209.84 28.145 209.785 cv
28.168 209.734 28.199 209.68 28.234 209.625 cv
28.27 209.574 28.313 209.52 28.371 209.457 cv
30.145 207.633 li
30.555 207.215 30.883 206.84 31.133 206.504 cv
31.379 206.176 31.57 205.871 31.703 205.594 cv
31.836 205.32 31.922 205.07 31.969 204.844 cv
32.008 204.621 32.031 204.41 32.031 204.215 cv
32.031 204.02 31.996 203.836 31.93 203.656 cv
31.863 203.484 31.77 203.328 31.645 203.191 cv
31.52 203.062 31.363 202.957 31.176 202.875 cv
30.988 202.801 30.77 202.762 30.523 202.758 cv
30.234 202.762 29.977 202.801 29.75 202.875 cv
29.52 202.957 29.32 203.043 29.148 203.129 cv
28.977 203.223 28.832 203.305 28.715 203.383 cv
28.598 203.461 28.512 203.5 28.461 203.5 cv
28.426 203.5 28.395 203.492 28.371 203.473 cv
28.34 203.457 28.32 203.426 28.305 203.383 cv
28.289 203.344 28.273 203.289 28.266 203.219 cv
28.254 203.152 28.25 203.07 28.254 202.973 cv
28.25 202.906 28.254 202.848 28.262 202.797 cv
28.266 202.746 28.273 202.703 28.285 202.664 cv
28.293 202.629 28.309 202.594 28.328 202.562 cv
28.348 202.531 28.383 202.492 28.441 202.441 cv
28.492 202.395 28.586 202.328 28.723 202.246 cv
28.855 202.164 29.027 202.086 29.23 202.004 cv
29.434 201.926 29.656 201.855 29.902 201.801 cv
30.145 201.746 30.402 201.719 30.676 201.719 cv
31.102 201.719 31.477 201.781 31.801 201.902 cv
32.121 202.023 32.387 202.187 32.602 202.398 cv
32.813 202.609 32.973 202.855 33.078 203.129 cv
33.184 203.41 33.238 203.707 33.238 204.02 cv
33.238 204.309 33.211 204.59 33.16 204.867 cv
33.109 205.152 33.004 205.457 32.844 205.781 cv
32.68 206.109 32.445 206.473 32.141 206.871 cv
31.832 207.273 31.426 207.734 30.922 208.25 cv
29.516 209.719 li
33.375 209.719 li
33.406 209.723 33.441 209.734 33.48 209.75 cv
33.512 209.773 33.543 209.805 33.57 209.844 cv
33.594 209.887 33.613 209.937 33.625 209.996 cv
33.637 210.062 33.641 210.133 33.645 210.211 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.727 210.211 mo
40.723 210.297 40.719 210.371 40.707 210.434 cv
40.695 210.5 40.68 210.555 40.66 210.594 cv
40.637 210.641 40.609 210.672 40.578 210.687 cv
40.543 210.711 40.504 210.719 40.465 210.719 cv
35.563 210.719 li
35.5 210.719 35.441 210.711 35.395 210.695 cv
35.344 210.68 35.305 210.656 35.27 210.617 cv
35.234 210.586 35.207 210.531 35.195 210.461 cv
35.176 210.391 35.168 210.305 35.172 210.203 cv
35.168 210.113 35.172 210.035 35.18 209.965 cv
35.184 209.898 35.199 209.84 35.227 209.785 cv
35.25 209.734 35.281 209.68 35.316 209.625 cv
35.352 209.574 35.395 209.52 35.453 209.457 cv
37.227 207.633 li
37.637 207.215 37.965 206.84 38.215 206.504 cv
38.461 206.176 38.652 205.871 38.785 205.594 cv
38.918 205.32 39.004 205.07 39.051 204.844 cv
39.09 204.621 39.113 204.41 39.113 204.215 cv
39.113 204.02 39.078 203.836 39.012 203.656 cv
38.945 203.484 38.852 203.328 38.727 203.191 cv
38.602 203.062 38.445 202.957 38.258 202.875 cv
38.07 202.801 37.852 202.762 37.605 202.758 cv
37.316 202.762 37.059 202.801 36.832 202.875 cv
36.602 202.957 36.402 203.043 36.23 203.129 cv
36.059 203.223 35.914 203.305 35.797 203.383 cv
35.68 203.461 35.594 203.5 35.543 203.5 cv
35.508 203.5 35.477 203.492 35.453 203.473 cv
35.422 203.457 35.402 203.426 35.387 203.383 cv
35.371 203.344 35.355 203.289 35.348 203.219 cv
35.336 203.152 35.332 203.07 35.336 202.973 cv
35.332 202.906 35.336 202.848 35.344 202.797 cv
35.348 202.746 35.355 202.703 35.367 202.664 cv
35.375 202.629 35.391 202.594 35.41 202.562 cv
35.43 202.531 35.465 202.492 35.523 202.441 cv
35.574 202.395 35.668 202.328 35.805 202.246 cv
35.938 202.164 36.109 202.086 36.313 202.004 cv
36.516 201.926 36.738 201.855 36.984 201.801 cv
37.227 201.746 37.484 201.719 37.758 201.719 cv
38.184 201.719 38.559 201.781 38.883 201.902 cv
39.203 202.023 39.469 202.187 39.684 202.398 cv
39.895 202.609 40.055 202.855 40.16 203.129 cv
40.266 203.41 40.32 203.707 40.32 204.02 cv
40.32 204.309 40.293 204.59 40.242 204.867 cv
40.191 205.152 40.086 205.457 39.926 205.781 cv
39.762 206.109 39.527 206.473 39.223 206.871 cv
38.914 207.273 38.508 207.734 38.004 208.25 cv
36.598 209.719 li
40.457 209.719 li
40.488 209.723 40.523 209.734 40.563 209.75 cv
40.594 209.773 40.625 209.805 40.652 209.844 cv
40.676 209.887 40.695 209.937 40.707 209.996 cv
40.719 210.062 40.723 210.133 40.727 210.211 cv
cp
f
27.301 171.309 mo
41.489 171.309 li
41.489 188.399 li
27.301 188.399 li
cp
0 0 0 0 cmyk
ef
33.645 184.152 mo
33.641 184.238 33.637 184.312 33.625 184.375 cv
33.613 184.441 33.598 184.496 33.578 184.535 cv
33.555 184.582 33.527 184.613 33.496 184.629 cv
33.461 184.652 33.422 184.66 33.383 184.66 cv
28.48 184.66 li
28.418 184.66 28.359 184.652 28.313 184.637 cv
28.262 184.621 28.223 184.598 28.188 184.559 cv
28.152 184.527 28.125 184.473 28.113 184.402 cv
28.094 184.332 28.086 184.246 28.09 184.145 cv
28.086 184.055 28.09 183.977 28.098 183.906 cv
28.102 183.84 28.117 183.781 28.145 183.727 cv
28.168 183.676 28.199 183.621 28.234 183.566 cv
28.27 183.516 28.313 183.461 28.371 183.398 cv
30.145 181.574 li
30.555 181.156 30.883 180.781 31.133 180.445 cv
31.379 180.117 31.57 179.812 31.703 179.535 cv
31.836 179.262 31.922 179.012 31.969 178.785 cv
32.008 178.562 32.031 178.352 32.031 178.156 cv
32.031 177.961 31.996 177.777 31.93 177.598 cv
31.863 177.426 31.77 177.27 31.645 177.133 cv
31.52 177.004 31.363 176.898 31.176 176.816 cv
30.988 176.742 30.77 176.703 30.523 176.699 cv
30.234 176.703 29.977 176.742 29.75 176.816 cv
29.52 176.898 29.32 176.984 29.148 177.07 cv
28.977 177.164 28.832 177.246 28.715 177.324 cv
28.598 177.402 28.512 177.441 28.461 177.441 cv
28.426 177.441 28.395 177.434 28.371 177.414 cv
28.34 177.398 28.32 177.367 28.305 177.324 cv
28.289 177.285 28.273 177.23 28.266 177.16 cv
28.254 177.094 28.25 177.012 28.254 176.914 cv
28.25 176.848 28.254 176.789 28.262 176.738 cv
28.266 176.687 28.273 176.645 28.285 176.605 cv
28.293 176.57 28.309 176.535 28.328 176.504 cv
28.348 176.473 28.383 176.434 28.441 176.383 cv
28.492 176.336 28.586 176.27 28.723 176.187 cv
28.855 176.105 29.027 176.027 29.23 175.945 cv
29.434 175.867 29.656 175.797 29.902 175.742 cv
30.145 175.687 30.402 175.66 30.676 175.66 cv
31.102 175.66 31.477 175.723 31.801 175.844 cv
32.121 175.965 32.387 176.129 32.602 176.34 cv
32.813 176.551 32.973 176.797 33.078 177.07 cv
33.184 177.352 33.238 177.648 33.238 177.961 cv
33.238 178.25 33.211 178.531 33.16 178.809 cv
33.109 179.094 33.004 179.398 32.844 179.723 cv
32.68 180.051 32.445 180.414 32.141 180.812 cv
31.832 181.215 31.426 181.676 30.922 182.191 cv
29.516 183.66 li
33.375 183.66 li
33.406 183.664 33.441 183.676 33.48 183.691 cv
33.512 183.715 33.543 183.746 33.57 183.785 cv
33.594 183.828 33.613 183.879 33.625 183.937 cv
33.637 184.004 33.641 184.074 33.645 184.152 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.102 182.137 mo
41.098 182.289 41.074 182.41 41.031 182.496 cv
40.984 182.586 40.922 182.629 40.84 182.625 cv
39.84 182.625 li
39.84 184.488 li
39.84 184.527 39.828 184.559 39.813 184.582 cv
39.789 184.609 39.758 184.629 39.715 184.648 cv
39.664 184.664 39.602 184.676 39.531 184.687 cv
39.453 184.695 39.359 184.699 39.242 184.703 cv
39.125 184.699 39.027 184.695 38.957 184.687 cv
38.879 184.676 38.82 184.664 38.777 184.648 cv
38.73 184.629 38.699 184.609 38.684 184.582 cv
38.664 184.559 38.656 184.527 38.66 184.488 cv
38.66 182.625 li
35.031 182.625 li
34.973 182.629 34.93 182.621 34.895 182.605 cv
34.859 182.594 34.824 182.566 34.797 182.527 cv
34.766 182.492 34.746 182.441 34.734 182.371 cv
34.723 182.305 34.719 182.215 34.719 182.102 cv
34.719 182.02 34.719 181.941 34.727 181.871 cv
34.727 181.801 34.738 181.738 34.754 181.684 cv
34.766 181.629 34.781 181.574 34.809 181.52 cv
34.828 181.465 34.855 181.41 34.891 181.348 cv
38.051 175.961 li
38.07 175.926 38.105 175.895 38.152 175.867 cv
38.195 175.84 38.25 175.816 38.324 175.797 cv
38.391 175.781 38.477 175.77 38.582 175.758 cv
38.684 175.754 38.805 175.75 38.945 175.746 cv
39.094 175.75 39.23 175.754 39.348 175.766 cv
39.461 175.777 39.551 175.793 39.625 175.809 cv
39.691 175.828 39.746 175.852 39.785 175.883 cv
39.82 175.914 39.84 175.949 39.84 175.988 cv
39.84 181.652 li
40.84 181.652 li
40.914 181.656 40.977 181.695 41.027 181.773 cv
41.074 181.855 41.098 181.977 41.102 182.137 cv
cp
38.66 176.785 mo
38.648 176.785 li
35.797 181.652 li
38.66 181.652 li
cp
f
27.301 145.269 mo
41.489 145.269 li
41.489 162.359 li
27.301 162.359 li
cp
0 0 0 0 cmyk
ef
33.645 158.113 mo
33.641 158.199 33.637 158.273 33.625 158.336 cv
33.613 158.402 33.598 158.457 33.578 158.496 cv
33.555 158.543 33.527 158.574 33.496 158.59 cv
33.461 158.613 33.422 158.621 33.383 158.621 cv
28.48 158.621 li
28.418 158.621 28.359 158.613 28.313 158.598 cv
28.262 158.582 28.223 158.559 28.188 158.52 cv
28.152 158.488 28.125 158.434 28.113 158.363 cv
28.094 158.293 28.086 158.207 28.09 158.105 cv
28.086 158.016 28.09 157.937 28.098 157.867 cv
28.102 157.801 28.117 157.742 28.145 157.687 cv
28.168 157.637 28.199 157.582 28.234 157.527 cv
28.27 157.477 28.313 157.422 28.371 157.359 cv
30.145 155.535 li
30.555 155.117 30.883 154.742 31.133 154.406 cv
31.379 154.078 31.57 153.773 31.703 153.496 cv
31.836 153.223 31.922 152.973 31.969 152.746 cv
32.008 152.523 32.031 152.312 32.031 152.117 cv
32.031 151.922 31.996 151.738 31.93 151.559 cv
31.863 151.387 31.77 151.23 31.645 151.094 cv
31.52 150.965 31.363 150.859 31.176 150.777 cv
30.988 150.703 30.77 150.664 30.523 150.66 cv
30.234 150.664 29.977 150.703 29.75 150.777 cv
29.52 150.859 29.32 150.945 29.148 151.031 cv
28.977 151.125 28.832 151.207 28.715 151.285 cv
28.598 151.363 28.512 151.402 28.461 151.402 cv
28.426 151.402 28.395 151.395 28.371 151.375 cv
28.34 151.359 28.32 151.328 28.305 151.285 cv
28.289 151.246 28.273 151.191 28.266 151.121 cv
28.254 151.055 28.25 150.973 28.254 150.875 cv
28.25 150.809 28.254 150.75 28.262 150.699 cv
28.266 150.648 28.273 150.605 28.285 150.566 cv
28.293 150.531 28.309 150.496 28.328 150.465 cv
28.348 150.434 28.383 150.395 28.441 150.344 cv
28.492 150.297 28.586 150.23 28.723 150.148 cv
28.855 150.066 29.027 149.988 29.23 149.906 cv
29.434 149.828 29.656 149.758 29.902 149.703 cv
30.145 149.648 30.402 149.621 30.676 149.621 cv
31.102 149.621 31.477 149.684 31.801 149.805 cv
32.121 149.926 32.387 150.09 32.602 150.301 cv
32.813 150.512 32.973 150.758 33.078 151.031 cv
33.184 151.312 33.238 151.609 33.238 151.922 cv
33.238 152.211 33.211 152.492 33.16 152.77 cv
33.109 153.055 33.004 153.359 32.844 153.684 cv
32.68 154.012 32.445 154.375 32.141 154.773 cv
31.832 155.176 31.426 155.637 30.922 156.152 cv
29.516 157.621 li
33.375 157.621 li
33.406 157.625 33.441 157.637 33.48 157.652 cv
33.512 157.676 33.543 157.707 33.57 157.746 cv
33.594 157.789 33.613 157.84 33.625 157.898 cv
33.637 157.965 33.641 158.035 33.645 158.113 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.953 155.75 mo
40.953 156.141 40.891 156.52 40.773 156.879 cv
40.648 157.246 40.465 157.562 40.223 157.836 cv
39.973 158.113 39.66 158.336 39.285 158.5 cv
38.902 158.668 38.457 158.75 37.941 158.75 cv
37.57 158.75 37.242 158.707 36.961 158.613 cv
36.676 158.527 36.43 158.395 36.219 158.223 cv
36.008 158.055 35.832 157.848 35.695 157.602 cv
35.555 157.355 35.441 157.074 35.359 156.758 cv
35.273 156.445 35.215 156.102 35.18 155.723 cv
35.141 155.352 35.121 154.949 35.125 154.516 cv
35.121 154.137 35.141 153.754 35.184 153.363 cv
35.223 152.98 35.297 152.605 35.402 152.238 cv
35.508 151.879 35.652 151.539 35.832 151.223 cv
36.012 150.906 36.238 150.629 36.512 150.395 cv
36.785 150.16 37.109 149.973 37.488 149.832 cv
37.867 149.695 38.309 149.629 38.813 149.625 cv
38.98 149.629 39.152 149.637 39.324 149.656 cv
39.496 149.68 39.656 149.711 39.805 149.742 cv
39.953 149.781 40.074 149.816 40.176 149.855 cv
40.273 149.895 40.34 149.93 40.375 149.953 cv
40.402 149.98 40.426 150.008 40.445 150.035 cv
40.461 150.066 40.477 150.098 40.484 150.133 cv
40.492 150.168 40.496 150.207 40.504 150.25 cv
40.504 150.293 40.508 150.348 40.512 150.41 cv
40.508 150.496 40.508 150.566 40.508 150.621 cv
40.504 150.684 40.492 150.73 40.48 150.766 cv
40.461 150.805 40.441 150.832 40.418 150.848 cv
40.391 150.867 40.359 150.875 40.32 150.875 cv
40.27 150.875 40.199 150.859 40.113 150.828 cv
40.023 150.797 39.918 150.762 39.797 150.719 cv
39.672 150.684 39.523 150.648 39.348 150.613 cv
39.172 150.586 38.969 150.57 38.738 150.566 cv
38.309 150.57 37.941 150.656 37.637 150.828 cv
37.332 151 37.082 151.234 36.887 151.527 cv
36.691 151.82 36.547 152.16 36.457 152.543 cv
36.359 152.934 36.305 153.336 36.297 153.754 cv
36.414 153.687 36.551 153.621 36.699 153.551 cv
36.848 153.484 37.008 153.422 37.184 153.363 cv
37.359 153.312 37.547 153.266 37.742 153.23 cv
37.938 153.199 38.148 153.184 38.375 153.18 cv
38.852 153.184 39.254 153.25 39.586 153.375 cv
39.914 153.508 40.18 153.687 40.387 153.918 cv
40.586 154.148 40.73 154.418 40.82 154.73 cv
40.906 155.043 40.953 155.383 40.953 155.75 cv
cp
39.758 155.859 mo
39.758 155.598 39.73 155.355 39.68 155.137 cv
39.625 154.922 39.535 154.738 39.414 154.582 cv
39.289 154.434 39.125 154.316 38.922 154.234 cv
38.711 154.152 38.457 154.109 38.16 154.109 cv
37.988 154.109 37.82 154.125 37.652 154.156 cv
37.48 154.187 37.316 154.23 37.16 154.277 cv
37 154.332 36.852 154.395 36.711 154.465 cv
36.566 154.539 36.434 154.613 36.316 154.691 cv
36.313 155.285 36.352 155.781 36.43 156.176 cv
36.504 156.574 36.613 156.891 36.758 157.129 cv
36.902 157.371 37.082 157.543 37.297 157.645 cv
37.512 157.75 37.762 157.801 38.051 157.797 cv
38.34 157.801 38.594 157.746 38.809 157.633 cv
39.023 157.527 39.199 157.379 39.344 157.191 cv
39.484 157.008 39.59 156.801 39.656 156.57 cv
39.723 156.34 39.758 156.105 39.758 155.859 cv
cp
f
27.301 119.23 mo
41.489 119.23 li
41.489 136.32 li
27.301 136.32 li
cp
0 0 0 0 cmyk
ef
33.645 132.07 mo
33.641 132.156 33.637 132.23 33.625 132.293 cv
33.613 132.359 33.598 132.414 33.578 132.453 cv
33.555 132.5 33.527 132.531 33.496 132.547 cv
33.461 132.57 33.422 132.578 33.383 132.578 cv
28.48 132.578 li
28.418 132.578 28.359 132.57 28.313 132.555 cv
28.262 132.539 28.223 132.516 28.188 132.477 cv
28.152 132.445 28.125 132.391 28.113 132.32 cv
28.094 132.25 28.086 132.164 28.09 132.062 cv
28.086 131.973 28.09 131.895 28.098 131.824 cv
28.102 131.758 28.117 131.699 28.145 131.645 cv
28.168 131.594 28.199 131.539 28.234 131.484 cv
28.27 131.434 28.313 131.379 28.371 131.316 cv
30.145 129.492 li
30.555 129.074 30.883 128.699 31.133 128.363 cv
31.379 128.035 31.57 127.73 31.703 127.453 cv
31.836 127.18 31.922 126.93 31.969 126.703 cv
32.008 126.48 32.031 126.27 32.031 126.074 cv
32.031 125.879 31.996 125.695 31.93 125.516 cv
31.863 125.344 31.77 125.187 31.645 125.051 cv
31.52 124.922 31.363 124.816 31.176 124.734 cv
30.988 124.66 30.77 124.621 30.523 124.617 cv
30.234 124.621 29.977 124.66 29.75 124.734 cv
29.52 124.816 29.32 124.902 29.148 124.988 cv
28.977 125.082 28.832 125.164 28.715 125.242 cv
28.598 125.32 28.512 125.359 28.461 125.359 cv
28.426 125.359 28.395 125.352 28.371 125.332 cv
28.34 125.316 28.32 125.285 28.305 125.242 cv
28.289 125.203 28.273 125.148 28.266 125.078 cv
28.254 125.012 28.25 124.93 28.254 124.832 cv
28.25 124.766 28.254 124.707 28.262 124.656 cv
28.266 124.605 28.273 124.562 28.285 124.523 cv
28.293 124.488 28.309 124.453 28.328 124.422 cv
28.348 124.391 28.383 124.352 28.441 124.301 cv
28.492 124.254 28.586 124.187 28.723 124.105 cv
28.855 124.023 29.027 123.945 29.23 123.863 cv
29.434 123.785 29.656 123.715 29.902 123.66 cv
30.145 123.605 30.402 123.578 30.676 123.578 cv
31.102 123.578 31.477 123.641 31.801 123.762 cv
32.121 123.883 32.387 124.047 32.602 124.258 cv
32.813 124.469 32.973 124.715 33.078 124.988 cv
33.184 125.27 33.238 125.566 33.238 125.879 cv
33.238 126.168 33.211 126.449 33.16 126.727 cv
33.109 127.012 33.004 127.316 32.844 127.641 cv
32.68 127.969 32.445 128.332 32.141 128.73 cv
31.832 129.133 31.426 129.594 30.922 130.109 cv
29.516 131.578 li
33.375 131.578 li
33.406 131.582 33.441 131.594 33.48 131.609 cv
33.512 131.633 33.543 131.664 33.57 131.703 cv
33.594 131.746 33.613 131.797 33.625 131.855 cv
33.637 131.922 33.641 131.992 33.645 132.07 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.93 130.301 mo
40.93 130.687 40.859 131.031 40.723 131.328 cv
40.586 131.633 40.391 131.883 40.133 132.086 cv
39.875 132.293 39.555 132.449 39.176 132.551 cv
38.793 132.656 38.359 132.707 37.875 132.707 cv
37.414 132.707 37.004 132.66 36.645 132.566 cv
36.281 132.473 35.977 132.332 35.727 132.141 cv
35.477 131.957 35.285 131.727 35.152 131.449 cv
35.02 131.176 34.953 130.863 34.953 130.508 cv
34.953 130.234 34.996 129.977 35.09 129.742 cv
35.176 129.508 35.309 129.293 35.484 129.098 cv
35.652 128.902 35.863 128.719 36.117 128.543 cv
36.367 128.375 36.652 128.211 36.969 128.055 cv
36.695 127.914 36.453 127.766 36.242 127.605 cv
36.031 127.449 35.852 127.277 35.707 127.09 cv
35.559 126.906 35.449 126.711 35.375 126.5 cv
35.297 126.293 35.258 126.062 35.262 125.812 cv
35.258 125.504 35.313 125.211 35.43 124.937 cv
35.539 124.668 35.711 124.434 35.938 124.23 cv
36.164 124.031 36.449 123.871 36.801 123.754 cv
37.145 123.637 37.555 123.578 38.023 123.578 cv
38.469 123.578 38.855 123.633 39.184 123.738 cv
39.512 123.848 39.781 123.992 39.992 124.176 cv
40.203 124.363 40.359 124.582 40.465 124.832 cv
40.563 125.082 40.613 125.352 40.617 125.641 cv
40.613 125.875 40.574 126.102 40.504 126.312 cv
40.426 126.531 40.316 126.734 40.168 126.922 cv
40.02 127.117 39.84 127.297 39.629 127.461 cv
39.418 127.633 39.176 127.789 38.902 127.93 cv
39.223 128.094 39.508 128.258 39.766 128.426 cv
40.016 128.594 40.23 128.773 40.406 128.969 cv
40.574 129.164 40.703 129.371 40.797 129.586 cv
40.883 129.805 40.93 130.043 40.93 130.301 cv
cp
39.449 125.75 mo
39.445 125.562 39.414 125.387 39.348 125.23 cv
39.281 125.074 39.184 124.941 39.059 124.832 cv
38.93 124.723 38.77 124.641 38.582 124.582 cv
38.387 124.527 38.172 124.5 37.934 124.496 cv
37.438 124.5 37.063 124.609 36.813 124.832 cv
36.555 125.059 36.43 125.367 36.434 125.75 cv
36.43 125.93 36.461 126.094 36.523 126.246 cv
36.586 126.402 36.68 126.547 36.813 126.684 cv
36.938 126.82 37.102 126.953 37.305 127.082 cv
37.5 127.215 37.738 127.352 38.016 127.492 cv
38.477 127.258 38.832 126.996 39.078 126.703 cv
39.324 126.418 39.445 126.102 39.449 125.75 cv
cp
39.738 130.426 mo
39.734 130.219 39.695 130.027 39.621 129.855 cv
39.539 129.687 39.422 129.527 39.266 129.375 cv
39.109 129.227 38.91 129.082 38.676 128.941 cv
38.438 128.805 38.168 128.66 37.859 128.508 cv
37.57 128.652 37.316 128.793 37.102 128.934 cv
36.883 129.074 36.703 129.223 36.566 129.371 cv
36.426 129.527 36.32 129.684 36.25 129.848 cv
36.176 130.016 36.141 130.199 36.145 130.398 cv
36.141 130.844 36.293 131.187 36.602 131.426 cv
36.902 131.672 37.355 131.793 37.961 131.789 cv
38.543 131.793 38.988 131.672 39.289 131.422 cv
39.586 131.18 39.734 130.848 39.738 130.426 cv
cp
f
27.301 93.191 mo
41.489 93.191 li
41.489 110.281 li
27.301 110.281 li
cp
0 0 0 0 cmyk
ef
33.574 104.004 mo
33.57 104.414 33.5 104.781 33.359 105.105 cv
33.215 105.434 33.012 105.715 32.75 105.945 cv
32.484 106.18 32.156 106.355 31.77 106.48 cv
31.379 106.605 30.941 106.668 30.457 106.668 cv
30.152 106.668 29.875 106.641 29.621 106.594 cv
29.359 106.547 29.129 106.496 28.934 106.426 cv
28.73 106.363 28.566 106.293 28.434 106.223 cv
28.301 106.152 28.215 106.102 28.184 106.066 cv
28.145 106.039 28.121 106.008 28.105 105.973 cv
28.086 105.941 28.066 105.902 28.055 105.855 cv
28.039 105.812 28.031 105.758 28.023 105.687 cv
28.016 105.625 28.012 105.543 28.016 105.441 cv
28.012 105.281 28.027 105.168 28.063 105.102 cv
28.094 105.039 28.141 105.004 28.203 105.004 cv
28.246 105.004 28.328 105.043 28.453 105.113 cv
28.574 105.191 28.734 105.27 28.93 105.352 cv
29.121 105.437 29.348 105.516 29.613 105.586 cv
29.871 105.66 30.164 105.695 30.484 105.695 cv
30.793 105.695 31.063 105.656 31.301 105.578 cv
31.531 105.5 31.73 105.391 31.891 105.25 cv
32.047 105.109 32.164 104.941 32.246 104.746 cv
32.324 104.551 32.363 104.34 32.367 104.113 cv
32.363 103.863 32.313 103.637 32.215 103.434 cv
32.109 103.234 31.961 103.062 31.77 102.914 cv
31.57 102.77 31.332 102.656 31.047 102.578 cv
30.762 102.5 30.438 102.461 30.074 102.461 cv
29.203 102.461 li
29.16 102.461 29.125 102.453 29.09 102.437 cv
29.055 102.422 29.023 102.395 29 102.355 cv
28.973 102.32 28.953 102.273 28.938 102.215 cv
28.922 102.156 28.914 102.078 28.914 101.98 cv
28.914 101.895 28.918 101.824 28.934 101.766 cv
28.941 101.711 28.961 101.664 28.992 101.629 cv
29.016 101.594 29.047 101.57 29.078 101.551 cv
29.109 101.539 29.145 101.531 29.188 101.527 cv
29.961 101.527 li
30.262 101.531 30.531 101.492 30.773 101.41 cv
31.008 101.336 31.211 101.223 31.383 101.074 cv
31.547 100.93 31.676 100.754 31.766 100.551 cv
31.855 100.348 31.902 100.121 31.902 99.867 cv
31.902 99.687 31.871 99.512 31.813 99.344 cv
31.75 99.18 31.66 99.035 31.543 98.91 cv
31.422 98.785 31.27 98.687 31.09 98.617 cv
30.902 98.547 30.691 98.512 30.449 98.512 cv
30.184 98.512 29.938 98.555 29.719 98.633 cv
29.492 98.715 29.297 98.801 29.125 98.891 cv
28.949 98.984 28.805 99.07 28.691 99.148 cv
28.578 99.23 28.496 99.27 28.453 99.266 cv
28.418 99.27 28.391 99.262 28.367 99.25 cv
28.34 99.238 28.32 99.215 28.305 99.18 cv
28.289 99.148 28.277 99.102 28.27 99.035 cv
28.262 98.977 28.258 98.895 28.262 98.793 cv
28.258 98.727 28.258 98.668 28.266 98.613 cv
28.266 98.562 28.277 98.516 28.293 98.473 cv
28.309 98.437 28.324 98.402 28.344 98.367 cv
28.359 98.34 28.391 98.301 28.434 98.254 cv
28.477 98.211 28.563 98.148 28.699 98.066 cv
28.828 97.984 28.992 97.906 29.188 97.824 cv
29.379 97.746 29.602 97.676 29.859 97.621 cv
30.109 97.566 30.383 97.539 30.68 97.539 cv
31.086 97.539 31.449 97.594 31.762 97.695 cv
32.074 97.805 32.332 97.953 32.543 98.141 cv
32.746 98.336 32.902 98.566 33.008 98.832 cv
33.109 99.102 33.16 99.395 33.164 99.719 cv
33.16 100 33.125 100.262 33.055 100.496 cv
32.98 100.738 32.871 100.949 32.73 101.133 cv
32.586 101.32 32.414 101.477 32.211 101.605 cv
32.004 101.738 31.766 101.832 31.496 101.879 cv
31.496 101.891 li
31.801 101.926 32.082 102 32.336 102.121 cv
32.59 102.242 32.809 102.395 32.992 102.578 cv
33.172 102.762 33.313 102.977 33.418 103.219 cv
33.52 103.465 33.57 103.727 33.574 104.004 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.02 102.082 mo
41.016 102.766 40.965 103.387 40.859 103.949 cv
40.75 104.512 40.57 104.996 40.324 105.398 cv
40.07 105.805 39.742 106.117 39.344 106.336 cv
38.938 106.559 38.445 106.668 37.859 106.668 cv
37.301 106.668 36.828 106.57 36.449 106.371 cv
36.066 106.176 35.762 105.883 35.527 105.496 cv
35.293 105.109 35.125 104.637 35.031 104.07 cv
34.93 103.508 34.883 102.859 34.883 102.125 cv
34.883 101.453 34.938 100.832 35.047 100.266 cv
35.156 99.703 35.332 99.219 35.582 98.812 cv
35.824 98.41 36.148 98.098 36.555 97.871 cv
36.953 97.652 37.449 97.539 38.039 97.539 cv
38.598 97.539 39.07 97.641 39.453 97.836 cv
39.836 98.039 40.141 98.332 40.375 98.715 cv
40.605 99.105 40.773 99.578 40.871 100.141 cv
40.969 100.703 41.016 101.352 41.02 102.082 cv
cp
39.813 102.164 mo
39.809 101.723 39.793 101.324 39.766 100.973 cv
39.73 100.621 39.684 100.312 39.625 100.043 cv
39.559 99.773 39.48 99.543 39.383 99.348 cv
39.285 99.156 39.168 98.996 39.031 98.867 cv
38.891 98.742 38.73 98.648 38.559 98.59 cv
38.379 98.535 38.184 98.508 37.969 98.504 cv
37.578 98.508 37.262 98.598 37.023 98.781 cv
36.777 98.965 36.586 99.219 36.449 99.535 cv
36.309 99.855 36.215 100.227 36.164 100.656 cv
36.113 101.086 36.09 101.551 36.09 102.043 cv
36.09 102.707 36.121 103.27 36.191 103.73 cv
36.258 104.199 36.367 104.578 36.52 104.867 cv
36.664 105.164 36.855 105.375 37.086 105.504 cv
37.316 105.641 37.598 105.707 37.93 105.703 cv
38.184 105.707 38.406 105.668 38.602 105.582 cv
38.793 105.504 38.961 105.383 39.102 105.227 cv
39.242 105.074 39.355 104.891 39.449 104.676 cv
39.535 104.461 39.609 104.223 39.668 103.961 cv
39.719 103.703 39.758 103.422 39.781 103.117 cv
39.801 102.812 39.809 102.496 39.813 102.164 cv
cp
f
27.301 67.148 mo
41.489 67.148 li
41.489 84.238 li
27.301 84.238 li
cp
0 0 0 0 cmyk
ef
33.574 77.965 mo
33.57 78.375 33.5 78.742 33.359 79.066 cv
33.215 79.395 33.012 79.676 32.75 79.906 cv
32.484 80.141 32.156 80.316 31.77 80.441 cv
31.379 80.566 30.941 80.629 30.457 80.629 cv
30.152 80.629 29.875 80.602 29.621 80.555 cv
29.359 80.508 29.129 80.457 28.934 80.387 cv
28.73 80.324 28.566 80.254 28.434 80.184 cv
28.301 80.113 28.215 80.062 28.184 80.027 cv
28.145 80 28.121 79.969 28.105 79.934 cv
28.086 79.902 28.066 79.863 28.055 79.816 cv
28.039 79.773 28.031 79.719 28.023 79.648 cv
28.016 79.586 28.012 79.504 28.016 79.402 cv
28.012 79.242 28.027 79.129 28.063 79.062 cv
28.094 79 28.141 78.965 28.203 78.965 cv
28.246 78.965 28.328 79.004 28.453 79.074 cv
28.574 79.152 28.734 79.23 28.93 79.312 cv
29.121 79.398 29.348 79.477 29.613 79.547 cv
29.871 79.621 30.164 79.656 30.484 79.656 cv
30.793 79.656 31.063 79.617 31.301 79.539 cv
31.531 79.461 31.73 79.352 31.891 79.211 cv
32.047 79.07 32.164 78.902 32.246 78.707 cv
32.324 78.512 32.363 78.301 32.367 78.074 cv
32.363 77.824 32.313 77.598 32.215 77.395 cv
32.109 77.195 31.961 77.023 31.77 76.875 cv
31.57 76.73 31.332 76.617 31.047 76.539 cv
30.762 76.461 30.438 76.422 30.074 76.422 cv
29.203 76.422 li
29.16 76.422 29.125 76.414 29.09 76.398 cv
29.055 76.383 29.023 76.355 29 76.316 cv
28.973 76.281 28.953 76.234 28.938 76.176 cv
28.922 76.117 28.914 76.039 28.914 75.941 cv
28.914 75.855 28.918 75.785 28.934 75.727 cv
28.941 75.672 28.961 75.625 28.992 75.59 cv
29.016 75.555 29.047 75.531 29.078 75.512 cv
29.109 75.5 29.145 75.492 29.188 75.488 cv
29.961 75.488 li
30.262 75.492 30.531 75.453 30.773 75.371 cv
31.008 75.297 31.211 75.184 31.383 75.035 cv
31.547 74.891 31.676 74.715 31.766 74.512 cv
31.855 74.309 31.902 74.082 31.902 73.828 cv
31.902 73.648 31.871 73.473 31.813 73.305 cv
31.75 73.141 31.66 72.996 31.543 72.871 cv
31.422 72.746 31.27 72.648 31.09 72.578 cv
30.902 72.508 30.691 72.473 30.449 72.473 cv
30.184 72.473 29.938 72.516 29.719 72.594 cv
29.492 72.676 29.297 72.762 29.125 72.852 cv
28.949 72.945 28.805 73.031 28.691 73.109 cv
28.578 73.191 28.496 73.23 28.453 73.227 cv
28.418 73.23 28.391 73.223 28.367 73.211 cv
28.34 73.199 28.32 73.176 28.305 73.141 cv
28.289 73.109 28.277 73.062 28.27 72.996 cv
28.262 72.937 28.258 72.855 28.262 72.754 cv
28.258 72.687 28.258 72.629 28.266 72.574 cv
28.266 72.523 28.277 72.477 28.293 72.434 cv
28.309 72.398 28.324 72.363 28.344 72.328 cv
28.359 72.301 28.391 72.262 28.434 72.215 cv
28.477 72.172 28.563 72.109 28.699 72.027 cv
28.828 71.945 28.992 71.867 29.188 71.785 cv
29.379 71.707 29.602 71.637 29.859 71.582 cv
30.109 71.527 30.383 71.5 30.68 71.5 cv
31.086 71.5 31.449 71.555 31.762 71.656 cv
32.074 71.766 32.332 71.914 32.543 72.102 cv
32.746 72.297 32.902 72.527 33.008 72.793 cv
33.109 73.062 33.16 73.355 33.164 73.68 cv
33.16 73.961 33.125 74.223 33.055 74.457 cv
32.98 74.699 32.871 74.91 32.73 75.094 cv
32.586 75.281 32.414 75.437 32.211 75.566 cv
32.004 75.699 31.766 75.793 31.496 75.84 cv
31.496 75.852 li
31.801 75.887 32.082 75.961 32.336 76.082 cv
32.59 76.203 32.809 76.355 32.992 76.539 cv
33.172 76.723 33.313 76.937 33.418 77.18 cv
33.52 77.426 33.57 77.687 33.574 77.965 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.727 79.992 mo
40.723 80.078 40.719 80.152 40.707 80.215 cv
40.695 80.281 40.68 80.336 40.66 80.375 cv
40.637 80.422 40.609 80.453 40.578 80.469 cv
40.543 80.492 40.504 80.5 40.465 80.5 cv
35.563 80.5 li
35.5 80.5 35.441 80.492 35.395 80.477 cv
35.344 80.461 35.305 80.437 35.27 80.398 cv
35.234 80.367 35.207 80.312 35.195 80.242 cv
35.176 80.172 35.168 80.086 35.172 79.984 cv
35.168 79.895 35.172 79.816 35.18 79.746 cv
35.184 79.68 35.199 79.621 35.227 79.566 cv
35.25 79.516 35.281 79.461 35.316 79.406 cv
35.352 79.355 35.395 79.301 35.453 79.238 cv
37.227 77.414 li
37.637 76.996 37.965 76.621 38.215 76.285 cv
38.461 75.957 38.652 75.652 38.785 75.375 cv
38.918 75.102 39.004 74.852 39.051 74.625 cv
39.09 74.402 39.113 74.191 39.113 73.996 cv
39.113 73.801 39.078 73.617 39.012 73.437 cv
38.945 73.266 38.852 73.109 38.727 72.973 cv
38.602 72.844 38.445 72.738 38.258 72.656 cv
38.07 72.582 37.852 72.543 37.605 72.539 cv
37.316 72.543 37.059 72.582 36.832 72.656 cv
36.602 72.738 36.402 72.824 36.23 72.91 cv
36.059 73.004 35.914 73.086 35.797 73.164 cv
35.68 73.242 35.594 73.281 35.543 73.281 cv
35.508 73.281 35.477 73.273 35.453 73.254 cv
35.422 73.238 35.402 73.207 35.387 73.164 cv
35.371 73.125 35.355 73.07 35.348 73 cv
35.336 72.934 35.332 72.852 35.336 72.754 cv
35.332 72.687 35.336 72.629 35.344 72.578 cv
35.348 72.527 35.355 72.484 35.367 72.445 cv
35.375 72.41 35.391 72.375 35.41 72.344 cv
35.43 72.312 35.465 72.273 35.523 72.223 cv
35.574 72.176 35.668 72.109 35.805 72.027 cv
35.938 71.945 36.109 71.867 36.313 71.785 cv
36.516 71.707 36.738 71.637 36.984 71.582 cv
37.227 71.527 37.484 71.5 37.758 71.5 cv
38.184 71.5 38.559 71.562 38.883 71.684 cv
39.203 71.805 39.469 71.969 39.684 72.18 cv
39.895 72.391 40.055 72.637 40.16 72.91 cv
40.266 73.191 40.32 73.488 40.32 73.801 cv
40.32 74.09 40.293 74.371 40.242 74.648 cv
40.191 74.934 40.086 75.238 39.926 75.562 cv
39.762 75.891 39.527 76.254 39.223 76.652 cv
38.914 77.055 38.508 77.516 38.004 78.031 cv
36.598 79.5 li
40.457 79.5 li
40.488 79.504 40.523 79.516 40.563 79.531 cv
40.594 79.555 40.625 79.586 40.652 79.625 cv
40.676 79.668 40.695 79.719 40.707 79.777 cv
40.719 79.844 40.723 79.914 40.727 79.992 cv
cp
f
27.301 41.109 mo
41.489 41.109 li
41.489 58.199 li
27.301 58.199 li
cp
0 0 0 0 cmyk
ef
33.574 51.926 mo
33.57 52.336 33.5 52.703 33.359 53.027 cv
33.215 53.355 33.012 53.637 32.75 53.867 cv
32.484 54.102 32.156 54.277 31.77 54.402 cv
31.379 54.527 30.941 54.59 30.457 54.59 cv
30.152 54.59 29.875 54.562 29.621 54.516 cv
29.359 54.469 29.129 54.418 28.934 54.348 cv
28.73 54.285 28.566 54.215 28.434 54.145 cv
28.301 54.074 28.215 54.023 28.184 53.988 cv
28.145 53.961 28.121 53.93 28.105 53.895 cv
28.086 53.863 28.066 53.824 28.055 53.777 cv
28.039 53.734 28.031 53.68 28.023 53.609 cv
28.016 53.547 28.012 53.465 28.016 53.363 cv
28.012 53.203 28.027 53.09 28.063 53.023 cv
28.094 52.961 28.141 52.926 28.203 52.926 cv
28.246 52.926 28.328 52.965 28.453 53.035 cv
28.574 53.113 28.734 53.191 28.93 53.273 cv
29.121 53.359 29.348 53.437 29.613 53.508 cv
29.871 53.582 30.164 53.617 30.484 53.617 cv
30.793 53.617 31.063 53.578 31.301 53.5 cv
31.531 53.422 31.73 53.312 31.891 53.172 cv
32.047 53.031 32.164 52.863 32.246 52.668 cv
32.324 52.473 32.363 52.262 32.367 52.035 cv
32.363 51.785 32.313 51.559 32.215 51.355 cv
32.109 51.156 31.961 50.984 31.77 50.836 cv
31.57 50.691 31.332 50.578 31.047 50.5 cv
30.762 50.422 30.438 50.383 30.074 50.383 cv
29.203 50.383 li
29.16 50.383 29.125 50.375 29.09 50.359 cv
29.055 50.344 29.023 50.316 29 50.277 cv
28.973 50.242 28.953 50.195 28.938 50.137 cv
28.922 50.078 28.914 50 28.914 49.902 cv
28.914 49.816 28.918 49.746 28.934 49.687 cv
28.941 49.633 28.961 49.586 28.992 49.551 cv
29.016 49.516 29.047 49.492 29.078 49.473 cv
29.109 49.461 29.145 49.453 29.188 49.449 cv
29.961 49.449 li
30.262 49.453 30.531 49.414 30.773 49.332 cv
31.008 49.258 31.211 49.145 31.383 48.996 cv
31.547 48.852 31.676 48.676 31.766 48.473 cv
31.855 48.27 31.902 48.043 31.902 47.789 cv
31.902 47.609 31.871 47.434 31.813 47.266 cv
31.75 47.102 31.66 46.957 31.543 46.832 cv
31.422 46.707 31.27 46.609 31.09 46.539 cv
30.902 46.469 30.691 46.434 30.449 46.434 cv
30.184 46.434 29.938 46.477 29.719 46.555 cv
29.492 46.637 29.297 46.723 29.125 46.812 cv
28.949 46.906 28.805 46.992 28.691 47.07 cv
28.578 47.152 28.496 47.191 28.453 47.187 cv
28.418 47.191 28.391 47.184 28.367 47.172 cv
28.34 47.16 28.32 47.137 28.305 47.102 cv
28.289 47.07 28.277 47.023 28.27 46.957 cv
28.262 46.898 28.258 46.816 28.262 46.715 cv
28.258 46.648 28.258 46.59 28.266 46.535 cv
28.266 46.484 28.277 46.437 28.293 46.395 cv
28.309 46.359 28.324 46.324 28.344 46.289 cv
28.359 46.262 28.391 46.223 28.434 46.176 cv
28.477 46.133 28.563 46.07 28.699 45.988 cv
28.828 45.906 28.992 45.828 29.188 45.746 cv
29.379 45.668 29.602 45.598 29.859 45.543 cv
30.109 45.488 30.383 45.461 30.68 45.461 cv
31.086 45.461 31.449 45.516 31.762 45.617 cv
32.074 45.727 32.332 45.875 32.543 46.062 cv
32.746 46.258 32.902 46.488 33.008 46.754 cv
33.109 47.023 33.16 47.316 33.164 47.641 cv
33.16 47.922 33.125 48.184 33.055 48.418 cv
32.98 48.66 32.871 48.871 32.73 49.055 cv
32.586 49.242 32.414 49.398 32.211 49.527 cv
32.004 49.66 31.766 49.754 31.496 49.801 cv
31.496 49.812 li
31.801 49.848 32.082 49.922 32.336 50.043 cv
32.59 50.164 32.809 50.316 32.992 50.5 cv
33.172 50.684 33.313 50.898 33.418 51.141 cv
33.52 51.387 33.57 51.648 33.574 51.926 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
41.102 51.937 mo
41.098 52.09 41.074 52.211 41.031 52.297 cv
40.984 52.387 40.922 52.43 40.84 52.426 cv
39.84 52.426 li
39.84 54.289 li
39.84 54.328 39.828 54.359 39.813 54.383 cv
39.789 54.41 39.758 54.43 39.715 54.449 cv
39.664 54.465 39.602 54.477 39.531 54.488 cv
39.453 54.496 39.359 54.5 39.242 54.504 cv
39.125 54.5 39.027 54.496 38.957 54.488 cv
38.879 54.477 38.82 54.465 38.777 54.449 cv
38.73 54.43 38.699 54.41 38.684 54.383 cv
38.664 54.359 38.656 54.328 38.66 54.289 cv
38.66 52.426 li
35.031 52.426 li
34.973 52.43 34.93 52.422 34.895 52.406 cv
34.859 52.395 34.824 52.367 34.797 52.328 cv
34.766 52.293 34.746 52.242 34.734 52.172 cv
34.723 52.105 34.719 52.016 34.719 51.902 cv
34.719 51.82 34.719 51.742 34.727 51.672 cv
34.727 51.602 34.738 51.539 34.754 51.484 cv
34.766 51.43 34.781 51.375 34.809 51.32 cv
34.828 51.266 34.855 51.211 34.891 51.148 cv
38.051 45.762 li
38.07 45.727 38.105 45.695 38.152 45.668 cv
38.195 45.641 38.25 45.617 38.324 45.598 cv
38.391 45.582 38.477 45.57 38.582 45.559 cv
38.684 45.555 38.805 45.551 38.945 45.547 cv
39.094 45.551 39.23 45.555 39.348 45.566 cv
39.461 45.578 39.551 45.594 39.625 45.609 cv
39.691 45.629 39.746 45.652 39.785 45.684 cv
39.82 45.715 39.84 45.75 39.84 45.789 cv
39.84 51.453 li
40.84 51.453 li
40.914 51.457 40.977 51.496 41.027 51.574 cv
41.074 51.656 41.098 51.777 41.102 51.937 cv
cp
38.66 46.586 mo
38.648 46.586 li
35.797 51.453 li
38.66 51.453 li
cp
f
27.301 15.07 mo
41.489 15.07 li
41.489 32.16 li
27.301 32.16 li
cp
0 0 0 0 cmyk
ef
33.574 25.855 mo
33.57 26.266 33.5 26.633 33.359 26.957 cv
33.215 27.285 33.012 27.566 32.75 27.797 cv
32.484 28.031 32.156 28.207 31.77 28.332 cv
31.379 28.457 30.941 28.52 30.457 28.52 cv
30.152 28.52 29.875 28.492 29.621 28.445 cv
29.359 28.398 29.129 28.348 28.934 28.277 cv
28.73 28.215 28.566 28.145 28.434 28.074 cv
28.301 28.004 28.215 27.953 28.184 27.918 cv
28.145 27.891 28.121 27.859 28.105 27.824 cv
28.086 27.793 28.066 27.754 28.055 27.707 cv
28.039 27.664 28.031 27.609 28.023 27.539 cv
28.016 27.477 28.012 27.395 28.016 27.293 cv
28.012 27.133 28.027 27.02 28.063 26.953 cv
28.094 26.891 28.141 26.855 28.203 26.855 cv
28.246 26.855 28.328 26.895 28.453 26.965 cv
28.574 27.043 28.734 27.121 28.93 27.203 cv
29.121 27.289 29.348 27.367 29.613 27.437 cv
29.871 27.512 30.164 27.547 30.484 27.547 cv
30.793 27.547 31.063 27.508 31.301 27.43 cv
31.531 27.352 31.73 27.242 31.891 27.102 cv
32.047 26.961 32.164 26.793 32.246 26.598 cv
32.324 26.402 32.363 26.191 32.367 25.965 cv
32.363 25.715 32.313 25.488 32.215 25.285 cv
32.109 25.086 31.961 24.914 31.77 24.766 cv
31.57 24.621 31.332 24.508 31.047 24.43 cv
30.762 24.352 30.438 24.312 30.074 24.312 cv
29.203 24.312 li
29.16 24.312 29.125 24.305 29.09 24.289 cv
29.055 24.273 29.023 24.246 29 24.207 cv
28.973 24.172 28.953 24.125 28.938 24.066 cv
28.922 24.008 28.914 23.93 28.914 23.832 cv
28.914 23.746 28.918 23.676 28.934 23.617 cv
28.941 23.562 28.961 23.516 28.992 23.48 cv
29.016 23.445 29.047 23.422 29.078 23.402 cv
29.109 23.391 29.145 23.383 29.188 23.379 cv
29.961 23.379 li
30.262 23.383 30.531 23.344 30.773 23.262 cv
31.008 23.187 31.211 23.074 31.383 22.926 cv
31.547 22.781 31.676 22.605 31.766 22.402 cv
31.855 22.199 31.902 21.973 31.902 21.719 cv
31.902 21.539 31.871 21.363 31.813 21.195 cv
31.75 21.031 31.66 20.887 31.543 20.762 cv
31.422 20.637 31.27 20.539 31.09 20.469 cv
30.902 20.398 30.691 20.363 30.449 20.363 cv
30.184 20.363 29.938 20.406 29.719 20.484 cv
29.492 20.566 29.297 20.652 29.125 20.742 cv
28.949 20.836 28.805 20.922 28.691 21 cv
28.578 21.082 28.496 21.121 28.453 21.117 cv
28.418 21.121 28.391 21.113 28.367 21.102 cv
28.34 21.09 28.32 21.066 28.305 21.031 cv
28.289 21 28.277 20.953 28.27 20.887 cv
28.262 20.828 28.258 20.746 28.262 20.645 cv
28.258 20.578 28.258 20.52 28.266 20.465 cv
28.266 20.414 28.277 20.367 28.293 20.324 cv
28.309 20.289 28.324 20.254 28.344 20.219 cv
28.359 20.191 28.391 20.152 28.434 20.105 cv
28.477 20.062 28.563 20 28.699 19.918 cv
28.828 19.836 28.992 19.758 29.188 19.676 cv
29.379 19.598 29.602 19.527 29.859 19.473 cv
30.109 19.418 30.383 19.391 30.68 19.391 cv
31.086 19.391 31.449 19.445 31.762 19.547 cv
32.074 19.656 32.332 19.805 32.543 19.992 cv
32.746 20.187 32.902 20.418 33.008 20.684 cv
33.109 20.953 33.16 21.246 33.164 21.57 cv
33.16 21.852 33.125 22.113 33.055 22.348 cv
32.98 22.59 32.871 22.801 32.73 22.984 cv
32.586 23.172 32.414 23.328 32.211 23.457 cv
32.004 23.59 31.766 23.684 31.496 23.73 cv
31.496 23.742 li
31.801 23.777 32.082 23.852 32.336 23.973 cv
32.59 24.094 32.809 24.246 32.992 24.43 cv
33.172 24.613 33.313 24.828 33.418 25.07 cv
33.52 25.316 33.57 25.578 33.574 25.855 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
40.953 25.52 mo
40.953 25.91 40.891 26.289 40.773 26.648 cv
40.648 27.016 40.465 27.332 40.223 27.605 cv
39.973 27.883 39.66 28.105 39.285 28.27 cv
38.902 28.437 38.457 28.52 37.941 28.52 cv
37.57 28.52 37.242 28.477 36.961 28.383 cv
36.676 28.297 36.43 28.164 36.219 27.992 cv
36.008 27.824 35.832 27.617 35.695 27.371 cv
35.555 27.125 35.441 26.844 35.359 26.527 cv
35.273 26.215 35.215 25.871 35.18 25.492 cv
35.141 25.121 35.121 24.719 35.125 24.285 cv
35.121 23.906 35.141 23.523 35.184 23.133 cv
35.223 22.75 35.297 22.375 35.402 22.008 cv
35.508 21.648 35.652 21.309 35.832 20.992 cv
36.012 20.676 36.238 20.398 36.512 20.164 cv
36.785 19.93 37.109 19.742 37.488 19.602 cv
37.867 19.465 38.309 19.398 38.813 19.395 cv
38.98 19.398 39.152 19.406 39.324 19.426 cv
39.496 19.449 39.656 19.48 39.805 19.512 cv
39.953 19.551 40.074 19.586 40.176 19.625 cv
40.273 19.664 40.34 19.699 40.375 19.723 cv
40.402 19.75 40.426 19.777 40.445 19.805 cv
40.461 19.836 40.477 19.867 40.484 19.902 cv
40.492 19.937 40.496 19.977 40.504 20.02 cv
40.504 20.062 40.508 20.117 40.512 20.18 cv
40.508 20.266 40.508 20.336 40.508 20.391 cv
40.504 20.453 40.492 20.5 40.48 20.535 cv
40.461 20.574 40.441 20.602 40.418 20.617 cv
40.391 20.637 40.359 20.645 40.32 20.645 cv
40.27 20.645 40.199 20.629 40.113 20.598 cv
40.023 20.566 39.918 20.531 39.797 20.488 cv
39.672 20.453 39.523 20.418 39.348 20.383 cv
39.172 20.355 38.969 20.34 38.738 20.336 cv
38.309 20.34 37.941 20.426 37.637 20.598 cv
37.332 20.77 37.082 21.004 36.887 21.297 cv
36.691 21.59 36.547 21.93 36.457 22.312 cv
36.359 22.703 36.305 23.105 36.297 23.523 cv
36.414 23.457 36.551 23.391 36.699 23.32 cv
36.848 23.254 37.008 23.191 37.184 23.133 cv
37.359 23.082 37.547 23.035 37.742 23 cv
37.938 22.969 38.148 22.953 38.375 22.949 cv
38.852 22.953 39.254 23.02 39.586 23.145 cv
39.914 23.277 40.18 23.457 40.387 23.687 cv
40.586 23.918 40.73 24.187 40.82 24.5 cv
40.906 24.812 40.953 25.152 40.953 25.52 cv
cp
39.758 25.629 mo
39.758 25.367 39.73 25.125 39.68 24.906 cv
39.625 24.691 39.535 24.508 39.414 24.352 cv
39.289 24.203 39.125 24.086 38.922 24.004 cv
38.711 23.922 38.457 23.879 38.16 23.879 cv
37.988 23.879 37.82 23.895 37.652 23.926 cv
37.48 23.957 37.316 24 37.16 24.047 cv
37 24.102 36.852 24.164 36.711 24.234 cv
36.566 24.309 36.434 24.383 36.316 24.461 cv
36.313 25.055 36.352 25.551 36.43 25.945 cv
36.504 26.344 36.613 26.66 36.758 26.898 cv
36.902 27.141 37.082 27.312 37.297 27.414 cv
37.512 27.52 37.762 27.57 38.051 27.566 cv
38.34 27.57 38.594 27.516 38.809 27.402 cv
39.023 27.297 39.199 27.148 39.344 26.961 cv
39.484 26.777 39.59 26.57 39.656 26.34 cv
39.723 26.109 39.758 25.875 39.758 25.629 cv
cp
f
57.305 514.934 mo
57.301 515.023 57.293 515.094 57.281 515.152 cv
57.266 515.215 57.246 515.266 57.227 515.297 cv
57.203 515.336 57.18 515.359 57.148 515.375 cv
57.117 515.391 57.086 515.398 57.059 515.398 cv
52.422 515.398 li
52.387 515.398 52.359 515.391 52.332 515.375 cv
52.305 515.359 52.277 515.336 52.254 515.297 cv
52.227 515.266 52.207 515.215 52.195 515.152 cv
52.18 515.094 52.172 515.023 52.176 514.934 cv
52.172 514.855 52.18 514.781 52.195 514.719 cv
52.207 514.66 52.223 514.613 52.246 514.574 cv
52.262 514.539 52.289 514.508 52.32 514.484 cv
52.352 514.465 52.383 514.457 52.422 514.453 cv
54.273 514.453 li
54.273 507.707 li
52.559 508.727 li
52.469 508.777 52.398 508.805 52.352 508.812 cv
52.297 508.82 52.254 508.812 52.223 508.781 cv
52.188 508.754 52.168 508.703 52.156 508.633 cv
52.145 508.566 52.137 508.48 52.141 508.371 cv
52.137 508.297 52.141 508.23 52.152 508.172 cv
52.156 508.121 52.168 508.074 52.184 508.035 cv
52.195 508 52.215 507.969 52.238 507.941 cv
52.262 507.914 52.293 507.887 52.34 507.859 cv
54.383 506.547 li
54.398 506.535 54.418 506.523 54.449 506.516 cv
54.473 506.508 54.508 506.5 54.555 506.488 cv
54.594 506.48 54.645 506.473 54.699 506.469 cv
54.754 506.469 54.82 506.469 54.906 506.465 cv
55.012 506.469 55.105 506.473 55.18 506.48 cv
55.25 506.488 55.305 506.504 55.352 506.52 cv
55.391 506.539 55.418 506.559 55.434 506.582 cv
55.441 506.609 55.449 506.633 55.453 506.656 cv
55.453 514.453 li
57.059 514.453 li
57.094 514.457 57.129 514.465 57.16 514.484 cv
57.191 514.508 57.215 514.539 57.238 514.574 cv
57.254 514.613 57.27 514.66 57.285 514.719 cv
57.293 514.781 57.301 514.855 57.305 514.934 cv
cp
f
126.957 514.891 mo
126.953 514.977 126.949 515.051 126.938 515.113 cv
126.926 515.18 126.91 515.234 126.891 515.273 cv
126.867 515.32 126.84 515.352 126.809 515.367 cv
126.773 515.391 126.734 515.398 126.695 515.398 cv
121.793 515.398 li
121.73 515.398 121.672 515.391 121.625 515.375 cv
121.574 515.359 121.535 515.336 121.5 515.297 cv
121.465 515.266 121.438 515.211 121.426 515.141 cv
121.406 515.07 121.398 514.984 121.402 514.883 cv
121.398 514.793 121.402 514.715 121.41 514.645 cv
121.414 514.578 121.43 514.52 121.457 514.465 cv
121.48 514.414 121.512 514.359 121.547 514.305 cv
121.582 514.254 121.625 514.199 121.684 514.137 cv
123.457 512.312 li
123.867 511.895 124.195 511.52 124.445 511.184 cv
124.691 510.855 124.883 510.551 125.016 510.273 cv
125.148 510 125.234 509.75 125.281 509.523 cv
125.32 509.301 125.344 509.09 125.344 508.895 cv
125.344 508.699 125.309 508.516 125.242 508.336 cv
125.176 508.164 125.082 508.008 124.957 507.871 cv
124.832 507.742 124.676 507.637 124.488 507.555 cv
124.301 507.48 124.082 507.441 123.836 507.437 cv
123.547 507.441 123.289 507.48 123.063 507.555 cv
122.832 507.637 122.633 507.723 122.461 507.809 cv
122.289 507.902 122.145 507.984 122.027 508.062 cv
121.91 508.141 121.824 508.18 121.773 508.18 cv
121.738 508.18 121.707 508.172 121.684 508.152 cv
121.652 508.137 121.633 508.105 121.617 508.062 cv
121.602 508.023 121.586 507.969 121.578 507.898 cv
121.566 507.832 121.563 507.75 121.566 507.652 cv
121.563 507.586 121.566 507.527 121.574 507.477 cv
121.578 507.426 121.586 507.383 121.598 507.344 cv
121.605 507.309 121.621 507.273 121.641 507.242 cv
121.66 507.211 121.695 507.172 121.754 507.121 cv
121.805 507.074 121.898 507.008 122.035 506.926 cv
122.168 506.844 122.34 506.766 122.543 506.684 cv
122.746 506.605 122.969 506.535 123.215 506.48 cv
123.457 506.426 123.715 506.398 123.988 506.398 cv
124.414 506.398 124.789 506.461 125.113 506.582 cv
125.434 506.703 125.699 506.867 125.914 507.078 cv
126.125 507.289 126.285 507.535 126.391 507.809 cv
126.496 508.09 126.551 508.387 126.551 508.699 cv
126.551 508.988 126.523 509.27 126.473 509.547 cv
126.422 509.832 126.316 510.137 126.156 510.461 cv
125.992 510.789 125.758 511.152 125.453 511.551 cv
125.145 511.953 124.738 512.414 124.234 512.93 cv
122.828 514.398 li
126.688 514.398 li
126.719 514.402 126.754 514.414 126.793 514.43 cv
126.824 514.453 126.855 514.484 126.883 514.523 cv
126.906 514.566 126.926 514.617 126.938 514.676 cv
126.949 514.742 126.953 514.812 126.957 514.891 cv
cp
f
197.012 512.875 mo
197.008 513.027 196.984 513.148 196.941 513.234 cv
196.895 513.324 196.832 513.367 196.75 513.363 cv
195.75 513.363 li
195.75 515.227 li
195.75 515.266 195.738 515.297 195.723 515.32 cv
195.699 515.348 195.668 515.367 195.625 515.387 cv
195.574 515.402 195.512 515.414 195.441 515.426 cv
195.363 515.434 195.27 515.437 195.152 515.441 cv
195.035 515.437 194.938 515.434 194.867 515.426 cv
194.789 515.414 194.73 515.402 194.688 515.387 cv
194.641 515.367 194.609 515.348 194.594 515.32 cv
194.574 515.297 194.566 515.266 194.57 515.227 cv
194.57 513.363 li
190.941 513.363 li
190.883 513.367 190.84 513.359 190.805 513.344 cv
190.77 513.332 190.734 513.305 190.707 513.266 cv
190.676 513.23 190.656 513.18 190.645 513.109 cv
190.633 513.043 190.629 512.953 190.629 512.84 cv
190.629 512.758 190.629 512.68 190.637 512.609 cv
190.637 512.539 190.648 512.477 190.664 512.422 cv
190.676 512.367 190.691 512.312 190.719 512.258 cv
190.738 512.203 190.766 512.148 190.801 512.086 cv
193.961 506.699 li
193.98 506.664 194.016 506.633 194.063 506.605 cv
194.105 506.578 194.16 506.555 194.234 506.535 cv
194.301 506.52 194.387 506.508 194.492 506.496 cv
194.594 506.492 194.715 506.488 194.855 506.484 cv
195.004 506.488 195.141 506.492 195.258 506.504 cv
195.371 506.516 195.461 506.531 195.535 506.547 cv
195.602 506.566 195.656 506.59 195.695 506.621 cv
195.73 506.652 195.75 506.687 195.75 506.727 cv
195.75 512.391 li
196.75 512.391 li
196.824 512.395 196.887 512.434 196.938 512.512 cv
196.984 512.594 197.008 512.715 197.012 512.875 cv
cp
194.57 507.523 mo
194.559 507.523 li
191.707 512.391 li
194.57 512.391 li
cp
f
266.531 512.527 mo
266.531 512.918 266.469 513.297 266.352 513.656 cv
266.227 514.023 266.043 514.34 265.801 514.613 cv
265.551 514.891 265.238 515.113 264.863 515.277 cv
264.48 515.445 264.035 515.527 263.52 515.527 cv
263.148 515.527 262.82 515.484 262.539 515.391 cv
262.254 515.305 262.008 515.172 261.797 515 cv
261.586 514.832 261.41 514.625 261.273 514.379 cv
261.133 514.133 261.02 513.852 260.938 513.535 cv
260.852 513.223 260.793 512.879 260.758 512.5 cv
260.719 512.129 260.699 511.727 260.703 511.293 cv
260.699 510.914 260.719 510.531 260.762 510.141 cv
260.801 509.758 260.875 509.383 260.98 509.016 cv
261.086 508.656 261.23 508.316 261.41 508 cv
261.59 507.684 261.816 507.406 262.09 507.172 cv
262.363 506.937 262.688 506.75 263.066 506.609 cv
263.445 506.473 263.887 506.406 264.391 506.402 cv
264.559 506.406 264.73 506.414 264.902 506.434 cv
265.074 506.457 265.234 506.488 265.383 506.52 cv
265.531 506.559 265.652 506.594 265.754 506.633 cv
265.852 506.672 265.918 506.707 265.953 506.73 cv
265.98 506.758 266.004 506.785 266.023 506.812 cv
266.039 506.844 266.055 506.875 266.063 506.91 cv
266.07 506.945 266.074 506.984 266.082 507.027 cv
266.082 507.07 266.086 507.125 266.09 507.187 cv
266.086 507.273 266.086 507.344 266.086 507.398 cv
266.082 507.461 266.07 507.508 266.059 507.543 cv
266.039 507.582 266.02 507.609 265.996 507.625 cv
265.969 507.645 265.938 507.652 265.898 507.652 cv
265.848 507.652 265.777 507.637 265.691 507.605 cv
265.602 507.574 265.496 507.539 265.375 507.496 cv
265.25 507.461 265.102 507.426 264.926 507.391 cv
264.75 507.363 264.547 507.348 264.316 507.344 cv
263.887 507.348 263.52 507.434 263.215 507.605 cv
262.91 507.777 262.66 508.012 262.465 508.305 cv
262.27 508.598 262.125 508.937 262.035 509.32 cv
261.938 509.711 261.883 510.113 261.875 510.531 cv
261.992 510.465 262.129 510.398 262.277 510.328 cv
262.426 510.262 262.586 510.199 262.762 510.141 cv
262.938 510.09 263.125 510.043 263.32 510.008 cv
263.516 509.977 263.727 509.961 263.953 509.957 cv
264.43 509.961 264.832 510.027 265.164 510.152 cv
265.492 510.285 265.758 510.465 265.965 510.695 cv
266.164 510.926 266.309 511.195 266.398 511.508 cv
266.484 511.82 266.531 512.16 266.531 512.527 cv
cp
265.336 512.637 mo
265.336 512.375 265.309 512.133 265.258 511.914 cv
265.203 511.699 265.113 511.516 264.992 511.359 cv
264.867 511.211 264.703 511.094 264.5 511.012 cv
264.289 510.93 264.035 510.887 263.738 510.887 cv
263.566 510.887 263.398 510.902 263.23 510.934 cv
263.059 510.965 262.895 511.008 262.738 511.055 cv
262.578 511.109 262.43 511.172 262.289 511.242 cv
262.145 511.316 262.012 511.391 261.895 511.469 cv
261.891 512.062 261.93 512.559 262.008 512.953 cv
262.082 513.352 262.191 513.668 262.336 513.906 cv
262.48 514.148 262.66 514.32 262.875 514.422 cv
263.09 514.527 263.34 514.578 263.629 514.574 cv
263.918 514.578 264.172 514.523 264.387 514.41 cv
264.602 514.305 264.777 514.156 264.922 513.969 cv
265.063 513.785 265.168 513.578 265.234 513.348 cv
265.301 513.117 265.336 512.883 265.336 512.637 cv
cp
f
336.199 513.121 mo
336.199 513.508 336.129 513.852 335.992 514.148 cv
335.855 514.453 335.66 514.703 335.402 514.906 cv
335.145 515.113 334.824 515.27 334.445 515.371 cv
334.063 515.477 333.629 515.527 333.145 515.527 cv
332.684 515.527 332.273 515.48 331.914 515.387 cv
331.551 515.293 331.246 515.152 330.996 514.961 cv
330.746 514.777 330.555 514.547 330.422 514.27 cv
330.289 513.996 330.223 513.684 330.223 513.328 cv
330.223 513.055 330.266 512.797 330.359 512.562 cv
330.445 512.328 330.578 512.113 330.754 511.918 cv
330.922 511.723 331.133 511.539 331.387 511.363 cv
331.637 511.195 331.922 511.031 332.238 510.875 cv
331.965 510.734 331.723 510.586 331.512 510.426 cv
331.301 510.27 331.121 510.098 330.977 509.91 cv
330.828 509.727 330.719 509.531 330.645 509.32 cv
330.566 509.113 330.527 508.883 330.531 508.633 cv
330.527 508.324 330.582 508.031 330.699 507.758 cv
330.809 507.488 330.98 507.254 331.207 507.051 cv
331.434 506.852 331.719 506.691 332.07 506.574 cv
332.414 506.457 332.824 506.398 333.293 506.398 cv
333.738 506.398 334.125 506.453 334.453 506.559 cv
334.781 506.668 335.051 506.812 335.262 506.996 cv
335.473 507.184 335.629 507.402 335.734 507.652 cv
335.832 507.902 335.883 508.172 335.887 508.461 cv
335.883 508.695 335.844 508.922 335.773 509.133 cv
335.695 509.352 335.586 509.555 335.438 509.742 cv
335.289 509.937 335.109 510.117 334.898 510.281 cv
334.688 510.453 334.445 510.609 334.172 510.75 cv
334.492 510.914 334.777 511.078 335.035 511.246 cv
335.285 511.414 335.5 511.594 335.676 511.789 cv
335.844 511.984 335.973 512.191 336.066 512.406 cv
336.152 512.625 336.199 512.863 336.199 513.121 cv
cp
334.719 508.57 mo
334.715 508.383 334.684 508.207 334.617 508.051 cv
334.551 507.895 334.453 507.762 334.328 507.652 cv
334.199 507.543 334.039 507.461 333.852 507.402 cv
333.656 507.348 333.441 507.32 333.203 507.316 cv
332.707 507.32 332.332 507.43 332.082 507.652 cv
331.824 507.879 331.699 508.187 331.703 508.57 cv
331.699 508.75 331.73 508.914 331.793 509.066 cv
331.855 509.223 331.949 509.367 332.082 509.504 cv
332.207 509.641 332.371 509.773 332.574 509.902 cv
332.77 510.035 333.008 510.172 333.285 510.312 cv
333.746 510.078 334.102 509.816 334.348 509.523 cv
334.594 509.238 334.715 508.922 334.719 508.57 cv
cp
335.008 513.246 mo
335.004 513.039 334.965 512.848 334.891 512.676 cv
334.809 512.508 334.691 512.348 334.535 512.195 cv
334.379 512.047 334.18 511.902 333.945 511.762 cv
333.707 511.625 333.438 511.48 333.129 511.328 cv
332.84 511.473 332.586 511.613 332.371 511.754 cv
332.152 511.895 331.973 512.043 331.836 512.191 cv
331.695 512.348 331.59 512.504 331.52 512.668 cv
331.445 512.836 331.41 513.02 331.414 513.219 cv
331.41 513.664 331.563 514.008 331.871 514.246 cv
332.172 514.492 332.625 514.613 333.23 514.609 cv
333.813 514.613 334.258 514.492 334.559 514.242 cv
334.855 514 335.004 513.668 335.008 513.246 cv
cp
f
402.137 514.934 mo
402.133 515.023 402.125 515.094 402.113 515.152 cv
402.098 515.215 402.078 515.266 402.059 515.297 cv
402.035 515.336 402.012 515.359 401.98 515.375 cv
401.949 515.391 401.918 515.398 401.891 515.398 cv
397.254 515.398 li
397.219 515.398 397.191 515.391 397.164 515.375 cv
397.137 515.359 397.109 515.336 397.086 515.297 cv
397.059 515.266 397.039 515.215 397.027 515.152 cv
397.012 515.094 397.004 515.023 397.008 514.934 cv
397.004 514.855 397.012 514.781 397.027 514.719 cv
397.039 514.66 397.055 514.613 397.078 514.574 cv
397.094 514.539 397.121 514.508 397.152 514.484 cv
397.184 514.465 397.215 514.457 397.254 514.453 cv
399.105 514.453 li
399.105 507.707 li
397.391 508.727 li
397.301 508.777 397.23 508.805 397.184 508.812 cv
397.129 508.82 397.086 508.812 397.055 508.781 cv
397.02 508.754 397 508.703 396.988 508.633 cv
396.977 508.566 396.969 508.48 396.973 508.371 cv
396.969 508.297 396.973 508.23 396.984 508.172 cv
396.988 508.121 397 508.074 397.016 508.035 cv
397.027 508 397.047 507.969 397.07 507.941 cv
397.094 507.914 397.125 507.887 397.172 507.859 cv
399.215 506.547 li
399.23 506.535 399.25 506.523 399.281 506.516 cv
399.305 506.508 399.34 506.5 399.387 506.488 cv
399.426 506.48 399.477 506.473 399.531 506.469 cv
399.586 506.469 399.652 506.469 399.738 506.465 cv
399.844 506.469 399.938 506.473 400.012 506.48 cv
400.082 506.488 400.137 506.504 400.184 506.52 cv
400.223 506.539 400.25 506.559 400.266 506.582 cv
400.273 506.609 400.281 506.633 400.285 506.656 cv
400.285 514.453 li
401.891 514.453 li
401.926 514.457 401.961 514.465 401.992 514.484 cv
402.023 514.508 402.047 514.539 402.07 514.574 cv
402.086 514.613 402.102 514.66 402.117 514.719 cv
402.125 514.781 402.133 514.855 402.137 514.934 cv
cp
f
409.488 510.941 mo
409.484 511.625 409.434 512.246 409.328 512.809 cv
409.219 513.371 409.039 513.855 408.793 514.258 cv
408.539 514.664 408.211 514.977 407.813 515.195 cv
407.406 515.418 406.914 515.527 406.328 515.527 cv
405.77 515.527 405.297 515.43 404.918 515.23 cv
404.535 515.035 404.23 514.742 403.996 514.355 cv
403.762 513.969 403.594 513.496 403.5 512.93 cv
403.398 512.367 403.352 511.719 403.352 510.984 cv
403.352 510.312 403.406 509.691 403.516 509.125 cv
403.625 508.562 403.801 508.078 404.051 507.672 cv
404.293 507.27 404.617 506.957 405.023 506.73 cv
405.422 506.512 405.918 506.398 406.508 506.398 cv
407.066 506.398 407.539 506.5 407.922 506.695 cv
408.305 506.898 408.609 507.191 408.844 507.574 cv
409.074 507.965 409.242 508.437 409.34 509 cv
409.438 509.562 409.484 510.211 409.488 510.941 cv
cp
408.281 511.023 mo
408.277 510.582 408.262 510.184 408.234 509.832 cv
408.199 509.48 408.152 509.172 408.094 508.902 cv
408.027 508.633 407.949 508.402 407.852 508.207 cv
407.754 508.016 407.637 507.855 407.5 507.727 cv
407.359 507.602 407.199 507.508 407.027 507.449 cv
406.848 507.395 406.652 507.367 406.438 507.363 cv
406.047 507.367 405.73 507.457 405.492 507.641 cv
405.246 507.824 405.055 508.078 404.918 508.395 cv
404.777 508.715 404.684 509.086 404.633 509.516 cv
404.582 509.945 404.559 510.41 404.559 510.902 cv
404.559 511.566 404.59 512.129 404.66 512.59 cv
404.727 513.059 404.836 513.437 404.988 513.727 cv
405.133 514.023 405.324 514.234 405.555 514.363 cv
405.785 514.5 406.066 514.566 406.398 514.562 cv
406.652 514.566 406.875 514.527 407.07 514.441 cv
407.262 514.363 407.43 514.242 407.57 514.086 cv
407.711 513.934 407.824 513.75 407.918 513.535 cv
408.004 513.32 408.078 513.082 408.137 512.82 cv
408.188 512.562 408.227 512.281 408.25 511.977 cv
408.27 511.672 408.277 511.355 408.281 511.023 cv
cp
f
471.816 514.934 mo
471.813 515.023 471.805 515.094 471.793 515.152 cv
471.777 515.215 471.758 515.266 471.738 515.297 cv
471.715 515.336 471.691 515.359 471.66 515.375 cv
471.629 515.391 471.598 515.398 471.57 515.398 cv
466.934 515.398 li
466.898 515.398 466.871 515.391 466.844 515.375 cv
466.816 515.359 466.789 515.336 466.766 515.297 cv
466.738 515.266 466.719 515.215 466.707 515.152 cv
466.691 515.094 466.684 515.023 466.688 514.934 cv
466.684 514.855 466.691 514.781 466.707 514.719 cv
466.719 514.66 466.734 514.613 466.758 514.574 cv
466.773 514.539 466.801 514.508 466.832 514.484 cv
466.863 514.465 466.895 514.457 466.934 514.453 cv
468.785 514.453 li
468.785 507.707 li
467.07 508.727 li
466.98 508.777 466.91 508.805 466.863 508.812 cv
466.809 508.82 466.766 508.812 466.734 508.781 cv
466.699 508.754 466.68 508.703 466.668 508.633 cv
466.656 508.566 466.648 508.48 466.652 508.371 cv
466.648 508.297 466.652 508.23 466.664 508.172 cv
466.668 508.121 466.68 508.074 466.695 508.035 cv
466.707 508 466.727 507.969 466.75 507.941 cv
466.773 507.914 466.805 507.887 466.852 507.859 cv
468.895 506.547 li
468.91 506.535 468.93 506.523 468.961 506.516 cv
468.984 506.508 469.02 506.5 469.066 506.488 cv
469.105 506.48 469.156 506.473 469.211 506.469 cv
469.266 506.469 469.332 506.469 469.418 506.465 cv
469.523 506.469 469.617 506.473 469.691 506.48 cv
469.762 506.488 469.816 506.504 469.863 506.52 cv
469.902 506.539 469.93 506.559 469.945 506.582 cv
469.953 506.609 469.961 506.633 469.965 506.656 cv
469.965 514.453 li
471.57 514.453 li
471.605 514.457 471.641 514.465 471.672 514.484 cv
471.703 514.508 471.727 514.539 471.75 514.574 cv
471.766 514.613 471.781 514.66 471.797 514.719 cv
471.805 514.781 471.813 514.855 471.816 514.934 cv
cp
f
478.875 514.891 mo
478.871 514.977 478.867 515.051 478.855 515.113 cv
478.844 515.18 478.828 515.234 478.809 515.273 cv
478.785 515.32 478.758 515.352 478.727 515.367 cv
478.691 515.391 478.652 515.398 478.613 515.398 cv
473.711 515.398 li
473.648 515.398 473.59 515.391 473.543 515.375 cv
473.492 515.359 473.453 515.336 473.418 515.297 cv
473.383 515.266 473.355 515.211 473.344 515.141 cv
473.324 515.07 473.316 514.984 473.32 514.883 cv
473.316 514.793 473.32 514.715 473.328 514.645 cv
473.332 514.578 473.348 514.52 473.375 514.465 cv
473.398 514.414 473.43 514.359 473.465 514.305 cv
473.5 514.254 473.543 514.199 473.602 514.137 cv
475.375 512.312 li
475.785 511.895 476.113 511.52 476.363 511.184 cv
476.609 510.855 476.801 510.551 476.934 510.273 cv
477.066 510 477.152 509.75 477.199 509.523 cv
477.238 509.301 477.262 509.09 477.262 508.895 cv
477.262 508.699 477.227 508.516 477.16 508.336 cv
477.094 508.164 477 508.008 476.875 507.871 cv
476.75 507.742 476.594 507.637 476.406 507.555 cv
476.219 507.48 476 507.441 475.754 507.437 cv
475.465 507.441 475.207 507.48 474.98 507.555 cv
474.75 507.637 474.551 507.723 474.379 507.809 cv
474.207 507.902 474.063 507.984 473.945 508.062 cv
473.828 508.141 473.742 508.18 473.691 508.18 cv
473.656 508.18 473.625 508.172 473.602 508.152 cv
473.57 508.137 473.551 508.105 473.535 508.062 cv
473.52 508.023 473.504 507.969 473.496 507.898 cv
473.484 507.832 473.48 507.75 473.484 507.652 cv
473.48 507.586 473.484 507.527 473.492 507.477 cv
473.496 507.426 473.504 507.383 473.516 507.344 cv
473.523 507.309 473.539 507.273 473.559 507.242 cv
473.578 507.211 473.613 507.172 473.672 507.121 cv
473.723 507.074 473.816 507.008 473.953 506.926 cv
474.086 506.844 474.258 506.766 474.461 506.684 cv
474.664 506.605 474.887 506.535 475.133 506.48 cv
475.375 506.426 475.633 506.398 475.906 506.398 cv
476.332 506.398 476.707 506.461 477.031 506.582 cv
477.352 506.703 477.617 506.867 477.832 507.078 cv
478.043 507.289 478.203 507.535 478.309 507.809 cv
478.414 508.09 478.469 508.387 478.469 508.699 cv
478.469 508.988 478.441 509.27 478.391 509.547 cv
478.34 509.832 478.234 510.137 478.074 510.461 cv
477.91 510.789 477.676 511.152 477.371 511.551 cv
477.063 511.953 476.656 512.414 476.152 512.93 cv
474.746 514.398 li
478.605 514.398 li
478.637 514.402 478.672 514.414 478.711 514.43 cv
478.742 514.453 478.773 514.484 478.801 514.523 cv
478.824 514.566 478.844 514.617 478.855 514.676 cv
478.867 514.742 478.871 514.812 478.875 514.891 cv
cp
f
541.484 514.934 mo
541.48 515.023 541.473 515.094 541.461 515.152 cv
541.445 515.215 541.426 515.266 541.406 515.297 cv
541.383 515.336 541.359 515.359 541.328 515.375 cv
541.297 515.391 541.266 515.398 541.238 515.398 cv
536.602 515.398 li
536.566 515.398 536.539 515.391 536.512 515.375 cv
536.484 515.359 536.457 515.336 536.434 515.297 cv
536.406 515.266 536.387 515.215 536.375 515.152 cv
536.359 515.094 536.352 515.023 536.355 514.934 cv
536.352 514.855 536.359 514.781 536.375 514.719 cv
536.387 514.66 536.402 514.613 536.426 514.574 cv
536.441 514.539 536.469 514.508 536.5 514.484 cv
536.531 514.465 536.563 514.457 536.602 514.453 cv
538.453 514.453 li
538.453 507.707 li
536.738 508.727 li
536.648 508.777 536.578 508.805 536.531 508.812 cv
536.477 508.82 536.434 508.812 536.402 508.781 cv
536.367 508.754 536.348 508.703 536.336 508.633 cv
536.324 508.566 536.316 508.48 536.32 508.371 cv
536.316 508.297 536.32 508.23 536.332 508.172 cv
536.336 508.121 536.348 508.074 536.363 508.035 cv
536.375 508 536.395 507.969 536.418 507.941 cv
536.441 507.914 536.473 507.887 536.52 507.859 cv
538.563 506.547 li
538.578 506.535 538.598 506.523 538.629 506.516 cv
538.652 506.508 538.688 506.5 538.734 506.488 cv
538.773 506.48 538.824 506.473 538.879 506.469 cv
538.934 506.469 539 506.469 539.086 506.465 cv
539.191 506.469 539.285 506.473 539.359 506.48 cv
539.43 506.488 539.484 506.504 539.531 506.52 cv
539.57 506.539 539.598 506.559 539.613 506.582 cv
539.621 506.609 539.629 506.633 539.633 506.656 cv
539.633 514.453 li
541.238 514.453 li
541.273 514.457 541.309 514.465 541.34 514.484 cv
541.371 514.508 541.395 514.539 541.418 514.574 cv
541.434 514.613 541.449 514.66 541.465 514.719 cv
541.473 514.781 541.48 514.855 541.484 514.934 cv
cp
f
548.922 512.875 mo
548.918 513.027 548.895 513.148 548.852 513.234 cv
548.805 513.324 548.742 513.367 548.66 513.363 cv
547.66 513.363 li
547.66 515.227 li
547.66 515.266 547.648 515.297 547.633 515.32 cv
547.609 515.348 547.578 515.367 547.535 515.387 cv
547.484 515.402 547.422 515.414 547.352 515.426 cv
547.273 515.434 547.18 515.437 547.063 515.441 cv
546.945 515.437 546.848 515.434 546.777 515.426 cv
546.699 515.414 546.641 515.402 546.598 515.387 cv
546.551 515.367 546.52 515.348 546.504 515.32 cv
546.484 515.297 546.477 515.266 546.48 515.227 cv
546.48 513.363 li
542.852 513.363 li
542.793 513.367 542.75 513.359 542.715 513.344 cv
542.68 513.332 542.645 513.305 542.617 513.266 cv
542.586 513.23 542.566 513.18 542.555 513.109 cv
542.543 513.043 542.539 512.953 542.539 512.84 cv
542.539 512.758 542.539 512.68 542.547 512.609 cv
542.547 512.539 542.559 512.477 542.574 512.422 cv
542.586 512.367 542.602 512.312 542.629 512.258 cv
542.648 512.203 542.676 512.148 542.711 512.086 cv
545.871 506.699 li
545.891 506.664 545.926 506.633 545.973 506.605 cv
546.016 506.578 546.07 506.555 546.145 506.535 cv
546.211 506.52 546.297 506.508 546.402 506.496 cv
546.504 506.492 546.625 506.488 546.766 506.484 cv
546.914 506.488 547.051 506.492 547.168 506.504 cv
547.281 506.516 547.371 506.531 547.445 506.547 cv
547.512 506.566 547.566 506.59 547.605 506.621 cv
547.641 506.652 547.66 506.687 547.66 506.727 cv
547.66 512.391 li
548.66 512.391 li
548.734 512.395 548.797 512.434 548.848 512.512 cv
548.895 512.594 548.918 512.715 548.922 512.875 cv
cp
546.48 507.523 mo
546.469 507.523 li
543.617 512.391 li
546.48 512.391 li
cp
f
611.156 514.934 mo
611.152 515.023 611.145 515.094 611.133 515.152 cv
611.117 515.215 611.098 515.266 611.078 515.297 cv
611.055 515.336 611.031 515.359 611 515.375 cv
610.969 515.391 610.938 515.398 610.91 515.398 cv
606.273 515.398 li
606.238 515.398 606.211 515.391 606.184 515.375 cv
606.156 515.359 606.129 515.336 606.105 515.297 cv
606.078 515.266 606.059 515.215 606.047 515.152 cv
606.031 515.094 606.023 515.023 606.027 514.934 cv
606.023 514.855 606.031 514.781 606.047 514.719 cv
606.059 514.66 606.074 514.613 606.098 514.574 cv
606.113 514.539 606.141 514.508 606.172 514.484 cv
606.203 514.465 606.234 514.457 606.273 514.453 cv
608.125 514.453 li
608.125 507.707 li
606.41 508.727 li
606.32 508.777 606.25 508.805 606.203 508.812 cv
606.148 508.82 606.105 508.812 606.074 508.781 cv
606.039 508.754 606.02 508.703 606.008 508.633 cv
605.996 508.566 605.988 508.48 605.992 508.371 cv
605.988 508.297 605.992 508.23 606.004 508.172 cv
606.008 508.121 606.02 508.074 606.035 508.035 cv
606.047 508 606.066 507.969 606.09 507.941 cv
606.113 507.914 606.145 507.887 606.191 507.859 cv
608.234 506.547 li
608.25 506.535 608.27 506.523 608.301 506.516 cv
608.324 506.508 608.359 506.5 608.406 506.488 cv
608.445 506.48 608.496 506.473 608.551 506.469 cv
608.605 506.469 608.672 506.469 608.758 506.465 cv
608.863 506.469 608.957 506.473 609.031 506.48 cv
609.102 506.488 609.156 506.504 609.203 506.52 cv
609.242 506.539 609.27 506.559 609.285 506.582 cv
609.293 506.609 609.301 506.633 609.305 506.656 cv
609.305 514.453 li
610.91 514.453 li
610.945 514.457 610.98 514.465 611.012 514.484 cv
611.043 514.508 611.066 514.539 611.09 514.574 cv
611.105 514.613 611.121 514.66 611.137 514.719 cv
611.145 514.781 611.152 514.855 611.156 514.934 cv
cp
f
618.441 512.527 mo
618.441 512.918 618.379 513.297 618.262 513.656 cv
618.137 514.023 617.953 514.34 617.711 514.613 cv
617.461 514.891 617.148 515.113 616.773 515.277 cv
616.391 515.445 615.945 515.527 615.43 515.527 cv
615.059 515.527 614.73 515.484 614.449 515.391 cv
614.164 515.305 613.918 515.172 613.707 515 cv
613.496 514.832 613.32 514.625 613.184 514.379 cv
613.043 514.133 612.93 513.852 612.848 513.535 cv
612.762 513.223 612.703 512.879 612.668 512.5 cv
612.629 512.129 612.609 511.727 612.613 511.293 cv
612.609 510.914 612.629 510.531 612.672 510.141 cv
612.711 509.758 612.785 509.383 612.891 509.016 cv
612.996 508.656 613.141 508.316 613.32 508 cv
613.5 507.684 613.727 507.406 614 507.172 cv
614.273 506.937 614.598 506.75 614.977 506.609 cv
615.355 506.473 615.797 506.406 616.301 506.402 cv
616.469 506.406 616.641 506.414 616.813 506.434 cv
616.984 506.457 617.145 506.488 617.293 506.52 cv
617.441 506.559 617.563 506.594 617.664 506.633 cv
617.762 506.672 617.828 506.707 617.863 506.73 cv
617.891 506.758 617.914 506.785 617.934 506.812 cv
617.949 506.844 617.965 506.875 617.973 506.91 cv
617.98 506.945 617.984 506.984 617.992 507.027 cv
617.992 507.07 617.996 507.125 618 507.187 cv
617.996 507.273 617.996 507.344 617.996 507.398 cv
617.992 507.461 617.98 507.508 617.969 507.543 cv
617.949 507.582 617.93 507.609 617.906 507.625 cv
617.879 507.645 617.848 507.652 617.809 507.652 cv
617.758 507.652 617.688 507.637 617.602 507.605 cv
617.512 507.574 617.406 507.539 617.285 507.496 cv
617.16 507.461 617.012 507.426 616.836 507.391 cv
616.66 507.363 616.457 507.348 616.227 507.344 cv
615.797 507.348 615.43 507.434 615.125 507.605 cv
614.82 507.777 614.57 508.012 614.375 508.305 cv
614.18 508.598 614.035 508.937 613.945 509.32 cv
613.848 509.711 613.793 510.113 613.785 510.531 cv
613.902 510.465 614.039 510.398 614.188 510.328 cv
614.336 510.262 614.496 510.199 614.672 510.141 cv
614.848 510.09 615.035 510.043 615.23 510.008 cv
615.426 509.977 615.637 509.961 615.863 509.957 cv
616.34 509.961 616.742 510.027 617.074 510.152 cv
617.402 510.285 617.668 510.465 617.875 510.695 cv
618.074 510.926 618.219 511.195 618.309 511.508 cv
618.395 511.82 618.441 512.16 618.441 512.527 cv
cp
617.246 512.637 mo
617.246 512.375 617.219 512.133 617.168 511.914 cv
617.113 511.699 617.023 511.516 616.902 511.359 cv
616.777 511.211 616.613 511.094 616.41 511.012 cv
616.199 510.93 615.945 510.887 615.648 510.887 cv
615.477 510.887 615.309 510.902 615.141 510.934 cv
614.969 510.965 614.805 511.008 614.648 511.055 cv
614.488 511.109 614.34 511.172 614.199 511.242 cv
614.055 511.316 613.922 511.391 613.805 511.469 cv
613.801 512.062 613.84 512.559 613.918 512.953 cv
613.992 513.352 614.102 513.668 614.246 513.906 cv
614.391 514.148 614.57 514.32 614.785 514.422 cv
615 514.527 615.25 514.578 615.539 514.574 cv
615.828 514.578 616.082 514.523 616.297 514.41 cv
616.512 514.305 616.688 514.156 616.832 513.969 cv
616.973 513.785 617.078 513.578 617.145 513.348 cv
617.211 513.117 617.246 512.883 617.246 512.637 cv
cp
f
16.195 347.785 mo
16.293 347.789 16.375 347.793 16.441 347.801 cv
16.516 347.812 16.574 347.832 16.617 347.855 cv
16.668 347.883 16.703 347.914 16.719 347.945 cv
16.742 347.984 16.75 348.02 16.75 348.059 cv
16.75 352.898 li
16.75 353.02 16.711 353.133 16.629 353.238 cv
16.551 353.348 16.41 353.402 16.203 353.398 cv
7.211 353.398 li
7.008 353.402 6.867 353.348 6.785 353.238 cv
6.707 353.133 6.668 353.02 6.664 352.898 cv
6.664 348.113 li
6.668 348.074 6.676 348.035 6.695 348 cv
6.719 347.969 6.754 347.941 6.797 347.918 cv
6.848 347.898 6.906 347.883 6.973 347.867 cv
7.047 347.855 7.133 347.848 7.234 347.848 cv
7.328 347.848 7.41 347.855 7.48 347.867 cv
7.551 347.883 7.609 347.898 7.652 347.918 cv
7.699 347.941 7.73 347.969 7.75 348 cv
7.773 348.035 7.785 348.074 7.781 348.113 cv
7.781 352.059 li
10.945 352.059 li
10.945 348.676 li
10.949 348.637 10.961 348.598 10.98 348.562 cv
11.008 348.531 11.039 348.504 11.078 348.477 cv
11.121 348.457 11.18 348.441 11.25 348.426 cv
11.324 348.418 11.41 348.41 11.504 348.41 cv
11.602 348.41 11.68 348.418 11.746 348.426 cv
11.816 348.441 11.871 348.457 11.91 348.477 cv
11.953 348.504 11.984 348.531 12 348.562 cv
12.02 348.598 12.027 348.637 12.027 348.676 cv
12.027 352.059 li
15.637 352.059 li
15.637 348.059 li
15.637 348.02 15.648 347.984 15.668 347.945 cv
15.691 347.914 15.723 347.883 15.766 347.855 cv
15.813 347.832 15.871 347.812 15.938 347.801 cv
16.008 347.793 16.094 347.789 16.195 347.785 cv
cp
f
16.555 339.723 mo
16.602 339.723 16.637 339.734 16.66 339.754 cv
16.691 339.777 16.715 339.812 16.734 339.855 cv
16.754 339.906 16.766 339.969 16.781 340.051 cv
16.789 340.133 16.797 340.238 16.797 340.359 cv
16.797 340.492 16.789 340.598 16.781 340.68 cv
16.766 340.766 16.754 340.832 16.734 340.875 cv
16.715 340.926 16.691 340.957 16.66 340.977 cv
16.637 341 16.602 341.012 16.555 341.008 cv
12.449 341.008 li
12.051 341.012 11.73 341.043 11.484 341.102 cv
11.242 341.168 11.031 341.258 10.852 341.375 cv
10.676 341.492 10.539 341.648 10.445 341.836 cv
10.352 342.031 10.305 342.25 10.305 342.496 cv
10.305 342.82 10.422 343.145 10.648 343.465 cv
10.883 343.789 11.215 344.125 11.652 344.477 cv
16.555 344.477 li
16.602 344.48 16.637 344.492 16.66 344.508 cv
16.691 344.531 16.715 344.562 16.734 344.609 cv
16.754 344.656 16.766 344.723 16.781 344.801 cv
16.789 344.887 16.797 344.992 16.797 345.121 cv
16.797 345.25 16.789 345.355 16.781 345.434 cv
16.766 345.52 16.754 345.586 16.734 345.633 cv
16.715 345.687 16.691 345.719 16.66 345.734 cv
16.637 345.754 16.602 345.766 16.555 345.762 cv
9.543 345.762 li
9.504 345.766 9.469 345.758 9.438 345.738 cv
9.41 345.727 9.387 345.695 9.359 345.645 cv
9.34 345.602 9.324 345.539 9.313 345.465 cv
9.309 345.395 9.305 345.301 9.301 345.176 cv
9.305 345.066 9.309 344.969 9.313 344.891 cv
9.324 344.816 9.34 344.758 9.359 344.715 cv
9.387 344.676 9.41 344.648 9.438 344.629 cv
9.469 344.613 9.504 344.605 9.543 344.602 cv
10.469 344.602 li
10.027 344.211 9.707 343.816 9.5 343.422 cv
9.297 343.031 9.191 342.633 9.191 342.23 cv
9.191 341.762 9.273 341.371 9.43 341.051 cv
9.594 340.734 9.805 340.473 10.066 340.273 cv
10.332 340.078 10.641 339.937 10.996 339.852 cv
11.352 339.766 11.781 339.723 12.277 339.723 cv
cp
f
12.746 331.398 mo
12.949 331.402 13.09 331.453 13.176 331.551 cv
13.262 331.656 13.305 331.773 13.305 331.898 cv
13.305 336.516 li
13.695 336.52 14.047 336.48 14.359 336.398 cv
14.672 336.324 14.941 336.191 15.16 336.008 cv
15.387 335.828 15.559 335.594 15.676 335.297 cv
15.801 335.008 15.859 334.648 15.855 334.223 cv
15.859 333.891 15.832 333.594 15.773 333.332 cv
15.723 333.07 15.66 332.844 15.59 332.652 cv
15.523 332.465 15.465 332.309 15.406 332.184 cv
15.355 332.062 15.328 331.969 15.324 331.906 cv
15.328 331.871 15.336 331.84 15.352 331.809 cv
15.371 331.781 15.398 331.758 15.434 331.738 cv
15.473 331.727 15.523 331.715 15.586 331.703 cv
15.652 331.699 15.73 331.695 15.824 331.691 cv
15.895 331.695 15.953 331.699 16 331.699 cv
16.047 331.707 16.09 331.711 16.129 331.719 cv
16.168 331.727 16.203 331.742 16.234 331.758 cv
16.266 331.781 16.297 331.805 16.324 331.828 cv
16.355 331.859 16.402 331.941 16.465 332.082 cv
16.531 332.223 16.594 332.406 16.656 332.629 cv
16.719 332.855 16.773 333.113 16.824 333.406 cv
16.871 333.699 16.895 334.012 16.898 334.344 cv
16.895 334.922 16.816 335.43 16.656 335.859 cv
16.496 336.297 16.258 336.66 15.941 336.953 cv
15.625 337.254 15.23 337.477 14.75 337.625 cv
14.273 337.773 13.715 337.848 13.078 337.848 cv
12.48 337.848 11.941 337.773 11.457 337.617 cv
10.98 337.465 10.57 337.238 10.234 336.941 cv
9.898 336.648 9.641 336.293 9.461 335.879 cv
9.281 335.465 9.191 335 9.191 334.484 cv
9.191 333.934 9.281 333.465 9.457 333.078 cv
9.637 332.691 9.875 332.375 10.172 332.121 cv
10.473 331.875 10.824 331.691 11.223 331.574 cv
11.629 331.461 12.059 331.402 12.512 331.398 cv
cp
12.363 332.691 mo
11.688 332.676 11.156 332.828 10.773 333.145 cv
10.391 333.461 10.199 333.93 10.195 334.547 cv
10.199 334.871 10.258 335.152 10.375 335.391 cv
10.496 335.633 10.656 335.832 10.852 335.992 cv
11.051 336.156 11.281 336.281 11.543 336.367 cv
11.805 336.457 12.078 336.508 12.363 336.516 cv
cp
f
10 325.332 mo
10.117 325.336 10.215 325.336 10.289 325.34 cv
10.371 325.348 10.434 325.359 10.473 325.371 cv
10.52 325.391 10.551 325.41 10.574 325.43 cv
10.598 325.457 10.609 325.488 10.609 325.527 cv
10.609 325.57 10.598 325.621 10.574 325.68 cv
10.551 325.742 10.527 325.812 10.504 325.883 cv
10.48 325.961 10.461 326.043 10.438 326.137 cv
10.422 326.23 10.41 326.332 10.406 326.441 cv
10.41 326.574 10.438 326.703 10.484 326.824 cv
10.539 326.949 10.625 327.078 10.742 327.215 cv
10.867 327.355 11.023 327.5 11.219 327.648 cv
11.414 327.801 11.656 327.969 11.941 328.148 cv
16.555 328.148 li
16.602 328.152 16.637 328.164 16.66 328.18 cv
16.691 328.203 16.715 328.234 16.734 328.281 cv
16.754 328.328 16.766 328.395 16.781 328.473 cv
16.789 328.559 16.797 328.664 16.797 328.793 cv
16.797 328.922 16.789 329.027 16.781 329.105 cv
16.766 329.191 16.754 329.258 16.734 329.305 cv
16.715 329.359 16.691 329.391 16.66 329.406 cv
16.637 329.426 16.602 329.437 16.555 329.434 cv
9.543 329.434 li
9.504 329.437 9.469 329.43 9.438 329.41 cv
9.41 329.398 9.387 329.367 9.359 329.316 cv
9.34 329.273 9.324 329.211 9.313 329.137 cv
9.309 329.066 9.305 328.973 9.301 328.848 cv
9.305 328.738 9.309 328.641 9.313 328.562 cv
9.324 328.488 9.34 328.43 9.359 328.387 cv
9.387 328.348 9.41 328.32 9.438 328.301 cv
9.469 328.285 9.504 328.277 9.543 328.273 cv
10.563 328.273 li
10.281 328.086 10.055 327.902 9.879 327.73 cv
9.703 327.562 9.563 327.402 9.461 327.25 cv
9.359 327.102 9.289 326.953 9.25 326.805 cv
9.211 326.656 9.191 326.508 9.191 326.355 cv
9.191 326.289 9.195 326.211 9.203 326.125 cv
9.211 326.039 9.227 325.949 9.246 325.855 cv
9.27 325.762 9.293 325.68 9.316 325.602 cv
9.344 325.531 9.371 325.477 9.395 325.441 cv
9.426 325.414 9.449 325.395 9.469 325.379 cv
9.496 325.371 9.527 325.359 9.559 325.352 cv
9.598 325.344 9.648 325.34 9.719 325.336 cv
9.789 325.336 9.883 325.336 10 325.332 cv
cp
f
9.859 318.289 mo
10.043 318.293 10.176 318.316 10.254 318.363 cv
10.336 318.414 10.375 318.477 10.375 318.551 cv
10.375 319.559 li
10.563 319.379 10.77 319.25 10.996 319.176 cv
11.223 319.105 11.457 319.07 11.699 319.066 cv
12.105 319.07 12.465 319.137 12.777 319.262 cv
13.09 319.395 13.355 319.578 13.566 319.82 cv
13.785 320.062 13.949 320.352 14.063 320.68 cv
14.18 321.016 14.238 321.383 14.234 321.785 cv
14.238 322.074 14.199 322.348 14.121 322.602 cv
14.047 322.863 13.953 323.059 13.836 323.195 cv
13.934 323.289 14.039 323.367 14.156 323.426 cv
14.277 323.488 14.414 323.52 14.566 323.516 cv
14.75 323.52 14.902 323.434 15.02 323.262 cv
15.145 323.094 15.207 322.871 15.215 322.59 cv
15.293 320.758 li
15.305 320.41 15.352 320.094 15.438 319.801 cv
15.523 319.512 15.648 319.258 15.805 319.043 cv
15.965 318.832 16.156 318.664 16.387 318.543 cv
16.621 318.426 16.891 318.367 17.195 318.363 cv
17.516 318.367 17.82 318.434 18.113 318.566 cv
18.402 318.703 18.656 318.91 18.879 319.187 cv
19.098 319.469 19.273 319.824 19.402 320.254 cv
19.527 320.684 19.59 321.191 19.594 321.777 cv
19.59 322.348 19.543 322.832 19.449 323.227 cv
19.352 323.625 19.219 323.949 19.055 324.203 cv
18.887 324.457 18.691 324.641 18.461 324.754 cv
18.227 324.871 17.973 324.93 17.707 324.926 cv
17.535 324.93 17.371 324.91 17.211 324.863 cv
17.047 324.824 16.895 324.762 16.75 324.676 cv
16.605 324.594 16.469 324.484 16.332 324.355 cv
16.203 324.23 16.07 324.086 15.941 323.914 cv
15.813 324.172 15.648 324.359 15.449 324.48 cv
15.254 324.602 15.043 324.66 14.809 324.66 cv
14.496 324.66 14.211 324.598 13.961 324.469 cv
13.711 324.34 13.488 324.18 13.289 323.984 cv
13.098 324.148 12.883 324.273 12.641 324.367 cv
12.402 324.461 12.109 324.508 11.762 324.508 cv
11.367 324.508 11.008 324.441 10.688 324.305 cv
10.371 324.172 10.105 323.984 9.887 323.742 cv
9.672 323.504 9.504 323.219 9.383 322.883 cv
9.27 322.551 9.211 322.184 9.207 321.785 cv
9.211 321.574 9.223 321.375 9.242 321.191 cv
9.27 321.008 9.301 320.836 9.34 320.672 cv
9.34 318.551 li
9.344 318.465 9.387 318.398 9.469 318.355 cv
9.559 318.312 9.688 318.293 9.859 318.289 cv
cp
11.707 320.297 mo
11.234 320.301 10.863 320.434 10.59 320.691 cv
10.324 320.957 10.188 321.328 10.188 321.809 cv
10.188 322.062 10.23 322.281 10.313 322.461 cv
10.398 322.648 10.512 322.801 10.656 322.922 cv
10.805 323.043 10.973 323.133 11.16 323.191 cv
11.348 323.254 11.547 323.285 11.754 323.281 cv
12.219 323.285 12.582 323.152 12.848 322.891 cv
13.113 322.629 13.246 322.262 13.242 321.785 cv
13.246 321.535 13.207 321.316 13.121 321.125 cv
13.043 320.941 12.93 320.785 12.789 320.66 cv
12.648 320.539 12.484 320.449 12.293 320.387 cv
12.109 320.332 11.914 320.301 11.707 320.297 cv
cp
17.266 319.652 mo
16.961 319.656 16.73 319.781 16.566 320.023 cv
16.406 320.273 16.316 320.605 16.305 321.023 cv
16.242 322.84 li
16.375 323.008 16.5 323.145 16.613 323.246 cv
16.73 323.355 16.84 323.437 16.949 323.5 cv
17.055 323.562 17.16 323.605 17.266 323.629 cv
17.367 323.652 17.473 323.664 17.582 323.664 cv
17.918 323.664 18.172 323.496 18.352 323.152 cv
18.523 322.812 18.613 322.332 18.613 321.715 cv
18.613 321.328 18.574 321.004 18.5 320.738 cv
18.422 320.48 18.32 320.27 18.199 320.105 cv
18.07 319.949 17.93 319.832 17.77 319.758 cv
17.609 319.691 17.441 319.656 17.266 319.652 cv
cp
f
16.75 313.437 mo
19.328 314.371 li
19.41 314.406 19.473 314.484 19.52 314.609 cv
19.563 314.738 19.586 314.934 19.586 315.191 cv
19.586 315.332 19.578 315.441 19.566 315.52 cv
19.551 315.605 19.527 315.668 19.5 315.707 cv
19.465 315.754 19.426 315.777 19.375 315.781 cv
19.32 315.789 19.258 315.777 19.188 315.742 cv
16.75 314.777 li
16.73 314.824 16.699 314.871 16.648 314.91 cv
16.605 314.957 16.555 314.984 16.5 314.996 cv
9.797 317.496 li
9.691 317.539 9.605 317.562 9.543 317.559 cv
9.48 317.562 9.434 317.539 9.395 317.496 cv
9.363 317.457 9.336 317.391 9.32 317.293 cv
9.309 317.203 9.305 317.078 9.301 316.922 cv
9.305 316.766 9.309 316.645 9.313 316.555 cv
9.324 316.469 9.336 316.398 9.355 316.344 cv
9.379 316.293 9.41 316.254 9.445 316.23 cv
9.488 316.207 9.543 316.184 9.605 316.156 cv
15.23 314.152 li
15.23 314.129 li
9.574 312.199 li
9.477 312.168 9.414 312.133 9.383 312.086 cv
9.359 312.047 9.336 311.98 9.32 311.887 cv
9.309 311.801 9.305 311.672 9.301 311.504 cv
9.305 311.359 9.309 311.238 9.32 311.145 cv
9.336 311.051 9.363 310.984 9.395 310.937 cv
9.434 310.898 9.48 310.875 9.543 310.871 cv
9.605 310.875 9.684 310.891 9.773 310.918 cv
cp
f
15.324 298.801 mo
15.41 298.801 15.48 298.805 15.543 298.809 cv
15.605 298.816 15.66 298.824 15.707 298.836 cv
15.754 298.852 15.797 298.871 15.832 298.887 cv
15.871 298.91 15.914 298.945 15.965 298.996 cv
16.016 299.051 16.094 299.16 16.199 299.324 cv
16.309 299.492 16.414 299.699 16.512 299.945 cv
16.617 300.191 16.699 300.473 16.77 300.793 cv
16.836 301.113 16.871 301.465 16.875 301.84 cv
16.871 302.5 16.766 303.09 16.547 303.617 cv
16.332 304.145 16.012 304.594 15.582 304.965 cv
15.16 305.336 14.633 305.621 14.004 305.82 cv
13.379 306.02 12.656 306.121 11.84 306.117 cv
11.004 306.121 10.262 306.012 9.605 305.797 cv
8.953 305.582 8.398 305.281 7.941 304.891 cv
7.488 304.504 7.141 304.039 6.902 303.492 cv
6.664 302.953 6.543 302.348 6.543 301.684 cv
6.543 301.395 6.57 301.113 6.625 300.836 cv
6.68 300.562 6.75 300.309 6.828 300.074 cv
6.914 299.844 7.008 299.637 7.117 299.449 cv
7.227 299.27 7.316 299.141 7.387 299.07 cv
7.457 299 7.512 298.957 7.547 298.934 cv
7.586 298.918 7.629 298.898 7.676 298.883 cv
7.727 298.871 7.785 298.863 7.852 298.852 cv
7.922 298.848 8.004 298.844 8.094 298.84 cv
8.199 298.844 8.285 298.848 8.355 298.855 cv
8.43 298.867 8.492 298.883 8.539 298.902 cv
8.594 298.926 8.629 298.949 8.648 298.977 cv
8.676 299.008 8.688 299.043 8.684 299.082 cv
8.688 299.156 8.637 299.262 8.531 299.391 cv
8.434 299.523 8.324 299.691 8.199 299.895 cv
8.082 300.105 7.969 300.355 7.863 300.648 cv
7.766 300.945 7.715 301.297 7.711 301.707 cv
7.715 302.16 7.805 302.57 7.98 302.937 cv
8.16 303.305 8.422 303.621 8.77 303.879 cv
9.121 304.145 9.547 304.344 10.047 304.484 cv
10.547 304.629 11.121 304.703 11.762 304.699 cv
12.406 304.703 12.973 304.633 13.461 304.492 cv
13.953 304.355 14.363 304.156 14.691 303.898 cv
15.023 303.641 15.27 303.324 15.438 302.949 cv
15.609 302.574 15.695 302.148 15.691 301.668 cv
15.695 301.27 15.645 300.918 15.543 300.617 cv
15.445 300.316 15.336 300.062 15.211 299.848 cv
15.09 299.641 14.98 299.465 14.879 299.328 cv
14.785 299.191 14.734 299.086 14.73 299.004 cv
14.734 298.973 14.742 298.941 14.754 298.91 cv
14.773 298.887 14.805 298.863 14.844 298.848 cv
14.891 298.832 14.949 298.82 15.027 298.812 cv
15.105 298.805 15.207 298.801 15.324 298.801 cv
cp
f
12.969 290.656 mo
13.547 290.66 14.074 290.734 14.551 290.883 cv
15.035 291.035 15.449 291.262 15.793 291.559 cv
16.145 291.859 16.414 292.234 16.605 292.68 cv
16.801 293.133 16.895 293.652 16.898 294.242 cv
16.895 294.82 16.813 295.324 16.641 295.75 cv
16.473 296.18 16.223 296.535 15.895 296.82 cv
15.566 297.109 15.172 297.324 14.703 297.461 cv
14.238 297.602 13.707 297.668 13.109 297.668 cv
12.543 297.668 12.016 297.598 11.535 297.449 cv
11.055 297.305 10.641 297.078 10.289 296.777 cv
9.941 296.48 9.672 296.109 9.48 295.66 cv
9.289 295.215 9.191 294.691 9.191 294.094 cv
9.191 293.516 9.277 293.016 9.449 292.586 cv
9.621 292.16 9.871 291.801 10.199 291.516 cv
10.527 291.23 10.926 291.016 11.391 290.871 cv
11.859 290.73 12.387 290.66 12.969 290.656 cv
cp
13.055 291.988 mo
12.68 291.992 12.32 292.027 11.98 292.094 cv
11.645 292.168 11.352 292.285 11.094 292.445 cv
10.844 292.609 10.641 292.828 10.488 293.105 cv
10.344 293.387 10.27 293.734 10.266 294.145 cv
10.27 294.531 10.336 294.859 10.469 295.133 cv
10.605 295.41 10.797 295.637 11.043 295.812 cv
11.289 295.992 11.582 296.125 11.918 296.207 cv
12.258 296.297 12.625 296.34 13.023 296.336 cv
13.41 296.34 13.773 296.305 14.109 296.23 cv
14.449 296.164 14.742 296.047 14.992 295.879 cv
15.246 295.715 15.449 295.492 15.594 295.215 cv
15.746 294.937 15.82 294.59 15.816 294.176 cv
15.82 293.801 15.75 293.473 15.613 293.191 cv
15.48 292.914 15.293 292.687 15.043 292.508 cv
14.801 292.332 14.508 292.203 14.172 292.117 cv
13.836 292.035 13.465 291.992 13.055 291.988 cv
cp
f
16.555 282.727 mo
16.602 282.727 16.637 282.738 16.66 282.758 cv
16.691 282.781 16.715 282.816 16.734 282.859 cv
16.754 282.91 16.766 282.973 16.781 283.055 cv
16.789 283.137 16.797 283.242 16.797 283.363 cv
16.797 283.496 16.789 283.602 16.781 283.684 cv
16.766 283.77 16.754 283.836 16.734 283.879 cv
16.715 283.93 16.691 283.961 16.66 283.98 cv
16.637 284.004 16.602 284.016 16.555 284.012 cv
12.449 284.012 li
12.051 284.016 11.73 284.047 11.484 284.105 cv
11.242 284.172 11.031 284.262 10.852 284.379 cv
10.676 284.496 10.539 284.652 10.445 284.84 cv
10.352 285.035 10.305 285.254 10.305 285.5 cv
10.305 285.824 10.422 286.148 10.648 286.469 cv
10.883 286.793 11.215 287.129 11.652 287.48 cv
16.555 287.48 li
16.602 287.484 16.637 287.496 16.66 287.512 cv
16.691 287.535 16.715 287.566 16.734 287.613 cv
16.754 287.66 16.766 287.727 16.781 287.805 cv
16.789 287.891 16.797 287.996 16.797 288.125 cv
16.797 288.254 16.789 288.359 16.781 288.437 cv
16.766 288.523 16.754 288.59 16.734 288.637 cv
16.715 288.691 16.691 288.723 16.66 288.738 cv
16.637 288.758 16.602 288.77 16.555 288.766 cv
9.543 288.766 li
9.504 288.77 9.469 288.762 9.438 288.742 cv
9.41 288.73 9.387 288.699 9.359 288.648 cv
9.34 288.605 9.324 288.543 9.313 288.469 cv
9.309 288.398 9.305 288.305 9.301 288.18 cv
9.305 288.07 9.309 287.973 9.313 287.895 cv
9.324 287.82 9.34 287.762 9.359 287.719 cv
9.387 287.68 9.41 287.652 9.438 287.633 cv
9.469 287.617 9.504 287.609 9.543 287.605 cv
10.469 287.605 li
10.027 287.215 9.707 286.82 9.5 286.426 cv
9.297 286.035 9.191 285.637 9.191 285.234 cv
9.191 284.766 9.273 284.375 9.43 284.055 cv
9.594 283.738 9.805 283.477 10.066 283.277 cv
10.332 283.082 10.641 282.941 10.996 282.855 cv
11.352 282.77 11.781 282.727 12.277 282.727 cv
cp
f
14.645 275.984 mo
15.008 275.988 15.328 276.055 15.605 276.184 cv
15.887 276.316 16.121 276.504 16.313 276.746 cv
16.508 276.992 16.652 277.285 16.75 277.621 cv
16.848 277.961 16.895 278.332 16.898 278.734 cv
16.895 278.988 16.875 279.227 16.84 279.449 cv
16.797 279.676 16.75 279.875 16.691 280.055 cv
16.633 280.234 16.57 280.387 16.504 280.512 cv
16.441 280.637 16.383 280.73 16.328 280.785 cv
16.277 280.844 16.207 280.883 16.109 280.906 cv
16.02 280.934 15.891 280.945 15.73 280.945 cv
15.633 280.945 15.551 280.941 15.48 280.93 cv
15.414 280.922 15.359 280.91 15.316 280.891 cv
15.277 280.879 15.246 280.855 15.227 280.828 cv
15.211 280.801 15.203 280.77 15.199 280.73 cv
15.203 280.676 15.238 280.59 15.305 280.477 cv
15.379 280.367 15.457 280.23 15.535 280.062 cv
15.621 279.902 15.695 279.711 15.766 279.484 cv
15.836 279.266 15.871 279.008 15.871 278.711 cv
15.871 278.496 15.848 278.297 15.801 278.117 cv
15.754 277.941 15.688 277.789 15.594 277.66 cv
15.508 277.531 15.391 277.43 15.246 277.359 cv
15.109 277.289 14.941 277.254 14.746 277.254 cv
14.551 277.254 14.387 277.305 14.25 277.406 cv
14.117 277.508 13.996 277.645 13.891 277.809 cv
13.789 277.977 13.699 278.16 13.613 278.367 cv
13.535 278.578 13.449 278.793 13.359 279.012 cv
13.273 279.23 13.172 279.445 13.059 279.656 cv
12.949 279.867 12.816 280.059 12.652 280.223 cv
12.496 280.395 12.301 280.527 12.074 280.625 cv
11.852 280.73 11.586 280.781 11.273 280.777 cv
11 280.781 10.734 280.727 10.48 280.617 cv
10.23 280.512 10.012 280.352 9.82 280.137 cv
9.633 279.926 9.48 279.66 9.363 279.34 cv
9.25 279.02 9.191 278.648 9.191 278.219 cv
9.191 278.035 9.207 277.848 9.238 277.66 cv
9.27 277.477 9.309 277.309 9.355 277.152 cv
9.402 277.004 9.453 276.875 9.508 276.766 cv
9.563 276.664 9.613 276.582 9.652 276.523 cv
9.699 276.473 9.734 276.437 9.762 276.414 cv
9.793 276.398 9.828 276.383 9.863 276.375 cv
9.906 276.367 9.953 276.359 10.008 276.352 cv
10.066 276.344 10.137 276.34 10.219 276.34 cv
10.309 276.34 10.387 276.344 10.449 276.352 cv
10.52 276.359 10.57 276.375 10.609 276.391 cv
10.652 276.414 10.684 276.434 10.699 276.457 cv
10.719 276.484 10.727 276.516 10.727 276.543 cv
10.727 276.594 10.699 276.66 10.641 276.746 cv
10.586 276.836 10.523 276.949 10.457 277.09 cv
10.395 277.23 10.336 277.398 10.273 277.586 cv
10.219 277.777 10.188 277.992 10.188 278.234 cv
10.188 278.457 10.215 278.648 10.262 278.812 cv
10.316 278.98 10.387 279.117 10.473 279.223 cv
10.566 279.328 10.672 279.41 10.797 279.461 cv
10.922 279.52 11.059 279.547 11.203 279.543 cv
11.406 279.547 11.574 279.496 11.711 279.391 cv
11.852 279.289 11.973 279.152 12.074 278.984 cv
12.18 278.82 12.273 278.629 12.355 278.414 cv
12.441 278.203 12.527 277.988 12.613 277.766 cv
12.703 277.547 12.805 277.328 12.91 277.109 cv
13.02 276.895 13.148 276.703 13.305 276.535 cv
13.461 276.371 13.648 276.238 13.867 276.137 cv
14.086 276.039 14.348 275.988 14.645 275.984 cv
cp
f
16.555 268.141 mo
16.602 268.145 16.637 268.152 16.66 268.168 cv
16.691 268.187 16.715 268.223 16.734 268.266 cv
16.754 268.312 16.766 268.371 16.781 268.445 cv
16.789 268.523 16.797 268.617 16.797 268.723 cv
16.797 268.848 16.789 268.945 16.781 269.016 cv
16.766 269.094 16.754 269.152 16.734 269.195 cv
16.715 269.242 16.691 269.273 16.66 269.285 cv
16.637 269.305 16.602 269.312 16.555 269.309 cv
15.629 269.309 li
16.074 269.711 16.395 270.105 16.594 270.492 cv
16.797 270.887 16.895 271.281 16.898 271.676 cv
16.895 272.148 16.82 272.543 16.664 272.859 cv
16.512 273.18 16.301 273.437 16.031 273.633 cv
15.766 273.836 15.453 273.977 15.094 274.059 cv
14.738 274.148 14.305 274.191 13.797 274.187 cv
9.543 274.187 li
9.504 274.191 9.469 274.184 9.438 274.16 cv
9.41 274.145 9.387 274.109 9.359 274.055 cv
9.34 274.008 9.324 273.937 9.313 273.852 cv
9.309 273.77 9.305 273.668 9.301 273.539 cv
9.305 273.418 9.309 273.312 9.313 273.227 cv
9.324 273.145 9.34 273.078 9.359 273.031 cv
9.387 272.984 9.41 272.949 9.438 272.926 cv
9.469 272.906 9.504 272.898 9.543 272.895 cv
13.625 272.895 li
14.039 272.898 14.367 272.867 14.613 272.805 cv
14.859 272.746 15.07 272.656 15.242 272.531 cv
15.422 272.414 15.555 272.258 15.648 272.066 cv
15.746 271.883 15.797 271.664 15.793 271.414 cv
15.797 271.094 15.68 270.773 15.449 270.449 cv
15.223 270.133 14.887 269.793 14.441 269.434 cv
9.543 269.434 li
9.504 269.434 9.469 269.426 9.438 269.406 cv
9.41 269.391 9.387 269.355 9.359 269.301 cv
9.34 269.25 9.324 269.184 9.313 269.102 cv
9.309 269.023 9.305 268.918 9.301 268.785 cv
9.305 268.664 9.309 268.559 9.313 268.473 cv
9.324 268.391 9.34 268.328 9.359 268.281 cv
9.387 268.238 9.41 268.203 9.438 268.176 cv
9.469 268.156 9.504 268.145 9.543 268.141 cv
cp
f
16.555 255.363 mo
16.602 255.367 16.637 255.375 16.66 255.395 cv
16.691 255.418 16.715 255.453 16.734 255.496 cv
16.754 255.547 16.766 255.613 16.781 255.691 cv
16.789 255.777 16.797 255.879 16.797 256.004 cv
16.797 256.137 16.789 256.246 16.781 256.324 cv
16.766 256.41 16.754 256.477 16.734 256.523 cv
16.715 256.578 16.691 256.613 16.66 256.629 cv
16.637 256.652 16.602 256.66 16.555 256.66 cv
12.293 256.66 li
12 256.66 11.73 256.687 11.484 256.738 cv
11.242 256.793 11.031 256.875 10.852 256.988 cv
10.676 257.102 10.539 257.246 10.445 257.422 cv
10.352 257.602 10.305 257.812 10.305 258.047 cv
10.305 258.344 10.422 258.641 10.648 258.937 cv
10.883 259.242 11.215 259.57 11.652 259.926 cv
16.555 259.926 li
16.602 259.93 16.637 259.941 16.66 259.957 cv
16.691 259.98 16.715 260.012 16.734 260.059 cv
16.754 260.109 16.766 260.176 16.781 260.258 cv
16.789 260.344 16.797 260.449 16.797 260.57 cv
16.797 260.691 16.789 260.793 16.781 260.879 cv
16.766 260.965 16.754 261.035 16.734 261.082 cv
16.715 261.137 16.691 261.168 16.66 261.184 cv
16.637 261.203 16.602 261.215 16.555 261.211 cv
12.293 261.211 li
12 261.215 11.73 261.242 11.484 261.297 cv
11.242 261.355 11.031 261.441 10.852 261.555 cv
10.676 261.668 10.539 261.812 10.445 261.984 cv
10.352 262.164 10.305 262.371 10.305 262.605 cv
10.305 262.906 10.422 263.203 10.648 263.504 cv
10.883 263.805 11.215 264.133 11.652 264.484 cv
16.555 264.484 li
16.602 264.488 16.637 264.5 16.66 264.516 cv
16.691 264.539 16.715 264.57 16.734 264.617 cv
16.754 264.664 16.766 264.73 16.781 264.809 cv
16.789 264.895 16.797 265 16.797 265.129 cv
16.797 265.258 16.789 265.363 16.781 265.441 cv
16.766 265.527 16.754 265.594 16.734 265.641 cv
16.715 265.695 16.691 265.727 16.66 265.742 cv
16.637 265.762 16.602 265.773 16.555 265.77 cv
9.543 265.77 li
9.504 265.773 9.469 265.766 9.438 265.746 cv
9.41 265.734 9.387 265.703 9.359 265.652 cv
9.34 265.609 9.324 265.547 9.313 265.473 cv
9.309 265.402 9.305 265.309 9.301 265.184 cv
9.305 265.074 9.309 264.977 9.313 264.898 cv
9.324 264.824 9.34 264.766 9.359 264.723 cv
9.387 264.684 9.41 264.656 9.438 264.637 cv
9.469 264.621 9.504 264.613 9.543 264.609 cv
10.469 264.609 li
10.027 264.219 9.707 263.836 9.5 263.461 cv
9.297 263.094 9.191 262.715 9.191 262.332 cv
9.191 262.043 9.227 261.785 9.293 261.551 cv
9.363 261.324 9.457 261.117 9.578 260.937 cv
9.699 260.762 9.844 260.613 10.012 260.484 cv
10.184 260.363 10.375 260.258 10.578 260.172 cv
10.328 259.941 10.113 259.719 9.934 259.508 cv
9.762 259.297 9.617 259.094 9.504 258.898 cv
9.398 258.703 9.32 258.516 9.266 258.332 cv
9.219 258.148 9.191 257.961 9.191 257.773 cv
9.191 257.32 9.273 256.941 9.43 256.637 cv
9.594 256.332 9.805 256.086 10.066 255.891 cv
10.332 255.703 10.641 255.566 10.996 255.484 cv
11.352 255.406 11.727 255.367 12.121 255.363 cv
cp
f
12.938 246.562 mo
13.555 246.566 14.105 246.633 14.594 246.762 cv
15.082 246.898 15.496 247.094 15.836 247.348 cv
16.176 247.605 16.438 247.922 16.621 248.301 cv
16.805 248.68 16.895 249.113 16.898 249.602 cv
16.895 249.812 16.875 250.008 16.836 250.18 cv
16.793 250.359 16.73 250.531 16.641 250.695 cv
16.555 250.867 16.441 251.035 16.305 251.199 cv
16.172 251.371 16.016 251.547 15.832 251.73 cv
19.336 251.73 li
19.375 251.734 19.414 251.746 19.445 251.762 cv
19.477 251.785 19.5 251.816 19.523 251.863 cv
19.539 251.91 19.555 251.977 19.57 252.055 cv
19.578 252.141 19.586 252.246 19.586 252.375 cv
19.586 252.504 19.578 252.609 19.57 252.687 cv
19.555 252.773 19.539 252.84 19.523 252.887 cv
19.5 252.941 19.477 252.973 19.445 252.988 cv
19.414 253.008 19.375 253.02 19.336 253.016 cv
9.543 253.016 li
9.496 253.02 9.461 253.012 9.43 252.992 cv
9.406 252.98 9.379 252.949 9.355 252.898 cv
9.336 252.855 9.324 252.793 9.313 252.719 cv
9.309 252.648 9.305 252.562 9.301 252.453 cv
9.305 252.348 9.309 252.258 9.313 252.184 cv
9.324 252.117 9.336 252.059 9.355 252.008 cv
9.379 251.965 9.406 251.93 9.43 251.91 cv
9.461 251.895 9.496 251.887 9.543 251.883 cv
10.484 251.883 li
10.27 251.676 10.078 251.473 9.918 251.27 cv
9.758 251.074 9.625 250.875 9.516 250.672 cv
9.41 250.477 9.328 250.27 9.273 250.059 cv
9.219 249.848 9.191 249.625 9.191 249.391 cv
9.191 248.883 9.293 248.449 9.488 248.09 cv
9.688 247.73 9.957 247.441 10.297 247.215 cv
10.645 246.992 11.043 246.824 11.496 246.719 cv
11.953 246.617 12.434 246.566 12.938 246.562 cv
cp
13.086 247.895 mo
12.734 247.898 12.387 247.926 12.047 247.977 cv
11.715 248.035 11.418 248.129 11.156 248.262 cv
10.898 248.398 10.691 248.578 10.531 248.797 cv
10.379 249.023 10.301 249.301 10.297 249.637 cv
10.301 249.805 10.324 249.969 10.371 250.129 cv
10.422 250.293 10.5 250.461 10.605 250.625 cv
10.715 250.797 10.855 250.969 11.027 251.148 cv
11.203 251.332 11.418 251.527 11.668 251.73 cv
14.457 251.73 li
14.895 251.375 15.223 251.039 15.449 250.719 cv
15.68 250.402 15.797 250.066 15.793 249.715 cv
15.797 249.391 15.719 249.113 15.559 248.879 cv
15.406 248.652 15.195 248.465 14.934 248.316 cv
14.676 248.176 14.387 248.066 14.063 247.996 cv
13.742 247.93 13.418 247.898 13.086 247.895 cv
cp
f
16.039 241.07 mo
16.195 241.07 16.313 241.082 16.398 241.102 cv
16.488 241.125 16.555 241.156 16.594 241.195 cv
16.637 241.238 16.676 241.301 16.711 241.383 cv
16.746 241.469 16.773 241.562 16.801 241.668 cv
16.82 241.777 16.84 241.891 16.859 242.008 cv
16.871 242.125 16.879 242.246 16.883 242.363 cv
16.879 242.73 16.832 243.043 16.738 243.301 cv
16.645 243.562 16.5 243.773 16.301 243.937 cv
16.109 244.105 15.863 244.227 15.563 244.301 cv
15.266 244.379 14.914 244.418 14.504 244.414 cv
10.406 244.414 li
10.406 245.395 li
10.41 245.473 10.367 245.535 10.281 245.582 cv
10.199 245.629 10.066 245.652 9.875 245.652 cv
9.781 245.652 9.699 245.648 9.629 245.633 cv
9.566 245.625 9.508 245.605 9.461 245.582 cv
9.418 245.562 9.387 245.535 9.367 245.5 cv
9.352 245.469 9.344 245.434 9.34 245.387 cv
9.34 244.414 li
7.672 244.414 li
7.641 244.418 7.605 244.406 7.57 244.387 cv
7.543 244.371 7.516 244.34 7.488 244.285 cv
7.469 244.238 7.453 244.172 7.438 244.086 cv
7.43 244.008 7.422 243.902 7.422 243.773 cv
7.422 243.645 7.43 243.539 7.438 243.457 cv
7.453 243.375 7.469 243.309 7.488 243.262 cv
7.516 243.215 7.543 243.184 7.57 243.16 cv
7.605 243.145 7.641 243.133 7.672 243.129 cv
9.34 243.129 li
9.34 241.328 li
9.344 241.289 9.352 241.254 9.367 241.219 cv
9.387 241.191 9.418 241.164 9.461 241.137 cv
9.508 241.117 9.566 241.102 9.629 241.086 cv
9.699 241.078 9.781 241.07 9.875 241.07 cv
10.066 241.07 10.199 241.094 10.281 241.141 cv
10.367 241.187 10.41 241.25 10.406 241.328 cv
10.406 243.129 li
14.32 243.129 li
14.805 243.133 15.168 243.062 15.414 242.914 cv
15.664 242.773 15.789 242.516 15.785 242.145 cv
15.789 242.031 15.777 241.926 15.75 241.828 cv
15.73 241.738 15.707 241.656 15.676 241.578 cv
15.652 241.508 15.625 241.445 15.602 241.391 cv
15.578 241.344 15.566 241.297 15.566 241.25 cv
15.566 241.227 15.574 241.199 15.586 241.176 cv
15.602 241.152 15.625 241.137 15.66 241.121 cv
15.699 241.113 15.75 241.102 15.809 241.086 cv
15.875 241.078 15.953 241.07 16.039 241.07 cv
cp
f
16.555 238.055 mo
16.602 238.059 16.637 238.07 16.66 238.086 cv
16.691 238.109 16.715 238.141 16.734 238.187 cv
16.754 238.234 16.766 238.301 16.781 238.379 cv
16.789 238.465 16.797 238.57 16.797 238.699 cv
16.797 238.828 16.789 238.934 16.781 239.012 cv
16.766 239.098 16.754 239.164 16.734 239.211 cv
16.715 239.266 16.691 239.297 16.66 239.312 cv
16.637 239.332 16.602 239.344 16.555 239.34 cv
9.543 239.34 li
9.508 239.344 9.477 239.332 9.441 239.312 cv
9.414 239.297 9.387 239.266 9.363 239.211 cv
9.344 239.164 9.328 239.098 9.316 239.012 cv
9.309 238.934 9.305 238.828 9.301 238.699 cv
9.305 238.57 9.309 238.465 9.316 238.379 cv
9.328 238.301 9.344 238.234 9.363 238.187 cv
9.387 238.141 9.414 238.109 9.441 238.086 cv
9.477 238.07 9.508 238.059 9.543 238.055 cv
cp
7.172 237.906 mo
7.477 237.906 7.684 237.965 7.789 238.078 cv
7.902 238.191 7.957 238.402 7.953 238.707 cv
7.957 239.012 7.902 239.219 7.793 239.328 cv
7.688 239.445 7.484 239.5 7.188 239.496 cv
6.887 239.5 6.684 239.441 6.574 239.324 cv
6.469 239.211 6.414 239 6.41 238.691 cv
6.414 238.391 6.469 238.187 6.57 238.074 cv
6.68 237.965 6.879 237.906 7.172 237.906 cv
cp
f
12.969 229.113 mo
13.547 229.117 14.074 229.191 14.551 229.34 cv
15.035 229.492 15.449 229.719 15.793 230.016 cv
16.145 230.316 16.414 230.691 16.605 231.137 cv
16.801 231.59 16.895 232.109 16.898 232.699 cv
16.895 233.277 16.813 233.781 16.641 234.207 cv
16.473 234.637 16.223 234.992 15.895 235.277 cv
15.566 235.566 15.172 235.781 14.703 235.918 cv
14.238 236.059 13.707 236.125 13.109 236.125 cv
12.543 236.125 12.016 236.055 11.535 235.906 cv
11.055 235.762 10.641 235.535 10.289 235.234 cv
9.941 234.937 9.672 234.566 9.48 234.117 cv
9.289 233.672 9.191 233.148 9.191 232.551 cv
9.191 231.973 9.277 231.473 9.449 231.043 cv
9.621 230.617 9.871 230.258 10.199 229.973 cv
10.527 229.687 10.926 229.473 11.391 229.328 cv
11.859 229.187 12.387 229.117 12.969 229.113 cv
cp
13.055 230.445 mo
12.68 230.449 12.32 230.484 11.98 230.551 cv
11.645 230.625 11.352 230.742 11.094 230.902 cv
10.844 231.066 10.641 231.285 10.488 231.562 cv
10.344 231.844 10.27 232.191 10.266 232.602 cv
10.27 232.988 10.336 233.316 10.469 233.59 cv
10.605 233.867 10.797 234.094 11.043 234.27 cv
11.289 234.449 11.582 234.582 11.918 234.664 cv
12.258 234.754 12.625 234.797 13.023 234.793 cv
13.41 234.797 13.773 234.762 14.109 234.687 cv
14.449 234.621 14.742 234.504 14.992 234.336 cv
15.246 234.172 15.449 233.949 15.594 233.672 cv
15.746 233.395 15.82 233.047 15.816 232.633 cv
15.82 232.258 15.75 231.93 15.613 231.648 cv
15.48 231.371 15.293 231.145 15.043 230.965 cv
14.801 230.789 14.508 230.66 14.172 230.574 cv
13.836 230.492 13.465 230.449 13.055 230.445 cv
cp
f
16.555 221.187 mo
16.602 221.187 16.637 221.199 16.66 221.219 cv
16.691 221.242 16.715 221.277 16.734 221.32 cv
16.754 221.371 16.766 221.434 16.781 221.516 cv
16.789 221.598 16.797 221.703 16.797 221.824 cv
16.797 221.957 16.789 222.062 16.781 222.145 cv
16.766 222.23 16.754 222.297 16.734 222.34 cv
16.715 222.391 16.691 222.422 16.66 222.441 cv
16.637 222.465 16.602 222.477 16.555 222.473 cv
12.449 222.473 li
12.051 222.477 11.73 222.508 11.484 222.566 cv
11.242 222.633 11.031 222.723 10.852 222.84 cv
10.676 222.957 10.539 223.113 10.445 223.301 cv
10.352 223.496 10.305 223.715 10.305 223.961 cv
10.305 224.285 10.422 224.609 10.648 224.93 cv
10.883 225.254 11.215 225.59 11.652 225.941 cv
16.555 225.941 li
16.602 225.945 16.637 225.957 16.66 225.973 cv
16.691 225.996 16.715 226.027 16.734 226.074 cv
16.754 226.121 16.766 226.187 16.781 226.266 cv
16.789 226.352 16.797 226.457 16.797 226.586 cv
16.797 226.715 16.789 226.82 16.781 226.898 cv
16.766 226.984 16.754 227.051 16.734 227.098 cv
16.715 227.152 16.691 227.184 16.66 227.199 cv
16.637 227.219 16.602 227.23 16.555 227.227 cv
9.543 227.227 li
9.504 227.23 9.469 227.223 9.438 227.203 cv
9.41 227.191 9.387 227.16 9.359 227.109 cv
9.34 227.066 9.324 227.004 9.313 226.93 cv
9.309 226.859 9.305 226.766 9.301 226.641 cv
9.305 226.531 9.309 226.434 9.313 226.355 cv
9.324 226.281 9.34 226.223 9.359 226.18 cv
9.387 226.141 9.41 226.113 9.438 226.094 cv
9.469 226.078 9.504 226.07 9.543 226.066 cv
10.469 226.066 li
10.027 225.676 9.707 225.281 9.5 224.887 cv
9.297 224.496 9.191 224.098 9.191 223.695 cv
9.191 223.227 9.273 222.836 9.43 222.516 cv
9.594 222.199 9.805 221.937 10.066 221.738 cv
10.332 221.543 10.641 221.402 10.996 221.316 cv
11.352 221.23 11.781 221.187 12.277 221.187 cv
cp
f
6.012 212.348 mo
7.059 212.844 8.129 213.211 9.227 213.453 cv
10.328 213.695 11.434 213.816 12.543 213.816 cv
13.66 213.816 14.77 213.695 15.863 213.445 cv
16.961 213.203 18.031 212.84 19.086 212.363 cv
19.145 212.34 19.199 212.328 19.246 212.32 cv
19.289 212.32 19.324 212.336 19.355 212.371 cv
19.383 212.41 19.402 212.465 19.418 212.539 cv
19.426 212.617 19.434 212.723 19.438 212.848 cv
19.434 212.945 19.43 213.023 19.43 213.09 cv
19.422 213.16 19.414 213.219 19.398 213.266 cv
19.383 213.316 19.363 213.359 19.344 213.387 cv
19.32 213.422 19.297 213.445 19.273 213.457 cv
18.742 213.738 18.207 213.984 17.664 214.195 cv
17.121 214.414 16.57 214.594 16.012 214.734 cv
15.449 214.883 14.883 214.992 14.309 215.062 cv
13.734 215.141 13.152 215.176 12.566 215.172 cv
11.98 215.176 11.402 215.137 10.828 215.051 cv
10.258 214.973 9.691 214.855 9.125 214.707 cv
8.563 214.559 8.008 214.379 7.461 214.168 cv
6.918 213.957 6.375 213.719 5.84 213.449 cv
5.82 213.445 5.805 213.43 5.785 213.406 cv
5.773 213.383 5.758 213.352 5.738 213.309 cv
5.727 213.27 5.715 213.211 5.703 213.137 cv
5.699 213.066 5.695 212.973 5.691 212.855 cv
5.695 212.738 5.703 212.645 5.715 212.566 cv
5.734 212.496 5.754 212.437 5.777 212.395 cv
5.805 212.355 5.84 212.332 5.879 212.324 cv
5.926 212.32 5.969 212.328 6.012 212.348 cv
cp
f
16.531 203.453 mo
16.578 203.457 16.613 203.465 16.645 203.48 cv
16.68 203.5 16.707 203.535 16.727 203.586 cv
16.746 203.641 16.762 203.711 16.777 203.797 cv
16.789 203.887 16.797 204 16.797 204.141 cv
16.797 204.32 16.789 204.469 16.773 204.582 cv
16.758 204.699 16.73 204.785 16.688 204.84 cv
16.648 204.898 16.602 204.945 16.547 204.98 cv
11.504 208.691 li
16.547 208.691 li
16.586 208.695 16.621 208.703 16.652 208.723 cv
16.688 208.746 16.715 208.785 16.73 208.832 cv
16.75 208.887 16.762 208.953 16.777 209.039 cv
16.789 209.125 16.797 209.234 16.797 209.359 cv
16.797 209.488 16.789 209.594 16.777 209.68 cv
16.762 209.77 16.75 209.84 16.73 209.891 cv
16.715 209.945 16.688 209.98 16.652 210 cv
16.621 210.023 16.586 210.035 16.547 210.031 cv
6.867 210.031 li
6.828 210.035 6.793 210.023 6.758 210 cv
6.73 209.98 6.703 209.945 6.684 209.891 cv
6.668 209.84 6.652 209.77 6.637 209.68 cv
6.625 209.594 6.621 209.488 6.617 209.359 cv
6.621 209.234 6.625 209.125 6.637 209.039 cv
6.652 208.953 6.668 208.887 6.684 208.832 cv
6.703 208.785 6.73 208.746 6.758 208.723 cv
6.793 208.703 6.828 208.695 6.867 208.691 cv
11.348 208.691 li
6.867 205.121 li
6.824 205.094 6.785 205.059 6.75 205.012 cv
6.723 204.973 6.699 204.922 6.676 204.859 cv
6.66 204.805 6.645 204.73 6.633 204.641 cv
6.625 204.559 6.621 204.449 6.617 204.312 cv
6.621 204.18 6.625 204.07 6.637 203.984 cv
6.652 203.902 6.672 203.836 6.688 203.785 cv
6.711 203.738 6.734 203.703 6.766 203.684 cv
6.797 203.668 6.832 203.66 6.867 203.656 cv
6.938 203.66 7.004 203.676 7.07 203.707 cv
7.141 203.742 7.234 203.809 7.352 203.898 cv
11.348 207.242 li
16.133 203.641 li
16.273 203.555 16.363 203.5 16.41 203.48 cv
16.461 203.465 16.504 203.457 16.531 203.453 cv
cp
f
16.555 200.645 mo
16.602 200.648 16.637 200.66 16.66 200.676 cv
16.691 200.699 16.715 200.73 16.734 200.777 cv
16.754 200.824 16.766 200.891 16.781 200.969 cv
16.789 201.055 16.797 201.16 16.797 201.289 cv
16.797 201.418 16.789 201.523 16.781 201.602 cv
16.766 201.687 16.754 201.754 16.734 201.801 cv
16.715 201.855 16.691 201.887 16.66 201.902 cv
16.637 201.922 16.602 201.934 16.555 201.93 cv
9.543 201.93 li
9.508 201.934 9.477 201.922 9.441 201.902 cv
9.414 201.887 9.387 201.855 9.363 201.801 cv
9.344 201.754 9.328 201.687 9.316 201.602 cv
9.309 201.523 9.305 201.418 9.301 201.289 cv
9.305 201.16 9.309 201.055 9.316 200.969 cv
9.328 200.891 9.344 200.824 9.363 200.777 cv
9.387 200.73 9.414 200.699 9.441 200.676 cv
9.477 200.66 9.508 200.648 9.543 200.645 cv
cp
7.172 200.496 mo
7.477 200.496 7.684 200.555 7.789 200.668 cv
7.902 200.781 7.957 200.992 7.953 201.297 cv
7.957 201.602 7.902 201.809 7.793 201.918 cv
7.688 202.035 7.484 202.09 7.188 202.086 cv
6.887 202.09 6.684 202.031 6.574 201.914 cv
6.469 201.801 6.414 201.59 6.41 201.281 cv
6.414 200.98 6.469 200.777 6.57 200.664 cv
6.68 200.555 6.879 200.496 7.172 200.496 cv
cp
f
16.555 196.941 mo
16.602 196.945 16.637 196.957 16.66 196.973 cv
16.691 196.996 16.715 197.027 16.734 197.074 cv
16.754 197.121 16.766 197.187 16.781 197.266 cv
16.789 197.352 16.797 197.457 16.797 197.586 cv
16.797 197.715 16.789 197.82 16.781 197.898 cv
16.766 197.984 16.754 198.051 16.734 198.098 cv
16.715 198.152 16.691 198.184 16.66 198.199 cv
16.637 198.219 16.602 198.23 16.555 198.227 cv
6.145 198.227 li
6.105 198.23 6.07 198.219 6.035 198.199 cv
6.008 198.184 5.98 198.152 5.957 198.098 cv
5.938 198.051 5.922 197.984 5.91 197.898 cv
5.902 197.82 5.898 197.715 5.895 197.586 cv
5.898 197.457 5.902 197.352 5.91 197.266 cv
5.922 197.187 5.938 197.121 5.957 197.074 cv
5.98 197.027 6.008 196.996 6.035 196.973 cv
6.07 196.957 6.105 196.945 6.145 196.941 cv
cp
f
12.969 188 mo
13.547 188.004 14.074 188.078 14.551 188.227 cv
15.035 188.379 15.449 188.605 15.793 188.902 cv
16.145 189.203 16.414 189.578 16.605 190.023 cv
16.801 190.477 16.895 190.996 16.898 191.586 cv
16.895 192.164 16.813 192.668 16.641 193.094 cv
16.473 193.523 16.223 193.879 15.895 194.164 cv
15.566 194.453 15.172 194.668 14.703 194.805 cv
14.238 194.945 13.707 195.012 13.109 195.012 cv
12.543 195.012 12.016 194.941 11.535 194.793 cv
11.055 194.648 10.641 194.422 10.289 194.121 cv
9.941 193.824 9.672 193.453 9.48 193.004 cv
9.289 192.559 9.191 192.035 9.191 191.437 cv
9.191 190.859 9.277 190.359 9.449 189.93 cv
9.621 189.504 9.871 189.145 10.199 188.859 cv
10.527 188.574 10.926 188.359 11.391 188.215 cv
11.859 188.074 12.387 188.004 12.969 188 cv
cp
13.055 189.332 mo
12.68 189.336 12.32 189.371 11.98 189.437 cv
11.645 189.512 11.352 189.629 11.094 189.789 cv
10.844 189.953 10.641 190.172 10.488 190.449 cv
10.344 190.73 10.27 191.078 10.266 191.488 cv
10.27 191.875 10.336 192.203 10.469 192.477 cv
10.605 192.754 10.797 192.98 11.043 193.156 cv
11.289 193.336 11.582 193.469 11.918 193.551 cv
12.258 193.641 12.625 193.684 13.023 193.68 cv
13.41 193.684 13.773 193.648 14.109 193.574 cv
14.449 193.508 14.742 193.391 14.992 193.223 cv
15.246 193.059 15.449 192.836 15.594 192.559 cv
15.746 192.281 15.82 191.934 15.816 191.52 cv
15.82 191.145 15.75 190.816 15.613 190.535 cv
15.48 190.258 15.293 190.031 15.043 189.852 cv
14.801 189.676 14.508 189.547 14.172 189.461 cv
13.836 189.379 13.465 189.336 13.055 189.332 cv
cp
f
16.453 172.699 mo
16.527 172.723 16.586 172.754 16.629 172.793 cv
16.676 172.836 16.711 172.895 16.73 172.965 cv
16.754 173.043 16.766 173.133 16.781 173.234 cv
16.789 173.344 16.797 173.473 16.797 173.625 cv
16.797 173.789 16.789 173.926 16.781 174.035 cv
16.766 174.148 16.754 174.242 16.73 174.312 cv
16.711 174.391 16.676 174.445 16.629 174.477 cv
16.586 174.516 16.527 174.543 16.453 174.562 cv
8.84 176.676 li
8.84 176.687 li
16.453 178.637 li
16.527 178.656 16.586 178.68 16.629 178.715 cv
16.676 178.754 16.711 178.809 16.73 178.871 cv
16.754 178.941 16.766 179.027 16.781 179.133 cv
16.789 179.242 16.797 179.379 16.797 179.543 cv
16.797 179.715 16.789 179.855 16.781 179.969 cv
16.766 180.086 16.754 180.18 16.73 180.25 cv
16.711 180.324 16.676 180.383 16.629 180.418 cv
16.586 180.461 16.527 180.488 16.453 180.5 cv
7.141 183.164 li
7.023 183.199 6.93 183.215 6.859 183.215 cv
6.793 183.219 6.742 183.199 6.703 183.152 cv
6.668 183.109 6.645 183.039 6.633 182.941 cv
6.625 182.844 6.621 182.711 6.617 182.543 cv
6.621 182.383 6.625 182.254 6.629 182.16 cv
6.641 182.066 6.652 181.996 6.672 181.945 cv
6.695 181.898 6.727 181.863 6.758 181.844 cv
6.797 181.828 6.844 181.816 6.898 181.801 cv
15.348 179.535 li
15.348 179.527 li
6.914 177.375 li
6.859 177.363 6.813 177.344 6.77 177.316 cv
6.734 177.297 6.703 177.258 6.68 177.203 cv
6.66 177.152 6.645 177.078 6.633 176.98 cv
6.625 176.887 6.621 176.762 6.617 176.605 cv
6.621 176.461 6.625 176.348 6.633 176.258 cv
6.645 176.176 6.66 176.105 6.68 176.051 cv
6.703 176 6.734 175.961 6.77 175.937 cv
6.813 175.914 6.859 175.895 6.914 175.879 cv
15.348 173.562 li
15.348 173.551 li
6.906 171.328 li
6.855 171.316 6.813 171.301 6.77 171.281 cv
6.734 171.27 6.703 171.238 6.68 171.184 cv
6.66 171.137 6.645 171.066 6.633 170.973 cv
6.625 170.887 6.621 170.766 6.617 170.609 cv
6.621 170.461 6.625 170.336 6.637 170.242 cv
6.652 170.152 6.68 170.086 6.711 170.043 cv
6.75 170.004 6.801 169.984 6.867 169.984 cv
6.938 169.988 7.031 170.004 7.148 170.027 cv
cp
f
16.563 163.672 mo
16.625 163.676 16.672 163.695 16.703 163.734 cv
16.734 163.777 16.758 163.836 16.773 163.906 cv
16.789 163.984 16.797 164.09 16.797 164.227 cv
16.797 164.363 16.789 164.473 16.773 164.551 cv
16.758 164.637 16.734 164.695 16.703 164.727 cv
16.672 164.766 16.625 164.781 16.563 164.777 cv
15.863 164.777 li
16.191 165.086 16.445 165.43 16.625 165.805 cv
16.809 166.184 16.895 166.582 16.898 167 cv
16.895 167.375 16.848 167.707 16.754 168.004 cv
16.656 168.301 16.52 168.555 16.336 168.766 cv
16.156 168.977 15.934 169.141 15.668 169.258 cv
15.406 169.375 15.105 169.434 14.762 169.43 cv
14.371 169.434 14.027 169.355 13.734 169.191 cv
13.445 169.035 13.203 168.801 13.012 168.496 cv
12.82 168.195 12.676 167.828 12.578 167.391 cv
12.484 166.957 12.438 166.465 12.434 165.918 cv
12.434 164.949 li
11.887 164.949 li
11.617 164.953 11.379 164.98 11.172 165.035 cv
10.965 165.094 10.793 165.187 10.652 165.312 cv
10.516 165.445 10.41 165.609 10.34 165.809 cv
10.27 166.016 10.234 166.266 10.234 166.555 cv
10.234 166.875 10.273 167.16 10.348 167.41 cv
10.426 167.668 10.508 167.887 10.598 168.074 cv
10.691 168.262 10.777 168.422 10.848 168.547 cv
10.926 168.68 10.961 168.773 10.961 168.832 cv
10.961 168.875 10.953 168.91 10.93 168.941 cv
10.914 168.973 10.883 169 10.836 169.023 cv
10.797 169.047 10.742 169.066 10.676 169.074 cv
10.613 169.09 10.543 169.094 10.461 169.09 cv
10.336 169.094 10.23 169.086 10.152 169.062 cv
10.078 169.047 10.008 169 9.938 168.93 cv
9.871 168.859 9.793 168.738 9.703 168.566 cv
9.613 168.395 9.531 168.199 9.453 167.977 cv
9.383 167.754 9.32 167.508 9.266 167.242 cv
9.219 166.977 9.191 166.711 9.191 166.437 cv
9.191 165.937 9.25 165.508 9.363 165.156 cv
9.48 164.805 9.648 164.52 9.867 164.297 cv
10.09 164.082 10.363 163.922 10.688 163.82 cv
11.02 163.723 11.402 163.676 11.832 163.672 cv
cp
13.359 164.949 mo
13.359 166.051 li
13.363 166.406 13.395 166.711 13.449 166.969 cv
13.512 167.23 13.598 167.445 13.715 167.617 cv
13.832 167.789 13.973 167.914 14.137 167.992 cv
14.301 168.074 14.488 168.117 14.699 168.113 cv
15.066 168.117 15.359 168 15.57 167.77 cv
15.789 167.539 15.895 167.215 15.895 166.797 cv
15.895 166.461 15.809 166.148 15.637 165.859 cv
15.465 165.57 15.203 165.27 14.848 164.949 cv
cp
f
16.039 157.742 mo
16.195 157.742 16.313 157.754 16.398 157.773 cv
16.488 157.797 16.555 157.828 16.594 157.867 cv
16.637 157.91 16.676 157.973 16.711 158.055 cv
16.746 158.141 16.773 158.234 16.801 158.34 cv
16.82 158.449 16.84 158.562 16.859 158.68 cv
16.871 158.797 16.879 158.918 16.883 159.035 cv
16.879 159.402 16.832 159.715 16.738 159.973 cv
16.645 160.234 16.5 160.445 16.301 160.609 cv
16.109 160.777 15.863 160.898 15.563 160.973 cv
15.266 161.051 14.914 161.09 14.504 161.086 cv
10.406 161.086 li
10.406 162.066 li
10.41 162.145 10.367 162.207 10.281 162.254 cv
10.199 162.301 10.066 162.324 9.875 162.324 cv
9.781 162.324 9.699 162.32 9.629 162.305 cv
9.566 162.297 9.508 162.277 9.461 162.254 cv
9.418 162.234 9.387 162.207 9.367 162.172 cv
9.352 162.141 9.344 162.105 9.34 162.059 cv
9.34 161.086 li
7.672 161.086 li
7.641 161.09 7.605 161.078 7.57 161.059 cv
7.543 161.043 7.516 161.012 7.488 160.957 cv
7.469 160.91 7.453 160.844 7.438 160.758 cv
7.43 160.68 7.422 160.574 7.422 160.445 cv
7.422 160.316 7.43 160.211 7.438 160.129 cv
7.453 160.047 7.469 159.98 7.488 159.934 cv
7.516 159.887 7.543 159.855 7.57 159.832 cv
7.605 159.816 7.641 159.805 7.672 159.801 cv
9.34 159.801 li
9.34 158 li
9.344 157.961 9.352 157.926 9.367 157.891 cv
9.387 157.863 9.418 157.836 9.461 157.809 cv
9.508 157.789 9.566 157.773 9.629 157.758 cv
9.699 157.75 9.781 157.742 9.875 157.742 cv
10.066 157.742 10.199 157.766 10.281 157.812 cv
10.367 157.859 10.41 157.922 10.406 158 cv
10.406 159.801 li
14.32 159.801 li
14.805 159.805 15.168 159.734 15.414 159.586 cv
15.664 159.445 15.789 159.187 15.785 158.816 cv
15.789 158.703 15.777 158.598 15.75 158.5 cv
15.73 158.41 15.707 158.328 15.676 158.25 cv
15.652 158.18 15.625 158.117 15.602 158.062 cv
15.578 158.016 15.566 157.969 15.566 157.922 cv
15.566 157.898 15.574 157.871 15.586 157.848 cv
15.602 157.824 15.625 157.809 15.66 157.793 cv
15.699 157.785 15.75 157.773 15.809 157.758 cv
15.875 157.75 15.953 157.742 16.039 157.742 cv
cp
f
16.039 152.586 mo
16.195 152.586 16.313 152.598 16.398 152.617 cv
16.488 152.641 16.555 152.672 16.594 152.711 cv
16.637 152.754 16.676 152.816 16.711 152.898 cv
16.746 152.984 16.773 153.078 16.801 153.184 cv
16.82 153.293 16.84 153.406 16.859 153.523 cv
16.871 153.641 16.879 153.762 16.883 153.879 cv
16.879 154.246 16.832 154.559 16.738 154.816 cv
16.645 155.078 16.5 155.289 16.301 155.453 cv
16.109 155.621 15.863 155.742 15.563 155.816 cv
15.266 155.895 14.914 155.934 14.504 155.93 cv
10.406 155.93 li
10.406 156.91 li
10.41 156.988 10.367 157.051 10.281 157.098 cv
10.199 157.145 10.066 157.168 9.875 157.168 cv
9.781 157.168 9.699 157.164 9.629 157.148 cv
9.566 157.141 9.508 157.121 9.461 157.098 cv
9.418 157.078 9.387 157.051 9.367 157.016 cv
9.352 156.984 9.344 156.949 9.34 156.902 cv
9.34 155.93 li
7.672 155.93 li
7.641 155.934 7.605 155.922 7.57 155.902 cv
7.543 155.887 7.516 155.855 7.488 155.801 cv
7.469 155.754 7.453 155.687 7.438 155.602 cv
7.43 155.523 7.422 155.418 7.422 155.289 cv
7.422 155.16 7.43 155.055 7.438 154.973 cv
7.453 154.891 7.469 154.824 7.488 154.777 cv
7.516 154.73 7.543 154.699 7.57 154.676 cv
7.605 154.66 7.641 154.648 7.672 154.645 cv
9.34 154.645 li
9.34 152.844 li
9.344 152.805 9.352 152.77 9.367 152.734 cv
9.387 152.707 9.418 152.68 9.461 152.652 cv
9.508 152.633 9.566 152.617 9.629 152.602 cv
9.699 152.594 9.781 152.586 9.875 152.586 cv
10.066 152.586 10.199 152.609 10.281 152.656 cv
10.367 152.703 10.41 152.766 10.406 152.844 cv
10.406 154.645 li
14.32 154.645 li
14.805 154.648 15.168 154.578 15.414 154.43 cv
15.664 154.289 15.789 154.031 15.785 153.66 cv
15.789 153.547 15.777 153.441 15.75 153.344 cv
15.73 153.254 15.707 153.172 15.676 153.094 cv
15.652 153.023 15.625 152.961 15.602 152.906 cv
15.578 152.859 15.566 152.812 15.566 152.766 cv
15.566 152.742 15.574 152.715 15.586 152.691 cv
15.602 152.668 15.625 152.652 15.66 152.637 cv
15.699 152.629 15.75 152.617 15.809 152.602 cv
15.875 152.594 15.953 152.586 16.039 152.586 cv
cp
f
14.645 146.453 mo
15.008 146.457 15.328 146.523 15.605 146.652 cv
15.887 146.785 16.121 146.973 16.313 147.215 cv
16.508 147.461 16.652 147.754 16.75 148.09 cv
16.848 148.43 16.895 148.801 16.898 149.203 cv
16.895 149.457 16.875 149.695 16.84 149.918 cv
16.797 150.145 16.75 150.344 16.691 150.523 cv
16.633 150.703 16.57 150.855 16.504 150.98 cv
16.441 151.105 16.383 151.199 16.328 151.254 cv
16.277 151.312 16.207 151.352 16.109 151.375 cv
16.02 151.402 15.891 151.414 15.73 151.414 cv
15.633 151.414 15.551 151.41 15.48 151.398 cv
15.414 151.391 15.359 151.379 15.316 151.359 cv
15.277 151.348 15.246 151.324 15.227 151.297 cv
15.211 151.27 15.203 151.238 15.199 151.199 cv
15.203 151.145 15.238 151.059 15.305 150.945 cv
15.379 150.836 15.457 150.699 15.535 150.531 cv
15.621 150.371 15.695 150.18 15.766 149.953 cv
15.836 149.734 15.871 149.477 15.871 149.18 cv
15.871 148.965 15.848 148.766 15.801 148.586 cv
15.754 148.41 15.688 148.258 15.594 148.129 cv
15.508 148 15.391 147.898 15.246 147.828 cv
15.109 147.758 14.941 147.723 14.746 147.723 cv
14.551 147.723 14.387 147.773 14.25 147.875 cv
14.117 147.977 13.996 148.113 13.891 148.277 cv
13.789 148.445 13.699 148.629 13.613 148.836 cv
13.535 149.047 13.449 149.262 13.359 149.48 cv
13.273 149.699 13.172 149.914 13.059 150.125 cv
12.949 150.336 12.816 150.527 12.652 150.691 cv
12.496 150.863 12.301 150.996 12.074 151.094 cv
11.852 151.199 11.586 151.25 11.273 151.246 cv
11 151.25 10.734 151.195 10.48 151.086 cv
10.23 150.98 10.012 150.82 9.82 150.605 cv
9.633 150.395 9.48 150.129 9.363 149.809 cv
9.25 149.488 9.191 149.117 9.191 148.687 cv
9.191 148.504 9.207 148.316 9.238 148.129 cv
9.27 147.945 9.309 147.777 9.355 147.621 cv
9.402 147.473 9.453 147.344 9.508 147.234 cv
9.563 147.133 9.613 147.051 9.652 146.992 cv
9.699 146.941 9.734 146.906 9.762 146.883 cv
9.793 146.867 9.828 146.852 9.863 146.844 cv
9.906 146.836 9.953 146.828 10.008 146.82 cv
10.066 146.812 10.137 146.809 10.219 146.809 cv
10.309 146.809 10.387 146.812 10.449 146.82 cv
10.52 146.828 10.57 146.844 10.609 146.859 cv
10.652 146.883 10.684 146.902 10.699 146.926 cv
10.719 146.953 10.727 146.984 10.727 147.012 cv
10.727 147.062 10.699 147.129 10.641 147.215 cv
10.586 147.305 10.523 147.418 10.457 147.559 cv
10.395 147.699 10.336 147.867 10.273 148.055 cv
10.219 148.246 10.188 148.461 10.188 148.703 cv
10.188 148.926 10.215 149.117 10.262 149.281 cv
10.316 149.449 10.387 149.586 10.473 149.691 cv
10.566 149.797 10.672 149.879 10.797 149.93 cv
10.922 149.988 11.059 150.016 11.203 150.012 cv
11.406 150.016 11.574 149.965 11.711 149.859 cv
11.852 149.758 11.973 149.621 12.074 149.453 cv
12.18 149.289 12.273 149.098 12.355 148.883 cv
12.441 148.672 12.527 148.457 12.613 148.234 cv
12.703 148.016 12.805 147.797 12.91 147.578 cv
13.02 147.363 13.148 147.172 13.305 147.004 cv
13.461 146.84 13.648 146.707 13.867 146.605 cv
14.086 146.508 14.348 146.457 14.645 146.453 cv
cp
f
12.566 142.012 mo
13.152 142.012 13.734 142.051 14.309 142.121 cv
14.883 142.199 15.449 142.309 16.012 142.449 cv
16.57 142.598 17.121 142.773 17.664 142.984 cv
18.207 143.195 18.742 143.441 19.273 143.719 cv
19.297 143.738 19.32 143.762 19.344 143.789 cv
19.363 143.824 19.383 143.863 19.398 143.91 cv
19.414 143.961 19.422 144.02 19.43 144.086 cv
19.43 144.156 19.434 144.238 19.438 144.328 cv
19.434 144.465 19.426 144.57 19.418 144.645 cv
19.402 144.723 19.383 144.777 19.355 144.809 cv
19.324 144.844 19.289 144.859 19.246 144.855 cv
19.199 144.855 19.145 144.84 19.086 144.812 cv
18.035 144.336 16.965 143.977 15.867 143.73 cv
14.77 143.488 13.66 143.367 12.543 143.363 cv
11.434 143.367 10.328 143.488 9.227 143.73 cv
8.129 143.977 7.059 144.344 6.012 144.828 cv
5.969 144.852 5.926 144.859 5.879 144.852 cv
5.84 144.852 5.805 144.828 5.777 144.781 cv
5.754 144.742 5.734 144.684 5.715 144.609 cv
5.703 144.539 5.695 144.441 5.691 144.32 cv
5.695 144.211 5.699 144.121 5.703 144.047 cv
5.715 143.977 5.727 143.918 5.738 143.871 cv
5.758 143.828 5.773 143.797 5.785 143.773 cv
5.805 143.758 5.82 143.742 5.84 143.727 cv
6.906 143.195 8.004 142.773 9.125 142.469 cv
10.254 142.164 11.398 142.012 12.566 142.012 cv
cp
f
255.852 529.918 mo
255.848 530.023 255.832 530.113 255.797 530.184 cv
255.762 530.262 255.715 530.32 255.66 530.363 cv
255.602 530.414 255.539 530.449 255.473 530.465 cv
255.398 530.488 255.328 530.496 255.266 530.496 cv
254.82 530.496 li
254.68 530.496 254.559 530.484 254.453 530.453 cv
254.348 530.43 254.25 530.375 254.156 530.297 cv
254.063 530.223 253.969 530.121 253.875 529.988 cv
253.781 529.859 253.68 529.695 253.574 529.492 cv
250.5 523.754 li
250.336 523.461 250.172 523.152 250.012 522.824 cv
249.844 522.504 249.691 522.187 249.555 521.879 cv
249.539 521.879 li
249.547 522.254 249.555 522.637 249.563 523.023 cv
249.566 523.414 249.566 523.801 249.57 524.184 cv
249.57 530.27 li
249.566 530.309 249.555 530.344 249.535 530.375 cv
249.512 530.41 249.477 530.437 249.426 530.453 cv
249.371 530.473 249.301 530.484 249.219 530.5 cv
249.133 530.512 249.027 530.52 248.898 530.52 cv
248.762 530.52 248.652 530.512 248.57 530.5 cv
248.484 530.484 248.418 530.473 248.371 530.453 cv
248.32 530.437 248.285 530.41 248.262 530.375 cv
248.238 530.344 248.227 530.309 248.23 530.27 cv
248.23 520.965 li
248.227 520.758 248.285 520.609 248.406 520.52 cv
248.523 520.434 248.652 520.391 248.793 520.387 cv
249.453 520.387 li
249.605 520.391 249.738 520.402 249.844 520.426 cv
249.945 520.453 250.039 520.496 250.125 520.555 cv
250.207 520.617 250.285 520.699 250.367 520.805 cv
250.441 520.914 250.523 521.051 250.609 521.207 cv
252.977 525.633 li
253.121 525.906 253.262 526.172 253.398 526.426 cv
253.531 526.684 253.66 526.937 253.789 527.184 cv
253.91 527.437 254.035 527.684 254.16 527.922 cv
254.281 528.164 254.402 528.406 254.527 528.648 cv
254.535 528.648 li
254.523 528.242 254.516 527.812 254.516 527.367 cv
254.508 526.922 254.508 526.496 254.512 526.086 cv
254.512 520.613 li
254.508 520.578 254.52 520.543 254.543 520.512 cv
254.566 520.48 254.602 520.453 254.656 520.43 cv
254.703 520.406 254.773 520.391 254.859 520.379 cv
254.945 520.371 255.055 520.367 255.195 520.363 cv
255.313 520.367 255.418 520.371 255.508 520.379 cv
255.594 520.391 255.66 520.406 255.711 520.43 cv
255.758 520.453 255.793 520.48 255.816 520.512 cv
255.836 520.543 255.848 520.578 255.852 520.613 cv
cp
f
264.398 530.277 mo
264.395 530.324 264.387 530.359 264.371 530.383 cv
264.352 530.414 264.316 530.437 264.273 530.457 cv
264.227 530.477 264.168 530.488 264.094 530.504 cv
264.016 530.512 263.922 530.52 263.816 530.52 cv
263.691 530.52 263.594 530.512 263.523 530.504 cv
263.445 530.488 263.387 530.477 263.344 530.457 cv
263.297 530.437 263.266 530.414 263.254 530.383 cv
263.234 530.359 263.227 530.324 263.23 530.277 cv
263.23 529.352 li
262.828 529.797 262.434 530.117 262.047 530.316 cv
261.652 530.52 261.258 530.617 260.863 530.621 cv
260.391 530.617 259.996 530.543 259.68 530.387 cv
259.359 530.234 259.102 530.023 258.906 529.754 cv
258.703 529.488 258.563 529.176 258.48 528.816 cv
258.391 528.461 258.348 528.027 258.352 527.52 cv
258.352 523.266 li
258.348 523.227 258.355 523.191 258.379 523.16 cv
258.395 523.133 258.43 523.109 258.484 523.082 cv
258.531 523.062 258.602 523.047 258.688 523.035 cv
258.77 523.031 258.871 523.027 259 523.023 cv
259.121 523.027 259.227 523.031 259.313 523.035 cv
259.395 523.047 259.461 523.062 259.508 523.082 cv
259.555 523.109 259.59 523.133 259.613 523.16 cv
259.633 523.191 259.641 523.227 259.645 523.266 cv
259.645 527.348 li
259.641 527.762 259.672 528.09 259.734 528.336 cv
259.793 528.582 259.883 528.793 260.008 528.965 cv
260.125 529.145 260.281 529.277 260.473 529.371 cv
260.656 529.469 260.875 529.52 261.125 529.516 cv
261.445 529.52 261.766 529.402 262.09 529.172 cv
262.406 528.945 262.746 528.609 263.105 528.164 cv
263.105 523.266 li
263.105 523.227 263.113 523.191 263.133 523.16 cv
263.148 523.133 263.184 523.109 263.238 523.082 cv
263.289 523.062 263.355 523.047 263.438 523.035 cv
263.516 523.031 263.621 523.027 263.754 523.023 cv
263.875 523.027 263.98 523.031 264.066 523.035 cv
264.148 523.047 264.211 523.062 264.258 523.082 cv
264.301 523.109 264.336 523.133 264.363 523.16 cv
264.383 523.191 264.395 523.227 264.398 523.266 cv
cp
f
277.176 530.277 mo
277.172 530.324 277.164 530.359 277.145 530.383 cv
277.121 530.414 277.086 530.437 277.043 530.457 cv
276.992 530.477 276.926 530.488 276.848 530.504 cv
276.762 530.512 276.66 530.52 276.535 530.52 cv
276.402 530.52 276.293 530.512 276.215 530.504 cv
276.129 530.488 276.063 530.477 276.016 530.457 cv
275.961 530.437 275.926 530.414 275.91 530.383 cv
275.887 530.359 275.879 530.324 275.879 530.277 cv
275.879 526.016 li
275.879 525.723 275.852 525.453 275.801 525.207 cv
275.746 524.965 275.664 524.754 275.551 524.574 cv
275.438 524.398 275.293 524.262 275.117 524.168 cv
274.938 524.074 274.727 524.027 274.492 524.027 cv
274.195 524.027 273.898 524.145 273.602 524.371 cv
273.297 524.605 272.969 524.937 272.613 525.375 cv
272.613 530.277 li
272.609 530.324 272.598 530.359 272.582 530.383 cv
272.559 530.414 272.527 530.437 272.48 530.457 cv
272.43 530.477 272.363 530.488 272.281 530.504 cv
272.195 530.512 272.09 530.52 271.969 530.52 cv
271.848 530.52 271.746 530.512 271.66 530.504 cv
271.574 530.488 271.504 530.477 271.457 530.457 cv
271.402 530.437 271.371 530.414 271.355 530.383 cv
271.336 530.359 271.324 530.324 271.328 530.277 cv
271.328 526.016 li
271.324 525.723 271.297 525.453 271.242 525.207 cv
271.184 524.965 271.098 524.754 270.984 524.574 cv
270.871 524.398 270.727 524.262 270.555 524.168 cv
270.375 524.074 270.168 524.027 269.934 524.027 cv
269.633 524.027 269.336 524.145 269.035 524.371 cv
268.734 524.605 268.406 524.937 268.055 525.375 cv
268.055 530.277 li
268.051 530.324 268.039 530.359 268.023 530.383 cv
268 530.414 267.969 530.437 267.922 530.457 cv
267.875 530.477 267.809 530.488 267.73 530.504 cv
267.645 530.512 267.539 530.52 267.41 530.52 cv
267.281 530.52 267.176 530.512 267.098 530.504 cv
267.012 530.488 266.945 530.477 266.898 530.457 cv
266.844 530.437 266.813 530.414 266.797 530.383 cv
266.777 530.359 266.766 530.324 266.77 530.277 cv
266.77 523.266 li
266.766 523.227 266.773 523.191 266.793 523.16 cv
266.805 523.133 266.836 523.109 266.887 523.082 cv
266.93 523.062 266.992 523.047 267.066 523.035 cv
267.137 523.031 267.23 523.027 267.355 523.023 cv
267.465 523.027 267.563 523.031 267.641 523.035 cv
267.715 523.047 267.773 523.062 267.816 523.082 cv
267.855 523.109 267.883 523.133 267.902 523.16 cv
267.918 523.191 267.926 523.227 267.93 523.266 cv
267.93 524.191 li
268.32 523.75 268.703 523.43 269.078 523.223 cv
269.445 523.02 269.824 522.914 270.207 522.914 cv
270.496 522.914 270.754 522.949 270.988 523.016 cv
271.215 523.086 271.422 523.18 271.602 523.301 cv
271.777 523.422 271.926 523.566 272.055 523.734 cv
272.176 523.906 272.281 524.098 272.367 524.301 cv
272.598 524.051 272.82 523.836 273.031 523.656 cv
273.242 523.484 273.445 523.34 273.641 523.227 cv
273.836 523.121 274.023 523.043 274.207 522.988 cv
274.391 522.941 274.578 522.914 274.766 522.914 cv
275.219 522.914 275.598 522.996 275.902 523.152 cv
276.207 523.316 276.453 523.527 276.648 523.789 cv
276.836 524.055 276.973 524.363 277.055 524.719 cv
277.133 525.074 277.172 525.449 277.176 525.844 cv
cp
f
285.977 526.676 mo
285.973 527.285 285.906 527.836 285.777 528.32 cv
285.641 528.809 285.445 529.223 285.191 529.562 cv
284.934 529.906 284.617 530.168 284.246 530.348 cv
283.871 530.531 283.445 530.617 282.961 530.621 cv
282.734 530.617 282.527 530.598 282.34 530.555 cv
282.152 530.508 281.965 530.437 281.785 530.34 cv
281.598 530.242 281.418 530.117 281.238 529.965 cv
281.055 529.816 280.863 529.637 280.664 529.422 cv
280.664 530.277 li
280.664 530.324 280.652 530.359 280.633 530.387 cv
280.609 530.422 280.574 530.445 280.531 530.461 cv
280.48 530.477 280.422 530.488 280.355 530.504 cv
280.281 530.512 280.191 530.52 280.086 530.52 cv
279.977 530.52 279.891 530.512 279.82 530.504 cv
279.746 530.488 279.684 530.477 279.641 530.461 cv
279.59 530.445 279.559 530.422 279.547 530.387 cv
279.527 530.359 279.52 530.324 279.523 530.277 cv
279.523 519.867 li
279.52 519.828 279.531 519.793 279.551 519.758 cv
279.566 519.73 279.598 519.703 279.652 519.68 cv
279.699 519.66 279.766 519.645 279.852 519.633 cv
279.93 519.625 280.035 519.621 280.164 519.617 cv
280.293 519.621 280.398 519.625 280.484 519.633 cv
280.563 519.645 280.629 519.66 280.676 519.68 cv
280.723 519.703 280.754 519.73 280.777 519.758 cv
280.793 519.793 280.805 519.828 280.809 519.867 cv
280.809 524.066 li
281.016 523.855 281.219 523.676 281.414 523.531 cv
281.609 523.387 281.797 523.27 281.984 523.176 cv
282.168 523.09 282.355 523.023 282.547 522.977 cv
282.73 522.937 282.93 522.914 283.141 522.914 cv
283.645 522.914 284.078 523.016 284.445 523.219 cv
284.805 523.422 285.098 523.695 285.324 524.031 cv
285.547 524.375 285.715 524.773 285.82 525.23 cv
285.922 525.687 285.973 526.168 285.977 526.676 cv
cp
284.645 526.824 mo
284.641 526.469 284.613 526.121 284.563 525.781 cv
284.504 525.445 284.41 525.148 284.273 524.887 cv
284.137 524.629 283.957 524.418 283.734 524.258 cv
283.508 524.102 283.227 524.023 282.895 524.02 cv
282.727 524.023 282.563 524.047 282.402 524.09 cv
282.238 524.141 282.074 524.219 281.906 524.324 cv
281.738 524.437 281.563 524.578 281.387 524.746 cv
281.203 524.922 281.012 525.137 280.809 525.391 cv
280.809 528.187 li
281.164 528.621 281.504 528.953 281.828 529.176 cv
282.152 529.406 282.488 529.52 282.84 529.516 cv
283.16 529.52 283.438 529.441 283.672 529.281 cv
283.898 529.129 284.086 528.922 284.23 528.66 cv
284.375 528.406 284.48 528.117 284.547 527.797 cv
284.609 527.48 284.641 527.156 284.645 526.824 cv
cp
f
293.887 526.469 mo
293.883 526.672 293.832 526.812 293.734 526.898 cv
293.629 526.984 293.512 527.027 293.387 527.027 cv
288.77 527.027 li
288.766 527.418 288.805 527.77 288.887 528.082 cv
288.961 528.395 289.094 528.664 289.277 528.883 cv
289.457 529.109 289.691 529.281 289.988 529.398 cv
290.277 529.523 290.637 529.582 291.063 529.578 cv
291.395 529.582 291.691 529.555 291.953 529.496 cv
292.215 529.445 292.441 529.383 292.633 529.312 cv
292.82 529.246 292.977 529.187 293.102 529.129 cv
293.223 529.078 293.316 529.051 293.379 529.047 cv
293.414 529.051 293.445 529.059 293.477 529.074 cv
293.504 529.094 293.527 529.121 293.547 529.156 cv
293.559 529.195 293.57 529.246 293.582 529.309 cv
293.586 529.375 293.59 529.453 293.594 529.547 cv
293.59 529.617 293.586 529.676 293.586 529.723 cv
293.578 529.77 293.574 529.812 293.566 529.852 cv
293.559 529.891 293.543 529.926 293.527 529.957 cv
293.504 529.988 293.48 530.02 293.457 530.047 cv
293.426 530.078 293.344 530.125 293.203 530.187 cv
293.063 530.254 292.879 530.316 292.656 530.379 cv
292.43 530.441 292.172 530.496 291.879 530.547 cv
291.586 530.594 291.273 530.617 290.941 530.621 cv
290.363 530.617 289.855 530.539 289.426 530.379 cv
288.988 530.219 288.625 529.98 288.332 529.664 cv
288.031 529.348 287.809 528.953 287.66 528.473 cv
287.512 527.996 287.438 527.437 287.438 526.801 cv
287.438 526.203 287.512 525.664 287.668 525.18 cv
287.82 524.703 288.047 524.293 288.344 523.957 cv
288.637 523.621 288.992 523.363 289.406 523.184 cv
289.82 523.004 290.285 522.914 290.801 522.914 cv
291.352 522.914 291.82 523.004 292.207 523.18 cv
292.594 523.359 292.91 523.598 293.164 523.895 cv
293.41 524.195 293.594 524.547 293.711 524.945 cv
293.824 525.352 293.883 525.781 293.887 526.234 cv
cp
292.594 526.086 mo
292.609 525.41 292.457 524.879 292.141 524.496 cv
291.824 524.113 291.355 523.922 290.738 523.918 cv
290.414 523.922 290.133 523.98 289.895 524.098 cv
289.652 524.219 289.453 524.379 289.293 524.574 cv
289.129 524.773 289.004 525.004 288.918 525.266 cv
288.828 525.527 288.777 525.801 288.77 526.086 cv
cp
f
299.953 523.723 mo
299.949 523.84 299.949 523.937 299.945 524.012 cv
299.938 524.094 299.926 524.156 299.914 524.195 cv
299.895 524.242 299.875 524.273 299.855 524.297 cv
299.828 524.32 299.797 524.332 299.758 524.332 cv
299.715 524.332 299.664 524.32 299.605 524.297 cv
299.543 524.273 299.473 524.25 299.402 524.227 cv
299.324 524.203 299.242 524.184 299.148 524.16 cv
299.055 524.145 298.953 524.133 298.844 524.129 cv
298.711 524.133 298.582 524.16 298.461 524.207 cv
298.336 524.262 298.207 524.348 298.07 524.465 cv
297.93 524.59 297.785 524.746 297.637 524.941 cv
297.484 525.137 297.316 525.379 297.137 525.664 cv
297.137 530.277 li
297.133 530.324 297.121 530.359 297.105 530.383 cv
297.082 530.414 297.051 530.437 297.004 530.457 cv
296.957 530.477 296.891 530.488 296.813 530.504 cv
296.727 530.512 296.621 530.52 296.492 530.52 cv
296.363 530.52 296.258 530.512 296.18 530.504 cv
296.094 530.488 296.027 530.477 295.98 530.457 cv
295.926 530.437 295.895 530.414 295.879 530.383 cv
295.859 530.359 295.848 530.324 295.852 530.277 cv
295.852 523.266 li
295.848 523.227 295.855 523.191 295.875 523.16 cv
295.887 523.133 295.918 523.109 295.969 523.082 cv
296.012 523.062 296.074 523.047 296.148 523.035 cv
296.219 523.031 296.313 523.027 296.438 523.023 cv
296.547 523.027 296.645 523.031 296.723 523.035 cv
296.797 523.047 296.855 523.062 296.898 523.082 cv
296.938 523.109 296.965 523.133 296.984 523.16 cv
297 523.191 297.008 523.227 297.012 523.266 cv
297.012 524.285 li
297.199 524.004 297.383 523.777 297.555 523.602 cv
297.723 523.426 297.883 523.285 298.035 523.184 cv
298.184 523.082 298.332 523.012 298.48 522.973 cv
298.629 522.934 298.777 522.914 298.93 522.914 cv
298.996 522.914 299.074 522.918 299.16 522.926 cv
299.246 522.934 299.336 522.949 299.43 522.969 cv
299.523 522.992 299.605 523.016 299.684 523.039 cv
299.754 523.066 299.809 523.094 299.844 523.117 cv
299.871 523.148 299.891 523.172 299.906 523.191 cv
299.914 523.219 299.926 523.25 299.934 523.281 cv
299.941 523.32 299.945 523.371 299.949 523.441 cv
299.949 523.512 299.949 523.605 299.953 523.723 cv
cp
f
311.711 526.691 mo
311.707 527.27 311.633 527.797 311.484 528.273 cv
311.332 528.758 311.105 529.172 310.809 529.516 cv
310.508 529.867 310.133 530.137 309.688 530.328 cv
309.234 530.523 308.715 530.617 308.125 530.621 cv
307.547 530.617 307.043 530.535 306.617 530.363 cv
306.188 530.195 305.832 529.945 305.547 529.617 cv
305.258 529.289 305.043 528.895 304.906 528.426 cv
304.766 527.961 304.699 527.43 304.699 526.832 cv
304.699 526.266 304.77 525.738 304.918 525.258 cv
305.063 524.777 305.289 524.363 305.59 524.012 cv
305.887 523.664 306.258 523.395 306.707 523.203 cv
307.152 523.012 307.676 522.914 308.273 522.914 cv
308.852 522.914 309.352 523 309.781 523.172 cv
310.207 523.344 310.566 523.594 310.852 523.922 cv
311.137 524.25 311.352 524.648 311.496 525.113 cv
311.637 525.582 311.707 526.109 311.711 526.691 cv
cp
310.379 526.777 mo
310.375 526.402 310.34 526.043 310.273 525.703 cv
310.199 525.367 310.082 525.074 309.922 524.816 cv
309.758 524.566 309.539 524.363 309.262 524.211 cv
308.98 524.066 308.633 523.992 308.223 523.988 cv
307.836 523.992 307.508 524.059 307.234 524.191 cv
306.957 524.328 306.73 524.52 306.555 524.766 cv
306.375 525.012 306.242 525.305 306.16 525.641 cv
306.07 525.98 306.027 526.348 306.031 526.746 cv
306.027 527.133 306.063 527.496 306.137 527.832 cv
306.203 528.172 306.32 528.465 306.488 528.715 cv
306.652 528.969 306.875 529.172 307.152 529.316 cv
307.43 529.469 307.777 529.543 308.191 529.539 cv
308.566 529.543 308.895 529.473 309.176 529.336 cv
309.453 529.203 309.68 529.016 309.859 528.766 cv
310.035 528.523 310.164 528.23 310.25 527.895 cv
310.332 527.559 310.375 527.187 310.379 526.777 cv
cp
f
317.441 520.379 mo
317.438 520.48 317.434 520.559 317.426 520.617 cv
317.414 520.68 317.402 520.73 317.391 520.762 cv
317.375 520.801 317.359 520.824 317.34 520.836 cv
317.316 520.852 317.289 520.859 317.262 520.855 cv
317.223 520.859 317.176 520.848 317.125 520.82 cv
317.066 520.801 317 520.773 316.926 520.742 cv
316.844 520.715 316.754 520.687 316.648 520.664 cv
316.539 520.641 316.414 520.629 316.281 520.629 cv
316.086 520.629 315.922 520.66 315.789 520.723 cv
315.648 520.785 315.539 520.883 315.461 521.016 cv
315.375 521.148 315.316 521.32 315.281 521.531 cv
315.242 521.742 315.223 522 315.227 522.297 cv
315.227 523.062 li
316.793 523.062 li
316.832 523.066 316.867 523.074 316.898 523.09 cv
316.926 523.109 316.953 523.141 316.977 523.184 cv
317 523.23 317.016 523.289 317.031 523.352 cv
317.039 523.422 317.047 523.504 317.051 523.598 cv
317.047 523.789 317.023 523.922 316.98 524.004 cv
316.93 524.09 316.867 524.133 316.793 524.129 cv
315.227 524.129 li
315.227 530.277 li
315.223 530.324 315.215 530.359 315.195 530.383 cv
315.172 530.414 315.137 530.437 315.09 530.457 cv
315.039 530.477 314.973 530.488 314.891 530.504 cv
314.805 530.512 314.699 530.52 314.582 530.52 cv
314.453 530.52 314.352 530.512 314.27 530.504 cv
314.184 530.488 314.117 530.477 314.07 530.457 cv
314.02 530.437 313.984 530.414 313.965 530.383 cv
313.941 530.359 313.93 530.324 313.934 530.277 cv
313.934 524.129 li
312.945 524.129 li
312.859 524.133 312.797 524.09 312.758 524.004 cv
312.715 523.922 312.691 523.789 312.695 523.598 cv
312.691 523.504 312.699 523.422 312.711 523.352 cv
312.719 523.289 312.734 523.23 312.758 523.184 cv
312.777 523.141 312.801 523.109 312.836 523.09 cv
312.863 523.074 312.902 523.066 312.945 523.062 cv
313.934 523.062 li
313.934 522.336 li
313.93 521.852 313.977 521.434 314.07 521.078 cv
314.16 520.73 314.297 520.441 314.484 520.219 cv
314.668 519.996 314.902 519.832 315.191 519.723 cv
315.473 519.617 315.809 519.562 316.195 519.562 cv
316.371 519.562 316.547 519.582 316.723 519.613 cv
316.891 519.652 317.023 519.687 317.121 519.723 cv
317.211 519.766 317.273 519.801 317.309 519.828 cv
317.336 519.863 317.363 519.902 317.387 519.949 cv
317.406 520 317.418 520.062 317.43 520.129 cv
317.434 520.203 317.438 520.285 317.441 520.379 cv
cp
f
327.637 527.645 mo
327.633 528.117 327.547 528.539 327.375 528.906 cv
327.199 529.281 326.957 529.594 326.648 529.848 cv
326.34 530.105 325.977 530.297 325.559 530.426 cv
325.137 530.555 324.688 530.617 324.207 530.621 cv
323.867 530.617 323.551 530.59 323.266 530.535 cv
322.977 530.477 322.723 530.41 322.496 530.324 cv
322.27 530.246 322.078 530.16 321.926 530.066 cv
321.77 529.98 321.664 529.902 321.605 529.84 cv
321.547 529.777 321.504 529.699 321.477 529.605 cv
321.445 529.512 321.43 529.383 321.434 529.219 cv
321.43 529.105 321.434 529.012 321.449 528.934 cv
321.457 528.859 321.473 528.797 321.496 528.75 cv
321.512 528.703 321.539 528.672 321.574 528.652 cv
321.602 528.637 321.637 528.629 321.68 528.625 cv
321.75 528.629 321.852 528.672 321.988 528.758 cv
322.117 528.848 322.289 528.945 322.5 529.047 cv
322.707 529.156 322.957 529.254 323.25 529.34 cv
323.543 529.434 323.883 529.477 324.27 529.477 cv
324.559 529.477 324.824 529.437 325.066 529.359 cv
325.305 529.281 325.512 529.172 325.691 529.027 cv
325.863 528.887 326 528.711 326.094 528.5 cv
326.188 528.293 326.234 528.059 326.234 527.793 cv
326.234 527.512 326.168 527.266 326.039 527.059 cv
325.906 526.859 325.734 526.684 325.523 526.527 cv
325.309 526.379 325.066 526.238 324.793 526.105 cv
324.52 525.98 324.238 525.848 323.957 525.715 cv
323.668 525.582 323.391 525.437 323.121 525.273 cv
322.852 525.117 322.609 524.926 322.398 524.707 cv
322.18 524.488 322.008 524.234 321.879 523.937 cv
321.742 523.648 321.676 523.297 321.68 522.883 cv
321.676 522.465 321.754 522.09 321.91 521.758 cv
322.063 521.43 322.273 521.152 322.551 520.926 cv
322.82 520.707 323.145 520.535 323.523 520.418 cv
323.898 520.301 324.309 520.242 324.746 520.242 cv
324.965 520.242 325.188 520.262 325.418 520.301 cv
325.641 520.34 325.852 520.391 326.055 520.453 cv
326.25 520.52 326.43 520.594 326.59 520.672 cv
326.742 520.754 326.844 520.82 326.898 520.867 cv
326.945 520.922 326.98 520.961 326.996 520.984 cv
327.012 521.016 327.023 521.051 327.035 521.094 cv
327.043 521.141 327.051 521.195 327.059 521.254 cv
327.063 521.32 327.066 521.398 327.066 521.496 cv
327.066 521.59 327.063 521.676 327.055 521.746 cv
327.047 521.824 327.035 521.883 327.02 521.93 cv
327.004 521.977 326.98 522.012 326.953 522.035 cv
326.922 522.059 326.891 522.07 326.855 522.07 cv
326.797 522.07 326.707 522.035 326.586 521.965 cv
326.461 521.895 326.309 521.812 326.137 521.719 cv
325.957 521.629 325.75 521.547 325.512 521.469 cv
325.266 521.395 324.996 521.355 324.699 521.355 cv
324.418 521.355 324.172 521.395 323.965 521.469 cv
323.754 521.547 323.582 521.648 323.449 521.77 cv
323.313 521.895 323.211 522.039 323.145 522.211 cv
323.078 522.383 323.047 522.566 323.047 522.758 cv
323.047 523.043 323.109 523.285 323.238 523.484 cv
323.367 523.687 323.539 523.867 323.758 524.02 cv
323.969 524.18 324.215 524.32 324.492 524.449 cv
324.766 524.582 325.047 524.715 325.336 524.844 cv
325.621 524.977 325.902 525.121 326.176 525.277 cv
326.449 525.437 326.695 525.625 326.914 525.84 cv
327.129 526.059 327.301 526.312 327.438 526.605 cv
327.566 526.898 327.633 527.246 327.637 527.645 cv
cp
f
335.406 530.277 mo
335.402 530.324 335.395 530.359 335.379 530.383 cv
335.359 530.414 335.324 530.437 335.281 530.457 cv
335.234 530.477 335.176 530.488 335.102 530.504 cv
335.023 530.512 334.93 530.52 334.824 530.52 cv
334.699 530.52 334.602 530.512 334.531 530.504 cv
334.453 530.488 334.395 530.477 334.352 530.457 cv
334.305 530.437 334.273 530.414 334.262 530.383 cv
334.242 530.359 334.234 530.324 334.238 530.277 cv
334.238 529.352 li
333.836 529.797 333.441 530.117 333.055 530.316 cv
332.66 530.52 332.266 530.617 331.871 530.621 cv
331.398 530.617 331.004 530.543 330.688 530.387 cv
330.367 530.234 330.109 530.023 329.914 529.754 cv
329.711 529.488 329.57 529.176 329.488 528.816 cv
329.398 528.461 329.355 528.027 329.359 527.52 cv
329.359 523.266 li
329.355 523.227 329.363 523.191 329.387 523.16 cv
329.402 523.133 329.438 523.109 329.492 523.082 cv
329.539 523.062 329.609 523.047 329.695 523.035 cv
329.777 523.031 329.879 523.027 330.008 523.023 cv
330.129 523.027 330.234 523.031 330.32 523.035 cv
330.402 523.047 330.469 523.062 330.516 523.082 cv
330.563 523.109 330.598 523.133 330.621 523.16 cv
330.641 523.191 330.648 523.227 330.652 523.266 cv
330.652 527.348 li
330.648 527.762 330.68 528.09 330.742 528.336 cv
330.801 528.582 330.891 528.793 331.016 528.965 cv
331.133 529.145 331.289 529.277 331.48 529.371 cv
331.664 529.469 331.883 529.52 332.133 529.516 cv
332.453 529.52 332.773 529.402 333.098 529.172 cv
333.414 528.945 333.754 528.609 334.113 528.164 cv
334.113 523.266 li
334.113 523.227 334.121 523.191 334.141 523.16 cv
334.156 523.133 334.191 523.109 334.246 523.082 cv
334.297 523.062 334.363 523.047 334.445 523.035 cv
334.523 523.031 334.629 523.027 334.762 523.023 cv
334.883 523.027 334.988 523.031 335.074 523.035 cv
335.156 523.047 335.219 523.062 335.266 523.082 cv
335.309 523.109 335.344 523.133 335.371 523.16 cv
335.391 523.191 335.402 523.227 335.406 523.266 cv
cp
f
344.262 526.676 mo
344.258 527.285 344.191 527.836 344.063 528.32 cv
343.926 528.809 343.73 529.223 343.477 529.562 cv
343.219 529.906 342.902 530.168 342.531 530.348 cv
342.156 530.531 341.73 530.617 341.246 530.621 cv
341.02 530.617 340.813 530.598 340.625 530.555 cv
340.438 530.508 340.25 530.437 340.07 530.34 cv
339.883 530.242 339.703 530.117 339.523 529.965 cv
339.34 529.816 339.148 529.637 338.949 529.422 cv
338.949 530.277 li
338.949 530.324 338.938 530.359 338.918 530.387 cv
338.895 530.422 338.859 530.445 338.816 530.461 cv
338.766 530.477 338.707 530.488 338.641 530.504 cv
338.566 530.512 338.477 530.52 338.371 530.52 cv
338.262 530.52 338.176 530.512 338.105 530.504 cv
338.031 530.488 337.969 530.477 337.926 530.461 cv
337.875 530.445 337.844 530.422 337.832 530.387 cv
337.813 530.359 337.805 530.324 337.809 530.277 cv
337.809 519.867 li
337.805 519.828 337.816 519.793 337.836 519.758 cv
337.852 519.73 337.883 519.703 337.938 519.68 cv
337.984 519.66 338.051 519.645 338.137 519.633 cv
338.215 519.625 338.32 519.621 338.449 519.617 cv
338.578 519.621 338.684 519.625 338.77 519.633 cv
338.848 519.645 338.914 519.66 338.961 519.68 cv
339.008 519.703 339.039 519.73 339.063 519.758 cv
339.078 519.793 339.09 519.828 339.094 519.867 cv
339.094 524.066 li
339.301 523.855 339.504 523.676 339.699 523.531 cv
339.895 523.387 340.082 523.27 340.27 523.176 cv
340.453 523.09 340.641 523.023 340.832 522.977 cv
341.016 522.937 341.215 522.914 341.426 522.914 cv
341.93 522.914 342.363 523.016 342.73 523.219 cv
343.09 523.422 343.383 523.695 343.609 524.031 cv
343.832 524.375 344 524.773 344.105 525.23 cv
344.207 525.687 344.258 526.168 344.262 526.676 cv
cp
342.93 526.824 mo
342.926 526.469 342.898 526.121 342.848 525.781 cv
342.789 525.445 342.695 525.148 342.559 524.887 cv
342.422 524.629 342.242 524.418 342.02 524.258 cv
341.793 524.102 341.512 524.023 341.18 524.02 cv
341.012 524.023 340.848 524.047 340.688 524.09 cv
340.523 524.141 340.359 524.219 340.191 524.324 cv
340.023 524.437 339.848 524.578 339.672 524.746 cv
339.488 524.922 339.297 525.137 339.094 525.391 cv
339.094 528.187 li
339.449 528.621 339.789 528.953 340.113 529.176 cv
340.438 529.406 340.773 529.52 341.125 529.516 cv
341.445 529.52 341.723 529.441 341.957 529.281 cv
342.184 529.129 342.371 528.922 342.516 528.66 cv
342.66 528.406 342.766 528.117 342.832 527.797 cv
342.895 527.48 342.926 527.156 342.93 526.824 cv
cp
f
349.398 526.539 mo
349.398 526.742 349.375 526.879 349.328 526.957 cv
349.281 527.035 349.211 527.074 349.125 527.074 cv
345.867 527.074 li
345.773 527.074 345.707 527.035 345.66 526.953 cv
345.613 526.875 345.59 526.738 345.59 526.539 cv
345.59 526.344 345.613 526.203 345.66 526.125 cv
345.707 526.047 345.773 526.008 345.867 526.008 cv
349.125 526.008 li
349.164 526.008 349.203 526.016 349.238 526.031 cv
349.27 526.047 349.297 526.078 349.324 526.121 cv
349.344 526.168 349.363 526.223 349.379 526.289 cv
349.391 526.359 349.398 526.445 349.398 526.539 cv
cp
f
352.648 530.27 mo
352.645 530.312 352.637 530.348 352.617 530.379 cv
352.594 530.41 352.555 530.437 352.508 530.453 cv
352.453 530.473 352.387 530.484 352.301 530.5 cv
352.215 530.512 352.105 530.52 351.98 530.52 cv
351.852 530.52 351.746 530.512 351.66 530.5 cv
351.57 530.484 351.5 530.473 351.449 530.453 cv
351.395 530.437 351.359 530.41 351.34 530.379 cv
351.316 530.348 351.305 530.312 351.309 530.27 cv
351.309 520.59 li
351.305 520.551 351.316 520.516 351.344 520.48 cv
351.363 520.453 351.402 520.426 351.461 520.406 cv
351.512 520.391 351.582 520.375 351.672 520.359 cv
351.754 520.348 351.855 520.344 351.98 520.34 cv
352.105 520.344 352.215 520.348 352.301 520.359 cv
352.387 520.375 352.453 520.391 352.508 520.406 cv
352.555 520.426 352.594 520.453 352.617 520.48 cv
352.637 520.516 352.645 520.551 352.648 520.59 cv
cp
f
365.637 530.277 mo
365.633 530.324 365.625 530.359 365.605 530.383 cv
365.582 530.414 365.547 530.437 365.504 530.457 cv
365.453 530.477 365.387 530.488 365.309 530.504 cv
365.223 530.512 365.121 530.52 364.996 530.52 cv
364.863 530.52 364.754 530.512 364.676 530.504 cv
364.59 530.488 364.523 530.477 364.477 530.457 cv
364.422 530.437 364.387 530.414 364.371 530.383 cv
364.348 530.359 364.34 530.324 364.34 530.277 cv
364.34 526.016 li
364.34 525.723 364.313 525.453 364.262 525.207 cv
364.207 524.965 364.125 524.754 364.012 524.574 cv
363.898 524.398 363.754 524.262 363.578 524.168 cv
363.398 524.074 363.188 524.027 362.953 524.027 cv
362.656 524.027 362.359 524.145 362.063 524.371 cv
361.758 524.605 361.43 524.937 361.074 525.375 cv
361.074 530.277 li
361.07 530.324 361.059 530.359 361.043 530.383 cv
361.02 530.414 360.988 530.437 360.941 530.457 cv
360.891 530.477 360.824 530.488 360.742 530.504 cv
360.656 530.512 360.551 530.52 360.43 530.52 cv
360.309 530.52 360.207 530.512 360.121 530.504 cv
360.035 530.488 359.965 530.477 359.918 530.457 cv
359.863 530.437 359.832 530.414 359.816 530.383 cv
359.797 530.359 359.785 530.324 359.789 530.277 cv
359.789 526.016 li
359.785 525.723 359.758 525.453 359.703 525.207 cv
359.645 524.965 359.559 524.754 359.445 524.574 cv
359.332 524.398 359.188 524.262 359.016 524.168 cv
358.836 524.074 358.629 524.027 358.395 524.027 cv
358.094 524.027 357.797 524.145 357.496 524.371 cv
357.195 524.605 356.867 524.937 356.516 525.375 cv
356.516 530.277 li
356.512 530.324 356.5 530.359 356.484 530.383 cv
356.461 530.414 356.43 530.437 356.383 530.457 cv
356.336 530.477 356.27 530.488 356.191 530.504 cv
356.105 530.512 356 530.52 355.871 530.52 cv
355.742 530.52 355.637 530.512 355.559 530.504 cv
355.473 530.488 355.406 530.477 355.359 530.457 cv
355.305 530.437 355.273 530.414 355.258 530.383 cv
355.238 530.359 355.227 530.324 355.23 530.277 cv
355.23 523.266 li
355.227 523.227 355.234 523.191 355.254 523.16 cv
355.266 523.133 355.297 523.109 355.348 523.082 cv
355.391 523.062 355.453 523.047 355.527 523.035 cv
355.598 523.031 355.691 523.027 355.816 523.023 cv
355.926 523.027 356.023 523.031 356.102 523.035 cv
356.176 523.047 356.234 523.062 356.277 523.082 cv
356.316 523.109 356.344 523.133 356.363 523.16 cv
356.379 523.191 356.387 523.227 356.391 523.266 cv
356.391 524.191 li
356.781 523.75 357.164 523.43 357.539 523.223 cv
357.906 523.02 358.285 522.914 358.668 522.914 cv
358.957 522.914 359.215 522.949 359.449 523.016 cv
359.676 523.086 359.883 523.18 360.063 523.301 cv
360.238 523.422 360.387 523.566 360.516 523.734 cv
360.637 523.906 360.742 524.098 360.828 524.301 cv
361.059 524.051 361.281 523.836 361.492 523.656 cv
361.703 523.484 361.906 523.34 362.102 523.227 cv
362.297 523.121 362.484 523.043 362.668 522.988 cv
362.852 522.941 363.039 522.914 363.227 522.914 cv
363.68 522.914 364.059 522.996 364.363 523.152 cv
364.668 523.316 364.914 523.527 365.109 523.789 cv
365.297 524.055 365.434 524.363 365.516 524.719 cv
365.594 525.074 365.633 525.449 365.637 525.844 cv
cp
f
373.27 530.285 mo
373.266 530.348 373.246 530.395 373.207 530.426 cv
373.164 530.457 373.105 530.48 373.035 530.496 cv
372.957 530.512 372.852 530.52 372.715 530.52 cv
372.578 530.52 372.469 530.512 372.391 530.496 cv
372.305 530.48 372.246 530.457 372.215 530.426 cv
372.176 530.395 372.16 530.348 372.164 530.285 cv
372.164 529.586 li
371.855 529.914 371.512 530.168 371.137 530.348 cv
370.758 530.531 370.359 530.617 369.941 530.621 cv
369.566 530.617 369.234 530.57 368.938 530.477 cv
368.641 530.379 368.387 530.242 368.176 530.059 cv
367.965 529.879 367.801 529.656 367.684 529.391 cv
367.566 529.129 367.508 528.828 367.512 528.484 cv
367.508 528.094 367.586 527.75 367.75 527.457 cv
367.906 527.168 368.141 526.926 368.445 526.734 cv
368.746 526.543 369.113 526.398 369.551 526.301 cv
369.984 526.207 370.477 526.16 371.023 526.156 cv
371.992 526.156 li
371.992 525.609 li
371.988 525.34 371.961 525.102 371.906 524.895 cv
371.848 524.687 371.754 524.516 371.629 524.375 cv
371.496 524.238 371.332 524.133 371.133 524.062 cv
370.926 523.992 370.676 523.957 370.387 523.957 cv
370.066 523.957 369.781 523.996 369.531 524.07 cv
369.273 524.148 369.055 524.23 368.867 524.32 cv
368.68 524.414 368.52 524.5 368.395 524.57 cv
368.262 524.648 368.168 524.684 368.109 524.684 cv
368.066 524.684 368.031 524.676 368 524.652 cv
367.969 524.637 367.941 524.605 367.918 524.559 cv
367.895 524.52 367.875 524.465 367.867 524.398 cv
367.852 524.336 367.848 524.266 367.852 524.184 cv
367.848 524.059 367.855 523.953 367.879 523.875 cv
367.895 523.801 367.941 523.73 368.012 523.66 cv
368.082 523.594 368.203 523.516 368.375 523.426 cv
368.547 523.336 368.742 523.254 368.965 523.176 cv
369.188 523.105 369.434 523.043 369.699 522.988 cv
369.965 522.941 370.23 522.914 370.504 522.914 cv
371.004 522.914 371.434 522.973 371.785 523.086 cv
372.137 523.203 372.422 523.371 372.645 523.59 cv
372.859 523.812 373.02 524.086 373.121 524.41 cv
373.219 524.742 373.266 525.125 373.27 525.555 cv
cp
371.992 527.082 mo
370.891 527.082 li
370.535 527.086 370.23 527.117 369.973 527.172 cv
369.711 527.234 369.496 527.32 369.324 527.437 cv
369.152 527.555 369.027 527.695 368.949 527.859 cv
368.867 528.023 368.824 528.211 368.828 528.422 cv
368.824 528.789 368.941 529.082 369.172 529.293 cv
369.402 529.512 369.727 529.617 370.145 529.617 cv
370.48 529.617 370.793 529.531 371.082 529.359 cv
371.371 529.187 371.672 528.926 371.992 528.57 cv
cp
f
381.488 523.582 mo
381.484 523.766 381.461 523.898 381.414 523.977 cv
381.363 524.059 381.301 524.098 381.227 524.098 cv
380.219 524.098 li
380.398 524.285 380.527 524.492 380.602 524.719 cv
380.672 524.945 380.707 525.18 380.711 525.422 cv
380.707 525.828 380.641 526.187 380.516 526.5 cv
380.383 526.812 380.199 527.078 379.957 527.289 cv
379.715 527.508 379.426 527.672 379.098 527.785 cv
378.762 527.902 378.395 527.961 377.992 527.957 cv
377.703 527.961 377.43 527.922 377.176 527.844 cv
376.914 527.77 376.719 527.676 376.582 527.559 cv
376.488 527.656 376.41 527.762 376.352 527.879 cv
376.289 528 376.258 528.137 376.262 528.289 cv
376.258 528.473 376.344 528.625 376.516 528.742 cv
376.684 528.867 376.906 528.93 377.188 528.937 cv
379.02 529.016 li
379.367 529.027 379.684 529.074 379.977 529.16 cv
380.266 529.246 380.52 529.371 380.734 529.527 cv
380.945 529.687 381.113 529.879 381.234 530.109 cv
381.352 530.344 381.41 530.613 381.414 530.918 cv
381.41 531.238 381.344 531.543 381.211 531.836 cv
381.074 532.125 380.867 532.379 380.59 532.602 cv
380.309 532.82 379.953 532.996 379.523 533.125 cv
379.094 533.25 378.586 533.312 378 533.316 cv
377.43 533.312 376.945 533.266 376.551 533.172 cv
376.152 533.074 375.828 532.941 375.574 532.777 cv
375.32 532.609 375.137 532.414 375.023 532.184 cv
374.906 531.949 374.848 531.695 374.852 531.43 cv
374.848 531.258 374.867 531.094 374.914 530.934 cv
374.953 530.77 375.016 530.617 375.102 530.473 cv
375.184 530.328 375.293 530.191 375.422 530.055 cv
375.547 529.926 375.691 529.793 375.863 529.664 cv
375.605 529.535 375.418 529.371 375.297 529.172 cv
375.176 528.977 375.117 528.766 375.117 528.531 cv
375.117 528.219 375.18 527.934 375.309 527.684 cv
375.438 527.434 375.598 527.211 375.793 527.012 cv
375.629 526.82 375.504 526.605 375.41 526.363 cv
375.316 526.125 375.27 525.832 375.27 525.484 cv
375.27 525.09 375.336 524.73 375.473 524.41 cv
375.605 524.094 375.793 523.828 376.035 523.609 cv
376.273 523.395 376.559 523.227 376.895 523.105 cv
377.227 522.992 377.594 522.934 377.992 522.93 cv
378.203 522.934 378.402 522.945 378.586 522.965 cv
378.77 522.992 378.941 523.023 379.105 523.062 cv
381.227 523.062 li
381.313 523.066 381.379 523.109 381.422 523.191 cv
381.465 523.281 381.484 523.41 381.488 523.582 cv
cp
379.48 525.43 mo
379.477 524.957 379.344 524.586 379.086 524.312 cv
378.82 524.047 378.449 523.91 377.969 523.91 cv
377.715 523.91 377.496 523.953 377.316 524.035 cv
377.129 524.121 376.977 524.234 376.855 524.379 cv
376.734 524.527 376.645 524.695 376.586 524.883 cv
376.523 525.07 376.492 525.27 376.496 525.477 cv
376.492 525.941 376.625 526.305 376.887 526.57 cv
377.148 526.836 377.516 526.969 377.992 526.965 cv
378.242 526.969 378.461 526.93 378.652 526.844 cv
378.836 526.766 378.992 526.652 379.117 526.512 cv
379.238 526.371 379.328 526.207 379.391 526.016 cv
379.445 525.832 379.477 525.637 379.48 525.43 cv
cp
380.125 530.988 mo
380.121 530.684 379.996 530.453 379.754 530.289 cv
379.504 530.129 379.172 530.039 378.754 530.027 cv
376.938 529.965 li
376.77 530.098 376.633 530.223 376.531 530.336 cv
376.422 530.453 376.34 530.562 376.277 530.672 cv
376.215 530.777 376.172 530.883 376.148 530.988 cv
376.125 531.09 376.113 531.195 376.113 531.305 cv
376.113 531.641 376.281 531.895 376.625 532.074 cv
376.965 532.246 377.445 532.336 378.063 532.336 cv
378.449 532.336 378.773 532.297 379.039 532.223 cv
379.297 532.145 379.508 532.043 379.672 531.922 cv
379.828 531.793 379.945 531.652 380.02 531.492 cv
380.086 531.332 380.121 531.164 380.125 530.988 cv
cp
f
389.051 526.469 mo
389.047 526.672 388.996 526.812 388.898 526.898 cv
388.793 526.984 388.676 527.027 388.551 527.027 cv
383.934 527.027 li
383.93 527.418 383.969 527.77 384.051 528.082 cv
384.125 528.395 384.258 528.664 384.441 528.883 cv
384.621 529.109 384.855 529.281 385.152 529.398 cv
385.441 529.523 385.801 529.582 386.227 529.578 cv
386.559 529.582 386.855 529.555 387.117 529.496 cv
387.379 529.445 387.605 529.383 387.797 529.312 cv
387.984 529.246 388.141 529.187 388.266 529.129 cv
388.387 529.078 388.48 529.051 388.543 529.047 cv
388.578 529.051 388.609 529.059 388.641 529.074 cv
388.668 529.094 388.691 529.121 388.711 529.156 cv
388.723 529.195 388.734 529.246 388.746 529.309 cv
388.75 529.375 388.754 529.453 388.758 529.547 cv
388.754 529.617 388.75 529.676 388.75 529.723 cv
388.742 529.77 388.738 529.812 388.73 529.852 cv
388.723 529.891 388.707 529.926 388.691 529.957 cv
388.668 529.988 388.645 530.02 388.621 530.047 cv
388.59 530.078 388.508 530.125 388.367 530.187 cv
388.227 530.254 388.043 530.316 387.82 530.379 cv
387.594 530.441 387.336 530.496 387.043 530.547 cv
386.75 530.594 386.438 530.617 386.105 530.621 cv
385.527 530.617 385.02 530.539 384.59 530.379 cv
384.152 530.219 383.789 529.98 383.496 529.664 cv
383.195 529.348 382.973 528.953 382.824 528.473 cv
382.676 527.996 382.602 527.437 382.602 526.801 cv
382.602 526.203 382.676 525.664 382.832 525.18 cv
382.984 524.703 383.211 524.293 383.508 523.957 cv
383.801 523.621 384.156 523.363 384.57 523.184 cv
384.984 523.004 385.449 522.914 385.965 522.914 cv
386.516 522.914 386.984 523.004 387.371 523.18 cv
387.758 523.359 388.074 523.598 388.328 523.895 cv
388.574 524.195 388.758 524.547 388.875 524.945 cv
388.988 525.352 389.047 525.781 389.051 526.234 cv
cp
387.758 526.086 mo
387.773 525.41 387.621 524.879 387.305 524.496 cv
386.988 524.113 386.52 523.922 385.902 523.918 cv
385.578 523.922 385.297 523.98 385.059 524.098 cv
384.816 524.219 384.617 524.379 384.457 524.574 cv
384.293 524.773 384.168 525.004 384.082 525.266 cv
383.992 525.527 383.941 525.801 383.934 526.086 cv
cp
f
395.414 528.367 mo
395.41 528.73 395.344 529.051 395.215 529.328 cv
395.082 529.609 394.895 529.844 394.652 530.035 cv
394.406 530.23 394.113 530.375 393.777 530.473 cv
393.438 530.57 393.066 530.617 392.664 530.621 cv
392.41 530.617 392.172 530.598 391.949 530.562 cv
391.723 530.52 391.523 530.473 391.344 530.414 cv
391.164 530.355 391.012 530.293 390.887 530.227 cv
390.762 530.164 390.668 530.105 390.613 530.051 cv
390.555 530 390.516 529.93 390.492 529.832 cv
390.465 529.742 390.453 529.613 390.453 529.453 cv
390.453 529.355 390.457 529.273 390.469 529.203 cv
390.477 529.137 390.488 529.082 390.508 529.039 cv
390.52 529 390.543 528.969 390.57 528.949 cv
390.598 528.934 390.629 528.926 390.668 528.922 cv
390.723 528.926 390.809 528.961 390.922 529.027 cv
391.031 529.102 391.168 529.18 391.336 529.258 cv
391.496 529.344 391.688 529.418 391.914 529.488 cv
392.133 529.559 392.391 529.594 392.688 529.594 cv
392.902 529.594 393.102 529.57 393.281 529.523 cv
393.457 529.477 393.609 529.41 393.738 529.316 cv
393.867 529.23 393.969 529.113 394.039 528.969 cv
394.109 528.832 394.145 528.664 394.145 528.469 cv
394.145 528.273 394.094 528.109 393.992 527.973 cv
393.891 527.84 393.754 527.719 393.59 527.613 cv
393.422 527.512 393.238 527.422 393.031 527.336 cv
392.82 527.258 392.605 527.172 392.387 527.082 cv
392.168 526.996 391.953 526.895 391.742 526.781 cv
391.531 526.672 391.34 526.539 391.176 526.375 cv
391.004 526.219 390.871 526.023 390.773 525.797 cv
390.668 525.574 390.617 525.309 390.621 524.996 cv
390.617 524.723 390.672 524.457 390.781 524.203 cv
390.887 523.953 391.047 523.734 391.262 523.543 cv
391.473 523.355 391.738 523.203 392.059 523.086 cv
392.379 522.973 392.75 522.914 393.18 522.914 cv
393.363 522.914 393.551 522.93 393.738 522.961 cv
393.922 522.992 394.09 523.031 394.246 523.078 cv
394.395 523.125 394.523 523.176 394.633 523.23 cv
394.734 523.285 394.816 523.336 394.875 523.375 cv
394.926 523.422 394.961 523.457 394.984 523.484 cv
395 523.516 395.016 523.551 395.023 523.586 cv
395.031 523.629 395.039 523.676 395.047 523.73 cv
395.055 523.789 395.059 523.859 395.059 523.941 cv
395.059 524.031 395.055 524.109 395.047 524.172 cv
395.039 524.242 395.023 524.293 395.008 524.332 cv
394.984 524.375 394.965 524.406 394.941 524.422 cv
394.914 524.441 394.883 524.449 394.855 524.449 cv
394.805 524.449 394.738 524.422 394.652 524.363 cv
394.563 524.309 394.449 524.246 394.309 524.18 cv
394.168 524.117 394 524.059 393.813 523.996 cv
393.621 523.941 393.406 523.91 393.164 523.91 cv
392.941 523.91 392.75 523.937 392.586 523.984 cv
392.418 524.039 392.281 524.109 392.176 524.195 cv
392.07 524.289 391.988 524.395 391.938 524.52 cv
391.879 524.645 391.852 524.781 391.855 524.926 cv
391.852 525.129 391.902 525.297 392.008 525.434 cv
392.109 525.574 392.246 525.695 392.414 525.797 cv
392.578 525.902 392.77 525.996 392.984 526.078 cv
393.195 526.164 393.41 526.25 393.633 526.336 cv
393.852 526.426 394.07 526.527 394.289 526.633 cv
394.504 526.742 394.695 526.871 394.863 527.027 cv
395.027 527.184 395.16 527.371 395.262 527.59 cv
395.359 527.809 395.41 528.07 395.414 528.367 cv
cp
f
153.645 15.93 mo
153.641 16.082 153.637 16.207 153.625 16.305 cv
153.609 16.41 153.59 16.492 153.566 16.551 cv
153.543 16.617 153.512 16.664 153.473 16.687 cv
153.434 16.719 153.391 16.73 153.344 16.73 cv
148.277 16.73 li
148.102 16.73 147.957 16.68 147.844 16.578 cv
147.723 16.477 147.664 16.312 147.668 16.082 cv
147.668 7.29303 li
147.664 7.06598 147.723 6.90198 147.844 6.797 cv
147.957 6.69897 148.102 6.64801 148.277 6.64502 cv
153.313 6.64502 li
153.355 6.64801 153.398 6.65997 153.438 6.68402 cv
153.473 6.711 153.504 6.758 153.531 6.82001 cv
153.555 6.89099 153.57 6.97302 153.586 7.07001 cv
153.594 7.17603 153.602 7.30499 153.605 7.45697 cv
153.602 7.60498 153.594 7.72998 153.586 7.828 cv
153.57 7.93402 153.555 8.01599 153.531 8.07397 cv
153.504 8.13702 153.473 8.17999 153.438 8.20697 cv
153.398 8.23798 153.355 8.25403 153.313 8.25 cv
149.711 8.25 li
149.711 10.715 li
152.758 10.715 li
152.805 10.719 152.848 10.734 152.887 10.758 cv
152.926 10.789 152.957 10.832 152.984 10.891 cv
153.008 10.953 153.027 11.035 153.043 11.133 cv
153.055 11.234 153.063 11.355 153.063 11.5 cv
153.063 11.652 153.055 11.777 153.043 11.875 cv
153.027 11.977 153.008 12.055 152.984 12.113 cv
152.957 12.176 152.926 12.219 152.887 12.242 cv
152.848 12.27 152.805 12.285 152.758 12.281 cv
149.711 12.281 li
149.711 15.125 li
153.344 15.125 li
153.391 15.125 153.434 15.141 153.473 15.168 cv
153.512 15.199 153.543 15.246 153.566 15.305 cv
153.59 15.371 153.609 15.453 153.625 15.551 cv
153.637 15.656 153.641 15.781 153.645 15.93 cv
cp
f
161.98 16.465 mo
161.977 16.52 161.961 16.562 161.934 16.602 cv
161.898 16.641 161.848 16.676 161.777 16.699 cv
161.703 16.727 161.602 16.742 161.477 16.758 cv
161.348 16.77 161.191 16.777 161.008 16.777 cv
160.813 16.777 160.652 16.77 160.527 16.758 cv
160.398 16.742 160.297 16.727 160.227 16.699 cv
160.148 16.676 160.098 16.641 160.07 16.602 cv
160.035 16.562 160.02 16.52 160.023 16.465 cv
160.023 12.5 li
160.02 12.164 159.996 11.898 159.949 11.703 cv
159.898 11.512 159.824 11.348 159.734 11.211 cv
159.641 11.074 159.523 10.969 159.375 10.891 cv
159.227 10.816 159.051 10.777 158.855 10.777 cv
158.602 10.777 158.352 10.871 158.098 11.051 cv
157.844 11.234 157.578 11.496 157.305 11.844 cv
157.305 16.465 li
157.301 16.52 157.285 16.562 157.258 16.602 cv
157.223 16.641 157.168 16.676 157.098 16.699 cv
157.02 16.727 156.922 16.742 156.797 16.758 cv
156.672 16.77 156.512 16.777 156.324 16.777 cv
156.129 16.777 155.973 16.77 155.848 16.758 cv
155.723 16.742 155.621 16.727 155.547 16.699 cv
155.469 16.676 155.414 16.641 155.387 16.602 cv
155.352 16.562 155.336 16.52 155.34 16.465 cv
155.34 9.51599 li
155.336 9.46899 155.352 9.422 155.379 9.37903 cv
155.402 9.34399 155.449 9.31201 155.52 9.28101 cv
155.586 9.258 155.672 9.23798 155.781 9.22302 cv
155.887 9.21503 156.02 9.20697 156.184 9.203 cv
156.348 9.20697 156.484 9.21503 156.594 9.22302 cv
156.699 9.23798 156.785 9.258 156.848 9.28101 cv
156.906 9.31201 156.949 9.34399 156.977 9.37903 cv
157 9.422 157.012 9.46899 157.016 9.51599 cv
157.016 10.316 li
157.398 9.90601 157.789 9.59399 158.188 9.383 cv
158.582 9.17603 159 9.07397 159.434 9.07001 cv
159.902 9.07397 160.301 9.15198 160.629 9.30499 cv
160.953 9.46503 161.215 9.67603 161.414 9.94098 cv
161.613 10.211 161.758 10.523 161.848 10.879 cv
161.934 11.238 161.977 11.668 161.98 12.172 cv
cp
f
170.332 12.789 mo
170.328 13.027 170.277 13.203 170.172 13.316 cv
170.063 13.434 169.914 13.492 169.734 13.488 cv
165.5 13.488 li
165.496 13.789 165.531 14.059 165.605 14.297 cv
165.672 14.539 165.785 14.742 165.941 14.91 cv
166.094 15.082 166.289 15.211 166.531 15.297 cv
166.77 15.387 167.059 15.43 167.402 15.43 cv
167.742 15.43 168.043 15.406 168.305 15.355 cv
168.563 15.309 168.789 15.254 168.98 15.191 cv
169.168 15.133 169.324 15.078 169.453 15.027 cv
169.574 14.98 169.676 14.957 169.758 14.953 cv
169.801 14.957 169.84 14.965 169.875 14.98 cv
169.902 15 169.93 15.031 169.949 15.078 cv
169.969 15.125 169.98 15.191 169.992 15.277 cv
169.996 15.363 170 15.473 170.004 15.602 cv
170 15.719 170 15.816 169.996 15.895 cv
169.988 15.977 169.98 16.043 169.973 16.098 cv
169.961 16.156 169.945 16.207 169.926 16.242 cv
169.906 16.285 169.879 16.32 169.848 16.355 cv
169.813 16.395 169.719 16.445 169.57 16.504 cv
169.414 16.57 169.223 16.633 168.992 16.687 cv
168.754 16.75 168.484 16.797 168.188 16.844 cv
167.883 16.883 167.563 16.906 167.223 16.91 cv
166.602 16.906 166.059 16.832 165.598 16.676 cv
165.129 16.523 164.742 16.285 164.434 15.969 cv
164.117 15.652 163.883 15.254 163.734 14.77 cv
163.578 14.289 163.504 13.723 163.508 13.066 cv
163.504 12.453 163.582 11.895 163.746 11.398 cv
163.902 10.902 164.137 10.484 164.449 10.137 cv
164.754 9.79303 165.129 9.52698 165.566 9.34399 cv
166.004 9.164 166.496 9.07397 167.051 9.07001 cv
167.629 9.07397 168.129 9.15997 168.543 9.328 cv
168.957 9.50403 169.293 9.742 169.559 10.043 cv
169.82 10.348 170.016 10.707 170.145 11.121 cv
170.266 11.539 170.328 11.988 170.332 12.477 cv
cp
168.43 12.227 mo
168.441 11.676 168.332 11.242 168.098 10.93 cv
167.863 10.617 167.496 10.461 167.004 10.457 cv
166.754 10.461 166.539 10.508 166.355 10.598 cv
166.168 10.695 166.016 10.82 165.895 10.977 cv
165.77 11.137 165.676 11.324 165.613 11.539 cv
165.547 11.754 165.508 11.984 165.5 12.227 cv
cp
f
176.406 10.16 mo
176.406 10.352 176.398 10.504 176.391 10.621 cv
176.375 10.742 176.359 10.836 176.344 10.902 cv
176.32 10.973 176.293 11.02 176.262 11.043 cv
176.223 11.07 176.18 11.082 176.133 11.082 cv
176.086 11.082 176.039 11.074 175.992 11.055 cv
175.938 11.039 175.879 11.02 175.816 10.996 cv
175.746 10.977 175.676 10.957 175.602 10.937 cv
175.52 10.922 175.434 10.914 175.344 10.91 cv
175.23 10.914 175.121 10.934 175.016 10.977 cv
174.906 11.023 174.793 11.094 174.68 11.184 cv
174.559 11.277 174.438 11.402 174.313 11.555 cv
174.184 11.715 174.047 11.906 173.902 12.133 cv
173.902 16.465 li
173.898 16.52 173.883 16.562 173.855 16.602 cv
173.82 16.641 173.766 16.676 173.695 16.699 cv
173.617 16.727 173.52 16.742 173.395 16.758 cv
173.27 16.77 173.109 16.777 172.922 16.777 cv
172.727 16.777 172.57 16.77 172.445 16.758 cv
172.32 16.742 172.219 16.727 172.145 16.699 cv
172.066 16.676 172.012 16.641 171.984 16.602 cv
171.949 16.562 171.934 16.52 171.938 16.465 cv
171.938 9.51599 li
171.934 9.46899 171.949 9.422 171.977 9.37903 cv
172 9.34399 172.047 9.31201 172.117 9.28101 cv
172.184 9.258 172.27 9.23798 172.379 9.22302 cv
172.484 9.21503 172.617 9.20697 172.781 9.203 cv
172.945 9.20697 173.082 9.21503 173.191 9.22302 cv
173.297 9.23798 173.383 9.258 173.445 9.28101 cv
173.504 9.31201 173.547 9.34399 173.574 9.37903 cv
173.598 9.422 173.609 9.46899 173.613 9.51599 cv
173.613 10.379 li
173.793 10.121 173.965 9.90997 174.129 9.73798 cv
174.285 9.57397 174.441 9.43701 174.59 9.336 cv
174.734 9.23798 174.879 9.172 175.023 9.12903 cv
175.168 9.09399 175.313 9.07397 175.461 9.07001 cv
175.527 9.07397 175.602 9.078 175.68 9.08197 cv
175.758 9.09399 175.836 9.10498 175.922 9.12097 cv
176 9.14099 176.074 9.15997 176.141 9.18402 cv
176.199 9.20697 176.246 9.23401 176.277 9.258 cv
176.305 9.289 176.324 9.31598 176.34 9.34399 cv
176.352 9.37903 176.363 9.422 176.375 9.47302 cv
176.383 9.53101 176.391 9.61298 176.398 9.71899 cv
176.402 9.828 176.406 9.97699 176.406 10.16 cv
cp
f
183.582 9.99597 mo
183.578 10.25 183.551 10.434 183.496 10.551 cv
183.438 10.672 183.367 10.73 183.289 10.73 cv
182.469 10.73 li
182.582 10.855 182.664 11 182.715 11.156 cv
182.762 11.316 182.785 11.48 182.789 11.648 cv
182.785 12.059 182.719 12.418 182.586 12.73 cv
182.449 13.047 182.254 13.312 182.004 13.523 cv
181.75 13.742 181.449 13.906 181.094 14.016 cv
180.734 14.133 180.336 14.187 179.906 14.184 cv
179.68 14.187 179.469 14.16 179.266 14.102 cv
179.063 14.051 178.906 13.988 178.797 13.91 cv
178.734 13.98 178.676 14.059 178.629 14.152 cv
178.578 14.246 178.555 14.352 178.559 14.461 cv
178.555 14.617 178.621 14.738 178.754 14.832 cv
178.883 14.93 179.07 14.984 179.313 14.992 cv
181.004 15.055 li
181.398 15.07 181.75 15.129 182.059 15.223 cv
182.367 15.324 182.629 15.457 182.84 15.629 cv
183.051 15.805 183.211 16.016 183.32 16.258 cv
183.43 16.504 183.484 16.777 183.488 17.09 cv
183.484 17.426 183.41 17.75 183.262 18.059 cv
183.113 18.359 182.887 18.621 182.586 18.848 cv
182.281 19.066 181.902 19.246 181.449 19.379 cv
180.992 19.508 180.461 19.57 179.859 19.574 cv
179.262 19.57 178.758 19.523 178.34 19.434 cv
177.922 19.336 177.578 19.207 177.313 19.043 cv
177.043 18.875 176.848 18.676 176.73 18.449 cv
176.605 18.215 176.547 17.961 176.547 17.687 cv
176.547 17.516 176.566 17.355 176.613 17.199 cv
176.652 17.043 176.719 16.891 176.809 16.75 cv
176.891 16.605 176.996 16.473 177.121 16.34 cv
177.246 16.211 177.387 16.086 177.551 15.965 cv
177.324 15.852 177.152 15.691 177.031 15.48 cv
176.91 15.277 176.852 15.051 176.852 14.805 cv
176.852 14.504 176.918 14.227 177.059 13.969 cv
177.195 13.719 177.379 13.488 177.605 13.285 cv
177.422 13.105 177.277 12.891 177.168 12.633 cv
177.059 12.383 177.004 12.062 177.008 11.68 cv
177.004 11.277 177.074 10.918 177.219 10.594 cv
177.359 10.277 177.559 10.008 177.816 9.78497 cv
178.07 9.56598 178.375 9.39502 178.727 9.27698 cv
179.078 9.15997 179.469 9.10199 179.898 9.10199 cv
180.117 9.10199 180.324 9.117 180.523 9.14099 cv
180.723 9.172 180.91 9.20697 181.082 9.25 cv
183.289 9.25 li
183.371 9.25403 183.441 9.31201 183.5 9.422 cv
183.551 9.539 183.578 9.72998 183.582 9.99597 cv
cp
181.066 11.641 mo
181.063 11.27 180.961 10.98 180.754 10.77 cv
180.543 10.566 180.25 10.461 179.875 10.457 cv
179.68 10.461 179.508 10.492 179.367 10.555 cv
179.219 10.621 179.098 10.711 179.004 10.82 cv
178.902 10.934 178.832 11.062 178.789 11.211 cv
178.738 11.359 178.715 11.516 178.719 11.672 cv
178.715 12.031 178.82 12.309 179.031 12.512 cv
179.238 12.719 179.527 12.824 179.898 12.82 cv
180.094 12.824 180.262 12.793 180.41 12.727 cv
180.551 12.668 180.672 12.582 180.773 12.469 cv
180.867 12.363 180.941 12.234 180.992 12.09 cv
181.039 11.949 181.063 11.801 181.066 11.641 cv
cp
181.527 17.191 mo
181.527 16.953 181.434 16.777 181.246 16.652 cv
181.059 16.531 180.801 16.461 180.473 16.449 cv
179.078 16.41 li
178.941 16.512 178.832 16.605 178.754 16.695 cv
178.672 16.785 178.609 16.871 178.563 16.957 cv
178.512 17.039 178.477 17.121 178.465 17.199 cv
178.445 17.277 178.438 17.355 178.441 17.441 cv
178.438 17.695 178.57 17.895 178.832 18.031 cv
179.094 18.164 179.465 18.23 179.945 18.234 cv
180.238 18.23 180.484 18.199 180.691 18.145 cv
180.891 18.082 181.055 18.004 181.184 17.906 cv
181.305 17.805 181.395 17.695 181.449 17.574 cv
181.5 17.453 181.527 17.324 181.527 17.191 cv
cp
f
188.914 16.73 mo
188.07 19.191 li
188.02 19.32 187.895 19.414 187.688 19.473 cv
187.48 19.527 187.176 19.555 186.777 19.559 cv
186.566 19.555 186.398 19.547 186.277 19.531 cv
186.152 19.512 186.063 19.48 186 19.441 cv
185.938 19.398 185.902 19.348 185.898 19.285 cv
185.891 19.223 185.906 19.148 185.945 19.062 cv
186.871 16.73 li
186.801 16.699 186.738 16.652 186.688 16.586 cv
186.629 16.523 186.59 16.453 186.566 16.379 cv
184.176 9.98798 li
184.105 9.80902 184.07 9.672 184.074 9.57397 cv
184.07 9.47998 184.102 9.40198 184.168 9.34802 cv
184.227 9.29303 184.332 9.258 184.48 9.23401 cv
184.625 9.21899 184.82 9.20697 185.07 9.203 cv
185.289 9.20697 185.469 9.211 185.602 9.21503 cv
185.73 9.22699 185.832 9.24597 185.906 9.27301 cv
185.977 9.30902 186.031 9.35498 186.07 9.41803 cv
186.105 9.48401 186.141 9.578 186.18 9.69501 cv
187.813 14.348 li
187.836 14.348 li
189.336 9.60199 li
189.359 9.46899 189.398 9.37903 189.453 9.33197 cv
189.5 9.289 189.582 9.258 189.699 9.23401 cv
189.809 9.21899 190.012 9.20697 190.301 9.203 cv
190.523 9.20697 190.707 9.21899 190.855 9.23401 cv
191 9.258 191.109 9.297 191.184 9.35199 cv
191.25 9.414 191.285 9.48798 191.289 9.58197 cv
191.285 9.67603 191.266 9.789 191.227 9.91803 cv
cp
f
203.355 15.203 mo
203.355 15.336 203.352 15.445 203.344 15.535 cv
203.336 15.629 203.324 15.707 203.309 15.77 cv
203.293 15.836 203.27 15.895 203.246 15.937 cv
203.215 15.984 203.176 16.035 203.121 16.094 cv
203.063 16.156 202.949 16.234 202.789 16.324 cv
202.621 16.422 202.422 16.512 202.188 16.594 cv
201.949 16.684 201.68 16.75 201.379 16.809 cv
201.07 16.863 200.742 16.895 200.395 16.895 cv
199.699 16.895 199.074 16.789 198.52 16.574 cv
197.961 16.363 197.488 16.047 197.102 15.621 cv
196.711 15.199 196.414 14.668 196.207 14.035 cv
196 13.402 195.895 12.664 195.898 11.82 cv
195.895 10.965 196.008 10.207 196.238 9.539 cv
196.465 8.875 196.785 8.31598 197.195 7.86298 cv
197.605 7.414 198.098 7.07001 198.672 6.836 cv
199.246 6.60498 199.879 6.48798 200.574 6.48401 cv
200.848 6.48798 201.117 6.51202 201.383 6.55499 cv
201.641 6.60199 201.883 6.65997 202.102 6.73401 cv
202.32 6.81201 202.52 6.90198 202.699 6.99597 cv
202.875 7.09802 202.996 7.17999 203.07 7.25 cv
203.137 7.32001 203.188 7.37903 203.215 7.42603 cv
203.238 7.47302 203.258 7.53497 203.277 7.60498 cv
203.289 7.68402 203.301 7.77002 203.313 7.86298 cv
203.316 7.96503 203.32 8.086 203.324 8.22699 cv
203.32 8.38702 203.316 8.52002 203.309 8.625 cv
203.297 8.73798 203.277 8.82397 203.254 8.89099 cv
203.227 8.961 203.195 9.01202 203.16 9.039 cv
203.121 9.07397 203.078 9.09003 203.035 9.086 cv
202.953 9.09003 202.855 9.04303 202.738 8.94897 cv
202.617 8.85901 202.461 8.758 202.273 8.64502 cv
202.082 8.53497 201.859 8.43402 201.598 8.34003 cv
201.332 8.25 201.02 8.20697 200.66 8.203 cv
200.258 8.20697 199.898 8.289 199.586 8.44897 cv
199.27 8.617 199.004 8.85199 198.785 9.15198 cv
198.563 9.461 198.395 9.828 198.281 10.258 cv
198.164 10.691 198.105 11.176 198.109 11.711 cv
198.105 12.309 198.168 12.824 198.293 13.254 cv
198.414 13.691 198.586 14.047 198.816 14.324 cv
199.039 14.605 199.313 14.812 199.633 14.949 cv
199.949 15.09 200.309 15.16 200.715 15.156 cv
201.074 15.16 201.391 15.117 201.656 15.027 cv
201.922 14.945 202.148 14.852 202.336 14.742 cv
202.523 14.641 202.68 14.547 202.805 14.465 cv
202.926 14.383 203.02 14.34 203.09 14.34 cv
203.141 14.34 203.184 14.352 203.215 14.371 cv
203.246 14.391 203.27 14.43 203.293 14.492 cv
203.309 14.555 203.324 14.645 203.34 14.754 cv
203.348 14.871 203.355 15.02 203.355 15.203 cv
cp
f
211.734 12.918 mo
211.73 13.516 211.652 14.059 211.5 14.543 cv
211.34 15.035 211.105 15.453 210.789 15.805 cv
210.473 16.156 210.074 16.43 209.598 16.621 cv
209.117 16.812 208.559 16.906 207.922 16.91 cv
207.301 16.906 206.762 16.824 206.309 16.652 cv
205.848 16.484 205.469 16.234 205.172 15.906 cv
204.867 15.582 204.645 15.18 204.5 14.699 cv
204.355 14.223 204.285 13.676 204.285 13.059 cv
204.285 12.469 204.363 11.93 204.52 11.437 cv
204.676 10.949 204.914 10.527 205.234 10.176 cv
205.551 9.828 205.945 9.55499 206.422 9.35901 cv
206.895 9.16803 207.453 9.07397 208.094 9.07001 cv
208.719 9.07397 209.258 9.15601 209.715 9.32397 cv
210.172 9.49597 210.551 9.74597 210.848 10.07 cv
211.145 10.398 211.367 10.801 211.516 11.277 cv
211.66 11.758 211.73 12.305 211.734 12.918 cv
cp
209.715 12.996 mo
209.711 12.66 209.684 12.344 209.633 12.051 cv
209.574 11.766 209.48 11.516 209.355 11.301 cv
209.223 11.09 209.051 10.922 208.84 10.801 cv
208.621 10.684 208.352 10.625 208.023 10.621 cv
207.734 10.625 207.48 10.68 207.262 10.781 cv
207.043 10.891 206.863 11.047 206.723 11.25 cv
206.582 11.457 206.477 11.703 206.406 11.988 cv
206.336 12.281 206.301 12.609 206.301 12.973 cv
206.301 13.32 206.328 13.637 206.387 13.922 cv
206.441 14.215 206.535 14.465 206.664 14.676 cv
206.789 14.891 206.961 15.055 207.184 15.168 cv
207.398 15.289 207.668 15.348 207.992 15.344 cv
208.285 15.348 208.543 15.293 208.766 15.184 cv
208.98 15.078 209.16 14.926 209.301 14.719 cv
209.441 14.52 209.543 14.273 209.613 13.984 cv
209.676 13.699 209.711 13.371 209.715 12.996 cv
cp
f
219.93 16.465 mo
219.926 16.52 219.91 16.562 219.883 16.602 cv
219.848 16.641 219.797 16.676 219.727 16.699 cv
219.652 16.727 219.551 16.742 219.426 16.758 cv
219.297 16.77 219.141 16.777 218.957 16.777 cv
218.762 16.777 218.602 16.77 218.477 16.758 cv
218.348 16.742 218.246 16.727 218.176 16.699 cv
218.098 16.676 218.047 16.641 218.02 16.602 cv
217.984 16.562 217.969 16.52 217.973 16.465 cv
217.973 12.5 li
217.969 12.164 217.945 11.898 217.898 11.703 cv
217.848 11.512 217.773 11.348 217.684 11.211 cv
217.59 11.074 217.473 10.969 217.324 10.891 cv
217.176 10.816 217 10.777 216.805 10.777 cv
216.551 10.777 216.301 10.871 216.047 11.051 cv
215.793 11.234 215.527 11.496 215.254 11.844 cv
215.254 16.465 li
215.25 16.52 215.234 16.562 215.207 16.602 cv
215.172 16.641 215.117 16.676 215.047 16.699 cv
214.969 16.727 214.871 16.742 214.746 16.758 cv
214.621 16.77 214.461 16.777 214.273 16.777 cv
214.078 16.777 213.922 16.77 213.797 16.758 cv
213.672 16.742 213.57 16.727 213.496 16.699 cv
213.418 16.676 213.363 16.641 213.336 16.602 cv
213.301 16.562 213.285 16.52 213.289 16.465 cv
213.289 9.51599 li
213.285 9.46899 213.301 9.422 213.328 9.37903 cv
213.352 9.34399 213.398 9.31201 213.469 9.28101 cv
213.535 9.258 213.621 9.23798 213.73 9.22302 cv
213.836 9.21503 213.969 9.20697 214.133 9.203 cv
214.297 9.20697 214.434 9.21503 214.543 9.22302 cv
214.648 9.23798 214.734 9.258 214.797 9.28101 cv
214.855 9.31201 214.898 9.34399 214.926 9.37903 cv
214.949 9.422 214.961 9.46899 214.965 9.51599 cv
214.965 10.316 li
215.348 9.90601 215.738 9.59399 216.137 9.383 cv
216.531 9.17603 216.949 9.07397 217.383 9.07001 cv
217.852 9.07397 218.25 9.15198 218.578 9.30499 cv
218.902 9.46503 219.164 9.67603 219.363 9.94098 cv
219.563 10.211 219.707 10.523 219.797 10.879 cv
219.883 11.238 219.926 11.668 219.93 12.172 cv
cp
f
226.754 14.5 mo
226.75 14.898 226.676 15.246 226.531 15.547 cv
226.383 15.848 226.176 16.102 225.906 16.301 cv
225.633 16.508 225.313 16.656 224.945 16.758 cv
224.578 16.855 224.176 16.906 223.746 16.91 cv
223.48 16.906 223.234 16.887 223 16.852 cv
222.766 16.809 222.555 16.762 222.367 16.703 cv
222.18 16.645 222.023 16.582 221.898 16.52 cv
221.773 16.457 221.68 16.398 221.625 16.344 cv
221.566 16.289 221.523 16.207 221.496 16.09 cv
221.461 15.977 221.445 15.801 221.449 15.57 cv
221.445 15.422 221.453 15.301 221.465 15.207 cv
221.473 15.117 221.488 15.047 221.512 14.988 cv
221.531 14.937 221.555 14.898 221.59 14.879 cv
221.617 14.863 221.656 14.855 221.703 14.852 cv
221.758 14.855 221.844 14.887 221.957 14.949 cv
222.066 15.016 222.203 15.09 222.375 15.164 cv
222.539 15.246 222.734 15.316 222.953 15.383 cv
223.172 15.453 223.422 15.488 223.707 15.484 cv
223.883 15.488 224.039 15.469 224.18 15.43 cv
224.313 15.395 224.434 15.344 224.539 15.273 cv
224.637 15.207 224.711 15.121 224.766 15.016 cv
224.813 14.914 224.84 14.793 224.844 14.656 cv
224.84 14.5 224.793 14.367 224.699 14.258 cv
224.605 14.148 224.477 14.051 224.32 13.965 cv
224.156 13.883 223.977 13.805 223.781 13.73 cv
223.578 13.66 223.375 13.582 223.164 13.488 cv
222.953 13.402 222.746 13.301 222.551 13.184 cv
222.348 13.074 222.168 12.934 222.012 12.766 cv
221.848 12.602 221.723 12.402 221.629 12.164 cv
221.535 11.934 221.488 11.652 221.488 11.32 cv
221.488 10.992 221.551 10.687 221.68 10.406 cv
221.809 10.133 221.996 9.89502 222.242 9.69501 cv
222.484 9.5 222.781 9.34802 223.133 9.23401 cv
223.48 9.12903 223.875 9.07397 224.316 9.07001 cv
224.531 9.07397 224.742 9.09003 224.949 9.117 cv
225.152 9.15198 225.34 9.19098 225.508 9.23401 cv
225.672 9.28497 225.813 9.336 225.93 9.38702 cv
226.043 9.44501 226.125 9.492 226.176 9.52698 cv
226.223 9.57001 226.258 9.60901 226.281 9.64502 cv
226.301 9.68701 226.313 9.73401 226.324 9.78497 cv
226.332 9.84003 226.344 9.90601 226.352 9.98401 cv
226.359 10.07 226.363 10.168 226.363 10.285 cv
226.363 10.426 226.359 10.543 226.352 10.629 cv
226.344 10.723 226.328 10.793 226.313 10.84 cv
226.293 10.895 226.27 10.93 226.242 10.945 cv
226.207 10.969 226.172 10.977 226.133 10.973 cv
226.082 10.977 226.008 10.949 225.914 10.891 cv
225.813 10.84 225.691 10.781 225.543 10.715 cv
225.395 10.656 225.223 10.598 225.027 10.539 cv
224.832 10.488 224.609 10.461 224.363 10.457 cv
224.184 10.461 224.031 10.48 223.902 10.512 cv
223.77 10.551 223.66 10.602 223.582 10.668 cv
223.496 10.738 223.434 10.816 223.395 10.906 cv
223.348 11 223.328 11.098 223.332 11.199 cv
223.328 11.359 223.379 11.496 223.48 11.602 cv
223.578 11.715 223.707 11.809 223.871 11.891 cv
224.031 11.977 224.215 12.055 224.422 12.125 cv
224.625 12.199 224.832 12.281 225.043 12.363 cv
225.25 12.453 225.457 12.551 225.668 12.664 cv
225.871 12.777 226.055 12.918 226.215 13.082 cv
226.375 13.25 226.504 13.449 226.605 13.68 cv
226.699 13.914 226.75 14.187 226.754 14.5 cv
cp
f
234.82 16.465 mo
234.816 16.52 234.805 16.562 234.781 16.602 cv
234.754 16.641 234.707 16.676 234.645 16.699 cv
234.578 16.727 234.492 16.742 234.387 16.758 cv
234.281 16.77 234.148 16.777 233.988 16.777 cv
233.813 16.777 233.672 16.77 233.57 16.758 cv
233.461 16.742 233.379 16.727 233.316 16.699 cv
233.254 16.676 233.207 16.641 233.184 16.602 cv
233.152 16.562 233.141 16.52 233.145 16.465 cv
233.145 15.664 li
232.758 16.078 232.367 16.391 231.973 16.598 cv
231.57 16.805 231.16 16.906 230.738 16.91 cv
230.258 16.906 229.855 16.832 229.531 16.676 cv
229.207 16.523 228.945 16.309 228.746 16.039 cv
228.543 15.77 228.398 15.457 228.316 15.098 cv
228.227 14.742 228.184 14.301 228.188 13.77 cv
228.188 9.51599 li
228.184 9.46899 228.199 9.422 228.23 9.37903 cv
228.258 9.34399 228.309 9.31201 228.387 9.28101 cv
228.461 9.258 228.563 9.23798 228.691 9.22302 cv
228.816 9.21503 228.973 9.20697 229.164 9.203 cv
229.352 9.20697 229.512 9.21503 229.637 9.22302 cv
229.762 9.23798 229.859 9.258 229.938 9.28101 cv
230.008 9.31201 230.063 9.34399 230.098 9.37903 cv
230.125 9.422 230.141 9.46899 230.145 9.51599 cv
230.145 13.441 li
230.141 13.809 230.164 14.086 230.215 14.277 cv
230.258 14.469 230.328 14.633 230.43 14.77 cv
230.523 14.91 230.648 15.016 230.797 15.09 cv
230.945 15.168 231.117 15.207 231.313 15.203 cv
231.563 15.207 231.813 15.117 232.066 14.93 cv
232.316 14.75 232.586 14.484 232.871 14.137 cv
232.871 9.51599 li
232.871 9.46899 232.883 9.422 232.914 9.37903 cv
232.938 9.34399 232.992 9.31201 233.07 9.28101 cv
233.145 9.258 233.242 9.23798 233.371 9.22302 cv
233.492 9.21503 233.652 9.20697 233.848 9.203 cv
234.039 9.20697 234.195 9.21503 234.32 9.22302 cv
234.441 9.23798 234.543 9.258 234.617 9.28101 cv
234.688 9.31201 234.738 9.34399 234.773 9.37903 cv
234.801 9.422 234.816 9.46899 234.82 9.51599 cv
cp
f
247.762 16.465 mo
247.758 16.52 247.742 16.562 247.715 16.602 cv
247.68 16.641 247.629 16.676 247.559 16.699 cv
247.484 16.727 247.383 16.742 247.262 16.758 cv
247.137 16.77 246.98 16.777 246.789 16.777 cv
246.59 16.777 246.43 16.77 246.305 16.758 cv
246.18 16.742 246.078 16.727 246.004 16.699 cv
245.926 16.676 245.875 16.641 245.848 16.602 cv
245.82 16.562 245.805 16.52 245.809 16.465 cv
245.809 12.344 li
245.805 12.113 245.785 11.898 245.742 11.703 cv
245.695 11.512 245.625 11.348 245.539 11.211 cv
245.445 11.074 245.332 10.969 245.195 10.891 cv
245.055 10.816 244.891 10.777 244.699 10.777 cv
244.465 10.777 244.227 10.871 243.988 11.051 cv
243.75 11.234 243.492 11.496 243.211 11.844 cv
243.211 16.465 li
243.211 16.52 243.195 16.562 243.164 16.602 cv
243.133 16.641 243.078 16.676 243.004 16.699 cv
242.926 16.727 242.824 16.742 242.703 16.758 cv
242.578 16.77 242.426 16.777 242.238 16.777 cv
242.043 16.777 241.883 16.77 241.762 16.758 cv
241.633 16.742 241.531 16.727 241.461 16.699 cv
241.383 16.676 241.332 16.641 241.301 16.602 cv
241.27 16.562 241.254 16.52 241.254 16.465 cv
241.254 12.344 li
241.254 12.113 241.23 11.898 241.188 11.703 cv
241.145 11.512 241.078 11.348 240.992 11.211 cv
240.898 11.074 240.785 10.969 240.648 10.891 cv
240.504 10.816 240.34 10.777 240.156 10.777 cv
239.914 10.777 239.676 10.871 239.438 11.051 cv
239.199 11.234 238.941 11.496 238.668 11.844 cv
238.668 16.465 li
238.664 16.52 238.648 16.562 238.621 16.602 cv
238.586 16.641 238.531 16.676 238.461 16.699 cv
238.383 16.727 238.285 16.742 238.16 16.758 cv
238.035 16.77 237.875 16.777 237.688 16.777 cv
237.492 16.777 237.336 16.77 237.211 16.758 cv
237.086 16.742 236.984 16.727 236.91 16.699 cv
236.832 16.676 236.777 16.641 236.75 16.602 cv
236.715 16.562 236.699 16.52 236.703 16.465 cv
236.703 9.51599 li
236.699 9.46899 236.715 9.422 236.742 9.37903 cv
236.766 9.34399 236.813 9.31201 236.883 9.28101 cv
236.949 9.258 237.035 9.23798 237.145 9.22302 cv
237.25 9.21503 237.383 9.20697 237.547 9.203 cv
237.711 9.20697 237.848 9.21503 237.957 9.22302 cv
238.063 9.23798 238.148 9.258 238.211 9.28101 cv
238.27 9.31201 238.313 9.34399 238.34 9.37903 cv
238.363 9.422 238.375 9.46899 238.379 9.51599 cv
238.379 10.316 li
238.762 9.90601 239.145 9.59399 239.527 9.383 cv
239.906 9.17603 240.309 9.07397 240.727 9.07001 cv
241.012 9.07397 241.266 9.10199 241.496 9.15997 cv
241.723 9.22302 241.93 9.30902 242.109 9.41803 cv
242.289 9.53101 242.441 9.66803 242.57 9.82001 cv
242.699 9.97699 242.809 10.148 242.898 10.34 cv
243.105 10.117 243.309 9.92603 243.512 9.76599 cv
243.707 9.60498 243.906 9.47302 244.102 9.37097 cv
244.297 9.27002 244.492 9.19501 244.688 9.14502 cv
244.883 9.09802 245.082 9.07397 245.285 9.07001 cv
245.746 9.07397 246.133 9.15198 246.453 9.30499 cv
246.766 9.46503 247.023 9.67603 247.219 9.94098 cv
247.414 10.211 247.551 10.523 247.637 10.879 cv
247.715 11.238 247.758 11.617 247.762 12.016 cv
cp
f
256.68 12.887 mo
256.68 13.508 256.613 14.066 256.48 14.562 cv
256.348 15.059 256.152 15.48 255.898 15.828 cv
255.645 16.176 255.328 16.445 254.949 16.629 cv
254.566 16.816 254.133 16.906 253.648 16.91 cv
253.441 16.906 253.254 16.887 253.09 16.852 cv
252.918 16.809 252.754 16.75 252.598 16.672 cv
252.438 16.594 252.281 16.496 252.129 16.371 cv
251.969 16.254 251.809 16.113 251.645 15.949 cv
251.645 19.223 li
251.641 19.27 251.625 19.316 251.598 19.363 cv
251.563 19.402 251.508 19.437 251.438 19.469 cv
251.359 19.492 251.262 19.516 251.137 19.535 cv
251.012 19.547 250.852 19.555 250.664 19.559 cv
250.469 19.555 250.313 19.547 250.188 19.535 cv
250.063 19.516 249.961 19.492 249.887 19.469 cv
249.809 19.437 249.754 19.402 249.727 19.363 cv
249.691 19.316 249.676 19.27 249.68 19.223 cv
249.68 9.51599 li
249.676 9.46899 249.691 9.422 249.719 9.37903 cv
249.742 9.34399 249.785 9.31201 249.855 9.28101 cv
249.918 9.258 250.004 9.23798 250.113 9.22302 cv
250.215 9.21503 250.352 9.20697 250.516 9.203 cv
250.672 9.20697 250.801 9.21503 250.906 9.22302 cv
251.012 9.23798 251.098 9.258 251.164 9.28101 cv
251.227 9.31201 251.273 9.34399 251.301 9.37903 cv
251.324 9.422 251.336 9.46899 251.34 9.51599 cv
251.34 10.332 li
251.539 10.125 251.738 9.94501 251.938 9.78497 cv
252.129 9.62903 252.328 9.49597 252.531 9.38702 cv
252.734 9.28497 252.941 9.203 253.16 9.14801 cv
253.371 9.09802 253.602 9.07397 253.852 9.07001 cv
254.355 9.07397 254.789 9.172 255.152 9.37097 cv
255.508 9.57397 255.801 9.85199 256.027 10.195 cv
256.25 10.547 256.414 10.949 256.523 11.41 cv
256.625 11.871 256.68 12.363 256.68 12.887 cv
cp
254.637 13.027 mo
254.633 12.734 254.613 12.453 254.57 12.176 cv
254.523 11.906 254.445 11.664 254.344 11.449 cv
254.234 11.238 254.094 11.066 253.922 10.937 cv
253.746 10.812 253.531 10.75 253.273 10.746 cv
253.141 10.75 253.012 10.77 252.887 10.805 cv
252.758 10.848 252.629 10.91 252.496 10.996 cv
252.363 11.086 252.227 11.199 252.09 11.34 cv
251.945 11.48 251.797 11.656 251.645 11.859 cv
251.645 14.152 li
251.918 14.5 252.18 14.77 252.43 14.957 cv
252.676 15.148 252.938 15.242 253.211 15.242 cv
253.465 15.242 253.68 15.18 253.863 15.047 cv
254.039 14.922 254.188 14.75 254.301 14.539 cv
254.414 14.328 254.496 14.09 254.555 13.824 cv
254.605 13.559 254.633 13.293 254.637 13.027 cv
cp
f
262.176 15.781 mo
262.176 16.008 262.16 16.184 262.133 16.305 cv
262.102 16.43 262.063 16.516 262.02 16.562 cv
261.969 16.613 261.902 16.656 261.813 16.695 cv
261.719 16.734 261.609 16.766 261.492 16.797 cv
261.367 16.82 261.234 16.844 261.094 16.863 cv
260.949 16.875 260.809 16.883 260.664 16.887 cv
260.273 16.883 259.934 16.832 259.648 16.738 cv
259.363 16.637 259.129 16.488 258.941 16.281 cv
258.754 16.078 258.613 15.82 258.527 15.508 cv
258.434 15.199 258.391 14.828 258.395 14.398 cv
258.395 10.84 li
257.563 10.84 li
257.461 10.844 257.387 10.781 257.336 10.656 cv
257.281 10.535 257.254 10.332 257.258 10.043 cv
257.254 9.89502 257.262 9.76599 257.277 9.664 cv
257.289 9.56201 257.309 9.47998 257.336 9.41803 cv
257.359 9.35901 257.391 9.31598 257.434 9.289 cv
257.469 9.26599 257.516 9.25403 257.57 9.25 cv
258.395 9.25 li
258.395 7.69897 li
258.391 7.65198 258.406 7.60498 258.438 7.55902 cv
258.465 7.52002 258.516 7.48401 258.594 7.453 cv
258.668 7.42999 258.77 7.40601 258.898 7.39099 cv
259.023 7.37903 259.18 7.375 259.371 7.37097 cv
259.559 7.375 259.719 7.37903 259.848 7.39099 cv
259.973 7.40601 260.074 7.42999 260.148 7.453 cv
260.219 7.48401 260.27 7.52002 260.305 7.55902 cv
260.332 7.60498 260.348 7.65198 260.352 7.69897 cv
260.352 9.25 li
261.863 9.25 li
261.914 9.25403 261.961 9.26599 262 9.289 cv
262.039 9.31598 262.07 9.35901 262.098 9.41803 cv
262.121 9.47998 262.141 9.56201 262.156 9.664 cv
262.168 9.76599 262.176 9.89502 262.176 10.043 cv
262.176 10.332 262.148 10.535 262.098 10.656 cv
262.043 10.781 261.969 10.844 261.871 10.84 cv
260.352 10.84 li
260.352 14.105 li
260.348 14.484 260.406 14.77 260.531 14.957 cv
260.648 15.148 260.863 15.242 261.168 15.242 cv
261.27 15.242 261.363 15.234 261.449 15.215 cv
261.531 15.199 261.605 15.18 261.672 15.152 cv
261.734 15.133 261.789 15.109 261.836 15.09 cv
261.879 15.074 261.918 15.066 261.957 15.062 cv
261.984 15.066 262.016 15.074 262.047 15.09 cv
262.074 15.109 262.094 15.148 262.113 15.199 cv
262.125 15.258 262.141 15.332 262.156 15.422 cv
262.168 15.52 262.176 15.637 262.176 15.781 cv
cp
f
265.559 16.465 mo
265.555 16.52 265.539 16.562 265.512 16.602 cv
265.477 16.641 265.422 16.676 265.352 16.699 cv
265.273 16.727 265.176 16.742 265.051 16.758 cv
264.926 16.77 264.766 16.777 264.578 16.777 cv
264.383 16.777 264.227 16.77 264.102 16.758 cv
263.977 16.742 263.875 16.727 263.801 16.699 cv
263.723 16.676 263.668 16.641 263.641 16.602 cv
263.605 16.562 263.59 16.52 263.594 16.465 cv
263.594 9.53101 li
263.59 9.47998 263.605 9.43402 263.641 9.39502 cv
263.668 9.35498 263.723 9.32397 263.801 9.29303 cv
263.875 9.27002 263.977 9.24597 264.102 9.22699 cv
264.227 9.21503 264.383 9.20697 264.578 9.203 cv
264.766 9.20697 264.926 9.21503 265.051 9.22699 cv
265.176 9.24597 265.273 9.27002 265.352 9.29303 cv
265.422 9.32397 265.477 9.35498 265.512 9.39502 cv
265.539 9.43402 265.555 9.47998 265.559 9.53101 cv
cp
265.707 7.15997 mo
265.707 7.55902 265.625 7.83197 265.465 7.97998 cv
265.301 8.133 265.004 8.20697 264.57 8.203 cv
264.125 8.20697 263.824 8.133 263.676 7.98798 cv
263.52 7.84399 263.445 7.58197 263.445 7.19897 cv
263.445 6.80499 263.523 6.53101 263.684 6.37903 cv
263.84 6.22699 264.141 6.14801 264.586 6.14801 cv
265.02 6.14801 265.316 6.22302 265.473 6.37097 cv
265.629 6.52002 265.707 6.78497 265.707 7.15997 cv
cp
f
274.555 12.918 mo
274.551 13.516 274.473 14.059 274.32 14.543 cv
274.16 15.035 273.926 15.453 273.609 15.805 cv
273.293 16.156 272.895 16.43 272.418 16.621 cv
271.938 16.812 271.379 16.906 270.742 16.91 cv
270.121 16.906 269.582 16.824 269.129 16.652 cv
268.668 16.484 268.289 16.234 267.992 15.906 cv
267.688 15.582 267.465 15.18 267.32 14.699 cv
267.176 14.223 267.105 13.676 267.105 13.059 cv
267.105 12.469 267.184 11.93 267.34 11.437 cv
267.496 10.949 267.734 10.527 268.055 10.176 cv
268.371 9.828 268.766 9.55499 269.242 9.35901 cv
269.715 9.16803 270.273 9.07397 270.914 9.07001 cv
271.539 9.07397 272.078 9.15601 272.535 9.32397 cv
272.992 9.49597 273.371 9.74597 273.668 10.07 cv
273.965 10.398 274.188 10.801 274.336 11.277 cv
274.48 11.758 274.551 12.305 274.555 12.918 cv
cp
272.535 12.996 mo
272.531 12.66 272.504 12.344 272.453 12.051 cv
272.395 11.766 272.301 11.516 272.176 11.301 cv
272.043 11.09 271.871 10.922 271.66 10.801 cv
271.441 10.684 271.172 10.625 270.844 10.621 cv
270.555 10.625 270.301 10.68 270.082 10.781 cv
269.863 10.891 269.684 11.047 269.543 11.25 cv
269.402 11.457 269.297 11.703 269.227 11.988 cv
269.156 12.281 269.121 12.609 269.121 12.973 cv
269.121 13.32 269.148 13.637 269.207 13.922 cv
269.262 14.215 269.355 14.465 269.484 14.676 cv
269.609 14.891 269.781 15.055 270.004 15.168 cv
270.219 15.289 270.488 15.348 270.813 15.344 cv
271.105 15.348 271.363 15.293 271.586 15.184 cv
271.801 15.078 271.98 14.926 272.121 14.719 cv
272.262 14.52 272.363 14.273 272.434 13.984 cv
272.496 13.699 272.531 13.371 272.535 12.996 cv
cp
f
282.797 16.465 mo
282.793 16.52 282.777 16.562 282.75 16.602 cv
282.715 16.641 282.664 16.676 282.594 16.699 cv
282.52 16.727 282.418 16.742 282.293 16.758 cv
282.164 16.77 282.008 16.777 281.824 16.777 cv
281.629 16.777 281.469 16.77 281.344 16.758 cv
281.215 16.742 281.113 16.727 281.043 16.699 cv
280.965 16.676 280.914 16.641 280.887 16.602 cv
280.852 16.562 280.836 16.52 280.84 16.465 cv
280.84 12.5 li
280.836 12.164 280.813 11.898 280.766 11.703 cv
280.715 11.512 280.641 11.348 280.551 11.211 cv
280.457 11.074 280.34 10.969 280.191 10.891 cv
280.043 10.816 279.867 10.777 279.672 10.777 cv
279.418 10.777 279.168 10.871 278.914 11.051 cv
278.66 11.234 278.395 11.496 278.121 11.844 cv
278.121 16.465 li
278.117 16.52 278.102 16.562 278.074 16.602 cv
278.039 16.641 277.984 16.676 277.914 16.699 cv
277.836 16.727 277.738 16.742 277.613 16.758 cv
277.488 16.77 277.328 16.777 277.141 16.777 cv
276.945 16.777 276.789 16.77 276.664 16.758 cv
276.539 16.742 276.438 16.727 276.363 16.699 cv
276.285 16.676 276.23 16.641 276.203 16.602 cv
276.168 16.562 276.152 16.52 276.156 16.465 cv
276.156 9.51599 li
276.152 9.46899 276.168 9.422 276.195 9.37903 cv
276.219 9.34399 276.266 9.31201 276.336 9.28101 cv
276.402 9.258 276.488 9.23798 276.598 9.22302 cv
276.703 9.21503 276.836 9.20697 277 9.203 cv
277.164 9.20697 277.301 9.21503 277.41 9.22302 cv
277.516 9.23798 277.602 9.258 277.664 9.28101 cv
277.723 9.31201 277.766 9.34399 277.793 9.37903 cv
277.816 9.422 277.828 9.46899 277.832 9.51599 cv
277.832 10.316 li
278.215 9.90601 278.605 9.59399 279.004 9.383 cv
279.398 9.17603 279.816 9.07397 280.25 9.07001 cv
280.719 9.07397 281.117 9.15198 281.445 9.30499 cv
281.77 9.46503 282.031 9.67603 282.23 9.94098 cv
282.43 10.211 282.574 10.523 282.664 10.879 cv
282.75 11.238 282.793 11.668 282.797 12.172 cv
cp
f
299.262 9.5 mo
299.258 9.55902 299.25 9.62903 299.238 9.711 cv
299.219 9.79303 299.191 9.914 299.152 10.066 cv
297.297 16.355 li
297.27 16.445 297.234 16.52 297.195 16.57 cv
297.152 16.629 297.09 16.672 297.004 16.699 cv
296.918 16.73 296.793 16.746 296.637 16.762 cv
296.473 16.77 296.27 16.777 296.02 16.777 cv
295.762 16.777 295.551 16.77 295.395 16.758 cv
295.23 16.742 295.105 16.723 295.016 16.691 cv
294.922 16.664 294.855 16.621 294.816 16.562 cv
294.773 16.512 294.742 16.441 294.723 16.355 cv
293.555 12.133 li
293.539 12.062 li
293.523 12.133 li
292.449 16.355 li
292.426 16.445 292.395 16.52 292.359 16.57 cv
292.316 16.629 292.25 16.672 292.16 16.699 cv
292.063 16.73 291.938 16.746 291.777 16.762 cv
291.617 16.77 291.41 16.777 291.156 16.777 cv
290.895 16.777 290.684 16.77 290.527 16.758 cv
290.367 16.742 290.242 16.723 290.152 16.691 cv
290.059 16.664 289.992 16.621 289.953 16.562 cv
289.91 16.512 289.879 16.441 289.863 16.355 cv
288.023 10.066 li
287.973 9.91803 287.945 9.80103 287.934 9.71503 cv
287.918 9.633 287.91 9.55902 287.914 9.5 cv
287.91 9.44897 287.926 9.40601 287.957 9.36298 cv
287.984 9.328 288.035 9.297 288.113 9.27002 cv
288.188 9.25 288.289 9.22998 288.414 9.21899 cv
288.539 9.211 288.699 9.20697 288.895 9.203 cv
289.102 9.20697 289.27 9.211 289.402 9.21899 cv
289.531 9.22998 289.633 9.25 289.707 9.27301 cv
289.777 9.30103 289.828 9.336 289.859 9.37903 cv
289.887 9.42603 289.91 9.47998 289.926 9.539 cv
291.305 14.641 li
291.32 14.734 li
291.336 14.641 li
292.629 9.539 li
292.641 9.47998 292.668 9.42603 292.703 9.37903 cv
292.734 9.336 292.785 9.30103 292.855 9.27301 cv
292.922 9.25 293.016 9.22998 293.137 9.21899 cv
293.258 9.211 293.414 9.20697 293.609 9.203 cv
293.801 9.20697 293.957 9.21503 294.078 9.22302 cv
294.195 9.23798 294.289 9.25403 294.363 9.27698 cv
294.43 9.30103 294.48 9.33197 294.512 9.37097 cv
294.539 9.40997 294.563 9.45697 294.578 9.508 cv
295.965 14.648 li
295.988 14.734 li
296.004 14.641 li
297.328 9.539 li
297.336 9.47998 297.359 9.42603 297.391 9.37903 cv
297.422 9.336 297.473 9.30103 297.547 9.27301 cv
297.617 9.25 297.715 9.22998 297.84 9.21899 cv
297.961 9.211 298.121 9.20697 298.316 9.203 cv
298.508 9.20697 298.664 9.211 298.789 9.21899 cv
298.91 9.22998 299.008 9.25 299.078 9.27002 cv
299.148 9.297 299.195 9.328 299.223 9.36298 cv
299.246 9.40601 299.258 9.44897 299.262 9.5 cv
cp
f
302.477 16.465 mo
302.473 16.52 302.457 16.562 302.43 16.602 cv
302.395 16.641 302.34 16.676 302.27 16.699 cv
302.191 16.727 302.094 16.742 301.969 16.758 cv
301.844 16.77 301.684 16.777 301.496 16.777 cv
301.301 16.777 301.145 16.77 301.02 16.758 cv
300.895 16.742 300.793 16.727 300.719 16.699 cv
300.641 16.676 300.586 16.641 300.559 16.602 cv
300.523 16.562 300.508 16.52 300.512 16.465 cv
300.512 9.53101 li
300.508 9.47998 300.523 9.43402 300.559 9.39502 cv
300.586 9.35498 300.641 9.32397 300.719 9.29303 cv
300.793 9.27002 300.895 9.24597 301.02 9.22699 cv
301.145 9.21503 301.301 9.20697 301.496 9.203 cv
301.684 9.20697 301.844 9.21503 301.969 9.22699 cv
302.094 9.24597 302.191 9.27002 302.27 9.29303 cv
302.34 9.32397 302.395 9.35498 302.43 9.39502 cv
302.457 9.43402 302.473 9.47998 302.477 9.53101 cv
cp
302.625 7.15997 mo
302.625 7.55902 302.543 7.83197 302.383 7.97998 cv
302.219 8.133 301.922 8.20697 301.488 8.203 cv
301.043 8.20697 300.742 8.133 300.594 7.98798 cv
300.438 7.84399 300.363 7.58197 300.363 7.19897 cv
300.363 6.80499 300.441 6.53101 300.602 6.37903 cv
300.758 6.22699 301.059 6.14801 301.504 6.14801 cv
301.938 6.14801 302.234 6.22302 302.391 6.37097 cv
302.547 6.52002 302.625 6.78497 302.625 7.15997 cv
cp
f
308.555 15.781 mo
308.555 16.008 308.539 16.184 308.512 16.305 cv
308.48 16.43 308.441 16.516 308.398 16.562 cv
308.348 16.613 308.281 16.656 308.191 16.695 cv
308.098 16.734 307.988 16.766 307.871 16.797 cv
307.746 16.82 307.613 16.844 307.473 16.863 cv
307.328 16.875 307.188 16.883 307.043 16.887 cv
306.652 16.883 306.313 16.832 306.027 16.738 cv
305.742 16.637 305.508 16.488 305.32 16.281 cv
305.133 16.078 304.992 15.82 304.906 15.508 cv
304.813 15.199 304.77 14.828 304.773 14.398 cv
304.773 10.84 li
303.941 10.84 li
303.84 10.844 303.766 10.781 303.715 10.656 cv
303.66 10.535 303.633 10.332 303.637 10.043 cv
303.633 9.89502 303.641 9.76599 303.656 9.664 cv
303.668 9.56201 303.688 9.47998 303.715 9.41803 cv
303.738 9.35901 303.77 9.31598 303.813 9.289 cv
303.848 9.26599 303.895 9.25403 303.949 9.25 cv
304.773 9.25 li
304.773 7.69897 li
304.77 7.65198 304.785 7.60498 304.816 7.55902 cv
304.844 7.52002 304.895 7.48401 304.973 7.453 cv
305.047 7.42999 305.148 7.40601 305.277 7.39099 cv
305.402 7.37903 305.559 7.375 305.75 7.37097 cv
305.938 7.375 306.098 7.37903 306.227 7.39099 cv
306.352 7.40601 306.453 7.42999 306.527 7.453 cv
306.598 7.48401 306.648 7.52002 306.684 7.55902 cv
306.711 7.60498 306.727 7.65198 306.73 7.69897 cv
306.73 9.25 li
308.242 9.25 li
308.293 9.25403 308.34 9.26599 308.379 9.289 cv
308.418 9.31598 308.449 9.35901 308.477 9.41803 cv
308.5 9.47998 308.52 9.56201 308.535 9.664 cv
308.547 9.76599 308.555 9.89502 308.555 10.043 cv
308.555 10.332 308.527 10.535 308.477 10.656 cv
308.422 10.781 308.348 10.844 308.25 10.84 cv
306.73 10.84 li
306.73 14.105 li
306.727 14.484 306.785 14.77 306.91 14.957 cv
307.027 15.148 307.242 15.242 307.547 15.242 cv
307.648 15.242 307.742 15.234 307.828 15.215 cv
307.91 15.199 307.984 15.18 308.051 15.152 cv
308.113 15.133 308.168 15.109 308.215 15.09 cv
308.258 15.074 308.297 15.066 308.336 15.062 cv
308.363 15.066 308.395 15.074 308.426 15.09 cv
308.453 15.109 308.473 15.148 308.492 15.199 cv
308.504 15.258 308.52 15.332 308.535 15.422 cv
308.547 15.52 308.555 15.637 308.555 15.781 cv
cp
f
316.617 16.465 mo
316.613 16.52 316.598 16.562 316.57 16.602 cv
316.535 16.641 316.484 16.676 316.414 16.699 cv
316.34 16.727 316.238 16.742 316.113 16.758 cv
315.984 16.77 315.828 16.777 315.645 16.777 cv
315.449 16.777 315.289 16.77 315.164 16.758 cv
315.035 16.742 314.934 16.727 314.863 16.699 cv
314.785 16.676 314.734 16.641 314.707 16.602 cv
314.672 16.562 314.656 16.52 314.66 16.465 cv
314.66 12.5 li
314.656 12.164 314.633 11.898 314.586 11.703 cv
314.535 11.512 314.461 11.348 314.371 11.211 cv
314.277 11.074 314.16 10.969 314.012 10.891 cv
313.863 10.816 313.688 10.777 313.492 10.777 cv
313.238 10.777 312.988 10.871 312.734 11.051 cv
312.48 11.234 312.215 11.496 311.941 11.844 cv
311.941 16.465 li
311.938 16.52 311.922 16.562 311.895 16.602 cv
311.859 16.641 311.805 16.676 311.734 16.699 cv
311.656 16.727 311.559 16.742 311.434 16.758 cv
311.309 16.77 311.148 16.777 310.961 16.777 cv
310.766 16.777 310.609 16.77 310.484 16.758 cv
310.359 16.742 310.258 16.727 310.184 16.699 cv
310.105 16.676 310.051 16.641 310.023 16.602 cv
309.988 16.562 309.973 16.52 309.977 16.465 cv
309.977 6.21899 li
309.973 6.16803 309.988 6.12097 310.023 6.078 cv
310.051 6.039 310.105 6.00403 310.184 5.97302 cv
310.258 5.94501 310.359 5.92603 310.484 5.90601 cv
310.609 5.89502 310.766 5.88702 310.961 5.883 cv
311.148 5.88702 311.309 5.89502 311.434 5.90601 cv
311.559 5.92603 311.656 5.94501 311.734 5.97302 cv
311.805 6.00403 311.859 6.039 311.895 6.078 cv
311.922 6.12097 311.938 6.16803 311.941 6.21899 cv
311.941 10.059 li
312.277 9.72998 312.621 9.48401 312.973 9.31598 cv
313.32 9.15601 313.688 9.07397 314.07 9.07001 cv
314.539 9.07397 314.938 9.15198 315.266 9.30499 cv
315.59 9.46503 315.852 9.67603 316.051 9.94501 cv
316.25 10.215 316.395 10.531 316.484 10.891 cv
316.57 11.254 316.613 11.691 316.617 12.203 cv
cp
f
327.977 7.48798 mo
327.973 7.64801 327.969 7.77698 327.957 7.883 cv
327.941 7.992 327.918 8.078 327.895 8.13702 cv
327.863 8.19897 327.832 8.24597 327.797 8.27301 cv
327.758 8.30902 327.715 8.32397 327.672 8.32001 cv
324.375 8.32001 li
324.375 11.035 li
327.469 11.035 li
327.512 11.035 327.555 11.051 327.594 11.074 cv
327.629 11.105 327.66 11.148 327.691 11.207 cv
327.719 11.27 327.738 11.352 327.754 11.453 cv
327.762 11.559 327.77 11.687 327.773 11.844 cv
327.77 12 327.762 12.133 327.754 12.234 cv
327.738 12.344 327.719 12.43 327.691 12.492 cv
327.66 12.562 327.629 12.609 327.594 12.637 cv
327.555 12.668 327.512 12.684 327.469 12.68 cv
324.375 12.68 li
324.375 16.434 li
324.371 16.492 324.355 16.543 324.328 16.582 cv
324.293 16.629 324.238 16.664 324.16 16.687 cv
324.078 16.719 323.973 16.738 323.844 16.754 cv
323.711 16.77 323.543 16.777 323.348 16.777 cv
323.145 16.777 322.98 16.77 322.852 16.754 cv
322.715 16.738 322.609 16.719 322.535 16.687 cv
322.453 16.664 322.398 16.629 322.367 16.582 cv
322.332 16.543 322.313 16.492 322.316 16.434 cv
322.316 7.29303 li
322.313 7.06598 322.371 6.90198 322.492 6.797 cv
322.605 6.69897 322.75 6.64801 322.926 6.64502 cv
327.672 6.64502 li
327.715 6.64801 327.758 6.65997 327.797 6.68701 cv
327.832 6.71899 327.863 6.76599 327.895 6.828 cv
327.918 6.89502 327.941 6.98401 327.957 7.09003 cv
327.969 7.203 327.973 7.336 327.977 7.48798 cv
cp
f
336.316 12.918 mo
336.313 13.516 336.234 14.059 336.082 14.543 cv
335.922 15.035 335.688 15.453 335.371 15.805 cv
335.055 16.156 334.656 16.43 334.18 16.621 cv
333.699 16.812 333.141 16.906 332.504 16.91 cv
331.883 16.906 331.344 16.824 330.891 16.652 cv
330.43 16.484 330.051 16.234 329.754 15.906 cv
329.449 15.582 329.227 15.18 329.082 14.699 cv
328.938 14.223 328.867 13.676 328.867 13.059 cv
328.867 12.469 328.945 11.93 329.102 11.437 cv
329.258 10.949 329.496 10.527 329.816 10.176 cv
330.133 9.828 330.527 9.55499 331.004 9.35901 cv
331.477 9.16803 332.035 9.07397 332.676 9.07001 cv
333.301 9.07397 333.84 9.15601 334.297 9.32397 cv
334.754 9.49597 335.133 9.74597 335.43 10.07 cv
335.727 10.398 335.949 10.801 336.098 11.277 cv
336.242 11.758 336.313 12.305 336.316 12.918 cv
cp
334.297 12.996 mo
334.293 12.66 334.266 12.344 334.215 12.051 cv
334.156 11.766 334.063 11.516 333.938 11.301 cv
333.805 11.09 333.633 10.922 333.422 10.801 cv
333.203 10.684 332.934 10.625 332.605 10.621 cv
332.316 10.625 332.063 10.68 331.844 10.781 cv
331.625 10.891 331.445 11.047 331.305 11.25 cv
331.164 11.457 331.059 11.703 330.988 11.988 cv
330.918 12.281 330.883 12.609 330.883 12.973 cv
330.883 13.32 330.91 13.637 330.969 13.922 cv
331.023 14.215 331.117 14.465 331.246 14.676 cv
331.371 14.891 331.543 15.055 331.766 15.168 cv
331.98 15.289 332.25 15.348 332.574 15.344 cv
332.867 15.348 333.125 15.293 333.348 15.184 cv
333.563 15.078 333.742 14.926 333.883 14.719 cv
334.023 14.52 334.125 14.273 334.195 13.984 cv
334.258 13.699 334.293 13.371 334.297 12.996 cv
cp
f
344.5 16.465 mo
344.496 16.52 344.484 16.562 344.461 16.602 cv
344.434 16.641 344.387 16.676 344.324 16.699 cv
344.258 16.727 344.172 16.742 344.066 16.758 cv
343.961 16.77 343.828 16.777 343.668 16.777 cv
343.492 16.777 343.352 16.77 343.25 16.758 cv
343.141 16.742 343.059 16.727 342.996 16.699 cv
342.934 16.676 342.887 16.641 342.863 16.602 cv
342.832 16.562 342.82 16.52 342.824 16.465 cv
342.824 15.664 li
342.438 16.078 342.047 16.391 341.652 16.598 cv
341.25 16.805 340.84 16.906 340.418 16.91 cv
339.938 16.906 339.535 16.832 339.211 16.676 cv
338.887 16.523 338.625 16.309 338.426 16.039 cv
338.223 15.77 338.078 15.457 337.996 15.098 cv
337.906 14.742 337.863 14.301 337.867 13.77 cv
337.867 9.51599 li
337.863 9.46899 337.879 9.422 337.91 9.37903 cv
337.938 9.34399 337.988 9.31201 338.066 9.28101 cv
338.141 9.258 338.242 9.23798 338.371 9.22302 cv
338.496 9.21503 338.652 9.20697 338.844 9.203 cv
339.031 9.20697 339.191 9.21503 339.316 9.22302 cv
339.441 9.23798 339.539 9.258 339.617 9.28101 cv
339.688 9.31201 339.742 9.34399 339.777 9.37903 cv
339.805 9.422 339.82 9.46899 339.824 9.51599 cv
339.824 13.441 li
339.82 13.809 339.844 14.086 339.895 14.277 cv
339.938 14.469 340.008 14.633 340.109 14.77 cv
340.203 14.91 340.328 15.016 340.477 15.09 cv
340.625 15.168 340.797 15.207 340.992 15.203 cv
341.242 15.207 341.492 15.117 341.746 14.93 cv
341.996 14.75 342.266 14.484 342.551 14.137 cv
342.551 9.51599 li
342.551 9.46899 342.563 9.422 342.594 9.37903 cv
342.617 9.34399 342.672 9.31201 342.75 9.28101 cv
342.824 9.258 342.922 9.23798 343.051 9.22302 cv
343.172 9.21503 343.332 9.20697 343.527 9.203 cv
343.719 9.20697 343.875 9.21503 344 9.22302 cv
344.121 9.23798 344.223 9.258 344.297 9.28101 cv
344.367 9.31201 344.418 9.34399 344.453 9.37903 cv
344.48 9.422 344.496 9.46899 344.5 9.51599 cv
cp
f
350.898 10.16 mo
350.898 10.352 350.891 10.504 350.883 10.621 cv
350.867 10.742 350.852 10.836 350.836 10.902 cv
350.813 10.973 350.785 11.02 350.754 11.043 cv
350.715 11.07 350.672 11.082 350.625 11.082 cv
350.578 11.082 350.531 11.074 350.484 11.055 cv
350.43 11.039 350.371 11.02 350.309 10.996 cv
350.238 10.977 350.168 10.957 350.094 10.937 cv
350.012 10.922 349.926 10.914 349.836 10.91 cv
349.723 10.914 349.613 10.934 349.508 10.977 cv
349.398 11.023 349.285 11.094 349.172 11.184 cv
349.051 11.277 348.93 11.402 348.805 11.555 cv
348.676 11.715 348.539 11.906 348.395 12.133 cv
348.395 16.465 li
348.391 16.52 348.375 16.562 348.348 16.602 cv
348.313 16.641 348.258 16.676 348.188 16.699 cv
348.109 16.727 348.012 16.742 347.887 16.758 cv
347.762 16.77 347.602 16.777 347.414 16.777 cv
347.219 16.777 347.063 16.77 346.938 16.758 cv
346.813 16.742 346.711 16.727 346.637 16.699 cv
346.559 16.676 346.504 16.641 346.477 16.602 cv
346.441 16.562 346.426 16.52 346.43 16.465 cv
346.43 9.51599 li
346.426 9.46899 346.441 9.422 346.469 9.37903 cv
346.492 9.34399 346.539 9.31201 346.609 9.28101 cv
346.676 9.258 346.762 9.23798 346.871 9.22302 cv
346.977 9.21503 347.109 9.20697 347.273 9.203 cv
347.438 9.20697 347.574 9.21503 347.684 9.22302 cv
347.789 9.23798 347.875 9.258 347.938 9.28101 cv
347.996 9.31201 348.039 9.34399 348.066 9.37903 cv
348.09 9.422 348.102 9.46899 348.105 9.51599 cv
348.105 10.379 li
348.285 10.121 348.457 9.90997 348.621 9.73798 cv
348.777 9.57397 348.934 9.43701 349.082 9.336 cv
349.227 9.23798 349.371 9.172 349.516 9.12903 cv
349.66 9.09399 349.805 9.07397 349.953 9.07001 cv
350.02 9.07397 350.094 9.078 350.172 9.08197 cv
350.25 9.09399 350.328 9.10498 350.414 9.12097 cv
350.492 9.14099 350.566 9.15997 350.633 9.18402 cv
350.691 9.20697 350.738 9.23401 350.77 9.258 cv
350.797 9.289 350.816 9.31598 350.832 9.34399 cv
350.844 9.37903 350.855 9.422 350.867 9.47302 cv
350.875 9.53101 350.883 9.61298 350.891 9.71899 cv
350.895 9.828 350.898 9.97699 350.898 10.16 cv
cp
f
362.719 7.48798 mo
362.715 7.64502 362.707 7.77301 362.699 7.875 cv
362.684 7.98401 362.664 8.07001 362.641 8.133 cv
362.609 8.19897 362.578 8.24597 362.543 8.27301 cv
362.5 8.30902 362.457 8.32397 362.414 8.32001 cv
359.891 8.32001 li
359.891 16.449 li
359.891 16.504 359.871 16.551 359.84 16.59 cv
359.801 16.633 359.746 16.668 359.672 16.691 cv
359.59 16.719 359.484 16.738 359.355 16.754 cv
359.219 16.77 359.055 16.777 358.859 16.777 cv
358.664 16.777 358.5 16.77 358.367 16.754 cv
358.234 16.738 358.129 16.719 358.051 16.691 cv
357.973 16.668 357.914 16.633 357.883 16.59 cv
357.844 16.551 357.828 16.504 357.832 16.449 cv
357.832 8.32001 li
355.309 8.32001 li
355.254 8.32397 355.207 8.30902 355.176 8.27301 cv
355.137 8.24597 355.105 8.19897 355.082 8.133 cv
355.051 8.07001 355.031 7.98401 355.023 7.875 cv
355.008 7.77301 355.004 7.64502 355.004 7.48798 cv
355.004 7.336 355.008 7.203 355.023 7.09003 cv
355.031 6.98401 355.051 6.89502 355.082 6.828 cv
355.105 6.76599 355.137 6.71899 355.176 6.68701 cv
355.207 6.65997 355.254 6.64801 355.309 6.64502 cv
362.414 6.64502 li
362.457 6.64801 362.5 6.65997 362.543 6.68701 cv
362.578 6.71899 362.609 6.76599 362.641 6.828 cv
362.664 6.89502 362.684 6.98401 362.699 7.09003 cv
362.707 7.203 362.715 7.336 362.719 7.48798 cv
cp
f
370.434 16.465 mo
370.43 16.52 370.414 16.562 370.387 16.602 cv
370.352 16.641 370.301 16.676 370.23 16.699 cv
370.156 16.727 370.055 16.742 369.93 16.758 cv
369.801 16.77 369.645 16.777 369.461 16.777 cv
369.266 16.777 369.105 16.77 368.98 16.758 cv
368.852 16.742 368.75 16.727 368.68 16.699 cv
368.602 16.676 368.551 16.641 368.523 16.602 cv
368.488 16.562 368.473 16.52 368.477 16.465 cv
368.477 12.5 li
368.473 12.164 368.449 11.898 368.402 11.703 cv
368.352 11.512 368.277 11.348 368.188 11.211 cv
368.094 11.074 367.977 10.969 367.828 10.891 cv
367.68 10.816 367.504 10.777 367.309 10.777 cv
367.055 10.777 366.805 10.871 366.551 11.051 cv
366.297 11.234 366.031 11.496 365.758 11.844 cv
365.758 16.465 li
365.754 16.52 365.738 16.562 365.711 16.602 cv
365.676 16.641 365.621 16.676 365.551 16.699 cv
365.473 16.727 365.375 16.742 365.25 16.758 cv
365.125 16.77 364.965 16.777 364.777 16.777 cv
364.582 16.777 364.426 16.77 364.301 16.758 cv
364.176 16.742 364.074 16.727 364 16.699 cv
363.922 16.676 363.867 16.641 363.84 16.602 cv
363.805 16.562 363.789 16.52 363.793 16.465 cv
363.793 6.21899 li
363.789 6.16803 363.805 6.12097 363.84 6.078 cv
363.867 6.039 363.922 6.00403 364 5.97302 cv
364.074 5.94501 364.176 5.92603 364.301 5.90601 cv
364.426 5.89502 364.582 5.88702 364.777 5.883 cv
364.965 5.88702 365.125 5.89502 365.25 5.90601 cv
365.375 5.92603 365.473 5.94501 365.551 5.97302 cv
365.621 6.00403 365.676 6.039 365.711 6.078 cv
365.738 6.12097 365.754 6.16803 365.758 6.21899 cv
365.758 10.059 li
366.094 9.72998 366.438 9.48401 366.789 9.31598 cv
367.137 9.15601 367.504 9.07397 367.887 9.07001 cv
368.355 9.07397 368.754 9.15198 369.082 9.30499 cv
369.406 9.46503 369.668 9.67603 369.867 9.94501 cv
370.066 10.215 370.211 10.531 370.301 10.891 cv
370.387 11.254 370.43 11.691 370.434 12.203 cv
cp
f
376.832 10.16 mo
376.832 10.352 376.824 10.504 376.816 10.621 cv
376.801 10.742 376.785 10.836 376.77 10.902 cv
376.746 10.973 376.719 11.02 376.688 11.043 cv
376.648 11.07 376.605 11.082 376.559 11.082 cv
376.512 11.082 376.465 11.074 376.418 11.055 cv
376.363 11.039 376.305 11.02 376.242 10.996 cv
376.172 10.977 376.102 10.957 376.027 10.937 cv
375.945 10.922 375.859 10.914 375.77 10.91 cv
375.656 10.914 375.547 10.934 375.441 10.977 cv
375.332 11.023 375.219 11.094 375.105 11.184 cv
374.984 11.277 374.863 11.402 374.738 11.555 cv
374.609 11.715 374.473 11.906 374.328 12.133 cv
374.328 16.465 li
374.324 16.52 374.309 16.562 374.281 16.602 cv
374.246 16.641 374.191 16.676 374.121 16.699 cv
374.043 16.727 373.945 16.742 373.82 16.758 cv
373.695 16.77 373.535 16.777 373.348 16.777 cv
373.152 16.777 372.996 16.77 372.871 16.758 cv
372.746 16.742 372.645 16.727 372.57 16.699 cv
372.492 16.676 372.438 16.641 372.41 16.602 cv
372.375 16.562 372.359 16.52 372.363 16.465 cv
372.363 9.51599 li
372.359 9.46899 372.375 9.422 372.402 9.37903 cv
372.426 9.34399 372.473 9.31201 372.543 9.28101 cv
372.609 9.258 372.695 9.23798 372.805 9.22302 cv
372.91 9.21503 373.043 9.20697 373.207 9.203 cv
373.371 9.20697 373.508 9.21503 373.617 9.22302 cv
373.723 9.23798 373.809 9.258 373.871 9.28101 cv
373.93 9.31201 373.973 9.34399 374 9.37903 cv
374.023 9.422 374.035 9.46899 374.039 9.51599 cv
374.039 10.379 li
374.219 10.121 374.391 9.90997 374.555 9.73798 cv
374.711 9.57397 374.867 9.43701 375.016 9.336 cv
375.16 9.23798 375.305 9.172 375.449 9.12903 cv
375.594 9.09399 375.738 9.07397 375.887 9.07001 cv
375.953 9.07397 376.027 9.078 376.105 9.08197 cv
376.184 9.09399 376.262 9.10498 376.348 9.12097 cv
376.426 9.14099 376.5 9.15997 376.566 9.18402 cv
376.625 9.20697 376.672 9.23401 376.703 9.258 cv
376.73 9.289 376.75 9.31598 376.766 9.34399 cv
376.777 9.37903 376.789 9.422 376.801 9.47302 cv
376.809 9.53101 376.816 9.61298 376.824 9.71899 cv
376.828 9.828 376.832 9.97699 376.832 10.16 cv
cp
f
384.273 12.789 mo
384.27 13.027 384.219 13.203 384.113 13.316 cv
384.004 13.434 383.855 13.492 383.676 13.488 cv
379.441 13.488 li
379.438 13.789 379.473 14.059 379.547 14.297 cv
379.613 14.539 379.727 14.742 379.883 14.91 cv
380.035 15.082 380.23 15.211 380.473 15.297 cv
380.711 15.387 381 15.43 381.344 15.43 cv
381.684 15.43 381.984 15.406 382.246 15.355 cv
382.504 15.309 382.73 15.254 382.922 15.191 cv
383.109 15.133 383.266 15.078 383.395 15.027 cv
383.516 14.98 383.617 14.957 383.699 14.953 cv
383.742 14.957 383.781 14.965 383.816 14.98 cv
383.844 15 383.871 15.031 383.891 15.078 cv
383.91 15.125 383.922 15.191 383.934 15.277 cv
383.938 15.363 383.941 15.473 383.945 15.602 cv
383.941 15.719 383.941 15.816 383.938 15.895 cv
383.93 15.977 383.922 16.043 383.914 16.098 cv
383.902 16.156 383.887 16.207 383.867 16.242 cv
383.848 16.285 383.82 16.32 383.789 16.355 cv
383.754 16.395 383.66 16.445 383.512 16.504 cv
383.355 16.57 383.164 16.633 382.934 16.687 cv
382.695 16.75 382.426 16.797 382.129 16.844 cv
381.824 16.883 381.504 16.906 381.164 16.91 cv
380.543 16.906 380 16.832 379.539 16.676 cv
379.07 16.523 378.684 16.285 378.375 15.969 cv
378.059 15.652 377.824 15.254 377.676 14.77 cv
377.52 14.289 377.445 13.723 377.449 13.066 cv
377.445 12.453 377.523 11.895 377.688 11.398 cv
377.844 10.902 378.078 10.484 378.391 10.137 cv
378.695 9.79303 379.07 9.52698 379.508 9.34399 cv
379.945 9.164 380.438 9.07397 380.992 9.07001 cv
381.57 9.07397 382.07 9.15997 382.484 9.328 cv
382.898 9.50403 383.234 9.742 383.5 10.043 cv
383.762 10.348 383.957 10.707 384.086 11.121 cv
384.207 11.539 384.27 11.988 384.273 12.477 cv
cp
382.371 12.227 mo
382.383 11.676 382.273 11.242 382.039 10.93 cv
381.805 10.617 381.438 10.461 380.945 10.457 cv
380.695 10.461 380.48 10.508 380.297 10.598 cv
380.109 10.695 379.957 10.82 379.836 10.977 cv
379.711 11.137 379.617 11.324 379.555 11.539 cv
379.488 11.754 379.449 11.984 379.441 12.227 cv
cp
f
391.809 16.488 mo
391.805 16.566 391.777 16.621 391.73 16.66 cv
391.676 16.703 391.594 16.73 391.484 16.75 cv
391.367 16.766 391.203 16.777 390.988 16.777 cv
390.75 16.777 390.578 16.766 390.477 16.75 cv
390.367 16.73 390.293 16.703 390.254 16.66 cv
390.207 16.621 390.188 16.566 390.188 16.488 cv
390.188 15.937 li
389.898 16.246 389.57 16.484 389.207 16.652 cv
388.84 16.824 388.434 16.906 387.988 16.91 cv
387.617 16.906 387.277 16.859 386.969 16.766 cv
386.66 16.672 386.395 16.531 386.168 16.336 cv
385.941 16.148 385.766 15.914 385.641 15.633 cv
385.516 15.355 385.453 15.027 385.457 14.648 cv
385.453 14.25 385.531 13.898 385.691 13.594 cv
385.848 13.297 386.086 13.051 386.402 12.855 cv
386.715 12.664 387.105 12.52 387.574 12.422 cv
388.043 12.332 388.586 12.285 389.203 12.281 cv
389.883 12.281 li
389.883 11.859 li
389.883 11.645 389.859 11.453 389.816 11.289 cv
389.77 11.129 389.695 10.992 389.598 10.879 cv
389.492 10.773 389.359 10.691 389.191 10.637 cv
389.02 10.586 388.809 10.562 388.566 10.559 cv
388.234 10.562 387.941 10.598 387.688 10.668 cv
387.426 10.742 387.199 10.824 387.004 10.91 cv
386.805 11.004 386.641 11.082 386.512 11.152 cv
386.375 11.227 386.266 11.266 386.188 11.262 cv
386.125 11.266 386.074 11.246 386.035 11.207 cv
385.988 11.172 385.953 11.121 385.926 11.051 cv
385.895 10.988 385.871 10.902 385.859 10.801 cv
385.84 10.703 385.832 10.594 385.836 10.473 cv
385.832 10.312 385.848 10.187 385.875 10.09 cv
385.898 10 385.945 9.914 386.023 9.836 cv
386.094 9.76202 386.223 9.67999 386.406 9.59003 cv
386.586 9.5 386.797 9.414 387.043 9.336 cv
387.285 9.258 387.555 9.19501 387.844 9.14502 cv
388.133 9.09802 388.43 9.07397 388.738 9.07001 cv
389.281 9.07397 389.746 9.125 390.133 9.22998 cv
390.52 9.34003 390.84 9.50403 391.09 9.72302 cv
391.34 9.94098 391.52 10.227 391.637 10.574 cv
391.746 10.926 391.805 11.34 391.809 11.812 cv
cp
389.883 13.512 mo
389.133 13.512 li
388.816 13.516 388.547 13.539 388.324 13.582 cv
388.098 13.633 387.914 13.703 387.777 13.793 cv
387.633 13.891 387.531 14.004 387.469 14.133 cv
387.402 14.27 387.367 14.418 387.371 14.586 cv
387.367 14.879 387.461 15.109 387.648 15.273 cv
387.832 15.441 388.09 15.523 388.418 15.523 cv
388.691 15.523 388.941 15.453 389.176 15.312 cv
389.402 15.172 389.641 14.969 389.883 14.695 cv
cp
f
400.391 16.465 mo
400.387 16.527 400.375 16.574 400.352 16.609 cv
400.324 16.652 400.277 16.684 400.219 16.707 cv
400.152 16.73 400.07 16.746 399.965 16.762 cv
399.859 16.77 399.727 16.777 399.574 16.777 cv
399.402 16.777 399.27 16.77 399.168 16.762 cv
399.063 16.746 398.977 16.73 398.914 16.707 cv
398.848 16.684 398.801 16.652 398.773 16.609 cv
398.742 16.574 398.727 16.527 398.73 16.465 cv
398.73 15.695 li
398.371 16.082 397.996 16.379 397.605 16.59 cv
397.207 16.801 396.773 16.906 396.301 16.91 cv
395.766 16.906 395.316 16.805 394.953 16.602 cv
394.586 16.398 394.289 16.125 394.059 15.773 cv
393.824 15.43 393.656 15.023 393.555 14.555 cv
393.453 14.094 393.402 13.602 393.402 13.082 cv
393.402 12.469 393.465 11.914 393.598 11.418 cv
393.727 10.926 393.922 10.504 394.18 10.156 cv
394.434 9.80902 394.75 9.54303 395.129 9.35199 cv
395.508 9.16803 395.945 9.07397 396.441 9.07001 cv
396.828 9.07397 397.18 9.15198 397.5 9.30902 cv
397.813 9.46899 398.129 9.69897 398.441 10.004 cv
398.441 6.242 li
398.441 6.19098 398.453 6.14502 398.484 6.10199 cv
398.508 6.06201 398.563 6.02698 398.641 5.99597 cv
398.715 5.96899 398.813 5.94897 398.941 5.92999 cv
399.063 5.91803 399.223 5.90997 399.418 5.90601 cv
399.609 5.90997 399.766 5.91803 399.891 5.92999 cv
400.012 5.94897 400.113 5.96899 400.188 5.99597 cv
400.258 6.02698 400.309 6.06201 400.344 6.10199 cv
400.371 6.14502 400.387 6.19098 400.391 6.242 cv
cp
398.441 11.82 mo
398.16 11.469 397.891 11.199 397.637 11.012 cv
397.375 10.824 397.105 10.73 396.828 10.73 cv
396.574 10.73 396.355 10.797 396.172 10.922 cv
395.984 11.055 395.836 11.223 395.727 11.434 cv
395.613 11.645 395.531 11.883 395.477 12.145 cv
395.422 12.41 395.395 12.68 395.395 12.949 cv
395.395 13.246 395.418 13.527 395.465 13.801 cv
395.512 14.078 395.586 14.324 395.695 14.539 cv
395.797 14.754 395.941 14.926 396.121 15.055 cv
396.297 15.187 396.52 15.254 396.789 15.25 cv
396.922 15.254 397.051 15.234 397.184 15.191 cv
397.309 15.156 397.441 15.094 397.574 15 cv
397.707 14.914 397.844 14.797 397.984 14.652 cv
398.125 14.512 398.277 14.336 398.441 14.129 cv
cp
f
407.215 14.5 mo
407.211 14.898 407.137 15.246 406.992 15.547 cv
406.844 15.848 406.637 16.102 406.367 16.301 cv
406.094 16.508 405.773 16.656 405.406 16.758 cv
405.039 16.855 404.637 16.906 404.207 16.91 cv
403.941 16.906 403.695 16.887 403.461 16.852 cv
403.227 16.809 403.016 16.762 402.828 16.703 cv
402.641 16.645 402.484 16.582 402.359 16.52 cv
402.234 16.457 402.141 16.398 402.086 16.344 cv
402.027 16.289 401.984 16.207 401.957 16.09 cv
401.922 15.977 401.906 15.801 401.91 15.57 cv
401.906 15.422 401.914 15.301 401.926 15.207 cv
401.934 15.117 401.949 15.047 401.973 14.988 cv
401.992 14.937 402.016 14.898 402.051 14.879 cv
402.078 14.863 402.117 14.855 402.164 14.852 cv
402.219 14.855 402.305 14.887 402.418 14.949 cv
402.527 15.016 402.664 15.09 402.836 15.164 cv
403 15.246 403.195 15.316 403.414 15.383 cv
403.633 15.453 403.883 15.488 404.168 15.484 cv
404.344 15.488 404.5 15.469 404.641 15.43 cv
404.773 15.395 404.895 15.344 405 15.273 cv
405.098 15.207 405.172 15.121 405.227 15.016 cv
405.273 14.914 405.301 14.793 405.305 14.656 cv
405.301 14.5 405.254 14.367 405.16 14.258 cv
405.066 14.148 404.938 14.051 404.781 13.965 cv
404.617 13.883 404.438 13.805 404.242 13.73 cv
404.039 13.66 403.836 13.582 403.625 13.488 cv
403.414 13.402 403.207 13.301 403.012 13.184 cv
402.809 13.074 402.629 12.934 402.473 12.766 cv
402.309 12.602 402.184 12.402 402.09 12.164 cv
401.996 11.934 401.949 11.652 401.949 11.32 cv
401.949 10.992 402.012 10.687 402.141 10.406 cv
402.27 10.133 402.457 9.89502 402.703 9.69501 cv
402.945 9.5 403.242 9.34802 403.594 9.23401 cv
403.941 9.12903 404.336 9.07397 404.777 9.07001 cv
404.992 9.07397 405.203 9.09003 405.41 9.117 cv
405.613 9.15198 405.801 9.19098 405.969 9.23401 cv
406.133 9.28497 406.273 9.336 406.391 9.38702 cv
406.504 9.44501 406.586 9.492 406.637 9.52698 cv
406.684 9.57001 406.719 9.60901 406.742 9.64502 cv
406.762 9.68701 406.773 9.73401 406.785 9.78497 cv
406.793 9.84003 406.805 9.90601 406.813 9.98401 cv
406.82 10.07 406.824 10.168 406.824 10.285 cv
406.824 10.426 406.82 10.543 406.813 10.629 cv
406.805 10.723 406.789 10.793 406.773 10.84 cv
406.754 10.895 406.73 10.93 406.703 10.945 cv
406.668 10.969 406.633 10.977 406.594 10.973 cv
406.543 10.977 406.469 10.949 406.375 10.891 cv
406.273 10.84 406.152 10.781 406.004 10.715 cv
405.855 10.656 405.684 10.598 405.488 10.539 cv
405.293 10.488 405.07 10.461 404.824 10.457 cv
404.645 10.461 404.492 10.48 404.363 10.512 cv
404.23 10.551 404.121 10.602 404.043 10.668 cv
403.957 10.738 403.895 10.816 403.855 10.906 cv
403.809 11 403.789 11.098 403.793 11.199 cv
403.789 11.359 403.84 11.496 403.941 11.602 cv
404.039 11.715 404.168 11.809 404.332 11.891 cv
404.492 11.977 404.676 12.055 404.883 12.125 cv
405.086 12.199 405.293 12.281 405.504 12.363 cv
405.711 12.453 405.918 12.551 406.129 12.664 cv
406.332 12.777 406.516 12.918 406.676 13.082 cv
406.836 13.25 406.965 13.449 407.066 13.68 cv
407.16 13.914 407.211 14.187 407.215 14.5 cv
cp
f
416.004 12.812 mo
416 13.113 415.973 13.324 415.918 13.441 cv
415.859 13.566 415.77 13.625 415.645 13.621 cv
412.402 13.621 li
412.273 13.625 412.18 13.562 412.125 13.437 cv
412.063 13.316 412.035 13.109 412.039 12.812 cv
412.035 12.523 412.063 12.316 412.125 12.195 cv
412.18 12.078 412.273 12.02 412.402 12.016 cv
415.645 12.016 li
415.707 12.02 415.758 12.031 415.805 12.055 cv
415.844 12.082 415.883 12.129 415.918 12.187 cv
415.945 12.254 415.969 12.336 415.984 12.437 cv
415.996 12.543 416 12.668 416.004 12.812 cv
cp
f
426.742 15.875 mo
426.738 16.031 426.734 16.164 426.723 16.266 cv
426.707 16.375 426.688 16.461 426.664 16.531 cv
426.637 16.602 426.602 16.652 426.566 16.684 cv
426.523 16.715 426.48 16.73 426.43 16.73 cv
421.809 16.73 li
421.633 16.73 421.488 16.68 421.375 16.578 cv
421.254 16.477 421.195 16.312 421.199 16.082 cv
421.199 6.92603 li
421.195 6.87903 421.215 6.83197 421.25 6.78497 cv
421.281 6.74597 421.336 6.711 421.418 6.68402 cv
421.492 6.65997 421.598 6.64099 421.734 6.62097 cv
421.863 6.60901 422.027 6.60199 422.23 6.59802 cv
422.426 6.60199 422.594 6.60901 422.727 6.62097 cv
422.855 6.64099 422.957 6.65997 423.039 6.68402 cv
423.113 6.711 423.172 6.74597 423.207 6.78497 cv
423.238 6.83197 423.254 6.87903 423.258 6.92603 cv
423.258 15.039 li
426.43 15.039 li
426.48 15.043 426.523 15.059 426.566 15.082 cv
426.602 15.113 426.637 15.16 426.664 15.223 cv
426.688 15.293 426.707 15.379 426.723 15.48 cv
426.734 15.59 426.738 15.719 426.742 15.875 cv
cp
f
434.863 12.918 mo
434.859 13.516 434.781 14.059 434.629 14.543 cv
434.469 15.035 434.234 15.453 433.918 15.805 cv
433.602 16.156 433.203 16.43 432.727 16.621 cv
432.246 16.812 431.688 16.906 431.051 16.91 cv
430.43 16.906 429.891 16.824 429.438 16.652 cv
428.977 16.484 428.598 16.234 428.301 15.906 cv
427.996 15.582 427.773 15.18 427.629 14.699 cv
427.484 14.223 427.414 13.676 427.414 13.059 cv
427.414 12.469 427.492 11.93 427.648 11.437 cv
427.805 10.949 428.043 10.527 428.363 10.176 cv
428.68 9.828 429.074 9.55499 429.551 9.35901 cv
430.023 9.16803 430.582 9.07397 431.223 9.07001 cv
431.848 9.07397 432.387 9.15601 432.844 9.32397 cv
433.301 9.49597 433.68 9.74597 433.977 10.07 cv
434.273 10.398 434.496 10.801 434.645 11.277 cv
434.789 11.758 434.859 12.305 434.863 12.918 cv
cp
432.844 12.996 mo
432.84 12.66 432.813 12.344 432.762 12.051 cv
432.703 11.766 432.609 11.516 432.484 11.301 cv
432.352 11.09 432.18 10.922 431.969 10.801 cv
431.75 10.684 431.48 10.625 431.152 10.621 cv
430.863 10.625 430.609 10.68 430.391 10.781 cv
430.172 10.891 429.992 11.047 429.852 11.25 cv
429.711 11.457 429.605 11.703 429.535 11.988 cv
429.465 12.281 429.43 12.609 429.43 12.973 cv
429.43 13.32 429.457 13.637 429.516 13.922 cv
429.57 14.215 429.664 14.465 429.793 14.676 cv
429.918 14.891 430.09 15.055 430.313 15.168 cv
430.527 15.289 430.797 15.348 431.121 15.344 cv
431.414 15.348 431.672 15.293 431.895 15.184 cv
432.109 15.078 432.289 14.926 432.43 14.719 cv
432.57 14.52 432.672 14.273 432.742 13.984 cv
432.805 13.699 432.84 13.371 432.844 12.996 cv
cp
f
441.68 15.359 mo
441.676 15.496 441.672 15.609 441.668 15.699 cv
441.656 15.793 441.648 15.871 441.637 15.93 cv
441.621 15.992 441.605 16.043 441.59 16.078 cv
441.57 16.121 441.527 16.168 441.469 16.227 cv
441.402 16.289 441.297 16.363 441.148 16.445 cv
440.996 16.535 440.824 16.613 440.633 16.676 cv
440.441 16.746 440.234 16.797 440.008 16.84 cv
439.781 16.879 439.547 16.898 439.313 16.902 cv
438.773 16.898 438.301 16.82 437.887 16.652 cv
437.473 16.488 437.125 16.242 436.848 15.918 cv
436.563 15.594 436.352 15.199 436.211 14.73 cv
436.07 14.266 436 13.727 436 13.121 cv
436 12.426 436.086 11.828 436.258 11.32 cv
436.43 10.816 436.672 10.395 436.988 10.062 cv
437.297 9.72998 437.664 9.48401 438.094 9.32001 cv
438.516 9.15997 438.984 9.078 439.496 9.078 cv
439.703 9.078 439.906 9.09802 440.109 9.133 cv
440.305 9.172 440.492 9.22302 440.668 9.28101 cv
440.84 9.34802 440.996 9.41803 441.137 9.492 cv
441.273 9.57397 441.371 9.64099 441.43 9.69501 cv
441.484 9.75403 441.523 9.80103 441.551 9.836 cv
441.57 9.87903 441.59 9.92999 441.605 9.98798 cv
441.617 10.055 441.629 10.133 441.637 10.219 cv
441.645 10.312 441.648 10.422 441.648 10.551 cv
441.648 10.855 441.621 11.066 441.57 11.187 cv
441.516 11.309 441.449 11.371 441.367 11.367 cv
441.277 11.371 441.184 11.336 441.086 11.262 cv
440.984 11.191 440.867 11.109 440.734 11.02 cv
440.602 10.934 440.441 10.852 440.254 10.777 cv
440.066 10.707 439.84 10.672 439.582 10.668 cv
439.07 10.672 438.684 10.867 438.414 11.258 cv
438.141 11.648 438.004 12.223 438.008 12.98 cv
438.004 13.355 438.039 13.687 438.109 13.973 cv
438.176 14.258 438.273 14.496 438.41 14.687 cv
438.539 14.883 438.707 15.027 438.91 15.121 cv
439.109 15.219 439.34 15.266 439.605 15.266 cv
439.871 15.266 440.105 15.227 440.305 15.145 cv
440.496 15.066 440.664 14.977 440.813 14.875 cv
440.953 14.777 441.078 14.687 441.18 14.605 cv
441.277 14.527 441.359 14.488 441.43 14.484 cv
441.473 14.488 441.512 14.5 441.547 14.523 cv
441.574 14.551 441.598 14.598 441.621 14.668 cv
441.637 14.738 441.652 14.828 441.664 14.937 cv
441.672 15.047 441.676 15.187 441.68 15.359 cv
cp
f
448.969 16.488 mo
448.965 16.566 448.938 16.621 448.891 16.66 cv
448.836 16.703 448.754 16.73 448.645 16.75 cv
448.527 16.766 448.363 16.777 448.148 16.777 cv
447.91 16.777 447.738 16.766 447.637 16.75 cv
447.527 16.73 447.453 16.703 447.414 16.66 cv
447.367 16.621 447.348 16.566 447.348 16.488 cv
447.348 15.937 li
447.059 16.246 446.73 16.484 446.367 16.652 cv
446 16.824 445.594 16.906 445.148 16.91 cv
444.777 16.906 444.438 16.859 444.129 16.766 cv
443.82 16.672 443.555 16.531 443.328 16.336 cv
443.102 16.148 442.926 15.914 442.801 15.633 cv
442.676 15.355 442.613 15.027 442.617 14.648 cv
442.613 14.25 442.691 13.898 442.852 13.594 cv
443.008 13.297 443.246 13.051 443.563 12.855 cv
443.875 12.664 444.266 12.52 444.734 12.422 cv
445.203 12.332 445.746 12.285 446.363 12.281 cv
447.043 12.281 li
447.043 11.859 li
447.043 11.645 447.02 11.453 446.977 11.289 cv
446.93 11.129 446.855 10.992 446.758 10.879 cv
446.652 10.773 446.52 10.691 446.352 10.637 cv
446.18 10.586 445.969 10.562 445.727 10.559 cv
445.395 10.562 445.102 10.598 444.848 10.668 cv
444.586 10.742 444.359 10.824 444.164 10.91 cv
443.965 11.004 443.801 11.082 443.672 11.152 cv
443.535 11.227 443.426 11.266 443.348 11.262 cv
443.285 11.266 443.234 11.246 443.195 11.207 cv
443.148 11.172 443.113 11.121 443.086 11.051 cv
443.055 10.988 443.031 10.902 443.02 10.801 cv
443 10.703 442.992 10.594 442.996 10.473 cv
442.992 10.312 443.008 10.187 443.035 10.09 cv
443.059 10 443.105 9.914 443.184 9.836 cv
443.254 9.76202 443.383 9.67999 443.566 9.59003 cv
443.746 9.5 443.957 9.414 444.203 9.336 cv
444.445 9.258 444.715 9.19501 445.004 9.14502 cv
445.293 9.09802 445.59 9.07397 445.898 9.07001 cv
446.441 9.07397 446.906 9.125 447.293 9.22998 cv
447.68 9.34003 448 9.50403 448.25 9.72302 cv
448.5 9.94098 448.68 10.227 448.797 10.574 cv
448.906 10.926 448.965 11.34 448.969 11.812 cv
cp
447.043 13.512 mo
446.293 13.512 li
445.977 13.516 445.707 13.539 445.484 13.582 cv
445.258 13.633 445.074 13.703 444.938 13.793 cv
444.793 13.891 444.691 14.004 444.629 14.133 cv
444.563 14.27 444.527 14.418 444.531 14.586 cv
444.527 14.879 444.621 15.109 444.809 15.273 cv
444.992 15.441 445.25 15.523 445.578 15.523 cv
445.852 15.523 446.102 15.453 446.336 15.312 cv
446.563 15.172 446.801 14.969 447.043 14.695 cv
cp
f
452.891 16.465 mo
452.887 16.52 452.871 16.562 452.844 16.602 cv
452.809 16.641 452.754 16.676 452.684 16.699 cv
452.605 16.727 452.508 16.742 452.383 16.758 cv
452.258 16.77 452.098 16.777 451.91 16.777 cv
451.715 16.777 451.559 16.77 451.434 16.758 cv
451.309 16.742 451.207 16.727 451.133 16.699 cv
451.055 16.676 451 16.641 450.973 16.602 cv
450.938 16.562 450.922 16.52 450.926 16.465 cv
450.926 6.21899 li
450.922 6.16803 450.938 6.12097 450.973 6.078 cv
451 6.039 451.055 6.00403 451.133 5.97302 cv
451.207 5.94501 451.309 5.92603 451.434 5.90601 cv
451.559 5.89502 451.715 5.88702 451.91 5.883 cv
452.098 5.88702 452.258 5.89502 452.383 5.90601 cv
452.508 5.92603 452.605 5.94501 452.684 5.97302 cv
452.754 6.00403 452.809 6.039 452.844 6.078 cv
452.871 6.12097 452.887 6.16803 452.891 6.21899 cv
cp
f
470.379 16.449 mo
470.375 16.504 470.363 16.551 470.336 16.59 cv
470.305 16.633 470.25 16.668 470.18 16.691 cv
470.102 16.719 470.004 16.738 469.879 16.754 cv
469.754 16.77 469.594 16.777 469.402 16.777 cv
469.215 16.777 469.059 16.77 468.938 16.754 cv
468.809 16.738 468.711 16.719 468.641 16.691 cv
468.566 16.668 468.516 16.633 468.484 16.59 cv
468.453 16.551 468.438 16.504 468.438 16.449 cv
468.438 8.242 li
468.422 8.242 li
465.5 16.441 li
465.477 16.512 465.441 16.566 465.398 16.609 cv
465.348 16.656 465.285 16.691 465.207 16.715 cv
465.125 16.742 465.023 16.758 464.898 16.766 cv
464.773 16.773 464.621 16.777 464.449 16.777 cv
464.27 16.777 464.121 16.77 463.996 16.758 cv
463.871 16.742 463.766 16.723 463.688 16.695 cv
463.602 16.668 463.539 16.633 463.496 16.59 cv
463.445 16.551 463.414 16.504 463.402 16.441 cv
460.582 8.242 li
460.566 8.242 li
460.566 16.449 li
460.563 16.504 460.547 16.551 460.523 16.59 cv
460.492 16.633 460.441 16.668 460.363 16.691 cv
460.285 16.719 460.184 16.738 460.063 16.754 cv
459.938 16.77 459.781 16.777 459.594 16.777 cv
459.402 16.777 459.246 16.77 459.125 16.754 cv
458.996 16.738 458.895 16.719 458.824 16.691 cv
458.746 16.668 458.695 16.633 458.668 16.59 cv
458.637 16.551 458.621 16.504 458.625 16.449 cv
458.625 7.46503 li
458.621 7.203 458.691 7 458.836 6.85498 cv
458.973 6.71899 459.16 6.64801 459.398 6.64502 cv
460.738 6.64502 li
460.977 6.64801 461.18 6.66803 461.352 6.703 cv
461.52 6.74597 461.668 6.80902 461.797 6.89801 cv
461.918 6.992 462.023 7.11298 462.109 7.258 cv
462.191 7.40997 462.262 7.59399 462.328 7.80902 cv
464.512 13.816 li
464.543 13.816 li
466.801 7.82397 li
466.867 7.60498 466.941 7.422 467.023 7.27002 cv
467.102 7.12097 467.195 7 467.305 6.90198 cv
467.41 6.81201 467.535 6.74597 467.68 6.703 cv
467.824 6.66803 467.992 6.64801 468.188 6.64502 cv
469.566 6.64502 li
469.703 6.64801 469.824 6.664 469.93 6.69897 cv
470.027 6.73798 470.109 6.79303 470.18 6.85901 cv
470.242 6.93402 470.293 7.02002 470.328 7.117 cv
470.359 7.22302 470.375 7.34003 470.379 7.46503 cv
cp
f
479.488 12.918 mo
479.484 13.516 479.406 14.059 479.254 14.543 cv
479.094 15.035 478.859 15.453 478.543 15.805 cv
478.227 16.156 477.828 16.43 477.352 16.621 cv
476.871 16.812 476.313 16.906 475.676 16.91 cv
475.055 16.906 474.516 16.824 474.063 16.652 cv
473.602 16.484 473.223 16.234 472.926 15.906 cv
472.621 15.582 472.398 15.18 472.254 14.699 cv
472.109 14.223 472.039 13.676 472.039 13.059 cv
472.039 12.469 472.117 11.93 472.273 11.437 cv
472.43 10.949 472.668 10.527 472.988 10.176 cv
473.305 9.828 473.699 9.55499 474.176 9.35901 cv
474.648 9.16803 475.207 9.07397 475.848 9.07001 cv
476.473 9.07397 477.012 9.15601 477.469 9.32397 cv
477.926 9.49597 478.305 9.74597 478.602 10.07 cv
478.898 10.398 479.121 10.801 479.27 11.277 cv
479.414 11.758 479.484 12.305 479.488 12.918 cv
cp
477.469 12.996 mo
477.465 12.66 477.438 12.344 477.387 12.051 cv
477.328 11.766 477.234 11.516 477.109 11.301 cv
476.977 11.09 476.805 10.922 476.594 10.801 cv
476.375 10.684 476.105 10.625 475.777 10.621 cv
475.488 10.625 475.234 10.68 475.016 10.781 cv
474.797 10.891 474.617 11.047 474.477 11.25 cv
474.336 11.457 474.23 11.703 474.16 11.988 cv
474.09 12.281 474.055 12.609 474.055 12.973 cv
474.055 13.32 474.082 13.637 474.141 13.922 cv
474.195 14.215 474.289 14.465 474.418 14.676 cv
474.543 14.891 474.715 15.055 474.938 15.168 cv
475.152 15.289 475.422 15.348 475.746 15.344 cv
476.039 15.348 476.297 15.293 476.52 15.184 cv
476.734 15.078 476.914 14.926 477.055 14.719 cv
477.195 14.52 477.297 14.273 477.367 13.984 cv
477.43 13.699 477.465 13.371 477.469 12.996 cv
cp
f
487.637 16.465 mo
487.633 16.527 487.621 16.574 487.598 16.609 cv
487.57 16.652 487.523 16.684 487.465 16.707 cv
487.398 16.73 487.316 16.746 487.211 16.762 cv
487.105 16.77 486.973 16.777 486.82 16.777 cv
486.648 16.777 486.516 16.77 486.414 16.762 cv
486.309 16.746 486.223 16.73 486.16 16.707 cv
486.094 16.684 486.047 16.652 486.02 16.609 cv
485.988 16.574 485.973 16.527 485.977 16.465 cv
485.977 15.695 li
485.617 16.082 485.242 16.379 484.852 16.59 cv
484.453 16.801 484.02 16.906 483.547 16.91 cv
483.012 16.906 482.563 16.805 482.199 16.602 cv
481.832 16.398 481.535 16.125 481.305 15.773 cv
481.07 15.43 480.902 15.023 480.801 14.555 cv
480.699 14.094 480.648 13.602 480.648 13.082 cv
480.648 12.469 480.711 11.914 480.844 11.418 cv
480.973 10.926 481.168 10.504 481.426 10.156 cv
481.68 9.80902 481.996 9.54303 482.375 9.35199 cv
482.754 9.16803 483.191 9.07397 483.688 9.07001 cv
484.074 9.07397 484.426 9.15198 484.746 9.30902 cv
485.059 9.46899 485.375 9.69897 485.688 10.004 cv
485.688 6.242 li
485.688 6.19098 485.699 6.14502 485.73 6.10199 cv
485.754 6.06201 485.809 6.02698 485.887 5.99597 cv
485.961 5.96899 486.059 5.94897 486.188 5.92999 cv
486.309 5.91803 486.469 5.90997 486.664 5.90601 cv
486.855 5.90997 487.012 5.91803 487.137 5.92999 cv
487.258 5.94897 487.359 5.96899 487.434 5.99597 cv
487.504 6.02698 487.555 6.06201 487.59 6.10199 cv
487.617 6.14502 487.633 6.19098 487.637 6.242 cv
cp
485.688 11.82 mo
485.406 11.469 485.137 11.199 484.883 11.012 cv
484.621 10.824 484.352 10.73 484.074 10.73 cv
483.82 10.73 483.602 10.797 483.418 10.922 cv
483.23 11.055 483.082 11.223 482.973 11.434 cv
482.859 11.645 482.777 11.883 482.723 12.145 cv
482.668 12.41 482.641 12.68 482.641 12.949 cv
482.641 13.246 482.664 13.527 482.711 13.801 cv
482.758 14.078 482.832 14.324 482.941 14.539 cv
483.043 14.754 483.188 14.926 483.367 15.055 cv
483.543 15.187 483.766 15.254 484.035 15.25 cv
484.168 15.254 484.297 15.234 484.43 15.191 cv
484.555 15.156 484.688 15.094 484.82 15 cv
484.953 14.914 485.09 14.797 485.23 14.652 cv
485.371 14.512 485.523 14.336 485.688 14.129 cv
cp
f
496.035 12.789 mo
496.031 13.027 495.98 13.203 495.875 13.316 cv
495.766 13.434 495.617 13.492 495.438 13.488 cv
491.203 13.488 li
491.199 13.789 491.234 14.059 491.309 14.297 cv
491.375 14.539 491.488 14.742 491.645 14.91 cv
491.797 15.082 491.992 15.211 492.234 15.297 cv
492.473 15.387 492.762 15.43 493.105 15.43 cv
493.445 15.43 493.746 15.406 494.008 15.355 cv
494.266 15.309 494.492 15.254 494.684 15.191 cv
494.871 15.133 495.027 15.078 495.156 15.027 cv
495.277 14.98 495.379 14.957 495.461 14.953 cv
495.504 14.957 495.543 14.965 495.578 14.98 cv
495.605 15 495.633 15.031 495.652 15.078 cv
495.672 15.125 495.684 15.191 495.695 15.277 cv
495.699 15.363 495.703 15.473 495.707 15.602 cv
495.703 15.719 495.703 15.816 495.699 15.895 cv
495.691 15.977 495.684 16.043 495.676 16.098 cv
495.664 16.156 495.648 16.207 495.629 16.242 cv
495.609 16.285 495.582 16.32 495.551 16.355 cv
495.516 16.395 495.422 16.445 495.273 16.504 cv
495.117 16.57 494.926 16.633 494.695 16.687 cv
494.457 16.75 494.188 16.797 493.891 16.844 cv
493.586 16.883 493.266 16.906 492.926 16.91 cv
492.305 16.906 491.762 16.832 491.301 16.676 cv
490.832 16.523 490.445 16.285 490.137 15.969 cv
489.82 15.652 489.586 15.254 489.438 14.77 cv
489.281 14.289 489.207 13.723 489.211 13.066 cv
489.207 12.453 489.285 11.895 489.449 11.398 cv
489.605 10.902 489.84 10.484 490.152 10.137 cv
490.457 9.79303 490.832 9.52698 491.27 9.34399 cv
491.707 9.164 492.199 9.07397 492.754 9.07001 cv
493.332 9.07397 493.832 9.15997 494.246 9.328 cv
494.66 9.50403 494.996 9.742 495.262 10.043 cv
495.523 10.348 495.719 10.707 495.848 11.121 cv
495.969 11.539 496.031 11.988 496.035 12.477 cv
cp
494.133 12.227 mo
494.145 11.676 494.035 11.242 493.801 10.93 cv
493.566 10.617 493.199 10.461 492.707 10.457 cv
492.457 10.461 492.242 10.508 492.059 10.598 cv
491.871 10.695 491.719 10.82 491.598 10.977 cv
491.473 11.137 491.379 11.324 491.316 11.539 cv
491.25 11.754 491.211 11.984 491.203 12.227 cv
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
