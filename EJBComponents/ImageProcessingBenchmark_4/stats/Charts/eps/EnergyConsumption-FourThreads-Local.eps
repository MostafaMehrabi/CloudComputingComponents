%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-FourThreads-Local.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 13/12/2018, 11:39:24 a.m.
%%BoundingBox: 0 0 652 550
%%HiResBoundingBox: 0 0 651.2400 549.1200
%%CropBox: 0 0 651.2400 549.1200
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -549.12 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 549.12 li
651.24 549.12 li
651.24 0 li
cp
clp
gsave
0 549.12 mo
652 549.12 li
652 -.880005 li
0 -.880005 li
cp
clp
0 0 mo
651.238 0 li
651.238 549.121 li
0 549.121 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.039 490.441 mo
635.281 490.441 li
65.039 464.039 mo
635.281 464.039 li
65.039 437.762 mo
635.281 437.762 li
65.039 411.359 mo
635.281 411.359 li
65.039 384.961 mo
635.281 384.961 li
65.039 358.559 mo
635.281 358.559 li
65.039 332.281 mo
635.281 332.281 li
65.039 305.879 mo
635.281 305.879 li
65.039 279.48 mo
635.281 279.48 li
65.039 253.078 mo
635.281 253.078 li
65.039 226.801 mo
635.281 226.801 li
65.039 200.398 mo
635.281 200.398 li
65.039 174 mo
635.281 174 li
65.039 147.719 mo
635.281 147.719 li
65.039 121.32 mo
635.281 121.32 li
65.039 94.922 mo
635.281 94.922 li
65.039 68.52 mo
635.281 68.52 li
65.039 42.238 mo
635.281 42.238 li
.140414 .108034 .108034 0 cmyk
@
65.039 477.238 mo
635.281 477.238 li
65.039 450.84 mo
635.281 450.84 li
65.039 424.559 mo
635.281 424.559 li
65.039 398.16 mo
635.281 398.16 li
65.039 371.762 mo
635.281 371.762 li
65.039 345.48 mo
635.281 345.48 li
65.039 319.078 mo
635.281 319.078 li
65.039 292.68 mo
635.281 292.68 li
65.039 266.281 mo
635.281 266.281 li
65.039 240 mo
635.281 240 li
65.039 213.602 mo
635.281 213.602 li
65.039 187.199 mo
635.281 187.199 li
65.039 160.801 mo
635.281 160.801 li
65.039 134.52 mo
635.281 134.52 li
65.039 108.121 mo
635.281 108.121 li
65.039 81.719 mo
635.281 81.719 li
65.039 55.32 mo
635.281 55.32 li
65.039 29.039 mo
635.281 29.039 li
.246403 .201175 .450446 .000885023 cmyk
@
100.68 29.039 mo
100.68 503.641 li
171.961 29.039 mo
171.961 503.641 li
243.238 29.039 mo
243.238 503.641 li
314.52 29.039 mo
314.52 503.641 li
385.801 29.039 mo
385.801 503.641 li
457.078 29.039 mo
457.078 503.641 li
528.359 29.039 mo
528.359 503.641 li
599.641 29.039 mo
599.641 503.641 li
.131685 .102663 .236637 0 cmyk
@
65.039 29.039 mo
65.039 503.641 li
136.32 29.039 mo
136.32 503.641 li
207.602 29.039 mo
207.602 503.641 li
278.879 29.039 mo
278.879 503.641 li
350.16 29.039 mo
350.16 503.641 li
421.441 29.039 mo
421.441 503.641 li
492.719 29.039 mo
492.719 503.641 li
564 29.039 mo
564 503.641 li
635.281 29.039 mo
635.281 503.641 li
.246403 .201175 .450446 .000885023 cmyk
@
34.32 494.281 mo
52.078 494.281 li
52.078 511.441 li
34.32 511.441 li
cp
0 0 0 0 cmyk
ef
34.32 468 mo
52.078 468 li
52.078 485.039 li
34.32 485.039 li
cp
ef
34.32 441.602 mo
52.078 441.602 li
52.078 458.641 li
34.32 458.641 li
cp
ef
34.32 415.199 mo
52.078 415.199 li
52.078 432.238 li
34.32 432.238 li
cp
ef
34.32 388.801 mo
52.078 388.801 li
52.078 405.961 li
34.32 405.961 li
cp
ef
34.32 362.52 mo
52.078 362.52 li
52.078 379.559 li
34.32 379.559 li
cp
ef
34.32 336.121 mo
52.078 336.121 li
52.078 353.16 li
34.32 353.16 li
cp
ef
34.32 309.719 mo
52.078 309.719 li
52.078 326.879 li
34.32 326.879 li
cp
ef
34.32 283.32 mo
52.078 283.32 li
52.078 300.48 li
34.32 300.48 li
cp
ef
34.32 257.039 mo
52.078 257.039 li
52.078 274.078 li
34.32 274.078 li
cp
ef
34.32 230.641 mo
52.078 230.641 li
52.078 247.68 li
34.32 247.68 li
cp
ef
34.32 204.238 mo
52.078 204.238 li
52.078 221.398 li
34.32 221.398 li
cp
ef
34.32 177.84 mo
52.078 177.84 li
52.078 195 li
34.32 195 li
cp
ef
34.32 151.559 mo
52.078 151.559 li
52.078 168.602 li
34.32 168.602 li
cp
ef
34.32 125.16 mo
52.078 125.16 li
52.078 142.199 li
34.32 142.199 li
cp
ef
34.32 98.762 mo
52.078 98.762 li
52.078 115.922 li
34.32 115.922 li
cp
ef
34.32 72.48 mo
52.078 72.48 li
52.078 89.519 li
34.32 89.519 li
cp
ef
34.32 46.078 mo
52.078 46.078 li
52.078 63.121 li
34.32 63.121 li
cp
ef
34.32 19.68 mo
52.078 19.68 li
52.078 36.719 li
34.32 36.719 li
cp
ef
.96 lw
65.039 503.641 mo
635.281 503.641 li
.367803 .29575 .300999 .00198367 cmyk
@
65.039 503.641 mo
65.039 508.078 li
136.32 503.641 mo
136.32 508.078 li
207.602 503.641 mo
207.602 508.078 li
278.879 503.641 mo
278.879 508.078 li
350.16 503.641 mo
350.16 508.078 li
421.441 503.641 mo
421.441 508.078 li
492.719 503.641 mo
492.719 508.078 li
564 503.641 mo
564 508.078 li
635.281 503.641 mo
635.281 508.078 li
@
gsave
65.039 29.039 mo
636 29.039 li
636 504.359 li
65.039 504.359 li
cp
clp
1 lc
65.039 489 mo
136.32 494.16 li
207.602 497.039 li
278.879 492.84 li
350.16 495.84 li
421.441 495.121 li
492.719 494.641 li
564 493.922 li
635.281 494.641 li
.719875 .440223 .0276493 0 cmyk
@
grestore
1 lw
70.078 493.961 mo
60 483.879 li
60 493.961 mo
70.078 483.879 li
.719875 .440223 .0276493 0 cmyk
@
141.359 499.121 mo
131.281 489.039 li
131.281 499.121 mo
141.359 489.039 li
@
212.641 502.121 mo
202.559 492.039 li
202.559 502.121 mo
212.641 492.039 li
@
283.922 497.922 mo
273.84 487.84 li
273.84 497.922 mo
283.922 487.84 li
@
355.078 500.922 mo
345 490.84 li
345 500.922 mo
355.078 490.84 li
@
426.359 500.078 mo
416.281 490 li
416.281 500.078 mo
426.359 490 li
@
497.641 499.719 mo
487.559 489.641 li
487.559 499.719 mo
497.641 489.641 li
@
568.922 499 mo
558.84 488.922 li
558.84 499 mo
568.922 488.922 li
@
640.199 499.719 mo
630.121 489.641 li
630.121 499.719 mo
640.199 489.641 li
@
gsave
65.039 29.039 mo
636 29.039 li
636 504.359 li
65.039 504.359 li
cp
clp
.96 lw
1 lc
65.039 464.16 mo
136.32 478.801 li
207.602 484.32 li
278.879 478.801 li
350.16 484.801 li
421.441 477.121 li
492.719 485.16 li
564 478.078 li
635.281 483 li
.466651 0 .889799 0 cmyk
@
grestore
70.078 469.238 mo
60 459.16 li
60 469.238 mo
70.078 459.16 li
.466651 0 .889799 0 cmyk
@
141.359 483.879 mo
131.281 473.801 li
131.281 483.879 mo
141.359 473.801 li
@
212.641 489.281 mo
202.559 479.199 li
202.559 489.281 mo
212.641 479.199 li
@
283.922 483.762 mo
273.84 473.68 li
273.84 483.762 mo
283.922 473.68 li
@
355.078 489.879 mo
345 479.801 li
345 489.879 mo
355.078 479.801 li
@
426.359 482.199 mo
416.281 472.121 li
416.281 482.199 mo
426.359 472.121 li
@
497.641 490.238 mo
487.559 480.16 li
487.559 490.238 mo
497.641 480.16 li
@
568.922 483.039 mo
558.84 472.961 li
558.84 483.039 mo
568.922 472.961 li
@
640.199 488.078 mo
630.121 478 li
630.121 488.078 mo
640.199 478 li
@
gsave
65.039 29.039 mo
636 29.039 li
636 504.359 li
65.039 504.359 li
cp
clp
.96 lw
1 lc
65.039 370.68 mo
136.32 419.762 li
207.602 437.16 li
278.879 411.719 li
350.16 431.039 li
421.441 425.641 li
492.719 422.641 li
564 432.238 li
635.281 423.84 li
0 .990631 1 .000396735 cmyk
@
grestore
70.078 375.762 mo
60 365.68 li
60 375.762 mo
70.078 365.68 li
0 .990631 1 .000396735 cmyk
@
141.359 424.84 mo
131.281 414.762 li
131.281 424.84 mo
141.359 414.762 li
@
212.641 442.238 mo
202.559 432.16 li
202.559 442.238 mo
212.641 432.16 li
@
283.922 416.801 mo
273.84 406.719 li
273.84 416.801 mo
283.922 406.719 li
@
355.078 436 mo
345 425.922 li
345 436 mo
355.078 425.922 li
@
426.359 430.602 mo
416.281 420.52 li
416.281 430.602 mo
426.359 420.52 li
@
497.641 427.602 mo
487.559 417.52 li
487.559 427.602 mo
497.641 417.52 li
@
568.922 437.32 mo
558.84 427.238 li
558.84 437.32 mo
568.922 427.238 li
@
640.199 428.922 mo
630.121 418.84 li
630.121 428.922 mo
640.199 418.84 li
@
gsave
65.039 29.039 mo
636 29.039 li
636 504.359 li
65.039 504.359 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
65.039 415.922 mo
136.32 448.32 li
207.602 460.559 li
278.879 444.121 li
350.16 460.559 li
421.441 453.84 li
492.719 461.281 li
564 437.52 li
635.281 456.84 li
@
grestore
70.078 420.879 mo
60 410.801 li
60 420.879 mo
70.078 410.801 li
@
141.359 453.398 mo
131.281 443.32 li
131.281 453.398 mo
141.359 443.32 li
@
212.641 465.641 mo
202.559 455.559 li
202.559 465.641 mo
212.641 455.559 li
@
283.922 449.199 mo
273.84 439.121 li
273.84 449.199 mo
283.922 439.121 li
@
355.078 465.641 mo
345 455.559 li
345 465.641 mo
355.078 455.559 li
@
426.359 458.801 mo
416.281 448.719 li
416.281 458.801 mo
426.359 448.719 li
@
497.641 466.359 mo
487.559 456.281 li
487.559 466.359 mo
497.641 456.281 li
@
568.922 442.48 mo
558.84 432.398 li
558.84 442.48 mo
568.922 432.398 li
@
640.199 461.801 mo
630.121 451.719 li
630.121 461.801 mo
640.199 451.719 li
@
gsave
65.039 29.039 mo
636 29.039 li
636 504.359 li
65.039 504.359 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
65.039 263.281 mo
136.32 353.398 li
207.602 391.078 li
278.879 360.238 li
350.16 365.52 li
421.441 337.441 li
492.719 343.922 li
564 350.16 li
635.281 339.121 li
.719875 .440223 .0276493 0 cmyk
@
grestore
69.602 267.879 mo
60.48 258.762 li
60.48 267.879 mo
69.602 258.762 li
.719875 .440223 .0276493 0 cmyk
@
140.879 358 mo
131.762 348.879 li
131.762 358 mo
140.879 348.879 li
@
212.16 395.559 mo
203.039 386.441 li
203.039 395.559 mo
212.16 386.441 li
@
283.441 364.719 mo
274.32 355.602 li
274.32 364.719 mo
283.441 355.602 li
@
354.602 370.121 mo
345.48 361 li
345.48 370.121 mo
354.602 361 li
@
425.879 342.039 mo
416.762 332.922 li
416.762 342.039 mo
425.879 332.922 li
@
497.16 348.398 mo
488.039 339.281 li
488.039 348.398 mo
497.16 339.281 li
@
568.441 354.641 mo
559.32 345.52 li
559.32 354.641 mo
568.441 345.52 li
@
639.719 343.602 mo
630.602 334.48 li
630.602 343.602 mo
639.719 334.48 li
@
gsave
65.039 29.039 mo
636 29.039 li
636 504.359 li
65.039 504.359 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
65.039 318.238 mo
136.32 384.719 li
207.602 413.16 li
278.879 387.121 li
350.16 390.961 li
421.441 371.398 li
492.719 383.398 li
564 394.441 li
635.281 386.16 li
.466651 0 .889799 0 cmyk
@
grestore
70.078 323.199 mo
60 313.121 li
60 323.199 mo
70.078 313.121 li
.466651 0 .889799 0 cmyk
@
141.359 389.801 mo
131.281 379.719 li
131.281 389.801 mo
141.359 379.719 li
@
212.641 418.238 mo
202.559 408.16 li
202.559 418.238 mo
212.641 408.16 li
@
283.922 392.078 mo
273.84 382 li
273.84 392.078 mo
283.922 382 li
@
355.078 396.039 mo
345 385.961 li
345 396.039 mo
355.078 385.961 li
@
426.359 376.359 mo
416.281 366.281 li
416.281 376.359 mo
426.359 366.281 li
@
497.641 388.359 mo
487.559 378.281 li
487.559 388.359 mo
497.641 378.281 li
@
568.922 399.398 mo
558.84 389.32 li
558.84 399.398 mo
568.922 389.32 li
@
640.199 391.238 mo
630.121 381.16 li
630.121 391.238 mo
640.199 381.16 li
@
34.34 494.352 mo
52.067 494.352 li
52.067 511.442 li
34.34 511.442 li
cp
0 0 0 0 cmyk
ef
40.969 503.312 mo
40.965 503.996 40.914 504.617 40.809 505.18 cv
40.699 505.742 40.52 506.227 40.273 506.629 cv
40.02 507.035 39.691 507.348 39.293 507.566 cv
38.887 507.789 38.395 507.898 37.809 507.898 cv
37.25 507.898 36.777 507.801 36.398 507.602 cv
36.016 507.406 35.711 507.113 35.477 506.727 cv
35.242 506.34 35.074 505.867 34.98 505.301 cv
34.879 504.738 34.832 504.09 34.832 503.355 cv
34.832 502.684 34.887 502.062 34.996 501.496 cv
35.105 500.934 35.281 500.449 35.531 500.043 cv
35.773 499.641 36.098 499.328 36.504 499.102 cv
36.902 498.883 37.398 498.77 37.988 498.77 cv
38.547 498.77 39.02 498.871 39.402 499.066 cv
39.785 499.27 40.09 499.562 40.324 499.945 cv
40.555 500.336 40.723 500.809 40.82 501.371 cv
40.918 501.934 40.965 502.582 40.969 503.312 cv
cp
39.762 503.395 mo
39.758 502.953 39.742 502.555 39.715 502.203 cv
39.68 501.852 39.633 501.543 39.574 501.273 cv
39.508 501.004 39.43 500.773 39.332 500.578 cv
39.234 500.387 39.117 500.227 38.98 500.098 cv
38.84 499.973 38.68 499.879 38.508 499.82 cv
38.328 499.766 38.133 499.738 37.918 499.734 cv
37.527 499.738 37.211 499.828 36.973 500.012 cv
36.727 500.195 36.535 500.449 36.398 500.766 cv
36.258 501.086 36.164 501.457 36.113 501.887 cv
36.063 502.316 36.039 502.781 36.039 503.273 cv
36.039 503.937 36.07 504.5 36.141 504.961 cv
36.207 505.43 36.316 505.809 36.469 506.098 cv
36.613 506.395 36.805 506.605 37.035 506.734 cv
37.266 506.871 37.547 506.937 37.879 506.934 cv
38.133 506.937 38.355 506.898 38.551 506.812 cv
38.742 506.734 38.91 506.613 39.051 506.457 cv
39.191 506.305 39.305 506.121 39.398 505.906 cv
39.484 505.691 39.559 505.453 39.617 505.191 cv
39.668 504.934 39.707 504.652 39.73 504.348 cv
39.75 504.043 39.758 503.727 39.762 503.395 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 507.023 mo
43.965 507.352 43.91 507.566 43.805 507.672 cv
43.695 507.777 43.5 507.828 43.219 507.832 cv
42.941 507.828 42.75 507.777 42.648 507.676 cv
42.539 507.57 42.488 507.359 42.492 507.043 cv
42.488 506.719 42.543 506.504 42.652 506.395 cv
42.758 506.289 42.953 506.234 43.238 506.234 cv
43.512 506.234 43.699 506.289 43.809 506.395 cv
43.91 506.5 43.965 506.711 43.965 507.023 cv
cp
f
51.625 503.312 mo
51.621 503.996 51.57 504.617 51.465 505.18 cv
51.355 505.742 51.176 506.227 50.93 506.629 cv
50.676 507.035 50.348 507.348 49.949 507.566 cv
49.543 507.789 49.051 507.898 48.465 507.898 cv
47.906 507.898 47.434 507.801 47.055 507.602 cv
46.672 507.406 46.367 507.113 46.133 506.727 cv
45.898 506.34 45.73 505.867 45.637 505.301 cv
45.535 504.738 45.488 504.09 45.488 503.355 cv
45.488 502.684 45.543 502.062 45.652 501.496 cv
45.762 500.934 45.938 500.449 46.188 500.043 cv
46.43 499.641 46.754 499.328 47.16 499.102 cv
47.559 498.883 48.055 498.77 48.645 498.77 cv
49.203 498.77 49.676 498.871 50.059 499.066 cv
50.441 499.27 50.746 499.562 50.98 499.945 cv
51.211 500.336 51.379 500.809 51.477 501.371 cv
51.574 501.934 51.621 502.582 51.625 503.312 cv
cp
50.418 503.395 mo
50.414 502.953 50.398 502.555 50.371 502.203 cv
50.336 501.852 50.289 501.543 50.23 501.273 cv
50.164 501.004 50.086 500.773 49.988 500.578 cv
49.891 500.387 49.773 500.227 49.637 500.098 cv
49.496 499.973 49.336 499.879 49.164 499.82 cv
48.984 499.766 48.789 499.738 48.574 499.734 cv
48.184 499.738 47.867 499.828 47.629 500.012 cv
47.383 500.195 47.191 500.449 47.055 500.766 cv
46.914 501.086 46.82 501.457 46.77 501.887 cv
46.719 502.316 46.695 502.781 46.695 503.273 cv
46.695 503.937 46.727 504.5 46.797 504.961 cv
46.863 505.43 46.973 505.809 47.125 506.098 cv
47.27 506.395 47.461 506.605 47.691 506.734 cv
47.922 506.871 48.203 506.937 48.535 506.934 cv
48.789 506.937 49.012 506.898 49.207 506.812 cv
49.398 506.734 49.566 506.613 49.707 506.457 cv
49.848 506.305 49.961 506.121 50.055 505.906 cv
50.141 505.691 50.215 505.453 50.273 505.191 cv
50.324 504.934 50.363 504.652 50.387 504.348 cv
50.406 504.043 50.414 503.727 50.418 503.395 cv
cp
f
34.34 467.984 mo
52.067 467.984 li
52.067 485.074 li
34.34 485.074 li
cp
0 0 0 0 cmyk
ef
40.969 476.934 mo
40.965 477.617 40.914 478.238 40.809 478.801 cv
40.699 479.363 40.52 479.848 40.273 480.25 cv
40.02 480.656 39.691 480.969 39.293 481.187 cv
38.887 481.41 38.395 481.52 37.809 481.52 cv
37.25 481.52 36.777 481.422 36.398 481.223 cv
36.016 481.027 35.711 480.734 35.477 480.348 cv
35.242 479.961 35.074 479.488 34.98 478.922 cv
34.879 478.359 34.832 477.711 34.832 476.977 cv
34.832 476.305 34.887 475.684 34.996 475.117 cv
35.105 474.555 35.281 474.07 35.531 473.664 cv
35.773 473.262 36.098 472.949 36.504 472.723 cv
36.902 472.504 37.398 472.391 37.988 472.391 cv
38.547 472.391 39.02 472.492 39.402 472.687 cv
39.785 472.891 40.09 473.184 40.324 473.566 cv
40.555 473.957 40.723 474.43 40.82 474.992 cv
40.918 475.555 40.965 476.203 40.969 476.934 cv
cp
39.762 477.016 mo
39.758 476.574 39.742 476.176 39.715 475.824 cv
39.68 475.473 39.633 475.164 39.574 474.895 cv
39.508 474.625 39.43 474.395 39.332 474.199 cv
39.234 474.008 39.117 473.848 38.98 473.719 cv
38.84 473.594 38.68 473.5 38.508 473.441 cv
38.328 473.387 38.133 473.359 37.918 473.355 cv
37.527 473.359 37.211 473.449 36.973 473.633 cv
36.727 473.816 36.535 474.07 36.398 474.387 cv
36.258 474.707 36.164 475.078 36.113 475.508 cv
36.063 475.937 36.039 476.402 36.039 476.895 cv
36.039 477.559 36.07 478.121 36.141 478.582 cv
36.207 479.051 36.316 479.43 36.469 479.719 cv
36.613 480.016 36.805 480.227 37.035 480.355 cv
37.266 480.492 37.547 480.559 37.879 480.555 cv
38.133 480.559 38.355 480.52 38.551 480.434 cv
38.742 480.355 38.91 480.234 39.051 480.078 cv
39.191 479.926 39.305 479.742 39.398 479.527 cv
39.484 479.312 39.559 479.074 39.617 478.812 cv
39.668 478.555 39.707 478.273 39.73 477.969 cv
39.75 477.664 39.758 477.348 39.762 477.016 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 480.645 mo
43.965 480.973 43.91 481.187 43.805 481.293 cv
43.695 481.398 43.5 481.449 43.219 481.453 cv
42.941 481.449 42.75 481.398 42.648 481.297 cv
42.539 481.191 42.488 480.98 42.492 480.664 cv
42.488 480.34 42.543 480.125 42.652 480.016 cv
42.758 479.91 42.953 479.855 43.238 479.855 cv
43.512 479.855 43.699 479.91 43.809 480.016 cv
43.91 480.121 43.965 480.332 43.965 480.645 cv
cp
f
51.289 478.539 mo
51.289 479.016 51.207 479.437 51.047 479.809 cv
50.887 480.18 50.66 480.492 50.371 480.746 cv
50.074 481 49.727 481.195 49.324 481.324 cv
48.918 481.457 48.469 481.52 47.977 481.52 cv
47.699 481.52 47.438 481.5 47.195 481.461 cv
46.945 481.422 46.727 481.375 46.539 481.32 cv
46.344 481.266 46.188 481.211 46.063 481.152 cv
45.938 481.102 45.859 481.059 45.828 481.023 cv
45.793 480.992 45.77 480.961 45.758 480.934 cv
45.742 480.906 45.727 480.875 45.719 480.832 cv
45.703 480.797 45.695 480.746 45.695 480.684 cv
45.688 480.625 45.688 480.555 45.688 480.473 cv
45.688 480.398 45.691 480.328 45.699 480.266 cv
45.707 480.203 45.719 480.152 45.738 480.113 cv
45.754 480.074 45.773 480.047 45.801 480.027 cv
45.824 480.012 45.855 480.004 45.887 480 cv
45.934 480.004 46.004 480.031 46.098 480.086 cv
46.191 480.145 46.32 480.207 46.484 480.273 cv
46.648 480.34 46.848 480.402 47.09 480.461 cv
47.324 480.52 47.609 480.547 47.945 480.547 cv
48.246 480.547 48.527 480.512 48.785 480.437 cv
49.039 480.367 49.262 480.254 49.449 480.098 cv
49.633 479.945 49.777 479.75 49.883 479.512 cv
49.988 479.277 50.039 478.988 50.043 478.648 cv
50.039 478.367 49.996 478.117 49.906 477.898 cv
49.816 477.68 49.68 477.5 49.496 477.355 cv
49.309 477.215 49.074 477.109 48.793 477.035 cv
48.508 476.965 48.168 476.926 47.781 476.926 cv
47.496 476.926 47.258 476.941 47.059 476.969 cv
46.855 477 46.668 477.016 46.496 477.012 cv
46.367 477.016 46.273 476.984 46.223 476.922 cv
46.164 476.863 46.137 476.75 46.141 476.578 cv
46.141 472.965 li
46.137 472.816 46.172 472.707 46.246 472.629 cv
46.313 472.559 46.414 472.52 46.551 472.52 cv
50.48 472.52 li
50.516 472.52 50.551 472.531 50.586 472.551 cv
50.617 472.574 50.645 472.605 50.672 472.645 cv
50.691 472.687 50.707 472.738 50.723 472.801 cv
50.73 472.867 50.738 472.945 50.742 473.027 cv
50.738 473.195 50.715 473.32 50.676 473.41 cv
50.629 473.504 50.57 473.551 50.492 473.547 cv
47.32 473.547 li
47.32 476.035 li
47.473 476.016 47.629 476.004 47.793 475.996 cv
47.949 475.992 48.137 475.988 48.352 475.988 cv
48.836 475.988 49.262 476.051 49.629 476.172 cv
49.992 476.293 50.297 476.465 50.547 476.684 cv
50.789 476.91 50.977 477.176 51.102 477.488 cv
51.227 477.805 51.289 478.156 51.289 478.539 cv
cp
f
34.34 441.621 mo
52.067 441.621 li
52.067 458.711 li
34.34 458.711 li
cp
0 0 0 0 cmyk
ef
40.695 454.555 mo
40.691 454.645 40.684 454.715 40.672 454.773 cv
40.656 454.836 40.637 454.887 40.617 454.918 cv
40.594 454.957 40.57 454.98 40.539 454.996 cv
40.508 455.012 40.477 455.02 40.449 455.02 cv
35.813 455.02 li
35.777 455.02 35.75 455.012 35.723 454.996 cv
35.695 454.98 35.668 454.957 35.645 454.918 cv
35.617 454.887 35.598 454.836 35.586 454.773 cv
35.57 454.715 35.563 454.645 35.566 454.555 cv
35.563 454.477 35.57 454.402 35.586 454.34 cv
35.598 454.281 35.613 454.234 35.637 454.195 cv
35.652 454.16 35.68 454.129 35.711 454.105 cv
35.742 454.086 35.773 454.078 35.813 454.074 cv
37.664 454.074 li
37.664 447.328 li
35.949 448.348 li
35.859 448.398 35.789 448.426 35.742 448.434 cv
35.688 448.441 35.645 448.434 35.613 448.402 cv
35.578 448.375 35.559 448.324 35.547 448.254 cv
35.535 448.187 35.527 448.102 35.531 447.992 cv
35.527 447.918 35.531 447.852 35.543 447.793 cv
35.547 447.742 35.559 447.695 35.574 447.656 cv
35.586 447.621 35.605 447.59 35.629 447.562 cv
35.652 447.535 35.684 447.508 35.73 447.48 cv
37.773 446.168 li
37.789 446.156 37.809 446.145 37.84 446.137 cv
37.863 446.129 37.898 446.121 37.945 446.109 cv
37.984 446.102 38.035 446.094 38.09 446.09 cv
38.145 446.09 38.211 446.09 38.297 446.086 cv
38.402 446.09 38.496 446.094 38.57 446.102 cv
38.641 446.109 38.695 446.125 38.742 446.141 cv
38.781 446.16 38.809 446.18 38.824 446.203 cv
38.832 446.23 38.84 446.254 38.844 446.277 cv
38.844 454.074 li
40.449 454.074 li
40.484 454.078 40.52 454.086 40.551 454.105 cv
40.582 454.129 40.605 454.16 40.629 454.195 cv
40.645 454.234 40.66 454.281 40.676 454.34 cv
40.684 454.402 40.691 454.477 40.695 454.555 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 454.273 mo
43.965 454.602 43.91 454.816 43.805 454.922 cv
43.695 455.027 43.5 455.078 43.219 455.082 cv
42.941 455.078 42.75 455.027 42.648 454.926 cv
42.539 454.82 42.488 454.609 42.492 454.293 cv
42.488 453.969 42.543 453.754 42.652 453.645 cv
42.758 453.539 42.953 453.484 43.238 453.484 cv
43.512 453.484 43.699 453.539 43.809 453.645 cv
43.91 453.75 43.965 453.961 43.965 454.273 cv
cp
f
51.625 450.562 mo
51.621 451.246 51.57 451.867 51.465 452.43 cv
51.355 452.992 51.176 453.477 50.93 453.879 cv
50.676 454.285 50.348 454.598 49.949 454.816 cv
49.543 455.039 49.051 455.148 48.465 455.148 cv
47.906 455.148 47.434 455.051 47.055 454.852 cv
46.672 454.656 46.367 454.363 46.133 453.977 cv
45.898 453.59 45.73 453.117 45.637 452.551 cv
45.535 451.988 45.488 451.34 45.488 450.605 cv
45.488 449.934 45.543 449.312 45.652 448.746 cv
45.762 448.184 45.938 447.699 46.188 447.293 cv
46.43 446.891 46.754 446.578 47.16 446.352 cv
47.559 446.133 48.055 446.02 48.645 446.02 cv
49.203 446.02 49.676 446.121 50.059 446.316 cv
50.441 446.52 50.746 446.812 50.98 447.195 cv
51.211 447.586 51.379 448.059 51.477 448.621 cv
51.574 449.184 51.621 449.832 51.625 450.562 cv
cp
50.418 450.645 mo
50.414 450.203 50.398 449.805 50.371 449.453 cv
50.336 449.102 50.289 448.793 50.23 448.523 cv
50.164 448.254 50.086 448.023 49.988 447.828 cv
49.891 447.637 49.773 447.477 49.637 447.348 cv
49.496 447.223 49.336 447.129 49.164 447.07 cv
48.984 447.016 48.789 446.988 48.574 446.984 cv
48.184 446.988 47.867 447.078 47.629 447.262 cv
47.383 447.445 47.191 447.699 47.055 448.016 cv
46.914 448.336 46.82 448.707 46.77 449.137 cv
46.719 449.566 46.695 450.031 46.695 450.523 cv
46.695 451.187 46.727 451.75 46.797 452.211 cv
46.863 452.68 46.973 453.059 47.125 453.348 cv
47.27 453.645 47.461 453.855 47.691 453.984 cv
47.922 454.121 48.203 454.187 48.535 454.184 cv
48.789 454.187 49.012 454.148 49.207 454.062 cv
49.398 453.984 49.566 453.863 49.707 453.707 cv
49.848 453.555 49.961 453.371 50.055 453.156 cv
50.141 452.941 50.215 452.703 50.273 452.441 cv
50.324 452.184 50.363 451.902 50.387 451.598 cv
50.406 451.293 50.414 450.977 50.418 450.645 cv
cp
f
34.34 415.25 mo
52.067 415.25 li
52.067 432.34 li
34.34 432.34 li
cp
0 0 0 0 cmyk
ef
40.695 428.176 mo
40.691 428.266 40.684 428.336 40.672 428.395 cv
40.656 428.457 40.637 428.508 40.617 428.539 cv
40.594 428.578 40.57 428.602 40.539 428.617 cv
40.508 428.633 40.477 428.641 40.449 428.641 cv
35.813 428.641 li
35.777 428.641 35.75 428.633 35.723 428.617 cv
35.695 428.602 35.668 428.578 35.645 428.539 cv
35.617 428.508 35.598 428.457 35.586 428.395 cv
35.57 428.336 35.563 428.266 35.566 428.176 cv
35.563 428.098 35.57 428.023 35.586 427.961 cv
35.598 427.902 35.613 427.855 35.637 427.816 cv
35.652 427.781 35.68 427.75 35.711 427.727 cv
35.742 427.707 35.773 427.699 35.813 427.695 cv
37.664 427.695 li
37.664 420.949 li
35.949 421.969 li
35.859 422.02 35.789 422.047 35.742 422.055 cv
35.688 422.062 35.645 422.055 35.613 422.023 cv
35.578 421.996 35.559 421.945 35.547 421.875 cv
35.535 421.809 35.527 421.723 35.531 421.613 cv
35.527 421.539 35.531 421.473 35.543 421.414 cv
35.547 421.363 35.559 421.316 35.574 421.277 cv
35.586 421.242 35.605 421.211 35.629 421.184 cv
35.652 421.156 35.684 421.129 35.73 421.102 cv
37.773 419.789 li
37.789 419.777 37.809 419.766 37.84 419.758 cv
37.863 419.75 37.898 419.742 37.945 419.73 cv
37.984 419.723 38.035 419.715 38.09 419.711 cv
38.145 419.711 38.211 419.711 38.297 419.707 cv
38.402 419.711 38.496 419.715 38.57 419.723 cv
38.641 419.73 38.695 419.746 38.742 419.762 cv
38.781 419.781 38.809 419.801 38.824 419.824 cv
38.832 419.852 38.84 419.875 38.844 419.898 cv
38.844 427.695 li
40.449 427.695 li
40.484 427.699 40.52 427.707 40.551 427.727 cv
40.582 427.75 40.605 427.781 40.629 427.816 cv
40.645 427.855 40.66 427.902 40.676 427.961 cv
40.684 428.023 40.691 428.098 40.695 428.176 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 427.895 mo
43.965 428.223 43.91 428.437 43.805 428.543 cv
43.695 428.648 43.5 428.699 43.219 428.703 cv
42.941 428.699 42.75 428.648 42.648 428.547 cv
42.539 428.441 42.488 428.23 42.492 427.914 cv
42.488 427.59 42.543 427.375 42.652 427.266 cv
42.758 427.16 42.953 427.105 43.238 427.105 cv
43.512 427.105 43.699 427.16 43.809 427.266 cv
43.91 427.371 43.965 427.582 43.965 427.895 cv
cp
f
51.289 425.789 mo
51.289 426.266 51.207 426.687 51.047 427.059 cv
50.887 427.43 50.66 427.742 50.371 427.996 cv
50.074 428.25 49.727 428.445 49.324 428.574 cv
48.918 428.707 48.469 428.77 47.977 428.77 cv
47.699 428.77 47.438 428.75 47.195 428.711 cv
46.945 428.672 46.727 428.625 46.539 428.57 cv
46.344 428.516 46.188 428.461 46.063 428.402 cv
45.938 428.352 45.859 428.309 45.828 428.273 cv
45.793 428.242 45.77 428.211 45.758 428.184 cv
45.742 428.156 45.727 428.125 45.719 428.082 cv
45.703 428.047 45.695 427.996 45.695 427.934 cv
45.688 427.875 45.688 427.805 45.688 427.723 cv
45.688 427.648 45.691 427.578 45.699 427.516 cv
45.707 427.453 45.719 427.402 45.738 427.363 cv
45.754 427.324 45.773 427.297 45.801 427.277 cv
45.824 427.262 45.855 427.254 45.887 427.25 cv
45.934 427.254 46.004 427.281 46.098 427.336 cv
46.191 427.395 46.32 427.457 46.484 427.523 cv
46.648 427.59 46.848 427.652 47.09 427.711 cv
47.324 427.77 47.609 427.797 47.945 427.797 cv
48.246 427.797 48.527 427.762 48.785 427.687 cv
49.039 427.617 49.262 427.504 49.449 427.348 cv
49.633 427.195 49.777 427 49.883 426.762 cv
49.988 426.527 50.039 426.238 50.043 425.898 cv
50.039 425.617 49.996 425.367 49.906 425.148 cv
49.816 424.93 49.68 424.75 49.496 424.605 cv
49.309 424.465 49.074 424.359 48.793 424.285 cv
48.508 424.215 48.168 424.176 47.781 424.176 cv
47.496 424.176 47.258 424.191 47.059 424.219 cv
46.855 424.25 46.668 424.266 46.496 424.262 cv
46.367 424.266 46.273 424.234 46.223 424.172 cv
46.164 424.113 46.137 424 46.141 423.828 cv
46.141 420.215 li
46.137 420.066 46.172 419.957 46.246 419.879 cv
46.313 419.809 46.414 419.77 46.551 419.77 cv
50.48 419.77 li
50.516 419.77 50.551 419.781 50.586 419.801 cv
50.617 419.824 50.645 419.855 50.672 419.895 cv
50.691 419.937 50.707 419.988 50.723 420.051 cv
50.73 420.117 50.738 420.195 50.742 420.277 cv
50.738 420.445 50.715 420.57 50.676 420.66 cv
50.629 420.754 50.57 420.801 50.492 420.797 cv
47.32 420.797 li
47.32 423.285 li
47.473 423.266 47.629 423.254 47.793 423.246 cv
47.949 423.242 48.137 423.238 48.352 423.238 cv
48.836 423.238 49.262 423.301 49.629 423.422 cv
49.992 423.543 50.297 423.715 50.547 423.934 cv
50.789 424.16 50.977 424.426 51.102 424.738 cv
51.227 425.055 51.289 425.406 51.289 425.789 cv
cp
f
34.34 388.879 mo
52.067 388.879 li
52.067 405.969 li
34.34 405.969 li
cp
0 0 0 0 cmyk
ef
40.684 401.781 mo
40.68 401.867 40.676 401.941 40.668 402.004 cv
40.656 402.07 40.641 402.125 40.621 402.164 cv
40.598 402.211 40.566 402.242 40.535 402.258 cv
40.496 402.281 40.461 402.289 40.426 402.289 cv
35.516 402.289 li
35.449 402.289 35.391 402.281 35.344 402.266 cv
35.293 402.25 35.254 402.227 35.223 402.187 cv
35.188 402.156 35.16 402.102 35.145 402.031 cv
35.125 401.961 35.117 401.875 35.121 401.773 cv
35.117 401.684 35.121 401.605 35.133 401.535 cv
35.137 401.469 35.152 401.406 35.18 401.352 cv
35.199 401.301 35.23 401.25 35.266 401.195 cv
35.301 401.145 35.348 401.09 35.406 401.027 cv
37.184 399.199 li
37.59 398.781 37.918 398.402 38.168 398.066 cv
38.41 397.734 38.602 397.43 38.742 397.152 cv
38.875 396.883 38.965 396.633 39.008 396.406 cv
39.047 396.18 39.066 395.969 39.07 395.773 cv
39.066 395.578 39.035 395.395 38.969 395.215 cv
38.902 395.043 38.805 394.887 38.684 394.75 cv
38.555 394.621 38.398 394.516 38.211 394.434 cv
38.02 394.359 37.805 394.32 37.563 394.316 cv
37.273 394.32 37.012 394.359 36.785 394.434 cv
36.551 394.516 36.352 394.602 36.184 394.687 cv
36.008 394.781 35.863 394.863 35.75 394.941 cv
35.633 395.02 35.547 395.059 35.492 395.059 cv
35.457 395.059 35.43 395.051 35.406 395.031 cv
35.379 395.016 35.355 394.984 35.34 394.941 cv
35.32 394.902 35.309 394.848 35.301 394.777 cv
35.293 394.707 35.289 394.625 35.289 394.527 cv
35.289 394.461 35.289 394.402 35.293 394.352 cv
35.297 394.301 35.305 394.258 35.316 394.219 cv
35.328 394.187 35.344 394.152 35.363 394.117 cv
35.379 394.09 35.414 394.051 35.473 394 cv
35.523 393.953 35.621 393.887 35.758 393.801 cv
35.891 393.719 36.059 393.637 36.266 393.559 cv
36.465 393.48 36.688 393.414 36.938 393.355 cv
37.18 393.305 37.438 393.277 37.711 393.273 cv
38.137 393.277 38.516 393.34 38.84 393.457 cv
39.16 393.582 39.426 393.746 39.645 393.953 cv
39.855 394.168 40.016 394.414 40.121 394.687 cv
40.227 394.969 40.281 395.266 40.281 395.578 cv
40.281 395.867 40.254 396.148 40.203 396.43 cv
40.152 396.711 40.047 397.016 39.883 397.344 cv
39.719 397.672 39.484 398.035 39.18 398.434 cv
38.875 398.836 38.465 399.297 37.957 399.816 cv
36.551 401.285 li
40.418 401.285 li
40.449 401.289 40.484 401.297 40.523 401.316 cv
40.555 401.34 40.586 401.371 40.613 401.41 cv
40.637 401.453 40.656 401.508 40.668 401.566 cv
40.676 401.629 40.68 401.699 40.684 401.781 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.926 401.539 mo
43.922 401.867 43.867 402.086 43.766 402.191 cv
43.656 402.297 43.461 402.348 43.18 402.352 cv
42.898 402.348 42.707 402.297 42.605 402.195 cv
42.496 402.09 42.445 401.879 42.449 401.562 cv
42.445 401.238 42.5 401.023 42.609 400.914 cv
42.719 400.809 42.914 400.754 43.199 400.75 cv
43.473 400.754 43.664 400.809 43.77 400.91 cv
43.871 401.02 43.922 401.227 43.926 401.539 cv
cp
f
51.641 397.824 mo
51.637 398.508 51.582 399.133 51.477 399.695 cv
51.367 400.262 51.191 400.746 50.941 401.148 cv
50.691 401.555 50.363 401.867 49.965 402.086 cv
49.559 402.309 49.063 402.418 48.477 402.418 cv
47.914 402.418 47.445 402.32 47.063 402.121 cv
46.68 401.922 46.371 401.629 46.137 401.242 cv
45.902 400.855 45.734 400.379 45.641 399.812 cv
45.539 399.25 45.492 398.602 45.496 397.867 cv
45.492 397.191 45.547 396.57 45.66 396.004 cv
45.766 395.437 45.945 394.953 46.195 394.547 cv
46.441 394.145 46.766 393.828 47.168 393.605 cv
47.57 393.387 48.063 393.277 48.652 393.273 cv
49.211 393.277 49.684 393.379 50.07 393.574 cv
50.449 393.777 50.758 394.07 50.992 394.453 cv
51.223 394.844 51.391 395.316 51.492 395.879 cv
51.59 396.445 51.637 397.094 51.641 397.824 cv
cp
50.434 397.906 mo
50.43 397.465 50.414 397.07 50.383 396.715 cv
50.348 396.363 50.301 396.051 50.242 395.781 cv
50.176 395.512 50.094 395.277 50 395.082 cv
49.898 394.887 49.781 394.727 49.648 394.602 cv
49.508 394.477 49.352 394.387 49.176 394.328 cv
49 394.273 48.805 394.246 48.586 394.242 cv
48.195 394.246 47.879 394.336 47.637 394.516 cv
47.395 394.699 47.203 394.949 47.063 395.27 cv
46.922 395.59 46.824 395.969 46.777 396.398 cv
46.723 396.832 46.699 397.293 46.703 397.785 cv
46.699 398.453 46.734 399.02 46.805 399.48 cv
46.875 399.949 46.984 400.328 47.133 400.617 cv
47.281 400.914 47.469 401.125 47.703 401.254 cv
47.93 401.391 48.211 401.457 48.543 401.453 cv
48.797 401.457 49.023 401.414 49.219 401.328 cv
49.414 401.246 49.578 401.129 49.719 400.973 cv
49.855 400.82 49.973 400.637 50.066 400.422 cv
50.156 400.207 50.23 399.969 50.289 399.707 cv
50.34 399.449 50.379 399.168 50.402 398.859 cv
50.422 398.559 50.43 398.238 50.434 397.906 cv
cp
f
34.34 362.512 mo
52.067 362.512 li
52.067 379.602 li
34.34 379.602 li
cp
0 0 0 0 cmyk
ef
40.676 375.402 mo
40.672 375.488 40.668 375.562 40.656 375.625 cv
40.645 375.691 40.629 375.746 40.609 375.785 cv
40.586 375.832 40.559 375.863 40.527 375.879 cv
40.492 375.902 40.453 375.91 40.414 375.91 cv
35.512 375.91 li
35.449 375.91 35.391 375.902 35.344 375.887 cv
35.293 375.871 35.254 375.848 35.219 375.809 cv
35.184 375.777 35.156 375.723 35.145 375.652 cv
35.125 375.582 35.117 375.496 35.121 375.395 cv
35.117 375.305 35.121 375.227 35.129 375.156 cv
35.133 375.09 35.148 375.031 35.176 374.977 cv
35.199 374.926 35.23 374.871 35.266 374.816 cv
35.301 374.766 35.344 374.711 35.402 374.648 cv
37.176 372.824 li
37.586 372.406 37.914 372.031 38.164 371.695 cv
38.41 371.367 38.602 371.062 38.734 370.785 cv
38.867 370.512 38.953 370.262 39 370.035 cv
39.039 369.812 39.063 369.602 39.063 369.406 cv
39.063 369.211 39.027 369.027 38.961 368.848 cv
38.895 368.676 38.801 368.52 38.676 368.383 cv
38.551 368.254 38.395 368.148 38.207 368.066 cv
38.02 367.992 37.801 367.953 37.555 367.949 cv
37.266 367.953 37.008 367.992 36.781 368.066 cv
36.551 368.148 36.352 368.234 36.18 368.32 cv
36.008 368.414 35.863 368.496 35.746 368.574 cv
35.629 368.652 35.543 368.691 35.492 368.691 cv
35.457 368.691 35.426 368.684 35.402 368.664 cv
35.371 368.648 35.352 368.617 35.336 368.574 cv
35.32 368.535 35.305 368.48 35.297 368.41 cv
35.285 368.344 35.281 368.262 35.285 368.164 cv
35.281 368.098 35.285 368.039 35.293 367.988 cv
35.297 367.937 35.305 367.895 35.316 367.855 cv
35.324 367.82 35.34 367.785 35.359 367.754 cv
35.379 367.723 35.414 367.684 35.473 367.633 cv
35.523 367.586 35.617 367.52 35.754 367.437 cv
35.887 367.355 36.059 367.277 36.262 367.195 cv
36.465 367.117 36.688 367.047 36.934 366.992 cv
37.176 366.937 37.434 366.91 37.707 366.91 cv
38.133 366.91 38.508 366.973 38.832 367.094 cv
39.152 367.215 39.418 367.379 39.633 367.59 cv
39.844 367.801 40.004 368.047 40.109 368.32 cv
40.215 368.602 40.27 368.898 40.27 369.211 cv
40.27 369.5 40.242 369.781 40.191 370.059 cv
40.141 370.344 40.035 370.648 39.875 370.973 cv
39.711 371.301 39.477 371.664 39.172 372.062 cv
38.863 372.465 38.457 372.926 37.953 373.441 cv
36.547 374.91 li
40.406 374.91 li
40.438 374.914 40.473 374.926 40.512 374.941 cv
40.543 374.965 40.574 374.996 40.602 375.035 cv
40.625 375.078 40.645 375.129 40.656 375.187 cv
40.668 375.254 40.672 375.324 40.676 375.402 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 375.164 mo
43.965 375.492 43.91 375.707 43.805 375.812 cv
43.695 375.918 43.5 375.969 43.219 375.973 cv
42.941 375.969 42.75 375.918 42.648 375.816 cv
42.539 375.711 42.488 375.5 42.492 375.184 cv
42.488 374.859 42.543 374.645 42.652 374.535 cv
42.758 374.43 42.953 374.375 43.238 374.375 cv
43.512 374.375 43.699 374.43 43.809 374.535 cv
43.91 374.641 43.965 374.852 43.965 375.164 cv
cp
f
51.289 373.059 mo
51.289 373.535 51.207 373.957 51.047 374.328 cv
50.887 374.699 50.66 375.012 50.371 375.266 cv
50.074 375.52 49.727 375.715 49.324 375.844 cv
48.918 375.977 48.469 376.039 47.977 376.039 cv
47.699 376.039 47.438 376.02 47.195 375.98 cv
46.945 375.941 46.727 375.895 46.539 375.84 cv
46.344 375.785 46.188 375.73 46.063 375.672 cv
45.938 375.621 45.859 375.578 45.828 375.543 cv
45.793 375.512 45.77 375.48 45.758 375.453 cv
45.742 375.426 45.727 375.395 45.719 375.352 cv
45.703 375.316 45.695 375.266 45.695 375.203 cv
45.688 375.145 45.688 375.074 45.688 374.992 cv
45.688 374.918 45.691 374.848 45.699 374.785 cv
45.707 374.723 45.719 374.672 45.738 374.633 cv
45.754 374.594 45.773 374.566 45.801 374.547 cv
45.824 374.531 45.855 374.523 45.887 374.52 cv
45.934 374.523 46.004 374.551 46.098 374.605 cv
46.191 374.664 46.32 374.727 46.484 374.793 cv
46.648 374.859 46.848 374.922 47.09 374.98 cv
47.324 375.039 47.609 375.066 47.945 375.066 cv
48.246 375.066 48.527 375.031 48.785 374.957 cv
49.039 374.887 49.262 374.773 49.449 374.617 cv
49.633 374.465 49.777 374.27 49.883 374.031 cv
49.988 373.797 50.039 373.508 50.043 373.168 cv
50.039 372.887 49.996 372.637 49.906 372.418 cv
49.816 372.199 49.68 372.02 49.496 371.875 cv
49.309 371.734 49.074 371.629 48.793 371.555 cv
48.508 371.484 48.168 371.445 47.781 371.445 cv
47.496 371.445 47.258 371.461 47.059 371.488 cv
46.855 371.52 46.668 371.535 46.496 371.531 cv
46.367 371.535 46.273 371.504 46.223 371.441 cv
46.164 371.383 46.137 371.27 46.141 371.098 cv
46.141 367.484 li
46.137 367.336 46.172 367.227 46.246 367.148 cv
46.313 367.078 46.414 367.039 46.551 367.039 cv
50.48 367.039 li
50.516 367.039 50.551 367.051 50.586 367.07 cv
50.617 367.094 50.645 367.125 50.672 367.164 cv
50.691 367.207 50.707 367.258 50.723 367.32 cv
50.73 367.387 50.738 367.465 50.742 367.547 cv
50.738 367.715 50.715 367.84 50.676 367.93 cv
50.629 368.023 50.57 368.07 50.492 368.066 cv
47.32 368.066 li
47.32 370.555 li
47.473 370.535 47.629 370.523 47.793 370.516 cv
47.949 370.512 48.137 370.508 48.352 370.508 cv
48.836 370.508 49.262 370.57 49.629 370.691 cv
49.992 370.812 50.297 370.984 50.547 371.203 cv
50.789 371.43 50.977 371.695 51.102 372.008 cv
51.227 372.324 51.289 372.676 51.289 373.059 cv
cp
f
34.34 336.141 mo
52.067 336.141 li
52.067 353.231 li
34.34 353.231 li
cp
0 0 0 0 cmyk
ef
40.605 347.004 mo
40.602 347.414 40.531 347.781 40.391 348.105 cv
40.246 348.434 40.043 348.715 39.781 348.945 cv
39.516 349.18 39.188 349.355 38.801 349.48 cv
38.41 349.605 37.973 349.668 37.488 349.668 cv
37.184 349.668 36.906 349.641 36.652 349.594 cv
36.391 349.547 36.16 349.496 35.965 349.426 cv
35.762 349.363 35.598 349.293 35.465 349.223 cv
35.332 349.152 35.246 349.102 35.215 349.066 cv
35.176 349.039 35.152 349.008 35.137 348.973 cv
35.117 348.941 35.098 348.902 35.086 348.855 cv
35.07 348.812 35.063 348.758 35.055 348.687 cv
35.047 348.625 35.043 348.543 35.047 348.441 cv
35.043 348.281 35.059 348.168 35.094 348.102 cv
35.125 348.039 35.172 348.004 35.234 348.004 cv
35.277 348.004 35.359 348.043 35.484 348.113 cv
35.605 348.191 35.766 348.27 35.961 348.352 cv
36.152 348.437 36.379 348.516 36.645 348.586 cv
36.902 348.66 37.195 348.695 37.516 348.695 cv
37.824 348.695 38.094 348.656 38.332 348.578 cv
38.563 348.5 38.762 348.391 38.922 348.25 cv
39.078 348.109 39.195 347.941 39.277 347.746 cv
39.355 347.551 39.395 347.34 39.398 347.113 cv
39.395 346.863 39.344 346.637 39.246 346.434 cv
39.141 346.234 38.992 346.062 38.801 345.914 cv
38.602 345.77 38.363 345.656 38.078 345.578 cv
37.793 345.5 37.469 345.461 37.105 345.461 cv
36.234 345.461 li
36.191 345.461 36.156 345.453 36.121 345.437 cv
36.086 345.422 36.055 345.395 36.031 345.355 cv
36.004 345.32 35.984 345.273 35.969 345.215 cv
35.953 345.156 35.945 345.078 35.945 344.98 cv
35.945 344.895 35.949 344.824 35.965 344.766 cv
35.973 344.711 35.992 344.664 36.023 344.629 cv
36.047 344.594 36.078 344.57 36.109 344.551 cv
36.141 344.539 36.176 344.531 36.219 344.527 cv
36.992 344.527 li
37.293 344.531 37.563 344.492 37.805 344.41 cv
38.039 344.336 38.242 344.223 38.414 344.074 cv
38.578 343.93 38.707 343.754 38.797 343.551 cv
38.887 343.348 38.934 343.121 38.934 342.867 cv
38.934 342.687 38.902 342.512 38.844 342.344 cv
38.781 342.18 38.691 342.035 38.574 341.91 cv
38.453 341.785 38.301 341.687 38.121 341.617 cv
37.934 341.547 37.723 341.512 37.48 341.512 cv
37.215 341.512 36.969 341.555 36.75 341.633 cv
36.523 341.715 36.328 341.801 36.156 341.891 cv
35.98 341.984 35.836 342.07 35.723 342.148 cv
35.609 342.23 35.527 342.27 35.484 342.266 cv
35.449 342.27 35.422 342.262 35.398 342.25 cv
35.371 342.238 35.352 342.215 35.336 342.18 cv
35.32 342.148 35.309 342.102 35.301 342.035 cv
35.293 341.977 35.289 341.895 35.293 341.793 cv
35.289 341.727 35.289 341.668 35.297 341.613 cv
35.297 341.562 35.309 341.516 35.324 341.473 cv
35.34 341.437 35.355 341.402 35.375 341.367 cv
35.391 341.34 35.422 341.301 35.465 341.254 cv
35.508 341.211 35.594 341.148 35.73 341.066 cv
35.859 340.984 36.023 340.906 36.219 340.824 cv
36.41 340.746 36.633 340.676 36.891 340.621 cv
37.141 340.566 37.414 340.539 37.711 340.539 cv
38.117 340.539 38.48 340.594 38.793 340.695 cv
39.105 340.805 39.363 340.953 39.574 341.141 cv
39.777 341.336 39.934 341.566 40.039 341.832 cv
40.141 342.102 40.191 342.395 40.195 342.719 cv
40.191 343 40.156 343.262 40.086 343.496 cv
40.012 343.738 39.902 343.949 39.762 344.133 cv
39.617 344.32 39.445 344.477 39.242 344.605 cv
39.035 344.738 38.797 344.832 38.527 344.879 cv
38.527 344.891 li
38.832 344.926 39.113 345 39.367 345.121 cv
39.621 345.242 39.84 345.395 40.023 345.578 cv
40.203 345.762 40.344 345.977 40.449 346.219 cv
40.551 346.465 40.602 346.727 40.605 347.004 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 348.793 mo
43.965 349.121 43.91 349.336 43.805 349.441 cv
43.695 349.547 43.5 349.598 43.219 349.602 cv
42.941 349.598 42.75 349.547 42.648 349.445 cv
42.539 349.34 42.488 349.129 42.492 348.812 cv
42.488 348.488 42.543 348.273 42.652 348.164 cv
42.758 348.059 42.953 348.004 43.238 348.004 cv
43.512 348.004 43.699 348.059 43.809 348.164 cv
43.91 348.27 43.965 348.48 43.965 348.793 cv
cp
f
51.625 345.082 mo
51.621 345.766 51.57 346.387 51.465 346.949 cv
51.355 347.512 51.176 347.996 50.93 348.398 cv
50.676 348.805 50.348 349.117 49.949 349.336 cv
49.543 349.559 49.051 349.668 48.465 349.668 cv
47.906 349.668 47.434 349.57 47.055 349.371 cv
46.672 349.176 46.367 348.883 46.133 348.496 cv
45.898 348.109 45.73 347.637 45.637 347.07 cv
45.535 346.508 45.488 345.859 45.488 345.125 cv
45.488 344.453 45.543 343.832 45.652 343.266 cv
45.762 342.703 45.938 342.219 46.188 341.812 cv
46.43 341.41 46.754 341.098 47.16 340.871 cv
47.559 340.652 48.055 340.539 48.645 340.539 cv
49.203 340.539 49.676 340.641 50.059 340.836 cv
50.441 341.039 50.746 341.332 50.98 341.715 cv
51.211 342.105 51.379 342.578 51.477 343.141 cv
51.574 343.703 51.621 344.352 51.625 345.082 cv
cp
50.418 345.164 mo
50.414 344.723 50.398 344.324 50.371 343.973 cv
50.336 343.621 50.289 343.312 50.23 343.043 cv
50.164 342.773 50.086 342.543 49.988 342.348 cv
49.891 342.156 49.773 341.996 49.637 341.867 cv
49.496 341.742 49.336 341.648 49.164 341.59 cv
48.984 341.535 48.789 341.508 48.574 341.504 cv
48.184 341.508 47.867 341.598 47.629 341.781 cv
47.383 341.965 47.191 342.219 47.055 342.535 cv
46.914 342.855 46.82 343.227 46.77 343.656 cv
46.719 344.086 46.695 344.551 46.695 345.043 cv
46.695 345.707 46.727 346.27 46.797 346.73 cv
46.863 347.199 46.973 347.578 47.125 347.867 cv
47.27 348.164 47.461 348.375 47.691 348.504 cv
47.922 348.641 48.203 348.707 48.535 348.703 cv
48.789 348.707 49.012 348.668 49.207 348.582 cv
49.398 348.504 49.566 348.383 49.707 348.227 cv
49.848 348.074 49.961 347.891 50.055 347.676 cv
50.141 347.461 50.215 347.223 50.273 346.961 cv
50.324 346.703 50.363 346.422 50.387 346.117 cv
50.406 345.812 50.414 345.496 50.418 345.164 cv
cp
f
34.34 309.781 mo
52.067 309.781 li
52.067 326.871 li
34.34 326.871 li
cp
0 0 0 0 cmyk
ef
40.605 320.625 mo
40.602 321.035 40.531 321.402 40.391 321.727 cv
40.246 322.055 40.043 322.336 39.781 322.566 cv
39.516 322.801 39.188 322.977 38.801 323.102 cv
38.41 323.227 37.973 323.289 37.488 323.289 cv
37.184 323.289 36.906 323.262 36.652 323.215 cv
36.391 323.168 36.16 323.117 35.965 323.047 cv
35.762 322.984 35.598 322.914 35.465 322.844 cv
35.332 322.773 35.246 322.723 35.215 322.687 cv
35.176 322.66 35.152 322.629 35.137 322.594 cv
35.117 322.562 35.098 322.523 35.086 322.477 cv
35.07 322.434 35.063 322.379 35.055 322.309 cv
35.047 322.246 35.043 322.164 35.047 322.062 cv
35.043 321.902 35.059 321.789 35.094 321.723 cv
35.125 321.66 35.172 321.625 35.234 321.625 cv
35.277 321.625 35.359 321.664 35.484 321.734 cv
35.605 321.812 35.766 321.891 35.961 321.973 cv
36.152 322.059 36.379 322.137 36.645 322.207 cv
36.902 322.281 37.195 322.316 37.516 322.316 cv
37.824 322.316 38.094 322.277 38.332 322.199 cv
38.563 322.121 38.762 322.012 38.922 321.871 cv
39.078 321.73 39.195 321.562 39.277 321.367 cv
39.355 321.172 39.395 320.961 39.398 320.734 cv
39.395 320.484 39.344 320.258 39.246 320.055 cv
39.141 319.855 38.992 319.684 38.801 319.535 cv
38.602 319.391 38.363 319.277 38.078 319.199 cv
37.793 319.121 37.469 319.082 37.105 319.082 cv
36.234 319.082 li
36.191 319.082 36.156 319.074 36.121 319.059 cv
36.086 319.043 36.055 319.016 36.031 318.977 cv
36.004 318.941 35.984 318.895 35.969 318.836 cv
35.953 318.777 35.945 318.699 35.945 318.602 cv
35.945 318.516 35.949 318.445 35.965 318.387 cv
35.973 318.332 35.992 318.285 36.023 318.25 cv
36.047 318.215 36.078 318.191 36.109 318.172 cv
36.141 318.16 36.176 318.152 36.219 318.148 cv
36.992 318.148 li
37.293 318.152 37.563 318.113 37.805 318.031 cv
38.039 317.957 38.242 317.844 38.414 317.695 cv
38.578 317.551 38.707 317.375 38.797 317.172 cv
38.887 316.969 38.934 316.742 38.934 316.488 cv
38.934 316.309 38.902 316.133 38.844 315.965 cv
38.781 315.801 38.691 315.656 38.574 315.531 cv
38.453 315.406 38.301 315.309 38.121 315.238 cv
37.934 315.168 37.723 315.133 37.48 315.133 cv
37.215 315.133 36.969 315.176 36.75 315.254 cv
36.523 315.336 36.328 315.422 36.156 315.512 cv
35.98 315.605 35.836 315.691 35.723 315.77 cv
35.609 315.852 35.527 315.891 35.484 315.887 cv
35.449 315.891 35.422 315.883 35.398 315.871 cv
35.371 315.859 35.352 315.836 35.336 315.801 cv
35.32 315.77 35.309 315.723 35.301 315.656 cv
35.293 315.598 35.289 315.516 35.293 315.414 cv
35.289 315.348 35.289 315.289 35.297 315.234 cv
35.297 315.184 35.309 315.137 35.324 315.094 cv
35.34 315.059 35.355 315.023 35.375 314.988 cv
35.391 314.961 35.422 314.922 35.465 314.875 cv
35.508 314.832 35.594 314.77 35.73 314.687 cv
35.859 314.605 36.023 314.527 36.219 314.445 cv
36.41 314.367 36.633 314.297 36.891 314.242 cv
37.141 314.187 37.414 314.16 37.711 314.16 cv
38.117 314.16 38.48 314.215 38.793 314.316 cv
39.105 314.426 39.363 314.574 39.574 314.762 cv
39.777 314.957 39.934 315.187 40.039 315.453 cv
40.141 315.723 40.191 316.016 40.195 316.34 cv
40.191 316.621 40.156 316.883 40.086 317.117 cv
40.012 317.359 39.902 317.57 39.762 317.754 cv
39.617 317.941 39.445 318.098 39.242 318.227 cv
39.035 318.359 38.797 318.453 38.527 318.5 cv
38.527 318.512 li
38.832 318.547 39.113 318.621 39.367 318.742 cv
39.621 318.863 39.84 319.016 40.023 319.199 cv
40.203 319.383 40.344 319.598 40.449 319.84 cv
40.551 320.086 40.602 320.348 40.605 320.625 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 322.414 mo
43.965 322.742 43.91 322.957 43.805 323.062 cv
43.695 323.168 43.5 323.219 43.219 323.223 cv
42.941 323.219 42.75 323.168 42.648 323.066 cv
42.539 322.961 42.488 322.75 42.492 322.434 cv
42.488 322.109 42.543 321.895 42.652 321.785 cv
42.758 321.68 42.953 321.625 43.238 321.625 cv
43.512 321.625 43.699 321.68 43.809 321.785 cv
43.91 321.891 43.965 322.102 43.965 322.414 cv
cp
f
51.289 320.309 mo
51.289 320.785 51.207 321.207 51.047 321.578 cv
50.887 321.949 50.66 322.262 50.371 322.516 cv
50.074 322.77 49.727 322.965 49.324 323.094 cv
48.918 323.227 48.469 323.289 47.977 323.289 cv
47.699 323.289 47.438 323.27 47.195 323.23 cv
46.945 323.191 46.727 323.145 46.539 323.09 cv
46.344 323.035 46.188 322.98 46.063 322.922 cv
45.938 322.871 45.859 322.828 45.828 322.793 cv
45.793 322.762 45.77 322.73 45.758 322.703 cv
45.742 322.676 45.727 322.645 45.719 322.602 cv
45.703 322.566 45.695 322.516 45.695 322.453 cv
45.688 322.395 45.688 322.324 45.688 322.242 cv
45.688 322.168 45.691 322.098 45.699 322.035 cv
45.707 321.973 45.719 321.922 45.738 321.883 cv
45.754 321.844 45.773 321.816 45.801 321.797 cv
45.824 321.781 45.855 321.773 45.887 321.77 cv
45.934 321.773 46.004 321.801 46.098 321.855 cv
46.191 321.914 46.32 321.977 46.484 322.043 cv
46.648 322.109 46.848 322.172 47.09 322.23 cv
47.324 322.289 47.609 322.316 47.945 322.316 cv
48.246 322.316 48.527 322.281 48.785 322.207 cv
49.039 322.137 49.262 322.023 49.449 321.867 cv
49.633 321.715 49.777 321.52 49.883 321.281 cv
49.988 321.047 50.039 320.758 50.043 320.418 cv
50.039 320.137 49.996 319.887 49.906 319.668 cv
49.816 319.449 49.68 319.27 49.496 319.125 cv
49.309 318.984 49.074 318.879 48.793 318.805 cv
48.508 318.734 48.168 318.695 47.781 318.695 cv
47.496 318.695 47.258 318.711 47.059 318.738 cv
46.855 318.77 46.668 318.785 46.496 318.781 cv
46.367 318.785 46.273 318.754 46.223 318.691 cv
46.164 318.633 46.137 318.52 46.141 318.348 cv
46.141 314.734 li
46.137 314.586 46.172 314.477 46.246 314.398 cv
46.313 314.328 46.414 314.289 46.551 314.289 cv
50.48 314.289 li
50.516 314.289 50.551 314.301 50.586 314.32 cv
50.617 314.344 50.645 314.375 50.672 314.414 cv
50.691 314.457 50.707 314.508 50.723 314.57 cv
50.73 314.637 50.738 314.715 50.742 314.797 cv
50.738 314.965 50.715 315.09 50.676 315.18 cv
50.629 315.273 50.57 315.32 50.492 315.316 cv
47.32 315.316 li
47.32 317.805 li
47.473 317.785 47.629 317.773 47.793 317.766 cv
47.949 317.762 48.137 317.758 48.352 317.758 cv
48.836 317.758 49.262 317.82 49.629 317.941 cv
49.992 318.062 50.297 318.234 50.547 318.453 cv
50.789 318.68 50.977 318.945 51.102 319.258 cv
51.227 319.574 51.289 319.926 51.289 320.309 cv
cp
f
34.34 283.41 mo
52.067 283.41 li
52.067 300.5 li
34.34 300.5 li
cp
0 0 0 0 cmyk
ef
41.051 294.258 mo
41.047 294.41 41.023 294.531 40.98 294.617 cv
40.934 294.707 40.871 294.75 40.789 294.746 cv
39.789 294.746 li
39.789 296.609 li
39.789 296.648 39.777 296.68 39.762 296.703 cv
39.738 296.73 39.707 296.75 39.664 296.77 cv
39.613 296.785 39.551 296.797 39.48 296.809 cv
39.402 296.816 39.309 296.82 39.191 296.824 cv
39.074 296.82 38.977 296.816 38.906 296.809 cv
38.828 296.797 38.77 296.785 38.727 296.77 cv
38.68 296.75 38.648 296.73 38.633 296.703 cv
38.613 296.68 38.605 296.648 38.609 296.609 cv
38.609 294.746 li
34.98 294.746 li
34.922 294.75 34.879 294.742 34.844 294.727 cv
34.809 294.715 34.773 294.687 34.746 294.648 cv
34.715 294.613 34.695 294.562 34.684 294.492 cv
34.672 294.426 34.668 294.336 34.668 294.223 cv
34.668 294.141 34.668 294.062 34.676 293.992 cv
34.676 293.922 34.688 293.859 34.703 293.805 cv
34.715 293.75 34.73 293.695 34.758 293.641 cv
34.777 293.586 34.805 293.531 34.84 293.469 cv
38 288.082 li
38.02 288.047 38.055 288.016 38.102 287.988 cv
38.145 287.961 38.199 287.937 38.273 287.918 cv
38.34 287.902 38.426 287.891 38.531 287.879 cv
38.633 287.875 38.754 287.871 38.895 287.867 cv
39.043 287.871 39.18 287.875 39.297 287.887 cv
39.41 287.898 39.5 287.914 39.574 287.93 cv
39.641 287.949 39.695 287.973 39.734 288.004 cv
39.77 288.035 39.789 288.07 39.789 288.109 cv
39.789 293.773 li
40.789 293.773 li
40.863 293.777 40.926 293.816 40.977 293.895 cv
41.023 293.977 41.047 294.098 41.051 294.258 cv
cp
38.609 288.906 mo
38.598 288.906 li
35.746 293.773 li
38.609 293.773 li
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 296.035 mo
43.965 296.363 43.91 296.578 43.805 296.684 cv
43.695 296.789 43.5 296.84 43.219 296.844 cv
42.941 296.84 42.75 296.789 42.648 296.687 cv
42.539 296.582 42.488 296.371 42.492 296.055 cv
42.488 295.73 42.543 295.516 42.652 295.406 cv
42.758 295.301 42.953 295.246 43.238 295.246 cv
43.512 295.246 43.699 295.301 43.809 295.406 cv
43.91 295.512 43.965 295.723 43.965 296.035 cv
cp
f
51.625 292.324 mo
51.621 293.008 51.57 293.629 51.465 294.191 cv
51.355 294.754 51.176 295.238 50.93 295.641 cv
50.676 296.047 50.348 296.359 49.949 296.578 cv
49.543 296.801 49.051 296.91 48.465 296.91 cv
47.906 296.91 47.434 296.812 47.055 296.613 cv
46.672 296.418 46.367 296.125 46.133 295.738 cv
45.898 295.352 45.73 294.879 45.637 294.312 cv
45.535 293.75 45.488 293.102 45.488 292.367 cv
45.488 291.695 45.543 291.074 45.652 290.508 cv
45.762 289.945 45.938 289.461 46.188 289.055 cv
46.43 288.652 46.754 288.34 47.16 288.113 cv
47.559 287.895 48.055 287.781 48.645 287.781 cv
49.203 287.781 49.676 287.883 50.059 288.078 cv
50.441 288.281 50.746 288.574 50.98 288.957 cv
51.211 289.348 51.379 289.82 51.477 290.383 cv
51.574 290.945 51.621 291.594 51.625 292.324 cv
cp
50.418 292.406 mo
50.414 291.965 50.398 291.566 50.371 291.215 cv
50.336 290.863 50.289 290.555 50.23 290.285 cv
50.164 290.016 50.086 289.785 49.988 289.59 cv
49.891 289.398 49.773 289.238 49.637 289.109 cv
49.496 288.984 49.336 288.891 49.164 288.832 cv
48.984 288.777 48.789 288.75 48.574 288.746 cv
48.184 288.75 47.867 288.84 47.629 289.023 cv
47.383 289.207 47.191 289.461 47.055 289.777 cv
46.914 290.098 46.82 290.469 46.77 290.898 cv
46.719 291.328 46.695 291.793 46.695 292.285 cv
46.695 292.949 46.727 293.512 46.797 293.973 cv
46.863 294.441 46.973 294.82 47.125 295.109 cv
47.27 295.406 47.461 295.617 47.691 295.746 cv
47.922 295.883 48.203 295.949 48.535 295.945 cv
48.789 295.949 49.012 295.91 49.207 295.824 cv
49.398 295.746 49.566 295.625 49.707 295.469 cv
49.848 295.316 49.961 295.133 50.055 294.918 cv
50.141 294.703 50.215 294.465 50.273 294.203 cv
50.324 293.945 50.363 293.664 50.387 293.359 cv
50.406 293.055 50.414 292.738 50.418 292.406 cv
cp
f
34.34 257.039 mo
52.067 257.039 li
52.067 274.129 li
34.34 274.129 li
cp
0 0 0 0 cmyk
ef
41.051 267.887 mo
41.047 268.039 41.023 268.16 40.98 268.246 cv
40.934 268.336 40.871 268.379 40.789 268.375 cv
39.789 268.375 li
39.789 270.238 li
39.789 270.277 39.777 270.309 39.762 270.332 cv
39.738 270.359 39.707 270.379 39.664 270.398 cv
39.613 270.414 39.551 270.426 39.48 270.437 cv
39.402 270.445 39.309 270.449 39.191 270.453 cv
39.074 270.449 38.977 270.445 38.906 270.437 cv
38.828 270.426 38.77 270.414 38.727 270.398 cv
38.68 270.379 38.648 270.359 38.633 270.332 cv
38.613 270.309 38.605 270.277 38.609 270.238 cv
38.609 268.375 li
34.98 268.375 li
34.922 268.379 34.879 268.371 34.844 268.355 cv
34.809 268.344 34.773 268.316 34.746 268.277 cv
34.715 268.242 34.695 268.191 34.684 268.121 cv
34.672 268.055 34.668 267.965 34.668 267.852 cv
34.668 267.77 34.668 267.691 34.676 267.621 cv
34.676 267.551 34.688 267.488 34.703 267.434 cv
34.715 267.379 34.73 267.324 34.758 267.27 cv
34.777 267.215 34.805 267.16 34.84 267.098 cv
38 261.711 li
38.02 261.676 38.055 261.645 38.102 261.617 cv
38.145 261.59 38.199 261.566 38.273 261.547 cv
38.34 261.531 38.426 261.52 38.531 261.508 cv
38.633 261.504 38.754 261.5 38.895 261.496 cv
39.043 261.5 39.18 261.504 39.297 261.516 cv
39.41 261.527 39.5 261.543 39.574 261.559 cv
39.641 261.578 39.695 261.602 39.734 261.633 cv
39.77 261.664 39.789 261.699 39.789 261.738 cv
39.789 267.402 li
40.789 267.402 li
40.863 267.406 40.926 267.445 40.977 267.523 cv
41.023 267.605 41.047 267.727 41.051 267.887 cv
cp
38.609 262.535 mo
38.598 262.535 li
35.746 267.402 li
38.609 267.402 li
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 269.664 mo
43.965 269.992 43.91 270.207 43.805 270.312 cv
43.695 270.418 43.5 270.469 43.219 270.473 cv
42.941 270.469 42.75 270.418 42.648 270.316 cv
42.539 270.211 42.488 270 42.492 269.684 cv
42.488 269.359 42.543 269.145 42.652 269.035 cv
42.758 268.93 42.953 268.875 43.238 268.875 cv
43.512 268.875 43.699 268.93 43.809 269.035 cv
43.91 269.141 43.965 269.352 43.965 269.664 cv
cp
f
51.289 267.559 mo
51.289 268.035 51.207 268.457 51.047 268.828 cv
50.887 269.199 50.66 269.512 50.371 269.766 cv
50.074 270.02 49.727 270.215 49.324 270.344 cv
48.918 270.477 48.469 270.539 47.977 270.539 cv
47.699 270.539 47.438 270.52 47.195 270.48 cv
46.945 270.441 46.727 270.395 46.539 270.34 cv
46.344 270.285 46.188 270.23 46.063 270.172 cv
45.938 270.121 45.859 270.078 45.828 270.043 cv
45.793 270.012 45.77 269.98 45.758 269.953 cv
45.742 269.926 45.727 269.895 45.719 269.852 cv
45.703 269.816 45.695 269.766 45.695 269.703 cv
45.688 269.645 45.688 269.574 45.688 269.492 cv
45.688 269.418 45.691 269.348 45.699 269.285 cv
45.707 269.223 45.719 269.172 45.738 269.133 cv
45.754 269.094 45.773 269.066 45.801 269.047 cv
45.824 269.031 45.855 269.023 45.887 269.02 cv
45.934 269.023 46.004 269.051 46.098 269.105 cv
46.191 269.164 46.32 269.227 46.484 269.293 cv
46.648 269.359 46.848 269.422 47.09 269.48 cv
47.324 269.539 47.609 269.566 47.945 269.566 cv
48.246 269.566 48.527 269.531 48.785 269.457 cv
49.039 269.387 49.262 269.273 49.449 269.117 cv
49.633 268.965 49.777 268.77 49.883 268.531 cv
49.988 268.297 50.039 268.008 50.043 267.668 cv
50.039 267.387 49.996 267.137 49.906 266.918 cv
49.816 266.699 49.68 266.52 49.496 266.375 cv
49.309 266.234 49.074 266.129 48.793 266.055 cv
48.508 265.984 48.168 265.945 47.781 265.945 cv
47.496 265.945 47.258 265.961 47.059 265.988 cv
46.855 266.02 46.668 266.035 46.496 266.031 cv
46.367 266.035 46.273 266.004 46.223 265.941 cv
46.164 265.883 46.137 265.77 46.141 265.598 cv
46.141 261.984 li
46.137 261.836 46.172 261.727 46.246 261.648 cv
46.313 261.578 46.414 261.539 46.551 261.539 cv
50.48 261.539 li
50.516 261.539 50.551 261.551 50.586 261.57 cv
50.617 261.594 50.645 261.625 50.672 261.664 cv
50.691 261.707 50.707 261.758 50.723 261.82 cv
50.73 261.887 50.738 261.965 50.742 262.047 cv
50.738 262.215 50.715 262.34 50.676 262.43 cv
50.629 262.523 50.57 262.57 50.492 262.566 cv
47.32 262.566 li
47.32 265.055 li
47.473 265.035 47.629 265.023 47.793 265.016 cv
47.949 265.012 48.137 265.008 48.352 265.008 cv
48.836 265.008 49.262 265.07 49.629 265.191 cv
49.992 265.312 50.297 265.484 50.547 265.703 cv
50.789 265.93 50.977 266.195 51.102 266.508 cv
51.227 266.824 51.289 267.176 51.289 267.559 cv
cp
f
34.34 230.672 mo
52.067 230.672 li
52.067 247.762 li
34.34 247.762 li
cp
0 0 0 0 cmyk
ef
40.633 241.18 mo
40.633 241.656 40.551 242.078 40.391 242.449 cv
40.23 242.82 40.004 243.133 39.715 243.387 cv
39.418 243.641 39.07 243.836 38.668 243.965 cv
38.262 244.098 37.813 244.16 37.32 244.16 cv
37.043 244.16 36.781 244.141 36.539 244.102 cv
36.289 244.062 36.07 244.016 35.883 243.961 cv
35.688 243.906 35.531 243.852 35.406 243.793 cv
35.281 243.742 35.203 243.699 35.172 243.664 cv
35.137 243.633 35.113 243.602 35.102 243.574 cv
35.086 243.547 35.07 243.516 35.063 243.473 cv
35.047 243.437 35.039 243.387 35.039 243.324 cv
35.031 243.266 35.031 243.195 35.031 243.113 cv
35.031 243.039 35.035 242.969 35.043 242.906 cv
35.051 242.844 35.063 242.793 35.082 242.754 cv
35.098 242.715 35.117 242.687 35.145 242.668 cv
35.168 242.652 35.199 242.645 35.23 242.641 cv
35.277 242.645 35.348 242.672 35.441 242.727 cv
35.535 242.785 35.664 242.848 35.828 242.914 cv
35.992 242.98 36.191 243.043 36.434 243.102 cv
36.668 243.16 36.953 243.187 37.289 243.187 cv
37.59 243.187 37.871 243.152 38.129 243.078 cv
38.383 243.008 38.605 242.895 38.793 242.738 cv
38.977 242.586 39.121 242.391 39.227 242.152 cv
39.332 241.918 39.383 241.629 39.387 241.289 cv
39.383 241.008 39.34 240.758 39.25 240.539 cv
39.16 240.32 39.023 240.141 38.84 239.996 cv
38.652 239.855 38.418 239.75 38.137 239.676 cv
37.852 239.605 37.512 239.566 37.125 239.566 cv
36.84 239.566 36.602 239.582 36.402 239.609 cv
36.199 239.641 36.012 239.656 35.84 239.652 cv
35.711 239.656 35.617 239.625 35.566 239.562 cv
35.508 239.504 35.48 239.391 35.484 239.219 cv
35.484 235.605 li
35.48 235.457 35.516 235.348 35.59 235.27 cv
35.656 235.199 35.758 235.16 35.895 235.16 cv
39.824 235.16 li
39.859 235.16 39.895 235.172 39.93 235.191 cv
39.961 235.215 39.988 235.246 40.016 235.285 cv
40.035 235.328 40.051 235.379 40.066 235.441 cv
40.074 235.508 40.082 235.586 40.086 235.668 cv
40.082 235.836 40.059 235.961 40.02 236.051 cv
39.973 236.145 39.914 236.191 39.836 236.187 cv
36.664 236.187 li
36.664 238.676 li
36.816 238.656 36.973 238.645 37.137 238.637 cv
37.293 238.633 37.48 238.629 37.695 238.629 cv
38.18 238.629 38.605 238.691 38.973 238.812 cv
39.336 238.934 39.641 239.105 39.891 239.324 cv
40.133 239.551 40.32 239.816 40.445 240.129 cv
40.57 240.445 40.633 240.797 40.633 241.18 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 243.285 mo
43.965 243.613 43.91 243.828 43.805 243.934 cv
43.695 244.039 43.5 244.09 43.219 244.094 cv
42.941 244.09 42.75 244.039 42.648 243.937 cv
42.539 243.832 42.488 243.621 42.492 243.305 cv
42.488 242.98 42.543 242.766 42.652 242.656 cv
42.758 242.551 42.953 242.496 43.238 242.496 cv
43.512 242.496 43.699 242.551 43.809 242.656 cv
43.91 242.762 43.965 242.973 43.965 243.285 cv
cp
f
51.625 239.574 mo
51.621 240.258 51.57 240.879 51.465 241.441 cv
51.355 242.004 51.176 242.488 50.93 242.891 cv
50.676 243.297 50.348 243.609 49.949 243.828 cv
49.543 244.051 49.051 244.16 48.465 244.16 cv
47.906 244.16 47.434 244.062 47.055 243.863 cv
46.672 243.668 46.367 243.375 46.133 242.988 cv
45.898 242.602 45.73 242.129 45.637 241.562 cv
45.535 241 45.488 240.352 45.488 239.617 cv
45.488 238.945 45.543 238.324 45.652 237.758 cv
45.762 237.195 45.938 236.711 46.188 236.305 cv
46.43 235.902 46.754 235.59 47.16 235.363 cv
47.559 235.145 48.055 235.031 48.645 235.031 cv
49.203 235.031 49.676 235.133 50.059 235.328 cv
50.441 235.531 50.746 235.824 50.98 236.207 cv
51.211 236.598 51.379 237.07 51.477 237.633 cv
51.574 238.195 51.621 238.844 51.625 239.574 cv
cp
50.418 239.656 mo
50.414 239.215 50.398 238.816 50.371 238.465 cv
50.336 238.113 50.289 237.805 50.23 237.535 cv
50.164 237.266 50.086 237.035 49.988 236.84 cv
49.891 236.648 49.773 236.488 49.637 236.359 cv
49.496 236.234 49.336 236.141 49.164 236.082 cv
48.984 236.027 48.789 236 48.574 235.996 cv
48.184 236 47.867 236.09 47.629 236.273 cv
47.383 236.457 47.191 236.711 47.055 237.027 cv
46.914 237.348 46.82 237.719 46.77 238.148 cv
46.719 238.578 46.695 239.043 46.695 239.535 cv
46.695 240.199 46.727 240.762 46.797 241.223 cv
46.863 241.691 46.973 242.07 47.125 242.359 cv
47.27 242.656 47.461 242.867 47.691 242.996 cv
47.922 243.133 48.203 243.199 48.535 243.195 cv
48.789 243.199 49.012 243.16 49.207 243.074 cv
49.398 242.996 49.566 242.875 49.707 242.719 cv
49.848 242.566 49.961 242.383 50.055 242.168 cv
50.141 241.953 50.215 241.715 50.273 241.453 cv
50.324 241.195 50.363 240.914 50.387 240.609 cv
50.406 240.305 50.414 239.988 50.418 239.656 cv
cp
f
34.34 204.309 mo
52.067 204.309 li
52.067 221.399 li
34.34 221.399 li
cp
0 0 0 0 cmyk
ef
40.645 214.824 mo
40.645 215.305 40.563 215.727 40.402 216.094 cv
40.242 216.465 40.016 216.777 39.723 217.031 cv
39.43 217.285 39.082 217.477 38.676 217.609 cv
38.27 217.742 37.82 217.809 37.328 217.809 cv
37.051 217.809 36.789 217.789 36.543 217.75 cv
36.293 217.711 36.07 217.664 35.883 217.609 cv
35.688 217.555 35.531 217.5 35.41 217.441 cv
35.285 217.387 35.207 217.344 35.172 217.309 cv
35.137 217.281 35.113 217.25 35.102 217.223 cv
35.086 217.195 35.07 217.164 35.063 217.121 cv
35.047 217.086 35.039 217.035 35.039 216.973 cv
35.031 216.914 35.031 216.844 35.035 216.758 cv
35.031 216.687 35.035 216.617 35.043 216.551 cv
35.051 216.492 35.063 216.441 35.082 216.398 cv
35.098 216.363 35.117 216.336 35.145 216.312 cv
35.168 216.297 35.199 216.285 35.234 216.285 cv
35.277 216.285 35.348 216.316 35.445 216.371 cv
35.539 216.434 35.668 216.496 35.832 216.559 cv
35.992 216.629 36.195 216.691 36.438 216.746 cv
36.676 216.809 36.961 216.836 37.293 216.836 cv
37.598 216.836 37.879 216.801 38.137 216.727 cv
38.395 216.656 38.613 216.543 38.801 216.383 cv
38.98 216.23 39.125 216.035 39.234 215.797 cv
39.336 215.562 39.391 215.273 39.395 214.934 cv
39.391 214.652 39.344 214.402 39.258 214.184 cv
39.164 213.969 39.027 213.789 38.848 213.641 cv
38.66 213.5 38.426 213.391 38.145 213.316 cv
37.855 213.25 37.52 213.215 37.129 213.211 cv
36.848 213.215 36.605 213.23 36.406 213.254 cv
36.203 213.285 36.016 213.297 35.844 213.293 cv
35.715 213.297 35.625 213.266 35.57 213.203 cv
35.516 213.145 35.488 213.031 35.488 212.859 cv
35.488 209.238 li
35.488 209.09 35.523 208.977 35.594 208.902 cv
35.664 208.832 35.766 208.797 35.898 208.793 cv
39.832 208.793 li
39.863 208.797 39.898 208.809 39.938 208.824 cv
39.969 208.848 40 208.879 40.023 208.918 cv
40.047 208.965 40.063 209.016 40.074 209.078 cv
40.086 209.141 40.094 209.215 40.094 209.301 cv
40.094 209.469 40.07 209.598 40.027 209.687 cv
39.984 209.781 39.922 209.828 39.844 209.824 cv
36.668 209.824 li
36.668 212.316 li
36.816 212.297 36.977 212.281 37.141 212.277 cv
37.301 212.273 37.484 212.273 37.699 212.27 cv
38.184 212.273 38.613 212.332 38.98 212.453 cv
39.348 212.574 39.652 212.746 39.898 212.965 cv
40.141 213.187 40.324 213.457 40.453 213.773 cv
40.578 214.09 40.645 214.441 40.645 214.824 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.926 216.93 mo
43.922 217.258 43.867 217.477 43.766 217.582 cv
43.656 217.687 43.461 217.738 43.18 217.742 cv
42.898 217.738 42.707 217.687 42.605 217.586 cv
42.496 217.48 42.445 217.27 42.449 216.953 cv
42.445 216.629 42.5 216.414 42.609 216.305 cv
42.719 216.199 42.914 216.145 43.199 216.141 cv
43.473 216.145 43.664 216.199 43.77 216.301 cv
43.871 216.41 43.922 216.617 43.926 216.93 cv
cp
f
51.305 214.824 mo
51.305 215.305 51.223 215.727 51.063 216.094 cv
50.902 216.465 50.676 216.777 50.383 217.031 cv
50.09 217.285 49.742 217.477 49.336 217.609 cv
48.93 217.742 48.48 217.809 47.988 217.809 cv
47.711 217.809 47.449 217.789 47.203 217.75 cv
46.953 217.711 46.73 217.664 46.543 217.609 cv
46.348 217.555 46.191 217.5 46.07 217.441 cv
45.945 217.387 45.867 217.344 45.832 217.309 cv
45.797 217.281 45.773 217.25 45.762 217.223 cv
45.746 217.195 45.73 217.164 45.723 217.121 cv
45.707 217.086 45.699 217.035 45.699 216.973 cv
45.691 216.914 45.691 216.844 45.695 216.758 cv
45.691 216.687 45.695 216.617 45.703 216.551 cv
45.711 216.492 45.723 216.441 45.742 216.398 cv
45.758 216.363 45.777 216.336 45.805 216.312 cv
45.828 216.297 45.859 216.285 45.895 216.285 cv
45.938 216.285 46.008 216.316 46.105 216.371 cv
46.199 216.434 46.328 216.496 46.492 216.559 cv
46.652 216.629 46.855 216.691 47.098 216.746 cv
47.336 216.809 47.621 216.836 47.953 216.836 cv
48.258 216.836 48.539 216.801 48.797 216.727 cv
49.055 216.656 49.273 216.543 49.461 216.383 cv
49.641 216.23 49.785 216.035 49.895 215.797 cv
49.996 215.562 50.051 215.273 50.055 214.934 cv
50.051 214.652 50.004 214.402 49.918 214.184 cv
49.824 213.969 49.688 213.789 49.508 213.641 cv
49.32 213.5 49.086 213.391 48.805 213.316 cv
48.516 213.25 48.18 213.215 47.789 213.211 cv
47.508 213.215 47.266 213.23 47.066 213.254 cv
46.863 213.285 46.676 213.297 46.504 213.293 cv
46.375 213.297 46.285 213.266 46.23 213.203 cv
46.176 213.145 46.148 213.031 46.148 212.859 cv
46.148 209.238 li
46.148 209.09 46.184 208.977 46.254 208.902 cv
46.324 208.832 46.426 208.797 46.559 208.793 cv
50.492 208.793 li
50.523 208.797 50.559 208.809 50.598 208.824 cv
50.629 208.848 50.66 208.879 50.684 208.918 cv
50.707 208.965 50.723 209.016 50.734 209.078 cv
50.746 209.141 50.754 209.215 50.754 209.301 cv
50.754 209.469 50.73 209.598 50.688 209.687 cv
50.645 209.781 50.582 209.828 50.504 209.824 cv
47.328 209.824 li
47.328 212.316 li
47.477 212.297 47.637 212.281 47.801 212.277 cv
47.961 212.273 48.145 212.273 48.359 212.27 cv
48.844 212.273 49.273 212.332 49.641 212.453 cv
50.008 212.574 50.313 212.746 50.559 212.965 cv
50.801 213.187 50.984 213.457 51.113 213.773 cv
51.238 214.09 51.305 214.441 51.305 214.824 cv
cp
f
34.34 177.941 mo
52.067 177.941 li
52.067 195.031 li
34.34 195.031 li
cp
0 0 0 0 cmyk
ef
40.902 188.43 mo
40.902 188.82 40.84 189.199 40.723 189.559 cv
40.598 189.926 40.414 190.242 40.172 190.516 cv
39.922 190.793 39.609 191.016 39.234 191.18 cv
38.852 191.348 38.406 191.43 37.891 191.43 cv
37.52 191.43 37.191 191.387 36.91 191.293 cv
36.625 191.207 36.379 191.074 36.168 190.902 cv
35.957 190.734 35.781 190.527 35.645 190.281 cv
35.504 190.035 35.391 189.754 35.309 189.437 cv
35.223 189.125 35.164 188.781 35.129 188.402 cv
35.09 188.031 35.07 187.629 35.074 187.195 cv
35.07 186.816 35.09 186.434 35.133 186.043 cv
35.172 185.66 35.246 185.285 35.352 184.918 cv
35.457 184.559 35.602 184.219 35.781 183.902 cv
35.961 183.586 36.188 183.309 36.461 183.074 cv
36.734 182.84 37.059 182.652 37.438 182.512 cv
37.816 182.375 38.258 182.309 38.762 182.305 cv
38.93 182.309 39.102 182.316 39.273 182.336 cv
39.445 182.359 39.605 182.391 39.754 182.422 cv
39.902 182.461 40.023 182.496 40.125 182.535 cv
40.223 182.574 40.289 182.609 40.324 182.633 cv
40.352 182.66 40.375 182.687 40.395 182.715 cv
40.41 182.746 40.426 182.777 40.434 182.812 cv
40.441 182.848 40.445 182.887 40.453 182.93 cv
40.453 182.973 40.457 183.027 40.461 183.09 cv
40.457 183.176 40.457 183.246 40.457 183.301 cv
40.453 183.363 40.441 183.41 40.43 183.445 cv
40.41 183.484 40.391 183.512 40.367 183.527 cv
40.34 183.547 40.309 183.555 40.27 183.555 cv
40.219 183.555 40.148 183.539 40.063 183.508 cv
39.973 183.477 39.867 183.441 39.746 183.398 cv
39.621 183.363 39.473 183.328 39.297 183.293 cv
39.121 183.266 38.918 183.25 38.688 183.246 cv
38.258 183.25 37.891 183.336 37.586 183.508 cv
37.281 183.68 37.031 183.914 36.836 184.207 cv
36.641 184.5 36.496 184.84 36.406 185.223 cv
36.309 185.613 36.254 186.016 36.246 186.434 cv
36.363 186.367 36.5 186.301 36.648 186.23 cv
36.797 186.164 36.957 186.102 37.133 186.043 cv
37.309 185.992 37.496 185.945 37.691 185.91 cv
37.887 185.879 38.098 185.863 38.324 185.859 cv
38.801 185.863 39.203 185.93 39.535 186.055 cv
39.863 186.187 40.129 186.367 40.336 186.598 cv
40.535 186.828 40.68 187.098 40.77 187.41 cv
40.855 187.723 40.902 188.062 40.902 188.43 cv
cp
39.707 188.539 mo
39.707 188.277 39.68 188.035 39.629 187.816 cv
39.574 187.602 39.484 187.418 39.363 187.262 cv
39.238 187.113 39.074 186.996 38.871 186.914 cv
38.66 186.832 38.406 186.789 38.109 186.789 cv
37.938 186.789 37.77 186.805 37.602 186.836 cv
37.43 186.867 37.266 186.91 37.109 186.957 cv
36.949 187.012 36.801 187.074 36.66 187.145 cv
36.516 187.219 36.383 187.293 36.266 187.371 cv
36.262 187.965 36.301 188.461 36.379 188.855 cv
36.453 189.254 36.563 189.57 36.707 189.809 cv
36.852 190.051 37.031 190.223 37.246 190.324 cv
37.461 190.43 37.711 190.48 38 190.477 cv
38.289 190.48 38.543 190.426 38.758 190.312 cv
38.973 190.207 39.148 190.059 39.293 189.871 cv
39.434 189.687 39.539 189.48 39.605 189.25 cv
39.672 189.02 39.707 188.785 39.707 188.539 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 190.555 mo
43.965 190.883 43.91 191.098 43.805 191.203 cv
43.695 191.309 43.5 191.359 43.219 191.363 cv
42.941 191.359 42.75 191.309 42.648 191.207 cv
42.539 191.102 42.488 190.891 42.492 190.574 cv
42.488 190.25 42.543 190.035 42.652 189.926 cv
42.758 189.82 42.953 189.766 43.238 189.766 cv
43.512 189.766 43.699 189.82 43.809 189.926 cv
43.91 190.031 43.965 190.242 43.965 190.555 cv
cp
f
51.625 186.844 mo
51.621 187.527 51.57 188.148 51.465 188.711 cv
51.355 189.273 51.176 189.758 50.93 190.16 cv
50.676 190.566 50.348 190.879 49.949 191.098 cv
49.543 191.32 49.051 191.43 48.465 191.43 cv
47.906 191.43 47.434 191.332 47.055 191.133 cv
46.672 190.937 46.367 190.645 46.133 190.258 cv
45.898 189.871 45.73 189.398 45.637 188.832 cv
45.535 188.27 45.488 187.621 45.488 186.887 cv
45.488 186.215 45.543 185.594 45.652 185.027 cv
45.762 184.465 45.938 183.98 46.188 183.574 cv
46.43 183.172 46.754 182.859 47.16 182.633 cv
47.559 182.414 48.055 182.301 48.645 182.301 cv
49.203 182.301 49.676 182.402 50.059 182.598 cv
50.441 182.801 50.746 183.094 50.98 183.477 cv
51.211 183.867 51.379 184.34 51.477 184.902 cv
51.574 185.465 51.621 186.113 51.625 186.844 cv
cp
50.418 186.926 mo
50.414 186.484 50.398 186.086 50.371 185.734 cv
50.336 185.383 50.289 185.074 50.23 184.805 cv
50.164 184.535 50.086 184.305 49.988 184.109 cv
49.891 183.918 49.773 183.758 49.637 183.629 cv
49.496 183.504 49.336 183.41 49.164 183.352 cv
48.984 183.297 48.789 183.27 48.574 183.266 cv
48.184 183.27 47.867 183.359 47.629 183.543 cv
47.383 183.727 47.191 183.98 47.055 184.297 cv
46.914 184.617 46.82 184.988 46.77 185.418 cv
46.719 185.848 46.695 186.312 46.695 186.805 cv
46.695 187.469 46.727 188.031 46.797 188.492 cv
46.863 188.961 46.973 189.34 47.125 189.629 cv
47.27 189.926 47.461 190.137 47.691 190.266 cv
47.922 190.402 48.203 190.469 48.535 190.465 cv
48.789 190.469 49.012 190.43 49.207 190.344 cv
49.398 190.266 49.566 190.145 49.707 189.988 cv
49.848 189.836 49.961 189.652 50.055 189.437 cv
50.141 189.223 50.215 188.984 50.273 188.723 cv
50.324 188.465 50.363 188.184 50.387 187.879 cv
50.406 187.574 50.414 187.258 50.418 186.926 cv
cp
f
34.34 151.57 mo
52.067 151.57 li
52.067 168.66 li
34.34 168.66 li
cp
0 0 0 0 cmyk
ef
40.902 162.059 mo
40.902 162.449 40.84 162.828 40.723 163.187 cv
40.598 163.555 40.414 163.871 40.172 164.145 cv
39.922 164.422 39.609 164.645 39.234 164.809 cv
38.852 164.977 38.406 165.059 37.891 165.059 cv
37.52 165.059 37.191 165.016 36.91 164.922 cv
36.625 164.836 36.379 164.703 36.168 164.531 cv
35.957 164.363 35.781 164.156 35.645 163.91 cv
35.504 163.664 35.391 163.383 35.309 163.066 cv
35.223 162.754 35.164 162.41 35.129 162.031 cv
35.09 161.66 35.07 161.258 35.074 160.824 cv
35.07 160.445 35.09 160.062 35.133 159.672 cv
35.172 159.289 35.246 158.914 35.352 158.547 cv
35.457 158.187 35.602 157.848 35.781 157.531 cv
35.961 157.215 36.188 156.937 36.461 156.703 cv
36.734 156.469 37.059 156.281 37.438 156.141 cv
37.816 156.004 38.258 155.937 38.762 155.934 cv
38.93 155.937 39.102 155.945 39.273 155.965 cv
39.445 155.988 39.605 156.02 39.754 156.051 cv
39.902 156.09 40.023 156.125 40.125 156.164 cv
40.223 156.203 40.289 156.238 40.324 156.262 cv
40.352 156.289 40.375 156.316 40.395 156.344 cv
40.41 156.375 40.426 156.406 40.434 156.441 cv
40.441 156.477 40.445 156.516 40.453 156.559 cv
40.453 156.602 40.457 156.656 40.461 156.719 cv
40.457 156.805 40.457 156.875 40.457 156.93 cv
40.453 156.992 40.441 157.039 40.43 157.074 cv
40.41 157.113 40.391 157.141 40.367 157.156 cv
40.34 157.176 40.309 157.184 40.27 157.184 cv
40.219 157.184 40.148 157.168 40.063 157.137 cv
39.973 157.105 39.867 157.07 39.746 157.027 cv
39.621 156.992 39.473 156.957 39.297 156.922 cv
39.121 156.895 38.918 156.879 38.688 156.875 cv
38.258 156.879 37.891 156.965 37.586 157.137 cv
37.281 157.309 37.031 157.543 36.836 157.836 cv
36.641 158.129 36.496 158.469 36.406 158.852 cv
36.309 159.242 36.254 159.645 36.246 160.062 cv
36.363 159.996 36.5 159.93 36.648 159.859 cv
36.797 159.793 36.957 159.73 37.133 159.672 cv
37.309 159.621 37.496 159.574 37.691 159.539 cv
37.887 159.508 38.098 159.492 38.324 159.488 cv
38.801 159.492 39.203 159.559 39.535 159.684 cv
39.863 159.816 40.129 159.996 40.336 160.227 cv
40.535 160.457 40.68 160.727 40.77 161.039 cv
40.855 161.352 40.902 161.691 40.902 162.059 cv
cp
39.707 162.168 mo
39.707 161.906 39.68 161.664 39.629 161.445 cv
39.574 161.23 39.484 161.047 39.363 160.891 cv
39.238 160.742 39.074 160.625 38.871 160.543 cv
38.66 160.461 38.406 160.418 38.109 160.418 cv
37.938 160.418 37.77 160.434 37.602 160.465 cv
37.43 160.496 37.266 160.539 37.109 160.586 cv
36.949 160.641 36.801 160.703 36.66 160.773 cv
36.516 160.848 36.383 160.922 36.266 161 cv
36.262 161.594 36.301 162.09 36.379 162.484 cv
36.453 162.883 36.563 163.199 36.707 163.437 cv
36.852 163.68 37.031 163.852 37.246 163.953 cv
37.461 164.059 37.711 164.109 38 164.105 cv
38.289 164.109 38.543 164.055 38.758 163.941 cv
38.973 163.836 39.148 163.687 39.293 163.5 cv
39.434 163.316 39.539 163.109 39.605 162.879 cv
39.672 162.648 39.707 162.414 39.707 162.168 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 164.184 mo
43.965 164.512 43.91 164.727 43.805 164.832 cv
43.695 164.937 43.5 164.988 43.219 164.992 cv
42.941 164.988 42.75 164.937 42.648 164.836 cv
42.539 164.73 42.488 164.52 42.492 164.203 cv
42.488 163.879 42.543 163.664 42.652 163.555 cv
42.758 163.449 42.953 163.395 43.238 163.395 cv
43.512 163.395 43.699 163.449 43.809 163.555 cv
43.91 163.66 43.965 163.871 43.965 164.184 cv
cp
f
51.289 162.078 mo
51.289 162.555 51.207 162.977 51.047 163.348 cv
50.887 163.719 50.66 164.031 50.371 164.285 cv
50.074 164.539 49.727 164.734 49.324 164.863 cv
48.918 164.996 48.469 165.059 47.977 165.059 cv
47.699 165.059 47.438 165.039 47.195 165 cv
46.945 164.961 46.727 164.914 46.539 164.859 cv
46.344 164.805 46.188 164.75 46.063 164.691 cv
45.938 164.641 45.859 164.598 45.828 164.562 cv
45.793 164.531 45.77 164.5 45.758 164.473 cv
45.742 164.445 45.727 164.414 45.719 164.371 cv
45.703 164.336 45.695 164.285 45.695 164.223 cv
45.688 164.164 45.688 164.094 45.688 164.012 cv
45.688 163.937 45.691 163.867 45.699 163.805 cv
45.707 163.742 45.719 163.691 45.738 163.652 cv
45.754 163.613 45.773 163.586 45.801 163.566 cv
45.824 163.551 45.855 163.543 45.887 163.539 cv
45.934 163.543 46.004 163.57 46.098 163.625 cv
46.191 163.684 46.32 163.746 46.484 163.812 cv
46.648 163.879 46.848 163.941 47.09 164 cv
47.324 164.059 47.609 164.086 47.945 164.086 cv
48.246 164.086 48.527 164.051 48.785 163.977 cv
49.039 163.906 49.262 163.793 49.449 163.637 cv
49.633 163.484 49.777 163.289 49.883 163.051 cv
49.988 162.816 50.039 162.527 50.043 162.187 cv
50.039 161.906 49.996 161.656 49.906 161.437 cv
49.816 161.219 49.68 161.039 49.496 160.895 cv
49.309 160.754 49.074 160.648 48.793 160.574 cv
48.508 160.504 48.168 160.465 47.781 160.465 cv
47.496 160.465 47.258 160.48 47.059 160.508 cv
46.855 160.539 46.668 160.555 46.496 160.551 cv
46.367 160.555 46.273 160.523 46.223 160.461 cv
46.164 160.402 46.137 160.289 46.141 160.117 cv
46.141 156.504 li
46.137 156.355 46.172 156.246 46.246 156.168 cv
46.313 156.098 46.414 156.059 46.551 156.059 cv
50.48 156.059 li
50.516 156.059 50.551 156.07 50.586 156.09 cv
50.617 156.113 50.645 156.145 50.672 156.184 cv
50.691 156.227 50.707 156.277 50.723 156.34 cv
50.73 156.406 50.738 156.484 50.742 156.566 cv
50.738 156.734 50.715 156.859 50.676 156.949 cv
50.629 157.043 50.57 157.09 50.492 157.086 cv
47.32 157.086 li
47.32 159.574 li
47.473 159.555 47.629 159.543 47.793 159.535 cv
47.949 159.531 48.137 159.527 48.352 159.527 cv
48.836 159.527 49.262 159.59 49.629 159.711 cv
49.992 159.832 50.297 160.004 50.547 160.223 cv
50.789 160.449 50.977 160.715 51.102 161.027 cv
51.227 161.344 51.289 161.695 51.289 162.078 cv
cp
f
34.34 125.199 mo
52.067 125.199 li
52.067 142.289 li
34.34 142.289 li
cp
0 0 0 0 cmyk
ef
40.805 130.187 mo
40.801 130.273 40.797 130.348 40.793 130.41 cv
40.785 130.48 40.777 130.543 40.766 130.602 cv
40.754 130.668 40.738 130.727 40.719 130.781 cv
40.695 130.84 40.672 130.902 40.648 130.961 cv
37.453 138.324 li
37.426 138.383 37.398 138.426 37.367 138.457 cv
37.332 138.492 37.289 138.52 37.234 138.539 cv
37.18 138.559 37.109 138.57 37.031 138.582 cv
36.945 138.586 36.848 138.59 36.73 138.594 cv
36.574 138.59 36.453 138.582 36.367 138.57 cv
36.281 138.555 36.219 138.539 36.18 138.508 cv
36.141 138.48 36.121 138.441 36.129 138.398 cv
36.129 138.355 36.145 138.305 36.176 138.242 cv
39.535 130.715 li
35.277 130.715 li
35.191 130.719 35.125 130.672 35.082 130.578 cv
35.039 130.488 35.02 130.359 35.02 130.195 cv
35.02 130.109 35.023 130.035 35.035 129.969 cv
35.047 129.906 35.063 129.852 35.086 129.809 cv
35.105 129.766 35.133 129.734 35.168 129.711 cv
35.199 129.691 35.238 129.68 35.277 129.68 cv
40.449 129.68 li
40.508 129.68 40.563 129.687 40.613 129.703 cv
40.66 129.719 40.695 129.746 40.723 129.785 cv
40.746 129.824 40.766 129.879 40.781 129.941 cv
40.793 130.008 40.801 130.09 40.805 130.187 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 137.805 mo
43.965 138.133 43.91 138.348 43.805 138.453 cv
43.695 138.559 43.5 138.609 43.219 138.613 cv
42.941 138.609 42.75 138.559 42.648 138.457 cv
42.539 138.352 42.488 138.141 42.492 137.824 cv
42.488 137.5 42.543 137.285 42.652 137.176 cv
42.758 137.07 42.953 137.016 43.238 137.016 cv
43.512 137.016 43.699 137.07 43.809 137.176 cv
43.91 137.281 43.965 137.492 43.965 137.805 cv
cp
f
51.625 134.094 mo
51.621 134.777 51.57 135.398 51.465 135.961 cv
51.355 136.523 51.176 137.008 50.93 137.41 cv
50.676 137.816 50.348 138.129 49.949 138.348 cv
49.543 138.57 49.051 138.68 48.465 138.68 cv
47.906 138.68 47.434 138.582 47.055 138.383 cv
46.672 138.187 46.367 137.895 46.133 137.508 cv
45.898 137.121 45.73 136.648 45.637 136.082 cv
45.535 135.52 45.488 134.871 45.488 134.137 cv
45.488 133.465 45.543 132.844 45.652 132.277 cv
45.762 131.715 45.938 131.23 46.188 130.824 cv
46.43 130.422 46.754 130.109 47.16 129.883 cv
47.559 129.664 48.055 129.551 48.645 129.551 cv
49.203 129.551 49.676 129.652 50.059 129.848 cv
50.441 130.051 50.746 130.344 50.98 130.727 cv
51.211 131.117 51.379 131.59 51.477 132.152 cv
51.574 132.715 51.621 133.363 51.625 134.094 cv
cp
50.418 134.176 mo
50.414 133.734 50.398 133.336 50.371 132.984 cv
50.336 132.633 50.289 132.324 50.23 132.055 cv
50.164 131.785 50.086 131.555 49.988 131.359 cv
49.891 131.168 49.773 131.008 49.637 130.879 cv
49.496 130.754 49.336 130.66 49.164 130.602 cv
48.984 130.547 48.789 130.52 48.574 130.516 cv
48.184 130.52 47.867 130.609 47.629 130.793 cv
47.383 130.977 47.191 131.23 47.055 131.547 cv
46.914 131.867 46.82 132.238 46.77 132.668 cv
46.719 133.098 46.695 133.562 46.695 134.055 cv
46.695 134.719 46.727 135.281 46.797 135.742 cv
46.863 136.211 46.973 136.59 47.125 136.879 cv
47.27 137.176 47.461 137.387 47.691 137.516 cv
47.922 137.652 48.203 137.719 48.535 137.715 cv
48.789 137.719 49.012 137.68 49.207 137.594 cv
49.398 137.516 49.566 137.395 49.707 137.238 cv
49.848 137.086 49.961 136.902 50.055 136.687 cv
50.141 136.473 50.215 136.234 50.273 135.973 cv
50.324 135.715 50.363 135.434 50.387 135.129 cv
50.406 134.824 50.414 134.508 50.418 134.176 cv
cp
f
34.34 98.828 mo
52.067 98.828 li
52.067 115.922 li
34.34 115.922 li
cp
0 0 0 0 cmyk
ef
40.805 103.816 mo
40.801 103.902 40.797 103.977 40.793 104.039 cv
40.785 104.109 40.777 104.172 40.766 104.23 cv
40.754 104.297 40.738 104.355 40.719 104.41 cv
40.695 104.469 40.672 104.531 40.648 104.59 cv
37.453 111.953 li
37.426 112.012 37.398 112.055 37.367 112.086 cv
37.332 112.121 37.289 112.148 37.234 112.168 cv
37.18 112.187 37.109 112.199 37.031 112.211 cv
36.945 112.215 36.848 112.219 36.73 112.223 cv
36.574 112.219 36.453 112.211 36.367 112.199 cv
36.281 112.184 36.219 112.168 36.18 112.137 cv
36.141 112.109 36.121 112.07 36.129 112.027 cv
36.129 111.984 36.145 111.934 36.176 111.871 cv
39.535 104.344 li
35.277 104.344 li
35.191 104.348 35.125 104.301 35.082 104.207 cv
35.039 104.117 35.02 103.988 35.02 103.824 cv
35.02 103.738 35.023 103.664 35.035 103.598 cv
35.047 103.535 35.063 103.48 35.086 103.437 cv
35.105 103.395 35.133 103.363 35.168 103.34 cv
35.199 103.32 35.238 103.309 35.277 103.309 cv
40.449 103.309 li
40.508 103.309 40.563 103.316 40.613 103.332 cv
40.66 103.348 40.695 103.375 40.723 103.414 cv
40.746 103.453 40.766 103.508 40.781 103.57 cv
40.793 103.637 40.801 103.719 40.805 103.816 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 111.434 mo
43.965 111.762 43.91 111.977 43.805 112.082 cv
43.695 112.187 43.5 112.238 43.219 112.242 cv
42.941 112.238 42.75 112.187 42.648 112.086 cv
42.539 111.98 42.488 111.77 42.492 111.453 cv
42.488 111.129 42.543 110.914 42.652 110.805 cv
42.758 110.699 42.953 110.645 43.238 110.645 cv
43.512 110.645 43.699 110.699 43.809 110.805 cv
43.91 110.91 43.965 111.121 43.965 111.434 cv
cp
f
51.289 109.328 mo
51.289 109.805 51.207 110.227 51.047 110.598 cv
50.887 110.969 50.66 111.281 50.371 111.535 cv
50.074 111.789 49.727 111.984 49.324 112.113 cv
48.918 112.246 48.469 112.309 47.977 112.309 cv
47.699 112.309 47.438 112.289 47.195 112.25 cv
46.945 112.211 46.727 112.164 46.539 112.109 cv
46.344 112.055 46.188 112 46.063 111.941 cv
45.938 111.891 45.859 111.848 45.828 111.812 cv
45.793 111.781 45.77 111.75 45.758 111.723 cv
45.742 111.695 45.727 111.664 45.719 111.621 cv
45.703 111.586 45.695 111.535 45.695 111.473 cv
45.688 111.414 45.688 111.344 45.688 111.262 cv
45.688 111.187 45.691 111.117 45.699 111.055 cv
45.707 110.992 45.719 110.941 45.738 110.902 cv
45.754 110.863 45.773 110.836 45.801 110.816 cv
45.824 110.801 45.855 110.793 45.887 110.789 cv
45.934 110.793 46.004 110.82 46.098 110.875 cv
46.191 110.934 46.32 110.996 46.484 111.062 cv
46.648 111.129 46.848 111.191 47.09 111.25 cv
47.324 111.309 47.609 111.336 47.945 111.336 cv
48.246 111.336 48.527 111.301 48.785 111.227 cv
49.039 111.156 49.262 111.043 49.449 110.887 cv
49.633 110.734 49.777 110.539 49.883 110.301 cv
49.988 110.066 50.039 109.777 50.043 109.437 cv
50.039 109.156 49.996 108.906 49.906 108.687 cv
49.816 108.469 49.68 108.289 49.496 108.145 cv
49.309 108.004 49.074 107.898 48.793 107.824 cv
48.508 107.754 48.168 107.715 47.781 107.715 cv
47.496 107.715 47.258 107.73 47.059 107.758 cv
46.855 107.789 46.668 107.805 46.496 107.801 cv
46.367 107.805 46.273 107.773 46.223 107.711 cv
46.164 107.652 46.137 107.539 46.141 107.367 cv
46.141 103.754 li
46.137 103.605 46.172 103.496 46.246 103.418 cv
46.313 103.348 46.414 103.309 46.551 103.309 cv
50.48 103.309 li
50.516 103.309 50.551 103.32 50.586 103.34 cv
50.617 103.363 50.645 103.395 50.672 103.434 cv
50.691 103.477 50.707 103.527 50.723 103.59 cv
50.73 103.656 50.738 103.734 50.742 103.816 cv
50.738 103.984 50.715 104.109 50.676 104.199 cv
50.629 104.293 50.57 104.34 50.492 104.336 cv
47.32 104.336 li
47.32 106.824 li
47.473 106.805 47.629 106.793 47.793 106.785 cv
47.949 106.781 48.137 106.777 48.352 106.777 cv
48.836 106.777 49.262 106.84 49.629 106.961 cv
49.992 107.082 50.297 107.254 50.547 107.473 cv
50.789 107.699 50.977 107.965 51.102 108.277 cv
51.227 108.594 51.289 108.945 51.289 109.328 cv
cp
f
34.34 72.469 mo
52.067 72.469 li
52.067 89.559 li
34.34 89.559 li
cp
0 0 0 0 cmyk
ef
40.879 83.523 mo
40.879 83.91 40.809 84.254 40.672 84.551 cv
40.535 84.855 40.34 85.105 40.082 85.309 cv
39.824 85.516 39.504 85.672 39.125 85.773 cv
38.742 85.879 38.309 85.93 37.824 85.93 cv
37.363 85.93 36.953 85.883 36.594 85.789 cv
36.23 85.695 35.926 85.555 35.676 85.363 cv
35.426 85.18 35.234 84.949 35.102 84.672 cv
34.969 84.398 34.902 84.086 34.902 83.73 cv
34.902 83.457 34.945 83.199 35.039 82.965 cv
35.125 82.73 35.258 82.516 35.434 82.32 cv
35.602 82.125 35.813 81.941 36.066 81.766 cv
36.316 81.598 36.602 81.434 36.918 81.277 cv
36.645 81.137 36.402 80.988 36.191 80.828 cv
35.98 80.672 35.801 80.5 35.656 80.312 cv
35.508 80.129 35.398 79.934 35.324 79.723 cv
35.246 79.516 35.207 79.285 35.211 79.035 cv
35.207 78.727 35.262 78.434 35.379 78.16 cv
35.488 77.891 35.66 77.656 35.887 77.453 cv
36.113 77.254 36.398 77.094 36.75 76.977 cv
37.094 76.859 37.504 76.801 37.973 76.801 cv
38.418 76.801 38.805 76.855 39.133 76.961 cv
39.461 77.07 39.73 77.215 39.941 77.398 cv
40.152 77.586 40.309 77.805 40.414 78.055 cv
40.512 78.305 40.563 78.574 40.566 78.863 cv
40.563 79.098 40.523 79.324 40.453 79.535 cv
40.375 79.754 40.266 79.957 40.117 80.145 cv
39.969 80.34 39.789 80.52 39.578 80.684 cv
39.367 80.855 39.125 81.012 38.852 81.152 cv
39.172 81.316 39.457 81.48 39.715 81.648 cv
39.965 81.816 40.18 81.996 40.355 82.191 cv
40.523 82.387 40.652 82.594 40.746 82.809 cv
40.832 83.027 40.879 83.266 40.879 83.523 cv
cp
39.398 78.973 mo
39.395 78.785 39.363 78.609 39.297 78.453 cv
39.23 78.297 39.133 78.164 39.008 78.055 cv
38.879 77.945 38.719 77.863 38.531 77.805 cv
38.336 77.75 38.121 77.723 37.883 77.719 cv
37.387 77.723 37.012 77.832 36.762 78.055 cv
36.504 78.281 36.379 78.59 36.383 78.973 cv
36.379 79.152 36.41 79.316 36.473 79.469 cv
36.535 79.625 36.629 79.77 36.762 79.906 cv
36.887 80.043 37.051 80.176 37.254 80.305 cv
37.449 80.437 37.688 80.574 37.965 80.715 cv
38.426 80.48 38.781 80.219 39.027 79.926 cv
39.273 79.641 39.395 79.324 39.398 78.973 cv
cp
39.688 83.648 mo
39.684 83.441 39.645 83.25 39.57 83.078 cv
39.488 82.91 39.371 82.75 39.215 82.598 cv
39.059 82.449 38.859 82.305 38.625 82.164 cv
38.387 82.027 38.117 81.883 37.809 81.73 cv
37.52 81.875 37.266 82.016 37.051 82.156 cv
36.832 82.297 36.652 82.445 36.516 82.594 cv
36.375 82.75 36.27 82.906 36.199 83.07 cv
36.125 83.238 36.09 83.422 36.094 83.621 cv
36.09 84.066 36.242 84.41 36.551 84.648 cv
36.852 84.895 37.305 85.016 37.91 85.012 cv
38.492 85.016 38.938 84.895 39.238 84.645 cv
39.535 84.402 39.684 84.07 39.688 83.648 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 85.055 mo
43.965 85.383 43.91 85.598 43.805 85.703 cv
43.695 85.809 43.5 85.859 43.219 85.863 cv
42.941 85.859 42.75 85.809 42.648 85.707 cv
42.539 85.602 42.488 85.391 42.492 85.074 cv
42.488 84.75 42.543 84.535 42.652 84.426 cv
42.758 84.32 42.953 84.266 43.238 84.266 cv
43.512 84.266 43.699 84.32 43.809 84.426 cv
43.91 84.531 43.965 84.742 43.965 85.055 cv
cp
f
51.625 81.344 mo
51.621 82.027 51.57 82.648 51.465 83.211 cv
51.355 83.773 51.176 84.258 50.93 84.66 cv
50.676 85.066 50.348 85.379 49.949 85.598 cv
49.543 85.82 49.051 85.93 48.465 85.93 cv
47.906 85.93 47.434 85.832 47.055 85.633 cv
46.672 85.437 46.367 85.145 46.133 84.758 cv
45.898 84.371 45.73 83.898 45.637 83.332 cv
45.535 82.77 45.488 82.121 45.488 81.387 cv
45.488 80.715 45.543 80.094 45.652 79.527 cv
45.762 78.965 45.938 78.48 46.188 78.074 cv
46.43 77.672 46.754 77.359 47.16 77.133 cv
47.559 76.914 48.055 76.801 48.645 76.801 cv
49.203 76.801 49.676 76.902 50.059 77.098 cv
50.441 77.301 50.746 77.594 50.98 77.977 cv
51.211 78.367 51.379 78.84 51.477 79.402 cv
51.574 79.965 51.621 80.613 51.625 81.344 cv
cp
50.418 81.426 mo
50.414 80.984 50.398 80.586 50.371 80.234 cv
50.336 79.883 50.289 79.574 50.23 79.305 cv
50.164 79.035 50.086 78.805 49.988 78.609 cv
49.891 78.418 49.773 78.258 49.637 78.129 cv
49.496 78.004 49.336 77.91 49.164 77.852 cv
48.984 77.797 48.789 77.77 48.574 77.766 cv
48.184 77.77 47.867 77.859 47.629 78.043 cv
47.383 78.227 47.191 78.48 47.055 78.797 cv
46.914 79.117 46.82 79.488 46.77 79.918 cv
46.719 80.348 46.695 80.812 46.695 81.305 cv
46.695 81.969 46.727 82.531 46.797 82.992 cv
46.863 83.461 46.973 83.84 47.125 84.129 cv
47.27 84.426 47.461 84.637 47.691 84.766 cv
47.922 84.902 48.203 84.969 48.535 84.965 cv
48.789 84.969 49.012 84.93 49.207 84.844 cv
49.398 84.766 49.566 84.645 49.707 84.488 cv
49.848 84.336 49.961 84.152 50.055 83.937 cv
50.141 83.723 50.215 83.484 50.273 83.223 cv
50.324 82.965 50.363 82.684 50.387 82.379 cv
50.406 82.074 50.414 81.758 50.418 81.426 cv
cp
f
34.34 46.102 mo
52.067 46.102 li
52.067 63.192 li
34.34 63.192 li
cp
0 0 0 0 cmyk
ef
40.879 57.145 mo
40.879 57.531 40.809 57.875 40.672 58.172 cv
40.535 58.477 40.34 58.727 40.082 58.93 cv
39.824 59.137 39.504 59.293 39.125 59.395 cv
38.742 59.5 38.309 59.551 37.824 59.551 cv
37.363 59.551 36.953 59.504 36.594 59.41 cv
36.23 59.316 35.926 59.176 35.676 58.984 cv
35.426 58.801 35.234 58.57 35.102 58.293 cv
34.969 58.02 34.902 57.707 34.902 57.352 cv
34.902 57.078 34.945 56.82 35.039 56.586 cv
35.125 56.352 35.258 56.137 35.434 55.941 cv
35.602 55.746 35.813 55.562 36.066 55.387 cv
36.316 55.219 36.602 55.055 36.918 54.898 cv
36.645 54.758 36.402 54.609 36.191 54.449 cv
35.98 54.293 35.801 54.121 35.656 53.934 cv
35.508 53.75 35.398 53.555 35.324 53.344 cv
35.246 53.137 35.207 52.906 35.211 52.656 cv
35.207 52.348 35.262 52.055 35.379 51.781 cv
35.488 51.512 35.66 51.277 35.887 51.074 cv
36.113 50.875 36.398 50.715 36.75 50.598 cv
37.094 50.48 37.504 50.422 37.973 50.422 cv
38.418 50.422 38.805 50.477 39.133 50.582 cv
39.461 50.691 39.73 50.836 39.941 51.02 cv
40.152 51.207 40.309 51.426 40.414 51.676 cv
40.512 51.926 40.563 52.195 40.566 52.484 cv
40.563 52.719 40.523 52.945 40.453 53.156 cv
40.375 53.375 40.266 53.578 40.117 53.766 cv
39.969 53.961 39.789 54.141 39.578 54.305 cv
39.367 54.477 39.125 54.633 38.852 54.773 cv
39.172 54.937 39.457 55.102 39.715 55.27 cv
39.965 55.437 40.18 55.617 40.355 55.812 cv
40.523 56.008 40.652 56.215 40.746 56.43 cv
40.832 56.648 40.879 56.887 40.879 57.145 cv
cp
39.398 52.594 mo
39.395 52.406 39.363 52.23 39.297 52.074 cv
39.23 51.918 39.133 51.785 39.008 51.676 cv
38.879 51.566 38.719 51.484 38.531 51.426 cv
38.336 51.371 38.121 51.344 37.883 51.34 cv
37.387 51.344 37.012 51.453 36.762 51.676 cv
36.504 51.902 36.379 52.211 36.383 52.594 cv
36.379 52.773 36.41 52.937 36.473 53.09 cv
36.535 53.246 36.629 53.391 36.762 53.527 cv
36.887 53.664 37.051 53.797 37.254 53.926 cv
37.449 54.059 37.688 54.195 37.965 54.336 cv
38.426 54.102 38.781 53.84 39.027 53.547 cv
39.273 53.262 39.395 52.945 39.398 52.594 cv
cp
39.688 57.27 mo
39.684 57.062 39.645 56.871 39.57 56.699 cv
39.488 56.531 39.371 56.371 39.215 56.219 cv
39.059 56.07 38.859 55.926 38.625 55.785 cv
38.387 55.648 38.117 55.504 37.809 55.352 cv
37.52 55.496 37.266 55.637 37.051 55.777 cv
36.832 55.918 36.652 56.066 36.516 56.215 cv
36.375 56.371 36.27 56.527 36.199 56.691 cv
36.125 56.859 36.09 57.043 36.094 57.242 cv
36.09 57.687 36.242 58.031 36.551 58.27 cv
36.852 58.516 37.305 58.637 37.91 58.633 cv
38.492 58.637 38.938 58.516 39.238 58.266 cv
39.535 58.023 39.684 57.691 39.688 57.27 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 58.676 mo
43.965 59.004 43.91 59.219 43.805 59.324 cv
43.695 59.43 43.5 59.48 43.219 59.484 cv
42.941 59.48 42.75 59.43 42.648 59.328 cv
42.539 59.223 42.488 59.012 42.492 58.695 cv
42.488 58.371 42.543 58.156 42.652 58.047 cv
42.758 57.941 42.953 57.887 43.238 57.887 cv
43.512 57.887 43.699 57.941 43.809 58.047 cv
43.91 58.152 43.965 58.363 43.965 58.676 cv
cp
f
51.289 56.57 mo
51.289 57.047 51.207 57.469 51.047 57.84 cv
50.887 58.211 50.66 58.523 50.371 58.777 cv
50.074 59.031 49.727 59.227 49.324 59.355 cv
48.918 59.488 48.469 59.551 47.977 59.551 cv
47.699 59.551 47.438 59.531 47.195 59.492 cv
46.945 59.453 46.727 59.406 46.539 59.352 cv
46.344 59.297 46.188 59.242 46.063 59.184 cv
45.938 59.133 45.859 59.09 45.828 59.055 cv
45.793 59.023 45.77 58.992 45.758 58.965 cv
45.742 58.937 45.727 58.906 45.719 58.863 cv
45.703 58.828 45.695 58.777 45.695 58.715 cv
45.688 58.656 45.688 58.586 45.688 58.504 cv
45.688 58.43 45.691 58.359 45.699 58.297 cv
45.707 58.234 45.719 58.184 45.738 58.145 cv
45.754 58.105 45.773 58.078 45.801 58.059 cv
45.824 58.043 45.855 58.035 45.887 58.031 cv
45.934 58.035 46.004 58.062 46.098 58.117 cv
46.191 58.176 46.32 58.238 46.484 58.305 cv
46.648 58.371 46.848 58.434 47.09 58.492 cv
47.324 58.551 47.609 58.578 47.945 58.578 cv
48.246 58.578 48.527 58.543 48.785 58.469 cv
49.039 58.398 49.262 58.285 49.449 58.129 cv
49.633 57.977 49.777 57.781 49.883 57.543 cv
49.988 57.309 50.039 57.02 50.043 56.68 cv
50.039 56.398 49.996 56.148 49.906 55.93 cv
49.816 55.711 49.68 55.531 49.496 55.387 cv
49.309 55.246 49.074 55.141 48.793 55.066 cv
48.508 54.996 48.168 54.957 47.781 54.957 cv
47.496 54.957 47.258 54.973 47.059 55 cv
46.855 55.031 46.668 55.047 46.496 55.043 cv
46.367 55.047 46.273 55.016 46.223 54.953 cv
46.164 54.895 46.137 54.781 46.141 54.609 cv
46.141 50.996 li
46.137 50.848 46.172 50.738 46.246 50.66 cv
46.313 50.59 46.414 50.551 46.551 50.551 cv
50.48 50.551 li
50.516 50.551 50.551 50.562 50.586 50.582 cv
50.617 50.605 50.645 50.637 50.672 50.676 cv
50.691 50.719 50.707 50.77 50.723 50.832 cv
50.73 50.898 50.738 50.977 50.742 51.059 cv
50.738 51.227 50.715 51.352 50.676 51.441 cv
50.629 51.535 50.57 51.582 50.492 51.578 cv
47.32 51.578 li
47.32 54.066 li
47.473 54.047 47.629 54.035 47.793 54.027 cv
47.949 54.023 48.137 54.02 48.352 54.02 cv
48.836 54.02 49.262 54.082 49.629 54.203 cv
49.992 54.324 50.297 54.496 50.547 54.715 cv
50.789 54.941 50.977 55.207 51.102 55.52 cv
51.227 55.836 51.289 56.187 51.289 56.57 cv
cp
f
34.34 19.73 mo
52.067 19.73 li
52.067 36.82 li
34.34 36.82 li
cp
0 0 0 0 cmyk
ef
40.742 28.266 mo
40.738 28.652 40.715 29.039 40.672 29.43 cv
40.625 29.824 40.547 30.203 40.441 30.566 cv
40.328 30.93 40.184 31.27 40 31.586 cv
39.813 31.906 39.578 32.187 39.301 32.422 cv
39.016 32.664 38.68 32.848 38.297 32.98 cv
37.906 33.113 37.461 33.18 36.953 33.18 cv
36.754 33.18 36.563 33.164 36.379 33.141 cv
36.191 33.113 36.023 33.086 35.879 33.051 cv
35.727 33.016 35.602 32.977 35.504 32.934 cv
35.402 32.895 35.328 32.855 35.285 32.812 cv
35.238 32.773 35.207 32.719 35.188 32.645 cv
35.164 32.574 35.152 32.477 35.156 32.359 cv
35.152 32.258 35.156 32.18 35.164 32.121 cv
35.168 32.062 35.18 32.016 35.195 31.984 cv
35.211 31.953 35.23 31.934 35.254 31.918 cv
35.277 31.91 35.309 31.902 35.348 31.898 cv
35.395 31.902 35.465 31.918 35.559 31.949 cv
35.648 31.984 35.762 32.023 35.906 32.062 cv
36.043 32.105 36.207 32.145 36.395 32.176 cv
36.578 32.215 36.789 32.23 37.027 32.227 cv
37.469 32.23 37.848 32.145 38.168 31.973 cv
38.48 31.801 38.742 31.574 38.945 31.285 cv
39.148 31 39.297 30.664 39.398 30.281 cv
39.496 29.902 39.551 29.504 39.563 29.082 cv
39.316 29.227 39.027 29.352 38.691 29.457 cv
38.352 29.57 37.965 29.625 37.527 29.621 cv
37.035 29.625 36.621 29.559 36.285 29.422 cv
35.949 29.289 35.676 29.105 35.473 28.871 cv
35.266 28.641 35.121 28.363 35.035 28.039 cv
34.945 27.723 34.902 27.371 34.902 26.992 cv
34.902 26.602 34.957 26.23 35.074 25.871 cv
35.184 25.52 35.363 25.207 35.609 24.937 cv
35.848 24.668 36.156 24.453 36.535 24.293 cv
36.906 24.133 37.355 24.051 37.879 24.051 cv
38.246 24.051 38.57 24.098 38.859 24.191 cv
39.141 24.285 39.391 24.422 39.605 24.598 cv
39.813 24.773 39.992 24.984 40.141 25.234 cv
40.285 25.484 40.402 25.766 40.492 26.078 cv
40.578 26.395 40.641 26.738 40.684 27.105 cv
40.719 27.477 40.738 27.863 40.742 28.266 cv
cp
39.543 28.137 mo
39.543 27.555 39.504 27.062 39.426 26.66 cv
39.348 26.262 39.23 25.937 39.082 25.687 cv
38.93 25.441 38.746 25.262 38.527 25.152 cv
38.305 25.043 38.051 24.988 37.77 24.988 cv
37.465 24.988 37.211 25.043 37.004 25.152 cv
36.793 25.262 36.621 25.406 36.488 25.582 cv
36.352 25.766 36.25 25.969 36.188 26.195 cv
36.121 26.426 36.09 26.664 36.094 26.902 cv
36.09 27.176 36.121 27.422 36.18 27.641 cv
36.234 27.867 36.324 28.055 36.457 28.211 cv
36.582 28.367 36.75 28.488 36.957 28.574 cv
37.16 28.66 37.414 28.703 37.719 28.699 cv
38.059 28.703 38.391 28.652 38.715 28.547 cv
39.031 28.445 39.309 28.309 39.543 28.137 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.965 32.305 mo
43.965 32.633 43.91 32.848 43.805 32.953 cv
43.695 33.059 43.5 33.109 43.219 33.113 cv
42.941 33.109 42.75 33.059 42.648 32.957 cv
42.539 32.852 42.488 32.641 42.492 32.324 cv
42.488 32 42.543 31.785 42.652 31.676 cv
42.758 31.57 42.953 31.516 43.238 31.516 cv
43.512 31.516 43.699 31.57 43.809 31.676 cv
43.91 31.781 43.965 31.992 43.965 32.305 cv
cp
f
51.625 28.594 mo
51.621 29.277 51.57 29.898 51.465 30.461 cv
51.355 31.023 51.176 31.508 50.93 31.91 cv
50.676 32.316 50.348 32.629 49.949 32.848 cv
49.543 33.07 49.051 33.18 48.465 33.18 cv
47.906 33.18 47.434 33.082 47.055 32.883 cv
46.672 32.687 46.367 32.395 46.133 32.008 cv
45.898 31.621 45.73 31.148 45.637 30.582 cv
45.535 30.02 45.488 29.371 45.488 28.637 cv
45.488 27.965 45.543 27.344 45.652 26.777 cv
45.762 26.215 45.938 25.73 46.188 25.324 cv
46.43 24.922 46.754 24.609 47.16 24.383 cv
47.559 24.164 48.055 24.051 48.645 24.051 cv
49.203 24.051 49.676 24.152 50.059 24.348 cv
50.441 24.551 50.746 24.844 50.98 25.227 cv
51.211 25.617 51.379 26.09 51.477 26.652 cv
51.574 27.215 51.621 27.863 51.625 28.594 cv
cp
50.418 28.676 mo
50.414 28.234 50.398 27.836 50.371 27.484 cv
50.336 27.133 50.289 26.824 50.23 26.555 cv
50.164 26.285 50.086 26.055 49.988 25.859 cv
49.891 25.668 49.773 25.508 49.637 25.379 cv
49.496 25.254 49.336 25.16 49.164 25.102 cv
48.984 25.047 48.789 25.02 48.574 25.016 cv
48.184 25.02 47.867 25.109 47.629 25.293 cv
47.383 25.477 47.191 25.73 47.055 26.047 cv
46.914 26.367 46.82 26.738 46.77 27.168 cv
46.719 27.598 46.695 28.062 46.695 28.555 cv
46.695 29.219 46.727 29.781 46.797 30.242 cv
46.863 30.711 46.973 31.09 47.125 31.379 cv
47.27 31.676 47.461 31.887 47.691 32.016 cv
47.922 32.152 48.203 32.219 48.535 32.215 cv
48.789 32.219 49.012 32.18 49.207 32.094 cv
49.398 32.016 49.566 31.895 49.707 31.738 cv
49.848 31.586 49.961 31.402 50.055 31.187 cv
50.141 30.973 50.215 30.734 50.273 30.473 cv
50.324 30.215 50.363 29.934 50.387 29.629 cv
50.406 29.324 50.414 29.008 50.418 28.676 cv
cp
f
67.895 525.52 mo
67.891 525.609 67.883 525.68 67.871 525.738 cv
67.855 525.801 67.836 525.852 67.816 525.883 cv
67.793 525.922 67.77 525.945 67.738 525.961 cv
67.707 525.977 67.676 525.984 67.648 525.984 cv
63.012 525.984 li
62.977 525.984 62.949 525.977 62.922 525.961 cv
62.895 525.945 62.867 525.922 62.844 525.883 cv
62.816 525.852 62.797 525.801 62.785 525.738 cv
62.77 525.68 62.762 525.609 62.766 525.52 cv
62.762 525.441 62.77 525.367 62.785 525.305 cv
62.797 525.246 62.813 525.199 62.836 525.16 cv
62.852 525.125 62.879 525.094 62.91 525.07 cv
62.941 525.051 62.973 525.043 63.012 525.039 cv
64.863 525.039 li
64.863 518.293 li
63.148 519.312 li
63.059 519.363 62.988 519.391 62.941 519.398 cv
62.887 519.406 62.844 519.398 62.813 519.367 cv
62.777 519.34 62.758 519.289 62.746 519.219 cv
62.734 519.152 62.727 519.066 62.73 518.957 cv
62.727 518.883 62.73 518.816 62.742 518.758 cv
62.746 518.707 62.758 518.66 62.773 518.621 cv
62.785 518.586 62.805 518.555 62.828 518.527 cv
62.852 518.5 62.883 518.473 62.93 518.445 cv
64.973 517.133 li
64.988 517.121 65.008 517.109 65.039 517.102 cv
65.063 517.094 65.098 517.086 65.145 517.074 cv
65.184 517.066 65.234 517.059 65.289 517.055 cv
65.344 517.055 65.41 517.055 65.496 517.051 cv
65.602 517.055 65.695 517.059 65.77 517.066 cv
65.84 517.074 65.895 517.09 65.941 517.105 cv
65.98 517.125 66.008 517.145 66.023 517.168 cv
66.031 517.195 66.039 517.219 66.043 517.242 cv
66.043 525.039 li
67.648 525.039 li
67.684 525.043 67.719 525.051 67.75 525.07 cv
67.781 525.094 67.805 525.125 67.828 525.16 cv
67.844 525.199 67.859 525.246 67.875 525.305 cv
67.883 525.367 67.891 525.441 67.895 525.52 cv
cp
f
139.156 525.477 mo
139.152 525.562 139.148 525.637 139.137 525.699 cv
139.125 525.766 139.109 525.82 139.09 525.859 cv
139.066 525.906 139.039 525.937 139.008 525.953 cv
138.973 525.977 138.934 525.984 138.895 525.984 cv
133.992 525.984 li
133.93 525.984 133.871 525.977 133.824 525.961 cv
133.773 525.945 133.734 525.922 133.699 525.883 cv
133.664 525.852 133.637 525.797 133.625 525.727 cv
133.605 525.656 133.598 525.57 133.602 525.469 cv
133.598 525.379 133.602 525.301 133.609 525.23 cv
133.613 525.164 133.629 525.105 133.656 525.051 cv
133.68 525 133.711 524.945 133.746 524.891 cv
133.781 524.84 133.824 524.785 133.883 524.723 cv
135.656 522.898 li
136.066 522.48 136.395 522.105 136.645 521.77 cv
136.891 521.441 137.082 521.137 137.215 520.859 cv
137.348 520.586 137.434 520.336 137.48 520.109 cv
137.52 519.887 137.543 519.676 137.543 519.48 cv
137.543 519.285 137.508 519.102 137.441 518.922 cv
137.375 518.75 137.281 518.594 137.156 518.457 cv
137.031 518.328 136.875 518.223 136.688 518.141 cv
136.5 518.066 136.281 518.027 136.035 518.023 cv
135.746 518.027 135.488 518.066 135.262 518.141 cv
135.031 518.223 134.832 518.309 134.66 518.395 cv
134.488 518.488 134.344 518.57 134.227 518.648 cv
134.109 518.727 134.023 518.766 133.973 518.766 cv
133.938 518.766 133.906 518.758 133.883 518.738 cv
133.852 518.723 133.832 518.691 133.816 518.648 cv
133.801 518.609 133.785 518.555 133.777 518.484 cv
133.766 518.418 133.762 518.336 133.766 518.238 cv
133.762 518.172 133.766 518.113 133.773 518.062 cv
133.777 518.012 133.785 517.969 133.797 517.93 cv
133.805 517.895 133.82 517.859 133.84 517.828 cv
133.859 517.797 133.895 517.758 133.953 517.707 cv
134.004 517.66 134.098 517.594 134.234 517.512 cv
134.367 517.43 134.539 517.352 134.742 517.27 cv
134.945 517.191 135.168 517.121 135.414 517.066 cv
135.656 517.012 135.914 516.984 136.188 516.984 cv
136.613 516.984 136.988 517.047 137.313 517.168 cv
137.633 517.289 137.898 517.453 138.113 517.664 cv
138.324 517.875 138.484 518.121 138.59 518.395 cv
138.695 518.676 138.75 518.973 138.75 519.285 cv
138.75 519.574 138.723 519.855 138.672 520.133 cv
138.621 520.418 138.516 520.723 138.355 521.047 cv
138.191 521.375 137.957 521.738 137.652 522.137 cv
137.344 522.539 136.938 523 136.434 523.516 cv
135.027 524.984 li
138.887 524.984 li
138.918 524.988 138.953 525 138.992 525.016 cv
139.023 525.039 139.055 525.07 139.082 525.109 cv
139.105 525.152 139.125 525.203 139.137 525.262 cv
139.148 525.328 139.152 525.398 139.156 525.477 cv
cp
f
210.813 523.461 mo
210.809 523.613 210.785 523.734 210.742 523.82 cv
210.695 523.91 210.633 523.953 210.551 523.949 cv
209.551 523.949 li
209.551 525.812 li
209.551 525.852 209.539 525.883 209.523 525.906 cv
209.5 525.934 209.469 525.953 209.426 525.973 cv
209.375 525.988 209.313 526 209.242 526.012 cv
209.164 526.02 209.07 526.023 208.953 526.027 cv
208.836 526.023 208.738 526.02 208.668 526.012 cv
208.59 526 208.531 525.988 208.488 525.973 cv
208.441 525.953 208.41 525.934 208.395 525.906 cv
208.375 525.883 208.367 525.852 208.371 525.812 cv
208.371 523.949 li
204.742 523.949 li
204.684 523.953 204.641 523.945 204.605 523.93 cv
204.57 523.918 204.535 523.891 204.508 523.852 cv
204.477 523.816 204.457 523.766 204.445 523.695 cv
204.434 523.629 204.43 523.539 204.43 523.426 cv
204.43 523.344 204.43 523.266 204.438 523.195 cv
204.438 523.125 204.449 523.062 204.465 523.008 cv
204.477 522.953 204.492 522.898 204.52 522.844 cv
204.539 522.789 204.566 522.734 204.602 522.672 cv
207.762 517.285 li
207.781 517.25 207.816 517.219 207.863 517.191 cv
207.906 517.164 207.961 517.141 208.035 517.121 cv
208.102 517.105 208.188 517.094 208.293 517.082 cv
208.395 517.078 208.516 517.074 208.656 517.07 cv
208.805 517.074 208.941 517.078 209.059 517.09 cv
209.172 517.102 209.262 517.117 209.336 517.133 cv
209.402 517.152 209.457 517.176 209.496 517.207 cv
209.531 517.238 209.551 517.273 209.551 517.312 cv
209.551 522.977 li
210.551 522.977 li
210.625 522.98 210.688 523.02 210.738 523.098 cv
210.785 523.18 210.809 523.301 210.813 523.461 cv
cp
208.371 518.109 mo
208.359 518.109 li
205.508 522.977 li
208.371 522.977 li
cp
f
281.941 523.113 mo
281.941 523.504 281.879 523.883 281.762 524.242 cv
281.637 524.609 281.453 524.926 281.211 525.199 cv
280.961 525.477 280.648 525.699 280.273 525.863 cv
279.891 526.031 279.445 526.113 278.93 526.113 cv
278.559 526.113 278.23 526.07 277.949 525.977 cv
277.664 525.891 277.418 525.758 277.207 525.586 cv
276.996 525.418 276.82 525.211 276.684 524.965 cv
276.543 524.719 276.43 524.437 276.348 524.121 cv
276.262 523.809 276.203 523.465 276.168 523.086 cv
276.129 522.715 276.109 522.312 276.113 521.879 cv
276.109 521.5 276.129 521.117 276.172 520.727 cv
276.211 520.344 276.285 519.969 276.391 519.602 cv
276.496 519.242 276.641 518.902 276.82 518.586 cv
277 518.27 277.227 517.992 277.5 517.758 cv
277.773 517.523 278.098 517.336 278.477 517.195 cv
278.855 517.059 279.297 516.992 279.801 516.988 cv
279.969 516.992 280.141 517 280.313 517.02 cv
280.484 517.043 280.645 517.074 280.793 517.105 cv
280.941 517.145 281.063 517.18 281.164 517.219 cv
281.262 517.258 281.328 517.293 281.363 517.316 cv
281.391 517.344 281.414 517.371 281.434 517.398 cv
281.449 517.43 281.465 517.461 281.473 517.496 cv
281.48 517.531 281.484 517.57 281.492 517.613 cv
281.492 517.656 281.496 517.711 281.5 517.773 cv
281.496 517.859 281.496 517.93 281.496 517.984 cv
281.492 518.047 281.48 518.094 281.469 518.129 cv
281.449 518.168 281.43 518.195 281.406 518.211 cv
281.379 518.23 281.348 518.238 281.309 518.238 cv
281.258 518.238 281.188 518.223 281.102 518.191 cv
281.012 518.16 280.906 518.125 280.785 518.082 cv
280.66 518.047 280.512 518.012 280.336 517.977 cv
280.16 517.949 279.957 517.934 279.727 517.93 cv
279.297 517.934 278.93 518.02 278.625 518.191 cv
278.32 518.363 278.07 518.598 277.875 518.891 cv
277.68 519.184 277.535 519.523 277.445 519.906 cv
277.348 520.297 277.293 520.699 277.285 521.117 cv
277.402 521.051 277.539 520.984 277.688 520.914 cv
277.836 520.848 277.996 520.785 278.172 520.727 cv
278.348 520.676 278.535 520.629 278.73 520.594 cv
278.926 520.562 279.137 520.547 279.363 520.543 cv
279.84 520.547 280.242 520.613 280.574 520.738 cv
280.902 520.871 281.168 521.051 281.375 521.281 cv
281.574 521.512 281.719 521.781 281.809 522.094 cv
281.895 522.406 281.941 522.746 281.941 523.113 cv
cp
280.746 523.223 mo
280.746 522.961 280.719 522.719 280.668 522.5 cv
280.613 522.285 280.523 522.102 280.402 521.945 cv
280.277 521.797 280.113 521.68 279.91 521.598 cv
279.699 521.516 279.445 521.473 279.148 521.473 cv
278.977 521.473 278.809 521.488 278.641 521.52 cv
278.469 521.551 278.305 521.594 278.148 521.641 cv
277.988 521.695 277.84 521.758 277.699 521.828 cv
277.555 521.902 277.422 521.977 277.305 522.055 cv
277.301 522.648 277.34 523.145 277.418 523.539 cv
277.492 523.937 277.602 524.254 277.746 524.492 cv
277.891 524.734 278.07 524.906 278.285 525.008 cv
278.5 525.113 278.75 525.164 279.039 525.16 cv
279.328 525.164 279.582 525.109 279.797 524.996 cv
280.012 524.891 280.188 524.742 280.332 524.555 cv
280.473 524.371 280.578 524.164 280.645 523.934 cv
280.711 523.703 280.746 523.469 280.746 523.223 cv
cp
f
353.199 523.707 mo
353.199 524.094 353.129 524.437 352.992 524.734 cv
352.855 525.039 352.66 525.289 352.402 525.492 cv
352.145 525.699 351.824 525.855 351.445 525.957 cv
351.063 526.062 350.629 526.113 350.145 526.113 cv
349.684 526.113 349.273 526.066 348.914 525.973 cv
348.551 525.879 348.246 525.738 347.996 525.547 cv
347.746 525.363 347.555 525.133 347.422 524.855 cv
347.289 524.582 347.223 524.27 347.223 523.914 cv
347.223 523.641 347.266 523.383 347.359 523.148 cv
347.445 522.914 347.578 522.699 347.754 522.504 cv
347.922 522.309 348.133 522.125 348.387 521.949 cv
348.637 521.781 348.922 521.617 349.238 521.461 cv
348.965 521.32 348.723 521.172 348.512 521.012 cv
348.301 520.855 348.121 520.684 347.977 520.496 cv
347.828 520.312 347.719 520.117 347.645 519.906 cv
347.566 519.699 347.527 519.469 347.531 519.219 cv
347.527 518.91 347.582 518.617 347.699 518.344 cv
347.809 518.074 347.98 517.84 348.207 517.637 cv
348.434 517.437 348.719 517.277 349.07 517.16 cv
349.414 517.043 349.824 516.984 350.293 516.984 cv
350.738 516.984 351.125 517.039 351.453 517.145 cv
351.781 517.254 352.051 517.398 352.262 517.582 cv
352.473 517.77 352.629 517.988 352.734 518.238 cv
352.832 518.488 352.883 518.758 352.887 519.047 cv
352.883 519.281 352.844 519.508 352.773 519.719 cv
352.695 519.937 352.586 520.141 352.438 520.328 cv
352.289 520.523 352.109 520.703 351.898 520.867 cv
351.688 521.039 351.445 521.195 351.172 521.336 cv
351.492 521.5 351.777 521.664 352.035 521.832 cv
352.285 522 352.5 522.18 352.676 522.375 cv
352.844 522.57 352.973 522.777 353.066 522.992 cv
353.152 523.211 353.199 523.449 353.199 523.707 cv
cp
351.719 519.156 mo
351.715 518.969 351.684 518.793 351.617 518.637 cv
351.551 518.48 351.453 518.348 351.328 518.238 cv
351.199 518.129 351.039 518.047 350.852 517.988 cv
350.656 517.934 350.441 517.906 350.203 517.902 cv
349.707 517.906 349.332 518.016 349.082 518.238 cv
348.824 518.465 348.699 518.773 348.703 519.156 cv
348.699 519.336 348.73 519.5 348.793 519.652 cv
348.855 519.809 348.949 519.953 349.082 520.09 cv
349.207 520.227 349.371 520.359 349.574 520.488 cv
349.77 520.621 350.008 520.758 350.285 520.898 cv
350.746 520.664 351.102 520.402 351.348 520.109 cv
351.594 519.824 351.715 519.508 351.719 519.156 cv
cp
352.008 523.832 mo
352.004 523.625 351.965 523.434 351.891 523.262 cv
351.809 523.094 351.691 522.934 351.535 522.781 cv
351.379 522.633 351.18 522.488 350.945 522.348 cv
350.707 522.211 350.438 522.066 350.129 521.914 cv
349.84 522.059 349.586 522.199 349.371 522.34 cv
349.152 522.48 348.973 522.629 348.836 522.777 cv
348.695 522.934 348.59 523.09 348.52 523.254 cv
348.445 523.422 348.41 523.605 348.414 523.805 cv
348.41 524.25 348.563 524.594 348.871 524.832 cv
349.172 525.078 349.625 525.199 350.23 525.195 cv
350.813 525.199 351.258 525.078 351.559 524.828 cv
351.855 524.586 352.004 524.254 352.008 523.832 cv
cp
f
420.766 525.52 mo
420.762 525.609 420.754 525.68 420.742 525.738 cv
420.727 525.801 420.707 525.852 420.688 525.883 cv
420.664 525.922 420.641 525.945 420.609 525.961 cv
420.578 525.977 420.547 525.984 420.52 525.984 cv
415.883 525.984 li
415.848 525.984 415.82 525.977 415.793 525.961 cv
415.766 525.945 415.738 525.922 415.715 525.883 cv
415.688 525.852 415.668 525.801 415.656 525.738 cv
415.641 525.68 415.633 525.609 415.637 525.52 cv
415.633 525.441 415.641 525.367 415.656 525.305 cv
415.668 525.246 415.684 525.199 415.707 525.16 cv
415.723 525.125 415.75 525.094 415.781 525.07 cv
415.813 525.051 415.844 525.043 415.883 525.039 cv
417.734 525.039 li
417.734 518.293 li
416.02 519.312 li
415.93 519.363 415.859 519.391 415.813 519.398 cv
415.758 519.406 415.715 519.398 415.684 519.367 cv
415.648 519.34 415.629 519.289 415.617 519.219 cv
415.605 519.152 415.598 519.066 415.602 518.957 cv
415.598 518.883 415.602 518.816 415.613 518.758 cv
415.617 518.707 415.629 518.66 415.645 518.621 cv
415.656 518.586 415.676 518.555 415.699 518.527 cv
415.723 518.5 415.754 518.473 415.801 518.445 cv
417.844 517.133 li
417.859 517.121 417.879 517.109 417.91 517.102 cv
417.934 517.094 417.969 517.086 418.016 517.074 cv
418.055 517.066 418.105 517.059 418.16 517.055 cv
418.215 517.055 418.281 517.055 418.367 517.051 cv
418.473 517.055 418.566 517.059 418.641 517.066 cv
418.711 517.074 418.766 517.09 418.813 517.105 cv
418.852 517.125 418.879 517.145 418.895 517.168 cv
418.902 517.195 418.91 517.219 418.914 517.242 cv
418.914 525.039 li
420.52 525.039 li
420.555 525.043 420.59 525.051 420.621 525.07 cv
420.652 525.094 420.676 525.125 420.699 525.16 cv
420.715 525.199 420.73 525.246 420.746 525.305 cv
420.754 525.367 420.762 525.441 420.766 525.52 cv
cp
f
428.117 521.527 mo
428.113 522.211 428.063 522.832 427.957 523.395 cv
427.848 523.957 427.668 524.441 427.422 524.844 cv
427.168 525.25 426.84 525.562 426.441 525.781 cv
426.035 526.004 425.543 526.113 424.957 526.113 cv
424.398 526.113 423.926 526.016 423.547 525.816 cv
423.164 525.621 422.859 525.328 422.625 524.941 cv
422.391 524.555 422.223 524.082 422.129 523.516 cv
422.027 522.953 421.98 522.305 421.98 521.57 cv
421.98 520.898 422.035 520.277 422.145 519.711 cv
422.254 519.148 422.43 518.664 422.68 518.258 cv
422.922 517.855 423.246 517.543 423.652 517.316 cv
424.051 517.098 424.547 516.984 425.137 516.984 cv
425.695 516.984 426.168 517.086 426.551 517.281 cv
426.934 517.484 427.238 517.777 427.473 518.16 cv
427.703 518.551 427.871 519.023 427.969 519.586 cv
428.066 520.148 428.113 520.797 428.117 521.527 cv
cp
426.91 521.609 mo
426.906 521.168 426.891 520.77 426.863 520.418 cv
426.828 520.066 426.781 519.758 426.723 519.488 cv
426.656 519.219 426.578 518.988 426.48 518.793 cv
426.383 518.602 426.266 518.441 426.129 518.312 cv
425.988 518.187 425.828 518.094 425.656 518.035 cv
425.477 517.98 425.281 517.953 425.066 517.949 cv
424.676 517.953 424.359 518.043 424.121 518.227 cv
423.875 518.41 423.684 518.664 423.547 518.98 cv
423.406 519.301 423.313 519.672 423.262 520.102 cv
423.211 520.531 423.188 520.996 423.188 521.488 cv
423.188 522.152 423.219 522.715 423.289 523.176 cv
423.355 523.645 423.465 524.023 423.617 524.312 cv
423.762 524.609 423.953 524.82 424.184 524.949 cv
424.414 525.086 424.695 525.152 425.027 525.148 cv
425.281 525.152 425.504 525.113 425.699 525.027 cv
425.891 524.949 426.059 524.828 426.199 524.672 cv
426.34 524.52 426.453 524.336 426.547 524.121 cv
426.633 523.906 426.707 523.668 426.766 523.406 cv
426.816 523.148 426.855 522.867 426.879 522.562 cv
426.898 522.258 426.906 521.941 426.91 521.609 cv
cp
f
492.047 525.52 mo
492.043 525.609 492.035 525.68 492.023 525.738 cv
492.008 525.801 491.988 525.852 491.969 525.883 cv
491.945 525.922 491.922 525.945 491.891 525.961 cv
491.859 525.977 491.828 525.984 491.801 525.984 cv
487.164 525.984 li
487.129 525.984 487.102 525.977 487.074 525.961 cv
487.047 525.945 487.02 525.922 486.996 525.883 cv
486.969 525.852 486.949 525.801 486.938 525.738 cv
486.922 525.68 486.914 525.609 486.918 525.52 cv
486.914 525.441 486.922 525.367 486.938 525.305 cv
486.949 525.246 486.965 525.199 486.988 525.16 cv
487.004 525.125 487.031 525.094 487.063 525.07 cv
487.094 525.051 487.125 525.043 487.164 525.039 cv
489.016 525.039 li
489.016 518.293 li
487.301 519.312 li
487.211 519.363 487.141 519.391 487.094 519.398 cv
487.039 519.406 486.996 519.398 486.965 519.367 cv
486.93 519.34 486.91 519.289 486.898 519.219 cv
486.887 519.152 486.879 519.066 486.883 518.957 cv
486.879 518.883 486.883 518.816 486.895 518.758 cv
486.898 518.707 486.91 518.66 486.926 518.621 cv
486.938 518.586 486.957 518.555 486.98 518.527 cv
487.004 518.5 487.035 518.473 487.082 518.445 cv
489.125 517.133 li
489.141 517.121 489.16 517.109 489.191 517.102 cv
489.215 517.094 489.25 517.086 489.297 517.074 cv
489.336 517.066 489.387 517.059 489.441 517.055 cv
489.496 517.055 489.563 517.055 489.648 517.051 cv
489.754 517.055 489.848 517.059 489.922 517.066 cv
489.992 517.074 490.047 517.09 490.094 517.105 cv
490.133 517.125 490.16 517.145 490.176 517.168 cv
490.184 517.195 490.191 517.219 490.195 517.242 cv
490.195 525.039 li
491.801 525.039 li
491.836 525.043 491.871 525.051 491.902 525.07 cv
491.934 525.094 491.957 525.125 491.98 525.16 cv
491.996 525.199 492.012 525.246 492.027 525.305 cv
492.035 525.367 492.043 525.441 492.047 525.52 cv
cp
f
499.105 525.477 mo
499.102 525.562 499.098 525.637 499.086 525.699 cv
499.074 525.766 499.059 525.82 499.039 525.859 cv
499.016 525.906 498.988 525.937 498.957 525.953 cv
498.922 525.977 498.883 525.984 498.844 525.984 cv
493.941 525.984 li
493.879 525.984 493.82 525.977 493.773 525.961 cv
493.723 525.945 493.684 525.922 493.648 525.883 cv
493.613 525.852 493.586 525.797 493.574 525.727 cv
493.555 525.656 493.547 525.57 493.551 525.469 cv
493.547 525.379 493.551 525.301 493.559 525.23 cv
493.563 525.164 493.578 525.105 493.605 525.051 cv
493.629 525 493.66 524.945 493.695 524.891 cv
493.73 524.84 493.773 524.785 493.832 524.723 cv
495.605 522.898 li
496.016 522.48 496.344 522.105 496.594 521.77 cv
496.84 521.441 497.031 521.137 497.164 520.859 cv
497.297 520.586 497.383 520.336 497.43 520.109 cv
497.469 519.887 497.492 519.676 497.492 519.48 cv
497.492 519.285 497.457 519.102 497.391 518.922 cv
497.324 518.75 497.23 518.594 497.105 518.457 cv
496.98 518.328 496.824 518.223 496.637 518.141 cv
496.449 518.066 496.23 518.027 495.984 518.023 cv
495.695 518.027 495.438 518.066 495.211 518.141 cv
494.98 518.223 494.781 518.309 494.609 518.395 cv
494.438 518.488 494.293 518.57 494.176 518.648 cv
494.059 518.727 493.973 518.766 493.922 518.766 cv
493.887 518.766 493.855 518.758 493.832 518.738 cv
493.801 518.723 493.781 518.691 493.766 518.648 cv
493.75 518.609 493.734 518.555 493.727 518.484 cv
493.715 518.418 493.711 518.336 493.715 518.238 cv
493.711 518.172 493.715 518.113 493.723 518.062 cv
493.727 518.012 493.734 517.969 493.746 517.93 cv
493.754 517.895 493.77 517.859 493.789 517.828 cv
493.809 517.797 493.844 517.758 493.902 517.707 cv
493.953 517.66 494.047 517.594 494.184 517.512 cv
494.316 517.43 494.488 517.352 494.691 517.27 cv
494.895 517.191 495.117 517.121 495.363 517.066 cv
495.605 517.012 495.863 516.984 496.137 516.984 cv
496.563 516.984 496.938 517.047 497.262 517.168 cv
497.582 517.289 497.848 517.453 498.063 517.664 cv
498.273 517.875 498.434 518.121 498.539 518.395 cv
498.645 518.676 498.699 518.973 498.699 519.285 cv
498.699 519.574 498.672 519.855 498.621 520.133 cv
498.57 520.418 498.465 520.723 498.305 521.047 cv
498.141 521.375 497.906 521.738 497.602 522.137 cv
497.293 522.539 496.887 523 496.383 523.516 cv
494.977 524.984 li
498.836 524.984 li
498.867 524.988 498.902 525 498.941 525.016 cv
498.973 525.039 499.004 525.07 499.031 525.109 cv
499.055 525.152 499.074 525.203 499.086 525.262 cv
499.098 525.328 499.102 525.398 499.105 525.477 cv
cp
f
563.324 525.52 mo
563.32 525.609 563.313 525.68 563.301 525.738 cv
563.285 525.801 563.266 525.852 563.246 525.883 cv
563.223 525.922 563.199 525.945 563.168 525.961 cv
563.137 525.977 563.105 525.984 563.078 525.984 cv
558.441 525.984 li
558.406 525.984 558.379 525.977 558.352 525.961 cv
558.324 525.945 558.297 525.922 558.273 525.883 cv
558.246 525.852 558.227 525.801 558.215 525.738 cv
558.199 525.68 558.191 525.609 558.195 525.52 cv
558.191 525.441 558.199 525.367 558.215 525.305 cv
558.227 525.246 558.242 525.199 558.266 525.16 cv
558.281 525.125 558.309 525.094 558.34 525.07 cv
558.371 525.051 558.402 525.043 558.441 525.039 cv
560.293 525.039 li
560.293 518.293 li
558.578 519.312 li
558.488 519.363 558.418 519.391 558.371 519.398 cv
558.316 519.406 558.273 519.398 558.242 519.367 cv
558.207 519.34 558.188 519.289 558.176 519.219 cv
558.164 519.152 558.156 519.066 558.16 518.957 cv
558.156 518.883 558.16 518.816 558.172 518.758 cv
558.176 518.707 558.188 518.66 558.203 518.621 cv
558.215 518.586 558.234 518.555 558.258 518.527 cv
558.281 518.5 558.313 518.473 558.359 518.445 cv
560.402 517.133 li
560.418 517.121 560.438 517.109 560.469 517.102 cv
560.492 517.094 560.527 517.086 560.574 517.074 cv
560.613 517.066 560.664 517.059 560.719 517.055 cv
560.773 517.055 560.84 517.055 560.926 517.051 cv
561.031 517.055 561.125 517.059 561.199 517.066 cv
561.27 517.074 561.324 517.09 561.371 517.105 cv
561.41 517.125 561.438 517.145 561.453 517.168 cv
561.461 517.195 561.469 517.219 561.473 517.242 cv
561.473 525.039 li
563.078 525.039 li
563.113 525.043 563.148 525.051 563.18 525.07 cv
563.211 525.094 563.234 525.125 563.258 525.16 cv
563.273 525.199 563.289 525.246 563.305 525.305 cv
563.313 525.367 563.32 525.441 563.324 525.52 cv
cp
f
570.762 523.461 mo
570.758 523.613 570.734 523.734 570.691 523.82 cv
570.645 523.91 570.582 523.953 570.5 523.949 cv
569.5 523.949 li
569.5 525.812 li
569.5 525.852 569.488 525.883 569.473 525.906 cv
569.449 525.934 569.418 525.953 569.375 525.973 cv
569.324 525.988 569.262 526 569.191 526.012 cv
569.113 526.02 569.02 526.023 568.902 526.027 cv
568.785 526.023 568.688 526.02 568.617 526.012 cv
568.539 526 568.48 525.988 568.438 525.973 cv
568.391 525.953 568.359 525.934 568.344 525.906 cv
568.324 525.883 568.316 525.852 568.32 525.812 cv
568.32 523.949 li
564.691 523.949 li
564.633 523.953 564.59 523.945 564.555 523.93 cv
564.52 523.918 564.484 523.891 564.457 523.852 cv
564.426 523.816 564.406 523.766 564.395 523.695 cv
564.383 523.629 564.379 523.539 564.379 523.426 cv
564.379 523.344 564.379 523.266 564.387 523.195 cv
564.387 523.125 564.398 523.062 564.414 523.008 cv
564.426 522.953 564.441 522.898 564.469 522.844 cv
564.488 522.789 564.516 522.734 564.551 522.672 cv
567.711 517.285 li
567.73 517.25 567.766 517.219 567.813 517.191 cv
567.855 517.164 567.91 517.141 567.984 517.121 cv
568.051 517.105 568.137 517.094 568.242 517.082 cv
568.344 517.078 568.465 517.074 568.605 517.07 cv
568.754 517.074 568.891 517.078 569.008 517.09 cv
569.121 517.102 569.211 517.117 569.285 517.133 cv
569.352 517.152 569.406 517.176 569.445 517.207 cv
569.48 517.238 569.5 517.273 569.5 517.312 cv
569.5 522.977 li
570.5 522.977 li
570.574 522.98 570.637 523.02 570.688 523.098 cv
570.734 523.18 570.758 523.301 570.762 523.461 cv
cp
568.32 518.109 mo
568.309 518.109 li
565.457 522.977 li
568.32 522.977 li
cp
f
634.605 525.52 mo
634.602 525.609 634.594 525.68 634.582 525.738 cv
634.566 525.801 634.547 525.852 634.527 525.883 cv
634.504 525.922 634.48 525.945 634.449 525.961 cv
634.418 525.977 634.387 525.984 634.359 525.984 cv
629.723 525.984 li
629.688 525.984 629.66 525.977 629.633 525.961 cv
629.605 525.945 629.578 525.922 629.555 525.883 cv
629.527 525.852 629.508 525.801 629.496 525.738 cv
629.48 525.68 629.473 525.609 629.477 525.52 cv
629.473 525.441 629.48 525.367 629.496 525.305 cv
629.508 525.246 629.523 525.199 629.547 525.16 cv
629.563 525.125 629.59 525.094 629.621 525.07 cv
629.652 525.051 629.684 525.043 629.723 525.039 cv
631.574 525.039 li
631.574 518.293 li
629.859 519.312 li
629.77 519.363 629.699 519.391 629.652 519.398 cv
629.598 519.406 629.555 519.398 629.523 519.367 cv
629.488 519.34 629.469 519.289 629.457 519.219 cv
629.445 519.152 629.438 519.066 629.441 518.957 cv
629.438 518.883 629.441 518.816 629.453 518.758 cv
629.457 518.707 629.469 518.66 629.484 518.621 cv
629.496 518.586 629.516 518.555 629.539 518.527 cv
629.563 518.5 629.594 518.473 629.641 518.445 cv
631.684 517.133 li
631.699 517.121 631.719 517.109 631.75 517.102 cv
631.773 517.094 631.809 517.086 631.855 517.074 cv
631.895 517.066 631.945 517.059 632 517.055 cv
632.055 517.055 632.121 517.055 632.207 517.051 cv
632.313 517.055 632.406 517.059 632.48 517.066 cv
632.551 517.074 632.605 517.09 632.652 517.105 cv
632.691 517.125 632.719 517.145 632.734 517.168 cv
632.742 517.195 632.75 517.219 632.754 517.242 cv
632.754 525.039 li
634.359 525.039 li
634.395 525.043 634.43 525.051 634.461 525.07 cv
634.492 525.094 634.516 525.125 634.539 525.16 cv
634.555 525.199 634.57 525.246 634.586 525.305 cv
634.594 525.367 634.602 525.441 634.605 525.52 cv
cp
f
641.891 523.113 mo
641.891 523.504 641.828 523.883 641.711 524.242 cv
641.586 524.609 641.402 524.926 641.16 525.199 cv
640.91 525.477 640.598 525.699 640.223 525.863 cv
639.84 526.031 639.395 526.113 638.879 526.113 cv
638.508 526.113 638.18 526.07 637.898 525.977 cv
637.613 525.891 637.367 525.758 637.156 525.586 cv
636.945 525.418 636.77 525.211 636.633 524.965 cv
636.492 524.719 636.379 524.437 636.297 524.121 cv
636.211 523.809 636.152 523.465 636.117 523.086 cv
636.078 522.715 636.059 522.312 636.063 521.879 cv
636.059 521.5 636.078 521.117 636.121 520.727 cv
636.16 520.344 636.234 519.969 636.34 519.602 cv
636.445 519.242 636.59 518.902 636.77 518.586 cv
636.949 518.27 637.176 517.992 637.449 517.758 cv
637.723 517.523 638.047 517.336 638.426 517.195 cv
638.805 517.059 639.246 516.992 639.75 516.988 cv
639.918 516.992 640.09 517 640.262 517.02 cv
640.434 517.043 640.594 517.074 640.742 517.105 cv
640.891 517.145 641.012 517.18 641.113 517.219 cv
641.211 517.258 641.277 517.293 641.313 517.316 cv
641.34 517.344 641.363 517.371 641.383 517.398 cv
641.398 517.43 641.414 517.461 641.422 517.496 cv
641.43 517.531 641.434 517.57 641.441 517.613 cv
641.441 517.656 641.445 517.711 641.449 517.773 cv
641.445 517.859 641.445 517.93 641.445 517.984 cv
641.441 518.047 641.43 518.094 641.418 518.129 cv
641.398 518.168 641.379 518.195 641.355 518.211 cv
641.328 518.23 641.297 518.238 641.258 518.238 cv
641.207 518.238 641.137 518.223 641.051 518.191 cv
640.961 518.16 640.855 518.125 640.734 518.082 cv
640.609 518.047 640.461 518.012 640.285 517.977 cv
640.109 517.949 639.906 517.934 639.676 517.93 cv
639.246 517.934 638.879 518.02 638.574 518.191 cv
638.27 518.363 638.02 518.598 637.824 518.891 cv
637.629 519.184 637.484 519.523 637.395 519.906 cv
637.297 520.297 637.242 520.699 637.234 521.117 cv
637.352 521.051 637.488 520.984 637.637 520.914 cv
637.785 520.848 637.945 520.785 638.121 520.727 cv
638.297 520.676 638.484 520.629 638.68 520.594 cv
638.875 520.562 639.086 520.547 639.313 520.543 cv
639.789 520.547 640.191 520.613 640.523 520.738 cv
640.852 520.871 641.117 521.051 641.324 521.281 cv
641.523 521.512 641.668 521.781 641.758 522.094 cv
641.844 522.406 641.891 522.746 641.891 523.113 cv
cp
640.695 523.223 mo
640.695 522.961 640.668 522.719 640.617 522.5 cv
640.563 522.285 640.473 522.102 640.352 521.945 cv
640.227 521.797 640.063 521.68 639.859 521.598 cv
639.648 521.516 639.395 521.473 639.098 521.473 cv
638.926 521.473 638.758 521.488 638.59 521.52 cv
638.418 521.551 638.254 521.594 638.098 521.641 cv
637.938 521.695 637.789 521.758 637.648 521.828 cv
637.504 521.902 637.371 521.977 637.254 522.055 cv
637.25 522.648 637.289 523.145 637.367 523.539 cv
637.441 523.937 637.551 524.254 637.695 524.492 cv
637.84 524.734 638.02 524.906 638.234 525.008 cv
638.449 525.113 638.699 525.164 638.988 525.16 cv
639.277 525.164 639.531 525.109 639.746 524.996 cv
639.961 524.891 640.137 524.742 640.281 524.555 cv
640.422 524.371 640.527 524.164 640.594 523.934 cv
640.66 523.703 640.695 523.469 640.695 523.223 cv
cp
f
16.629 361.105 mo
16.727 361.109 16.809 361.113 16.875 361.121 cv
16.949 361.133 17.008 361.152 17.051 361.176 cv
17.102 361.203 17.137 361.234 17.152 361.266 cv
17.176 361.305 17.184 361.34 17.184 361.379 cv
17.184 366.219 li
17.184 366.34 17.145 366.453 17.063 366.559 cv
16.984 366.668 16.844 366.723 16.637 366.719 cv
7.645 366.719 li
7.441 366.723 7.301 366.668 7.219 366.559 cv
7.141 366.453 7.102 366.34 7.098 366.219 cv
7.098 361.434 li
7.102 361.395 7.109 361.355 7.129 361.32 cv
7.152 361.289 7.188 361.262 7.23 361.238 cv
7.281 361.219 7.34 361.203 7.406 361.187 cv
7.48 361.176 7.566 361.168 7.668 361.168 cv
7.762 361.168 7.844 361.176 7.914 361.187 cv
7.984 361.203 8.043 361.219 8.086 361.238 cv
8.133 361.262 8.164 361.289 8.184 361.32 cv
8.207 361.355 8.219 361.395 8.215 361.434 cv
8.215 365.379 li
11.379 365.379 li
11.379 361.996 li
11.383 361.957 11.395 361.918 11.414 361.883 cv
11.441 361.852 11.473 361.824 11.512 361.797 cv
11.555 361.777 11.613 361.762 11.684 361.746 cv
11.758 361.738 11.844 361.73 11.938 361.73 cv
12.035 361.73 12.113 361.738 12.18 361.746 cv
12.25 361.762 12.305 361.777 12.344 361.797 cv
12.387 361.824 12.418 361.852 12.434 361.883 cv
12.453 361.918 12.461 361.957 12.461 361.996 cv
12.461 365.379 li
16.07 365.379 li
16.07 361.379 li
16.07 361.34 16.082 361.305 16.102 361.266 cv
16.125 361.234 16.156 361.203 16.199 361.176 cv
16.246 361.152 16.305 361.133 16.371 361.121 cv
16.441 361.113 16.527 361.109 16.629 361.105 cv
cp
f
16.988 353.043 mo
17.035 353.043 17.07 353.055 17.094 353.074 cv
17.125 353.098 17.148 353.133 17.168 353.176 cv
17.188 353.227 17.199 353.289 17.215 353.371 cv
17.223 353.453 17.23 353.559 17.23 353.68 cv
17.23 353.812 17.223 353.918 17.215 354 cv
17.199 354.086 17.188 354.152 17.168 354.195 cv
17.148 354.246 17.125 354.277 17.094 354.297 cv
17.07 354.32 17.035 354.332 16.988 354.328 cv
12.883 354.328 li
12.484 354.332 12.164 354.363 11.918 354.422 cv
11.676 354.488 11.465 354.578 11.285 354.695 cv
11.109 354.812 10.973 354.969 10.879 355.156 cv
10.785 355.352 10.738 355.57 10.738 355.816 cv
10.738 356.141 10.855 356.465 11.082 356.785 cv
11.316 357.109 11.648 357.445 12.086 357.797 cv
16.988 357.797 li
17.035 357.801 17.07 357.812 17.094 357.828 cv
17.125 357.852 17.148 357.883 17.168 357.93 cv
17.188 357.977 17.199 358.043 17.215 358.121 cv
17.223 358.207 17.23 358.312 17.23 358.441 cv
17.23 358.57 17.223 358.676 17.215 358.754 cv
17.199 358.84 17.188 358.906 17.168 358.953 cv
17.148 359.008 17.125 359.039 17.094 359.055 cv
17.07 359.074 17.035 359.086 16.988 359.082 cv
9.977 359.082 li
9.938 359.086 9.902 359.078 9.871 359.059 cv
9.844 359.047 9.82 359.016 9.793 358.965 cv
9.773 358.922 9.758 358.859 9.746 358.785 cv
9.742 358.715 9.738 358.621 9.734 358.496 cv
9.738 358.387 9.742 358.289 9.746 358.211 cv
9.758 358.137 9.773 358.078 9.793 358.035 cv
9.82 357.996 9.844 357.969 9.871 357.949 cv
9.902 357.934 9.938 357.926 9.977 357.922 cv
10.902 357.922 li
10.461 357.531 10.141 357.137 9.934 356.742 cv
9.73 356.352 9.625 355.953 9.625 355.551 cv
9.625 355.082 9.707 354.691 9.863 354.371 cv
10.027 354.055 10.238 353.793 10.5 353.594 cv
10.766 353.398 11.074 353.258 11.43 353.172 cv
11.785 353.086 12.215 353.043 12.711 353.043 cv
cp
f
13.18 344.715 mo
13.383 344.719 13.523 344.77 13.609 344.867 cv
13.695 344.973 13.738 345.09 13.738 345.215 cv
13.738 349.832 li
14.129 349.836 14.48 349.797 14.793 349.715 cv
15.105 349.641 15.375 349.508 15.594 349.324 cv
15.82 349.145 15.992 348.91 16.109 348.613 cv
16.234 348.324 16.293 347.965 16.289 347.539 cv
16.293 347.207 16.266 346.91 16.207 346.648 cv
16.156 346.387 16.094 346.16 16.023 345.969 cv
15.957 345.781 15.898 345.625 15.84 345.5 cv
15.789 345.379 15.762 345.285 15.758 345.223 cv
15.762 345.187 15.77 345.156 15.785 345.125 cv
15.805 345.098 15.832 345.074 15.867 345.055 cv
15.906 345.043 15.957 345.031 16.02 345.02 cv
16.086 345.016 16.164 345.012 16.258 345.008 cv
16.328 345.012 16.387 345.016 16.434 345.016 cv
16.48 345.023 16.523 345.027 16.563 345.035 cv
16.602 345.043 16.637 345.059 16.668 345.074 cv
16.699 345.098 16.73 345.121 16.758 345.145 cv
16.789 345.176 16.836 345.258 16.898 345.398 cv
16.965 345.539 17.027 345.723 17.09 345.945 cv
17.152 346.172 17.207 346.43 17.258 346.723 cv
17.305 347.016 17.328 347.328 17.332 347.66 cv
17.328 348.238 17.25 348.746 17.09 349.176 cv
16.93 349.613 16.691 349.977 16.375 350.27 cv
16.059 350.57 15.664 350.793 15.184 350.941 cv
14.707 351.09 14.148 351.164 13.512 351.164 cv
12.914 351.164 12.375 351.09 11.891 350.934 cv
11.414 350.781 11.004 350.555 10.668 350.258 cv
10.332 349.965 10.074 349.609 9.895 349.195 cv
9.715 348.781 9.625 348.316 9.625 347.801 cv
9.625 347.25 9.715 346.781 9.891 346.395 cv
10.07 346.008 10.309 345.691 10.605 345.437 cv
10.906 345.191 11.258 345.008 11.656 344.891 cv
12.063 344.777 12.492 344.719 12.945 344.715 cv
cp
12.797 346.008 mo
12.121 345.992 11.59 346.145 11.207 346.461 cv
10.824 346.777 10.633 347.246 10.629 347.863 cv
10.633 348.187 10.691 348.469 10.809 348.707 cv
10.93 348.949 11.09 349.148 11.285 349.309 cv
11.484 349.473 11.715 349.598 11.977 349.684 cv
12.238 349.773 12.512 349.824 12.797 349.832 cv
cp
f
10.434 338.652 mo
10.551 338.656 10.648 338.656 10.723 338.66 cv
10.805 338.668 10.867 338.68 10.906 338.691 cv
10.953 338.711 10.984 338.73 11.008 338.75 cv
11.031 338.777 11.043 338.809 11.043 338.848 cv
11.043 338.891 11.031 338.941 11.008 339 cv
10.984 339.062 10.961 339.133 10.938 339.203 cv
10.914 339.281 10.895 339.363 10.871 339.457 cv
10.855 339.551 10.844 339.652 10.84 339.762 cv
10.844 339.895 10.871 340.023 10.918 340.145 cv
10.973 340.27 11.059 340.398 11.176 340.535 cv
11.301 340.676 11.457 340.82 11.652 340.969 cv
11.848 341.121 12.09 341.289 12.375 341.469 cv
16.988 341.469 li
17.035 341.473 17.07 341.484 17.094 341.5 cv
17.125 341.523 17.148 341.555 17.168 341.602 cv
17.188 341.648 17.199 341.715 17.215 341.793 cv
17.223 341.879 17.23 341.984 17.23 342.113 cv
17.23 342.242 17.223 342.348 17.215 342.426 cv
17.199 342.512 17.188 342.578 17.168 342.625 cv
17.148 342.68 17.125 342.711 17.094 342.727 cv
17.07 342.746 17.035 342.758 16.988 342.754 cv
9.977 342.754 li
9.938 342.758 9.902 342.75 9.871 342.73 cv
9.844 342.719 9.82 342.687 9.793 342.637 cv
9.773 342.594 9.758 342.531 9.746 342.457 cv
9.742 342.387 9.738 342.293 9.734 342.168 cv
9.738 342.059 9.742 341.961 9.746 341.883 cv
9.758 341.809 9.773 341.75 9.793 341.707 cv
9.82 341.668 9.844 341.641 9.871 341.621 cv
9.902 341.605 9.938 341.598 9.977 341.594 cv
10.996 341.594 li
10.715 341.406 10.488 341.223 10.313 341.051 cv
10.137 340.883 9.996 340.723 9.895 340.57 cv
9.793 340.422 9.723 340.273 9.684 340.125 cv
9.645 339.977 9.625 339.828 9.625 339.676 cv
9.625 339.609 9.629 339.531 9.637 339.445 cv
9.645 339.359 9.66 339.27 9.68 339.176 cv
9.703 339.082 9.727 339 9.75 338.922 cv
9.777 338.852 9.805 338.797 9.828 338.762 cv
9.859 338.734 9.883 338.715 9.902 338.699 cv
9.93 338.691 9.961 338.68 9.992 338.672 cv
10.031 338.664 10.082 338.66 10.152 338.656 cv
10.223 338.656 10.316 338.656 10.434 338.652 cv
cp
f
10.293 331.609 mo
10.477 331.613 10.609 331.637 10.688 331.684 cv
10.77 331.734 10.809 331.797 10.809 331.871 cv
10.809 332.879 li
10.996 332.699 11.203 332.57 11.43 332.496 cv
11.656 332.426 11.891 332.391 12.133 332.387 cv
12.539 332.391 12.898 332.457 13.211 332.582 cv
13.523 332.715 13.789 332.898 14 333.141 cv
14.219 333.383 14.383 333.672 14.496 334 cv
14.613 334.336 14.672 334.703 14.668 335.105 cv
14.672 335.395 14.633 335.668 14.555 335.922 cv
14.48 336.184 14.387 336.379 14.27 336.516 cv
14.367 336.609 14.473 336.687 14.59 336.746 cv
14.711 336.809 14.848 336.84 15 336.836 cv
15.184 336.84 15.336 336.754 15.453 336.582 cv
15.578 336.414 15.641 336.191 15.648 335.91 cv
15.727 334.078 li
15.738 333.73 15.785 333.414 15.871 333.121 cv
15.957 332.832 16.082 332.578 16.238 332.363 cv
16.398 332.152 16.59 331.984 16.82 331.863 cv
17.055 331.746 17.324 331.687 17.629 331.684 cv
17.949 331.687 18.254 331.754 18.547 331.887 cv
18.836 332.023 19.09 332.23 19.313 332.508 cv
19.531 332.789 19.707 333.145 19.836 333.574 cv
19.961 334.004 20.023 334.512 20.027 335.098 cv
20.023 335.668 19.977 336.152 19.883 336.547 cv
19.785 336.945 19.652 337.27 19.488 337.523 cv
19.32 337.777 19.125 337.961 18.895 338.074 cv
18.66 338.191 18.406 338.25 18.141 338.246 cv
17.969 338.25 17.805 338.23 17.645 338.184 cv
17.48 338.145 17.328 338.082 17.184 337.996 cv
17.039 337.914 16.902 337.805 16.766 337.676 cv
16.637 337.551 16.504 337.406 16.375 337.234 cv
16.246 337.492 16.082 337.68 15.883 337.801 cv
15.688 337.922 15.477 337.98 15.242 337.98 cv
14.93 337.98 14.645 337.918 14.395 337.789 cv
14.145 337.66 13.922 337.5 13.723 337.305 cv
13.531 337.469 13.316 337.594 13.074 337.687 cv
12.836 337.781 12.543 337.828 12.195 337.828 cv
11.801 337.828 11.441 337.762 11.121 337.625 cv
10.805 337.492 10.539 337.305 10.32 337.062 cv
10.105 336.824 9.938 336.539 9.816 336.203 cv
9.703 335.871 9.645 335.504 9.641 335.105 cv
9.645 334.895 9.656 334.695 9.676 334.512 cv
9.703 334.328 9.734 334.156 9.773 333.992 cv
9.773 331.871 li
9.777 331.785 9.82 331.719 9.902 331.676 cv
9.992 331.633 10.121 331.613 10.293 331.609 cv
cp
12.141 333.617 mo
11.668 333.621 11.297 333.754 11.023 334.012 cv
10.758 334.277 10.621 334.648 10.621 335.129 cv
10.621 335.383 10.664 335.602 10.746 335.781 cv
10.832 335.969 10.945 336.121 11.09 336.242 cv
11.238 336.363 11.406 336.453 11.594 336.512 cv
11.781 336.574 11.98 336.605 12.188 336.602 cv
12.652 336.605 13.016 336.473 13.281 336.211 cv
13.547 335.949 13.68 335.582 13.676 335.105 cv
13.68 334.855 13.641 334.637 13.555 334.445 cv
13.477 334.262 13.363 334.105 13.223 333.98 cv
13.082 333.859 12.918 333.77 12.727 333.707 cv
12.543 333.652 12.348 333.621 12.141 333.617 cv
cp
17.699 332.973 mo
17.395 332.977 17.164 333.102 17 333.344 cv
16.84 333.594 16.75 333.926 16.738 334.344 cv
16.676 336.16 li
16.809 336.328 16.934 336.465 17.047 336.566 cv
17.164 336.676 17.273 336.758 17.383 336.82 cv
17.488 336.883 17.594 336.926 17.699 336.949 cv
17.801 336.973 17.906 336.984 18.016 336.984 cv
18.352 336.984 18.605 336.816 18.785 336.473 cv
18.957 336.133 19.047 335.652 19.047 335.035 cv
19.047 334.648 19.008 334.324 18.934 334.059 cv
18.855 333.801 18.754 333.59 18.633 333.426 cv
18.504 333.27 18.363 333.152 18.203 333.078 cv
18.043 333.012 17.875 332.977 17.699 332.973 cv
cp
f
17.184 326.758 mo
19.762 327.691 li
19.844 327.727 19.906 327.805 19.953 327.93 cv
19.996 328.059 20.02 328.254 20.02 328.512 cv
20.02 328.652 20.012 328.762 20 328.84 cv
19.984 328.926 19.961 328.988 19.934 329.027 cv
19.898 329.074 19.859 329.098 19.809 329.102 cv
19.754 329.109 19.691 329.098 19.621 329.062 cv
17.184 328.098 li
17.164 328.145 17.133 328.191 17.082 328.23 cv
17.039 328.277 16.988 328.305 16.934 328.316 cv
10.23 330.816 li
10.125 330.859 10.039 330.883 9.977 330.879 cv
9.914 330.883 9.867 330.859 9.828 330.816 cv
9.797 330.777 9.77 330.711 9.754 330.613 cv
9.742 330.523 9.738 330.398 9.734 330.242 cv
9.738 330.086 9.742 329.965 9.746 329.875 cv
9.758 329.789 9.77 329.719 9.789 329.664 cv
9.813 329.613 9.844 329.574 9.879 329.551 cv
9.922 329.527 9.977 329.504 10.039 329.477 cv
15.664 327.473 li
15.664 327.449 li
10.008 325.52 li
9.91 325.488 9.848 325.453 9.816 325.406 cv
9.793 325.367 9.77 325.301 9.754 325.207 cv
9.742 325.121 9.738 324.992 9.734 324.824 cv
9.738 324.68 9.742 324.559 9.754 324.465 cv
9.77 324.371 9.797 324.305 9.828 324.258 cv
9.867 324.219 9.914 324.195 9.977 324.191 cv
10.039 324.195 10.117 324.211 10.207 324.238 cv
cp
f
15.758 312.121 mo
15.844 312.121 15.914 312.125 15.977 312.129 cv
16.039 312.137 16.094 312.145 16.141 312.156 cv
16.188 312.172 16.23 312.191 16.266 312.207 cv
16.305 312.23 16.348 312.266 16.398 312.316 cv
16.449 312.371 16.527 312.48 16.633 312.645 cv
16.742 312.812 16.848 313.02 16.945 313.266 cv
17.051 313.512 17.133 313.793 17.203 314.113 cv
17.27 314.434 17.305 314.785 17.309 315.16 cv
17.305 315.82 17.199 316.41 16.98 316.937 cv
16.766 317.465 16.445 317.914 16.016 318.285 cv
15.594 318.656 15.066 318.941 14.438 319.141 cv
13.813 319.34 13.09 319.441 12.273 319.437 cv
11.438 319.441 10.695 319.332 10.039 319.117 cv
9.387 318.902 8.832 318.602 8.375 318.211 cv
7.922 317.824 7.574 317.359 7.336 316.812 cv
7.098 316.273 6.977 315.668 6.977 315.004 cv
6.977 314.715 7.004 314.434 7.059 314.156 cv
7.113 313.883 7.184 313.629 7.262 313.395 cv
7.348 313.164 7.441 312.957 7.551 312.77 cv
7.66 312.59 7.75 312.461 7.82 312.391 cv
7.891 312.32 7.945 312.277 7.98 312.254 cv
8.02 312.238 8.063 312.219 8.109 312.203 cv
8.16 312.191 8.219 312.184 8.285 312.172 cv
8.355 312.168 8.438 312.164 8.527 312.16 cv
8.633 312.164 8.719 312.168 8.789 312.176 cv
8.863 312.187 8.926 312.203 8.973 312.223 cv
9.027 312.246 9.063 312.27 9.082 312.297 cv
9.109 312.328 9.121 312.363 9.117 312.402 cv
9.121 312.477 9.07 312.582 8.965 312.711 cv
8.867 312.844 8.758 313.012 8.633 313.215 cv
8.516 313.426 8.402 313.676 8.297 313.969 cv
8.199 314.266 8.148 314.617 8.145 315.027 cv
8.148 315.48 8.238 315.891 8.414 316.258 cv
8.594 316.625 8.855 316.941 9.203 317.199 cv
9.555 317.465 9.98 317.664 10.48 317.805 cv
10.98 317.949 11.555 318.023 12.195 318.02 cv
12.84 318.023 13.406 317.953 13.895 317.812 cv
14.387 317.676 14.797 317.477 15.125 317.219 cv
15.457 316.961 15.703 316.645 15.871 316.27 cv
16.043 315.895 16.129 315.469 16.125 314.988 cv
16.129 314.59 16.078 314.238 15.977 313.937 cv
15.879 313.637 15.77 313.383 15.645 313.168 cv
15.523 312.961 15.414 312.785 15.313 312.648 cv
15.219 312.512 15.168 312.406 15.164 312.324 cv
15.168 312.293 15.176 312.262 15.188 312.23 cv
15.207 312.207 15.238 312.184 15.277 312.168 cv
15.324 312.152 15.383 312.141 15.461 312.133 cv
15.539 312.125 15.641 312.121 15.758 312.121 cv
cp
f
13.402 303.973 mo
13.98 303.977 14.508 304.051 14.984 304.199 cv
15.469 304.352 15.883 304.578 16.227 304.875 cv
16.578 305.176 16.848 305.551 17.039 305.996 cv
17.234 306.449 17.328 306.969 17.332 307.559 cv
17.328 308.137 17.246 308.641 17.074 309.066 cv
16.906 309.496 16.656 309.852 16.328 310.137 cv
16 310.426 15.605 310.641 15.137 310.777 cv
14.672 310.918 14.141 310.984 13.543 310.984 cv
12.977 310.984 12.449 310.914 11.969 310.766 cv
11.488 310.621 11.074 310.395 10.723 310.094 cv
10.375 309.797 10.105 309.426 9.914 308.977 cv
9.723 308.531 9.625 308.008 9.625 307.41 cv
9.625 306.832 9.711 306.332 9.883 305.902 cv
10.055 305.477 10.305 305.117 10.633 304.832 cv
10.961 304.547 11.359 304.332 11.824 304.187 cv
12.293 304.047 12.82 303.977 13.402 303.973 cv
cp
13.488 305.305 mo
13.113 305.309 12.754 305.344 12.414 305.41 cv
12.078 305.484 11.785 305.602 11.527 305.762 cv
11.277 305.926 11.074 306.145 10.922 306.422 cv
10.777 306.703 10.703 307.051 10.699 307.461 cv
10.703 307.848 10.77 308.176 10.902 308.449 cv
11.039 308.727 11.23 308.953 11.477 309.129 cv
11.723 309.309 12.016 309.441 12.352 309.523 cv
12.691 309.613 13.059 309.656 13.457 309.652 cv
13.844 309.656 14.207 309.621 14.543 309.547 cv
14.883 309.48 15.176 309.363 15.426 309.195 cv
15.68 309.031 15.883 308.809 16.027 308.531 cv
16.18 308.254 16.254 307.906 16.25 307.492 cv
16.254 307.117 16.184 306.789 16.047 306.508 cv
15.914 306.23 15.727 306.004 15.477 305.824 cv
15.234 305.648 14.941 305.52 14.605 305.434 cv
14.27 305.352 13.898 305.309 13.488 305.305 cv
cp
f
16.988 296.047 mo
17.035 296.047 17.07 296.059 17.094 296.078 cv
17.125 296.102 17.148 296.137 17.168 296.18 cv
17.188 296.23 17.199 296.293 17.215 296.375 cv
17.223 296.457 17.23 296.562 17.23 296.684 cv
17.23 296.816 17.223 296.922 17.215 297.004 cv
17.199 297.09 17.188 297.156 17.168 297.199 cv
17.148 297.25 17.125 297.281 17.094 297.301 cv
17.07 297.324 17.035 297.336 16.988 297.332 cv
12.883 297.332 li
12.484 297.336 12.164 297.367 11.918 297.426 cv
11.676 297.492 11.465 297.582 11.285 297.699 cv
11.109 297.816 10.973 297.973 10.879 298.16 cv
10.785 298.355 10.738 298.574 10.738 298.82 cv
10.738 299.145 10.855 299.469 11.082 299.789 cv
11.316 300.113 11.648 300.449 12.086 300.801 cv
16.988 300.801 li
17.035 300.805 17.07 300.816 17.094 300.832 cv
17.125 300.855 17.148 300.887 17.168 300.934 cv
17.188 300.98 17.199 301.047 17.215 301.125 cv
17.223 301.211 17.23 301.316 17.23 301.445 cv
17.23 301.574 17.223 301.68 17.215 301.758 cv
17.199 301.844 17.188 301.91 17.168 301.957 cv
17.148 302.012 17.125 302.043 17.094 302.059 cv
17.07 302.078 17.035 302.09 16.988 302.086 cv
9.977 302.086 li
9.938 302.09 9.902 302.082 9.871 302.062 cv
9.844 302.051 9.82 302.02 9.793 301.969 cv
9.773 301.926 9.758 301.863 9.746 301.789 cv
9.742 301.719 9.738 301.625 9.734 301.5 cv
9.738 301.391 9.742 301.293 9.746 301.215 cv
9.758 301.141 9.773 301.082 9.793 301.039 cv
9.82 301 9.844 300.973 9.871 300.953 cv
9.902 300.937 9.938 300.93 9.977 300.926 cv
10.902 300.926 li
10.461 300.535 10.141 300.141 9.934 299.746 cv
9.73 299.355 9.625 298.957 9.625 298.555 cv
9.625 298.086 9.707 297.695 9.863 297.375 cv
10.027 297.059 10.238 296.797 10.5 296.598 cv
10.766 296.402 11.074 296.262 11.43 296.176 cv
11.785 296.09 12.215 296.047 12.711 296.047 cv
cp
f
15.078 289.305 mo
15.441 289.309 15.762 289.375 16.039 289.504 cv
16.32 289.637 16.555 289.824 16.746 290.066 cv
16.941 290.312 17.086 290.605 17.184 290.941 cv
17.281 291.281 17.328 291.652 17.332 292.055 cv
17.328 292.309 17.309 292.547 17.273 292.77 cv
17.23 292.996 17.184 293.195 17.125 293.375 cv
17.066 293.555 17.004 293.707 16.938 293.832 cv
16.875 293.957 16.816 294.051 16.762 294.105 cv
16.711 294.164 16.641 294.203 16.543 294.227 cv
16.453 294.254 16.324 294.266 16.164 294.266 cv
16.066 294.266 15.984 294.262 15.914 294.25 cv
15.848 294.242 15.793 294.23 15.75 294.211 cv
15.711 294.199 15.68 294.176 15.66 294.148 cv
15.645 294.121 15.637 294.09 15.633 294.051 cv
15.637 293.996 15.672 293.91 15.738 293.797 cv
15.813 293.687 15.891 293.551 15.969 293.383 cv
16.055 293.223 16.129 293.031 16.199 292.805 cv
16.27 292.586 16.305 292.328 16.305 292.031 cv
16.305 291.816 16.281 291.617 16.234 291.437 cv
16.188 291.262 16.121 291.109 16.027 290.98 cv
15.941 290.852 15.824 290.75 15.68 290.68 cv
15.543 290.609 15.375 290.574 15.18 290.574 cv
14.984 290.574 14.82 290.625 14.684 290.727 cv
14.551 290.828 14.43 290.965 14.324 291.129 cv
14.223 291.297 14.133 291.48 14.047 291.687 cv
13.969 291.898 13.883 292.113 13.793 292.332 cv
13.707 292.551 13.605 292.766 13.492 292.977 cv
13.383 293.187 13.25 293.379 13.086 293.543 cv
12.93 293.715 12.734 293.848 12.508 293.945 cv
12.285 294.051 12.02 294.102 11.707 294.098 cv
11.434 294.102 11.168 294.047 10.914 293.937 cv
10.664 293.832 10.445 293.672 10.254 293.457 cv
10.066 293.246 9.914 292.98 9.797 292.66 cv
9.684 292.34 9.625 291.969 9.625 291.539 cv
9.625 291.355 9.641 291.168 9.672 290.98 cv
9.703 290.797 9.742 290.629 9.789 290.473 cv
9.836 290.324 9.887 290.195 9.941 290.086 cv
9.996 289.984 10.047 289.902 10.086 289.844 cv
10.133 289.793 10.168 289.758 10.195 289.734 cv
10.227 289.719 10.262 289.703 10.297 289.695 cv
10.34 289.687 10.387 289.68 10.441 289.672 cv
10.5 289.664 10.57 289.66 10.652 289.66 cv
10.742 289.66 10.82 289.664 10.883 289.672 cv
10.953 289.68 11.004 289.695 11.043 289.711 cv
11.086 289.734 11.117 289.754 11.133 289.777 cv
11.152 289.805 11.16 289.836 11.16 289.863 cv
11.16 289.914 11.133 289.98 11.074 290.066 cv
11.02 290.156 10.957 290.27 10.891 290.41 cv
10.828 290.551 10.77 290.719 10.707 290.906 cv
10.652 291.098 10.621 291.312 10.621 291.555 cv
10.621 291.777 10.648 291.969 10.695 292.133 cv
10.75 292.301 10.82 292.437 10.906 292.543 cv
11 292.648 11.105 292.73 11.23 292.781 cv
11.355 292.84 11.492 292.867 11.637 292.863 cv
11.84 292.867 12.008 292.816 12.145 292.711 cv
12.285 292.609 12.406 292.473 12.508 292.305 cv
12.613 292.141 12.707 291.949 12.789 291.734 cv
12.875 291.523 12.961 291.309 13.047 291.086 cv
13.137 290.867 13.238 290.648 13.344 290.43 cv
13.453 290.215 13.582 290.023 13.738 289.855 cv
13.895 289.691 14.082 289.559 14.301 289.457 cv
14.52 289.359 14.781 289.309 15.078 289.305 cv
cp
f
16.988 281.461 mo
17.035 281.465 17.07 281.473 17.094 281.488 cv
17.125 281.508 17.148 281.543 17.168 281.586 cv
17.188 281.633 17.199 281.691 17.215 281.766 cv
17.223 281.844 17.23 281.937 17.23 282.043 cv
17.23 282.168 17.223 282.266 17.215 282.336 cv
17.199 282.414 17.188 282.473 17.168 282.516 cv
17.148 282.562 17.125 282.594 17.094 282.605 cv
17.07 282.625 17.035 282.633 16.988 282.629 cv
16.063 282.629 li
16.508 283.031 16.828 283.426 17.027 283.812 cv
17.23 284.207 17.328 284.602 17.332 284.996 cv
17.328 285.469 17.254 285.863 17.098 286.18 cv
16.945 286.5 16.734 286.758 16.465 286.953 cv
16.199 287.156 15.887 287.297 15.527 287.379 cv
15.172 287.469 14.738 287.512 14.23 287.508 cv
9.977 287.508 li
9.938 287.512 9.902 287.504 9.871 287.48 cv
9.844 287.465 9.82 287.43 9.793 287.375 cv
9.773 287.328 9.758 287.258 9.746 287.172 cv
9.742 287.09 9.738 286.988 9.734 286.859 cv
9.738 286.738 9.742 286.633 9.746 286.547 cv
9.758 286.465 9.773 286.398 9.793 286.352 cv
9.82 286.305 9.844 286.27 9.871 286.246 cv
9.902 286.227 9.938 286.219 9.977 286.215 cv
14.059 286.215 li
14.473 286.219 14.801 286.187 15.047 286.125 cv
15.293 286.066 15.504 285.977 15.676 285.852 cv
15.855 285.734 15.988 285.578 16.082 285.387 cv
16.18 285.203 16.23 284.984 16.227 284.734 cv
16.23 284.414 16.113 284.094 15.883 283.77 cv
15.656 283.453 15.32 283.113 14.875 282.754 cv
9.977 282.754 li
9.938 282.754 9.902 282.746 9.871 282.727 cv
9.844 282.711 9.82 282.676 9.793 282.621 cv
9.773 282.57 9.758 282.504 9.746 282.422 cv
9.742 282.344 9.738 282.238 9.734 282.105 cv
9.738 281.984 9.742 281.879 9.746 281.793 cv
9.758 281.711 9.773 281.648 9.793 281.602 cv
9.82 281.559 9.844 281.523 9.871 281.496 cv
9.902 281.477 9.938 281.465 9.977 281.461 cv
cp
f
16.988 268.684 mo
17.035 268.687 17.07 268.695 17.094 268.715 cv
17.125 268.738 17.148 268.773 17.168 268.816 cv
17.188 268.867 17.199 268.934 17.215 269.012 cv
17.223 269.098 17.23 269.199 17.23 269.324 cv
17.23 269.457 17.223 269.566 17.215 269.645 cv
17.199 269.73 17.188 269.797 17.168 269.844 cv
17.148 269.898 17.125 269.934 17.094 269.949 cv
17.07 269.973 17.035 269.98 16.988 269.98 cv
12.727 269.98 li
12.434 269.98 12.164 270.008 11.918 270.059 cv
11.676 270.113 11.465 270.195 11.285 270.309 cv
11.109 270.422 10.973 270.566 10.879 270.742 cv
10.785 270.922 10.738 271.133 10.738 271.367 cv
10.738 271.664 10.855 271.961 11.082 272.258 cv
11.316 272.562 11.648 272.891 12.086 273.246 cv
16.988 273.246 li
17.035 273.25 17.07 273.262 17.094 273.277 cv
17.125 273.301 17.148 273.332 17.168 273.379 cv
17.188 273.43 17.199 273.496 17.215 273.578 cv
17.223 273.664 17.23 273.77 17.23 273.891 cv
17.23 274.012 17.223 274.113 17.215 274.199 cv
17.199 274.285 17.188 274.355 17.168 274.402 cv
17.148 274.457 17.125 274.488 17.094 274.504 cv
17.07 274.523 17.035 274.535 16.988 274.531 cv
12.727 274.531 li
12.434 274.535 12.164 274.562 11.918 274.617 cv
11.676 274.676 11.465 274.762 11.285 274.875 cv
11.109 274.988 10.973 275.133 10.879 275.305 cv
10.785 275.484 10.738 275.691 10.738 275.926 cv
10.738 276.227 10.855 276.523 11.082 276.824 cv
11.316 277.125 11.648 277.453 12.086 277.805 cv
16.988 277.805 li
17.035 277.809 17.07 277.82 17.094 277.836 cv
17.125 277.859 17.148 277.891 17.168 277.937 cv
17.188 277.984 17.199 278.051 17.215 278.129 cv
17.223 278.215 17.23 278.32 17.23 278.449 cv
17.23 278.578 17.223 278.684 17.215 278.762 cv
17.199 278.848 17.188 278.914 17.168 278.961 cv
17.148 279.016 17.125 279.047 17.094 279.062 cv
17.07 279.082 17.035 279.094 16.988 279.09 cv
9.977 279.09 li
9.938 279.094 9.902 279.086 9.871 279.066 cv
9.844 279.055 9.82 279.023 9.793 278.973 cv
9.773 278.93 9.758 278.867 9.746 278.793 cv
9.742 278.723 9.738 278.629 9.734 278.504 cv
9.738 278.395 9.742 278.297 9.746 278.219 cv
9.758 278.145 9.773 278.086 9.793 278.043 cv
9.82 278.004 9.844 277.977 9.871 277.957 cv
9.902 277.941 9.938 277.934 9.977 277.93 cv
10.902 277.93 li
10.461 277.539 10.141 277.156 9.934 276.781 cv
9.73 276.414 9.625 276.035 9.625 275.652 cv
9.625 275.363 9.66 275.105 9.727 274.871 cv
9.797 274.645 9.891 274.437 10.012 274.258 cv
10.133 274.082 10.277 273.934 10.445 273.805 cv
10.617 273.684 10.809 273.578 11.012 273.492 cv
10.762 273.262 10.547 273.039 10.367 272.828 cv
10.195 272.617 10.051 272.414 9.938 272.219 cv
9.832 272.023 9.754 271.836 9.699 271.652 cv
9.652 271.469 9.625 271.281 9.625 271.094 cv
9.625 270.641 9.707 270.262 9.863 269.957 cv
10.027 269.652 10.238 269.406 10.5 269.211 cv
10.766 269.023 11.074 268.887 11.43 268.805 cv
11.785 268.727 12.16 268.687 12.555 268.684 cv
cp
f
13.371 259.883 mo
13.988 259.887 14.539 259.953 15.027 260.082 cv
15.516 260.219 15.93 260.414 16.27 260.668 cv
16.609 260.926 16.871 261.242 17.055 261.621 cv
17.238 262 17.328 262.434 17.332 262.922 cv
17.328 263.133 17.309 263.328 17.27 263.5 cv
17.227 263.68 17.164 263.852 17.074 264.016 cv
16.988 264.187 16.875 264.355 16.738 264.52 cv
16.605 264.691 16.449 264.867 16.266 265.051 cv
19.77 265.051 li
19.809 265.055 19.848 265.066 19.879 265.082 cv
19.91 265.105 19.934 265.137 19.957 265.184 cv
19.973 265.23 19.988 265.297 20.004 265.375 cv
20.012 265.461 20.02 265.566 20.02 265.695 cv
20.02 265.824 20.012 265.93 20.004 266.008 cv
19.988 266.094 19.973 266.16 19.957 266.207 cv
19.934 266.262 19.91 266.293 19.879 266.309 cv
19.848 266.328 19.809 266.34 19.77 266.336 cv
9.977 266.336 li
9.93 266.34 9.895 266.332 9.863 266.312 cv
9.84 266.301 9.813 266.27 9.789 266.219 cv
9.77 266.176 9.758 266.113 9.746 266.039 cv
9.742 265.969 9.738 265.883 9.734 265.773 cv
9.738 265.668 9.742 265.578 9.746 265.504 cv
9.758 265.437 9.77 265.379 9.789 265.328 cv
9.813 265.285 9.84 265.25 9.863 265.23 cv
9.895 265.215 9.93 265.207 9.977 265.203 cv
10.918 265.203 li
10.703 264.996 10.512 264.793 10.352 264.59 cv
10.191 264.395 10.059 264.195 9.949 263.992 cv
9.844 263.797 9.762 263.59 9.707 263.379 cv
9.652 263.168 9.625 262.945 9.625 262.711 cv
9.625 262.203 9.727 261.77 9.922 261.41 cv
10.121 261.051 10.391 260.762 10.73 260.535 cv
11.078 260.312 11.477 260.145 11.93 260.039 cv
12.387 259.937 12.867 259.887 13.371 259.883 cv
cp
13.52 261.215 mo
13.168 261.219 12.82 261.246 12.48 261.297 cv
12.148 261.355 11.852 261.449 11.59 261.582 cv
11.332 261.719 11.125 261.898 10.965 262.117 cv
10.813 262.344 10.734 262.621 10.73 262.957 cv
10.734 263.125 10.758 263.289 10.805 263.449 cv
10.855 263.613 10.934 263.781 11.039 263.945 cv
11.148 264.117 11.289 264.289 11.461 264.469 cv
11.637 264.652 11.852 264.848 12.102 265.051 cv
14.891 265.051 li
15.328 264.695 15.656 264.359 15.883 264.039 cv
16.113 263.723 16.23 263.387 16.227 263.035 cv
16.23 262.711 16.152 262.434 15.992 262.199 cv
15.84 261.973 15.629 261.785 15.367 261.637 cv
15.109 261.496 14.82 261.387 14.496 261.316 cv
14.176 261.25 13.852 261.219 13.52 261.215 cv
cp
f
16.473 254.391 mo
16.629 254.391 16.746 254.402 16.832 254.422 cv
16.922 254.445 16.988 254.477 17.027 254.516 cv
17.07 254.559 17.109 254.621 17.145 254.703 cv
17.18 254.789 17.207 254.883 17.234 254.988 cv
17.254 255.098 17.273 255.211 17.293 255.328 cv
17.305 255.445 17.313 255.566 17.316 255.684 cv
17.313 256.051 17.266 256.363 17.172 256.621 cv
17.078 256.883 16.934 257.094 16.734 257.258 cv
16.543 257.426 16.297 257.547 15.996 257.621 cv
15.699 257.699 15.348 257.738 14.938 257.734 cv
10.84 257.734 li
10.84 258.715 li
10.844 258.793 10.801 258.855 10.715 258.902 cv
10.633 258.949 10.5 258.973 10.309 258.973 cv
10.215 258.973 10.133 258.969 10.063 258.953 cv
10 258.945 9.941 258.926 9.895 258.902 cv
9.852 258.883 9.82 258.855 9.801 258.82 cv
9.785 258.789 9.777 258.754 9.773 258.707 cv
9.773 257.734 li
8.105 257.734 li
8.074 257.738 8.039 257.727 8.004 257.707 cv
7.977 257.691 7.949 257.66 7.922 257.605 cv
7.902 257.559 7.887 257.492 7.871 257.406 cv
7.863 257.328 7.855 257.223 7.855 257.094 cv
7.855 256.965 7.863 256.859 7.871 256.777 cv
7.887 256.695 7.902 256.629 7.922 256.582 cv
7.949 256.535 7.977 256.504 8.004 256.48 cv
8.039 256.465 8.074 256.453 8.105 256.449 cv
9.773 256.449 li
9.773 254.648 li
9.777 254.609 9.785 254.574 9.801 254.539 cv
9.82 254.512 9.852 254.484 9.895 254.457 cv
9.941 254.437 10 254.422 10.063 254.406 cv
10.133 254.398 10.215 254.391 10.309 254.391 cv
10.5 254.391 10.633 254.414 10.715 254.461 cv
10.801 254.508 10.844 254.57 10.84 254.648 cv
10.84 256.449 li
14.754 256.449 li
15.238 256.453 15.602 256.383 15.848 256.234 cv
16.098 256.094 16.223 255.836 16.219 255.465 cv
16.223 255.352 16.211 255.246 16.184 255.148 cv
16.164 255.059 16.141 254.977 16.109 254.898 cv
16.086 254.828 16.059 254.766 16.035 254.711 cv
16.012 254.664 16 254.617 16 254.57 cv
16 254.547 16.008 254.52 16.02 254.496 cv
16.035 254.473 16.059 254.457 16.094 254.441 cv
16.133 254.434 16.184 254.422 16.242 254.406 cv
16.309 254.398 16.387 254.391 16.473 254.391 cv
cp
f
16.988 251.375 mo
17.035 251.379 17.07 251.391 17.094 251.406 cv
17.125 251.43 17.148 251.461 17.168 251.508 cv
17.188 251.555 17.199 251.621 17.215 251.699 cv
17.223 251.785 17.23 251.891 17.23 252.02 cv
17.23 252.148 17.223 252.254 17.215 252.332 cv
17.199 252.418 17.188 252.484 17.168 252.531 cv
17.148 252.586 17.125 252.617 17.094 252.633 cv
17.07 252.652 17.035 252.664 16.988 252.66 cv
9.977 252.66 li
9.941 252.664 9.91 252.652 9.875 252.633 cv
9.848 252.617 9.82 252.586 9.797 252.531 cv
9.777 252.484 9.762 252.418 9.75 252.332 cv
9.742 252.254 9.738 252.148 9.734 252.02 cv
9.738 251.891 9.742 251.785 9.75 251.699 cv
9.762 251.621 9.777 251.555 9.797 251.508 cv
9.82 251.461 9.848 251.43 9.875 251.406 cv
9.91 251.391 9.941 251.379 9.977 251.375 cv
cp
7.605 251.227 mo
7.91 251.227 8.117 251.285 8.223 251.398 cv
8.336 251.512 8.391 251.723 8.387 252.027 cv
8.391 252.332 8.336 252.539 8.227 252.648 cv
8.121 252.766 7.918 252.82 7.621 252.816 cv
7.32 252.82 7.117 252.762 7.008 252.645 cv
6.902 252.531 6.848 252.32 6.844 252.012 cv
6.848 251.711 6.902 251.508 7.004 251.395 cv
7.113 251.285 7.313 251.227 7.605 251.227 cv
cp
f
13.402 242.434 mo
13.98 242.437 14.508 242.512 14.984 242.66 cv
15.469 242.812 15.883 243.039 16.227 243.336 cv
16.578 243.637 16.848 244.012 17.039 244.457 cv
17.234 244.91 17.328 245.43 17.332 246.02 cv
17.328 246.598 17.246 247.102 17.074 247.527 cv
16.906 247.957 16.656 248.312 16.328 248.598 cv
16 248.887 15.605 249.102 15.137 249.238 cv
14.672 249.379 14.141 249.445 13.543 249.445 cv
12.977 249.445 12.449 249.375 11.969 249.227 cv
11.488 249.082 11.074 248.855 10.723 248.555 cv
10.375 248.258 10.105 247.887 9.914 247.437 cv
9.723 246.992 9.625 246.469 9.625 245.871 cv
9.625 245.293 9.711 244.793 9.883 244.363 cv
10.055 243.937 10.305 243.578 10.633 243.293 cv
10.961 243.008 11.359 242.793 11.824 242.648 cv
12.293 242.508 12.82 242.437 13.402 242.434 cv
cp
13.488 243.766 mo
13.113 243.77 12.754 243.805 12.414 243.871 cv
12.078 243.945 11.785 244.062 11.527 244.223 cv
11.277 244.387 11.074 244.605 10.922 244.883 cv
10.777 245.164 10.703 245.512 10.699 245.922 cv
10.703 246.309 10.77 246.637 10.902 246.91 cv
11.039 247.187 11.23 247.414 11.477 247.59 cv
11.723 247.77 12.016 247.902 12.352 247.984 cv
12.691 248.074 13.059 248.117 13.457 248.113 cv
13.844 248.117 14.207 248.082 14.543 248.008 cv
14.883 247.941 15.176 247.824 15.426 247.656 cv
15.68 247.492 15.883 247.27 16.027 246.992 cv
16.18 246.715 16.254 246.367 16.25 245.953 cv
16.254 245.578 16.184 245.25 16.047 244.969 cv
15.914 244.691 15.727 244.465 15.477 244.285 cv
15.234 244.109 14.941 243.98 14.605 243.895 cv
14.27 243.812 13.898 243.77 13.488 243.766 cv
cp
f
16.988 234.508 mo
17.035 234.508 17.07 234.52 17.094 234.539 cv
17.125 234.562 17.148 234.598 17.168 234.641 cv
17.188 234.691 17.199 234.754 17.215 234.836 cv
17.223 234.918 17.23 235.023 17.23 235.145 cv
17.23 235.277 17.223 235.383 17.215 235.465 cv
17.199 235.551 17.188 235.617 17.168 235.66 cv
17.148 235.711 17.125 235.742 17.094 235.762 cv
17.07 235.785 17.035 235.797 16.988 235.793 cv
12.883 235.793 li
12.484 235.797 12.164 235.828 11.918 235.887 cv
11.676 235.953 11.465 236.043 11.285 236.16 cv
11.109 236.277 10.973 236.434 10.879 236.621 cv
10.785 236.816 10.738 237.035 10.738 237.281 cv
10.738 237.605 10.855 237.93 11.082 238.25 cv
11.316 238.574 11.648 238.91 12.086 239.262 cv
16.988 239.262 li
17.035 239.266 17.07 239.277 17.094 239.293 cv
17.125 239.316 17.148 239.348 17.168 239.395 cv
17.188 239.441 17.199 239.508 17.215 239.586 cv
17.223 239.672 17.23 239.777 17.23 239.906 cv
17.23 240.035 17.223 240.141 17.215 240.219 cv
17.199 240.305 17.188 240.371 17.168 240.418 cv
17.148 240.473 17.125 240.504 17.094 240.52 cv
17.07 240.539 17.035 240.551 16.988 240.547 cv
9.977 240.547 li
9.938 240.551 9.902 240.543 9.871 240.523 cv
9.844 240.512 9.82 240.48 9.793 240.43 cv
9.773 240.387 9.758 240.324 9.746 240.25 cv
9.742 240.18 9.738 240.086 9.734 239.961 cv
9.738 239.852 9.742 239.754 9.746 239.676 cv
9.758 239.602 9.773 239.543 9.793 239.5 cv
9.82 239.461 9.844 239.434 9.871 239.414 cv
9.902 239.398 9.938 239.391 9.977 239.387 cv
10.902 239.387 li
10.461 238.996 10.141 238.602 9.934 238.207 cv
9.73 237.816 9.625 237.418 9.625 237.016 cv
9.625 236.547 9.707 236.156 9.863 235.836 cv
10.027 235.52 10.238 235.258 10.5 235.059 cv
10.766 234.863 11.074 234.723 11.43 234.637 cv
11.785 234.551 12.215 234.508 12.711 234.508 cv
cp
f
6.445 225.668 mo
7.492 226.164 8.563 226.531 9.66 226.773 cv
10.762 227.016 11.867 227.137 12.977 227.137 cv
14.094 227.137 15.203 227.016 16.297 226.766 cv
17.395 226.523 18.465 226.16 19.52 225.684 cv
19.578 225.66 19.633 225.648 19.68 225.641 cv
19.723 225.641 19.758 225.656 19.789 225.691 cv
19.816 225.73 19.836 225.785 19.852 225.859 cv
19.859 225.937 19.867 226.043 19.871 226.168 cv
19.867 226.266 19.863 226.344 19.863 226.41 cv
19.855 226.48 19.848 226.539 19.832 226.586 cv
19.816 226.637 19.797 226.68 19.777 226.707 cv
19.754 226.742 19.73 226.766 19.707 226.777 cv
19.176 227.059 18.641 227.305 18.098 227.516 cv
17.555 227.734 17.004 227.914 16.445 228.055 cv
15.883 228.203 15.316 228.312 14.742 228.383 cv
14.168 228.461 13.586 228.496 13 228.492 cv
12.414 228.496 11.836 228.457 11.262 228.371 cv
10.691 228.293 10.125 228.176 9.559 228.027 cv
8.996 227.879 8.441 227.699 7.895 227.488 cv
7.352 227.277 6.809 227.039 6.273 226.77 cv
6.254 226.766 6.238 226.75 6.219 226.727 cv
6.207 226.703 6.191 226.672 6.172 226.629 cv
6.16 226.59 6.148 226.531 6.137 226.457 cv
6.133 226.387 6.129 226.293 6.125 226.176 cv
6.129 226.059 6.137 225.965 6.148 225.887 cv
6.168 225.816 6.188 225.758 6.211 225.715 cv
6.238 225.676 6.273 225.652 6.313 225.645 cv
6.359 225.641 6.402 225.648 6.445 225.668 cv
cp
f
16.965 216.773 mo
17.012 216.777 17.047 216.785 17.078 216.801 cv
17.113 216.82 17.141 216.855 17.16 216.906 cv
17.18 216.961 17.195 217.031 17.211 217.117 cv
17.223 217.207 17.23 217.32 17.23 217.461 cv
17.23 217.641 17.223 217.789 17.207 217.902 cv
17.191 218.02 17.164 218.105 17.121 218.16 cv
17.082 218.219 17.035 218.266 16.98 218.301 cv
11.938 222.012 li
16.98 222.012 li
17.02 222.016 17.055 222.023 17.086 222.043 cv
17.121 222.066 17.148 222.105 17.164 222.152 cv
17.184 222.207 17.195 222.273 17.211 222.359 cv
17.223 222.445 17.23 222.555 17.23 222.68 cv
17.23 222.809 17.223 222.914 17.211 223 cv
17.195 223.09 17.184 223.16 17.164 223.211 cv
17.148 223.266 17.121 223.301 17.086 223.32 cv
17.055 223.344 17.02 223.355 16.98 223.352 cv
7.301 223.352 li
7.262 223.355 7.227 223.344 7.191 223.32 cv
7.164 223.301 7.137 223.266 7.117 223.211 cv
7.102 223.16 7.086 223.09 7.07 223 cv
7.059 222.914 7.055 222.809 7.051 222.68 cv
7.055 222.555 7.059 222.445 7.07 222.359 cv
7.086 222.273 7.102 222.207 7.117 222.152 cv
7.137 222.105 7.164 222.066 7.191 222.043 cv
7.227 222.023 7.262 222.016 7.301 222.012 cv
11.781 222.012 li
7.301 218.441 li
7.258 218.414 7.219 218.379 7.184 218.332 cv
7.156 218.293 7.133 218.242 7.109 218.18 cv
7.094 218.125 7.078 218.051 7.066 217.961 cv
7.059 217.879 7.055 217.77 7.051 217.633 cv
7.055 217.5 7.059 217.391 7.07 217.305 cv
7.086 217.223 7.105 217.156 7.121 217.105 cv
7.145 217.059 7.168 217.023 7.199 217.004 cv
7.23 216.988 7.266 216.98 7.301 216.977 cv
7.371 216.98 7.438 216.996 7.504 217.027 cv
7.574 217.062 7.668 217.129 7.785 217.219 cv
11.781 220.562 li
16.566 216.961 li
16.707 216.875 16.797 216.82 16.844 216.801 cv
16.895 216.785 16.938 216.777 16.965 216.773 cv
cp
f
16.887 205.684 mo
16.961 205.707 17.02 205.738 17.063 205.777 cv
17.109 205.82 17.145 205.879 17.164 205.949 cv
17.188 206.027 17.199 206.117 17.215 206.219 cv
17.223 206.328 17.23 206.457 17.23 206.609 cv
17.23 206.773 17.223 206.91 17.215 207.02 cv
17.199 207.133 17.188 207.227 17.164 207.297 cv
17.145 207.375 17.109 207.43 17.063 207.461 cv
17.02 207.5 16.961 207.527 16.887 207.547 cv
9.273 209.66 li
9.273 209.672 li
16.887 211.621 li
16.961 211.641 17.02 211.664 17.063 211.699 cv
17.109 211.738 17.145 211.793 17.164 211.855 cv
17.188 211.926 17.199 212.012 17.215 212.117 cv
17.223 212.227 17.23 212.363 17.23 212.527 cv
17.23 212.699 17.223 212.84 17.215 212.953 cv
17.199 213.07 17.188 213.164 17.164 213.234 cv
17.145 213.309 17.109 213.367 17.063 213.402 cv
17.02 213.445 16.961 213.473 16.887 213.484 cv
7.574 216.148 li
7.457 216.184 7.363 216.199 7.293 216.199 cv
7.227 216.203 7.176 216.184 7.137 216.137 cv
7.102 216.094 7.078 216.023 7.066 215.926 cv
7.059 215.828 7.055 215.695 7.051 215.527 cv
7.055 215.367 7.059 215.238 7.063 215.145 cv
7.074 215.051 7.086 214.98 7.105 214.93 cv
7.129 214.883 7.16 214.848 7.191 214.828 cv
7.23 214.812 7.277 214.801 7.332 214.785 cv
15.781 212.52 li
15.781 212.512 li
7.348 210.359 li
7.293 210.348 7.246 210.328 7.203 210.301 cv
7.168 210.281 7.137 210.242 7.113 210.187 cv
7.094 210.137 7.078 210.062 7.066 209.965 cv
7.059 209.871 7.055 209.746 7.051 209.59 cv
7.055 209.445 7.059 209.332 7.066 209.242 cv
7.078 209.16 7.094 209.09 7.113 209.035 cv
7.137 208.984 7.168 208.945 7.203 208.922 cv
7.246 208.898 7.293 208.879 7.348 208.863 cv
15.781 206.547 li
15.781 206.535 li
7.34 204.312 li
7.289 204.301 7.246 204.285 7.203 204.266 cv
7.168 204.254 7.137 204.223 7.113 204.168 cv
7.094 204.121 7.078 204.051 7.066 203.957 cv
7.059 203.871 7.055 203.75 7.051 203.594 cv
7.055 203.445 7.059 203.32 7.07 203.227 cv
7.086 203.137 7.113 203.07 7.145 203.027 cv
7.184 202.988 7.234 202.969 7.301 202.969 cv
7.371 202.973 7.465 202.988 7.582 203.012 cv
cp
f
16.988 195.246 mo
17.035 195.246 17.07 195.258 17.094 195.277 cv
17.125 195.301 17.148 195.336 17.168 195.379 cv
17.188 195.43 17.199 195.492 17.215 195.574 cv
17.223 195.656 17.23 195.762 17.23 195.883 cv
17.23 196.016 17.223 196.121 17.215 196.203 cv
17.199 196.289 17.188 196.355 17.168 196.398 cv
17.148 196.449 17.125 196.48 17.094 196.5 cv
17.07 196.523 17.035 196.535 16.988 196.531 cv
12.883 196.531 li
12.484 196.535 12.164 196.566 11.918 196.625 cv
11.676 196.691 11.465 196.781 11.285 196.898 cv
11.109 197.016 10.973 197.172 10.879 197.359 cv
10.785 197.555 10.738 197.773 10.738 198.02 cv
10.738 198.344 10.855 198.668 11.082 198.988 cv
11.316 199.312 11.648 199.648 12.086 200 cv
16.988 200 li
17.035 200.004 17.07 200.016 17.094 200.031 cv
17.125 200.055 17.148 200.086 17.168 200.133 cv
17.188 200.18 17.199 200.246 17.215 200.324 cv
17.223 200.41 17.23 200.516 17.23 200.645 cv
17.23 200.773 17.223 200.879 17.215 200.957 cv
17.199 201.043 17.188 201.109 17.168 201.156 cv
17.148 201.211 17.125 201.242 17.094 201.258 cv
17.07 201.277 17.035 201.289 16.988 201.285 cv
6.578 201.285 li
6.539 201.289 6.504 201.277 6.469 201.258 cv
6.441 201.242 6.414 201.211 6.391 201.156 cv
6.371 201.109 6.355 201.043 6.344 200.957 cv
6.336 200.879 6.332 200.773 6.328 200.645 cv
6.332 200.516 6.336 200.41 6.344 200.324 cv
6.355 200.246 6.371 200.18 6.391 200.133 cv
6.414 200.086 6.441 200.055 6.469 200.031 cv
6.504 200.016 6.539 200.004 6.578 200 cv
10.777 200 li
10.391 199.633 10.102 199.262 9.91 198.887 cv
9.723 198.516 9.625 198.137 9.625 197.754 cv
9.625 197.285 9.707 196.895 9.863 196.574 cv
10.027 196.258 10.238 195.996 10.5 195.797 cv
10.766 195.602 11.074 195.461 11.43 195.375 cv
11.785 195.289 12.215 195.246 12.719 195.246 cv
cp
f
19.063 192.789 mo
19.129 192.812 19.184 192.84 19.223 192.871 cv
19.262 192.91 19.289 192.953 19.313 193 cv
19.328 193.055 19.344 193.117 19.359 193.191 cv
19.367 193.27 19.375 193.359 19.375 193.465 cv
19.375 193.598 19.363 193.707 19.348 193.789 cv
19.324 193.879 19.301 193.945 19.27 193.988 cv
19.234 194.039 19.191 194.066 19.145 194.074 cv
19.094 194.086 19.035 194.078 18.969 194.043 cv
6.039 189.328 li
5.973 189.309 5.922 189.281 5.879 189.246 cv
5.844 189.215 5.813 189.176 5.785 189.121 cv
5.766 189.074 5.75 189.008 5.738 188.93 cv
5.734 188.852 5.73 188.758 5.727 188.648 cv
5.73 188.523 5.738 188.418 5.754 188.332 cv
5.773 188.25 5.797 188.187 5.828 188.137 cv
5.859 188.094 5.902 188.062 5.953 188.051 cv
6.008 188.043 6.066 188.051 6.133 188.074 cv
cp
f
16.652 180.777 mo
16.754 180.781 16.836 180.789 16.902 180.801 cv
16.973 180.82 17.027 180.84 17.066 180.863 cv
17.109 180.891 17.141 180.922 17.156 180.953 cv
17.176 180.988 17.184 181.023 17.184 181.055 cv
17.184 186.324 li
17.184 186.363 17.176 186.398 17.156 186.426 cv
17.141 186.461 17.109 186.492 17.066 186.516 cv
17.027 186.547 16.973 186.566 16.902 186.582 cv
16.836 186.598 16.754 186.605 16.652 186.605 cv
16.563 186.605 16.484 186.598 16.414 186.582 cv
16.352 186.566 16.293 186.547 16.246 186.523 cv
16.203 186.5 16.172 186.473 16.145 186.437 cv
16.125 186.406 16.113 186.367 16.109 186.324 cv
16.109 184.219 li
8.441 184.219 li
9.602 186.168 li
9.656 186.27 9.688 186.348 9.695 186.406 cv
9.707 186.469 9.695 186.52 9.66 186.551 cv
9.629 186.59 9.574 186.613 9.492 186.625 cv
9.418 186.641 9.32 186.648 9.195 186.645 cv
9.109 186.648 9.031 186.645 8.969 186.633 cv
8.906 186.629 8.855 186.617 8.813 186.598 cv
8.773 186.586 8.738 186.562 8.703 186.531 cv
8.676 186.504 8.645 186.465 8.613 186.418 cv
7.121 184.098 li
7.109 184.078 7.094 184.055 7.082 184.02 cv
7.074 183.992 7.066 183.953 7.055 183.902 cv
7.047 183.859 7.039 183.805 7.035 183.738 cv
7.035 183.68 7.035 183.602 7.031 183.504 cv
7.035 183.383 7.039 183.277 7.047 183.191 cv
7.055 183.109 7.07 183.043 7.086 182.996 cv
7.109 182.949 7.133 182.918 7.156 182.902 cv
7.188 182.887 7.215 182.879 7.246 182.879 cv
16.109 182.879 li
16.109 181.055 li
16.113 181.016 16.125 180.977 16.145 180.941 cv
16.172 180.906 16.203 180.875 16.246 180.852 cv
16.293 180.828 16.352 180.812 16.414 180.797 cv
16.484 180.789 16.563 180.781 16.652 180.777 cv
cp
f
12.117 172.422 mo
12.895 172.422 13.602 172.484 14.238 172.605 cv
14.879 172.73 15.43 172.934 15.887 173.215 cv
16.348 173.5 16.703 173.871 16.953 174.324 cv
17.207 174.785 17.328 175.348 17.332 176.016 cv
17.328 176.652 17.219 177.187 16.992 177.617 cv
16.77 178.055 16.438 178.402 15.996 178.664 cv
15.559 178.934 15.02 179.121 14.375 179.23 cv
13.734 179.34 12.996 179.395 12.164 179.395 cv
11.398 179.395 10.695 179.336 10.051 179.211 cv
9.41 179.09 8.859 178.887 8.398 178.602 cv
7.941 178.324 7.586 177.953 7.332 177.496 cv
7.082 177.039 6.953 176.48 6.953 175.812 cv
6.953 175.176 7.066 174.637 7.293 174.203 cv
7.52 173.77 7.852 173.422 8.289 173.156 cv
8.727 172.895 9.27 172.707 9.91 172.59 cv
10.555 172.48 11.289 172.422 12.117 172.422 cv
cp
12.211 173.793 mo
11.711 173.793 11.258 173.812 10.855 173.848 cv
10.457 173.887 10.105 173.941 9.797 174.008 cv
9.492 174.082 9.227 174.172 9.004 174.281 cv
8.785 174.395 8.605 174.527 8.461 174.684 cv
8.32 174.84 8.215 175.02 8.148 175.215 cv
8.086 175.418 8.055 175.641 8.051 175.891 cv
8.055 176.332 8.16 176.691 8.363 176.965 cv
8.574 177.242 8.859 177.461 9.219 177.617 cv
9.586 177.777 10.012 177.883 10.5 177.937 cv
10.988 177.996 11.512 178.023 12.07 178.023 cv
12.828 178.023 13.469 177.984 13.996 177.906 cv
14.523 177.828 14.953 177.707 15.285 177.539 cv
15.617 177.371 15.859 177.156 16.008 176.891 cv
16.16 176.633 16.234 176.312 16.234 175.937 cv
16.234 175.648 16.188 175.395 16.094 175.168 cv
16 174.949 15.867 174.758 15.691 174.602 cv
15.52 174.445 15.313 174.316 15.066 174.207 cv
14.824 174.105 14.551 174.02 14.254 173.957 cv
13.957 173.895 13.637 173.852 13.293 173.828 cv
12.949 173.805 12.59 173.793 12.211 173.793 cv
cp
f
9.75 168.93 mo
9.891 168.934 9.984 168.949 10.031 168.977 cv
10.086 169.012 10.109 169.059 10.109 169.113 cv
10.109 171.293 li
10.109 171.359 10.086 171.406 10.031 171.434 cv
9.98 171.469 9.887 171.484 9.75 171.48 cv
9.621 171.484 9.527 171.469 9.473 171.434 cv
9.422 171.406 9.395 171.359 9.395 171.293 cv
9.395 169.113 li
9.395 169.09 9.402 169.062 9.41 169.039 cv
9.426 169.016 9.445 168.996 9.473 168.98 cv
9.504 168.965 9.539 168.953 9.582 168.945 cv
9.629 168.937 9.688 168.934 9.75 168.93 cv
cp
f
10.453 163.836 mo
10.766 163.84 11.043 163.895 11.293 164 cv
11.543 164.109 11.758 164.262 11.93 164.461 cv
12.109 164.664 12.246 164.914 12.34 165.207 cv
12.434 165.504 12.477 165.836 12.48 166.207 cv
12.477 166.437 12.457 166.648 12.426 166.844 cv
12.387 167.039 12.348 167.215 12.297 167.367 cv
12.25 167.52 12.199 167.645 12.141 167.746 cv
12.09 167.848 12.051 167.914 12.023 167.937 cv
12.004 167.969 11.98 167.988 11.953 167.996 cv
11.93 168.012 11.898 168.023 11.863 168.031 cv
11.828 168.047 11.785 168.055 11.734 168.055 cv
11.684 168.062 11.621 168.062 11.547 168.062 cv
11.426 168.062 11.34 168.051 11.289 168.027 cv
11.242 168.004 11.219 167.969 11.215 167.922 cv
11.219 167.891 11.246 167.828 11.301 167.73 cv
11.359 167.641 11.418 167.52 11.48 167.367 cv
11.543 167.223 11.605 167.051 11.66 166.848 cv
11.719 166.652 11.746 166.43 11.742 166.187 cv
11.746 165.953 11.715 165.746 11.652 165.566 cv
11.594 165.387 11.512 165.238 11.402 165.117 cv
11.301 164.996 11.172 164.906 11.02 164.844 cv
10.875 164.789 10.715 164.758 10.535 164.754 cv
10.348 164.758 10.176 164.797 10.023 164.871 cv
9.871 164.949 9.738 165.062 9.625 165.207 cv
9.516 165.359 9.43 165.543 9.371 165.758 cv
9.313 165.977 9.285 166.223 9.281 166.496 cv
9.281 167.16 li
9.285 167.191 9.277 167.223 9.262 167.246 cv
9.25 167.277 9.23 167.301 9.203 167.316 cv
9.176 167.34 9.141 167.355 9.094 167.363 cv
9.051 167.379 8.988 167.383 8.914 167.383 cv
8.852 167.383 8.797 167.379 8.75 167.367 cv
8.707 167.359 8.672 167.344 8.645 167.324 cv
8.621 167.305 8.605 167.285 8.59 167.258 cv
8.582 167.234 8.574 167.203 8.57 167.172 cv
8.57 166.582 li
8.574 166.355 8.547 166.148 8.484 165.965 cv
8.43 165.785 8.344 165.633 8.227 165.504 cv
8.117 165.379 7.984 165.281 7.828 165.211 cv
7.676 165.145 7.5 165.109 7.309 165.109 cv
7.172 165.109 7.039 165.133 6.91 165.176 cv
6.785 165.223 6.676 165.289 6.578 165.379 cv
6.488 165.473 6.414 165.59 6.359 165.727 cv
6.305 165.871 6.277 166.035 6.277 166.215 cv
6.277 166.418 6.309 166.602 6.367 166.77 cv
6.43 166.937 6.496 167.086 6.563 167.219 cv
6.637 167.352 6.703 167.465 6.762 167.551 cv
6.824 167.641 6.852 167.699 6.852 167.73 cv
6.852 167.758 6.848 167.781 6.84 167.797 cv
6.832 167.82 6.816 167.836 6.785 167.844 cv
6.762 167.859 6.723 167.867 6.676 167.867 cv
6.629 167.875 6.566 167.875 6.488 167.875 cv
6.438 167.875 6.395 167.875 6.352 167.871 cv
6.316 167.871 6.281 167.863 6.25 167.852 cv
6.223 167.844 6.195 167.832 6.168 167.816 cv
6.145 167.801 6.117 167.777 6.082 167.746 cv
6.051 167.715 6 167.648 5.938 167.543 cv
5.875 167.445 5.816 167.32 5.754 167.172 cv
5.695 167.023 5.641 166.855 5.598 166.66 cv
5.559 166.473 5.539 166.262 5.535 166.035 cv
5.539 165.723 5.578 165.449 5.656 165.211 cv
5.738 164.977 5.852 164.781 5.996 164.621 cv
6.145 164.465 6.32 164.344 6.52 164.266 cv
6.727 164.187 6.953 164.148 7.195 164.148 cv
7.41 164.148 7.605 164.18 7.785 164.234 cv
7.969 164.293 8.129 164.371 8.27 164.477 cv
8.41 164.586 8.531 164.719 8.633 164.875 cv
8.734 165.031 8.805 165.211 8.836 165.414 cv
8.848 165.414 li
8.875 165.184 8.934 164.973 9.023 164.777 cv
9.117 164.586 9.23 164.422 9.371 164.281 cv
9.512 164.145 9.676 164.035 9.859 163.953 cv
10.047 163.879 10.246 163.84 10.453 163.836 cv
cp
f
13 159.402 mo
13.586 159.402 14.168 159.441 14.742 159.512 cv
15.316 159.59 15.883 159.699 16.445 159.84 cv
17.004 159.988 17.555 160.164 18.098 160.375 cv
18.641 160.586 19.176 160.832 19.707 161.109 cv
19.73 161.129 19.754 161.152 19.777 161.18 cv
19.797 161.215 19.816 161.254 19.832 161.301 cv
19.848 161.352 19.855 161.41 19.863 161.477 cv
19.863 161.547 19.867 161.629 19.871 161.719 cv
19.867 161.855 19.859 161.961 19.852 162.035 cv
19.836 162.113 19.816 162.168 19.789 162.199 cv
19.758 162.234 19.723 162.25 19.68 162.246 cv
19.633 162.246 19.578 162.23 19.52 162.203 cv
18.469 161.727 17.398 161.367 16.301 161.121 cv
15.203 160.879 14.094 160.758 12.977 160.754 cv
11.867 160.758 10.762 160.879 9.66 161.121 cv
8.563 161.367 7.492 161.734 6.445 162.219 cv
6.402 162.242 6.359 162.25 6.313 162.242 cv
6.273 162.242 6.238 162.219 6.211 162.172 cv
6.188 162.133 6.168 162.074 6.148 162 cv
6.137 161.93 6.129 161.832 6.125 161.711 cv
6.129 161.602 6.133 161.512 6.137 161.437 cv
6.148 161.367 6.16 161.309 6.172 161.262 cv
6.191 161.219 6.207 161.187 6.219 161.164 cv
6.238 161.148 6.254 161.133 6.273 161.117 cv
7.34 160.586 8.438 160.164 9.559 159.859 cv
10.688 159.555 11.832 159.402 13 159.402 cv
cp
f
280.641 542.902 mo
280.637 543.008 280.621 543.098 280.586 543.168 cv
280.551 543.246 280.504 543.305 280.449 543.348 cv
280.391 543.398 280.328 543.434 280.262 543.449 cv
280.188 543.473 280.117 543.48 280.055 543.48 cv
279.609 543.48 li
279.469 543.48 279.348 543.469 279.242 543.437 cv
279.137 543.414 279.039 543.359 278.945 543.281 cv
278.852 543.207 278.758 543.105 278.664 542.973 cv
278.57 542.844 278.469 542.68 278.363 542.477 cv
275.289 536.738 li
275.125 536.445 274.961 536.137 274.801 535.809 cv
274.633 535.488 274.48 535.172 274.344 534.863 cv
274.328 534.863 li
274.336 535.238 274.344 535.621 274.352 536.008 cv
274.355 536.398 274.355 536.785 274.359 537.168 cv
274.359 543.254 li
274.355 543.293 274.344 543.328 274.324 543.359 cv
274.301 543.395 274.266 543.422 274.215 543.437 cv
274.16 543.457 274.09 543.469 274.008 543.484 cv
273.922 543.496 273.816 543.504 273.688 543.504 cv
273.551 543.504 273.441 543.496 273.359 543.484 cv
273.273 543.469 273.207 543.457 273.16 543.437 cv
273.109 543.422 273.074 543.395 273.051 543.359 cv
273.027 543.328 273.016 543.293 273.02 543.254 cv
273.02 533.949 li
273.016 533.742 273.074 533.594 273.195 533.504 cv
273.313 533.418 273.441 533.375 273.582 533.371 cv
274.242 533.371 li
274.395 533.375 274.527 533.387 274.633 533.41 cv
274.734 533.437 274.828 533.48 274.914 533.539 cv
274.996 533.602 275.074 533.684 275.156 533.789 cv
275.23 533.898 275.313 534.035 275.398 534.191 cv
277.766 538.617 li
277.91 538.891 278.051 539.156 278.188 539.41 cv
278.32 539.668 278.449 539.922 278.578 540.168 cv
278.699 540.422 278.824 540.668 278.949 540.906 cv
279.07 541.148 279.191 541.391 279.316 541.633 cv
279.324 541.633 li
279.313 541.227 279.305 540.797 279.305 540.352 cv
279.297 539.906 279.297 539.48 279.301 539.07 cv
279.301 533.598 li
279.297 533.562 279.309 533.527 279.332 533.496 cv
279.355 533.465 279.391 533.437 279.445 533.414 cv
279.492 533.391 279.563 533.375 279.648 533.363 cv
279.734 533.355 279.844 533.352 279.984 533.348 cv
280.102 533.352 280.207 533.355 280.297 533.363 cv
280.383 533.375 280.449 533.391 280.5 533.414 cv
280.547 533.437 280.582 533.465 280.605 533.496 cv
280.625 533.527 280.637 533.562 280.641 533.598 cv
cp
f
289.188 543.262 mo
289.184 543.309 289.176 543.344 289.16 543.367 cv
289.141 543.398 289.105 543.422 289.063 543.441 cv
289.016 543.461 288.957 543.473 288.883 543.488 cv
288.805 543.496 288.711 543.504 288.605 543.504 cv
288.48 543.504 288.383 543.496 288.313 543.488 cv
288.234 543.473 288.176 543.461 288.133 543.441 cv
288.086 543.422 288.055 543.398 288.043 543.367 cv
288.023 543.344 288.016 543.309 288.02 543.262 cv
288.02 542.336 li
287.617 542.781 287.223 543.102 286.836 543.301 cv
286.441 543.504 286.047 543.602 285.652 543.605 cv
285.18 543.602 284.785 543.527 284.469 543.371 cv
284.148 543.219 283.891 543.008 283.695 542.738 cv
283.492 542.473 283.352 542.16 283.27 541.801 cv
283.18 541.445 283.137 541.012 283.141 540.504 cv
283.141 536.25 li
283.137 536.211 283.145 536.176 283.168 536.145 cv
283.184 536.117 283.219 536.094 283.273 536.066 cv
283.32 536.047 283.391 536.031 283.477 536.02 cv
283.559 536.016 283.66 536.012 283.789 536.008 cv
283.91 536.012 284.016 536.016 284.102 536.02 cv
284.184 536.031 284.25 536.047 284.297 536.066 cv
284.344 536.094 284.379 536.117 284.402 536.145 cv
284.422 536.176 284.43 536.211 284.434 536.25 cv
284.434 540.332 li
284.43 540.746 284.461 541.074 284.523 541.32 cv
284.582 541.566 284.672 541.777 284.797 541.949 cv
284.914 542.129 285.07 542.262 285.262 542.355 cv
285.445 542.453 285.664 542.504 285.914 542.5 cv
286.234 542.504 286.555 542.387 286.879 542.156 cv
287.195 541.93 287.535 541.594 287.895 541.148 cv
287.895 536.25 li
287.895 536.211 287.902 536.176 287.922 536.145 cv
287.938 536.117 287.973 536.094 288.027 536.066 cv
288.078 536.047 288.145 536.031 288.227 536.02 cv
288.305 536.016 288.41 536.012 288.543 536.008 cv
288.664 536.012 288.77 536.016 288.855 536.02 cv
288.938 536.031 289 536.047 289.047 536.066 cv
289.09 536.094 289.125 536.117 289.152 536.145 cv
289.172 536.176 289.184 536.211 289.188 536.25 cv
cp
f
301.969 543.262 mo
301.965 543.309 301.957 543.344 301.938 543.367 cv
301.914 543.398 301.879 543.422 301.836 543.441 cv
301.785 543.461 301.719 543.473 301.641 543.488 cv
301.555 543.496 301.453 543.504 301.328 543.504 cv
301.195 543.504 301.086 543.496 301.008 543.488 cv
300.922 543.473 300.855 543.461 300.809 543.441 cv
300.754 543.422 300.719 543.398 300.703 543.367 cv
300.68 543.344 300.672 543.309 300.672 543.262 cv
300.672 539 li
300.672 538.707 300.645 538.437 300.594 538.191 cv
300.539 537.949 300.457 537.738 300.344 537.559 cv
300.23 537.383 300.086 537.246 299.91 537.152 cv
299.73 537.059 299.52 537.012 299.285 537.012 cv
298.988 537.012 298.691 537.129 298.395 537.355 cv
298.09 537.59 297.762 537.922 297.406 538.359 cv
297.406 543.262 li
297.402 543.309 297.391 543.344 297.375 543.367 cv
297.352 543.398 297.32 543.422 297.273 543.441 cv
297.223 543.461 297.156 543.473 297.074 543.488 cv
296.988 543.496 296.883 543.504 296.762 543.504 cv
296.641 543.504 296.539 543.496 296.453 543.488 cv
296.367 543.473 296.297 543.461 296.25 543.441 cv
296.195 543.422 296.164 543.398 296.148 543.367 cv
296.129 543.344 296.117 543.309 296.121 543.262 cv
296.121 539 li
296.117 538.707 296.09 538.437 296.035 538.191 cv
295.977 537.949 295.891 537.738 295.777 537.559 cv
295.664 537.383 295.52 537.246 295.348 537.152 cv
295.168 537.059 294.961 537.012 294.727 537.012 cv
294.426 537.012 294.129 537.129 293.828 537.355 cv
293.527 537.59 293.199 537.922 292.848 538.359 cv
292.848 543.262 li
292.844 543.309 292.832 543.344 292.816 543.367 cv
292.793 543.398 292.762 543.422 292.715 543.441 cv
292.668 543.461 292.602 543.473 292.523 543.488 cv
292.438 543.496 292.332 543.504 292.203 543.504 cv
292.074 543.504 291.969 543.496 291.891 543.488 cv
291.805 543.473 291.738 543.461 291.691 543.441 cv
291.637 543.422 291.605 543.398 291.59 543.367 cv
291.57 543.344 291.559 543.309 291.563 543.262 cv
291.563 536.25 li
291.559 536.211 291.566 536.176 291.586 536.145 cv
291.598 536.117 291.629 536.094 291.68 536.066 cv
291.723 536.047 291.785 536.031 291.859 536.02 cv
291.93 536.016 292.023 536.012 292.148 536.008 cv
292.258 536.012 292.355 536.016 292.434 536.02 cv
292.508 536.031 292.566 536.047 292.609 536.066 cv
292.648 536.094 292.676 536.117 292.695 536.145 cv
292.711 536.176 292.719 536.211 292.723 536.25 cv
292.723 537.176 li
293.113 536.734 293.496 536.414 293.871 536.207 cv
294.238 536.004 294.617 535.898 295 535.898 cv
295.289 535.898 295.547 535.934 295.781 536 cv
296.008 536.07 296.215 536.164 296.395 536.285 cv
296.57 536.406 296.719 536.551 296.848 536.719 cv
296.969 536.891 297.074 537.082 297.16 537.285 cv
297.391 537.035 297.613 536.82 297.824 536.641 cv
298.035 536.469 298.238 536.324 298.434 536.211 cv
298.629 536.105 298.816 536.027 299 535.973 cv
299.184 535.926 299.371 535.898 299.559 535.898 cv
300.012 535.898 300.391 535.98 300.695 536.137 cv
301 536.301 301.246 536.512 301.441 536.773 cv
301.629 537.039 301.766 537.348 301.848 537.703 cv
301.926 538.059 301.965 538.434 301.969 538.828 cv
cp
f
310.766 539.66 mo
310.762 540.27 310.695 540.82 310.566 541.305 cv
310.43 541.793 310.234 542.207 309.98 542.547 cv
309.723 542.891 309.406 543.152 309.035 543.332 cv
308.66 543.516 308.234 543.602 307.75 543.605 cv
307.523 543.602 307.316 543.582 307.129 543.539 cv
306.941 543.492 306.754 543.422 306.574 543.324 cv
306.387 543.227 306.207 543.102 306.027 542.949 cv
305.844 542.801 305.652 542.621 305.453 542.406 cv
305.453 543.262 li
305.453 543.309 305.441 543.344 305.422 543.371 cv
305.398 543.406 305.363 543.43 305.32 543.445 cv
305.27 543.461 305.211 543.473 305.145 543.488 cv
305.07 543.496 304.98 543.504 304.875 543.504 cv
304.766 543.504 304.68 543.496 304.609 543.488 cv
304.535 543.473 304.473 543.461 304.43 543.445 cv
304.379 543.43 304.348 543.406 304.336 543.371 cv
304.316 543.344 304.309 543.309 304.313 543.262 cv
304.313 532.852 li
304.309 532.812 304.32 532.777 304.34 532.742 cv
304.355 532.715 304.387 532.687 304.441 532.664 cv
304.488 532.645 304.555 532.629 304.641 532.617 cv
304.719 532.609 304.824 532.605 304.953 532.602 cv
305.082 532.605 305.188 532.609 305.273 532.617 cv
305.352 532.629 305.418 532.645 305.465 532.664 cv
305.512 532.687 305.543 532.715 305.566 532.742 cv
305.582 532.777 305.594 532.812 305.598 532.852 cv
305.598 537.051 li
305.805 536.84 306.008 536.66 306.203 536.516 cv
306.398 536.371 306.586 536.254 306.773 536.16 cv
306.957 536.074 307.145 536.008 307.336 535.961 cv
307.52 535.922 307.719 535.898 307.93 535.898 cv
308.434 535.898 308.867 536 309.234 536.203 cv
309.594 536.406 309.887 536.68 310.113 537.016 cv
310.336 537.359 310.504 537.758 310.609 538.215 cv
310.711 538.672 310.762 539.152 310.766 539.66 cv
cp
309.434 539.809 mo
309.43 539.453 309.402 539.105 309.352 538.766 cv
309.293 538.43 309.199 538.133 309.063 537.871 cv
308.926 537.613 308.746 537.402 308.523 537.242 cv
308.297 537.086 308.016 537.008 307.684 537.004 cv
307.516 537.008 307.352 537.031 307.191 537.074 cv
307.027 537.125 306.863 537.203 306.695 537.309 cv
306.527 537.422 306.352 537.562 306.176 537.73 cv
305.992 537.906 305.801 538.121 305.598 538.375 cv
305.598 541.172 li
305.953 541.605 306.293 541.937 306.617 542.16 cv
306.941 542.391 307.277 542.504 307.629 542.5 cv
307.949 542.504 308.227 542.426 308.461 542.266 cv
308.688 542.113 308.875 541.906 309.02 541.645 cv
309.164 541.391 309.27 541.102 309.336 540.781 cv
309.398 540.465 309.43 540.141 309.434 539.809 cv
cp
f
318.676 539.453 mo
318.672 539.656 318.621 539.797 318.523 539.883 cv
318.418 539.969 318.301 540.012 318.176 540.012 cv
313.559 540.012 li
313.555 540.402 313.594 540.754 313.676 541.066 cv
313.75 541.379 313.883 541.648 314.066 541.867 cv
314.246 542.094 314.48 542.266 314.777 542.383 cv
315.066 542.508 315.426 542.566 315.852 542.562 cv
316.184 542.566 316.48 542.539 316.742 542.48 cv
317.004 542.43 317.23 542.367 317.422 542.297 cv
317.609 542.23 317.766 542.172 317.891 542.113 cv
318.012 542.062 318.105 542.035 318.168 542.031 cv
318.203 542.035 318.234 542.043 318.266 542.059 cv
318.293 542.078 318.316 542.105 318.336 542.141 cv
318.348 542.18 318.359 542.23 318.371 542.293 cv
318.375 542.359 318.379 542.437 318.383 542.531 cv
318.379 542.602 318.375 542.66 318.375 542.707 cv
318.367 542.754 318.363 542.797 318.355 542.836 cv
318.348 542.875 318.332 542.91 318.316 542.941 cv
318.293 542.973 318.27 543.004 318.246 543.031 cv
318.215 543.062 318.133 543.109 317.992 543.172 cv
317.852 543.238 317.668 543.301 317.445 543.363 cv
317.219 543.426 316.961 543.48 316.668 543.531 cv
316.375 543.578 316.063 543.602 315.73 543.605 cv
315.152 543.602 314.645 543.523 314.215 543.363 cv
313.777 543.203 313.414 542.965 313.121 542.648 cv
312.82 542.332 312.598 541.937 312.449 541.457 cv
312.301 540.98 312.227 540.422 312.227 539.785 cv
312.227 539.187 312.301 538.648 312.457 538.164 cv
312.609 537.687 312.836 537.277 313.133 536.941 cv
313.426 536.605 313.781 536.348 314.195 536.168 cv
314.609 535.988 315.074 535.898 315.59 535.898 cv
316.141 535.898 316.609 535.988 316.996 536.164 cv
317.383 536.344 317.699 536.582 317.953 536.879 cv
318.199 537.18 318.383 537.531 318.5 537.93 cv
318.613 538.336 318.672 538.766 318.676 539.219 cv
cp
317.383 539.07 mo
317.398 538.395 317.246 537.863 316.93 537.48 cv
316.613 537.098 316.145 536.906 315.527 536.902 cv
315.203 536.906 314.922 536.965 314.684 537.082 cv
314.441 537.203 314.242 537.363 314.082 537.559 cv
313.918 537.758 313.793 537.988 313.707 538.25 cv
313.617 538.512 313.566 538.785 313.559 539.07 cv
cp
f
324.742 536.707 mo
324.738 536.824 324.738 536.922 324.734 536.996 cv
324.727 537.078 324.715 537.141 324.703 537.18 cv
324.684 537.227 324.664 537.258 324.645 537.281 cv
324.617 537.305 324.586 537.316 324.547 537.316 cv
324.504 537.316 324.453 537.305 324.395 537.281 cv
324.332 537.258 324.262 537.234 324.191 537.211 cv
324.113 537.187 324.031 537.168 323.938 537.145 cv
323.844 537.129 323.742 537.117 323.633 537.113 cv
323.5 537.117 323.371 537.145 323.25 537.191 cv
323.125 537.246 322.996 537.332 322.859 537.449 cv
322.719 537.574 322.574 537.73 322.426 537.926 cv
322.273 538.121 322.105 538.363 321.926 538.648 cv
321.926 543.262 li
321.922 543.309 321.91 543.344 321.895 543.367 cv
321.871 543.398 321.84 543.422 321.793 543.441 cv
321.746 543.461 321.68 543.473 321.602 543.488 cv
321.516 543.496 321.41 543.504 321.281 543.504 cv
321.152 543.504 321.047 543.496 320.969 543.488 cv
320.883 543.473 320.816 543.461 320.77 543.441 cv
320.715 543.422 320.684 543.398 320.668 543.367 cv
320.648 543.344 320.637 543.309 320.641 543.262 cv
320.641 536.25 li
320.637 536.211 320.645 536.176 320.664 536.145 cv
320.676 536.117 320.707 536.094 320.758 536.066 cv
320.801 536.047 320.863 536.031 320.938 536.02 cv
321.008 536.016 321.102 536.012 321.227 536.008 cv
321.336 536.012 321.434 536.016 321.512 536.02 cv
321.586 536.031 321.645 536.047 321.688 536.066 cv
321.727 536.094 321.754 536.117 321.773 536.145 cv
321.789 536.176 321.797 536.211 321.801 536.25 cv
321.801 537.27 li
321.988 536.988 322.172 536.762 322.344 536.586 cv
322.512 536.41 322.672 536.27 322.824 536.168 cv
322.973 536.066 323.121 535.996 323.27 535.957 cv
323.418 535.918 323.566 535.898 323.719 535.898 cv
323.785 535.898 323.863 535.902 323.949 535.91 cv
324.035 535.918 324.125 535.934 324.219 535.953 cv
324.313 535.977 324.395 536 324.473 536.023 cv
324.543 536.051 324.598 536.078 324.633 536.102 cv
324.66 536.133 324.68 536.156 324.695 536.176 cv
324.703 536.203 324.715 536.234 324.723 536.266 cv
324.73 536.305 324.734 536.355 324.738 536.426 cv
324.738 536.496 324.738 536.59 324.742 536.707 cv
cp
f
336.5 539.676 mo
336.496 540.254 336.422 540.781 336.273 541.258 cv
336.121 541.742 335.895 542.156 335.598 542.5 cv
335.297 542.852 334.922 543.121 334.477 543.312 cv
334.023 543.508 333.504 543.602 332.914 543.605 cv
332.336 543.602 331.832 543.52 331.406 543.348 cv
330.977 543.18 330.621 542.93 330.336 542.602 cv
330.047 542.273 329.832 541.879 329.695 541.41 cv
329.555 540.945 329.488 540.414 329.488 539.816 cv
329.488 539.25 329.559 538.723 329.707 538.242 cv
329.852 537.762 330.078 537.348 330.379 536.996 cv
330.676 536.648 331.047 536.379 331.496 536.187 cv
331.941 535.996 332.465 535.898 333.063 535.898 cv
333.641 535.898 334.141 535.984 334.57 536.156 cv
334.996 536.328 335.355 536.578 335.641 536.906 cv
335.926 537.234 336.141 537.633 336.285 538.098 cv
336.426 538.566 336.496 539.094 336.5 539.676 cv
cp
335.168 539.762 mo
335.164 539.387 335.129 539.027 335.063 538.687 cv
334.988 538.352 334.871 538.059 334.711 537.801 cv
334.547 537.551 334.328 537.348 334.051 537.195 cv
333.77 537.051 333.422 536.977 333.012 536.973 cv
332.625 536.977 332.297 537.043 332.023 537.176 cv
331.746 537.312 331.52 537.504 331.344 537.75 cv
331.164 537.996 331.031 538.289 330.949 538.625 cv
330.859 538.965 330.816 539.332 330.82 539.73 cv
330.816 540.117 330.852 540.48 330.926 540.816 cv
330.992 541.156 331.109 541.449 331.277 541.699 cv
331.441 541.953 331.664 542.156 331.941 542.301 cv
332.219 542.453 332.566 542.527 332.98 542.523 cv
333.355 542.527 333.684 542.457 333.965 542.32 cv
334.242 542.187 334.469 542 334.648 541.75 cv
334.824 541.508 334.953 541.215 335.039 540.879 cv
335.121 540.543 335.164 540.172 335.168 539.762 cv
cp
f
342.23 533.363 mo
342.227 533.465 342.223 533.543 342.215 533.602 cv
342.203 533.664 342.191 533.715 342.18 533.746 cv
342.164 533.785 342.148 533.809 342.129 533.82 cv
342.105 533.836 342.078 533.844 342.051 533.84 cv
342.012 533.844 341.965 533.832 341.914 533.805 cv
341.855 533.785 341.789 533.758 341.715 533.727 cv
341.633 533.699 341.543 533.672 341.438 533.648 cv
341.328 533.625 341.203 533.613 341.07 533.613 cv
340.875 533.613 340.711 533.645 340.578 533.707 cv
340.438 533.77 340.328 533.867 340.25 534 cv
340.164 534.133 340.105 534.305 340.07 534.516 cv
340.031 534.727 340.012 534.984 340.016 535.281 cv
340.016 536.047 li
341.582 536.047 li
341.621 536.051 341.656 536.059 341.688 536.074 cv
341.715 536.094 341.742 536.125 341.766 536.168 cv
341.789 536.215 341.805 536.273 341.82 536.336 cv
341.828 536.406 341.836 536.488 341.84 536.582 cv
341.836 536.773 341.813 536.906 341.77 536.988 cv
341.719 537.074 341.656 537.117 341.582 537.113 cv
340.016 537.113 li
340.016 543.262 li
340.012 543.309 340.004 543.344 339.984 543.367 cv
339.961 543.398 339.926 543.422 339.879 543.441 cv
339.828 543.461 339.762 543.473 339.68 543.488 cv
339.594 543.496 339.488 543.504 339.371 543.504 cv
339.242 543.504 339.141 543.496 339.059 543.488 cv
338.973 543.473 338.906 543.461 338.859 543.441 cv
338.809 543.422 338.773 543.398 338.754 543.367 cv
338.73 543.344 338.719 543.309 338.723 543.262 cv
338.723 537.113 li
337.734 537.113 li
337.648 537.117 337.586 537.074 337.547 536.988 cv
337.504 536.906 337.48 536.773 337.484 536.582 cv
337.48 536.488 337.488 536.406 337.5 536.336 cv
337.508 536.273 337.523 536.215 337.547 536.168 cv
337.566 536.125 337.59 536.094 337.625 536.074 cv
337.652 536.059 337.691 536.051 337.734 536.047 cv
338.723 536.047 li
338.723 535.32 li
338.719 534.836 338.766 534.418 338.859 534.062 cv
338.949 533.715 339.086 533.426 339.273 533.203 cv
339.457 532.98 339.691 532.816 339.98 532.707 cv
340.262 532.602 340.598 532.547 340.984 532.547 cv
341.16 532.547 341.336 532.566 341.512 532.598 cv
341.68 532.637 341.813 532.672 341.91 532.707 cv
342 532.75 342.063 532.785 342.098 532.812 cv
342.125 532.848 342.152 532.887 342.176 532.934 cv
342.195 532.984 342.207 533.047 342.219 533.113 cv
342.223 533.187 342.227 533.27 342.23 533.363 cv
cp
f
352.43 540.629 mo
352.426 541.102 352.34 541.523 352.168 541.891 cv
351.992 542.266 351.75 542.578 351.441 542.832 cv
351.133 543.09 350.77 543.281 350.352 543.41 cv
349.93 543.539 349.48 543.602 349 543.605 cv
348.66 543.602 348.344 543.574 348.059 543.52 cv
347.77 543.461 347.516 543.395 347.289 543.309 cv
347.063 543.23 346.871 543.145 346.719 543.051 cv
346.563 542.965 346.457 542.887 346.398 542.824 cv
346.34 542.762 346.297 542.684 346.27 542.59 cv
346.238 542.496 346.223 542.367 346.227 542.203 cv
346.223 542.09 346.227 541.996 346.242 541.918 cv
346.25 541.844 346.266 541.781 346.289 541.734 cv
346.305 541.687 346.332 541.656 346.367 541.637 cv
346.395 541.621 346.43 541.613 346.473 541.609 cv
346.543 541.613 346.645 541.656 346.781 541.742 cv
346.91 541.832 347.082 541.93 347.293 542.031 cv
347.5 542.141 347.75 542.238 348.043 542.324 cv
348.336 542.418 348.676 542.461 349.063 542.461 cv
349.352 542.461 349.617 542.422 349.859 542.344 cv
350.098 542.266 350.305 542.156 350.484 542.012 cv
350.656 541.871 350.793 541.695 350.887 541.484 cv
350.98 541.277 351.027 541.043 351.027 540.777 cv
351.027 540.496 350.961 540.25 350.832 540.043 cv
350.699 539.844 350.527 539.668 350.316 539.512 cv
350.102 539.363 349.859 539.223 349.586 539.09 cv
349.313 538.965 349.031 538.832 348.75 538.699 cv
348.461 538.566 348.184 538.422 347.914 538.258 cv
347.645 538.102 347.402 537.91 347.191 537.691 cv
346.973 537.473 346.801 537.219 346.672 536.922 cv
346.535 536.633 346.469 536.281 346.473 535.867 cv
346.469 535.449 346.547 535.074 346.703 534.742 cv
346.855 534.414 347.066 534.137 347.344 533.91 cv
347.613 533.691 347.938 533.52 348.316 533.402 cv
348.691 533.285 349.102 533.227 349.539 533.227 cv
349.758 533.227 349.98 533.246 350.211 533.285 cv
350.434 533.324 350.645 533.375 350.848 533.437 cv
351.043 533.504 351.223 533.578 351.383 533.656 cv
351.535 533.738 351.637 533.805 351.691 533.852 cv
351.738 533.906 351.773 533.945 351.789 533.969 cv
351.805 534 351.816 534.035 351.828 534.078 cv
351.836 534.125 351.844 534.18 351.852 534.238 cv
351.855 534.305 351.859 534.383 351.859 534.48 cv
351.859 534.574 351.855 534.66 351.848 534.73 cv
351.84 534.809 351.828 534.867 351.813 534.914 cv
351.797 534.961 351.773 534.996 351.746 535.02 cv
351.715 535.043 351.684 535.055 351.648 535.055 cv
351.59 535.055 351.5 535.02 351.379 534.949 cv
351.254 534.879 351.102 534.797 350.93 534.703 cv
350.75 534.613 350.543 534.531 350.305 534.453 cv
350.059 534.379 349.789 534.34 349.492 534.34 cv
349.211 534.34 348.965 534.379 348.758 534.453 cv
348.547 534.531 348.375 534.633 348.242 534.754 cv
348.105 534.879 348.004 535.023 347.938 535.195 cv
347.871 535.367 347.84 535.551 347.84 535.742 cv
347.84 536.027 347.902 536.27 348.031 536.469 cv
348.16 536.672 348.332 536.852 348.551 537.004 cv
348.762 537.164 349.008 537.305 349.285 537.434 cv
349.559 537.566 349.84 537.699 350.129 537.828 cv
350.414 537.961 350.695 538.105 350.969 538.262 cv
351.242 538.422 351.488 538.609 351.707 538.824 cv
351.922 539.043 352.094 539.297 352.23 539.59 cv
352.359 539.883 352.426 540.23 352.43 540.629 cv
cp
f
360.195 543.262 mo
360.191 543.309 360.184 543.344 360.168 543.367 cv
360.148 543.398 360.113 543.422 360.07 543.441 cv
360.023 543.461 359.965 543.473 359.891 543.488 cv
359.813 543.496 359.719 543.504 359.613 543.504 cv
359.488 543.504 359.391 543.496 359.32 543.488 cv
359.242 543.473 359.184 543.461 359.141 543.441 cv
359.094 543.422 359.063 543.398 359.051 543.367 cv
359.031 543.344 359.023 543.309 359.027 543.262 cv
359.027 542.336 li
358.625 542.781 358.23 543.102 357.844 543.301 cv
357.449 543.504 357.055 543.602 356.66 543.605 cv
356.188 543.602 355.793 543.527 355.477 543.371 cv
355.156 543.219 354.898 543.008 354.703 542.738 cv
354.5 542.473 354.359 542.16 354.277 541.801 cv
354.188 541.445 354.145 541.012 354.148 540.504 cv
354.148 536.25 li
354.145 536.211 354.152 536.176 354.176 536.145 cv
354.191 536.117 354.227 536.094 354.281 536.066 cv
354.328 536.047 354.398 536.031 354.484 536.02 cv
354.566 536.016 354.668 536.012 354.797 536.008 cv
354.918 536.012 355.023 536.016 355.109 536.02 cv
355.191 536.031 355.258 536.047 355.305 536.066 cv
355.352 536.094 355.387 536.117 355.41 536.145 cv
355.43 536.176 355.438 536.211 355.441 536.25 cv
355.441 540.332 li
355.438 540.746 355.469 541.074 355.531 541.32 cv
355.59 541.566 355.68 541.777 355.805 541.949 cv
355.922 542.129 356.078 542.262 356.27 542.355 cv
356.453 542.453 356.672 542.504 356.922 542.5 cv
357.242 542.504 357.563 542.387 357.887 542.156 cv
358.203 541.93 358.543 541.594 358.902 541.148 cv
358.902 536.25 li
358.902 536.211 358.91 536.176 358.93 536.145 cv
358.945 536.117 358.98 536.094 359.035 536.066 cv
359.086 536.047 359.152 536.031 359.234 536.02 cv
359.313 536.016 359.418 536.012 359.551 536.008 cv
359.672 536.012 359.777 536.016 359.863 536.02 cv
359.945 536.031 360.008 536.047 360.055 536.066 cv
360.098 536.094 360.133 536.117 360.16 536.145 cv
360.18 536.176 360.191 536.211 360.195 536.25 cv
cp
f
369.051 539.66 mo
369.047 540.27 368.98 540.82 368.852 541.305 cv
368.715 541.793 368.52 542.207 368.266 542.547 cv
368.008 542.891 367.691 543.152 367.32 543.332 cv
366.945 543.516 366.52 543.602 366.035 543.605 cv
365.809 543.602 365.602 543.582 365.414 543.539 cv
365.227 543.492 365.039 543.422 364.859 543.324 cv
364.672 543.227 364.492 543.102 364.313 542.949 cv
364.129 542.801 363.938 542.621 363.738 542.406 cv
363.738 543.262 li
363.738 543.309 363.727 543.344 363.707 543.371 cv
363.684 543.406 363.648 543.43 363.605 543.445 cv
363.555 543.461 363.496 543.473 363.43 543.488 cv
363.355 543.496 363.266 543.504 363.16 543.504 cv
363.051 543.504 362.965 543.496 362.895 543.488 cv
362.82 543.473 362.758 543.461 362.715 543.445 cv
362.664 543.43 362.633 543.406 362.621 543.371 cv
362.602 543.344 362.594 543.309 362.598 543.262 cv
362.598 532.852 li
362.594 532.812 362.605 532.777 362.625 532.742 cv
362.641 532.715 362.672 532.687 362.727 532.664 cv
362.773 532.645 362.84 532.629 362.926 532.617 cv
363.004 532.609 363.109 532.605 363.238 532.602 cv
363.367 532.605 363.473 532.609 363.559 532.617 cv
363.637 532.629 363.703 532.645 363.75 532.664 cv
363.797 532.687 363.828 532.715 363.852 532.742 cv
363.867 532.777 363.879 532.812 363.883 532.852 cv
363.883 537.051 li
364.09 536.84 364.293 536.66 364.488 536.516 cv
364.684 536.371 364.871 536.254 365.059 536.16 cv
365.242 536.074 365.43 536.008 365.621 535.961 cv
365.805 535.922 366.004 535.898 366.215 535.898 cv
366.719 535.898 367.152 536 367.52 536.203 cv
367.879 536.406 368.172 536.68 368.398 537.016 cv
368.621 537.359 368.789 537.758 368.895 538.215 cv
368.996 538.672 369.047 539.152 369.051 539.66 cv
cp
367.719 539.809 mo
367.715 539.453 367.688 539.105 367.637 538.766 cv
367.578 538.43 367.484 538.133 367.348 537.871 cv
367.211 537.613 367.031 537.402 366.809 537.242 cv
366.582 537.086 366.301 537.008 365.969 537.004 cv
365.801 537.008 365.637 537.031 365.477 537.074 cv
365.313 537.125 365.148 537.203 364.98 537.309 cv
364.813 537.422 364.637 537.562 364.461 537.73 cv
364.277 537.906 364.086 538.121 363.883 538.375 cv
363.883 541.172 li
364.238 541.605 364.578 541.937 364.902 542.16 cv
365.227 542.391 365.563 542.504 365.914 542.5 cv
366.234 542.504 366.512 542.426 366.746 542.266 cv
366.973 542.113 367.16 541.906 367.305 541.645 cv
367.449 541.391 367.555 541.102 367.621 540.781 cv
367.684 540.465 367.715 540.141 367.719 539.809 cv
cp
f
374.207 539.523 mo
374.207 539.727 374.184 539.863 374.137 539.941 cv
374.09 540.02 374.02 540.059 373.934 540.059 cv
370.676 540.059 li
370.582 540.059 370.516 540.02 370.469 539.937 cv
370.422 539.859 370.398 539.723 370.398 539.523 cv
370.398 539.328 370.422 539.187 370.469 539.109 cv
370.516 539.031 370.582 538.992 370.676 538.992 cv
373.934 538.992 li
373.973 538.992 374.012 539 374.047 539.016 cv
374.078 539.031 374.105 539.062 374.133 539.105 cv
374.152 539.152 374.172 539.207 374.188 539.273 cv
374.199 539.344 374.207 539.43 374.207 539.523 cv
cp
f
377.461 543.254 mo
377.457 543.297 377.449 543.332 377.43 543.363 cv
377.406 543.395 377.367 543.422 377.32 543.437 cv
377.266 543.457 377.199 543.469 377.113 543.484 cv
377.027 543.496 376.918 543.504 376.793 543.504 cv
376.664 543.504 376.559 543.496 376.473 543.484 cv
376.383 543.469 376.313 543.457 376.262 543.437 cv
376.207 543.422 376.172 543.395 376.152 543.363 cv
376.129 543.332 376.117 543.297 376.121 543.254 cv
376.121 533.574 li
376.117 533.535 376.129 533.5 376.156 533.465 cv
376.176 533.437 376.215 533.41 376.273 533.391 cv
376.324 533.375 376.395 533.359 376.484 533.344 cv
376.566 533.332 376.668 533.328 376.793 533.324 cv
376.918 533.328 377.027 533.332 377.113 533.344 cv
377.199 533.359 377.266 533.375 377.32 533.391 cv
377.367 533.41 377.406 533.437 377.43 533.465 cv
377.449 533.5 377.457 533.535 377.461 533.574 cv
cp
f
390.449 543.262 mo
390.445 543.309 390.438 543.344 390.418 543.367 cv
390.395 543.398 390.359 543.422 390.316 543.441 cv
390.266 543.461 390.199 543.473 390.121 543.488 cv
390.035 543.496 389.934 543.504 389.809 543.504 cv
389.676 543.504 389.566 543.496 389.488 543.488 cv
389.402 543.473 389.336 543.461 389.289 543.441 cv
389.234 543.422 389.199 543.398 389.184 543.367 cv
389.16 543.344 389.152 543.309 389.152 543.262 cv
389.152 539 li
389.152 538.707 389.125 538.437 389.074 538.191 cv
389.02 537.949 388.938 537.738 388.824 537.559 cv
388.711 537.383 388.566 537.246 388.391 537.152 cv
388.211 537.059 388 537.012 387.766 537.012 cv
387.469 537.012 387.172 537.129 386.875 537.355 cv
386.57 537.59 386.242 537.922 385.887 538.359 cv
385.887 543.262 li
385.883 543.309 385.871 543.344 385.855 543.367 cv
385.832 543.398 385.801 543.422 385.754 543.441 cv
385.703 543.461 385.637 543.473 385.555 543.488 cv
385.469 543.496 385.363 543.504 385.242 543.504 cv
385.121 543.504 385.02 543.496 384.934 543.488 cv
384.848 543.473 384.777 543.461 384.73 543.441 cv
384.676 543.422 384.645 543.398 384.629 543.367 cv
384.609 543.344 384.598 543.309 384.602 543.262 cv
384.602 539 li
384.598 538.707 384.57 538.437 384.516 538.191 cv
384.457 537.949 384.371 537.738 384.258 537.559 cv
384.145 537.383 384 537.246 383.828 537.152 cv
383.648 537.059 383.441 537.012 383.207 537.012 cv
382.906 537.012 382.609 537.129 382.309 537.355 cv
382.008 537.59 381.68 537.922 381.328 538.359 cv
381.328 543.262 li
381.324 543.309 381.313 543.344 381.297 543.367 cv
381.273 543.398 381.242 543.422 381.195 543.441 cv
381.148 543.461 381.082 543.473 381.004 543.488 cv
380.918 543.496 380.813 543.504 380.684 543.504 cv
380.555 543.504 380.449 543.496 380.371 543.488 cv
380.285 543.473 380.219 543.461 380.172 543.441 cv
380.117 543.422 380.086 543.398 380.07 543.367 cv
380.051 543.344 380.039 543.309 380.043 543.262 cv
380.043 536.25 li
380.039 536.211 380.047 536.176 380.066 536.145 cv
380.078 536.117 380.109 536.094 380.16 536.066 cv
380.203 536.047 380.266 536.031 380.34 536.02 cv
380.41 536.016 380.504 536.012 380.629 536.008 cv
380.738 536.012 380.836 536.016 380.914 536.02 cv
380.988 536.031 381.047 536.047 381.09 536.066 cv
381.129 536.094 381.156 536.117 381.176 536.145 cv
381.191 536.176 381.199 536.211 381.203 536.25 cv
381.203 537.176 li
381.594 536.734 381.977 536.414 382.352 536.207 cv
382.719 536.004 383.098 535.898 383.48 535.898 cv
383.77 535.898 384.027 535.934 384.262 536 cv
384.488 536.07 384.695 536.164 384.875 536.285 cv
385.051 536.406 385.199 536.551 385.328 536.719 cv
385.449 536.891 385.555 537.082 385.641 537.285 cv
385.871 537.035 386.094 536.82 386.305 536.641 cv
386.516 536.469 386.719 536.324 386.914 536.211 cv
387.109 536.105 387.297 536.027 387.48 535.973 cv
387.664 535.926 387.852 535.898 388.039 535.898 cv
388.492 535.898 388.871 535.98 389.176 536.137 cv
389.48 536.301 389.727 536.512 389.922 536.773 cv
390.109 537.039 390.246 537.348 390.328 537.703 cv
390.406 538.059 390.445 538.434 390.449 538.828 cv
cp
f
398.078 543.27 mo
398.074 543.332 398.055 543.379 398.016 543.41 cv
397.973 543.441 397.914 543.465 397.844 543.48 cv
397.766 543.496 397.66 543.504 397.523 543.504 cv
397.387 543.504 397.277 543.496 397.199 543.48 cv
397.113 543.465 397.055 543.441 397.023 543.41 cv
396.984 543.379 396.969 543.332 396.973 543.27 cv
396.973 542.57 li
396.664 542.898 396.32 543.152 395.945 543.332 cv
395.566 543.516 395.168 543.602 394.75 543.605 cv
394.375 543.602 394.043 543.555 393.746 543.461 cv
393.449 543.363 393.195 543.227 392.984 543.043 cv
392.773 542.863 392.609 542.641 392.492 542.375 cv
392.375 542.113 392.316 541.812 392.32 541.469 cv
392.316 541.078 392.395 540.734 392.559 540.441 cv
392.715 540.152 392.949 539.91 393.254 539.719 cv
393.555 539.527 393.922 539.383 394.359 539.285 cv
394.793 539.191 395.285 539.145 395.832 539.141 cv
396.801 539.141 li
396.801 538.594 li
396.797 538.324 396.77 538.086 396.715 537.879 cv
396.656 537.672 396.563 537.5 396.438 537.359 cv
396.305 537.223 396.141 537.117 395.941 537.047 cv
395.734 536.977 395.484 536.941 395.195 536.941 cv
394.875 536.941 394.59 536.98 394.34 537.055 cv
394.082 537.133 393.863 537.215 393.676 537.305 cv
393.488 537.398 393.328 537.484 393.203 537.555 cv
393.07 537.633 392.977 537.668 392.918 537.668 cv
392.875 537.668 392.84 537.66 392.809 537.637 cv
392.777 537.621 392.75 537.59 392.727 537.543 cv
392.703 537.504 392.684 537.449 392.676 537.383 cv
392.66 537.32 392.656 537.25 392.66 537.168 cv
392.656 537.043 392.664 536.937 392.688 536.859 cv
392.703 536.785 392.75 536.715 392.82 536.645 cv
392.891 536.578 393.012 536.5 393.184 536.41 cv
393.355 536.32 393.551 536.238 393.773 536.16 cv
393.996 536.09 394.242 536.027 394.508 535.973 cv
394.773 535.926 395.039 535.898 395.313 535.898 cv
395.813 535.898 396.242 535.957 396.594 536.07 cv
396.945 536.187 397.23 536.355 397.453 536.574 cv
397.668 536.797 397.828 537.07 397.93 537.395 cv
398.027 537.727 398.074 538.109 398.078 538.539 cv
cp
396.801 540.066 mo
395.699 540.066 li
395.344 540.07 395.039 540.102 394.781 540.156 cv
394.52 540.219 394.305 540.305 394.133 540.422 cv
393.961 540.539 393.836 540.68 393.758 540.844 cv
393.676 541.008 393.633 541.195 393.637 541.406 cv
393.633 541.773 393.75 542.066 393.98 542.277 cv
394.211 542.496 394.535 542.602 394.953 542.602 cv
395.289 542.602 395.602 542.516 395.891 542.344 cv
396.18 542.172 396.48 541.91 396.801 541.555 cv
cp
f
406.297 536.566 mo
406.293 536.75 406.27 536.883 406.223 536.961 cv
406.172 537.043 406.109 537.082 406.035 537.082 cv
405.027 537.082 li
405.207 537.27 405.336 537.477 405.41 537.703 cv
405.48 537.93 405.516 538.164 405.52 538.406 cv
405.516 538.812 405.449 539.172 405.324 539.484 cv
405.191 539.797 405.008 540.062 404.766 540.273 cv
404.523 540.492 404.234 540.656 403.906 540.77 cv
403.57 540.887 403.203 540.945 402.801 540.941 cv
402.512 540.945 402.238 540.906 401.984 540.828 cv
401.723 540.754 401.527 540.66 401.391 540.543 cv
401.297 540.641 401.219 540.746 401.16 540.863 cv
401.098 540.984 401.066 541.121 401.07 541.273 cv
401.066 541.457 401.152 541.609 401.324 541.727 cv
401.492 541.852 401.715 541.914 401.996 541.922 cv
403.828 542 li
404.176 542.012 404.492 542.059 404.785 542.145 cv
405.074 542.23 405.328 542.355 405.543 542.512 cv
405.754 542.672 405.922 542.863 406.043 543.094 cv
406.16 543.328 406.219 543.598 406.223 543.902 cv
406.219 544.223 406.152 544.527 406.02 544.82 cv
405.883 545.109 405.676 545.363 405.398 545.586 cv
405.117 545.805 404.762 545.98 404.332 546.109 cv
403.902 546.234 403.395 546.297 402.809 546.301 cv
402.238 546.297 401.754 546.25 401.359 546.156 cv
400.961 546.059 400.637 545.926 400.383 545.762 cv
400.129 545.594 399.945 545.398 399.832 545.168 cv
399.715 544.934 399.656 544.68 399.66 544.414 cv
399.656 544.242 399.676 544.078 399.723 543.918 cv
399.762 543.754 399.824 543.602 399.91 543.457 cv
399.992 543.312 400.102 543.176 400.23 543.039 cv
400.355 542.91 400.5 542.777 400.672 542.648 cv
400.414 542.52 400.227 542.355 400.105 542.156 cv
399.984 541.961 399.926 541.75 399.926 541.516 cv
399.926 541.203 399.988 540.918 400.117 540.668 cv
400.246 540.418 400.406 540.195 400.602 539.996 cv
400.438 539.805 400.313 539.59 400.219 539.348 cv
400.125 539.109 400.078 538.816 400.078 538.469 cv
400.078 538.074 400.145 537.715 400.281 537.395 cv
400.414 537.078 400.602 536.812 400.844 536.594 cv
401.082 536.379 401.367 536.211 401.703 536.09 cv
402.035 535.977 402.402 535.918 402.801 535.914 cv
403.012 535.918 403.211 535.93 403.395 535.949 cv
403.578 535.977 403.75 536.008 403.914 536.047 cv
406.035 536.047 li
406.121 536.051 406.188 536.094 406.23 536.176 cv
406.273 536.266 406.293 536.395 406.297 536.566 cv
cp
404.289 538.414 mo
404.285 537.941 404.152 537.57 403.895 537.297 cv
403.629 537.031 403.258 536.895 402.777 536.895 cv
402.523 536.895 402.305 536.937 402.125 537.02 cv
401.938 537.105 401.785 537.219 401.664 537.363 cv
401.543 537.512 401.453 537.68 401.395 537.867 cv
401.332 538.055 401.301 538.254 401.305 538.461 cv
401.301 538.926 401.434 539.289 401.695 539.555 cv
401.957 539.82 402.324 539.953 402.801 539.949 cv
403.051 539.953 403.27 539.914 403.461 539.828 cv
403.645 539.75 403.801 539.637 403.926 539.496 cv
404.047 539.355 404.137 539.191 404.199 539 cv
404.254 538.816 404.285 538.621 404.289 538.414 cv
cp
404.934 543.973 mo
404.93 543.668 404.805 543.437 404.563 543.273 cv
404.313 543.113 403.98 543.023 403.563 543.012 cv
401.746 542.949 li
401.578 543.082 401.441 543.207 401.34 543.32 cv
401.23 543.437 401.148 543.547 401.086 543.656 cv
401.023 543.762 400.98 543.867 400.957 543.973 cv
400.934 544.074 400.922 544.18 400.922 544.289 cv
400.922 544.625 401.09 544.879 401.434 545.059 cv
401.773 545.23 402.254 545.32 402.871 545.32 cv
403.258 545.32 403.582 545.281 403.848 545.207 cv
404.105 545.129 404.316 545.027 404.48 544.906 cv
404.637 544.777 404.754 544.637 404.828 544.477 cv
404.895 544.316 404.93 544.148 404.934 543.973 cv
cp
f
413.859 539.453 mo
413.855 539.656 413.805 539.797 413.707 539.883 cv
413.602 539.969 413.484 540.012 413.359 540.012 cv
408.742 540.012 li
408.738 540.402 408.777 540.754 408.859 541.066 cv
408.934 541.379 409.066 541.648 409.25 541.867 cv
409.43 542.094 409.664 542.266 409.961 542.383 cv
410.25 542.508 410.609 542.566 411.035 542.562 cv
411.367 542.566 411.664 542.539 411.926 542.48 cv
412.188 542.43 412.414 542.367 412.605 542.297 cv
412.793 542.23 412.949 542.172 413.074 542.113 cv
413.195 542.062 413.289 542.035 413.352 542.031 cv
413.387 542.035 413.418 542.043 413.449 542.059 cv
413.477 542.078 413.5 542.105 413.52 542.141 cv
413.531 542.18 413.543 542.23 413.555 542.293 cv
413.559 542.359 413.563 542.437 413.566 542.531 cv
413.563 542.602 413.559 542.66 413.559 542.707 cv
413.551 542.754 413.547 542.797 413.539 542.836 cv
413.531 542.875 413.516 542.91 413.5 542.941 cv
413.477 542.973 413.453 543.004 413.43 543.031 cv
413.398 543.062 413.316 543.109 413.176 543.172 cv
413.035 543.238 412.852 543.301 412.629 543.363 cv
412.402 543.426 412.145 543.48 411.852 543.531 cv
411.559 543.578 411.246 543.602 410.914 543.605 cv
410.336 543.602 409.828 543.523 409.398 543.363 cv
408.961 543.203 408.598 542.965 408.305 542.648 cv
408.004 542.332 407.781 541.937 407.633 541.457 cv
407.484 540.98 407.41 540.422 407.41 539.785 cv
407.41 539.187 407.484 538.648 407.641 538.164 cv
407.793 537.687 408.02 537.277 408.316 536.941 cv
408.609 536.605 408.965 536.348 409.379 536.168 cv
409.793 535.988 410.258 535.898 410.773 535.898 cv
411.324 535.898 411.793 535.988 412.18 536.164 cv
412.566 536.344 412.883 536.582 413.137 536.879 cv
413.383 537.18 413.566 537.531 413.684 537.93 cv
413.797 538.336 413.855 538.766 413.859 539.219 cv
cp
412.566 539.07 mo
412.582 538.395 412.43 537.863 412.113 537.48 cv
411.797 537.098 411.328 536.906 410.711 536.902 cv
410.387 536.906 410.105 536.965 409.867 537.082 cv
409.625 537.203 409.426 537.363 409.266 537.559 cv
409.102 537.758 408.977 537.988 408.891 538.25 cv
408.801 538.512 408.75 538.785 408.742 539.07 cv
cp
f
420.227 541.352 mo
420.223 541.715 420.156 542.035 420.027 542.312 cv
419.895 542.594 419.707 542.828 419.465 543.02 cv
419.219 543.215 418.926 543.359 418.59 543.457 cv
418.25 543.555 417.879 543.602 417.477 543.605 cv
417.223 543.602 416.984 543.582 416.762 543.547 cv
416.535 543.504 416.336 543.457 416.156 543.398 cv
415.977 543.34 415.824 543.277 415.699 543.211 cv
415.574 543.148 415.48 543.09 415.426 543.035 cv
415.367 542.984 415.328 542.914 415.305 542.816 cv
415.277 542.727 415.266 542.598 415.266 542.437 cv
415.266 542.34 415.27 542.258 415.281 542.187 cv
415.289 542.121 415.301 542.066 415.32 542.023 cv
415.332 541.984 415.355 541.953 415.383 541.934 cv
415.41 541.918 415.441 541.91 415.48 541.906 cv
415.535 541.91 415.621 541.945 415.734 542.012 cv
415.844 542.086 415.98 542.164 416.148 542.242 cv
416.309 542.328 416.5 542.402 416.727 542.473 cv
416.945 542.543 417.203 542.578 417.5 542.578 cv
417.715 542.578 417.914 542.555 418.094 542.508 cv
418.27 542.461 418.422 542.395 418.551 542.301 cv
418.68 542.215 418.781 542.098 418.852 541.953 cv
418.922 541.816 418.957 541.648 418.957 541.453 cv
418.957 541.258 418.906 541.094 418.805 540.957 cv
418.703 540.824 418.566 540.703 418.402 540.598 cv
418.234 540.496 418.051 540.406 417.844 540.32 cv
417.633 540.242 417.418 540.156 417.199 540.066 cv
416.98 539.98 416.766 539.879 416.555 539.766 cv
416.344 539.656 416.152 539.523 415.988 539.359 cv
415.816 539.203 415.684 539.008 415.586 538.781 cv
415.48 538.559 415.43 538.293 415.434 537.98 cv
415.43 537.707 415.484 537.441 415.594 537.187 cv
415.699 536.937 415.859 536.719 416.074 536.527 cv
416.285 536.34 416.551 536.187 416.871 536.07 cv
417.191 535.957 417.563 535.898 417.992 535.898 cv
418.176 535.898 418.363 535.914 418.551 535.945 cv
418.734 535.977 418.902 536.016 419.059 536.062 cv
419.207 536.109 419.336 536.16 419.445 536.215 cv
419.547 536.27 419.629 536.32 419.688 536.359 cv
419.738 536.406 419.773 536.441 419.797 536.469 cv
419.813 536.5 419.828 536.535 419.836 536.57 cv
419.844 536.613 419.852 536.66 419.859 536.715 cv
419.867 536.773 419.871 536.844 419.871 536.926 cv
419.871 537.016 419.867 537.094 419.859 537.156 cv
419.852 537.227 419.836 537.277 419.82 537.316 cv
419.797 537.359 419.777 537.391 419.754 537.406 cv
419.727 537.426 419.695 537.434 419.668 537.434 cv
419.617 537.434 419.551 537.406 419.465 537.348 cv
419.375 537.293 419.262 537.23 419.121 537.164 cv
418.98 537.102 418.813 537.043 418.625 536.98 cv
418.434 536.926 418.219 536.895 417.977 536.895 cv
417.754 536.895 417.563 536.922 417.398 536.969 cv
417.23 537.023 417.094 537.094 416.988 537.18 cv
416.883 537.273 416.801 537.379 416.75 537.504 cv
416.691 537.629 416.664 537.766 416.668 537.91 cv
416.664 538.113 416.715 538.281 416.82 538.418 cv
416.922 538.559 417.059 538.68 417.227 538.781 cv
417.391 538.887 417.582 538.98 417.797 539.062 cv
418.008 539.148 418.223 539.234 418.445 539.32 cv
418.664 539.41 418.883 539.512 419.102 539.617 cv
419.316 539.727 419.508 539.855 419.676 540.012 cv
419.84 540.168 419.973 540.355 420.074 540.574 cv
420.172 540.793 420.223 541.055 420.227 541.352 cv
cp
f
167.086 15.98 mo
167.082 16.133 167.078 16.258 167.066 16.355 cv
167.051 16.461 167.031 16.543 167.008 16.602 cv
166.984 16.668 166.953 16.715 166.914 16.738 cv
166.875 16.77 166.832 16.781 166.785 16.781 cv
161.719 16.781 li
161.543 16.781 161.398 16.73 161.285 16.629 cv
161.164 16.527 161.105 16.363 161.109 16.133 cv
161.109 7.34399 li
161.105 7.117 161.164 6.953 161.285 6.84802 cv
161.398 6.75 161.543 6.69897 161.719 6.69501 cv
166.754 6.69501 li
166.797 6.69897 166.84 6.711 166.879 6.73401 cv
166.914 6.76202 166.945 6.80902 166.973 6.87097 cv
166.996 6.94098 167.012 7.02301 167.027 7.12097 cv
167.035 7.22699 167.043 7.35498 167.047 7.508 cv
167.043 7.65601 167.035 7.78101 167.027 7.87903 cv
167.012 7.98401 166.996 8.06598 166.973 8.125 cv
166.945 8.18701 166.914 8.22998 166.879 8.258 cv
166.84 8.289 166.797 8.30499 166.754 8.30103 cv
163.152 8.30103 li
163.152 10.766 li
166.199 10.766 li
166.246 10.77 166.289 10.785 166.328 10.809 cv
166.367 10.84 166.398 10.883 166.426 10.941 cv
166.449 11.004 166.469 11.086 166.484 11.184 cv
166.496 11.285 166.504 11.406 166.504 11.551 cv
166.504 11.703 166.496 11.828 166.484 11.926 cv
166.469 12.027 166.449 12.105 166.426 12.164 cv
166.398 12.227 166.367 12.27 166.328 12.293 cv
166.289 12.32 166.246 12.336 166.199 12.332 cv
163.152 12.332 li
163.152 15.176 li
166.785 15.176 li
166.832 15.176 166.875 15.191 166.914 15.219 cv
166.953 15.25 166.984 15.297 167.008 15.355 cv
167.031 15.422 167.051 15.504 167.066 15.602 cv
167.078 15.707 167.082 15.832 167.086 15.98 cv
cp
f
175.418 16.516 mo
175.414 16.57 175.398 16.613 175.371 16.652 cv
175.336 16.691 175.285 16.727 175.215 16.75 cv
175.141 16.777 175.039 16.793 174.914 16.809 cv
174.785 16.82 174.629 16.828 174.445 16.828 cv
174.25 16.828 174.09 16.82 173.965 16.809 cv
173.836 16.793 173.734 16.777 173.664 16.75 cv
173.586 16.727 173.535 16.691 173.508 16.652 cv
173.473 16.613 173.457 16.57 173.461 16.516 cv
173.461 12.551 li
173.457 12.215 173.434 11.949 173.387 11.754 cv
173.336 11.562 173.262 11.398 173.172 11.262 cv
173.078 11.125 172.961 11.02 172.813 10.941 cv
172.664 10.867 172.488 10.828 172.293 10.828 cv
172.039 10.828 171.789 10.922 171.535 11.102 cv
171.281 11.285 171.016 11.547 170.742 11.895 cv
170.742 16.516 li
170.738 16.57 170.723 16.613 170.695 16.652 cv
170.66 16.691 170.605 16.727 170.535 16.75 cv
170.457 16.777 170.359 16.793 170.234 16.809 cv
170.109 16.82 169.949 16.828 169.762 16.828 cv
169.566 16.828 169.41 16.82 169.285 16.809 cv
169.16 16.793 169.059 16.777 168.984 16.75 cv
168.906 16.727 168.852 16.691 168.824 16.652 cv
168.789 16.613 168.773 16.57 168.777 16.516 cv
168.777 9.56598 li
168.773 9.52002 168.789 9.47302 168.816 9.42999 cv
168.84 9.39502 168.887 9.36298 168.957 9.33197 cv
169.023 9.30902 169.109 9.289 169.219 9.27301 cv
169.324 9.26599 169.457 9.258 169.621 9.25403 cv
169.785 9.258 169.922 9.26599 170.031 9.27301 cv
170.137 9.289 170.223 9.30902 170.285 9.33197 cv
170.344 9.36298 170.387 9.39502 170.414 9.42999 cv
170.438 9.47302 170.449 9.52002 170.453 9.56598 cv
170.453 10.367 li
170.836 9.95697 171.227 9.64502 171.625 9.43402 cv
172.02 9.22699 172.438 9.125 172.871 9.12097 cv
173.34 9.125 173.738 9.203 174.066 9.35498 cv
174.391 9.51599 174.652 9.72699 174.852 9.992 cv
175.051 10.262 175.195 10.574 175.285 10.93 cv
175.371 11.289 175.414 11.719 175.418 12.223 cv
cp
f
183.77 12.84 mo
183.766 13.078 183.715 13.254 183.609 13.367 cv
183.5 13.484 183.352 13.543 183.172 13.539 cv
178.938 13.539 li
178.934 13.84 178.969 14.109 179.043 14.348 cv
179.109 14.59 179.223 14.793 179.379 14.961 cv
179.531 15.133 179.727 15.262 179.969 15.348 cv
180.207 15.437 180.496 15.48 180.84 15.48 cv
181.18 15.48 181.48 15.457 181.742 15.406 cv
182 15.359 182.227 15.305 182.418 15.242 cv
182.605 15.184 182.762 15.129 182.891 15.078 cv
183.012 15.031 183.113 15.008 183.195 15.004 cv
183.238 15.008 183.277 15.016 183.313 15.031 cv
183.34 15.051 183.367 15.082 183.387 15.129 cv
183.406 15.176 183.418 15.242 183.43 15.328 cv
183.434 15.414 183.438 15.523 183.441 15.652 cv
183.438 15.77 183.438 15.867 183.434 15.945 cv
183.426 16.027 183.418 16.094 183.41 16.148 cv
183.398 16.207 183.383 16.258 183.363 16.293 cv
183.344 16.336 183.316 16.371 183.285 16.406 cv
183.25 16.445 183.156 16.496 183.008 16.555 cv
182.852 16.621 182.66 16.684 182.43 16.738 cv
182.191 16.801 181.922 16.848 181.625 16.895 cv
181.32 16.934 181 16.957 180.66 16.961 cv
180.039 16.957 179.496 16.883 179.035 16.727 cv
178.566 16.574 178.18 16.336 177.871 16.02 cv
177.555 15.703 177.32 15.305 177.172 14.82 cv
177.016 14.34 176.941 13.773 176.945 13.117 cv
176.941 12.504 177.02 11.945 177.184 11.449 cv
177.34 10.953 177.574 10.535 177.887 10.187 cv
178.191 9.84399 178.566 9.578 179.004 9.39502 cv
179.441 9.21503 179.934 9.125 180.488 9.12097 cv
181.066 9.125 181.566 9.211 181.98 9.37903 cv
182.395 9.55499 182.73 9.79303 182.996 10.094 cv
183.258 10.398 183.453 10.758 183.582 11.172 cv
183.703 11.59 183.766 12.039 183.77 12.527 cv
cp
181.867 12.277 mo
181.879 11.727 181.77 11.293 181.535 10.98 cv
181.301 10.668 180.934 10.512 180.441 10.508 cv
180.191 10.512 179.977 10.559 179.793 10.648 cv
179.605 10.746 179.453 10.871 179.332 11.027 cv
179.207 11.187 179.113 11.375 179.051 11.59 cv
178.984 11.805 178.945 12.035 178.938 12.277 cv
cp
f
189.848 10.211 mo
189.848 10.402 189.84 10.555 189.832 10.672 cv
189.816 10.793 189.801 10.887 189.785 10.953 cv
189.762 11.023 189.734 11.07 189.703 11.094 cv
189.664 11.121 189.621 11.133 189.574 11.133 cv
189.527 11.133 189.48 11.125 189.434 11.105 cv
189.379 11.09 189.32 11.07 189.258 11.047 cv
189.188 11.027 189.117 11.008 189.043 10.988 cv
188.961 10.973 188.875 10.965 188.785 10.961 cv
188.672 10.965 188.563 10.984 188.457 11.027 cv
188.348 11.074 188.234 11.145 188.121 11.234 cv
188 11.328 187.879 11.453 187.754 11.605 cv
187.625 11.766 187.488 11.957 187.344 12.184 cv
187.344 16.516 li
187.34 16.57 187.324 16.613 187.297 16.652 cv
187.262 16.691 187.207 16.727 187.137 16.75 cv
187.059 16.777 186.961 16.793 186.836 16.809 cv
186.711 16.82 186.551 16.828 186.363 16.828 cv
186.168 16.828 186.012 16.82 185.887 16.809 cv
185.762 16.793 185.66 16.777 185.586 16.75 cv
185.508 16.727 185.453 16.691 185.426 16.652 cv
185.391 16.613 185.375 16.57 185.379 16.516 cv
185.379 9.56598 li
185.375 9.52002 185.391 9.47302 185.418 9.42999 cv
185.441 9.39502 185.488 9.36298 185.559 9.33197 cv
185.625 9.30902 185.711 9.289 185.82 9.27301 cv
185.926 9.26599 186.059 9.258 186.223 9.25403 cv
186.387 9.258 186.523 9.26599 186.633 9.27301 cv
186.738 9.289 186.824 9.30902 186.887 9.33197 cv
186.945 9.36298 186.988 9.39502 187.016 9.42999 cv
187.039 9.47302 187.051 9.52002 187.055 9.56598 cv
187.055 10.43 li
187.234 10.172 187.406 9.961 187.57 9.789 cv
187.727 9.625 187.883 9.48798 188.031 9.38702 cv
188.176 9.289 188.32 9.22302 188.465 9.17999 cv
188.609 9.14502 188.754 9.125 188.902 9.12097 cv
188.969 9.125 189.043 9.12903 189.121 9.133 cv
189.199 9.14502 189.277 9.15601 189.363 9.172 cv
189.441 9.19098 189.516 9.211 189.582 9.23401 cv
189.641 9.258 189.688 9.28497 189.719 9.30902 cv
189.746 9.34003 189.766 9.367 189.781 9.39502 cv
189.793 9.42999 189.805 9.47302 189.816 9.52301 cv
189.824 9.58197 189.832 9.664 189.84 9.77002 cv
189.844 9.87903 189.848 10.027 189.848 10.211 cv
cp
f
197.023 10.047 mo
197.02 10.301 196.992 10.484 196.938 10.602 cv
196.879 10.723 196.809 10.781 196.73 10.781 cv
195.91 10.781 li
196.023 10.906 196.105 11.051 196.156 11.207 cv
196.203 11.367 196.227 11.531 196.23 11.699 cv
196.227 12.109 196.16 12.469 196.027 12.781 cv
195.891 13.098 195.695 13.363 195.445 13.574 cv
195.191 13.793 194.891 13.957 194.535 14.066 cv
194.176 14.184 193.777 14.238 193.348 14.234 cv
193.121 14.238 192.91 14.211 192.707 14.152 cv
192.504 14.102 192.348 14.039 192.238 13.961 cv
192.176 14.031 192.117 14.109 192.07 14.203 cv
192.02 14.297 191.996 14.402 192 14.512 cv
191.996 14.668 192.063 14.789 192.195 14.883 cv
192.324 14.98 192.512 15.035 192.754 15.043 cv
194.445 15.105 li
194.84 15.121 195.191 15.18 195.5 15.273 cv
195.809 15.375 196.07 15.508 196.281 15.68 cv
196.492 15.855 196.652 16.066 196.762 16.309 cv
196.871 16.555 196.926 16.828 196.93 17.141 cv
196.926 17.477 196.852 17.801 196.703 18.109 cv
196.555 18.41 196.328 18.672 196.027 18.898 cv
195.723 19.117 195.344 19.297 194.891 19.43 cv
194.434 19.559 193.902 19.621 193.301 19.625 cv
192.703 19.621 192.199 19.574 191.781 19.484 cv
191.363 19.387 191.02 19.258 190.754 19.094 cv
190.484 18.926 190.289 18.727 190.172 18.5 cv
190.047 18.266 189.988 18.012 189.988 17.738 cv
189.988 17.566 190.008 17.406 190.055 17.25 cv
190.094 17.094 190.16 16.941 190.25 16.801 cv
190.332 16.656 190.438 16.523 190.563 16.391 cv
190.688 16.262 190.828 16.137 190.992 16.016 cv
190.766 15.902 190.594 15.742 190.473 15.531 cv
190.352 15.328 190.293 15.102 190.293 14.855 cv
190.293 14.555 190.359 14.277 190.5 14.02 cv
190.637 13.77 190.82 13.539 191.047 13.336 cv
190.863 13.156 190.719 12.941 190.609 12.684 cv
190.5 12.434 190.445 12.113 190.449 11.73 cv
190.445 11.328 190.516 10.969 190.66 10.645 cv
190.801 10.328 191 10.059 191.258 9.836 cv
191.512 9.617 191.816 9.44501 192.168 9.328 cv
192.52 9.211 192.91 9.15198 193.34 9.15198 cv
193.559 9.15198 193.766 9.16803 193.965 9.19098 cv
194.164 9.22302 194.352 9.258 194.523 9.30103 cv
196.73 9.30103 li
196.813 9.30499 196.883 9.36298 196.941 9.47302 cv
196.992 9.59003 197.02 9.78101 197.023 10.047 cv
cp
194.508 11.691 mo
194.504 11.32 194.402 11.031 194.195 10.82 cv
193.984 10.617 193.691 10.512 193.316 10.508 cv
193.121 10.512 192.949 10.543 192.809 10.605 cv
192.66 10.672 192.539 10.762 192.445 10.871 cv
192.344 10.984 192.273 11.113 192.23 11.262 cv
192.18 11.41 192.156 11.566 192.16 11.723 cv
192.156 12.082 192.262 12.359 192.473 12.562 cv
192.68 12.77 192.969 12.875 193.34 12.871 cv
193.535 12.875 193.703 12.844 193.852 12.777 cv
193.992 12.719 194.113 12.633 194.215 12.52 cv
194.309 12.414 194.383 12.285 194.434 12.141 cv
194.48 12 194.504 11.852 194.508 11.691 cv
cp
194.969 17.242 mo
194.969 17.004 194.875 16.828 194.688 16.703 cv
194.5 16.582 194.242 16.512 193.914 16.5 cv
192.52 16.461 li
192.383 16.562 192.273 16.656 192.195 16.746 cv
192.113 16.836 192.051 16.922 192.004 17.008 cv
191.953 17.09 191.918 17.172 191.906 17.25 cv
191.887 17.328 191.879 17.406 191.883 17.492 cv
191.879 17.746 192.012 17.945 192.273 18.082 cv
192.535 18.215 192.906 18.281 193.387 18.285 cv
193.68 18.281 193.926 18.25 194.133 18.195 cv
194.332 18.133 194.496 18.055 194.625 17.957 cv
194.746 17.855 194.836 17.746 194.891 17.625 cv
194.941 17.504 194.969 17.375 194.969 17.242 cv
cp
f
202.352 16.781 mo
201.508 19.242 li
201.457 19.371 201.332 19.465 201.125 19.523 cv
200.918 19.578 200.613 19.605 200.215 19.609 cv
200.004 19.605 199.836 19.598 199.715 19.582 cv
199.59 19.562 199.5 19.531 199.438 19.492 cv
199.375 19.449 199.34 19.398 199.336 19.336 cv
199.328 19.273 199.344 19.199 199.383 19.113 cv
200.309 16.781 li
200.238 16.75 200.176 16.703 200.125 16.637 cv
200.066 16.574 200.027 16.504 200.004 16.43 cv
197.613 10.039 li
197.543 9.85901 197.508 9.72302 197.512 9.625 cv
197.508 9.53101 197.539 9.453 197.605 9.39801 cv
197.664 9.34399 197.77 9.30902 197.918 9.28497 cv
198.063 9.27002 198.258 9.258 198.508 9.25403 cv
198.727 9.258 198.906 9.26202 199.039 9.26599 cv
199.168 9.27698 199.27 9.297 199.344 9.32397 cv
199.414 9.35901 199.469 9.40601 199.508 9.46899 cv
199.543 9.53497 199.578 9.62903 199.617 9.74597 cv
201.25 14.398 li
201.273 14.398 li
202.773 9.65198 li
202.797 9.52002 202.836 9.42999 202.891 9.383 cv
202.938 9.34003 203.02 9.30902 203.137 9.28497 cv
203.246 9.27002 203.449 9.258 203.738 9.25403 cv
203.961 9.258 204.145 9.27002 204.293 9.28497 cv
204.438 9.30902 204.547 9.34802 204.621 9.40198 cv
204.688 9.46503 204.723 9.539 204.727 9.633 cv
204.723 9.72699 204.703 9.84003 204.664 9.96899 cv
cp
f
216.793 15.254 mo
216.793 15.387 216.789 15.496 216.781 15.586 cv
216.773 15.68 216.762 15.758 216.746 15.82 cv
216.73 15.887 216.707 15.945 216.684 15.988 cv
216.652 16.035 216.613 16.086 216.559 16.145 cv
216.5 16.207 216.387 16.285 216.227 16.375 cv
216.059 16.473 215.859 16.562 215.625 16.645 cv
215.387 16.734 215.117 16.801 214.816 16.859 cv
214.508 16.914 214.18 16.945 213.832 16.945 cv
213.137 16.945 212.512 16.84 211.957 16.625 cv
211.398 16.414 210.926 16.098 210.539 15.672 cv
210.148 15.25 209.852 14.719 209.645 14.086 cv
209.438 13.453 209.332 12.715 209.336 11.871 cv
209.332 11.016 209.445 10.258 209.676 9.59003 cv
209.902 8.92603 210.223 8.367 210.633 7.914 cv
211.043 7.46503 211.535 7.12097 212.109 6.88702 cv
212.684 6.65601 213.316 6.539 214.012 6.53497 cv
214.285 6.539 214.555 6.56201 214.82 6.60498 cv
215.078 6.65198 215.32 6.711 215.539 6.78497 cv
215.758 6.86298 215.957 6.953 216.137 7.047 cv
216.313 7.14801 216.434 7.22998 216.508 7.30103 cv
216.574 7.37097 216.625 7.42999 216.652 7.47699 cv
216.676 7.52301 216.695 7.586 216.715 7.65601 cv
216.727 7.73401 216.738 7.82001 216.75 7.914 cv
216.754 8.01599 216.758 8.13702 216.762 8.27698 cv
216.758 8.43701 216.754 8.57001 216.746 8.67603 cv
216.734 8.789 216.715 8.875 216.691 8.94098 cv
216.664 9.01202 216.633 9.06201 216.598 9.09003 cv
216.559 9.125 216.516 9.14099 216.473 9.13702 cv
216.391 9.14099 216.293 9.09399 216.176 9 cv
216.055 8.90997 215.898 8.80902 215.711 8.69501 cv
215.52 8.586 215.297 8.48401 215.035 8.39099 cv
214.77 8.30103 214.457 8.258 214.098 8.25403 cv
213.695 8.258 213.336 8.34003 213.023 8.5 cv
212.707 8.66803 212.441 8.90198 212.223 9.203 cv
212 9.51202 211.832 9.87903 211.719 10.309 cv
211.602 10.742 211.543 11.227 211.547 11.762 cv
211.543 12.359 211.605 12.875 211.73 13.305 cv
211.852 13.742 212.023 14.098 212.254 14.375 cv
212.477 14.656 212.75 14.863 213.07 15 cv
213.387 15.141 213.746 15.211 214.152 15.207 cv
214.512 15.211 214.828 15.168 215.094 15.078 cv
215.359 14.996 215.586 14.902 215.773 14.793 cv
215.961 14.691 216.117 14.598 216.242 14.516 cv
216.363 14.434 216.457 14.391 216.527 14.391 cv
216.578 14.391 216.621 14.402 216.652 14.422 cv
216.684 14.441 216.707 14.48 216.73 14.543 cv
216.746 14.605 216.762 14.695 216.777 14.805 cv
216.785 14.922 216.793 15.07 216.793 15.254 cv
cp
f
225.176 12.969 mo
225.172 13.566 225.094 14.109 224.941 14.594 cv
224.781 15.086 224.547 15.504 224.23 15.855 cv
223.914 16.207 223.516 16.48 223.039 16.672 cv
222.559 16.863 222 16.957 221.363 16.961 cv
220.742 16.957 220.203 16.875 219.75 16.703 cv
219.289 16.535 218.91 16.285 218.613 15.957 cv
218.309 15.633 218.086 15.23 217.941 14.75 cv
217.797 14.273 217.727 13.727 217.727 13.109 cv
217.727 12.52 217.805 11.98 217.961 11.488 cv
218.117 11 218.355 10.578 218.676 10.227 cv
218.992 9.87903 219.387 9.60498 219.863 9.40997 cv
220.336 9.21899 220.895 9.125 221.535 9.12097 cv
222.16 9.125 222.699 9.20697 223.156 9.375 cv
223.613 9.547 223.992 9.797 224.289 10.121 cv
224.586 10.449 224.809 10.852 224.957 11.328 cv
225.102 11.809 225.172 12.355 225.176 12.969 cv
cp
223.156 13.047 mo
223.152 12.711 223.125 12.395 223.074 12.102 cv
223.016 11.816 222.922 11.566 222.797 11.352 cv
222.664 11.141 222.492 10.973 222.281 10.852 cv
222.063 10.734 221.793 10.676 221.465 10.672 cv
221.176 10.676 220.922 10.73 220.703 10.832 cv
220.484 10.941 220.305 11.098 220.164 11.301 cv
220.023 11.508 219.918 11.754 219.848 12.039 cv
219.777 12.332 219.742 12.66 219.742 13.023 cv
219.742 13.371 219.77 13.687 219.828 13.973 cv
219.883 14.266 219.977 14.516 220.105 14.727 cv
220.23 14.941 220.402 15.105 220.625 15.219 cv
220.84 15.34 221.109 15.398 221.434 15.395 cv
221.727 15.398 221.984 15.344 222.207 15.234 cv
222.422 15.129 222.602 14.977 222.742 14.77 cv
222.883 14.57 222.984 14.324 223.055 14.035 cv
223.117 13.75 223.152 13.422 223.156 13.047 cv
cp
f
233.371 16.516 mo
233.367 16.57 233.352 16.613 233.324 16.652 cv
233.289 16.691 233.238 16.727 233.168 16.75 cv
233.094 16.777 232.992 16.793 232.867 16.809 cv
232.738 16.82 232.582 16.828 232.398 16.828 cv
232.203 16.828 232.043 16.82 231.918 16.809 cv
231.789 16.793 231.688 16.777 231.617 16.75 cv
231.539 16.727 231.488 16.691 231.461 16.652 cv
231.426 16.613 231.41 16.57 231.414 16.516 cv
231.414 12.551 li
231.41 12.215 231.387 11.949 231.34 11.754 cv
231.289 11.562 231.215 11.398 231.125 11.262 cv
231.031 11.125 230.914 11.02 230.766 10.941 cv
230.617 10.867 230.441 10.828 230.246 10.828 cv
229.992 10.828 229.742 10.922 229.488 11.102 cv
229.234 11.285 228.969 11.547 228.695 11.895 cv
228.695 16.516 li
228.691 16.57 228.676 16.613 228.648 16.652 cv
228.613 16.691 228.559 16.727 228.488 16.75 cv
228.41 16.777 228.313 16.793 228.188 16.809 cv
228.063 16.82 227.902 16.828 227.715 16.828 cv
227.52 16.828 227.363 16.82 227.238 16.809 cv
227.113 16.793 227.012 16.777 226.938 16.75 cv
226.859 16.727 226.805 16.691 226.777 16.652 cv
226.742 16.613 226.727 16.57 226.73 16.516 cv
226.73 9.56598 li
226.727 9.52002 226.742 9.47302 226.77 9.42999 cv
226.793 9.39502 226.84 9.36298 226.91 9.33197 cv
226.977 9.30902 227.063 9.289 227.172 9.27301 cv
227.277 9.26599 227.41 9.258 227.574 9.25403 cv
227.738 9.258 227.875 9.26599 227.984 9.27301 cv
228.09 9.289 228.176 9.30902 228.238 9.33197 cv
228.297 9.36298 228.34 9.39502 228.367 9.42999 cv
228.391 9.47302 228.402 9.52002 228.406 9.56598 cv
228.406 10.367 li
228.789 9.95697 229.18 9.64502 229.578 9.43402 cv
229.973 9.22699 230.391 9.125 230.824 9.12097 cv
231.293 9.125 231.691 9.203 232.02 9.35498 cv
232.344 9.51599 232.605 9.72699 232.805 9.992 cv
233.004 10.262 233.148 10.574 233.238 10.93 cv
233.324 11.289 233.367 11.719 233.371 12.223 cv
cp
f
240.195 14.551 mo
240.191 14.949 240.117 15.297 239.973 15.598 cv
239.824 15.898 239.617 16.152 239.348 16.352 cv
239.074 16.559 238.754 16.707 238.387 16.809 cv
238.02 16.906 237.617 16.957 237.188 16.961 cv
236.922 16.957 236.676 16.937 236.441 16.902 cv
236.207 16.859 235.996 16.812 235.809 16.754 cv
235.621 16.695 235.465 16.633 235.34 16.57 cv
235.215 16.508 235.121 16.449 235.066 16.395 cv
235.008 16.34 234.965 16.258 234.938 16.141 cv
234.902 16.027 234.887 15.852 234.891 15.621 cv
234.887 15.473 234.895 15.352 234.906 15.258 cv
234.914 15.168 234.93 15.098 234.953 15.039 cv
234.973 14.988 234.996 14.949 235.031 14.93 cv
235.059 14.914 235.098 14.906 235.145 14.902 cv
235.199 14.906 235.285 14.937 235.398 15 cv
235.508 15.066 235.645 15.141 235.816 15.215 cv
235.98 15.297 236.176 15.367 236.395 15.434 cv
236.613 15.504 236.863 15.539 237.148 15.535 cv
237.324 15.539 237.48 15.52 237.621 15.48 cv
237.754 15.445 237.875 15.395 237.98 15.324 cv
238.078 15.258 238.152 15.172 238.207 15.066 cv
238.254 14.965 238.281 14.844 238.285 14.707 cv
238.281 14.551 238.234 14.418 238.141 14.309 cv
238.047 14.199 237.918 14.102 237.762 14.016 cv
237.598 13.934 237.418 13.855 237.223 13.781 cv
237.02 13.711 236.816 13.633 236.605 13.539 cv
236.395 13.453 236.188 13.352 235.992 13.234 cv
235.789 13.125 235.609 12.984 235.453 12.816 cv
235.289 12.652 235.164 12.453 235.07 12.215 cv
234.977 11.984 234.93 11.703 234.93 11.371 cv
234.93 11.043 234.992 10.738 235.121 10.457 cv
235.25 10.184 235.438 9.94501 235.684 9.74597 cv
235.926 9.55103 236.223 9.39801 236.574 9.28497 cv
236.922 9.17999 237.316 9.125 237.758 9.12097 cv
237.973 9.125 238.184 9.14099 238.391 9.16803 cv
238.594 9.203 238.781 9.242 238.949 9.28497 cv
239.113 9.336 239.254 9.38702 239.371 9.43701 cv
239.484 9.49597 239.566 9.54303 239.617 9.578 cv
239.664 9.62097 239.699 9.65997 239.723 9.69501 cv
239.742 9.73798 239.754 9.78497 239.766 9.836 cv
239.773 9.89099 239.785 9.95697 239.793 10.035 cv
239.801 10.121 239.805 10.219 239.805 10.336 cv
239.805 10.477 239.801 10.594 239.793 10.68 cv
239.785 10.773 239.77 10.844 239.754 10.891 cv
239.734 10.945 239.711 10.98 239.684 10.996 cv
239.648 11.02 239.613 11.027 239.574 11.023 cv
239.523 11.027 239.449 11 239.355 10.941 cv
239.254 10.891 239.133 10.832 238.984 10.766 cv
238.836 10.707 238.664 10.648 238.469 10.59 cv
238.273 10.539 238.051 10.512 237.805 10.508 cv
237.625 10.512 237.473 10.531 237.344 10.562 cv
237.211 10.602 237.102 10.652 237.023 10.719 cv
236.938 10.789 236.875 10.867 236.836 10.957 cv
236.789 11.051 236.77 11.148 236.773 11.25 cv
236.77 11.41 236.82 11.547 236.922 11.652 cv
237.02 11.766 237.148 11.859 237.313 11.941 cv
237.473 12.027 237.656 12.105 237.863 12.176 cv
238.066 12.25 238.273 12.332 238.484 12.414 cv
238.691 12.504 238.898 12.602 239.109 12.715 cv
239.313 12.828 239.496 12.969 239.656 13.133 cv
239.816 13.301 239.945 13.5 240.047 13.73 cv
240.141 13.965 240.191 14.238 240.195 14.551 cv
cp
f
248.262 16.516 mo
248.258 16.57 248.246 16.613 248.223 16.652 cv
248.195 16.691 248.148 16.727 248.086 16.75 cv
248.02 16.777 247.934 16.793 247.828 16.809 cv
247.723 16.82 247.59 16.828 247.43 16.828 cv
247.254 16.828 247.113 16.82 247.012 16.809 cv
246.902 16.793 246.82 16.777 246.758 16.75 cv
246.695 16.727 246.648 16.691 246.625 16.652 cv
246.594 16.613 246.582 16.57 246.586 16.516 cv
246.586 15.715 li
246.199 16.129 245.809 16.441 245.414 16.648 cv
245.012 16.855 244.602 16.957 244.18 16.961 cv
243.699 16.957 243.297 16.883 242.973 16.727 cv
242.648 16.574 242.387 16.359 242.188 16.09 cv
241.984 15.82 241.84 15.508 241.758 15.148 cv
241.668 14.793 241.625 14.352 241.629 13.82 cv
241.629 9.56598 li
241.625 9.52002 241.641 9.47302 241.672 9.42999 cv
241.699 9.39502 241.75 9.36298 241.828 9.33197 cv
241.902 9.30902 242.004 9.289 242.133 9.27301 cv
242.258 9.26599 242.414 9.258 242.605 9.25403 cv
242.793 9.258 242.953 9.26599 243.078 9.27301 cv
243.203 9.289 243.301 9.30902 243.379 9.33197 cv
243.449 9.36298 243.504 9.39502 243.539 9.42999 cv
243.566 9.47302 243.582 9.52002 243.586 9.56598 cv
243.586 13.492 li
243.582 13.859 243.605 14.137 243.656 14.328 cv
243.699 14.52 243.77 14.684 243.871 14.82 cv
243.965 14.961 244.09 15.066 244.238 15.141 cv
244.387 15.219 244.559 15.258 244.754 15.254 cv
245.004 15.258 245.254 15.168 245.508 14.98 cv
245.758 14.801 246.027 14.535 246.313 14.187 cv
246.313 9.56598 li
246.313 9.52002 246.324 9.47302 246.355 9.42999 cv
246.379 9.39502 246.434 9.36298 246.512 9.33197 cv
246.586 9.30902 246.684 9.289 246.813 9.27301 cv
246.934 9.26599 247.094 9.258 247.289 9.25403 cv
247.48 9.258 247.637 9.26599 247.762 9.27301 cv
247.883 9.289 247.984 9.30902 248.059 9.33197 cv
248.129 9.36298 248.18 9.39502 248.215 9.42999 cv
248.242 9.47302 248.258 9.52002 248.262 9.56598 cv
cp
f
261.203 16.516 mo
261.199 16.57 261.184 16.613 261.156 16.652 cv
261.121 16.691 261.07 16.727 261 16.75 cv
260.926 16.777 260.824 16.793 260.703 16.809 cv
260.578 16.82 260.422 16.828 260.23 16.828 cv
260.031 16.828 259.871 16.82 259.746 16.809 cv
259.621 16.793 259.52 16.777 259.445 16.75 cv
259.367 16.727 259.316 16.691 259.289 16.652 cv
259.262 16.613 259.246 16.57 259.25 16.516 cv
259.25 12.395 li
259.246 12.164 259.227 11.949 259.184 11.754 cv
259.137 11.562 259.066 11.398 258.98 11.262 cv
258.887 11.125 258.773 11.02 258.637 10.941 cv
258.496 10.867 258.332 10.828 258.141 10.828 cv
257.906 10.828 257.668 10.922 257.43 11.102 cv
257.191 11.285 256.934 11.547 256.652 11.895 cv
256.652 16.516 li
256.652 16.57 256.637 16.613 256.605 16.652 cv
256.574 16.691 256.52 16.727 256.445 16.75 cv
256.367 16.777 256.266 16.793 256.145 16.809 cv
256.02 16.82 255.867 16.828 255.68 16.828 cv
255.484 16.828 255.324 16.82 255.203 16.809 cv
255.074 16.793 254.973 16.777 254.902 16.75 cv
254.824 16.727 254.773 16.691 254.742 16.652 cv
254.711 16.613 254.695 16.57 254.695 16.516 cv
254.695 12.395 li
254.695 12.164 254.672 11.949 254.629 11.754 cv
254.586 11.562 254.52 11.398 254.434 11.262 cv
254.34 11.125 254.227 11.02 254.09 10.941 cv
253.945 10.867 253.781 10.828 253.598 10.828 cv
253.355 10.828 253.117 10.922 252.879 11.102 cv
252.641 11.285 252.383 11.547 252.109 11.895 cv
252.109 16.516 li
252.105 16.57 252.09 16.613 252.063 16.652 cv
252.027 16.691 251.973 16.727 251.902 16.75 cv
251.824 16.777 251.727 16.793 251.602 16.809 cv
251.477 16.82 251.316 16.828 251.129 16.828 cv
250.934 16.828 250.777 16.82 250.652 16.809 cv
250.527 16.793 250.426 16.777 250.352 16.75 cv
250.273 16.727 250.219 16.691 250.191 16.652 cv
250.156 16.613 250.141 16.57 250.145 16.516 cv
250.145 9.56598 li
250.141 9.52002 250.156 9.47302 250.184 9.42999 cv
250.207 9.39502 250.254 9.36298 250.324 9.33197 cv
250.391 9.30902 250.477 9.289 250.586 9.27301 cv
250.691 9.26599 250.824 9.258 250.988 9.25403 cv
251.152 9.258 251.289 9.26599 251.398 9.27301 cv
251.504 9.289 251.59 9.30902 251.652 9.33197 cv
251.711 9.36298 251.754 9.39502 251.781 9.42999 cv
251.805 9.47302 251.816 9.52002 251.82 9.56598 cv
251.82 10.367 li
252.203 9.95697 252.586 9.64502 252.969 9.43402 cv
253.348 9.22699 253.75 9.125 254.168 9.12097 cv
254.453 9.125 254.707 9.15198 254.938 9.211 cv
255.164 9.27301 255.371 9.35901 255.551 9.46899 cv
255.73 9.58197 255.883 9.71899 256.012 9.87097 cv
256.141 10.027 256.25 10.199 256.34 10.391 cv
256.547 10.168 256.75 9.97699 256.953 9.81598 cv
257.148 9.65601 257.348 9.52301 257.543 9.422 cv
257.738 9.32001 257.934 9.24597 258.129 9.19501 cv
258.324 9.14801 258.523 9.125 258.727 9.12097 cv
259.188 9.125 259.574 9.203 259.895 9.35498 cv
260.207 9.51599 260.465 9.72699 260.66 9.992 cv
260.855 10.262 260.992 10.574 261.078 10.93 cv
261.156 11.289 261.199 11.668 261.203 12.066 cv
cp
f
270.117 12.937 mo
270.117 13.559 270.051 14.117 269.918 14.613 cv
269.785 15.109 269.59 15.531 269.336 15.879 cv
269.082 16.227 268.766 16.496 268.387 16.68 cv
268.004 16.867 267.57 16.957 267.086 16.961 cv
266.879 16.957 266.691 16.937 266.527 16.902 cv
266.355 16.859 266.191 16.801 266.035 16.723 cv
265.875 16.645 265.719 16.547 265.566 16.422 cv
265.406 16.305 265.246 16.164 265.082 16 cv
265.082 19.273 li
265.078 19.32 265.063 19.367 265.035 19.414 cv
265 19.453 264.945 19.488 264.875 19.52 cv
264.797 19.543 264.699 19.566 264.574 19.586 cv
264.449 19.598 264.289 19.605 264.102 19.609 cv
263.906 19.605 263.75 19.598 263.625 19.586 cv
263.5 19.566 263.398 19.543 263.324 19.52 cv
263.246 19.488 263.191 19.453 263.164 19.414 cv
263.129 19.367 263.113 19.32 263.117 19.273 cv
263.117 9.56598 li
263.113 9.52002 263.129 9.47302 263.156 9.42999 cv
263.18 9.39502 263.223 9.36298 263.293 9.33197 cv
263.355 9.30902 263.441 9.289 263.551 9.27301 cv
263.652 9.26599 263.789 9.258 263.953 9.25403 cv
264.109 9.258 264.238 9.26599 264.344 9.27301 cv
264.449 9.289 264.535 9.30902 264.602 9.33197 cv
264.664 9.36298 264.711 9.39502 264.738 9.42999 cv
264.762 9.47302 264.773 9.52002 264.777 9.56598 cv
264.777 10.383 li
264.977 10.176 265.176 9.99597 265.375 9.836 cv
265.566 9.67999 265.766 9.547 265.969 9.43701 cv
266.172 9.336 266.379 9.25403 266.598 9.19897 cv
266.809 9.14801 267.039 9.125 267.289 9.12097 cv
267.793 9.125 268.227 9.22302 268.59 9.422 cv
268.945 9.625 269.238 9.90198 269.465 10.246 cv
269.688 10.598 269.852 11 269.961 11.461 cv
270.063 11.922 270.117 12.414 270.117 12.937 cv
cp
268.074 13.078 mo
268.07 12.785 268.051 12.504 268.008 12.227 cv
267.961 11.957 267.883 11.715 267.781 11.5 cv
267.672 11.289 267.531 11.117 267.359 10.988 cv
267.184 10.863 266.969 10.801 266.711 10.797 cv
266.578 10.801 266.449 10.82 266.324 10.855 cv
266.195 10.898 266.066 10.961 265.934 11.047 cv
265.801 11.137 265.664 11.25 265.527 11.391 cv
265.383 11.531 265.234 11.707 265.082 11.91 cv
265.082 14.203 li
265.355 14.551 265.617 14.82 265.867 15.008 cv
266.113 15.199 266.375 15.293 266.648 15.293 cv
266.902 15.293 267.117 15.23 267.301 15.098 cv
267.477 14.973 267.625 14.801 267.738 14.59 cv
267.852 14.379 267.934 14.141 267.992 13.875 cv
268.043 13.609 268.07 13.344 268.074 13.078 cv
cp
f
275.613 15.832 mo
275.613 16.059 275.598 16.234 275.57 16.355 cv
275.539 16.48 275.5 16.566 275.457 16.613 cv
275.406 16.664 275.34 16.707 275.25 16.746 cv
275.156 16.785 275.047 16.816 274.93 16.848 cv
274.805 16.871 274.672 16.895 274.531 16.914 cv
274.387 16.926 274.246 16.934 274.102 16.937 cv
273.711 16.934 273.371 16.883 273.086 16.789 cv
272.801 16.687 272.566 16.539 272.379 16.332 cv
272.191 16.129 272.051 15.871 271.965 15.559 cv
271.871 15.25 271.828 14.879 271.832 14.449 cv
271.832 10.891 li
271 10.891 li
270.898 10.895 270.824 10.832 270.773 10.707 cv
270.719 10.586 270.691 10.383 270.695 10.094 cv
270.691 9.94501 270.699 9.81598 270.715 9.71503 cv
270.727 9.61298 270.746 9.53101 270.773 9.46899 cv
270.797 9.40997 270.828 9.367 270.871 9.34003 cv
270.906 9.31598 270.953 9.30499 271.008 9.30103 cv
271.832 9.30103 li
271.832 7.75 li
271.828 7.703 271.844 7.65601 271.875 7.60901 cv
271.902 7.57001 271.953 7.53497 272.031 7.50403 cv
272.105 7.47998 272.207 7.45697 272.336 7.44098 cv
272.461 7.42999 272.617 7.42603 272.809 7.422 cv
272.996 7.42603 273.156 7.42999 273.285 7.44098 cv
273.41 7.45697 273.512 7.47998 273.586 7.50403 cv
273.656 7.53497 273.707 7.57001 273.742 7.60901 cv
273.77 7.65601 273.785 7.703 273.789 7.75 cv
273.789 9.30103 li
275.301 9.30103 li
275.352 9.30499 275.398 9.31598 275.438 9.34003 cv
275.477 9.367 275.508 9.40997 275.535 9.46899 cv
275.559 9.53101 275.578 9.61298 275.594 9.71503 cv
275.605 9.81598 275.613 9.94501 275.613 10.094 cv
275.613 10.383 275.586 10.586 275.535 10.707 cv
275.48 10.832 275.406 10.895 275.309 10.891 cv
273.789 10.891 li
273.789 14.156 li
273.785 14.535 273.844 14.82 273.969 15.008 cv
274.086 15.199 274.301 15.293 274.605 15.293 cv
274.707 15.293 274.801 15.285 274.887 15.266 cv
274.969 15.25 275.043 15.23 275.109 15.203 cv
275.172 15.184 275.227 15.16 275.273 15.141 cv
275.316 15.125 275.355 15.117 275.395 15.113 cv
275.422 15.117 275.453 15.125 275.484 15.141 cv
275.512 15.16 275.531 15.199 275.551 15.25 cv
275.563 15.309 275.578 15.383 275.594 15.473 cv
275.605 15.57 275.613 15.687 275.613 15.832 cv
cp
f
279 16.516 mo
278.996 16.57 278.98 16.613 278.953 16.652 cv
278.918 16.691 278.863 16.727 278.793 16.75 cv
278.715 16.777 278.617 16.793 278.492 16.809 cv
278.367 16.82 278.207 16.828 278.02 16.828 cv
277.824 16.828 277.668 16.82 277.543 16.809 cv
277.418 16.793 277.316 16.777 277.242 16.75 cv
277.164 16.727 277.109 16.691 277.082 16.652 cv
277.047 16.613 277.031 16.57 277.035 16.516 cv
277.035 9.58197 li
277.031 9.53101 277.047 9.48401 277.082 9.44501 cv
277.109 9.40601 277.164 9.375 277.242 9.34399 cv
277.316 9.32001 277.418 9.297 277.543 9.27698 cv
277.668 9.26599 277.824 9.258 278.02 9.25403 cv
278.207 9.258 278.367 9.26599 278.492 9.27698 cv
278.617 9.297 278.715 9.32001 278.793 9.34399 cv
278.863 9.375 278.918 9.40601 278.953 9.44501 cv
278.98 9.48401 278.996 9.53101 279 9.58197 cv
cp
279.148 7.211 mo
279.148 7.60901 279.066 7.883 278.906 8.03101 cv
278.742 8.18402 278.445 8.258 278.012 8.25403 cv
277.566 8.258 277.266 8.18402 277.117 8.039 cv
276.961 7.89502 276.887 7.633 276.887 7.25 cv
276.887 6.85498 276.965 6.58197 277.125 6.42999 cv
277.281 6.27698 277.582 6.19897 278.027 6.19897 cv
278.461 6.19897 278.758 6.27301 278.914 6.422 cv
279.07 6.57001 279.148 6.836 279.148 7.211 cv
cp
f
287.992 12.969 mo
287.988 13.566 287.91 14.109 287.758 14.594 cv
287.598 15.086 287.363 15.504 287.047 15.855 cv
286.73 16.207 286.332 16.48 285.855 16.672 cv
285.375 16.863 284.816 16.957 284.18 16.961 cv
283.559 16.957 283.02 16.875 282.566 16.703 cv
282.105 16.535 281.727 16.285 281.43 15.957 cv
281.125 15.633 280.902 15.23 280.758 14.75 cv
280.613 14.273 280.543 13.727 280.543 13.109 cv
280.543 12.52 280.621 11.98 280.777 11.488 cv
280.934 11 281.172 10.578 281.492 10.227 cv
281.809 9.87903 282.203 9.60498 282.68 9.40997 cv
283.152 9.21899 283.711 9.125 284.352 9.12097 cv
284.977 9.125 285.516 9.20697 285.973 9.375 cv
286.43 9.547 286.809 9.797 287.105 10.121 cv
287.402 10.449 287.625 10.852 287.773 11.328 cv
287.918 11.809 287.988 12.355 287.992 12.969 cv
cp
285.973 13.047 mo
285.969 12.711 285.941 12.395 285.891 12.102 cv
285.832 11.816 285.738 11.566 285.613 11.352 cv
285.48 11.141 285.309 10.973 285.098 10.852 cv
284.879 10.734 284.609 10.676 284.281 10.672 cv
283.992 10.676 283.738 10.73 283.52 10.832 cv
283.301 10.941 283.121 11.098 282.98 11.301 cv
282.84 11.508 282.734 11.754 282.664 12.039 cv
282.594 12.332 282.559 12.66 282.559 13.023 cv
282.559 13.371 282.586 13.687 282.645 13.973 cv
282.699 14.266 282.793 14.516 282.922 14.727 cv
283.047 14.941 283.219 15.105 283.441 15.219 cv
283.656 15.34 283.926 15.398 284.25 15.395 cv
284.543 15.398 284.801 15.344 285.023 15.234 cv
285.238 15.129 285.418 14.977 285.559 14.77 cv
285.699 14.57 285.801 14.324 285.871 14.035 cv
285.934 13.75 285.969 13.422 285.973 13.047 cv
cp
f
296.238 16.516 mo
296.234 16.57 296.219 16.613 296.191 16.652 cv
296.156 16.691 296.105 16.727 296.035 16.75 cv
295.961 16.777 295.859 16.793 295.734 16.809 cv
295.605 16.82 295.449 16.828 295.266 16.828 cv
295.07 16.828 294.91 16.82 294.785 16.809 cv
294.656 16.793 294.555 16.777 294.484 16.75 cv
294.406 16.727 294.355 16.691 294.328 16.652 cv
294.293 16.613 294.277 16.57 294.281 16.516 cv
294.281 12.551 li
294.277 12.215 294.254 11.949 294.207 11.754 cv
294.156 11.562 294.082 11.398 293.992 11.262 cv
293.898 11.125 293.781 11.02 293.633 10.941 cv
293.484 10.867 293.309 10.828 293.113 10.828 cv
292.859 10.828 292.609 10.922 292.355 11.102 cv
292.102 11.285 291.836 11.547 291.563 11.895 cv
291.563 16.516 li
291.559 16.57 291.543 16.613 291.516 16.652 cv
291.48 16.691 291.426 16.727 291.355 16.75 cv
291.277 16.777 291.18 16.793 291.055 16.809 cv
290.93 16.82 290.77 16.828 290.582 16.828 cv
290.387 16.828 290.23 16.82 290.105 16.809 cv
289.98 16.793 289.879 16.777 289.805 16.75 cv
289.727 16.727 289.672 16.691 289.645 16.652 cv
289.609 16.613 289.594 16.57 289.598 16.516 cv
289.598 9.56598 li
289.594 9.52002 289.609 9.47302 289.637 9.42999 cv
289.66 9.39502 289.707 9.36298 289.777 9.33197 cv
289.844 9.30902 289.93 9.289 290.039 9.27301 cv
290.145 9.26599 290.277 9.258 290.441 9.25403 cv
290.605 9.258 290.742 9.26599 290.852 9.27301 cv
290.957 9.289 291.043 9.30902 291.105 9.33197 cv
291.164 9.36298 291.207 9.39502 291.234 9.42999 cv
291.258 9.47302 291.27 9.52002 291.273 9.56598 cv
291.273 10.367 li
291.656 9.95697 292.047 9.64502 292.445 9.43402 cv
292.84 9.22699 293.258 9.125 293.691 9.12097 cv
294.16 9.125 294.559 9.203 294.887 9.35498 cv
295.211 9.51599 295.473 9.72699 295.672 9.992 cv
295.871 10.262 296.016 10.574 296.105 10.93 cv
296.191 11.289 296.234 11.719 296.238 12.223 cv
cp
f
312.703 9.55103 mo
312.699 9.60901 312.691 9.67999 312.68 9.76202 cv
312.66 9.84399 312.633 9.96503 312.594 10.117 cv
310.738 16.406 li
310.711 16.496 310.676 16.57 310.637 16.621 cv
310.594 16.68 310.531 16.723 310.445 16.75 cv
310.359 16.781 310.234 16.797 310.078 16.812 cv
309.914 16.82 309.711 16.828 309.461 16.828 cv
309.203 16.828 308.992 16.82 308.836 16.809 cv
308.672 16.793 308.547 16.773 308.457 16.742 cv
308.363 16.715 308.297 16.672 308.258 16.613 cv
308.215 16.562 308.184 16.492 308.164 16.406 cv
306.996 12.184 li
306.98 12.113 li
306.965 12.184 li
305.891 16.406 li
305.867 16.496 305.836 16.57 305.801 16.621 cv
305.758 16.68 305.691 16.723 305.602 16.75 cv
305.504 16.781 305.379 16.797 305.219 16.812 cv
305.059 16.82 304.852 16.828 304.598 16.828 cv
304.336 16.828 304.125 16.82 303.969 16.809 cv
303.809 16.793 303.684 16.773 303.594 16.742 cv
303.5 16.715 303.434 16.672 303.395 16.613 cv
303.352 16.562 303.32 16.492 303.305 16.406 cv
301.465 10.117 li
301.414 9.96899 301.387 9.85199 301.375 9.76599 cv
301.359 9.68402 301.352 9.60901 301.355 9.55103 cv
301.352 9.5 301.367 9.45697 301.398 9.414 cv
301.426 9.37903 301.477 9.34802 301.555 9.32001 cv
301.629 9.30103 301.73 9.28101 301.855 9.27002 cv
301.98 9.26202 302.141 9.258 302.336 9.25403 cv
302.543 9.258 302.711 9.26202 302.844 9.27002 cv
302.973 9.28101 303.074 9.30103 303.148 9.32397 cv
303.219 9.35199 303.27 9.38702 303.301 9.42999 cv
303.328 9.47699 303.352 9.53101 303.367 9.59003 cv
304.746 14.691 li
304.762 14.785 li
304.777 14.691 li
306.07 9.59003 li
306.082 9.53101 306.109 9.47699 306.145 9.42999 cv
306.176 9.38702 306.227 9.35199 306.297 9.32397 cv
306.363 9.30103 306.457 9.28101 306.578 9.27002 cv
306.699 9.26202 306.855 9.258 307.051 9.25403 cv
307.242 9.258 307.398 9.26599 307.52 9.27301 cv
307.637 9.289 307.73 9.30499 307.805 9.328 cv
307.871 9.35199 307.922 9.383 307.953 9.422 cv
307.98 9.461 308.004 9.508 308.02 9.55902 cv
309.406 14.699 li
309.43 14.785 li
309.445 14.691 li
310.77 9.59003 li
310.777 9.53101 310.801 9.47699 310.832 9.42999 cv
310.863 9.38702 310.914 9.35199 310.988 9.32397 cv
311.059 9.30103 311.156 9.28101 311.281 9.27002 cv
311.402 9.26202 311.563 9.258 311.758 9.25403 cv
311.949 9.258 312.105 9.26202 312.23 9.27002 cv
312.352 9.28101 312.449 9.30103 312.52 9.32001 cv
312.59 9.34802 312.637 9.37903 312.664 9.414 cv
312.688 9.45697 312.699 9.5 312.703 9.55103 cv
cp
f
315.914 16.516 mo
315.91 16.57 315.895 16.613 315.867 16.652 cv
315.832 16.691 315.777 16.727 315.707 16.75 cv
315.629 16.777 315.531 16.793 315.406 16.809 cv
315.281 16.82 315.121 16.828 314.934 16.828 cv
314.738 16.828 314.582 16.82 314.457 16.809 cv
314.332 16.793 314.23 16.777 314.156 16.75 cv
314.078 16.727 314.023 16.691 313.996 16.652 cv
313.961 16.613 313.945 16.57 313.949 16.516 cv
313.949 9.58197 li
313.945 9.53101 313.961 9.48401 313.996 9.44501 cv
314.023 9.40601 314.078 9.375 314.156 9.34399 cv
314.23 9.32001 314.332 9.297 314.457 9.27698 cv
314.582 9.26599 314.738 9.258 314.934 9.25403 cv
315.121 9.258 315.281 9.26599 315.406 9.27698 cv
315.531 9.297 315.629 9.32001 315.707 9.34399 cv
315.777 9.375 315.832 9.40601 315.867 9.44501 cv
315.895 9.48401 315.91 9.53101 315.914 9.58197 cv
cp
316.063 7.211 mo
316.063 7.60901 315.98 7.883 315.82 8.03101 cv
315.656 8.18402 315.359 8.258 314.926 8.25403 cv
314.48 8.258 314.18 8.18402 314.031 8.039 cv
313.875 7.89502 313.801 7.633 313.801 7.25 cv
313.801 6.85498 313.879 6.58197 314.039 6.42999 cv
314.195 6.27698 314.496 6.19897 314.941 6.19897 cv
315.375 6.19897 315.672 6.27301 315.828 6.422 cv
315.984 6.57001 316.063 6.836 316.063 7.211 cv
cp
f
321.996 15.832 mo
321.996 16.059 321.98 16.234 321.953 16.355 cv
321.922 16.48 321.883 16.566 321.84 16.613 cv
321.789 16.664 321.723 16.707 321.633 16.746 cv
321.539 16.785 321.43 16.816 321.313 16.848 cv
321.188 16.871 321.055 16.895 320.914 16.914 cv
320.77 16.926 320.629 16.934 320.484 16.937 cv
320.094 16.934 319.754 16.883 319.469 16.789 cv
319.184 16.687 318.949 16.539 318.762 16.332 cv
318.574 16.129 318.434 15.871 318.348 15.559 cv
318.254 15.25 318.211 14.879 318.215 14.449 cv
318.215 10.891 li
317.383 10.891 li
317.281 10.895 317.207 10.832 317.156 10.707 cv
317.102 10.586 317.074 10.383 317.078 10.094 cv
317.074 9.94501 317.082 9.81598 317.098 9.71503 cv
317.109 9.61298 317.129 9.53101 317.156 9.46899 cv
317.18 9.40997 317.211 9.367 317.254 9.34003 cv
317.289 9.31598 317.336 9.30499 317.391 9.30103 cv
318.215 9.30103 li
318.215 7.75 li
318.211 7.703 318.227 7.65601 318.258 7.60901 cv
318.285 7.57001 318.336 7.53497 318.414 7.50403 cv
318.488 7.47998 318.59 7.45697 318.719 7.44098 cv
318.844 7.42999 319 7.42603 319.191 7.422 cv
319.379 7.42603 319.539 7.42999 319.668 7.44098 cv
319.793 7.45697 319.895 7.47998 319.969 7.50403 cv
320.039 7.53497 320.09 7.57001 320.125 7.60901 cv
320.152 7.65601 320.168 7.703 320.172 7.75 cv
320.172 9.30103 li
321.684 9.30103 li
321.734 9.30499 321.781 9.31598 321.82 9.34003 cv
321.859 9.367 321.891 9.40997 321.918 9.46899 cv
321.941 9.53101 321.961 9.61298 321.977 9.71503 cv
321.988 9.81598 321.996 9.94501 321.996 10.094 cv
321.996 10.383 321.969 10.586 321.918 10.707 cv
321.863 10.832 321.789 10.895 321.691 10.891 cv
320.172 10.891 li
320.172 14.156 li
320.168 14.535 320.227 14.82 320.352 15.008 cv
320.469 15.199 320.684 15.293 320.988 15.293 cv
321.09 15.293 321.184 15.285 321.27 15.266 cv
321.352 15.25 321.426 15.23 321.492 15.203 cv
321.555 15.184 321.609 15.16 321.656 15.141 cv
321.699 15.125 321.738 15.117 321.777 15.113 cv
321.805 15.117 321.836 15.125 321.867 15.141 cv
321.895 15.16 321.914 15.199 321.934 15.25 cv
321.945 15.309 321.961 15.383 321.977 15.473 cv
321.988 15.57 321.996 15.687 321.996 15.832 cv
cp
f
330.055 16.516 mo
330.051 16.57 330.035 16.613 330.008 16.652 cv
329.973 16.691 329.922 16.727 329.852 16.75 cv
329.777 16.777 329.676 16.793 329.551 16.809 cv
329.422 16.82 329.266 16.828 329.082 16.828 cv
328.887 16.828 328.727 16.82 328.602 16.809 cv
328.473 16.793 328.371 16.777 328.301 16.75 cv
328.223 16.727 328.172 16.691 328.145 16.652 cv
328.109 16.613 328.094 16.57 328.098 16.516 cv
328.098 12.551 li
328.094 12.215 328.07 11.949 328.023 11.754 cv
327.973 11.562 327.898 11.398 327.809 11.262 cv
327.715 11.125 327.598 11.02 327.449 10.941 cv
327.301 10.867 327.125 10.828 326.93 10.828 cv
326.676 10.828 326.426 10.922 326.172 11.102 cv
325.918 11.285 325.652 11.547 325.379 11.895 cv
325.379 16.516 li
325.375 16.57 325.359 16.613 325.332 16.652 cv
325.297 16.691 325.242 16.727 325.172 16.75 cv
325.094 16.777 324.996 16.793 324.871 16.809 cv
324.746 16.82 324.586 16.828 324.398 16.828 cv
324.203 16.828 324.047 16.82 323.922 16.809 cv
323.797 16.793 323.695 16.777 323.621 16.75 cv
323.543 16.727 323.488 16.691 323.461 16.652 cv
323.426 16.613 323.41 16.57 323.414 16.516 cv
323.414 6.27002 li
323.41 6.21899 323.426 6.172 323.461 6.12903 cv
323.488 6.09003 323.543 6.05499 323.621 6.02301 cv
323.695 5.99597 323.797 5.97699 323.922 5.95697 cv
324.047 5.94501 324.203 5.93701 324.398 5.93402 cv
324.586 5.93701 324.746 5.94501 324.871 5.95697 cv
324.996 5.97699 325.094 5.99597 325.172 6.02301 cv
325.242 6.05499 325.297 6.09003 325.332 6.12903 cv
325.359 6.172 325.375 6.21899 325.379 6.27002 cv
325.379 10.109 li
325.715 9.78101 326.059 9.53497 326.41 9.367 cv
326.758 9.20697 327.125 9.125 327.508 9.12097 cv
327.977 9.125 328.375 9.203 328.703 9.35498 cv
329.027 9.51599 329.289 9.72699 329.488 9.99597 cv
329.688 10.266 329.832 10.582 329.922 10.941 cv
330.008 11.305 330.051 11.742 330.055 12.254 cv
cp
f
341.418 7.539 mo
341.414 7.69897 341.41 7.828 341.398 7.93402 cv
341.383 8.04303 341.359 8.12903 341.336 8.18701 cv
341.305 8.25 341.273 8.297 341.238 8.32397 cv
341.199 8.35901 341.156 8.375 341.113 8.37097 cv
337.816 8.37097 li
337.816 11.086 li
340.91 11.086 li
340.953 11.086 340.996 11.102 341.035 11.125 cv
341.07 11.156 341.102 11.199 341.133 11.258 cv
341.16 11.32 341.18 11.402 341.195 11.504 cv
341.203 11.609 341.211 11.738 341.215 11.895 cv
341.211 12.051 341.203 12.184 341.195 12.285 cv
341.18 12.395 341.16 12.48 341.133 12.543 cv
341.102 12.613 341.07 12.66 341.035 12.687 cv
340.996 12.719 340.953 12.734 340.91 12.73 cv
337.816 12.73 li
337.816 16.484 li
337.813 16.543 337.797 16.594 337.77 16.633 cv
337.734 16.68 337.68 16.715 337.602 16.738 cv
337.52 16.77 337.414 16.789 337.285 16.805 cv
337.152 16.82 336.984 16.828 336.789 16.828 cv
336.586 16.828 336.422 16.82 336.293 16.805 cv
336.156 16.789 336.051 16.77 335.977 16.738 cv
335.895 16.715 335.84 16.68 335.809 16.633 cv
335.773 16.594 335.754 16.543 335.758 16.484 cv
335.758 7.34399 li
335.754 7.117 335.813 6.953 335.934 6.84802 cv
336.047 6.75 336.191 6.69897 336.367 6.69501 cv
341.113 6.69501 li
341.156 6.69897 341.199 6.711 341.238 6.73798 cv
341.273 6.77002 341.305 6.81598 341.336 6.87903 cv
341.359 6.94501 341.383 7.03497 341.398 7.14099 cv
341.41 7.25403 341.414 7.38702 341.418 7.539 cv
cp
f
349.758 12.969 mo
349.754 13.566 349.676 14.109 349.523 14.594 cv
349.363 15.086 349.129 15.504 348.813 15.855 cv
348.496 16.207 348.098 16.48 347.621 16.672 cv
347.141 16.863 346.582 16.957 345.945 16.961 cv
345.324 16.957 344.785 16.875 344.332 16.703 cv
343.871 16.535 343.492 16.285 343.195 15.957 cv
342.891 15.633 342.668 15.23 342.523 14.75 cv
342.379 14.273 342.309 13.727 342.309 13.109 cv
342.309 12.52 342.387 11.98 342.543 11.488 cv
342.699 11 342.938 10.578 343.258 10.227 cv
343.574 9.87903 343.969 9.60498 344.445 9.40997 cv
344.918 9.21899 345.477 9.125 346.117 9.12097 cv
346.742 9.125 347.281 9.20697 347.738 9.375 cv
348.195 9.547 348.574 9.797 348.871 10.121 cv
349.168 10.449 349.391 10.852 349.539 11.328 cv
349.684 11.809 349.754 12.355 349.758 12.969 cv
cp
347.738 13.047 mo
347.734 12.711 347.707 12.395 347.656 12.102 cv
347.598 11.816 347.504 11.566 347.379 11.352 cv
347.246 11.141 347.074 10.973 346.863 10.852 cv
346.645 10.734 346.375 10.676 346.047 10.672 cv
345.758 10.676 345.504 10.73 345.285 10.832 cv
345.066 10.941 344.887 11.098 344.746 11.301 cv
344.605 11.508 344.5 11.754 344.43 12.039 cv
344.359 12.332 344.324 12.66 344.324 13.023 cv
344.324 13.371 344.352 13.687 344.41 13.973 cv
344.465 14.266 344.559 14.516 344.688 14.727 cv
344.813 14.941 344.984 15.105 345.207 15.219 cv
345.422 15.34 345.691 15.398 346.016 15.395 cv
346.309 15.398 346.566 15.344 346.789 15.234 cv
347.004 15.129 347.184 14.977 347.324 14.77 cv
347.465 14.57 347.566 14.324 347.637 14.035 cv
347.699 13.75 347.734 13.422 347.738 13.047 cv
cp
f
357.938 16.516 mo
357.934 16.57 357.922 16.613 357.898 16.652 cv
357.871 16.691 357.824 16.727 357.762 16.75 cv
357.695 16.777 357.609 16.793 357.504 16.809 cv
357.398 16.82 357.266 16.828 357.105 16.828 cv
356.93 16.828 356.789 16.82 356.688 16.809 cv
356.578 16.793 356.496 16.777 356.434 16.75 cv
356.371 16.727 356.324 16.691 356.301 16.652 cv
356.27 16.613 356.258 16.57 356.262 16.516 cv
356.262 15.715 li
355.875 16.129 355.484 16.441 355.09 16.648 cv
354.688 16.855 354.277 16.957 353.855 16.961 cv
353.375 16.957 352.973 16.883 352.648 16.727 cv
352.324 16.574 352.063 16.359 351.863 16.09 cv
351.66 15.82 351.516 15.508 351.434 15.148 cv
351.344 14.793 351.301 14.352 351.305 13.82 cv
351.305 9.56598 li
351.301 9.52002 351.316 9.47302 351.348 9.42999 cv
351.375 9.39502 351.426 9.36298 351.504 9.33197 cv
351.578 9.30902 351.68 9.289 351.809 9.27301 cv
351.934 9.26599 352.09 9.258 352.281 9.25403 cv
352.469 9.258 352.629 9.26599 352.754 9.27301 cv
352.879 9.289 352.977 9.30902 353.055 9.33197 cv
353.125 9.36298 353.18 9.39502 353.215 9.42999 cv
353.242 9.47302 353.258 9.52002 353.262 9.56598 cv
353.262 13.492 li
353.258 13.859 353.281 14.137 353.332 14.328 cv
353.375 14.52 353.445 14.684 353.547 14.82 cv
353.641 14.961 353.766 15.066 353.914 15.141 cv
354.063 15.219 354.234 15.258 354.43 15.254 cv
354.68 15.258 354.93 15.168 355.184 14.98 cv
355.434 14.801 355.703 14.535 355.988 14.187 cv
355.988 9.56598 li
355.988 9.52002 356 9.47302 356.031 9.42999 cv
356.055 9.39502 356.109 9.36298 356.188 9.33197 cv
356.262 9.30902 356.359 9.289 356.488 9.27301 cv
356.609 9.26599 356.77 9.258 356.965 9.25403 cv
357.156 9.258 357.313 9.26599 357.438 9.27301 cv
357.559 9.289 357.66 9.30902 357.734 9.33197 cv
357.805 9.36298 357.855 9.39502 357.891 9.42999 cv
357.918 9.47302 357.934 9.52002 357.938 9.56598 cv
cp
f
364.336 10.211 mo
364.336 10.402 364.328 10.555 364.32 10.672 cv
364.305 10.793 364.289 10.887 364.273 10.953 cv
364.25 11.023 364.223 11.07 364.191 11.094 cv
364.152 11.121 364.109 11.133 364.063 11.133 cv
364.016 11.133 363.969 11.125 363.922 11.105 cv
363.867 11.09 363.809 11.07 363.746 11.047 cv
363.676 11.027 363.605 11.008 363.531 10.988 cv
363.449 10.973 363.363 10.965 363.273 10.961 cv
363.16 10.965 363.051 10.984 362.945 11.027 cv
362.836 11.074 362.723 11.145 362.609 11.234 cv
362.488 11.328 362.367 11.453 362.242 11.605 cv
362.113 11.766 361.977 11.957 361.832 12.184 cv
361.832 16.516 li
361.828 16.57 361.813 16.613 361.785 16.652 cv
361.75 16.691 361.695 16.727 361.625 16.75 cv
361.547 16.777 361.449 16.793 361.324 16.809 cv
361.199 16.82 361.039 16.828 360.852 16.828 cv
360.656 16.828 360.5 16.82 360.375 16.809 cv
360.25 16.793 360.148 16.777 360.074 16.75 cv
359.996 16.727 359.941 16.691 359.914 16.652 cv
359.879 16.613 359.863 16.57 359.867 16.516 cv
359.867 9.56598 li
359.863 9.52002 359.879 9.47302 359.906 9.42999 cv
359.93 9.39502 359.977 9.36298 360.047 9.33197 cv
360.113 9.30902 360.199 9.289 360.309 9.27301 cv
360.414 9.26599 360.547 9.258 360.711 9.25403 cv
360.875 9.258 361.012 9.26599 361.121 9.27301 cv
361.227 9.289 361.313 9.30902 361.375 9.33197 cv
361.434 9.36298 361.477 9.39502 361.504 9.42999 cv
361.527 9.47302 361.539 9.52002 361.543 9.56598 cv
361.543 10.43 li
361.723 10.172 361.895 9.961 362.059 9.789 cv
362.215 9.625 362.371 9.48798 362.52 9.38702 cv
362.664 9.289 362.809 9.22302 362.953 9.17999 cv
363.098 9.14502 363.242 9.125 363.391 9.12097 cv
363.457 9.125 363.531 9.12903 363.609 9.133 cv
363.688 9.14502 363.766 9.15601 363.852 9.172 cv
363.93 9.19098 364.004 9.211 364.07 9.23401 cv
364.129 9.258 364.176 9.28497 364.207 9.30902 cv
364.234 9.34003 364.254 9.367 364.27 9.39502 cv
364.281 9.42999 364.293 9.47302 364.305 9.52301 cv
364.313 9.58197 364.32 9.664 364.328 9.77002 cv
364.332 9.87903 364.336 10.027 364.336 10.211 cv
cp
f
376.16 7.539 mo
376.156 7.69501 376.148 7.82397 376.141 7.92603 cv
376.125 8.03497 376.105 8.12097 376.082 8.18402 cv
376.051 8.25 376.02 8.297 375.984 8.32397 cv
375.941 8.35901 375.898 8.375 375.855 8.37097 cv
373.332 8.37097 li
373.332 16.5 li
373.332 16.555 373.313 16.602 373.281 16.641 cv
373.242 16.684 373.188 16.719 373.113 16.742 cv
373.031 16.77 372.926 16.789 372.797 16.805 cv
372.66 16.82 372.496 16.828 372.301 16.828 cv
372.105 16.828 371.941 16.82 371.809 16.805 cv
371.676 16.789 371.57 16.77 371.492 16.742 cv
371.414 16.719 371.355 16.684 371.324 16.641 cv
371.285 16.602 371.27 16.555 371.273 16.5 cv
371.273 8.37097 li
368.75 8.37097 li
368.695 8.375 368.648 8.35901 368.617 8.32397 cv
368.578 8.297 368.547 8.25 368.523 8.18402 cv
368.492 8.12097 368.473 8.03497 368.465 7.92603 cv
368.449 7.82397 368.445 7.69501 368.445 7.539 cv
368.445 7.38702 368.449 7.25403 368.465 7.14099 cv
368.473 7.03497 368.492 6.94501 368.523 6.87903 cv
368.547 6.81598 368.578 6.77002 368.617 6.73798 cv
368.648 6.711 368.695 6.69897 368.75 6.69501 cv
375.855 6.69501 li
375.898 6.69897 375.941 6.711 375.984 6.73798 cv
376.02 6.77002 376.051 6.81598 376.082 6.87903 cv
376.105 6.94501 376.125 7.03497 376.141 7.14099 cv
376.148 7.25403 376.156 7.38702 376.16 7.539 cv
cp
f
383.875 16.516 mo
383.871 16.57 383.855 16.613 383.828 16.652 cv
383.793 16.691 383.742 16.727 383.672 16.75 cv
383.598 16.777 383.496 16.793 383.371 16.809 cv
383.242 16.82 383.086 16.828 382.902 16.828 cv
382.707 16.828 382.547 16.82 382.422 16.809 cv
382.293 16.793 382.191 16.777 382.121 16.75 cv
382.043 16.727 381.992 16.691 381.965 16.652 cv
381.93 16.613 381.914 16.57 381.918 16.516 cv
381.918 12.551 li
381.914 12.215 381.891 11.949 381.844 11.754 cv
381.793 11.562 381.719 11.398 381.629 11.262 cv
381.535 11.125 381.418 11.02 381.27 10.941 cv
381.121 10.867 380.945 10.828 380.75 10.828 cv
380.496 10.828 380.246 10.922 379.992 11.102 cv
379.738 11.285 379.473 11.547 379.199 11.895 cv
379.199 16.516 li
379.195 16.57 379.18 16.613 379.152 16.652 cv
379.117 16.691 379.063 16.727 378.992 16.75 cv
378.914 16.777 378.816 16.793 378.691 16.809 cv
378.566 16.82 378.406 16.828 378.219 16.828 cv
378.023 16.828 377.867 16.82 377.742 16.809 cv
377.617 16.793 377.516 16.777 377.441 16.75 cv
377.363 16.727 377.309 16.691 377.281 16.652 cv
377.246 16.613 377.23 16.57 377.234 16.516 cv
377.234 6.27002 li
377.23 6.21899 377.246 6.172 377.281 6.12903 cv
377.309 6.09003 377.363 6.05499 377.441 6.02301 cv
377.516 5.99597 377.617 5.97699 377.742 5.95697 cv
377.867 5.94501 378.023 5.93701 378.219 5.93402 cv
378.406 5.93701 378.566 5.94501 378.691 5.95697 cv
378.816 5.97699 378.914 5.99597 378.992 6.02301 cv
379.063 6.05499 379.117 6.09003 379.152 6.12903 cv
379.18 6.172 379.195 6.21899 379.199 6.27002 cv
379.199 10.109 li
379.535 9.78101 379.879 9.53497 380.23 9.367 cv
380.578 9.20697 380.945 9.125 381.328 9.12097 cv
381.797 9.125 382.195 9.203 382.523 9.35498 cv
382.848 9.51599 383.109 9.72699 383.309 9.99597 cv
383.508 10.266 383.652 10.582 383.742 10.941 cv
383.828 11.305 383.871 11.742 383.875 12.254 cv
cp
f
390.273 10.211 mo
390.273 10.402 390.266 10.555 390.258 10.672 cv
390.242 10.793 390.227 10.887 390.211 10.953 cv
390.188 11.023 390.16 11.07 390.129 11.094 cv
390.09 11.121 390.047 11.133 390 11.133 cv
389.953 11.133 389.906 11.125 389.859 11.105 cv
389.805 11.09 389.746 11.07 389.684 11.047 cv
389.613 11.027 389.543 11.008 389.469 10.988 cv
389.387 10.973 389.301 10.965 389.211 10.961 cv
389.098 10.965 388.988 10.984 388.883 11.027 cv
388.773 11.074 388.66 11.145 388.547 11.234 cv
388.426 11.328 388.305 11.453 388.18 11.605 cv
388.051 11.766 387.914 11.957 387.77 12.184 cv
387.77 16.516 li
387.766 16.57 387.75 16.613 387.723 16.652 cv
387.688 16.691 387.633 16.727 387.563 16.75 cv
387.484 16.777 387.387 16.793 387.262 16.809 cv
387.137 16.82 386.977 16.828 386.789 16.828 cv
386.594 16.828 386.438 16.82 386.313 16.809 cv
386.188 16.793 386.086 16.777 386.012 16.75 cv
385.934 16.727 385.879 16.691 385.852 16.652 cv
385.816 16.613 385.801 16.57 385.805 16.516 cv
385.805 9.56598 li
385.801 9.52002 385.816 9.47302 385.844 9.42999 cv
385.867 9.39502 385.914 9.36298 385.984 9.33197 cv
386.051 9.30902 386.137 9.289 386.246 9.27301 cv
386.352 9.26599 386.484 9.258 386.648 9.25403 cv
386.813 9.258 386.949 9.26599 387.059 9.27301 cv
387.164 9.289 387.25 9.30902 387.313 9.33197 cv
387.371 9.36298 387.414 9.39502 387.441 9.42999 cv
387.465 9.47302 387.477 9.52002 387.48 9.56598 cv
387.48 10.43 li
387.66 10.172 387.832 9.961 387.996 9.789 cv
388.152 9.625 388.309 9.48798 388.457 9.38702 cv
388.602 9.289 388.746 9.22302 388.891 9.17999 cv
389.035 9.14502 389.18 9.125 389.328 9.12097 cv
389.395 9.125 389.469 9.12903 389.547 9.133 cv
389.625 9.14502 389.703 9.15601 389.789 9.172 cv
389.867 9.19098 389.941 9.211 390.008 9.23401 cv
390.066 9.258 390.113 9.28497 390.145 9.30902 cv
390.172 9.34003 390.191 9.367 390.207 9.39502 cv
390.219 9.42999 390.23 9.47302 390.242 9.52301 cv
390.25 9.58197 390.258 9.664 390.266 9.77002 cv
390.27 9.87903 390.273 10.027 390.273 10.211 cv
cp
f
397.715 12.84 mo
397.711 13.078 397.66 13.254 397.555 13.367 cv
397.445 13.484 397.297 13.543 397.117 13.539 cv
392.883 13.539 li
392.879 13.84 392.914 14.109 392.988 14.348 cv
393.055 14.59 393.168 14.793 393.324 14.961 cv
393.477 15.133 393.672 15.262 393.914 15.348 cv
394.152 15.437 394.441 15.48 394.785 15.48 cv
395.125 15.48 395.426 15.457 395.688 15.406 cv
395.945 15.359 396.172 15.305 396.363 15.242 cv
396.551 15.184 396.707 15.129 396.836 15.078 cv
396.957 15.031 397.059 15.008 397.141 15.004 cv
397.184 15.008 397.223 15.016 397.258 15.031 cv
397.285 15.051 397.313 15.082 397.332 15.129 cv
397.352 15.176 397.363 15.242 397.375 15.328 cv
397.379 15.414 397.383 15.523 397.387 15.652 cv
397.383 15.77 397.383 15.867 397.379 15.945 cv
397.371 16.027 397.363 16.094 397.355 16.148 cv
397.344 16.207 397.328 16.258 397.309 16.293 cv
397.289 16.336 397.262 16.371 397.23 16.406 cv
397.195 16.445 397.102 16.496 396.953 16.555 cv
396.797 16.621 396.605 16.684 396.375 16.738 cv
396.137 16.801 395.867 16.848 395.57 16.895 cv
395.266 16.934 394.945 16.957 394.605 16.961 cv
393.984 16.957 393.441 16.883 392.98 16.727 cv
392.512 16.574 392.125 16.336 391.816 16.02 cv
391.5 15.703 391.266 15.305 391.117 14.82 cv
390.961 14.34 390.887 13.773 390.891 13.117 cv
390.887 12.504 390.965 11.945 391.129 11.449 cv
391.285 10.953 391.52 10.535 391.832 10.187 cv
392.137 9.84399 392.512 9.578 392.949 9.39502 cv
393.387 9.21503 393.879 9.125 394.434 9.12097 cv
395.012 9.125 395.512 9.211 395.926 9.37903 cv
396.34 9.55499 396.676 9.79303 396.941 10.094 cv
397.203 10.398 397.398 10.758 397.527 11.172 cv
397.648 11.59 397.711 12.039 397.715 12.527 cv
cp
395.813 12.277 mo
395.824 11.727 395.715 11.293 395.48 10.98 cv
395.246 10.668 394.879 10.512 394.387 10.508 cv
394.137 10.512 393.922 10.559 393.738 10.648 cv
393.551 10.746 393.398 10.871 393.277 11.027 cv
393.152 11.187 393.059 11.375 392.996 11.59 cv
392.93 11.805 392.891 12.035 392.883 12.277 cv
cp
f
405.246 16.539 mo
405.242 16.617 405.215 16.672 405.168 16.711 cv
405.113 16.754 405.031 16.781 404.922 16.801 cv
404.805 16.816 404.641 16.828 404.426 16.828 cv
404.188 16.828 404.016 16.816 403.914 16.801 cv
403.805 16.781 403.73 16.754 403.691 16.711 cv
403.645 16.672 403.625 16.617 403.625 16.539 cv
403.625 15.988 li
403.336 16.297 403.008 16.535 402.645 16.703 cv
402.277 16.875 401.871 16.957 401.426 16.961 cv
401.055 16.957 400.715 16.91 400.406 16.816 cv
400.098 16.723 399.832 16.582 399.605 16.387 cv
399.379 16.199 399.203 15.965 399.078 15.684 cv
398.953 15.406 398.891 15.078 398.895 14.699 cv
398.891 14.301 398.969 13.949 399.129 13.645 cv
399.285 13.348 399.523 13.102 399.84 12.906 cv
400.152 12.715 400.543 12.57 401.012 12.473 cv
401.48 12.383 402.023 12.336 402.641 12.332 cv
403.32 12.332 li
403.32 11.91 li
403.32 11.695 403.297 11.504 403.254 11.34 cv
403.207 11.18 403.133 11.043 403.035 10.93 cv
402.93 10.824 402.797 10.742 402.629 10.687 cv
402.457 10.637 402.246 10.613 402.004 10.609 cv
401.672 10.613 401.379 10.648 401.125 10.719 cv
400.863 10.793 400.637 10.875 400.441 10.961 cv
400.242 11.055 400.078 11.133 399.949 11.203 cv
399.813 11.277 399.703 11.316 399.625 11.312 cv
399.563 11.316 399.512 11.297 399.473 11.258 cv
399.426 11.223 399.391 11.172 399.363 11.102 cv
399.332 11.039 399.309 10.953 399.297 10.852 cv
399.277 10.754 399.27 10.645 399.273 10.523 cv
399.27 10.363 399.285 10.238 399.313 10.141 cv
399.336 10.051 399.383 9.96503 399.461 9.88702 cv
399.531 9.81201 399.66 9.72998 399.844 9.64099 cv
400.023 9.55103 400.234 9.46503 400.48 9.38702 cv
400.723 9.30902 400.992 9.24597 401.281 9.19501 cv
401.57 9.14801 401.867 9.125 402.176 9.12097 cv
402.719 9.125 403.184 9.17603 403.57 9.28101 cv
403.957 9.39099 404.277 9.55499 404.527 9.77301 cv
404.777 9.992 404.957 10.277 405.074 10.625 cv
405.184 10.977 405.242 11.391 405.246 11.863 cv
cp
403.32 13.562 mo
402.57 13.562 li
402.254 13.566 401.984 13.59 401.762 13.633 cv
401.535 13.684 401.352 13.754 401.215 13.844 cv
401.07 13.941 400.969 14.055 400.906 14.184 cv
400.84 14.32 400.805 14.469 400.809 14.637 cv
400.805 14.93 400.898 15.16 401.086 15.324 cv
401.27 15.492 401.527 15.574 401.855 15.574 cv
402.129 15.574 402.379 15.504 402.613 15.363 cv
402.84 15.223 403.078 15.02 403.32 14.746 cv
cp
f
413.832 16.516 mo
413.828 16.578 413.816 16.625 413.793 16.66 cv
413.766 16.703 413.719 16.734 413.66 16.758 cv
413.594 16.781 413.512 16.797 413.406 16.812 cv
413.301 16.82 413.168 16.828 413.016 16.828 cv
412.844 16.828 412.711 16.82 412.609 16.812 cv
412.504 16.797 412.418 16.781 412.355 16.758 cv
412.289 16.734 412.242 16.703 412.215 16.66 cv
412.184 16.625 412.168 16.578 412.172 16.516 cv
412.172 15.746 li
411.813 16.133 411.438 16.43 411.047 16.641 cv
410.648 16.852 410.215 16.957 409.742 16.961 cv
409.207 16.957 408.758 16.855 408.395 16.652 cv
408.027 16.449 407.73 16.176 407.5 15.824 cv
407.266 15.48 407.098 15.074 406.996 14.605 cv
406.895 14.145 406.844 13.652 406.844 13.133 cv
406.844 12.52 406.906 11.965 407.039 11.469 cv
407.168 10.977 407.363 10.555 407.621 10.207 cv
407.875 9.85901 408.191 9.59399 408.57 9.40198 cv
408.949 9.21899 409.387 9.125 409.883 9.12097 cv
410.27 9.125 410.621 9.203 410.941 9.35901 cv
411.254 9.52002 411.57 9.75 411.883 10.055 cv
411.883 6.29303 li
411.883 6.242 411.895 6.19501 411.926 6.15198 cv
411.949 6.11298 412.004 6.078 412.082 6.047 cv
412.156 6.02002 412.254 6 412.383 5.97998 cv
412.504 5.96899 412.664 5.961 412.859 5.95697 cv
413.051 5.961 413.207 5.96899 413.332 5.97998 cv
413.453 6 413.555 6.02002 413.629 6.047 cv
413.699 6.078 413.75 6.11298 413.785 6.15198 cv
413.813 6.19501 413.828 6.242 413.832 6.29303 cv
cp
411.883 11.871 mo
411.602 11.52 411.332 11.25 411.078 11.062 cv
410.816 10.875 410.547 10.781 410.27 10.781 cv
410.016 10.781 409.797 10.848 409.613 10.973 cv
409.426 11.105 409.277 11.273 409.168 11.484 cv
409.055 11.695 408.973 11.934 408.918 12.195 cv
408.863 12.461 408.836 12.73 408.836 13 cv
408.836 13.297 408.859 13.578 408.906 13.852 cv
408.953 14.129 409.027 14.375 409.137 14.59 cv
409.238 14.805 409.383 14.977 409.563 15.105 cv
409.738 15.238 409.961 15.305 410.23 15.301 cv
410.363 15.305 410.492 15.285 410.625 15.242 cv
410.75 15.207 410.883 15.145 411.016 15.051 cv
411.148 14.965 411.285 14.848 411.426 14.703 cv
411.566 14.562 411.719 14.387 411.883 14.18 cv
cp
f
420.656 14.551 mo
420.652 14.949 420.578 15.297 420.434 15.598 cv
420.285 15.898 420.078 16.152 419.809 16.352 cv
419.535 16.559 419.215 16.707 418.848 16.809 cv
418.48 16.906 418.078 16.957 417.648 16.961 cv
417.383 16.957 417.137 16.937 416.902 16.902 cv
416.668 16.859 416.457 16.812 416.27 16.754 cv
416.082 16.695 415.926 16.633 415.801 16.57 cv
415.676 16.508 415.582 16.449 415.527 16.395 cv
415.469 16.34 415.426 16.258 415.398 16.141 cv
415.363 16.027 415.348 15.852 415.352 15.621 cv
415.348 15.473 415.355 15.352 415.367 15.258 cv
415.375 15.168 415.391 15.098 415.414 15.039 cv
415.434 14.988 415.457 14.949 415.492 14.93 cv
415.52 14.914 415.559 14.906 415.605 14.902 cv
415.66 14.906 415.746 14.937 415.859 15 cv
415.969 15.066 416.105 15.141 416.277 15.215 cv
416.441 15.297 416.637 15.367 416.855 15.434 cv
417.074 15.504 417.324 15.539 417.609 15.535 cv
417.785 15.539 417.941 15.52 418.082 15.48 cv
418.215 15.445 418.336 15.395 418.441 15.324 cv
418.539 15.258 418.613 15.172 418.668 15.066 cv
418.715 14.965 418.742 14.844 418.746 14.707 cv
418.742 14.551 418.695 14.418 418.602 14.309 cv
418.508 14.199 418.379 14.102 418.223 14.016 cv
418.059 13.934 417.879 13.855 417.684 13.781 cv
417.48 13.711 417.277 13.633 417.066 13.539 cv
416.855 13.453 416.648 13.352 416.453 13.234 cv
416.25 13.125 416.07 12.984 415.914 12.816 cv
415.75 12.652 415.625 12.453 415.531 12.215 cv
415.438 11.984 415.391 11.703 415.391 11.371 cv
415.391 11.043 415.453 10.738 415.582 10.457 cv
415.711 10.184 415.898 9.94501 416.145 9.74597 cv
416.387 9.55103 416.684 9.39801 417.035 9.28497 cv
417.383 9.17999 417.777 9.125 418.219 9.12097 cv
418.434 9.125 418.645 9.14099 418.852 9.16803 cv
419.055 9.203 419.242 9.242 419.41 9.28497 cv
419.574 9.336 419.715 9.38702 419.832 9.43701 cv
419.945 9.49597 420.027 9.54303 420.078 9.578 cv
420.125 9.62097 420.16 9.65997 420.184 9.69501 cv
420.203 9.73798 420.215 9.78497 420.227 9.836 cv
420.234 9.89099 420.246 9.95697 420.254 10.035 cv
420.262 10.121 420.266 10.219 420.266 10.336 cv
420.266 10.477 420.262 10.594 420.254 10.68 cv
420.246 10.773 420.23 10.844 420.215 10.891 cv
420.195 10.945 420.172 10.98 420.145 10.996 cv
420.109 11.02 420.074 11.027 420.035 11.023 cv
419.984 11.027 419.91 11 419.816 10.941 cv
419.715 10.891 419.594 10.832 419.445 10.766 cv
419.297 10.707 419.125 10.648 418.93 10.59 cv
418.734 10.539 418.512 10.512 418.266 10.508 cv
418.086 10.512 417.934 10.531 417.805 10.562 cv
417.672 10.602 417.563 10.652 417.484 10.719 cv
417.398 10.789 417.336 10.867 417.297 10.957 cv
417.25 11.051 417.23 11.148 417.234 11.25 cv
417.23 11.41 417.281 11.547 417.383 11.652 cv
417.48 11.766 417.609 11.859 417.773 11.941 cv
417.934 12.027 418.117 12.105 418.324 12.176 cv
418.527 12.25 418.734 12.332 418.945 12.414 cv
419.152 12.504 419.359 12.602 419.57 12.715 cv
419.773 12.828 419.957 12.969 420.117 13.133 cv
420.277 13.301 420.406 13.5 420.508 13.73 cv
420.602 13.965 420.652 14.238 420.656 14.551 cv
cp
f
429.445 12.863 mo
429.441 13.164 429.414 13.375 429.359 13.492 cv
429.301 13.617 429.211 13.676 429.086 13.672 cv
425.844 13.672 li
425.715 13.676 425.621 13.613 425.566 13.488 cv
425.504 13.367 425.477 13.16 425.48 12.863 cv
425.477 12.574 425.504 12.367 425.566 12.246 cv
425.621 12.129 425.715 12.07 425.844 12.066 cv
429.086 12.066 li
429.148 12.07 429.199 12.082 429.246 12.105 cv
429.285 12.133 429.324 12.18 429.359 12.238 cv
429.387 12.305 429.41 12.387 429.426 12.488 cv
429.438 12.594 429.441 12.719 429.445 12.863 cv
cp
f
440.18 15.926 mo
440.176 16.082 440.172 16.215 440.16 16.316 cv
440.145 16.426 440.125 16.512 440.102 16.582 cv
440.074 16.652 440.039 16.703 440.004 16.734 cv
439.961 16.766 439.918 16.781 439.867 16.781 cv
435.246 16.781 li
435.07 16.781 434.926 16.73 434.813 16.629 cv
434.691 16.527 434.633 16.363 434.637 16.133 cv
434.637 6.97699 li
434.633 6.92999 434.652 6.883 434.688 6.836 cv
434.719 6.797 434.773 6.76202 434.855 6.73401 cv
434.93 6.711 435.035 6.69098 435.172 6.672 cv
435.301 6.65997 435.465 6.65198 435.668 6.64801 cv
435.863 6.65198 436.031 6.65997 436.164 6.672 cv
436.293 6.69098 436.395 6.711 436.477 6.73401 cv
436.551 6.76202 436.609 6.797 436.645 6.836 cv
436.676 6.883 436.691 6.92999 436.695 6.97699 cv
436.695 15.09 li
439.867 15.09 li
439.918 15.094 439.961 15.109 440.004 15.133 cv
440.039 15.164 440.074 15.211 440.102 15.273 cv
440.125 15.344 440.145 15.43 440.16 15.531 cv
440.172 15.641 440.176 15.77 440.18 15.926 cv
cp
f
448.305 12.969 mo
448.301 13.566 448.223 14.109 448.07 14.594 cv
447.91 15.086 447.676 15.504 447.359 15.855 cv
447.043 16.207 446.645 16.48 446.168 16.672 cv
445.688 16.863 445.129 16.957 444.492 16.961 cv
443.871 16.957 443.332 16.875 442.879 16.703 cv
442.418 16.535 442.039 16.285 441.742 15.957 cv
441.438 15.633 441.215 15.23 441.07 14.75 cv
440.926 14.273 440.855 13.727 440.855 13.109 cv
440.855 12.52 440.934 11.98 441.09 11.488 cv
441.246 11 441.484 10.578 441.805 10.227 cv
442.121 9.87903 442.516 9.60498 442.992 9.40997 cv
443.465 9.21899 444.023 9.125 444.664 9.12097 cv
445.289 9.125 445.828 9.20697 446.285 9.375 cv
446.742 9.547 447.121 9.797 447.418 10.121 cv
447.715 10.449 447.938 10.852 448.086 11.328 cv
448.23 11.809 448.301 12.355 448.305 12.969 cv
cp
446.285 13.047 mo
446.281 12.711 446.254 12.395 446.203 12.102 cv
446.145 11.816 446.051 11.566 445.926 11.352 cv
445.793 11.141 445.621 10.973 445.41 10.852 cv
445.191 10.734 444.922 10.676 444.594 10.672 cv
444.305 10.676 444.051 10.73 443.832 10.832 cv
443.613 10.941 443.434 11.098 443.293 11.301 cv
443.152 11.508 443.047 11.754 442.977 12.039 cv
442.906 12.332 442.871 12.66 442.871 13.023 cv
442.871 13.371 442.898 13.687 442.957 13.973 cv
443.012 14.266 443.105 14.516 443.234 14.727 cv
443.359 14.941 443.531 15.105 443.754 15.219 cv
443.969 15.34 444.238 15.398 444.563 15.395 cv
444.855 15.398 445.113 15.344 445.336 15.234 cv
445.551 15.129 445.73 14.977 445.871 14.77 cv
446.012 14.57 446.113 14.324 446.184 14.035 cv
446.246 13.75 446.281 13.422 446.285 13.047 cv
cp
f
455.121 15.41 mo
455.117 15.547 455.113 15.66 455.109 15.75 cv
455.098 15.844 455.09 15.922 455.078 15.98 cv
455.063 16.043 455.047 16.094 455.031 16.129 cv
455.012 16.172 454.969 16.219 454.91 16.277 cv
454.844 16.34 454.738 16.414 454.59 16.496 cv
454.438 16.586 454.266 16.664 454.074 16.727 cv
453.883 16.797 453.676 16.848 453.449 16.891 cv
453.223 16.93 452.988 16.949 452.754 16.953 cv
452.215 16.949 451.742 16.871 451.328 16.703 cv
450.914 16.539 450.566 16.293 450.289 15.969 cv
450.004 15.645 449.793 15.25 449.652 14.781 cv
449.512 14.316 449.441 13.777 449.441 13.172 cv
449.441 12.477 449.527 11.879 449.699 11.371 cv
449.871 10.867 450.113 10.445 450.43 10.113 cv
450.738 9.78101 451.105 9.53497 451.535 9.37097 cv
451.957 9.211 452.426 9.12903 452.938 9.12903 cv
453.145 9.12903 453.348 9.14801 453.551 9.18402 cv
453.746 9.22302 453.934 9.27301 454.109 9.33197 cv
454.281 9.39801 454.438 9.46899 454.578 9.54303 cv
454.715 9.625 454.813 9.69098 454.871 9.74597 cv
454.926 9.80499 454.965 9.85199 454.992 9.88702 cv
455.012 9.92999 455.031 9.97998 455.047 10.039 cv
455.059 10.105 455.07 10.184 455.078 10.27 cv
455.086 10.363 455.09 10.473 455.09 10.602 cv
455.09 10.906 455.063 11.117 455.012 11.238 cv
454.957 11.359 454.891 11.422 454.809 11.418 cv
454.719 11.422 454.625 11.387 454.527 11.312 cv
454.426 11.242 454.309 11.16 454.176 11.07 cv
454.043 10.984 453.883 10.902 453.695 10.828 cv
453.508 10.758 453.281 10.723 453.023 10.719 cv
452.512 10.723 452.125 10.918 451.855 11.309 cv
451.582 11.699 451.445 12.273 451.449 13.031 cv
451.445 13.406 451.48 13.738 451.551 14.023 cv
451.617 14.309 451.715 14.547 451.852 14.738 cv
451.98 14.934 452.148 15.078 452.352 15.172 cv
452.551 15.27 452.781 15.316 453.047 15.316 cv
453.313 15.316 453.547 15.277 453.746 15.195 cv
453.938 15.117 454.105 15.027 454.254 14.926 cv
454.395 14.828 454.52 14.738 454.621 14.656 cv
454.719 14.578 454.801 14.539 454.871 14.535 cv
454.914 14.539 454.953 14.551 454.988 14.574 cv
455.016 14.602 455.039 14.648 455.063 14.719 cv
455.078 14.789 455.094 14.879 455.105 14.988 cv
455.113 15.098 455.117 15.238 455.121 15.41 cv
cp
f
462.406 16.539 mo
462.402 16.617 462.375 16.672 462.328 16.711 cv
462.273 16.754 462.191 16.781 462.082 16.801 cv
461.965 16.816 461.801 16.828 461.586 16.828 cv
461.348 16.828 461.176 16.816 461.074 16.801 cv
460.965 16.781 460.891 16.754 460.852 16.711 cv
460.805 16.672 460.785 16.617 460.785 16.539 cv
460.785 15.988 li
460.496 16.297 460.168 16.535 459.805 16.703 cv
459.438 16.875 459.031 16.957 458.586 16.961 cv
458.215 16.957 457.875 16.91 457.566 16.816 cv
457.258 16.723 456.992 16.582 456.766 16.387 cv
456.539 16.199 456.363 15.965 456.238 15.684 cv
456.113 15.406 456.051 15.078 456.055 14.699 cv
456.051 14.301 456.129 13.949 456.289 13.645 cv
456.445 13.348 456.684 13.102 457 12.906 cv
457.313 12.715 457.703 12.57 458.172 12.473 cv
458.641 12.383 459.184 12.336 459.801 12.332 cv
460.48 12.332 li
460.48 11.91 li
460.48 11.695 460.457 11.504 460.414 11.34 cv
460.367 11.18 460.293 11.043 460.195 10.93 cv
460.09 10.824 459.957 10.742 459.789 10.687 cv
459.617 10.637 459.406 10.613 459.164 10.609 cv
458.832 10.613 458.539 10.648 458.285 10.719 cv
458.023 10.793 457.797 10.875 457.602 10.961 cv
457.402 11.055 457.238 11.133 457.109 11.203 cv
456.973 11.277 456.863 11.316 456.785 11.312 cv
456.723 11.316 456.672 11.297 456.633 11.258 cv
456.586 11.223 456.551 11.172 456.523 11.102 cv
456.492 11.039 456.469 10.953 456.457 10.852 cv
456.438 10.754 456.43 10.645 456.434 10.523 cv
456.43 10.363 456.445 10.238 456.473 10.141 cv
456.496 10.051 456.543 9.96503 456.621 9.88702 cv
456.691 9.81201 456.82 9.72998 457.004 9.64099 cv
457.184 9.55103 457.395 9.46503 457.641 9.38702 cv
457.883 9.30902 458.152 9.24597 458.441 9.19501 cv
458.73 9.14801 459.027 9.125 459.336 9.12097 cv
459.879 9.125 460.344 9.17603 460.73 9.28101 cv
461.117 9.39099 461.438 9.55499 461.688 9.77301 cv
461.938 9.992 462.117 10.277 462.234 10.625 cv
462.344 10.977 462.402 11.391 462.406 11.863 cv
cp
460.48 13.562 mo
459.73 13.562 li
459.414 13.566 459.145 13.59 458.922 13.633 cv
458.695 13.684 458.512 13.754 458.375 13.844 cv
458.23 13.941 458.129 14.055 458.066 14.184 cv
458 14.32 457.965 14.469 457.969 14.637 cv
457.965 14.93 458.059 15.16 458.246 15.324 cv
458.43 15.492 458.688 15.574 459.016 15.574 cv
459.289 15.574 459.539 15.504 459.773 15.363 cv
460 15.223 460.238 15.02 460.48 14.746 cv
cp
f
466.332 16.516 mo
466.328 16.57 466.313 16.613 466.285 16.652 cv
466.25 16.691 466.195 16.727 466.125 16.75 cv
466.047 16.777 465.949 16.793 465.824 16.809 cv
465.699 16.82 465.539 16.828 465.352 16.828 cv
465.156 16.828 465 16.82 464.875 16.809 cv
464.75 16.793 464.648 16.777 464.574 16.75 cv
464.496 16.727 464.441 16.691 464.414 16.652 cv
464.379 16.613 464.363 16.57 464.367 16.516 cv
464.367 6.27002 li
464.363 6.21899 464.379 6.172 464.414 6.12903 cv
464.441 6.09003 464.496 6.05499 464.574 6.02301 cv
464.648 5.99597 464.75 5.97699 464.875 5.95697 cv
465 5.94501 465.156 5.93701 465.352 5.93402 cv
465.539 5.93701 465.699 5.94501 465.824 5.95697 cv
465.949 5.97699 466.047 5.99597 466.125 6.02301 cv
466.195 6.05499 466.25 6.09003 466.285 6.12903 cv
466.313 6.172 466.328 6.21899 466.332 6.27002 cv
cp
f
483.816 16.5 mo
483.813 16.555 483.801 16.602 483.773 16.641 cv
483.742 16.684 483.688 16.719 483.617 16.742 cv
483.539 16.77 483.441 16.789 483.316 16.805 cv
483.191 16.82 483.031 16.828 482.84 16.828 cv
482.652 16.828 482.496 16.82 482.375 16.805 cv
482.246 16.789 482.148 16.77 482.078 16.742 cv
482.004 16.719 481.953 16.684 481.922 16.641 cv
481.891 16.602 481.875 16.555 481.875 16.5 cv
481.875 8.29303 li
481.859 8.29303 li
478.938 16.492 li
478.914 16.562 478.879 16.617 478.836 16.66 cv
478.785 16.707 478.723 16.742 478.645 16.766 cv
478.563 16.793 478.461 16.809 478.336 16.816 cv
478.211 16.824 478.059 16.828 477.887 16.828 cv
477.707 16.828 477.559 16.82 477.434 16.809 cv
477.309 16.793 477.203 16.773 477.125 16.746 cv
477.039 16.719 476.977 16.684 476.934 16.641 cv
476.883 16.602 476.852 16.555 476.84 16.492 cv
474.02 8.29303 li
474.004 8.29303 li
474.004 16.5 li
474 16.555 473.984 16.602 473.961 16.641 cv
473.93 16.684 473.879 16.719 473.801 16.742 cv
473.723 16.77 473.621 16.789 473.5 16.805 cv
473.375 16.82 473.219 16.828 473.031 16.828 cv
472.84 16.828 472.684 16.82 472.563 16.805 cv
472.434 16.789 472.332 16.77 472.262 16.742 cv
472.184 16.719 472.133 16.684 472.105 16.641 cv
472.074 16.602 472.059 16.555 472.063 16.5 cv
472.063 7.51599 li
472.059 7.25403 472.129 7.05103 472.273 6.90601 cv
472.41 6.77002 472.598 6.69897 472.836 6.69501 cv
474.176 6.69501 li
474.414 6.69897 474.617 6.71899 474.789 6.75403 cv
474.957 6.797 475.105 6.85901 475.234 6.94897 cv
475.355 7.04303 475.461 7.164 475.547 7.30902 cv
475.629 7.461 475.699 7.64502 475.766 7.85901 cv
477.949 13.867 li
477.98 13.867 li
480.238 7.875 li
480.305 7.65601 480.379 7.47302 480.461 7.32001 cv
480.539 7.172 480.633 7.05103 480.742 6.953 cv
480.848 6.86298 480.973 6.797 481.117 6.75403 cv
481.262 6.71899 481.43 6.69897 481.625 6.69501 cv
483.004 6.69501 li
483.141 6.69897 483.262 6.71503 483.367 6.75 cv
483.465 6.789 483.547 6.84399 483.617 6.90997 cv
483.68 6.98401 483.73 7.07001 483.766 7.16803 cv
483.797 7.27301 483.813 7.39099 483.816 7.51599 cv
cp
f
492.926 12.969 mo
492.922 13.566 492.844 14.109 492.691 14.594 cv
492.531 15.086 492.297 15.504 491.98 15.855 cv
491.664 16.207 491.266 16.48 490.789 16.672 cv
490.309 16.863 489.75 16.957 489.113 16.961 cv
488.492 16.957 487.953 16.875 487.5 16.703 cv
487.039 16.535 486.66 16.285 486.363 15.957 cv
486.059 15.633 485.836 15.23 485.691 14.75 cv
485.547 14.273 485.477 13.727 485.477 13.109 cv
485.477 12.52 485.555 11.98 485.711 11.488 cv
485.867 11 486.105 10.578 486.426 10.227 cv
486.742 9.87903 487.137 9.60498 487.613 9.40997 cv
488.086 9.21899 488.645 9.125 489.285 9.12097 cv
489.91 9.125 490.449 9.20697 490.906 9.375 cv
491.363 9.547 491.742 9.797 492.039 10.121 cv
492.336 10.449 492.559 10.852 492.707 11.328 cv
492.852 11.809 492.922 12.355 492.926 12.969 cv
cp
490.906 13.047 mo
490.902 12.711 490.875 12.395 490.824 12.102 cv
490.766 11.816 490.672 11.566 490.547 11.352 cv
490.414 11.141 490.242 10.973 490.031 10.852 cv
489.813 10.734 489.543 10.676 489.215 10.672 cv
488.926 10.676 488.672 10.73 488.453 10.832 cv
488.234 10.941 488.055 11.098 487.914 11.301 cv
487.773 11.508 487.668 11.754 487.598 12.039 cv
487.527 12.332 487.492 12.66 487.492 13.023 cv
487.492 13.371 487.52 13.687 487.578 13.973 cv
487.633 14.266 487.727 14.516 487.855 14.727 cv
487.98 14.941 488.152 15.105 488.375 15.219 cv
488.59 15.34 488.859 15.398 489.184 15.395 cv
489.477 15.398 489.734 15.344 489.957 15.234 cv
490.172 15.129 490.352 14.977 490.492 14.77 cv
490.633 14.57 490.734 14.324 490.805 14.035 cv
490.867 13.75 490.902 13.422 490.906 13.047 cv
cp
f
501.074 16.516 mo
501.07 16.578 501.059 16.625 501.035 16.66 cv
501.008 16.703 500.961 16.734 500.902 16.758 cv
500.836 16.781 500.754 16.797 500.648 16.812 cv
500.543 16.82 500.41 16.828 500.258 16.828 cv
500.086 16.828 499.953 16.82 499.852 16.812 cv
499.746 16.797 499.66 16.781 499.598 16.758 cv
499.531 16.734 499.484 16.703 499.457 16.66 cv
499.426 16.625 499.41 16.578 499.414 16.516 cv
499.414 15.746 li
499.055 16.133 498.68 16.43 498.289 16.641 cv
497.891 16.852 497.457 16.957 496.984 16.961 cv
496.449 16.957 496 16.855 495.637 16.652 cv
495.27 16.449 494.973 16.176 494.742 15.824 cv
494.508 15.48 494.34 15.074 494.238 14.605 cv
494.137 14.145 494.086 13.652 494.086 13.133 cv
494.086 12.52 494.148 11.965 494.281 11.469 cv
494.41 10.977 494.605 10.555 494.863 10.207 cv
495.117 9.85901 495.434 9.59399 495.813 9.40198 cv
496.191 9.21899 496.629 9.125 497.125 9.12097 cv
497.512 9.125 497.863 9.203 498.184 9.35901 cv
498.496 9.52002 498.813 9.75 499.125 10.055 cv
499.125 6.29303 li
499.125 6.242 499.137 6.19501 499.168 6.15198 cv
499.191 6.11298 499.246 6.078 499.324 6.047 cv
499.398 6.02002 499.496 6 499.625 5.97998 cv
499.746 5.96899 499.906 5.961 500.102 5.95697 cv
500.293 5.961 500.449 5.96899 500.574 5.97998 cv
500.695 6 500.797 6.02002 500.871 6.047 cv
500.941 6.078 500.992 6.11298 501.027 6.15198 cv
501.055 6.19501 501.07 6.242 501.074 6.29303 cv
cp
499.125 11.871 mo
498.844 11.52 498.574 11.25 498.32 11.062 cv
498.059 10.875 497.789 10.781 497.512 10.781 cv
497.258 10.781 497.039 10.848 496.855 10.973 cv
496.668 11.105 496.52 11.273 496.41 11.484 cv
496.297 11.695 496.215 11.934 496.16 12.195 cv
496.105 12.461 496.078 12.73 496.078 13 cv
496.078 13.297 496.102 13.578 496.148 13.852 cv
496.195 14.129 496.27 14.375 496.379 14.59 cv
496.48 14.805 496.625 14.977 496.805 15.105 cv
496.98 15.238 497.203 15.305 497.473 15.301 cv
497.605 15.305 497.734 15.285 497.867 15.242 cv
497.992 15.207 498.125 15.145 498.258 15.051 cv
498.391 14.965 498.527 14.848 498.668 14.703 cv
498.809 14.562 498.961 14.387 499.125 14.18 cv
cp
f
509.473 12.84 mo
509.469 13.078 509.418 13.254 509.313 13.367 cv
509.203 13.484 509.055 13.543 508.875 13.539 cv
504.641 13.539 li
504.637 13.84 504.672 14.109 504.746 14.348 cv
504.813 14.59 504.926 14.793 505.082 14.961 cv
505.234 15.133 505.43 15.262 505.672 15.348 cv
505.91 15.437 506.199 15.48 506.543 15.48 cv
506.883 15.48 507.184 15.457 507.445 15.406 cv
507.703 15.359 507.93 15.305 508.121 15.242 cv
508.309 15.184 508.465 15.129 508.594 15.078 cv
508.715 15.031 508.816 15.008 508.898 15.004 cv
508.941 15.008 508.98 15.016 509.016 15.031 cv
509.043 15.051 509.07 15.082 509.09 15.129 cv
509.109 15.176 509.121 15.242 509.133 15.328 cv
509.137 15.414 509.141 15.523 509.145 15.652 cv
509.141 15.77 509.141 15.867 509.137 15.945 cv
509.129 16.027 509.121 16.094 509.113 16.148 cv
509.102 16.207 509.086 16.258 509.066 16.293 cv
509.047 16.336 509.02 16.371 508.988 16.406 cv
508.953 16.445 508.859 16.496 508.711 16.555 cv
508.555 16.621 508.363 16.684 508.133 16.738 cv
507.895 16.801 507.625 16.848 507.328 16.895 cv
507.023 16.934 506.703 16.957 506.363 16.961 cv
505.742 16.957 505.199 16.883 504.738 16.727 cv
504.27 16.574 503.883 16.336 503.574 16.02 cv
503.258 15.703 503.023 15.305 502.875 14.82 cv
502.719 14.34 502.645 13.773 502.648 13.117 cv
502.645 12.504 502.723 11.945 502.887 11.449 cv
503.043 10.953 503.277 10.535 503.59 10.187 cv
503.895 9.84399 504.27 9.578 504.707 9.39502 cv
505.145 9.21503 505.637 9.125 506.191 9.12097 cv
506.77 9.125 507.27 9.211 507.684 9.37903 cv
508.098 9.55499 508.434 9.79303 508.699 10.094 cv
508.961 10.398 509.156 10.758 509.285 11.172 cv
509.406 11.59 509.469 12.039 509.473 12.527 cv
cp
507.57 12.277 mo
507.582 11.727 507.473 11.293 507.238 10.98 cv
507.004 10.668 506.637 10.512 506.145 10.508 cv
505.895 10.512 505.68 10.559 505.496 10.648 cv
505.309 10.746 505.156 10.871 505.035 11.027 cv
504.91 11.187 504.816 11.375 504.754 11.59 cv
504.688 11.805 504.648 12.035 504.641 12.277 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
