%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-FourThreads-Remote.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 13/12/2018, 11:39:10 a.m.
%%BoundingBox: 0 0 645 551
%%HiResBoundingBox: 0 0 644.7601 550.2001
%%CropBox: 0 0 644.7601 550.2001
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -550.2 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 550.2 li
644.76 550.2 li
644.76 0 li
cp
clp
gsave
0 550.2 mo
645 550.2 li
645 -.799988 li
0 -.799988 li
cp
clp
0 0 mo
644.762 0 li
644.762 550.199 li
0 550.199 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
62.879 492.961 mo
628.922 492.961 li
62.879 466.199 mo
628.922 466.199 li
62.879 439.559 mo
628.922 439.559 li
62.879 412.922 mo
628.922 412.922 li
62.879 386.16 mo
628.922 386.16 li
62.879 359.52 mo
628.922 359.52 li
62.879 332.879 mo
628.922 332.879 li
62.879 306.121 mo
628.922 306.121 li
62.879 279.48 mo
628.922 279.48 li
62.879 252.84 mo
628.922 252.84 li
62.879 226.078 mo
628.922 226.078 li
62.879 199.441 mo
628.922 199.441 li
62.879 172.801 mo
628.922 172.801 li
62.879 146.16 mo
628.922 146.16 li
62.879 119.398 mo
628.922 119.398 li
62.879 92.762 mo
628.922 92.762 li
62.879 66.121 mo
628.922 66.121 li
62.879 39.359 mo
628.922 39.359 li
.135805 .104005 .108583 0 cmyk
@
62.879 479.52 mo
628.922 479.52 li
62.879 452.879 mo
628.922 452.879 li
62.879 426.238 mo
628.922 426.238 li
62.879 399.48 mo
628.922 399.48 li
62.879 372.84 mo
628.922 372.84 li
62.879 346.199 mo
628.922 346.199 li
62.879 319.559 mo
628.922 319.559 li
62.879 292.801 mo
628.922 292.801 li
62.879 266.16 mo
628.922 266.16 li
62.879 239.52 mo
628.922 239.52 li
62.879 212.762 mo
628.922 212.762 li
62.879 186.121 mo
628.922 186.121 li
62.879 159.48 mo
628.922 159.48 li
62.879 132.719 mo
628.922 132.719 li
62.879 106.078 mo
628.922 106.078 li
62.879 79.441 mo
628.922 79.441 li
62.879 52.68 mo
628.922 52.68 li
62.879 26.039 mo
628.922 26.039 li
.245457 .199985 .446387 0 cmyk
@
98.281 26.039 mo
98.281 506.281 li
169.078 26.039 mo
169.078 506.281 li
239.762 26.039 mo
239.762 506.281 li
310.559 26.039 mo
310.559 506.281 li
381.359 26.039 mo
381.359 506.281 li
452.039 26.039 mo
452.039 506.281 li
522.84 26.039 mo
522.84 506.281 li
593.641 26.039 mo
593.641 506.281 li
.129366 .100191 .235538 0 cmyk
@
62.879 26.039 mo
62.879 506.281 li
133.68 26.039 mo
133.68 506.281 li
204.48 26.039 mo
204.48 506.281 li
275.16 26.039 mo
275.16 506.281 li
345.961 26.039 mo
345.961 506.281 li
416.762 26.039 mo
416.762 506.281 li
487.441 26.039 mo
487.441 506.281 li
558.238 26.039 mo
558.238 506.281 li
628.922 26.039 mo
628.922 506.281 li
.245457 .199985 .446387 0 cmyk
@
32.16 496.922 mo
49.922 496.922 li
49.922 513.961 li
32.16 513.961 li
cp
0 0 0 0 cmyk
ef
32.16 470.281 mo
49.922 470.281 li
49.922 487.32 li
32.16 487.32 li
cp
ef
32.16 443.52 mo
49.922 443.52 li
49.922 460.68 li
32.16 460.68 li
cp
ef
32.16 416.879 mo
49.922 416.879 li
49.922 434.039 li
32.16 434.039 li
cp
ef
32.16 390.238 mo
49.922 390.238 li
49.922 407.281 li
32.16 407.281 li
cp
ef
32.16 363.602 mo
49.922 363.602 li
49.922 380.641 li
32.16 380.641 li
cp
ef
32.16 336.84 mo
49.922 336.84 li
49.922 354 li
32.16 354 li
cp
ef
32.16 310.199 mo
49.922 310.199 li
49.922 327.238 li
32.16 327.238 li
cp
ef
32.16 283.559 mo
49.922 283.559 li
49.922 300.602 li
32.16 300.602 li
cp
ef
32.16 256.801 mo
49.922 256.801 li
49.922 273.961 li
32.16 273.961 li
cp
ef
32.16 230.16 mo
49.922 230.16 li
49.922 247.199 li
32.16 247.199 li
cp
ef
32.16 203.52 mo
49.922 203.52 li
49.922 220.559 li
32.16 220.559 li
cp
ef
32.16 176.762 mo
49.922 176.762 li
49.922 193.922 li
32.16 193.922 li
cp
ef
32.16 150.121 mo
49.922 150.121 li
49.922 167.16 li
32.16 167.16 li
cp
ef
32.16 123.48 mo
49.922 123.48 li
49.922 140.519 li
32.16 140.519 li
cp
ef
32.16 96.719 mo
49.922 96.719 li
49.922 113.879 li
32.16 113.879 li
cp
ef
32.16 70.078 mo
49.922 70.078 li
49.922 87.238 li
32.16 87.238 li
cp
ef
32.16 43.441 mo
49.922 43.441 li
49.922 60.48 li
32.16 60.48 li
cp
ef
32.16 16.801 mo
49.922 16.801 li
49.922 33.84 li
32.16 33.84 li
cp
ef
.96 lw
62.879 506.281 mo
628.922 506.281 li
.369879 .299321 .304356 .000976577 cmyk
@
62.879 506.281 mo
62.879 510.719 li
133.68 506.281 mo
133.68 510.719 li
204.48 506.281 mo
204.48 510.719 li
275.16 506.281 mo
275.16 510.719 li
345.961 506.281 mo
345.961 510.719 li
416.762 506.281 mo
416.762 510.719 li
487.441 506.281 mo
487.441 510.719 li
558.238 506.281 mo
558.238 510.719 li
628.922 506.281 mo
628.922 510.719 li
@
gsave
62.879 26.039 mo
629.641 26.039 li
629.641 506.879 li
62.879 506.879 li
cp
clp
1 lc
62.879 474.48 mo
133.68 483.121 li
204.48 492.961 li
275.16 492.961 li
345.961 495.359 li
416.762 497.52 li
487.441 494.641 li
558.238 486.719 li
628.922 493.801 li
.721279 .438239 .0234379 0 cmyk
@
grestore
1 lw
57.789 469.48 mo
67.75 469.48 li
67.75 479.441 li
57.789 479.441 li
cp
.721279 .438239 .0234379 0 cmyk
@
128.59 478.121 mo
138.551 478.121 li
138.551 488.078 li
128.59 488.078 li
cp
@
199.27 487.84 mo
209.231 487.84 li
209.231 497.801 li
199.27 497.801 li
cp
@
270.07 487.84 mo
280.031 487.84 li
280.031 497.801 li
270.07 497.801 li
cp
@
340.75 490.359 mo
350.711 490.359 li
350.711 500.32 li
340.75 500.32 li
cp
@
411.551 492.52 mo
421.512 492.52 li
421.512 502.481 li
411.551 502.481 li
cp
@
482.352 489.641 mo
492.309 489.641 li
492.309 499.602 li
482.352 499.602 li
cp
@
553.031 481.602 mo
562.988 481.602 li
562.988 491.559 li
553.031 491.559 li
cp
@
623.828 488.68 mo
633.789 488.68 li
633.789 498.641 li
623.828 498.641 li
cp
@
gsave
62.879 26.039 mo
629.641 26.039 li
629.641 506.879 li
62.879 506.879 li
cp
clp
.96 lw
1 lc
62.879 422.16 mo
133.68 459.602 li
204.48 468.84 li
275.16 470.398 li
345.961 475.922 li
416.762 479.52 li
487.441 489.961 li
558.238 484.32 li
628.922 486.961 li
.467353 0 .87747 0 cmyk
@
grestore
57.789 417.039 mo
67.75 417.039 li
67.75 427 li
57.789 427 li
cp
.467353 0 .87747 0 cmyk
@
128.59 454.48 mo
138.551 454.48 li
138.551 464.441 li
128.59 464.441 li
cp
@
199.27 463.84 mo
209.231 463.84 li
209.231 473.801 li
199.27 473.801 li
cp
@
270.07 465.398 mo
280.031 465.398 li
280.031 475.359 li
270.07 475.359 li
cp
@
340.75 470.801 mo
350.711 470.801 li
350.711 480.762 li
340.75 480.762 li
cp
@
411.551 474.52 mo
421.512 474.52 li
421.512 484.481 li
411.551 484.481 li
cp
@
482.352 484.961 mo
492.309 484.961 li
492.309 494.922 li
482.352 494.922 li
cp
@
553.031 479.32 mo
562.988 479.32 li
562.988 489.281 li
553.031 489.281 li
cp
@
623.828 481.84 mo
633.789 481.84 li
633.789 491.801 li
623.828 491.801 li
cp
@
gsave
62.879 26.039 mo
629.641 26.039 li
629.641 506.879 li
62.879 506.879 li
cp
clp
.96 lw
1 lc
62.879 246.961 mo
133.68 314.879 li
204.48 382.922 li
275.16 394.441 li
345.961 411.359 li
416.762 428.879 li
487.441 426.238 li
558.238 425.281 li
628.922 422.16 li
0 .993988 1 0 cmyk
@
grestore
57.789 241.961 mo
67.75 241.961 li
67.75 251.922 li
57.789 251.922 li
cp
0 .993988 1 0 cmyk
@
128.59 309.879 mo
138.551 309.879 li
138.551 319.84 li
128.59 319.84 li
cp
@
199.27 377.922 mo
209.231 377.922 li
209.231 387.879 li
199.27 387.879 li
cp
@
270.07 389.441 mo
280.031 389.441 li
280.031 399.398 li
270.07 399.398 li
cp
@
340.75 406.238 mo
350.711 406.238 li
350.711 416.199 li
340.75 416.199 li
cp
@
411.551 423.879 mo
421.512 423.879 li
421.512 433.84 li
411.551 433.84 li
cp
@
482.352 421.121 mo
492.309 421.121 li
492.309 431.078 li
482.352 431.078 li
cp
@
553.031 420.281 mo
562.988 420.281 li
562.988 430.238 li
553.031 430.238 li
cp
@
623.828 417.16 mo
633.789 417.16 li
633.789 427.121 li
623.828 427.121 li
cp
@
gsave
62.879 26.039 mo
629.641 26.039 li
629.641 506.879 li
62.879 506.879 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
62.879 323.879 mo
133.68 377.641 li
204.48 424.441 li
275.16 447.48 li
345.961 442.199 li
416.762 460.199 li
487.441 447.84 li
558.238 464.398 li
628.922 465.602 li
@
grestore
57.789 318.879 mo
67.75 318.879 li
67.75 328.84 li
57.789 328.84 li
cp
@
128.59 372.52 mo
138.551 372.52 li
138.551 382.481 li
128.59 382.481 li
cp
@
199.27 419.32 mo
209.231 419.32 li
209.231 429.281 li
199.27 429.281 li
cp
@
270.07 442.359 mo
280.031 442.359 li
280.031 452.32 li
270.07 452.32 li
cp
@
340.75 437.199 mo
350.711 437.199 li
350.711 447.16 li
340.75 447.16 li
cp
@
411.551 455.078 mo
421.512 455.078 li
421.512 465.039 li
411.551 465.039 li
cp
@
482.352 442.719 mo
492.309 442.719 li
492.309 452.68 li
482.352 452.68 li
cp
@
553.031 459.281 mo
562.988 459.281 li
562.988 469.238 li
553.031 469.238 li
cp
@
623.828 460.48 mo
633.789 460.48 li
633.789 470.441 li
623.828 470.441 li
cp
@
gsave
62.879 26.039 mo
629.641 26.039 li
629.641 506.879 li
62.879 506.879 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
62.879 35.52 mo
133.68 180.602 li
204.48 276.48 li
275.16 356.16 li
345.961 335.398 li
416.762 376.559 li
487.441 342.359 li
558.238 376.68 li
628.922 339.121 li
.721279 .438239 .0234379 0 cmyk
@
grestore
57.789 30.52 mo
67.75 30.52 li
67.75 40.481 li
57.789 40.481 li
cp
.721279 .438239 .0234379 0 cmyk
@
128.59 175.48 mo
138.551 175.48 li
138.551 185.441 li
128.59 185.441 li
cp
@
199.27 271.359 mo
209.231 271.359 li
209.231 281.32 li
199.27 281.32 li
cp
@
270.07 351.16 mo
280.031 351.16 li
280.031 361.121 li
270.07 361.121 li
cp
@
340.75 330.281 mo
350.711 330.281 li
350.711 340.238 li
340.75 340.238 li
cp
@
411.551 371.559 mo
421.512 371.559 li
421.512 381.52 li
411.551 381.52 li
cp
@
482.352 337.238 mo
492.309 337.238 li
492.309 347.199 li
482.352 347.199 li
cp
@
553.031 371.68 mo
562.988 371.68 li
562.988 381.641 li
553.031 381.641 li
cp
@
623.828 334.121 mo
633.789 334.121 li
633.789 344.078 li
623.828 344.078 li
cp
@
gsave
62.879 26.039 mo
629.641 26.039 li
629.641 506.879 li
62.879 506.879 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
62.879 126.719 mo
133.68 298.922 li
204.48 356.879 li
275.16 355.199 li
345.961 381 li
416.762 406.559 li
487.441 396.48 li
558.238 431.762 li
628.922 413.762 li
.467353 0 .87747 0 cmyk
@
grestore
58.27 122.078 mo
67.27 122.078 li
67.27 131.078 li
58.27 131.078 li
cp
.467353 0 .87747 0 cmyk
@
129.07 294.281 mo
138.07 294.281 li
138.07 303.281 li
129.07 303.281 li
cp
@
199.75 352.238 mo
208.75 352.238 li
208.75 361.238 li
199.75 361.238 li
cp
@
270.551 350.559 mo
279.551 350.559 li
279.551 359.559 li
270.551 359.559 li
cp
@
341.23 376.359 mo
350.23 376.359 li
350.23 385.359 li
341.23 385.359 li
cp
@
412.031 401.922 mo
421.031 401.922 li
421.031 410.922 li
412.031 410.922 li
cp
@
482.828 391.84 mo
491.828 391.84 li
491.828 400.84 li
482.828 400.84 li
cp
@
553.512 427.121 mo
562.512 427.121 li
562.512 436.121 li
553.512 436.121 li
cp
@
624.309 409.238 mo
633.309 409.238 li
633.309 418.238 li
624.309 418.238 li
cp
@
32.16 496.969 mo
49.887 496.969 li
49.887 514.059 li
32.16 514.059 li
cp
0 0 0 0 cmyk
ef
38.809 505.926 mo
38.805 506.609 38.754 507.23 38.648 507.793 cv
38.539 508.355 38.359 508.84 38.113 509.242 cv
37.859 509.648 37.531 509.961 37.133 510.18 cv
36.727 510.402 36.234 510.512 35.648 510.512 cv
35.09 510.512 34.617 510.414 34.238 510.215 cv
33.855 510.02 33.551 509.727 33.316 509.34 cv
33.082 508.953 32.914 508.48 32.82 507.914 cv
32.719 507.352 32.672 506.703 32.672 505.969 cv
32.672 505.297 32.727 504.676 32.836 504.109 cv
32.945 503.547 33.121 503.062 33.371 502.656 cv
33.613 502.254 33.938 501.941 34.344 501.715 cv
34.742 501.496 35.238 501.383 35.828 501.383 cv
36.387 501.383 36.859 501.484 37.242 501.68 cv
37.625 501.883 37.93 502.176 38.164 502.559 cv
38.395 502.949 38.563 503.422 38.66 503.984 cv
38.758 504.547 38.805 505.195 38.809 505.926 cv
cp
37.602 506.008 mo
37.598 505.566 37.582 505.168 37.555 504.816 cv
37.52 504.465 37.473 504.156 37.414 503.887 cv
37.348 503.617 37.27 503.387 37.172 503.191 cv
37.074 503 36.957 502.84 36.82 502.711 cv
36.68 502.586 36.52 502.492 36.348 502.434 cv
36.168 502.379 35.973 502.352 35.758 502.348 cv
35.367 502.352 35.051 502.441 34.813 502.625 cv
34.566 502.809 34.375 503.062 34.238 503.379 cv
34.098 503.699 34.004 504.07 33.953 504.5 cv
33.902 504.93 33.879 505.395 33.879 505.887 cv
33.879 506.551 33.91 507.113 33.98 507.574 cv
34.047 508.043 34.156 508.422 34.309 508.711 cv
34.453 509.008 34.645 509.219 34.875 509.348 cv
35.105 509.484 35.387 509.551 35.719 509.547 cv
35.973 509.551 36.195 509.512 36.391 509.426 cv
36.582 509.348 36.75 509.227 36.891 509.07 cv
37.031 508.918 37.145 508.734 37.238 508.52 cv
37.324 508.305 37.398 508.066 37.457 507.805 cv
37.508 507.547 37.547 507.266 37.57 506.961 cv
37.59 506.656 37.598 506.34 37.602 506.008 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 509.637 mo
41.805 509.965 41.75 510.18 41.645 510.285 cv
41.535 510.391 41.34 510.441 41.059 510.445 cv
40.781 510.441 40.59 510.391 40.488 510.289 cv
40.379 510.184 40.328 509.973 40.332 509.656 cv
40.328 509.332 40.383 509.117 40.492 509.008 cv
40.598 508.902 40.793 508.848 41.078 508.848 cv
41.352 508.848 41.539 508.902 41.648 509.008 cv
41.75 509.113 41.805 509.324 41.805 509.637 cv
cp
f
49.465 505.926 mo
49.461 506.609 49.41 507.23 49.305 507.793 cv
49.195 508.355 49.016 508.84 48.77 509.242 cv
48.516 509.648 48.188 509.961 47.789 510.18 cv
47.383 510.402 46.891 510.512 46.305 510.512 cv
45.746 510.512 45.273 510.414 44.895 510.215 cv
44.512 510.02 44.207 509.727 43.973 509.34 cv
43.738 508.953 43.57 508.48 43.477 507.914 cv
43.375 507.352 43.328 506.703 43.328 505.969 cv
43.328 505.297 43.383 504.676 43.492 504.109 cv
43.602 503.547 43.777 503.062 44.027 502.656 cv
44.27 502.254 44.594 501.941 45 501.715 cv
45.398 501.496 45.895 501.383 46.484 501.383 cv
47.043 501.383 47.516 501.484 47.898 501.68 cv
48.281 501.883 48.586 502.176 48.82 502.559 cv
49.051 502.949 49.219 503.422 49.316 503.984 cv
49.414 504.547 49.461 505.195 49.465 505.926 cv
cp
48.258 506.008 mo
48.254 505.566 48.238 505.168 48.211 504.816 cv
48.176 504.465 48.129 504.156 48.07 503.887 cv
48.004 503.617 47.926 503.387 47.828 503.191 cv
47.73 503 47.613 502.84 47.477 502.711 cv
47.336 502.586 47.176 502.492 47.004 502.434 cv
46.824 502.379 46.629 502.352 46.414 502.348 cv
46.023 502.352 45.707 502.441 45.469 502.625 cv
45.223 502.809 45.031 503.062 44.895 503.379 cv
44.754 503.699 44.66 504.07 44.609 504.5 cv
44.559 504.93 44.535 505.395 44.535 505.887 cv
44.535 506.551 44.566 507.113 44.637 507.574 cv
44.703 508.043 44.813 508.422 44.965 508.711 cv
45.109 509.008 45.301 509.219 45.531 509.348 cv
45.762 509.484 46.043 509.551 46.375 509.547 cv
46.629 509.551 46.852 509.512 47.047 509.426 cv
47.238 509.348 47.406 509.227 47.547 509.07 cv
47.688 508.918 47.801 508.734 47.895 508.52 cv
47.98 508.305 48.055 508.066 48.113 507.805 cv
48.164 507.547 48.203 507.266 48.227 506.961 cv
48.246 506.656 48.254 506.34 48.258 506.008 cv
cp
f
32.16 470.293 mo
49.887 470.293 li
49.887 487.383 li
32.16 487.383 li
cp
0 0 0 0 cmyk
ef
38.809 479.238 mo
38.805 479.922 38.754 480.543 38.648 481.105 cv
38.539 481.668 38.359 482.152 38.113 482.555 cv
37.859 482.961 37.531 483.273 37.133 483.492 cv
36.727 483.715 36.234 483.824 35.648 483.824 cv
35.09 483.824 34.617 483.727 34.238 483.527 cv
33.855 483.332 33.551 483.039 33.316 482.652 cv
33.082 482.266 32.914 481.793 32.82 481.227 cv
32.719 480.664 32.672 480.016 32.672 479.281 cv
32.672 478.609 32.727 477.988 32.836 477.422 cv
32.945 476.859 33.121 476.375 33.371 475.969 cv
33.613 475.566 33.938 475.254 34.344 475.027 cv
34.742 474.809 35.238 474.695 35.828 474.695 cv
36.387 474.695 36.859 474.797 37.242 474.992 cv
37.625 475.195 37.93 475.488 38.164 475.871 cv
38.395 476.262 38.563 476.734 38.66 477.297 cv
38.758 477.859 38.805 478.508 38.809 479.238 cv
cp
37.602 479.32 mo
37.598 478.879 37.582 478.48 37.555 478.129 cv
37.52 477.777 37.473 477.469 37.414 477.199 cv
37.348 476.93 37.27 476.699 37.172 476.504 cv
37.074 476.312 36.957 476.152 36.82 476.023 cv
36.68 475.898 36.52 475.805 36.348 475.746 cv
36.168 475.691 35.973 475.664 35.758 475.66 cv
35.367 475.664 35.051 475.754 34.813 475.937 cv
34.566 476.121 34.375 476.375 34.238 476.691 cv
34.098 477.012 34.004 477.383 33.953 477.812 cv
33.902 478.242 33.879 478.707 33.879 479.199 cv
33.879 479.863 33.91 480.426 33.98 480.887 cv
34.047 481.355 34.156 481.734 34.309 482.023 cv
34.453 482.32 34.645 482.531 34.875 482.66 cv
35.105 482.797 35.387 482.863 35.719 482.859 cv
35.973 482.863 36.195 482.824 36.391 482.738 cv
36.582 482.66 36.75 482.539 36.891 482.383 cv
37.031 482.23 37.145 482.047 37.238 481.832 cv
37.324 481.617 37.398 481.379 37.457 481.117 cv
37.508 480.859 37.547 480.578 37.57 480.273 cv
37.59 479.969 37.598 479.652 37.602 479.32 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 482.949 mo
41.805 483.277 41.75 483.492 41.645 483.598 cv
41.535 483.703 41.34 483.754 41.059 483.758 cv
40.781 483.754 40.59 483.703 40.488 483.602 cv
40.379 483.496 40.328 483.285 40.332 482.969 cv
40.328 482.645 40.383 482.43 40.492 482.32 cv
40.598 482.215 40.793 482.16 41.078 482.16 cv
41.352 482.16 41.539 482.215 41.648 482.32 cv
41.75 482.426 41.805 482.637 41.805 482.949 cv
cp
f
49.129 480.844 mo
49.129 481.32 49.047 481.742 48.887 482.113 cv
48.727 482.484 48.5 482.797 48.211 483.051 cv
47.914 483.305 47.566 483.5 47.164 483.629 cv
46.758 483.762 46.309 483.824 45.816 483.824 cv
45.539 483.824 45.277 483.805 45.035 483.766 cv
44.785 483.727 44.566 483.68 44.379 483.625 cv
44.184 483.57 44.027 483.516 43.902 483.457 cv
43.777 483.406 43.699 483.363 43.668 483.328 cv
43.633 483.297 43.609 483.266 43.598 483.238 cv
43.582 483.211 43.566 483.18 43.559 483.137 cv
43.543 483.102 43.535 483.051 43.535 482.988 cv
43.527 482.93 43.527 482.859 43.527 482.777 cv
43.527 482.703 43.531 482.633 43.539 482.57 cv
43.547 482.508 43.559 482.457 43.578 482.418 cv
43.594 482.379 43.613 482.352 43.641 482.332 cv
43.664 482.316 43.695 482.309 43.727 482.305 cv
43.773 482.309 43.844 482.336 43.938 482.391 cv
44.031 482.449 44.16 482.512 44.324 482.578 cv
44.488 482.645 44.688 482.707 44.93 482.766 cv
45.164 482.824 45.449 482.852 45.785 482.852 cv
46.086 482.852 46.367 482.816 46.625 482.742 cv
46.879 482.672 47.102 482.559 47.289 482.402 cv
47.473 482.25 47.617 482.055 47.723 481.816 cv
47.828 481.582 47.879 481.293 47.883 480.953 cv
47.879 480.672 47.836 480.422 47.746 480.203 cv
47.656 479.984 47.52 479.805 47.336 479.66 cv
47.148 479.52 46.914 479.414 46.633 479.34 cv
46.348 479.27 46.008 479.23 45.621 479.23 cv
45.336 479.23 45.098 479.246 44.898 479.273 cv
44.695 479.305 44.508 479.32 44.336 479.316 cv
44.207 479.32 44.113 479.289 44.063 479.227 cv
44.004 479.168 43.977 479.055 43.98 478.883 cv
43.98 475.27 li
43.977 475.121 44.012 475.012 44.086 474.934 cv
44.152 474.863 44.254 474.824 44.391 474.824 cv
48.32 474.824 li
48.355 474.824 48.391 474.836 48.426 474.855 cv
48.457 474.879 48.484 474.91 48.512 474.949 cv
48.531 474.992 48.547 475.043 48.563 475.105 cv
48.57 475.172 48.578 475.25 48.582 475.332 cv
48.578 475.5 48.555 475.625 48.516 475.715 cv
48.469 475.809 48.41 475.855 48.332 475.852 cv
45.16 475.852 li
45.16 478.34 li
45.313 478.32 45.469 478.309 45.633 478.301 cv
45.789 478.297 45.977 478.293 46.191 478.293 cv
46.676 478.293 47.102 478.355 47.469 478.477 cv
47.832 478.598 48.137 478.77 48.387 478.988 cv
48.629 479.215 48.816 479.48 48.941 479.793 cv
49.066 480.109 49.129 480.461 49.129 480.844 cv
cp
f
32.16 443.609 mo
49.887 443.609 li
49.887 460.699 li
32.16 460.699 li
cp
0 0 0 0 cmyk
ef
38.547 456.562 mo
38.543 456.652 38.535 456.727 38.523 456.785 cv
38.508 456.848 38.488 456.898 38.469 456.93 cv
38.445 456.969 38.422 456.992 38.391 457.008 cv
38.359 457.023 38.328 457.031 38.297 457.031 cv
33.656 457.031 li
33.625 457.031 33.594 457.023 33.566 457.008 cv
33.539 456.992 33.512 456.969 33.488 456.93 cv
33.457 456.898 33.438 456.848 33.43 456.785 cv
33.414 456.727 33.41 456.652 33.41 456.562 cv
33.41 456.484 33.414 456.414 33.43 456.352 cv
33.438 456.293 33.457 456.246 33.48 456.203 cv
33.5 456.168 33.523 456.137 33.555 456.113 cv
33.582 456.094 33.617 456.082 33.656 456.082 cv
35.512 456.082 li
35.512 449.328 li
33.793 450.348 li
33.703 450.398 33.633 450.426 33.582 450.434 cv
33.527 450.441 33.488 450.434 33.457 450.402 cv
33.426 450.375 33.402 450.324 33.391 450.254 cv
33.379 450.187 33.375 450.102 33.375 449.992 cv
33.375 449.918 33.375 449.852 33.383 449.793 cv
33.387 449.742 33.398 449.695 33.414 449.656 cv
33.426 449.621 33.445 449.59 33.473 449.562 cv
33.496 449.535 33.531 449.508 33.574 449.477 cv
35.621 448.164 li
35.637 448.156 35.66 448.145 35.688 448.133 cv
35.715 448.125 35.75 448.117 35.793 448.105 cv
35.832 448.098 35.879 448.09 35.938 448.086 cv
35.988 448.086 36.059 448.086 36.141 448.082 cv
36.25 448.086 36.34 448.09 36.418 448.098 cv
36.488 448.109 36.547 448.121 36.586 448.137 cv
36.625 448.152 36.652 448.176 36.668 448.199 cv
36.684 448.227 36.691 448.25 36.691 448.277 cv
36.691 456.082 li
38.297 456.082 li
38.332 456.082 38.363 456.094 38.398 456.113 cv
38.43 456.137 38.457 456.168 38.48 456.203 cv
38.496 456.246 38.512 456.293 38.527 456.352 cv
38.535 456.414 38.543 456.484 38.547 456.562 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.766 456.281 mo
41.762 456.609 41.707 456.828 41.605 456.934 cv
41.496 457.039 41.301 457.09 41.02 457.094 cv
40.738 457.09 40.547 457.039 40.445 456.937 cv
40.336 456.832 40.285 456.621 40.289 456.305 cv
40.285 455.98 40.34 455.766 40.449 455.656 cv
40.559 455.551 40.754 455.496 41.039 455.492 cv
41.313 455.496 41.504 455.551 41.609 455.652 cv
41.711 455.762 41.762 455.969 41.766 456.281 cv
cp
f
49.48 452.566 mo
49.477 453.25 49.422 453.875 49.316 454.437 cv
49.207 455.004 49.031 455.488 48.781 455.891 cv
48.531 456.297 48.203 456.609 47.805 456.828 cv
47.398 457.051 46.902 457.16 46.316 457.16 cv
45.754 457.16 45.285 457.062 44.902 456.863 cv
44.52 456.664 44.211 456.371 43.977 455.984 cv
43.742 455.598 43.574 455.121 43.48 454.555 cv
43.379 453.992 43.332 453.344 43.336 452.609 cv
43.332 451.934 43.387 451.312 43.5 450.746 cv
43.605 450.18 43.785 449.695 44.035 449.289 cv
44.281 448.887 44.605 448.57 45.008 448.348 cv
45.41 448.129 45.902 448.02 46.492 448.016 cv
47.051 448.02 47.523 448.121 47.91 448.316 cv
48.289 448.52 48.598 448.812 48.832 449.195 cv
49.063 449.586 49.23 450.059 49.332 450.621 cv
49.43 451.187 49.477 451.836 49.48 452.566 cv
cp
48.273 452.648 mo
48.27 452.207 48.254 451.812 48.223 451.457 cv
48.188 451.105 48.141 450.793 48.082 450.523 cv
48.016 450.254 47.934 450.02 47.84 449.824 cv
47.738 449.629 47.621 449.469 47.488 449.344 cv
47.348 449.219 47.191 449.129 47.016 449.07 cv
46.84 449.016 46.645 448.988 46.426 448.984 cv
46.035 448.988 45.719 449.078 45.477 449.258 cv
45.234 449.441 45.043 449.691 44.902 450.012 cv
44.762 450.332 44.664 450.711 44.617 451.141 cv
44.563 451.574 44.539 452.035 44.543 452.527 cv
44.539 453.195 44.574 453.762 44.645 454.223 cv
44.715 454.691 44.824 455.07 44.973 455.359 cv
45.121 455.656 45.309 455.867 45.543 455.996 cv
45.77 456.133 46.051 456.199 46.383 456.195 cv
46.637 456.199 46.863 456.156 47.059 456.07 cv
47.254 455.988 47.418 455.871 47.559 455.715 cv
47.695 455.562 47.813 455.379 47.906 455.164 cv
47.996 454.949 48.07 454.711 48.129 454.449 cv
48.18 454.191 48.219 453.91 48.242 453.602 cv
48.262 453.301 48.27 452.98 48.273 452.648 cv
cp
f
32.16 416.941 mo
49.887 416.941 li
49.887 434.031 li
32.16 434.031 li
cp
0 0 0 0 cmyk
ef
38.535 429.875 mo
38.531 429.965 38.523 430.035 38.512 430.094 cv
38.496 430.156 38.477 430.207 38.457 430.238 cv
38.434 430.277 38.41 430.301 38.379 430.316 cv
38.348 430.332 38.316 430.34 38.289 430.34 cv
33.652 430.34 li
33.617 430.34 33.59 430.332 33.563 430.316 cv
33.535 430.301 33.508 430.277 33.484 430.238 cv
33.457 430.207 33.438 430.156 33.426 430.094 cv
33.41 430.035 33.402 429.965 33.406 429.875 cv
33.402 429.797 33.41 429.723 33.426 429.66 cv
33.438 429.602 33.453 429.555 33.477 429.516 cv
33.492 429.48 33.52 429.449 33.551 429.426 cv
33.582 429.406 33.613 429.398 33.652 429.395 cv
35.504 429.395 li
35.504 422.648 li
33.789 423.668 li
33.699 423.719 33.629 423.746 33.582 423.754 cv
33.527 423.762 33.484 423.754 33.453 423.723 cv
33.418 423.695 33.398 423.645 33.387 423.574 cv
33.375 423.508 33.367 423.422 33.371 423.312 cv
33.367 423.238 33.371 423.172 33.383 423.113 cv
33.387 423.062 33.398 423.016 33.414 422.977 cv
33.426 422.941 33.445 422.91 33.469 422.883 cv
33.492 422.855 33.523 422.828 33.57 422.801 cv
35.613 421.488 li
35.629 421.477 35.648 421.465 35.68 421.457 cv
35.703 421.449 35.738 421.441 35.785 421.43 cv
35.824 421.422 35.875 421.414 35.93 421.41 cv
35.984 421.41 36.051 421.41 36.137 421.406 cv
36.242 421.41 36.336 421.414 36.41 421.422 cv
36.48 421.43 36.535 421.445 36.582 421.461 cv
36.621 421.48 36.648 421.5 36.664 421.523 cv
36.672 421.551 36.68 421.574 36.684 421.598 cv
36.684 429.395 li
38.289 429.395 li
38.324 429.398 38.359 429.406 38.391 429.426 cv
38.422 429.449 38.445 429.48 38.469 429.516 cv
38.484 429.555 38.5 429.602 38.516 429.66 cv
38.523 429.723 38.531 429.797 38.535 429.875 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 429.594 mo
41.805 429.922 41.75 430.137 41.645 430.242 cv
41.535 430.348 41.34 430.398 41.059 430.402 cv
40.781 430.398 40.59 430.348 40.488 430.246 cv
40.379 430.141 40.328 429.93 40.332 429.613 cv
40.328 429.289 40.383 429.074 40.492 428.965 cv
40.598 428.859 40.793 428.805 41.078 428.805 cv
41.352 428.805 41.539 428.859 41.648 428.965 cv
41.75 429.07 41.805 429.281 41.805 429.594 cv
cp
f
49.129 427.488 mo
49.129 427.965 49.047 428.387 48.887 428.758 cv
48.727 429.129 48.5 429.441 48.211 429.695 cv
47.914 429.949 47.566 430.145 47.164 430.273 cv
46.758 430.406 46.309 430.469 45.816 430.469 cv
45.539 430.469 45.277 430.449 45.035 430.41 cv
44.785 430.371 44.566 430.324 44.379 430.27 cv
44.184 430.215 44.027 430.16 43.902 430.102 cv
43.777 430.051 43.699 430.008 43.668 429.973 cv
43.633 429.941 43.609 429.91 43.598 429.883 cv
43.582 429.855 43.566 429.824 43.559 429.781 cv
43.543 429.746 43.535 429.695 43.535 429.633 cv
43.527 429.574 43.527 429.504 43.527 429.422 cv
43.527 429.348 43.531 429.277 43.539 429.215 cv
43.547 429.152 43.559 429.102 43.578 429.062 cv
43.594 429.023 43.613 428.996 43.641 428.977 cv
43.664 428.961 43.695 428.953 43.727 428.949 cv
43.773 428.953 43.844 428.98 43.938 429.035 cv
44.031 429.094 44.16 429.156 44.324 429.223 cv
44.488 429.289 44.688 429.352 44.93 429.41 cv
45.164 429.469 45.449 429.496 45.785 429.496 cv
46.086 429.496 46.367 429.461 46.625 429.387 cv
46.879 429.316 47.102 429.203 47.289 429.047 cv
47.473 428.895 47.617 428.699 47.723 428.461 cv
47.828 428.227 47.879 427.937 47.883 427.598 cv
47.879 427.316 47.836 427.066 47.746 426.848 cv
47.656 426.629 47.52 426.449 47.336 426.305 cv
47.148 426.164 46.914 426.059 46.633 425.984 cv
46.348 425.914 46.008 425.875 45.621 425.875 cv
45.336 425.875 45.098 425.891 44.898 425.918 cv
44.695 425.949 44.508 425.965 44.336 425.961 cv
44.207 425.965 44.113 425.934 44.063 425.871 cv
44.004 425.812 43.977 425.699 43.98 425.527 cv
43.98 421.914 li
43.977 421.766 44.012 421.656 44.086 421.578 cv
44.152 421.508 44.254 421.469 44.391 421.469 cv
48.32 421.469 li
48.355 421.469 48.391 421.48 48.426 421.5 cv
48.457 421.523 48.484 421.555 48.512 421.594 cv
48.531 421.637 48.547 421.687 48.563 421.75 cv
48.57 421.816 48.578 421.895 48.582 421.977 cv
48.578 422.145 48.555 422.27 48.516 422.359 cv
48.469 422.453 48.41 422.5 48.332 422.496 cv
45.16 422.496 li
45.16 424.984 li
45.313 424.965 45.469 424.953 45.633 424.945 cv
45.789 424.941 45.977 424.937 46.191 424.937 cv
46.676 424.937 47.102 425 47.469 425.121 cv
47.832 425.242 48.137 425.414 48.387 425.633 cv
48.629 425.859 48.816 426.125 48.941 426.437 cv
49.066 426.754 49.129 427.105 49.129 427.488 cv
cp
f
32.16 390.262 mo
49.887 390.262 li
49.887 407.352 li
32.16 407.352 li
cp
0 0 0 0 cmyk
ef
38.516 403.152 mo
38.512 403.238 38.508 403.312 38.496 403.375 cv
38.484 403.441 38.469 403.496 38.449 403.535 cv
38.426 403.582 38.398 403.613 38.367 403.629 cv
38.332 403.652 38.293 403.66 38.254 403.66 cv
33.352 403.66 li
33.289 403.66 33.23 403.652 33.184 403.637 cv
33.133 403.621 33.094 403.598 33.059 403.559 cv
33.023 403.527 32.996 403.473 32.984 403.402 cv
32.965 403.332 32.957 403.246 32.961 403.145 cv
32.957 403.055 32.961 402.977 32.969 402.906 cv
32.973 402.84 32.988 402.781 33.016 402.727 cv
33.039 402.676 33.07 402.621 33.105 402.566 cv
33.141 402.516 33.184 402.461 33.242 402.398 cv
35.016 400.574 li
35.426 400.156 35.754 399.781 36.004 399.445 cv
36.25 399.117 36.441 398.812 36.574 398.535 cv
36.707 398.262 36.793 398.012 36.84 397.785 cv
36.879 397.562 36.902 397.352 36.902 397.156 cv
36.902 396.961 36.867 396.777 36.801 396.598 cv
36.734 396.426 36.641 396.27 36.516 396.133 cv
36.391 396.004 36.234 395.898 36.047 395.816 cv
35.859 395.742 35.641 395.703 35.395 395.699 cv
35.105 395.703 34.848 395.742 34.621 395.816 cv
34.391 395.898 34.191 395.984 34.02 396.07 cv
33.848 396.164 33.703 396.246 33.586 396.324 cv
33.469 396.402 33.383 396.441 33.332 396.441 cv
33.297 396.441 33.266 396.434 33.242 396.414 cv
33.211 396.398 33.191 396.367 33.176 396.324 cv
33.16 396.285 33.145 396.23 33.137 396.16 cv
33.125 396.094 33.121 396.012 33.125 395.914 cv
33.121 395.848 33.125 395.789 33.133 395.738 cv
33.137 395.687 33.145 395.645 33.156 395.605 cv
33.164 395.57 33.18 395.535 33.199 395.504 cv
33.219 395.473 33.254 395.434 33.313 395.383 cv
33.363 395.336 33.457 395.27 33.594 395.187 cv
33.727 395.105 33.898 395.027 34.102 394.945 cv
34.305 394.867 34.527 394.797 34.773 394.742 cv
35.016 394.687 35.273 394.66 35.547 394.66 cv
35.973 394.66 36.348 394.723 36.672 394.844 cv
36.992 394.965 37.258 395.129 37.473 395.34 cv
37.684 395.551 37.844 395.797 37.949 396.07 cv
38.055 396.352 38.109 396.648 38.109 396.961 cv
38.109 397.25 38.082 397.531 38.031 397.809 cv
37.98 398.094 37.875 398.398 37.715 398.723 cv
37.551 399.051 37.316 399.414 37.012 399.812 cv
36.703 400.215 36.297 400.676 35.793 401.191 cv
34.387 402.66 li
38.246 402.66 li
38.277 402.664 38.313 402.676 38.352 402.691 cv
38.383 402.715 38.414 402.746 38.441 402.785 cv
38.465 402.828 38.484 402.879 38.496 402.937 cv
38.508 403.004 38.512 403.074 38.516 403.152 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 402.914 mo
41.805 403.242 41.75 403.457 41.645 403.562 cv
41.535 403.668 41.34 403.719 41.059 403.723 cv
40.781 403.719 40.59 403.668 40.488 403.566 cv
40.379 403.461 40.328 403.25 40.332 402.934 cv
40.328 402.609 40.383 402.395 40.492 402.285 cv
40.598 402.18 40.793 402.125 41.078 402.125 cv
41.352 402.125 41.539 402.18 41.648 402.285 cv
41.75 402.391 41.805 402.602 41.805 402.914 cv
cp
f
49.465 399.203 mo
49.461 399.887 49.41 400.508 49.305 401.07 cv
49.195 401.633 49.016 402.117 48.77 402.52 cv
48.516 402.926 48.188 403.238 47.789 403.457 cv
47.383 403.68 46.891 403.789 46.305 403.789 cv
45.746 403.789 45.273 403.691 44.895 403.492 cv
44.512 403.297 44.207 403.004 43.973 402.617 cv
43.738 402.23 43.57 401.758 43.477 401.191 cv
43.375 400.629 43.328 399.98 43.328 399.246 cv
43.328 398.574 43.383 397.953 43.492 397.387 cv
43.602 396.824 43.777 396.34 44.027 395.934 cv
44.27 395.531 44.594 395.219 45 394.992 cv
45.398 394.773 45.895 394.66 46.484 394.66 cv
47.043 394.66 47.516 394.762 47.898 394.957 cv
48.281 395.16 48.586 395.453 48.82 395.836 cv
49.051 396.227 49.219 396.699 49.316 397.262 cv
49.414 397.824 49.461 398.473 49.465 399.203 cv
cp
48.258 399.285 mo
48.254 398.844 48.238 398.445 48.211 398.094 cv
48.176 397.742 48.129 397.434 48.07 397.164 cv
48.004 396.895 47.926 396.664 47.828 396.469 cv
47.73 396.277 47.613 396.117 47.477 395.988 cv
47.336 395.863 47.176 395.77 47.004 395.711 cv
46.824 395.656 46.629 395.629 46.414 395.625 cv
46.023 395.629 45.707 395.719 45.469 395.902 cv
45.223 396.086 45.031 396.34 44.895 396.656 cv
44.754 396.977 44.66 397.348 44.609 397.777 cv
44.559 398.207 44.535 398.672 44.535 399.164 cv
44.535 399.828 44.566 400.391 44.637 400.852 cv
44.703 401.32 44.813 401.699 44.965 401.988 cv
45.109 402.285 45.301 402.496 45.531 402.625 cv
45.762 402.762 46.043 402.828 46.375 402.824 cv
46.629 402.828 46.852 402.789 47.047 402.703 cv
47.238 402.625 47.406 402.504 47.547 402.348 cv
47.688 402.195 47.801 402.012 47.895 401.797 cv
47.98 401.582 48.055 401.344 48.113 401.082 cv
48.164 400.824 48.203 400.543 48.227 400.238 cv
48.246 399.934 48.254 399.617 48.258 399.285 cv
cp
f
32.16 363.578 mo
49.887 363.578 li
49.887 380.672 li
32.16 380.672 li
cp
0 0 0 0 cmyk
ef
38.516 376.461 mo
38.512 376.547 38.508 376.621 38.496 376.684 cv
38.484 376.75 38.469 376.805 38.449 376.844 cv
38.426 376.891 38.398 376.922 38.367 376.937 cv
38.332 376.961 38.293 376.969 38.254 376.969 cv
33.352 376.969 li
33.289 376.969 33.23 376.961 33.184 376.945 cv
33.133 376.93 33.094 376.906 33.059 376.867 cv
33.023 376.836 32.996 376.781 32.984 376.711 cv
32.965 376.641 32.957 376.555 32.961 376.453 cv
32.957 376.363 32.961 376.285 32.969 376.215 cv
32.973 376.148 32.988 376.09 33.016 376.035 cv
33.039 375.984 33.07 375.93 33.105 375.875 cv
33.141 375.824 33.184 375.77 33.242 375.707 cv
35.016 373.883 li
35.426 373.465 35.754 373.09 36.004 372.754 cv
36.25 372.426 36.441 372.121 36.574 371.844 cv
36.707 371.57 36.793 371.32 36.84 371.094 cv
36.879 370.871 36.902 370.66 36.902 370.465 cv
36.902 370.27 36.867 370.086 36.801 369.906 cv
36.734 369.734 36.641 369.578 36.516 369.441 cv
36.391 369.312 36.234 369.207 36.047 369.125 cv
35.859 369.051 35.641 369.012 35.395 369.008 cv
35.105 369.012 34.848 369.051 34.621 369.125 cv
34.391 369.207 34.191 369.293 34.02 369.379 cv
33.848 369.473 33.703 369.555 33.586 369.633 cv
33.469 369.711 33.383 369.75 33.332 369.75 cv
33.297 369.75 33.266 369.742 33.242 369.723 cv
33.211 369.707 33.191 369.676 33.176 369.633 cv
33.16 369.594 33.145 369.539 33.137 369.469 cv
33.125 369.402 33.121 369.32 33.125 369.223 cv
33.121 369.156 33.125 369.098 33.133 369.047 cv
33.137 368.996 33.145 368.953 33.156 368.914 cv
33.164 368.879 33.18 368.844 33.199 368.812 cv
33.219 368.781 33.254 368.742 33.313 368.691 cv
33.363 368.645 33.457 368.578 33.594 368.496 cv
33.727 368.414 33.898 368.336 34.102 368.254 cv
34.305 368.176 34.527 368.105 34.773 368.051 cv
35.016 367.996 35.273 367.969 35.547 367.969 cv
35.973 367.969 36.348 368.031 36.672 368.152 cv
36.992 368.273 37.258 368.437 37.473 368.648 cv
37.684 368.859 37.844 369.105 37.949 369.379 cv
38.055 369.66 38.109 369.957 38.109 370.27 cv
38.109 370.559 38.082 370.84 38.031 371.117 cv
37.98 371.402 37.875 371.707 37.715 372.031 cv
37.551 372.359 37.316 372.723 37.012 373.121 cv
36.703 373.523 36.297 373.984 35.793 374.5 cv
34.387 375.969 li
38.246 375.969 li
38.277 375.973 38.313 375.984 38.352 376 cv
38.383 376.023 38.414 376.055 38.441 376.094 cv
38.465 376.137 38.484 376.187 38.496 376.246 cv
38.508 376.312 38.512 376.383 38.516 376.461 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 376.223 mo
41.805 376.551 41.75 376.766 41.645 376.871 cv
41.535 376.977 41.34 377.027 41.059 377.031 cv
40.781 377.027 40.59 376.977 40.488 376.875 cv
40.379 376.77 40.328 376.559 40.332 376.242 cv
40.328 375.918 40.383 375.703 40.492 375.594 cv
40.598 375.488 40.793 375.434 41.078 375.434 cv
41.352 375.434 41.539 375.488 41.648 375.594 cv
41.75 375.699 41.805 375.91 41.805 376.223 cv
cp
f
49.129 374.117 mo
49.129 374.594 49.047 375.016 48.887 375.387 cv
48.727 375.758 48.5 376.07 48.211 376.324 cv
47.914 376.578 47.566 376.773 47.164 376.902 cv
46.758 377.035 46.309 377.098 45.816 377.098 cv
45.539 377.098 45.277 377.078 45.035 377.039 cv
44.785 377 44.566 376.953 44.379 376.898 cv
44.184 376.844 44.027 376.789 43.902 376.73 cv
43.777 376.68 43.699 376.637 43.668 376.602 cv
43.633 376.57 43.609 376.539 43.598 376.512 cv
43.582 376.484 43.566 376.453 43.559 376.41 cv
43.543 376.375 43.535 376.324 43.535 376.262 cv
43.527 376.203 43.527 376.133 43.527 376.051 cv
43.527 375.977 43.531 375.906 43.539 375.844 cv
43.547 375.781 43.559 375.73 43.578 375.691 cv
43.594 375.652 43.613 375.625 43.641 375.605 cv
43.664 375.59 43.695 375.582 43.727 375.578 cv
43.773 375.582 43.844 375.609 43.938 375.664 cv
44.031 375.723 44.16 375.785 44.324 375.852 cv
44.488 375.918 44.688 375.98 44.93 376.039 cv
45.164 376.098 45.449 376.125 45.785 376.125 cv
46.086 376.125 46.367 376.09 46.625 376.016 cv
46.879 375.945 47.102 375.832 47.289 375.676 cv
47.473 375.523 47.617 375.328 47.723 375.09 cv
47.828 374.855 47.879 374.566 47.883 374.227 cv
47.879 373.945 47.836 373.695 47.746 373.477 cv
47.656 373.258 47.52 373.078 47.336 372.934 cv
47.148 372.793 46.914 372.687 46.633 372.613 cv
46.348 372.543 46.008 372.504 45.621 372.504 cv
45.336 372.504 45.098 372.52 44.898 372.547 cv
44.695 372.578 44.508 372.594 44.336 372.59 cv
44.207 372.594 44.113 372.562 44.063 372.5 cv
44.004 372.441 43.977 372.328 43.98 372.156 cv
43.98 368.543 li
43.977 368.395 44.012 368.285 44.086 368.207 cv
44.152 368.137 44.254 368.098 44.391 368.098 cv
48.32 368.098 li
48.355 368.098 48.391 368.109 48.426 368.129 cv
48.457 368.152 48.484 368.184 48.512 368.223 cv
48.531 368.266 48.547 368.316 48.563 368.379 cv
48.57 368.445 48.578 368.523 48.582 368.605 cv
48.578 368.773 48.555 368.898 48.516 368.988 cv
48.469 369.082 48.41 369.129 48.332 369.125 cv
45.16 369.125 li
45.16 371.613 li
45.313 371.594 45.469 371.582 45.633 371.574 cv
45.789 371.57 45.977 371.566 46.191 371.566 cv
46.676 371.566 47.102 371.629 47.469 371.75 cv
47.832 371.871 48.137 372.043 48.387 372.262 cv
48.629 372.488 48.816 372.754 48.941 373.066 cv
49.066 373.383 49.129 373.734 49.129 374.117 cv
cp
f
32.16 336.91 mo
49.887 336.91 li
49.887 354 li
32.16 354 li
cp
0 0 0 0 cmyk
ef
38.457 347.762 mo
38.453 348.172 38.383 348.539 38.242 348.863 cv
38.098 349.191 37.895 349.469 37.633 349.703 cv
37.363 349.937 37.035 350.117 36.648 350.242 cv
36.258 350.367 35.82 350.43 35.332 350.43 cv
35.035 350.43 34.754 350.402 34.496 350.355 cv
34.234 350.309 34.004 350.258 33.805 350.187 cv
33.602 350.125 33.438 350.055 33.305 349.984 cv
33.172 349.914 33.086 349.863 33.055 349.828 cv
33.016 349.797 32.992 349.766 32.977 349.73 cv
32.957 349.703 32.938 349.664 32.926 349.617 cv
32.91 349.574 32.902 349.52 32.895 349.449 cv
32.887 349.387 32.883 349.305 32.887 349.203 cv
32.883 349.039 32.898 348.922 32.934 348.859 cv
32.965 348.797 33.012 348.766 33.078 348.762 cv
33.117 348.766 33.203 348.801 33.328 348.871 cv
33.453 348.945 33.609 349.027 33.805 349.109 cv
33.996 349.199 34.227 349.277 34.488 349.348 cv
34.746 349.422 35.035 349.457 35.359 349.457 cv
35.668 349.457 35.941 349.418 36.176 349.34 cv
36.41 349.262 36.605 349.152 36.766 349.012 cv
36.926 348.871 37.047 348.703 37.125 348.508 cv
37.203 348.312 37.242 348.102 37.246 347.871 cv
37.242 347.621 37.191 347.395 37.094 347.191 cv
36.988 346.992 36.84 346.816 36.648 346.668 cv
36.449 346.523 36.207 346.414 35.926 346.332 cv
35.637 346.258 35.313 346.219 34.949 346.215 cv
34.078 346.215 li
34.039 346.219 34 346.211 33.965 346.191 cv
33.93 346.18 33.898 346.152 33.875 346.113 cv
33.844 346.078 33.824 346.031 33.809 345.969 cv
33.793 345.914 33.785 345.836 33.785 345.734 cv
33.785 345.652 33.789 345.578 33.805 345.52 cv
33.816 345.465 33.836 345.422 33.863 345.383 cv
33.887 345.352 33.918 345.324 33.949 345.305 cv
33.98 345.293 34.016 345.285 34.063 345.281 cv
34.836 345.281 li
35.133 345.285 35.406 345.246 35.648 345.164 cv
35.891 345.09 36.094 344.977 36.262 344.828 cv
36.426 344.684 36.555 344.512 36.645 344.305 cv
36.734 344.102 36.777 343.871 36.781 343.617 cv
36.777 343.437 36.75 343.262 36.691 343.094 cv
36.629 342.93 36.539 342.785 36.422 342.66 cv
36.305 342.535 36.152 342.437 35.965 342.367 cv
35.777 342.297 35.563 342.262 35.324 342.258 cv
35.055 342.262 34.813 342.301 34.594 342.379 cv
34.371 342.461 34.172 342.547 34 342.637 cv
33.824 342.73 33.68 342.816 33.566 342.895 cv
33.449 342.977 33.371 343.02 33.328 343.016 cv
33.293 343.02 33.262 343.012 33.238 343 cv
33.211 342.988 33.191 342.965 33.18 342.93 cv
33.16 342.898 33.148 342.852 33.145 342.785 cv
33.133 342.727 33.129 342.645 33.133 342.539 cv
33.129 342.473 33.133 342.414 33.141 342.359 cv
33.145 342.312 33.152 342.266 33.168 342.223 cv
33.18 342.187 33.195 342.152 33.215 342.117 cv
33.23 342.086 33.262 342.047 33.309 342.004 cv
33.352 341.961 33.441 341.898 33.574 341.812 cv
33.707 341.73 33.867 341.648 34.063 341.57 cv
34.254 341.492 34.48 341.426 34.734 341.367 cv
34.988 341.316 35.262 341.289 35.559 341.285 cv
35.969 341.289 36.328 341.344 36.641 341.445 cv
36.949 341.555 37.211 341.703 37.422 341.891 cv
37.629 342.086 37.785 342.312 37.887 342.578 cv
37.988 342.848 38.039 343.145 38.043 343.469 cv
38.039 343.75 38.004 344.012 37.934 344.25 cv
37.859 344.492 37.75 344.703 37.609 344.887 cv
37.465 345.074 37.293 345.234 37.09 345.359 cv
36.883 345.492 36.645 345.582 36.375 345.633 cv
36.375 345.645 li
36.68 345.68 36.957 345.758 37.215 345.875 cv
37.465 346 37.684 346.152 37.871 346.332 cv
38.051 346.52 38.195 346.73 38.301 346.973 cv
38.402 347.219 38.453 347.484 38.457 347.762 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.766 349.551 mo
41.762 349.879 41.707 350.098 41.605 350.203 cv
41.496 350.309 41.301 350.359 41.02 350.363 cv
40.738 350.359 40.547 350.309 40.445 350.207 cv
40.336 350.102 40.285 349.891 40.289 349.574 cv
40.285 349.25 40.34 349.035 40.449 348.926 cv
40.559 348.82 40.754 348.766 41.039 348.762 cv
41.313 348.766 41.504 348.82 41.609 348.922 cv
41.711 349.031 41.762 349.238 41.766 349.551 cv
cp
f
49.48 345.836 mo
49.477 346.52 49.422 347.145 49.316 347.707 cv
49.207 348.273 49.031 348.758 48.781 349.16 cv
48.531 349.566 48.203 349.879 47.805 350.098 cv
47.398 350.32 46.902 350.43 46.316 350.43 cv
45.754 350.43 45.285 350.332 44.902 350.133 cv
44.52 349.934 44.211 349.641 43.977 349.254 cv
43.742 348.867 43.574 348.391 43.48 347.824 cv
43.379 347.262 43.332 346.613 43.336 345.879 cv
43.332 345.203 43.387 344.582 43.5 344.016 cv
43.605 343.449 43.785 342.965 44.035 342.559 cv
44.281 342.156 44.605 341.84 45.008 341.617 cv
45.41 341.398 45.902 341.289 46.492 341.285 cv
47.051 341.289 47.523 341.391 47.91 341.586 cv
48.289 341.789 48.598 342.082 48.832 342.465 cv
49.063 342.855 49.23 343.328 49.332 343.891 cv
49.43 344.457 49.477 345.105 49.48 345.836 cv
cp
48.273 345.918 mo
48.27 345.477 48.254 345.082 48.223 344.727 cv
48.188 344.375 48.141 344.062 48.082 343.793 cv
48.016 343.523 47.934 343.289 47.84 343.094 cv
47.738 342.898 47.621 342.738 47.488 342.613 cv
47.348 342.488 47.191 342.398 47.016 342.34 cv
46.84 342.285 46.645 342.258 46.426 342.254 cv
46.035 342.258 45.719 342.348 45.477 342.527 cv
45.234 342.711 45.043 342.961 44.902 343.281 cv
44.762 343.602 44.664 343.98 44.617 344.41 cv
44.563 344.844 44.539 345.305 44.543 345.797 cv
44.539 346.465 44.574 347.031 44.645 347.492 cv
44.715 347.961 44.824 348.34 44.973 348.629 cv
45.121 348.926 45.309 349.137 45.543 349.266 cv
45.77 349.402 46.051 349.469 46.383 349.465 cv
46.637 349.469 46.863 349.426 47.059 349.34 cv
47.254 349.258 47.418 349.141 47.559 348.984 cv
47.695 348.832 47.813 348.648 47.906 348.434 cv
47.996 348.219 48.07 347.98 48.129 347.719 cv
48.18 347.461 48.219 347.18 48.242 346.871 cv
48.262 346.57 48.27 346.25 48.273 345.918 cv
cp
f
32.16 310.23 mo
49.887 310.23 li
49.887 327.32 li
32.16 327.32 li
cp
0 0 0 0 cmyk
ef
38.445 321.086 mo
38.441 321.496 38.371 321.863 38.23 322.187 cv
38.086 322.516 37.883 322.797 37.621 323.027 cv
37.355 323.262 37.027 323.437 36.641 323.562 cv
36.25 323.687 35.813 323.75 35.328 323.75 cv
35.023 323.75 34.746 323.723 34.492 323.676 cv
34.23 323.629 34 323.578 33.805 323.508 cv
33.602 323.445 33.438 323.375 33.305 323.305 cv
33.172 323.234 33.086 323.184 33.055 323.148 cv
33.016 323.121 32.992 323.09 32.977 323.055 cv
32.957 323.023 32.938 322.984 32.926 322.937 cv
32.91 322.895 32.902 322.84 32.895 322.77 cv
32.887 322.707 32.883 322.625 32.887 322.523 cv
32.883 322.363 32.898 322.25 32.934 322.184 cv
32.965 322.121 33.012 322.086 33.074 322.086 cv
33.117 322.086 33.199 322.125 33.324 322.195 cv
33.445 322.273 33.605 322.352 33.801 322.434 cv
33.992 322.52 34.219 322.598 34.484 322.668 cv
34.742 322.742 35.035 322.777 35.355 322.777 cv
35.664 322.777 35.934 322.738 36.172 322.66 cv
36.402 322.582 36.602 322.473 36.762 322.332 cv
36.918 322.191 37.035 322.023 37.117 321.828 cv
37.195 321.633 37.234 321.422 37.238 321.195 cv
37.234 320.945 37.184 320.719 37.086 320.516 cv
36.98 320.316 36.832 320.145 36.641 319.996 cv
36.441 319.852 36.203 319.738 35.918 319.66 cv
35.633 319.582 35.309 319.543 34.945 319.543 cv
34.074 319.543 li
34.031 319.543 33.996 319.535 33.961 319.52 cv
33.926 319.504 33.895 319.477 33.871 319.437 cv
33.844 319.402 33.824 319.355 33.809 319.297 cv
33.793 319.238 33.785 319.16 33.785 319.062 cv
33.785 318.977 33.789 318.906 33.805 318.848 cv
33.813 318.793 33.832 318.746 33.863 318.711 cv
33.887 318.676 33.918 318.652 33.949 318.633 cv
33.98 318.621 34.016 318.613 34.059 318.609 cv
34.832 318.609 li
35.133 318.613 35.402 318.574 35.645 318.492 cv
35.879 318.418 36.082 318.305 36.254 318.156 cv
36.418 318.012 36.547 317.836 36.637 317.633 cv
36.727 317.43 36.773 317.203 36.773 316.949 cv
36.773 316.77 36.742 316.594 36.684 316.426 cv
36.621 316.262 36.531 316.117 36.414 315.992 cv
36.293 315.867 36.141 315.77 35.961 315.699 cv
35.773 315.629 35.563 315.594 35.32 315.594 cv
35.055 315.594 34.809 315.637 34.59 315.715 cv
34.363 315.797 34.168 315.883 33.996 315.973 cv
33.82 316.066 33.676 316.152 33.563 316.23 cv
33.449 316.312 33.367 316.352 33.324 316.348 cv
33.289 316.352 33.262 316.344 33.238 316.332 cv
33.211 316.32 33.191 316.297 33.176 316.262 cv
33.16 316.23 33.148 316.184 33.141 316.117 cv
33.133 316.059 33.129 315.977 33.133 315.875 cv
33.129 315.809 33.129 315.75 33.137 315.695 cv
33.137 315.645 33.148 315.598 33.164 315.555 cv
33.18 315.52 33.195 315.484 33.215 315.449 cv
33.23 315.422 33.262 315.383 33.305 315.336 cv
33.348 315.293 33.434 315.23 33.57 315.148 cv
33.699 315.066 33.863 314.988 34.059 314.906 cv
34.25 314.828 34.473 314.758 34.73 314.703 cv
34.98 314.648 35.254 314.621 35.551 314.621 cv
35.957 314.621 36.32 314.676 36.633 314.777 cv
36.945 314.887 37.203 315.035 37.414 315.223 cv
37.617 315.418 37.773 315.648 37.879 315.914 cv
37.98 316.184 38.031 316.477 38.035 316.801 cv
38.031 317.082 37.996 317.344 37.926 317.578 cv
37.852 317.82 37.742 318.031 37.602 318.215 cv
37.457 318.402 37.285 318.559 37.082 318.687 cv
36.875 318.82 36.637 318.914 36.367 318.961 cv
36.367 318.973 li
36.672 319.008 36.953 319.082 37.207 319.203 cv
37.461 319.324 37.68 319.477 37.863 319.66 cv
38.043 319.844 38.184 320.059 38.289 320.301 cv
38.391 320.547 38.441 320.809 38.445 321.086 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 322.875 mo
41.805 323.203 41.75 323.418 41.645 323.523 cv
41.535 323.629 41.34 323.68 41.059 323.684 cv
40.781 323.68 40.59 323.629 40.488 323.527 cv
40.379 323.422 40.328 323.211 40.332 322.895 cv
40.328 322.57 40.383 322.355 40.492 322.246 cv
40.598 322.141 40.793 322.086 41.078 322.086 cv
41.352 322.086 41.539 322.141 41.648 322.246 cv
41.75 322.352 41.805 322.562 41.805 322.875 cv
cp
f
49.129 320.77 mo
49.129 321.246 49.047 321.668 48.887 322.039 cv
48.727 322.41 48.5 322.723 48.211 322.977 cv
47.914 323.23 47.566 323.426 47.164 323.555 cv
46.758 323.687 46.309 323.75 45.816 323.75 cv
45.539 323.75 45.277 323.73 45.035 323.691 cv
44.785 323.652 44.566 323.605 44.379 323.551 cv
44.184 323.496 44.027 323.441 43.902 323.383 cv
43.777 323.332 43.699 323.289 43.668 323.254 cv
43.633 323.223 43.609 323.191 43.598 323.164 cv
43.582 323.137 43.566 323.105 43.559 323.062 cv
43.543 323.027 43.535 322.977 43.535 322.914 cv
43.527 322.855 43.527 322.785 43.527 322.703 cv
43.527 322.629 43.531 322.559 43.539 322.496 cv
43.547 322.434 43.559 322.383 43.578 322.344 cv
43.594 322.305 43.613 322.277 43.641 322.258 cv
43.664 322.242 43.695 322.234 43.727 322.23 cv
43.773 322.234 43.844 322.262 43.938 322.316 cv
44.031 322.375 44.16 322.437 44.324 322.504 cv
44.488 322.57 44.688 322.633 44.93 322.691 cv
45.164 322.75 45.449 322.777 45.785 322.777 cv
46.086 322.777 46.367 322.742 46.625 322.668 cv
46.879 322.598 47.102 322.484 47.289 322.328 cv
47.473 322.176 47.617 321.98 47.723 321.742 cv
47.828 321.508 47.879 321.219 47.883 320.879 cv
47.879 320.598 47.836 320.348 47.746 320.129 cv
47.656 319.91 47.52 319.73 47.336 319.586 cv
47.148 319.445 46.914 319.34 46.633 319.266 cv
46.348 319.195 46.008 319.156 45.621 319.156 cv
45.336 319.156 45.098 319.172 44.898 319.199 cv
44.695 319.23 44.508 319.246 44.336 319.242 cv
44.207 319.246 44.113 319.215 44.063 319.152 cv
44.004 319.094 43.977 318.98 43.98 318.809 cv
43.98 315.195 li
43.977 315.047 44.012 314.937 44.086 314.859 cv
44.152 314.789 44.254 314.75 44.391 314.75 cv
48.32 314.75 li
48.355 314.75 48.391 314.762 48.426 314.781 cv
48.457 314.805 48.484 314.836 48.512 314.875 cv
48.531 314.918 48.547 314.969 48.563 315.031 cv
48.57 315.098 48.578 315.176 48.582 315.258 cv
48.578 315.426 48.555 315.551 48.516 315.641 cv
48.469 315.734 48.41 315.781 48.332 315.777 cv
45.16 315.777 li
45.16 318.266 li
45.313 318.246 45.469 318.234 45.633 318.227 cv
45.789 318.223 45.977 318.219 46.191 318.219 cv
46.676 318.219 47.102 318.281 47.469 318.402 cv
47.832 318.523 48.137 318.695 48.387 318.914 cv
48.629 319.141 48.816 319.406 48.941 319.719 cv
49.066 320.035 49.129 320.387 49.129 320.77 cv
cp
f
32.16 283.551 mo
49.887 283.551 li
49.887 300.641 li
32.16 300.641 li
cp
0 0 0 0 cmyk
ef
38.891 294.406 mo
38.887 294.559 38.863 294.68 38.82 294.766 cv
38.773 294.855 38.711 294.898 38.629 294.895 cv
37.629 294.895 li
37.629 296.758 li
37.629 296.797 37.617 296.828 37.602 296.852 cv
37.578 296.879 37.547 296.898 37.504 296.918 cv
37.453 296.934 37.391 296.945 37.32 296.957 cv
37.242 296.965 37.148 296.969 37.031 296.973 cv
36.914 296.969 36.816 296.965 36.746 296.957 cv
36.668 296.945 36.609 296.934 36.566 296.918 cv
36.52 296.898 36.488 296.879 36.473 296.852 cv
36.453 296.828 36.445 296.797 36.449 296.758 cv
36.449 294.895 li
32.82 294.895 li
32.762 294.898 32.719 294.891 32.684 294.875 cv
32.648 294.863 32.613 294.836 32.586 294.797 cv
32.555 294.762 32.535 294.711 32.523 294.641 cv
32.512 294.574 32.508 294.484 32.508 294.371 cv
32.508 294.289 32.508 294.211 32.516 294.141 cv
32.516 294.07 32.527 294.008 32.543 293.953 cv
32.555 293.898 32.57 293.844 32.598 293.789 cv
32.617 293.734 32.645 293.68 32.68 293.617 cv
35.84 288.23 li
35.859 288.195 35.895 288.164 35.941 288.137 cv
35.984 288.109 36.039 288.086 36.113 288.066 cv
36.18 288.051 36.266 288.039 36.371 288.027 cv
36.473 288.023 36.594 288.02 36.734 288.016 cv
36.883 288.02 37.02 288.023 37.137 288.035 cv
37.25 288.047 37.34 288.062 37.414 288.078 cv
37.48 288.098 37.535 288.121 37.574 288.152 cv
37.609 288.184 37.629 288.219 37.629 288.258 cv
37.629 293.922 li
38.629 293.922 li
38.703 293.926 38.766 293.965 38.816 294.043 cv
38.863 294.125 38.887 294.246 38.891 294.406 cv
cp
36.449 289.055 mo
36.438 289.055 li
33.586 293.922 li
36.449 293.922 li
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 296.184 mo
41.805 296.512 41.75 296.727 41.645 296.832 cv
41.535 296.937 41.34 296.988 41.059 296.992 cv
40.781 296.988 40.59 296.937 40.488 296.836 cv
40.379 296.73 40.328 296.52 40.332 296.203 cv
40.328 295.879 40.383 295.664 40.492 295.555 cv
40.598 295.449 40.793 295.395 41.078 295.395 cv
41.352 295.395 41.539 295.449 41.648 295.555 cv
41.75 295.66 41.805 295.871 41.805 296.184 cv
cp
f
49.465 292.473 mo
49.461 293.156 49.41 293.777 49.305 294.34 cv
49.195 294.902 49.016 295.387 48.77 295.789 cv
48.516 296.195 48.188 296.508 47.789 296.727 cv
47.383 296.949 46.891 297.059 46.305 297.059 cv
45.746 297.059 45.273 296.961 44.895 296.762 cv
44.512 296.566 44.207 296.273 43.973 295.887 cv
43.738 295.5 43.57 295.027 43.477 294.461 cv
43.375 293.898 43.328 293.25 43.328 292.516 cv
43.328 291.844 43.383 291.223 43.492 290.656 cv
43.602 290.094 43.777 289.609 44.027 289.203 cv
44.27 288.801 44.594 288.488 45 288.262 cv
45.398 288.043 45.895 287.93 46.484 287.93 cv
47.043 287.93 47.516 288.031 47.898 288.227 cv
48.281 288.43 48.586 288.723 48.82 289.105 cv
49.051 289.496 49.219 289.969 49.316 290.531 cv
49.414 291.094 49.461 291.742 49.465 292.473 cv
cp
48.258 292.555 mo
48.254 292.113 48.238 291.715 48.211 291.363 cv
48.176 291.012 48.129 290.703 48.07 290.434 cv
48.004 290.164 47.926 289.934 47.828 289.738 cv
47.73 289.547 47.613 289.387 47.477 289.258 cv
47.336 289.133 47.176 289.039 47.004 288.98 cv
46.824 288.926 46.629 288.898 46.414 288.895 cv
46.023 288.898 45.707 288.988 45.469 289.172 cv
45.223 289.355 45.031 289.609 44.895 289.926 cv
44.754 290.246 44.66 290.617 44.609 291.047 cv
44.559 291.477 44.535 291.941 44.535 292.434 cv
44.535 293.098 44.566 293.66 44.637 294.121 cv
44.703 294.59 44.813 294.969 44.965 295.258 cv
45.109 295.555 45.301 295.766 45.531 295.895 cv
45.762 296.031 46.043 296.098 46.375 296.094 cv
46.629 296.098 46.852 296.059 47.047 295.973 cv
47.238 295.895 47.406 295.773 47.547 295.617 cv
47.688 295.465 47.801 295.281 47.895 295.066 cv
47.98 294.852 48.055 294.613 48.113 294.352 cv
48.164 294.094 48.203 293.812 48.227 293.508 cv
48.246 293.203 48.254 292.887 48.258 292.555 cv
cp
f
32.16 256.871 mo
49.887 256.871 li
49.887 273.961 li
32.16 273.961 li
cp
0 0 0 0 cmyk
ef
38.891 267.715 mo
38.887 267.867 38.863 267.988 38.82 268.074 cv
38.773 268.164 38.711 268.207 38.629 268.203 cv
37.629 268.203 li
37.629 270.066 li
37.629 270.105 37.617 270.137 37.602 270.16 cv
37.578 270.187 37.547 270.207 37.504 270.227 cv
37.453 270.242 37.391 270.254 37.32 270.266 cv
37.242 270.273 37.148 270.277 37.031 270.281 cv
36.914 270.277 36.816 270.273 36.746 270.266 cv
36.668 270.254 36.609 270.242 36.566 270.227 cv
36.52 270.207 36.488 270.187 36.473 270.16 cv
36.453 270.137 36.445 270.105 36.449 270.066 cv
36.449 268.203 li
32.82 268.203 li
32.762 268.207 32.719 268.199 32.684 268.184 cv
32.648 268.172 32.613 268.145 32.586 268.105 cv
32.555 268.07 32.535 268.02 32.523 267.949 cv
32.512 267.883 32.508 267.793 32.508 267.68 cv
32.508 267.598 32.508 267.52 32.516 267.449 cv
32.516 267.379 32.527 267.316 32.543 267.262 cv
32.555 267.207 32.57 267.152 32.598 267.098 cv
32.617 267.043 32.645 266.988 32.68 266.926 cv
35.84 261.539 li
35.859 261.504 35.895 261.473 35.941 261.445 cv
35.984 261.418 36.039 261.395 36.113 261.375 cv
36.18 261.359 36.266 261.348 36.371 261.336 cv
36.473 261.332 36.594 261.328 36.734 261.324 cv
36.883 261.328 37.02 261.332 37.137 261.344 cv
37.25 261.355 37.34 261.371 37.414 261.387 cv
37.48 261.406 37.535 261.43 37.574 261.461 cv
37.609 261.492 37.629 261.527 37.629 261.566 cv
37.629 267.23 li
38.629 267.23 li
38.703 267.234 38.766 267.273 38.816 267.352 cv
38.863 267.434 38.887 267.555 38.891 267.715 cv
cp
36.449 262.363 mo
36.438 262.363 li
33.586 267.23 li
36.449 267.23 li
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 269.492 mo
41.805 269.82 41.75 270.035 41.645 270.141 cv
41.535 270.246 41.34 270.297 41.059 270.301 cv
40.781 270.297 40.59 270.246 40.488 270.145 cv
40.379 270.039 40.328 269.828 40.332 269.512 cv
40.328 269.187 40.383 268.973 40.492 268.863 cv
40.598 268.758 40.793 268.703 41.078 268.703 cv
41.352 268.703 41.539 268.758 41.648 268.863 cv
41.75 268.969 41.805 269.18 41.805 269.492 cv
cp
f
49.129 267.387 mo
49.129 267.863 49.047 268.285 48.887 268.656 cv
48.727 269.027 48.5 269.34 48.211 269.594 cv
47.914 269.848 47.566 270.043 47.164 270.172 cv
46.758 270.305 46.309 270.367 45.816 270.367 cv
45.539 270.367 45.277 270.348 45.035 270.309 cv
44.785 270.27 44.566 270.223 44.379 270.168 cv
44.184 270.113 44.027 270.059 43.902 270 cv
43.777 269.949 43.699 269.906 43.668 269.871 cv
43.633 269.84 43.609 269.809 43.598 269.781 cv
43.582 269.754 43.566 269.723 43.559 269.68 cv
43.543 269.645 43.535 269.594 43.535 269.531 cv
43.527 269.473 43.527 269.402 43.527 269.32 cv
43.527 269.246 43.531 269.176 43.539 269.113 cv
43.547 269.051 43.559 269 43.578 268.961 cv
43.594 268.922 43.613 268.895 43.641 268.875 cv
43.664 268.859 43.695 268.852 43.727 268.848 cv
43.773 268.852 43.844 268.879 43.938 268.934 cv
44.031 268.992 44.16 269.055 44.324 269.121 cv
44.488 269.187 44.688 269.25 44.93 269.309 cv
45.164 269.367 45.449 269.395 45.785 269.395 cv
46.086 269.395 46.367 269.359 46.625 269.285 cv
46.879 269.215 47.102 269.102 47.289 268.945 cv
47.473 268.793 47.617 268.598 47.723 268.359 cv
47.828 268.125 47.879 267.836 47.883 267.496 cv
47.879 267.215 47.836 266.965 47.746 266.746 cv
47.656 266.527 47.52 266.348 47.336 266.203 cv
47.148 266.062 46.914 265.957 46.633 265.883 cv
46.348 265.812 46.008 265.773 45.621 265.773 cv
45.336 265.773 45.098 265.789 44.898 265.816 cv
44.695 265.848 44.508 265.863 44.336 265.859 cv
44.207 265.863 44.113 265.832 44.063 265.77 cv
44.004 265.711 43.977 265.598 43.98 265.426 cv
43.98 261.812 li
43.977 261.664 44.012 261.555 44.086 261.477 cv
44.152 261.406 44.254 261.367 44.391 261.367 cv
48.32 261.367 li
48.355 261.367 48.391 261.379 48.426 261.398 cv
48.457 261.422 48.484 261.453 48.512 261.492 cv
48.531 261.535 48.547 261.586 48.563 261.648 cv
48.57 261.715 48.578 261.793 48.582 261.875 cv
48.578 262.043 48.555 262.168 48.516 262.258 cv
48.469 262.352 48.41 262.398 48.332 262.395 cv
45.16 262.395 li
45.16 264.883 li
45.313 264.863 45.469 264.852 45.633 264.844 cv
45.789 264.84 45.977 264.836 46.191 264.836 cv
46.676 264.836 47.102 264.898 47.469 265.02 cv
47.832 265.141 48.137 265.312 48.387 265.531 cv
48.629 265.758 48.816 266.023 48.941 266.336 cv
49.066 266.652 49.129 267.004 49.129 267.387 cv
cp
f
32.16 230.199 mo
49.887 230.199 li
49.887 247.289 li
32.16 247.289 li
cp
0 0 0 0 cmyk
ef
38.484 240.723 mo
38.484 241.203 38.402 241.625 38.242 241.992 cv
38.082 242.363 37.855 242.676 37.563 242.93 cv
37.27 243.184 36.922 243.375 36.516 243.508 cv
36.109 243.641 35.66 243.707 35.168 243.707 cv
34.891 243.707 34.629 243.687 34.383 243.648 cv
34.133 243.609 33.91 243.562 33.723 243.508 cv
33.527 243.453 33.371 243.398 33.25 243.34 cv
33.125 243.285 33.047 243.242 33.012 243.207 cv
32.977 243.18 32.953 243.148 32.941 243.121 cv
32.926 243.094 32.91 243.062 32.902 243.02 cv
32.887 242.984 32.879 242.934 32.879 242.871 cv
32.871 242.812 32.871 242.742 32.875 242.656 cv
32.871 242.586 32.875 242.516 32.883 242.449 cv
32.891 242.391 32.902 242.34 32.922 242.297 cv
32.938 242.262 32.957 242.234 32.984 242.211 cv
33.008 242.195 33.039 242.184 33.074 242.184 cv
33.117 242.184 33.188 242.215 33.285 242.27 cv
33.379 242.332 33.508 242.395 33.672 242.457 cv
33.832 242.527 34.035 242.59 34.277 242.645 cv
34.516 242.707 34.801 242.734 35.133 242.734 cv
35.438 242.734 35.719 242.699 35.977 242.625 cv
36.234 242.555 36.453 242.441 36.641 242.281 cv
36.82 242.129 36.965 241.934 37.074 241.695 cv
37.176 241.461 37.23 241.172 37.234 240.832 cv
37.23 240.551 37.184 240.301 37.098 240.082 cv
37.004 239.867 36.867 239.687 36.688 239.539 cv
36.5 239.398 36.266 239.289 35.984 239.215 cv
35.695 239.148 35.359 239.113 34.969 239.109 cv
34.688 239.113 34.445 239.129 34.246 239.152 cv
34.043 239.184 33.855 239.195 33.684 239.191 cv
33.555 239.195 33.465 239.164 33.41 239.102 cv
33.355 239.043 33.328 238.93 33.328 238.758 cv
33.328 235.137 li
33.328 234.988 33.363 234.875 33.434 234.801 cv
33.504 234.73 33.605 234.695 33.738 234.691 cv
37.672 234.691 li
37.703 234.695 37.738 234.707 37.777 234.723 cv
37.809 234.746 37.84 234.777 37.863 234.816 cv
37.887 234.863 37.902 234.914 37.914 234.977 cv
37.926 235.039 37.934 235.113 37.934 235.199 cv
37.934 235.367 37.91 235.496 37.867 235.586 cv
37.824 235.68 37.762 235.727 37.684 235.723 cv
34.508 235.723 li
34.508 238.215 li
34.656 238.195 34.816 238.18 34.98 238.176 cv
35.141 238.172 35.324 238.172 35.539 238.168 cv
36.023 238.172 36.453 238.23 36.82 238.352 cv
37.188 238.473 37.492 238.645 37.738 238.863 cv
37.98 239.086 38.164 239.355 38.293 239.672 cv
38.418 239.988 38.484 240.34 38.484 240.723 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.766 242.828 mo
41.762 243.156 41.707 243.375 41.605 243.48 cv
41.496 243.586 41.301 243.637 41.02 243.641 cv
40.738 243.637 40.547 243.586 40.445 243.484 cv
40.336 243.379 40.285 243.168 40.289 242.852 cv
40.285 242.527 40.34 242.312 40.449 242.203 cv
40.559 242.098 40.754 242.043 41.039 242.039 cv
41.313 242.043 41.504 242.098 41.609 242.199 cv
41.711 242.309 41.762 242.516 41.766 242.828 cv
cp
f
49.48 239.113 mo
49.477 239.797 49.422 240.422 49.316 240.984 cv
49.207 241.551 49.031 242.035 48.781 242.437 cv
48.531 242.844 48.203 243.156 47.805 243.375 cv
47.398 243.598 46.902 243.707 46.316 243.707 cv
45.754 243.707 45.285 243.609 44.902 243.41 cv
44.52 243.211 44.211 242.918 43.977 242.531 cv
43.742 242.145 43.574 241.668 43.48 241.102 cv
43.379 240.539 43.332 239.891 43.336 239.156 cv
43.332 238.48 43.387 237.859 43.5 237.293 cv
43.605 236.727 43.785 236.242 44.035 235.836 cv
44.281 235.434 44.605 235.117 45.008 234.895 cv
45.41 234.676 45.902 234.566 46.492 234.562 cv
47.051 234.566 47.523 234.668 47.91 234.863 cv
48.289 235.066 48.598 235.359 48.832 235.742 cv
49.063 236.133 49.23 236.605 49.332 237.168 cv
49.43 237.734 49.477 238.383 49.48 239.113 cv
cp
48.273 239.195 mo
48.27 238.754 48.254 238.359 48.223 238.004 cv
48.188 237.652 48.141 237.34 48.082 237.07 cv
48.016 236.801 47.934 236.566 47.84 236.371 cv
47.738 236.176 47.621 236.016 47.488 235.891 cv
47.348 235.766 47.191 235.676 47.016 235.617 cv
46.84 235.562 46.645 235.535 46.426 235.531 cv
46.035 235.535 45.719 235.625 45.477 235.805 cv
45.234 235.988 45.043 236.238 44.902 236.559 cv
44.762 236.879 44.664 237.258 44.617 237.687 cv
44.563 238.121 44.539 238.582 44.543 239.074 cv
44.539 239.742 44.574 240.309 44.645 240.77 cv
44.715 241.238 44.824 241.617 44.973 241.906 cv
45.121 242.203 45.309 242.414 45.543 242.543 cv
45.77 242.68 46.051 242.746 46.383 242.742 cv
46.637 242.746 46.863 242.703 47.059 242.617 cv
47.254 242.535 47.418 242.418 47.559 242.262 cv
47.695 242.109 47.813 241.926 47.906 241.711 cv
47.996 241.496 48.07 241.258 48.129 240.996 cv
48.18 240.738 48.219 240.457 48.242 240.148 cv
48.262 239.848 48.27 239.527 48.273 239.195 cv
cp
f
32.16 203.52 mo
49.887 203.52 li
49.887 220.61 li
32.16 220.61 li
cp
0 0 0 0 cmyk
ef
38.473 214.039 mo
38.473 214.516 38.391 214.937 38.23 215.309 cv
38.07 215.68 37.844 215.992 37.555 216.246 cv
37.258 216.5 36.91 216.695 36.508 216.824 cv
36.102 216.957 35.652 217.02 35.16 217.02 cv
34.883 217.02 34.621 217 34.379 216.961 cv
34.129 216.922 33.91 216.875 33.723 216.82 cv
33.527 216.766 33.371 216.711 33.246 216.652 cv
33.121 216.602 33.043 216.559 33.012 216.523 cv
32.977 216.492 32.953 216.461 32.941 216.434 cv
32.926 216.406 32.91 216.375 32.902 216.332 cv
32.887 216.297 32.879 216.246 32.879 216.184 cv
32.871 216.125 32.871 216.055 32.871 215.973 cv
32.871 215.898 32.875 215.828 32.883 215.766 cv
32.891 215.703 32.902 215.652 32.922 215.613 cv
32.938 215.574 32.957 215.547 32.984 215.527 cv
33.008 215.512 33.039 215.504 33.07 215.5 cv
33.117 215.504 33.188 215.531 33.281 215.586 cv
33.375 215.645 33.504 215.707 33.668 215.773 cv
33.832 215.84 34.031 215.902 34.273 215.961 cv
34.508 216.02 34.793 216.047 35.129 216.047 cv
35.43 216.047 35.711 216.012 35.969 215.937 cv
36.223 215.867 36.445 215.754 36.633 215.598 cv
36.816 215.445 36.961 215.25 37.066 215.012 cv
37.172 214.777 37.223 214.488 37.227 214.148 cv
37.223 213.867 37.18 213.617 37.09 213.398 cv
37 213.18 36.863 213 36.68 212.855 cv
36.492 212.715 36.258 212.609 35.977 212.535 cv
35.691 212.465 35.352 212.426 34.965 212.426 cv
34.68 212.426 34.441 212.441 34.242 212.469 cv
34.039 212.5 33.852 212.516 33.68 212.512 cv
33.551 212.516 33.457 212.484 33.406 212.422 cv
33.348 212.363 33.32 212.25 33.324 212.078 cv
33.324 208.465 li
33.32 208.316 33.355 208.207 33.43 208.129 cv
33.496 208.059 33.598 208.02 33.734 208.02 cv
37.664 208.02 li
37.699 208.02 37.734 208.031 37.77 208.051 cv
37.801 208.074 37.828 208.105 37.855 208.145 cv
37.875 208.187 37.891 208.238 37.906 208.301 cv
37.914 208.367 37.922 208.445 37.926 208.527 cv
37.922 208.695 37.898 208.82 37.859 208.91 cv
37.813 209.004 37.754 209.051 37.676 209.047 cv
34.504 209.047 li
34.504 211.535 li
34.656 211.516 34.813 211.504 34.977 211.496 cv
35.133 211.492 35.32 211.488 35.535 211.488 cv
36.02 211.488 36.445 211.551 36.813 211.672 cv
37.176 211.793 37.48 211.965 37.73 212.184 cv
37.973 212.41 38.16 212.676 38.285 212.988 cv
38.41 213.305 38.473 213.656 38.473 214.039 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 216.145 mo
41.805 216.473 41.75 216.687 41.645 216.793 cv
41.535 216.898 41.34 216.949 41.059 216.953 cv
40.781 216.949 40.59 216.898 40.488 216.797 cv
40.379 216.691 40.328 216.48 40.332 216.164 cv
40.328 215.84 40.383 215.625 40.492 215.516 cv
40.598 215.41 40.793 215.355 41.078 215.355 cv
41.352 215.355 41.539 215.41 41.648 215.516 cv
41.75 215.621 41.805 215.832 41.805 216.145 cv
cp
f
49.129 214.039 mo
49.129 214.516 49.047 214.937 48.887 215.309 cv
48.727 215.68 48.5 215.992 48.211 216.246 cv
47.914 216.5 47.566 216.695 47.164 216.824 cv
46.758 216.957 46.309 217.02 45.816 217.02 cv
45.539 217.02 45.277 217 45.035 216.961 cv
44.785 216.922 44.566 216.875 44.379 216.82 cv
44.184 216.766 44.027 216.711 43.902 216.652 cv
43.777 216.602 43.699 216.559 43.668 216.523 cv
43.633 216.492 43.609 216.461 43.598 216.434 cv
43.582 216.406 43.566 216.375 43.559 216.332 cv
43.543 216.297 43.535 216.246 43.535 216.184 cv
43.527 216.125 43.527 216.055 43.527 215.973 cv
43.527 215.898 43.531 215.828 43.539 215.766 cv
43.547 215.703 43.559 215.652 43.578 215.613 cv
43.594 215.574 43.613 215.547 43.641 215.527 cv
43.664 215.512 43.695 215.504 43.727 215.5 cv
43.773 215.504 43.844 215.531 43.938 215.586 cv
44.031 215.645 44.16 215.707 44.324 215.773 cv
44.488 215.84 44.688 215.902 44.93 215.961 cv
45.164 216.02 45.449 216.047 45.785 216.047 cv
46.086 216.047 46.367 216.012 46.625 215.937 cv
46.879 215.867 47.102 215.754 47.289 215.598 cv
47.473 215.445 47.617 215.25 47.723 215.012 cv
47.828 214.777 47.879 214.488 47.883 214.148 cv
47.879 213.867 47.836 213.617 47.746 213.398 cv
47.656 213.18 47.52 213 47.336 212.855 cv
47.148 212.715 46.914 212.609 46.633 212.535 cv
46.348 212.465 46.008 212.426 45.621 212.426 cv
45.336 212.426 45.098 212.441 44.898 212.469 cv
44.695 212.5 44.508 212.516 44.336 212.512 cv
44.207 212.516 44.113 212.484 44.063 212.422 cv
44.004 212.363 43.977 212.25 43.98 212.078 cv
43.98 208.465 li
43.977 208.316 44.012 208.207 44.086 208.129 cv
44.152 208.059 44.254 208.02 44.391 208.02 cv
48.32 208.02 li
48.355 208.02 48.391 208.031 48.426 208.051 cv
48.457 208.074 48.484 208.105 48.512 208.145 cv
48.531 208.187 48.547 208.238 48.563 208.301 cv
48.57 208.367 48.578 208.445 48.582 208.527 cv
48.578 208.695 48.555 208.82 48.516 208.91 cv
48.469 209.004 48.41 209.051 48.332 209.047 cv
45.16 209.047 li
45.16 211.535 li
45.313 211.516 45.469 211.504 45.633 211.496 cv
45.789 211.492 45.977 211.488 46.191 211.488 cv
46.676 211.488 47.102 211.551 47.469 211.672 cv
47.832 211.793 48.137 211.965 48.387 212.184 cv
48.629 212.41 48.816 212.676 48.941 212.988 cv
49.066 213.305 49.129 213.656 49.129 214.039 cv
cp
f
32.16 176.84 mo
49.887 176.84 li
49.887 193.93 li
32.16 193.93 li
cp
0 0 0 0 cmyk
ef
38.742 187.328 mo
38.742 187.719 38.68 188.098 38.563 188.457 cv
38.438 188.824 38.254 189.141 38.012 189.414 cv
37.762 189.691 37.449 189.914 37.074 190.078 cv
36.691 190.246 36.246 190.328 35.73 190.328 cv
35.359 190.328 35.031 190.285 34.75 190.191 cv
34.465 190.105 34.219 189.973 34.008 189.801 cv
33.797 189.633 33.621 189.426 33.484 189.18 cv
33.344 188.934 33.23 188.652 33.148 188.336 cv
33.063 188.023 33.004 187.68 32.969 187.301 cv
32.93 186.93 32.91 186.527 32.914 186.094 cv
32.91 185.715 32.93 185.332 32.973 184.941 cv
33.012 184.559 33.086 184.184 33.191 183.816 cv
33.297 183.457 33.441 183.117 33.621 182.801 cv
33.801 182.484 34.027 182.207 34.301 181.973 cv
34.574 181.738 34.898 181.551 35.277 181.41 cv
35.656 181.273 36.098 181.207 36.602 181.203 cv
36.77 181.207 36.941 181.215 37.113 181.234 cv
37.285 181.258 37.445 181.289 37.594 181.32 cv
37.742 181.359 37.863 181.395 37.965 181.434 cv
38.063 181.473 38.129 181.508 38.164 181.531 cv
38.191 181.559 38.215 181.586 38.234 181.613 cv
38.25 181.645 38.266 181.676 38.273 181.711 cv
38.281 181.746 38.285 181.785 38.293 181.828 cv
38.293 181.871 38.297 181.926 38.301 181.988 cv
38.297 182.074 38.297 182.145 38.297 182.199 cv
38.293 182.262 38.281 182.309 38.27 182.344 cv
38.25 182.383 38.23 182.41 38.207 182.426 cv
38.18 182.445 38.148 182.453 38.109 182.453 cv
38.059 182.453 37.988 182.437 37.902 182.406 cv
37.813 182.375 37.707 182.34 37.586 182.297 cv
37.461 182.262 37.313 182.227 37.137 182.191 cv
36.961 182.164 36.758 182.148 36.527 182.145 cv
36.098 182.148 35.73 182.234 35.426 182.406 cv
35.121 182.578 34.871 182.812 34.676 183.105 cv
34.48 183.398 34.336 183.738 34.246 184.121 cv
34.148 184.512 34.094 184.914 34.086 185.332 cv
34.203 185.266 34.34 185.199 34.488 185.129 cv
34.637 185.062 34.797 185 34.973 184.941 cv
35.148 184.891 35.336 184.844 35.531 184.809 cv
35.727 184.777 35.938 184.762 36.164 184.758 cv
36.641 184.762 37.043 184.828 37.375 184.953 cv
37.703 185.086 37.969 185.266 38.176 185.496 cv
38.375 185.727 38.52 185.996 38.609 186.309 cv
38.695 186.621 38.742 186.961 38.742 187.328 cv
cp
37.547 187.437 mo
37.547 187.176 37.52 186.934 37.469 186.715 cv
37.414 186.5 37.324 186.316 37.203 186.16 cv
37.078 186.012 36.914 185.895 36.711 185.812 cv
36.5 185.73 36.246 185.687 35.949 185.687 cv
35.777 185.687 35.609 185.703 35.441 185.734 cv
35.27 185.766 35.105 185.809 34.949 185.855 cv
34.789 185.91 34.641 185.973 34.5 186.043 cv
34.355 186.117 34.223 186.191 34.105 186.27 cv
34.102 186.863 34.141 187.359 34.219 187.754 cv
34.293 188.152 34.402 188.469 34.547 188.707 cv
34.691 188.949 34.871 189.121 35.086 189.223 cv
35.301 189.328 35.551 189.379 35.84 189.375 cv
36.129 189.379 36.383 189.324 36.598 189.211 cv
36.813 189.105 36.988 188.957 37.133 188.77 cv
37.273 188.586 37.379 188.379 37.445 188.148 cv
37.512 187.918 37.547 187.684 37.547 187.437 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 189.453 mo
41.805 189.781 41.75 189.996 41.645 190.102 cv
41.535 190.207 41.34 190.258 41.059 190.262 cv
40.781 190.258 40.59 190.207 40.488 190.105 cv
40.379 190 40.328 189.789 40.332 189.473 cv
40.328 189.148 40.383 188.934 40.492 188.824 cv
40.598 188.719 40.793 188.664 41.078 188.664 cv
41.352 188.664 41.539 188.719 41.648 188.824 cv
41.75 188.93 41.805 189.141 41.805 189.453 cv
cp
f
49.465 185.742 mo
49.461 186.426 49.41 187.047 49.305 187.609 cv
49.195 188.172 49.016 188.656 48.77 189.059 cv
48.516 189.465 48.188 189.777 47.789 189.996 cv
47.383 190.219 46.891 190.328 46.305 190.328 cv
45.746 190.328 45.273 190.23 44.895 190.031 cv
44.512 189.836 44.207 189.543 43.973 189.156 cv
43.738 188.77 43.57 188.297 43.477 187.73 cv
43.375 187.168 43.328 186.52 43.328 185.785 cv
43.328 185.113 43.383 184.492 43.492 183.926 cv
43.602 183.363 43.777 182.879 44.027 182.473 cv
44.27 182.07 44.594 181.758 45 181.531 cv
45.398 181.312 45.895 181.199 46.484 181.199 cv
47.043 181.199 47.516 181.301 47.898 181.496 cv
48.281 181.699 48.586 181.992 48.82 182.375 cv
49.051 182.766 49.219 183.238 49.316 183.801 cv
49.414 184.363 49.461 185.012 49.465 185.742 cv
cp
48.258 185.824 mo
48.254 185.383 48.238 184.984 48.211 184.633 cv
48.176 184.281 48.129 183.973 48.07 183.703 cv
48.004 183.434 47.926 183.203 47.828 183.008 cv
47.73 182.816 47.613 182.656 47.477 182.527 cv
47.336 182.402 47.176 182.309 47.004 182.25 cv
46.824 182.195 46.629 182.168 46.414 182.164 cv
46.023 182.168 45.707 182.258 45.469 182.441 cv
45.223 182.625 45.031 182.879 44.895 183.195 cv
44.754 183.516 44.66 183.887 44.609 184.316 cv
44.559 184.746 44.535 185.211 44.535 185.703 cv
44.535 186.367 44.566 186.93 44.637 187.391 cv
44.703 187.859 44.813 188.238 44.965 188.527 cv
45.109 188.824 45.301 189.035 45.531 189.164 cv
45.762 189.301 46.043 189.367 46.375 189.363 cv
46.629 189.367 46.852 189.328 47.047 189.242 cv
47.238 189.164 47.406 189.043 47.547 188.887 cv
47.688 188.734 47.801 188.551 47.895 188.336 cv
47.98 188.121 48.055 187.883 48.113 187.621 cv
48.164 187.363 48.203 187.082 48.227 186.777 cv
48.246 186.473 48.254 186.156 48.258 185.824 cv
cp
f
32.16 150.172 mo
49.887 150.172 li
49.887 167.262 li
32.16 167.262 li
cp
0 0 0 0 cmyk
ef
38.742 160.641 mo
38.742 161.031 38.68 161.41 38.563 161.77 cv
38.438 162.137 38.254 162.453 38.012 162.727 cv
37.762 163.004 37.449 163.227 37.074 163.391 cv
36.691 163.559 36.246 163.641 35.73 163.641 cv
35.359 163.641 35.031 163.598 34.75 163.504 cv
34.465 163.418 34.219 163.285 34.008 163.113 cv
33.797 162.945 33.621 162.738 33.484 162.492 cv
33.344 162.246 33.23 161.965 33.148 161.648 cv
33.063 161.336 33.004 160.992 32.969 160.613 cv
32.93 160.242 32.91 159.84 32.914 159.406 cv
32.91 159.027 32.93 158.645 32.973 158.254 cv
33.012 157.871 33.086 157.496 33.191 157.129 cv
33.297 156.77 33.441 156.43 33.621 156.113 cv
33.801 155.797 34.027 155.52 34.301 155.285 cv
34.574 155.051 34.898 154.863 35.277 154.723 cv
35.656 154.586 36.098 154.52 36.602 154.516 cv
36.77 154.52 36.941 154.527 37.113 154.547 cv
37.285 154.57 37.445 154.602 37.594 154.633 cv
37.742 154.672 37.863 154.707 37.965 154.746 cv
38.063 154.785 38.129 154.82 38.164 154.844 cv
38.191 154.871 38.215 154.898 38.234 154.926 cv
38.25 154.957 38.266 154.988 38.273 155.023 cv
38.281 155.059 38.285 155.098 38.293 155.141 cv
38.293 155.184 38.297 155.238 38.301 155.301 cv
38.297 155.387 38.297 155.457 38.297 155.512 cv
38.293 155.574 38.281 155.621 38.27 155.656 cv
38.25 155.695 38.23 155.723 38.207 155.738 cv
38.18 155.758 38.148 155.766 38.109 155.766 cv
38.059 155.766 37.988 155.75 37.902 155.719 cv
37.813 155.687 37.707 155.652 37.586 155.609 cv
37.461 155.574 37.313 155.539 37.137 155.504 cv
36.961 155.477 36.758 155.461 36.527 155.457 cv
36.098 155.461 35.73 155.547 35.426 155.719 cv
35.121 155.891 34.871 156.125 34.676 156.418 cv
34.48 156.711 34.336 157.051 34.246 157.434 cv
34.148 157.824 34.094 158.227 34.086 158.645 cv
34.203 158.578 34.34 158.512 34.488 158.441 cv
34.637 158.375 34.797 158.312 34.973 158.254 cv
35.148 158.203 35.336 158.156 35.531 158.121 cv
35.727 158.09 35.938 158.074 36.164 158.07 cv
36.641 158.074 37.043 158.141 37.375 158.266 cv
37.703 158.398 37.969 158.578 38.176 158.809 cv
38.375 159.039 38.52 159.309 38.609 159.621 cv
38.695 159.934 38.742 160.273 38.742 160.641 cv
cp
37.547 160.75 mo
37.547 160.488 37.52 160.246 37.469 160.027 cv
37.414 159.812 37.324 159.629 37.203 159.473 cv
37.078 159.324 36.914 159.207 36.711 159.125 cv
36.5 159.043 36.246 159 35.949 159 cv
35.777 159 35.609 159.016 35.441 159.047 cv
35.27 159.078 35.105 159.121 34.949 159.168 cv
34.789 159.223 34.641 159.285 34.5 159.355 cv
34.355 159.43 34.223 159.504 34.105 159.582 cv
34.102 160.176 34.141 160.672 34.219 161.066 cv
34.293 161.465 34.402 161.781 34.547 162.02 cv
34.691 162.262 34.871 162.434 35.086 162.535 cv
35.301 162.641 35.551 162.691 35.84 162.687 cv
36.129 162.691 36.383 162.637 36.598 162.523 cv
36.813 162.418 36.988 162.27 37.133 162.082 cv
37.273 161.898 37.379 161.691 37.445 161.461 cv
37.512 161.23 37.547 160.996 37.547 160.75 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 162.766 mo
41.805 163.094 41.75 163.309 41.645 163.414 cv
41.535 163.52 41.34 163.57 41.059 163.574 cv
40.781 163.57 40.59 163.52 40.488 163.418 cv
40.379 163.312 40.328 163.102 40.332 162.785 cv
40.328 162.461 40.383 162.246 40.492 162.137 cv
40.598 162.031 40.793 161.977 41.078 161.977 cv
41.352 161.977 41.539 162.031 41.648 162.137 cv
41.75 162.242 41.805 162.453 41.805 162.766 cv
cp
f
49.129 160.66 mo
49.129 161.137 49.047 161.559 48.887 161.93 cv
48.727 162.301 48.5 162.613 48.211 162.867 cv
47.914 163.121 47.566 163.316 47.164 163.445 cv
46.758 163.578 46.309 163.641 45.816 163.641 cv
45.539 163.641 45.277 163.621 45.035 163.582 cv
44.785 163.543 44.566 163.496 44.379 163.441 cv
44.184 163.387 44.027 163.332 43.902 163.273 cv
43.777 163.223 43.699 163.18 43.668 163.145 cv
43.633 163.113 43.609 163.082 43.598 163.055 cv
43.582 163.027 43.566 162.996 43.559 162.953 cv
43.543 162.918 43.535 162.867 43.535 162.805 cv
43.527 162.746 43.527 162.676 43.527 162.594 cv
43.527 162.52 43.531 162.449 43.539 162.387 cv
43.547 162.324 43.559 162.273 43.578 162.234 cv
43.594 162.195 43.613 162.168 43.641 162.148 cv
43.664 162.133 43.695 162.125 43.727 162.121 cv
43.773 162.125 43.844 162.152 43.938 162.207 cv
44.031 162.266 44.16 162.328 44.324 162.395 cv
44.488 162.461 44.688 162.523 44.93 162.582 cv
45.164 162.641 45.449 162.668 45.785 162.668 cv
46.086 162.668 46.367 162.633 46.625 162.559 cv
46.879 162.488 47.102 162.375 47.289 162.219 cv
47.473 162.066 47.617 161.871 47.723 161.633 cv
47.828 161.398 47.879 161.109 47.883 160.77 cv
47.879 160.488 47.836 160.238 47.746 160.02 cv
47.656 159.801 47.52 159.621 47.336 159.477 cv
47.148 159.336 46.914 159.23 46.633 159.156 cv
46.348 159.086 46.008 159.047 45.621 159.047 cv
45.336 159.047 45.098 159.062 44.898 159.09 cv
44.695 159.121 44.508 159.137 44.336 159.133 cv
44.207 159.137 44.113 159.105 44.063 159.043 cv
44.004 158.984 43.977 158.871 43.98 158.699 cv
43.98 155.086 li
43.977 154.937 44.012 154.828 44.086 154.75 cv
44.152 154.68 44.254 154.641 44.391 154.641 cv
48.32 154.641 li
48.355 154.641 48.391 154.652 48.426 154.672 cv
48.457 154.695 48.484 154.727 48.512 154.766 cv
48.531 154.809 48.547 154.859 48.563 154.922 cv
48.57 154.988 48.578 155.066 48.582 155.148 cv
48.578 155.316 48.555 155.441 48.516 155.531 cv
48.469 155.625 48.41 155.672 48.332 155.668 cv
45.16 155.668 li
45.16 158.156 li
45.313 158.137 45.469 158.125 45.633 158.117 cv
45.789 158.113 45.977 158.109 46.191 158.109 cv
46.676 158.109 47.102 158.172 47.469 158.293 cv
47.832 158.414 48.137 158.586 48.387 158.805 cv
48.629 159.031 48.816 159.297 48.941 159.609 cv
49.066 159.926 49.129 160.277 49.129 160.66 cv
cp
f
32.16 123.488 mo
49.887 123.488 li
49.887 140.578 li
32.16 140.578 li
cp
0 0 0 0 cmyk
ef
38.656 128.473 mo
38.652 128.559 38.648 128.637 38.645 128.699 cv
38.637 128.77 38.629 128.832 38.617 128.891 cv
38.605 128.953 38.59 129.012 38.57 129.066 cv
38.547 129.125 38.523 129.187 38.496 129.25 cv
35.297 136.625 li
35.273 136.684 35.242 136.727 35.211 136.758 cv
35.172 136.793 35.129 136.82 35.082 136.84 cv
35.027 136.859 34.961 136.871 34.879 136.883 cv
34.793 136.887 34.691 136.891 34.578 136.895 cv
34.418 136.891 34.297 136.883 34.211 136.871 cv
34.121 136.855 34.059 136.84 34.023 136.809 cv
33.98 136.781 33.965 136.742 33.973 136.699 cv
33.977 136.656 33.992 136.605 34.02 136.543 cv
37.387 129.004 li
33.121 129.004 li
33.031 129.008 32.965 128.961 32.922 128.867 cv
32.879 128.777 32.859 128.648 32.859 128.48 cv
32.859 128.398 32.863 128.324 32.875 128.254 cv
32.887 128.191 32.902 128.137 32.926 128.094 cv
32.945 128.051 32.973 128.02 33.008 127.996 cv
33.039 127.98 33.078 127.969 33.121 127.965 cv
38.297 127.965 li
38.359 127.969 38.414 127.977 38.465 127.988 cv
38.512 128.004 38.547 128.031 38.574 128.07 cv
38.598 128.113 38.617 128.164 38.633 128.227 cv
38.645 128.293 38.652 128.375 38.656 128.473 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.766 136.102 mo
41.762 136.43 41.707 136.648 41.605 136.754 cv
41.496 136.859 41.301 136.91 41.02 136.914 cv
40.738 136.91 40.547 136.859 40.445 136.758 cv
40.336 136.652 40.285 136.441 40.289 136.125 cv
40.285 135.801 40.34 135.586 40.449 135.477 cv
40.559 135.371 40.754 135.316 41.039 135.312 cv
41.313 135.316 41.504 135.371 41.609 135.473 cv
41.711 135.582 41.762 135.789 41.766 136.102 cv
cp
f
49.48 132.387 mo
49.477 133.07 49.422 133.695 49.316 134.258 cv
49.207 134.824 49.031 135.309 48.781 135.711 cv
48.531 136.117 48.203 136.43 47.805 136.648 cv
47.398 136.871 46.902 136.98 46.316 136.98 cv
45.754 136.98 45.285 136.883 44.902 136.684 cv
44.52 136.484 44.211 136.191 43.977 135.805 cv
43.742 135.418 43.574 134.941 43.48 134.375 cv
43.379 133.812 43.332 133.164 43.336 132.43 cv
43.332 131.754 43.387 131.133 43.5 130.566 cv
43.605 130 43.785 129.516 44.035 129.109 cv
44.281 128.707 44.605 128.391 45.008 128.168 cv
45.41 127.949 45.902 127.84 46.492 127.836 cv
47.051 127.84 47.523 127.941 47.91 128.137 cv
48.289 128.34 48.598 128.633 48.832 129.016 cv
49.063 129.406 49.23 129.879 49.332 130.441 cv
49.43 131.008 49.477 131.656 49.48 132.387 cv
cp
48.273 132.469 mo
48.27 132.027 48.254 131.633 48.223 131.277 cv
48.188 130.926 48.141 130.613 48.082 130.344 cv
48.016 130.074 47.934 129.84 47.84 129.645 cv
47.738 129.449 47.621 129.289 47.488 129.164 cv
47.348 129.039 47.191 128.949 47.016 128.891 cv
46.84 128.836 46.645 128.809 46.426 128.805 cv
46.035 128.809 45.719 128.898 45.477 129.078 cv
45.234 129.262 45.043 129.512 44.902 129.832 cv
44.762 130.152 44.664 130.531 44.617 130.961 cv
44.563 131.395 44.539 131.855 44.543 132.348 cv
44.539 133.016 44.574 133.582 44.645 134.043 cv
44.715 134.512 44.824 134.891 44.973 135.18 cv
45.121 135.477 45.309 135.687 45.543 135.816 cv
45.77 135.953 46.051 136.02 46.383 136.016 cv
46.637 136.02 46.863 135.977 47.059 135.891 cv
47.254 135.809 47.418 135.691 47.559 135.535 cv
47.695 135.383 47.813 135.199 47.906 134.984 cv
47.996 134.77 48.07 134.531 48.129 134.27 cv
48.18 134.012 48.219 133.73 48.242 133.422 cv
48.262 133.121 48.27 132.801 48.273 132.469 cv
cp
f
32.16 96.809 mo
49.887 96.809 li
49.887 113.899 li
32.16 113.899 li
cp
0 0 0 0 cmyk
ef
38.645 101.797 mo
38.641 101.883 38.637 101.957 38.633 102.02 cv
38.625 102.09 38.617 102.152 38.605 102.211 cv
38.594 102.277 38.578 102.336 38.559 102.391 cv
38.535 102.449 38.512 102.512 38.488 102.57 cv
35.293 109.934 li
35.266 109.992 35.238 110.035 35.207 110.066 cv
35.172 110.102 35.129 110.129 35.074 110.148 cv
35.02 110.168 34.949 110.18 34.871 110.191 cv
34.785 110.195 34.688 110.199 34.57 110.203 cv
34.414 110.199 34.293 110.191 34.207 110.18 cv
34.121 110.164 34.059 110.148 34.02 110.117 cv
33.98 110.09 33.961 110.051 33.969 110.008 cv
33.969 109.965 33.984 109.914 34.016 109.852 cv
37.375 102.324 li
33.117 102.324 li
33.031 102.328 32.965 102.281 32.922 102.187 cv
32.879 102.098 32.859 101.969 32.859 101.805 cv
32.859 101.719 32.863 101.645 32.875 101.578 cv
32.887 101.516 32.902 101.461 32.926 101.418 cv
32.945 101.375 32.973 101.344 33.008 101.32 cv
33.039 101.301 33.078 101.289 33.117 101.289 cv
38.289 101.289 li
38.348 101.289 38.402 101.297 38.453 101.312 cv
38.5 101.328 38.535 101.355 38.563 101.395 cv
38.586 101.434 38.605 101.488 38.621 101.551 cv
38.633 101.617 38.641 101.699 38.645 101.797 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 109.414 mo
41.805 109.742 41.75 109.957 41.645 110.062 cv
41.535 110.168 41.34 110.219 41.059 110.223 cv
40.781 110.219 40.59 110.168 40.488 110.066 cv
40.379 109.961 40.328 109.75 40.332 109.434 cv
40.328 109.109 40.383 108.895 40.492 108.785 cv
40.598 108.68 40.793 108.625 41.078 108.625 cv
41.352 108.625 41.539 108.68 41.648 108.785 cv
41.75 108.891 41.805 109.102 41.805 109.414 cv
cp
f
49.129 107.309 mo
49.129 107.785 49.047 108.207 48.887 108.578 cv
48.727 108.949 48.5 109.262 48.211 109.516 cv
47.914 109.77 47.566 109.965 47.164 110.094 cv
46.758 110.227 46.309 110.289 45.816 110.289 cv
45.539 110.289 45.277 110.27 45.035 110.23 cv
44.785 110.191 44.566 110.145 44.379 110.09 cv
44.184 110.035 44.027 109.98 43.902 109.922 cv
43.777 109.871 43.699 109.828 43.668 109.793 cv
43.633 109.762 43.609 109.73 43.598 109.703 cv
43.582 109.676 43.566 109.645 43.559 109.602 cv
43.543 109.566 43.535 109.516 43.535 109.453 cv
43.527 109.395 43.527 109.324 43.527 109.242 cv
43.527 109.168 43.531 109.098 43.539 109.035 cv
43.547 108.973 43.559 108.922 43.578 108.883 cv
43.594 108.844 43.613 108.816 43.641 108.797 cv
43.664 108.781 43.695 108.773 43.727 108.77 cv
43.773 108.773 43.844 108.801 43.938 108.855 cv
44.031 108.914 44.16 108.977 44.324 109.043 cv
44.488 109.109 44.688 109.172 44.93 109.23 cv
45.164 109.289 45.449 109.316 45.785 109.316 cv
46.086 109.316 46.367 109.281 46.625 109.207 cv
46.879 109.137 47.102 109.023 47.289 108.867 cv
47.473 108.715 47.617 108.52 47.723 108.281 cv
47.828 108.047 47.879 107.758 47.883 107.418 cv
47.879 107.137 47.836 106.887 47.746 106.668 cv
47.656 106.449 47.52 106.27 47.336 106.125 cv
47.148 105.984 46.914 105.879 46.633 105.805 cv
46.348 105.734 46.008 105.695 45.621 105.695 cv
45.336 105.695 45.098 105.711 44.898 105.738 cv
44.695 105.77 44.508 105.785 44.336 105.781 cv
44.207 105.785 44.113 105.754 44.063 105.691 cv
44.004 105.633 43.977 105.52 43.98 105.348 cv
43.98 101.734 li
43.977 101.586 44.012 101.477 44.086 101.398 cv
44.152 101.328 44.254 101.289 44.391 101.289 cv
48.32 101.289 li
48.355 101.289 48.391 101.301 48.426 101.32 cv
48.457 101.344 48.484 101.375 48.512 101.414 cv
48.531 101.457 48.547 101.508 48.563 101.57 cv
48.57 101.637 48.578 101.715 48.582 101.797 cv
48.578 101.965 48.555 102.09 48.516 102.18 cv
48.469 102.273 48.41 102.32 48.332 102.316 cv
45.16 102.316 li
45.16 104.805 li
45.313 104.785 45.469 104.773 45.633 104.766 cv
45.789 104.762 45.977 104.758 46.191 104.758 cv
46.676 104.758 47.102 104.82 47.469 104.941 cv
47.832 105.062 48.137 105.234 48.387 105.453 cv
48.629 105.68 48.816 105.945 48.941 106.258 cv
49.066 106.574 49.129 106.926 49.129 107.309 cv
cp
f
32.16 70.129 mo
49.887 70.129 li
49.887 87.219 li
32.16 87.219 li
cp
0 0 0 0 cmyk
ef
38.719 81.191 mo
38.719 81.578 38.648 81.922 38.512 82.219 cv
38.375 82.523 38.18 82.773 37.922 82.977 cv
37.664 83.184 37.344 83.34 36.965 83.441 cv
36.582 83.547 36.148 83.598 35.664 83.598 cv
35.203 83.598 34.793 83.551 34.434 83.457 cv
34.07 83.363 33.766 83.223 33.516 83.031 cv
33.266 82.848 33.074 82.617 32.941 82.34 cv
32.809 82.066 32.742 81.754 32.742 81.398 cv
32.742 81.125 32.785 80.867 32.879 80.633 cv
32.965 80.398 33.098 80.184 33.273 79.988 cv
33.441 79.793 33.652 79.609 33.906 79.434 cv
34.156 79.266 34.441 79.102 34.758 78.945 cv
34.484 78.805 34.242 78.656 34.031 78.496 cv
33.82 78.34 33.641 78.168 33.496 77.98 cv
33.348 77.797 33.238 77.602 33.164 77.391 cv
33.086 77.184 33.047 76.953 33.051 76.703 cv
33.047 76.395 33.102 76.102 33.219 75.828 cv
33.328 75.559 33.5 75.324 33.727 75.121 cv
33.953 74.922 34.238 74.762 34.59 74.645 cv
34.934 74.527 35.344 74.469 35.813 74.469 cv
36.258 74.469 36.645 74.523 36.973 74.629 cv
37.301 74.738 37.57 74.883 37.781 75.066 cv
37.992 75.254 38.148 75.473 38.254 75.723 cv
38.352 75.973 38.402 76.242 38.406 76.531 cv
38.402 76.766 38.363 76.992 38.293 77.203 cv
38.215 77.422 38.105 77.625 37.957 77.812 cv
37.809 78.008 37.629 78.187 37.418 78.352 cv
37.207 78.523 36.965 78.68 36.691 78.82 cv
37.012 78.984 37.297 79.148 37.555 79.316 cv
37.805 79.484 38.02 79.664 38.195 79.859 cv
38.363 80.055 38.492 80.262 38.586 80.477 cv
38.672 80.695 38.719 80.934 38.719 81.191 cv
cp
37.238 76.641 mo
37.234 76.453 37.203 76.277 37.137 76.121 cv
37.07 75.965 36.973 75.832 36.848 75.723 cv
36.719 75.613 36.559 75.531 36.371 75.473 cv
36.176 75.418 35.961 75.391 35.723 75.387 cv
35.227 75.391 34.852 75.5 34.602 75.723 cv
34.344 75.949 34.219 76.258 34.223 76.641 cv
34.219 76.82 34.25 76.984 34.313 77.137 cv
34.375 77.293 34.469 77.437 34.602 77.574 cv
34.727 77.711 34.891 77.844 35.094 77.973 cv
35.289 78.105 35.527 78.242 35.805 78.383 cv
36.266 78.148 36.621 77.887 36.867 77.594 cv
37.113 77.309 37.234 76.992 37.238 76.641 cv
cp
37.527 81.316 mo
37.523 81.109 37.484 80.918 37.41 80.746 cv
37.328 80.578 37.211 80.418 37.055 80.266 cv
36.898 80.117 36.699 79.973 36.465 79.832 cv
36.227 79.695 35.957 79.551 35.648 79.398 cv
35.359 79.543 35.105 79.684 34.891 79.824 cv
34.672 79.965 34.492 80.113 34.355 80.262 cv
34.215 80.418 34.109 80.574 34.039 80.738 cv
33.965 80.906 33.93 81.09 33.934 81.289 cv
33.93 81.734 34.082 82.078 34.391 82.316 cv
34.691 82.562 35.145 82.684 35.75 82.68 cv
36.332 82.684 36.777 82.562 37.078 82.312 cv
37.375 82.07 37.523 81.738 37.527 81.316 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 82.723 mo
41.805 83.051 41.75 83.266 41.645 83.371 cv
41.535 83.477 41.34 83.527 41.059 83.531 cv
40.781 83.527 40.59 83.477 40.488 83.375 cv
40.379 83.27 40.328 83.059 40.332 82.742 cv
40.328 82.418 40.383 82.203 40.492 82.094 cv
40.598 81.988 40.793 81.934 41.078 81.934 cv
41.352 81.934 41.539 81.988 41.648 82.094 cv
41.75 82.199 41.805 82.41 41.805 82.723 cv
cp
f
49.465 79.012 mo
49.461 79.695 49.41 80.316 49.305 80.879 cv
49.195 81.441 49.016 81.926 48.77 82.328 cv
48.516 82.734 48.188 83.047 47.789 83.266 cv
47.383 83.488 46.891 83.598 46.305 83.598 cv
45.746 83.598 45.273 83.5 44.895 83.301 cv
44.512 83.105 44.207 82.812 43.973 82.426 cv
43.738 82.039 43.57 81.566 43.477 81 cv
43.375 80.437 43.328 79.789 43.328 79.055 cv
43.328 78.383 43.383 77.762 43.492 77.195 cv
43.602 76.633 43.777 76.148 44.027 75.742 cv
44.27 75.34 44.594 75.027 45 74.801 cv
45.398 74.582 45.895 74.469 46.484 74.469 cv
47.043 74.469 47.516 74.57 47.898 74.766 cv
48.281 74.969 48.586 75.262 48.82 75.645 cv
49.051 76.035 49.219 76.508 49.316 77.07 cv
49.414 77.633 49.461 78.281 49.465 79.012 cv
cp
48.258 79.094 mo
48.254 78.652 48.238 78.254 48.211 77.902 cv
48.176 77.551 48.129 77.242 48.07 76.973 cv
48.004 76.703 47.926 76.473 47.828 76.277 cv
47.73 76.086 47.613 75.926 47.477 75.797 cv
47.336 75.672 47.176 75.578 47.004 75.52 cv
46.824 75.465 46.629 75.437 46.414 75.434 cv
46.023 75.437 45.707 75.527 45.469 75.711 cv
45.223 75.895 45.031 76.148 44.895 76.465 cv
44.754 76.785 44.66 77.156 44.609 77.586 cv
44.559 78.016 44.535 78.48 44.535 78.973 cv
44.535 79.637 44.566 80.199 44.637 80.66 cv
44.703 81.129 44.813 81.508 44.965 81.797 cv
45.109 82.094 45.301 82.305 45.531 82.434 cv
45.762 82.57 46.043 82.637 46.375 82.633 cv
46.629 82.637 46.852 82.598 47.047 82.512 cv
47.238 82.434 47.406 82.312 47.547 82.156 cv
47.688 82.004 47.801 81.82 47.895 81.605 cv
47.98 81.391 48.055 81.152 48.113 80.891 cv
48.164 80.633 48.203 80.352 48.227 80.047 cv
48.246 79.742 48.254 79.426 48.258 79.094 cv
cp
f
32.16 43.461 mo
49.887 43.461 li
49.887 60.551 li
32.16 60.551 li
cp
0 0 0 0 cmyk
ef
38.719 54.504 mo
38.719 54.891 38.648 55.234 38.512 55.531 cv
38.375 55.836 38.18 56.086 37.922 56.289 cv
37.664 56.496 37.344 56.652 36.965 56.754 cv
36.582 56.859 36.148 56.91 35.664 56.91 cv
35.203 56.91 34.793 56.863 34.434 56.77 cv
34.07 56.676 33.766 56.535 33.516 56.344 cv
33.266 56.16 33.074 55.93 32.941 55.652 cv
32.809 55.379 32.742 55.066 32.742 54.711 cv
32.742 54.437 32.785 54.18 32.879 53.945 cv
32.965 53.711 33.098 53.496 33.273 53.301 cv
33.441 53.105 33.652 52.922 33.906 52.746 cv
34.156 52.578 34.441 52.414 34.758 52.258 cv
34.484 52.117 34.242 51.969 34.031 51.809 cv
33.82 51.652 33.641 51.48 33.496 51.293 cv
33.348 51.109 33.238 50.914 33.164 50.703 cv
33.086 50.496 33.047 50.266 33.051 50.016 cv
33.047 49.707 33.102 49.414 33.219 49.141 cv
33.328 48.871 33.5 48.637 33.727 48.434 cv
33.953 48.234 34.238 48.074 34.59 47.957 cv
34.934 47.84 35.344 47.781 35.813 47.781 cv
36.258 47.781 36.645 47.836 36.973 47.941 cv
37.301 48.051 37.57 48.195 37.781 48.379 cv
37.992 48.566 38.148 48.785 38.254 49.035 cv
38.352 49.285 38.402 49.555 38.406 49.844 cv
38.402 50.078 38.363 50.305 38.293 50.516 cv
38.215 50.734 38.105 50.937 37.957 51.125 cv
37.809 51.32 37.629 51.5 37.418 51.664 cv
37.207 51.836 36.965 51.992 36.691 52.133 cv
37.012 52.297 37.297 52.461 37.555 52.629 cv
37.805 52.797 38.02 52.977 38.195 53.172 cv
38.363 53.367 38.492 53.574 38.586 53.789 cv
38.672 54.008 38.719 54.246 38.719 54.504 cv
cp
37.238 49.953 mo
37.234 49.766 37.203 49.59 37.137 49.434 cv
37.07 49.277 36.973 49.145 36.848 49.035 cv
36.719 48.926 36.559 48.844 36.371 48.785 cv
36.176 48.73 35.961 48.703 35.723 48.699 cv
35.227 48.703 34.852 48.812 34.602 49.035 cv
34.344 49.262 34.219 49.57 34.223 49.953 cv
34.219 50.133 34.25 50.297 34.313 50.449 cv
34.375 50.605 34.469 50.75 34.602 50.887 cv
34.727 51.023 34.891 51.156 35.094 51.285 cv
35.289 51.418 35.527 51.555 35.805 51.695 cv
36.266 51.461 36.621 51.199 36.867 50.906 cv
37.113 50.621 37.234 50.305 37.238 49.953 cv
cp
37.527 54.629 mo
37.523 54.422 37.484 54.23 37.41 54.059 cv
37.328 53.891 37.211 53.73 37.055 53.578 cv
36.898 53.43 36.699 53.285 36.465 53.145 cv
36.227 53.008 35.957 52.863 35.648 52.711 cv
35.359 52.855 35.105 52.996 34.891 53.137 cv
34.672 53.277 34.492 53.426 34.355 53.574 cv
34.215 53.73 34.109 53.887 34.039 54.051 cv
33.965 54.219 33.93 54.402 33.934 54.602 cv
33.93 55.047 34.082 55.391 34.391 55.629 cv
34.691 55.875 35.145 55.996 35.75 55.992 cv
36.332 55.996 36.777 55.875 37.078 55.625 cv
37.375 55.383 37.523 55.051 37.527 54.629 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.805 56.035 mo
41.805 56.363 41.75 56.578 41.645 56.684 cv
41.535 56.789 41.34 56.84 41.059 56.844 cv
40.781 56.84 40.59 56.789 40.488 56.687 cv
40.379 56.582 40.328 56.371 40.332 56.055 cv
40.328 55.73 40.383 55.516 40.492 55.406 cv
40.598 55.301 40.793 55.246 41.078 55.246 cv
41.352 55.246 41.539 55.301 41.648 55.406 cv
41.75 55.512 41.805 55.723 41.805 56.035 cv
cp
f
49.129 53.93 mo
49.129 54.406 49.047 54.828 48.887 55.199 cv
48.727 55.57 48.5 55.883 48.211 56.137 cv
47.914 56.391 47.566 56.586 47.164 56.715 cv
46.758 56.848 46.309 56.91 45.816 56.91 cv
45.539 56.91 45.277 56.891 45.035 56.852 cv
44.785 56.812 44.566 56.766 44.379 56.711 cv
44.184 56.656 44.027 56.602 43.902 56.543 cv
43.777 56.492 43.699 56.449 43.668 56.414 cv
43.633 56.383 43.609 56.352 43.598 56.324 cv
43.582 56.297 43.566 56.266 43.559 56.223 cv
43.543 56.187 43.535 56.137 43.535 56.074 cv
43.527 56.016 43.527 55.945 43.527 55.863 cv
43.527 55.789 43.531 55.719 43.539 55.656 cv
43.547 55.594 43.559 55.543 43.578 55.504 cv
43.594 55.465 43.613 55.437 43.641 55.418 cv
43.664 55.402 43.695 55.395 43.727 55.391 cv
43.773 55.395 43.844 55.422 43.938 55.477 cv
44.031 55.535 44.16 55.598 44.324 55.664 cv
44.488 55.73 44.688 55.793 44.93 55.852 cv
45.164 55.91 45.449 55.937 45.785 55.937 cv
46.086 55.937 46.367 55.902 46.625 55.828 cv
46.879 55.758 47.102 55.645 47.289 55.488 cv
47.473 55.336 47.617 55.141 47.723 54.902 cv
47.828 54.668 47.879 54.379 47.883 54.039 cv
47.879 53.758 47.836 53.508 47.746 53.289 cv
47.656 53.07 47.52 52.891 47.336 52.746 cv
47.148 52.605 46.914 52.5 46.633 52.426 cv
46.348 52.355 46.008 52.316 45.621 52.316 cv
45.336 52.316 45.098 52.332 44.898 52.359 cv
44.695 52.391 44.508 52.406 44.336 52.402 cv
44.207 52.406 44.113 52.375 44.063 52.312 cv
44.004 52.254 43.977 52.141 43.98 51.969 cv
43.98 48.355 li
43.977 48.207 44.012 48.098 44.086 48.02 cv
44.152 47.949 44.254 47.91 44.391 47.91 cv
48.32 47.91 li
48.355 47.91 48.391 47.922 48.426 47.941 cv
48.457 47.965 48.484 47.996 48.512 48.035 cv
48.531 48.078 48.547 48.129 48.563 48.191 cv
48.57 48.258 48.578 48.336 48.582 48.418 cv
48.578 48.586 48.555 48.711 48.516 48.801 cv
48.469 48.895 48.41 48.941 48.332 48.937 cv
45.16 48.937 li
45.16 51.426 li
45.313 51.406 45.469 51.395 45.633 51.387 cv
45.789 51.383 45.977 51.379 46.191 51.379 cv
46.676 51.379 47.102 51.441 47.469 51.562 cv
47.832 51.684 48.137 51.855 48.387 52.074 cv
48.629 52.301 48.816 52.566 48.941 52.879 cv
49.066 53.195 49.129 53.547 49.129 53.93 cv
cp
f
32.16 16.781 mo
49.887 16.781 li
49.887 33.871 li
32.16 33.871 li
cp
0 0 0 0 cmyk
ef
38.594 25.328 mo
38.59 25.715 38.566 26.105 38.523 26.496 cv
38.477 26.891 38.398 27.27 38.289 27.633 cv
38.176 27.996 38.027 28.336 37.848 28.656 cv
37.66 28.977 37.43 29.258 37.148 29.492 cv
36.867 29.734 36.531 29.918 36.145 30.051 cv
35.758 30.184 35.309 30.25 34.797 30.25 cv
34.598 30.25 34.406 30.234 34.223 30.211 cv
34.035 30.184 33.867 30.156 33.723 30.121 cv
33.57 30.086 33.445 30.047 33.348 30.004 cv
33.242 29.965 33.168 29.926 33.125 29.883 cv
33.078 29.844 33.047 29.789 33.027 29.715 cv
33.004 29.645 32.992 29.547 32.996 29.426 cv
32.992 29.328 32.996 29.25 33.004 29.187 cv
33.008 29.133 33.02 29.086 33.035 29.051 cv
33.051 29.02 33.07 28.996 33.094 28.984 cv
33.117 28.977 33.148 28.973 33.188 28.969 cv
33.238 28.973 33.309 28.988 33.402 29.02 cv
33.492 29.055 33.605 29.094 33.746 29.133 cv
33.883 29.176 34.047 29.215 34.238 29.246 cv
34.422 29.285 34.633 29.301 34.871 29.297 cv
35.313 29.301 35.695 29.215 36.016 29.039 cv
36.332 28.871 36.59 28.641 36.793 28.352 cv
36.992 28.062 37.145 27.73 37.246 27.348 cv
37.344 26.973 37.398 26.57 37.414 26.145 cv
37.164 26.289 36.875 26.414 36.539 26.523 cv
36.199 26.633 35.809 26.687 35.371 26.687 cv
34.875 26.687 34.461 26.621 34.125 26.484 cv
33.789 26.352 33.52 26.168 33.316 25.934 cv
33.113 25.703 32.965 25.426 32.875 25.102 cv
32.785 24.785 32.742 24.434 32.742 24.051 cv
32.742 23.66 32.797 23.289 32.914 22.93 cv
33.023 22.578 33.203 22.266 33.449 21.992 cv
33.688 21.727 33.996 21.512 34.375 21.348 cv
34.75 21.191 35.199 21.109 35.723 21.105 cv
36.094 21.109 36.422 21.156 36.707 21.246 cv
36.992 21.344 37.242 21.48 37.453 21.652 cv
37.664 21.832 37.84 22.043 37.988 22.289 cv
38.133 22.543 38.254 22.824 38.344 23.137 cv
38.43 23.453 38.492 23.797 38.535 24.164 cv
38.57 24.535 38.59 24.922 38.594 25.328 cv
cp
37.391 25.199 mo
37.387 24.613 37.348 24.121 37.273 23.719 cv
37.195 23.32 37.082 22.996 36.934 22.746 cv
36.777 22.5 36.594 22.32 36.375 22.211 cv
36.156 22.102 35.902 22.047 35.613 22.047 cv
35.316 22.047 35.063 22.102 34.852 22.207 cv
34.641 22.316 34.465 22.461 34.332 22.641 cv
34.191 22.824 34.094 23.027 34.031 23.254 cv
33.969 23.484 33.938 23.723 33.938 23.961 cv
33.938 24.234 33.965 24.48 34.023 24.703 cv
34.078 24.93 34.172 25.121 34.301 25.273 cv
34.426 25.434 34.59 25.555 34.801 25.637 cv
35.004 25.723 35.262 25.762 35.566 25.762 cv
35.91 25.762 36.242 25.711 36.563 25.609 cv
36.883 25.508 37.156 25.371 37.391 25.199 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
41.766 29.371 mo
41.762 29.699 41.707 29.918 41.605 30.023 cv
41.496 30.129 41.301 30.18 41.02 30.184 cv
40.738 30.18 40.547 30.129 40.445 30.027 cv
40.336 29.922 40.285 29.711 40.289 29.395 cv
40.285 29.07 40.34 28.855 40.449 28.746 cv
40.559 28.641 40.754 28.586 41.039 28.582 cv
41.313 28.586 41.504 28.641 41.609 28.742 cv
41.711 28.852 41.762 29.059 41.766 29.371 cv
cp
f
49.48 25.656 mo
49.477 26.34 49.422 26.965 49.316 27.527 cv
49.207 28.094 49.031 28.578 48.781 28.98 cv
48.531 29.387 48.203 29.699 47.805 29.918 cv
47.398 30.141 46.902 30.25 46.316 30.25 cv
45.754 30.25 45.285 30.152 44.902 29.953 cv
44.52 29.754 44.211 29.461 43.977 29.074 cv
43.742 28.687 43.574 28.211 43.48 27.645 cv
43.379 27.082 43.332 26.434 43.336 25.699 cv
43.332 25.023 43.387 24.402 43.5 23.836 cv
43.605 23.27 43.785 22.785 44.035 22.379 cv
44.281 21.977 44.605 21.66 45.008 21.437 cv
45.41 21.219 45.902 21.109 46.492 21.105 cv
47.051 21.109 47.523 21.211 47.91 21.406 cv
48.289 21.609 48.598 21.902 48.832 22.285 cv
49.063 22.676 49.23 23.148 49.332 23.711 cv
49.43 24.277 49.477 24.926 49.48 25.656 cv
cp
48.273 25.738 mo
48.27 25.297 48.254 24.902 48.223 24.547 cv
48.188 24.195 48.141 23.883 48.082 23.613 cv
48.016 23.344 47.934 23.109 47.84 22.914 cv
47.738 22.719 47.621 22.559 47.488 22.434 cv
47.348 22.309 47.191 22.219 47.016 22.16 cv
46.84 22.105 46.645 22.078 46.426 22.074 cv
46.035 22.078 45.719 22.168 45.477 22.348 cv
45.234 22.531 45.043 22.781 44.902 23.102 cv
44.762 23.422 44.664 23.801 44.617 24.23 cv
44.563 24.664 44.539 25.125 44.543 25.617 cv
44.539 26.285 44.574 26.852 44.645 27.312 cv
44.715 27.781 44.824 28.16 44.973 28.449 cv
45.121 28.746 45.309 28.957 45.543 29.086 cv
45.77 29.223 46.051 29.289 46.383 29.285 cv
46.637 29.289 46.863 29.246 47.059 29.16 cv
47.254 29.078 47.418 28.961 47.559 28.805 cv
47.695 28.652 47.813 28.469 47.906 28.254 cv
47.996 28.039 48.07 27.801 48.129 27.539 cv
48.18 27.281 48.219 27 48.242 26.691 cv
48.262 26.391 48.27 26.07 48.273 25.738 cv
cp
f
65.707 528.137 mo
65.703 528.227 65.695 528.297 65.684 528.355 cv
65.668 528.418 65.648 528.469 65.629 528.5 cv
65.605 528.539 65.582 528.562 65.551 528.578 cv
65.52 528.594 65.488 528.602 65.461 528.602 cv
60.824 528.602 li
60.789 528.602 60.762 528.594 60.734 528.578 cv
60.707 528.562 60.68 528.539 60.656 528.5 cv
60.629 528.469 60.609 528.418 60.598 528.355 cv
60.582 528.297 60.574 528.227 60.578 528.137 cv
60.574 528.059 60.582 527.984 60.598 527.922 cv
60.609 527.863 60.625 527.816 60.648 527.777 cv
60.664 527.742 60.691 527.711 60.723 527.687 cv
60.754 527.668 60.785 527.66 60.824 527.656 cv
62.676 527.656 li
62.676 520.91 li
60.961 521.93 li
60.871 521.98 60.801 522.008 60.754 522.016 cv
60.699 522.023 60.656 522.016 60.625 521.984 cv
60.59 521.957 60.57 521.906 60.559 521.836 cv
60.547 521.77 60.539 521.684 60.543 521.574 cv
60.539 521.5 60.543 521.434 60.555 521.375 cv
60.559 521.324 60.57 521.277 60.586 521.238 cv
60.598 521.203 60.617 521.172 60.641 521.145 cv
60.664 521.117 60.695 521.09 60.742 521.062 cv
62.785 519.75 li
62.801 519.738 62.82 519.727 62.852 519.719 cv
62.875 519.711 62.91 519.703 62.957 519.691 cv
62.996 519.684 63.047 519.676 63.102 519.672 cv
63.156 519.672 63.223 519.672 63.309 519.668 cv
63.414 519.672 63.508 519.676 63.582 519.684 cv
63.652 519.691 63.707 519.707 63.754 519.723 cv
63.793 519.742 63.82 519.762 63.836 519.785 cv
63.844 519.812 63.852 519.836 63.855 519.859 cv
63.855 527.656 li
65.461 527.656 li
65.496 527.66 65.531 527.668 65.563 527.687 cv
65.594 527.711 65.617 527.742 65.641 527.777 cv
65.656 527.816 65.672 527.863 65.688 527.922 cv
65.695 527.984 65.703 528.059 65.707 528.137 cv
cp
f
136.438 528.094 mo
136.434 528.18 136.43 528.254 136.418 528.316 cv
136.406 528.383 136.391 528.437 136.371 528.477 cv
136.348 528.523 136.32 528.555 136.289 528.57 cv
136.254 528.594 136.215 528.602 136.176 528.602 cv
131.273 528.602 li
131.211 528.602 131.152 528.594 131.105 528.578 cv
131.055 528.562 131.016 528.539 130.98 528.5 cv
130.945 528.469 130.918 528.414 130.906 528.344 cv
130.887 528.273 130.879 528.187 130.883 528.086 cv
130.879 527.996 130.883 527.918 130.891 527.848 cv
130.895 527.781 130.91 527.723 130.938 527.668 cv
130.961 527.617 130.992 527.562 131.027 527.508 cv
131.063 527.457 131.105 527.402 131.164 527.34 cv
132.938 525.516 li
133.348 525.098 133.676 524.723 133.926 524.387 cv
134.172 524.059 134.363 523.754 134.496 523.477 cv
134.629 523.203 134.715 522.953 134.762 522.727 cv
134.801 522.504 134.824 522.293 134.824 522.098 cv
134.824 521.902 134.789 521.719 134.723 521.539 cv
134.656 521.367 134.563 521.211 134.438 521.074 cv
134.313 520.945 134.156 520.84 133.969 520.758 cv
133.781 520.684 133.563 520.645 133.316 520.641 cv
133.027 520.645 132.77 520.684 132.543 520.758 cv
132.313 520.84 132.113 520.926 131.941 521.012 cv
131.77 521.105 131.625 521.187 131.508 521.266 cv
131.391 521.344 131.305 521.383 131.254 521.383 cv
131.219 521.383 131.188 521.375 131.164 521.355 cv
131.133 521.34 131.113 521.309 131.098 521.266 cv
131.082 521.227 131.066 521.172 131.059 521.102 cv
131.047 521.035 131.043 520.953 131.047 520.855 cv
131.043 520.789 131.047 520.73 131.055 520.68 cv
131.059 520.629 131.066 520.586 131.078 520.547 cv
131.086 520.512 131.102 520.477 131.121 520.445 cv
131.141 520.414 131.176 520.375 131.234 520.324 cv
131.285 520.277 131.379 520.211 131.516 520.129 cv
131.648 520.047 131.82 519.969 132.023 519.887 cv
132.227 519.809 132.449 519.738 132.695 519.684 cv
132.938 519.629 133.195 519.602 133.469 519.602 cv
133.895 519.602 134.27 519.664 134.594 519.785 cv
134.914 519.906 135.18 520.07 135.395 520.281 cv
135.605 520.492 135.766 520.738 135.871 521.012 cv
135.977 521.293 136.031 521.59 136.031 521.902 cv
136.031 522.191 136.004 522.473 135.953 522.75 cv
135.902 523.035 135.797 523.34 135.637 523.664 cv
135.473 523.992 135.238 524.355 134.934 524.754 cv
134.625 525.156 134.219 525.617 133.715 526.133 cv
132.309 527.602 li
136.168 527.602 li
136.199 527.605 136.234 527.617 136.273 527.633 cv
136.305 527.656 136.336 527.687 136.363 527.727 cv
136.387 527.77 136.406 527.82 136.418 527.879 cv
136.43 527.945 136.434 528.016 136.438 528.094 cv
cp
f
207.59 526.078 mo
207.586 526.23 207.563 526.352 207.52 526.437 cv
207.473 526.527 207.41 526.57 207.328 526.566 cv
206.328 526.566 li
206.328 528.43 li
206.328 528.469 206.316 528.5 206.301 528.523 cv
206.277 528.551 206.246 528.57 206.203 528.59 cv
206.152 528.605 206.09 528.617 206.02 528.629 cv
205.941 528.637 205.848 528.641 205.73 528.645 cv
205.613 528.641 205.516 528.637 205.445 528.629 cv
205.367 528.617 205.309 528.605 205.266 528.59 cv
205.219 528.57 205.188 528.551 205.172 528.523 cv
205.152 528.5 205.145 528.469 205.148 528.43 cv
205.148 526.566 li
201.52 526.566 li
201.461 526.57 201.418 526.562 201.383 526.547 cv
201.348 526.535 201.313 526.508 201.285 526.469 cv
201.254 526.434 201.234 526.383 201.223 526.312 cv
201.211 526.246 201.207 526.156 201.207 526.043 cv
201.207 525.961 201.207 525.883 201.215 525.812 cv
201.215 525.742 201.227 525.68 201.242 525.625 cv
201.254 525.57 201.27 525.516 201.297 525.461 cv
201.316 525.406 201.344 525.352 201.379 525.289 cv
204.539 519.902 li
204.559 519.867 204.594 519.836 204.641 519.809 cv
204.684 519.781 204.738 519.758 204.813 519.738 cv
204.879 519.723 204.965 519.711 205.07 519.699 cv
205.172 519.695 205.293 519.691 205.434 519.687 cv
205.582 519.691 205.719 519.695 205.836 519.707 cv
205.949 519.719 206.039 519.734 206.113 519.75 cv
206.18 519.77 206.234 519.793 206.273 519.824 cv
206.309 519.855 206.328 519.891 206.328 519.93 cv
206.328 525.594 li
207.328 525.594 li
207.402 525.598 207.465 525.637 207.516 525.715 cv
207.563 525.797 207.586 525.918 207.59 526.078 cv
cp
205.148 520.727 mo
205.137 520.727 li
202.285 525.594 li
205.148 525.594 li
cp
f
278.191 525.73 mo
278.191 526.121 278.129 526.5 278.012 526.859 cv
277.887 527.227 277.703 527.543 277.461 527.816 cv
277.211 528.094 276.898 528.316 276.523 528.48 cv
276.141 528.648 275.695 528.73 275.18 528.73 cv
274.809 528.73 274.48 528.687 274.199 528.594 cv
273.914 528.508 273.668 528.375 273.457 528.203 cv
273.246 528.035 273.07 527.828 272.934 527.582 cv
272.793 527.336 272.68 527.055 272.598 526.738 cv
272.512 526.426 272.453 526.082 272.418 525.703 cv
272.379 525.332 272.359 524.93 272.363 524.496 cv
272.359 524.117 272.379 523.734 272.422 523.344 cv
272.461 522.961 272.535 522.586 272.641 522.219 cv
272.746 521.859 272.891 521.52 273.07 521.203 cv
273.25 520.887 273.477 520.609 273.75 520.375 cv
274.023 520.141 274.348 519.953 274.727 519.812 cv
275.105 519.676 275.547 519.609 276.051 519.605 cv
276.219 519.609 276.391 519.617 276.563 519.637 cv
276.734 519.66 276.895 519.691 277.043 519.723 cv
277.191 519.762 277.313 519.797 277.414 519.836 cv
277.512 519.875 277.578 519.91 277.613 519.934 cv
277.641 519.961 277.664 519.988 277.684 520.016 cv
277.699 520.047 277.715 520.078 277.723 520.113 cv
277.73 520.148 277.734 520.187 277.742 520.23 cv
277.742 520.273 277.746 520.328 277.75 520.391 cv
277.746 520.477 277.746 520.547 277.746 520.602 cv
277.742 520.664 277.73 520.711 277.719 520.746 cv
277.699 520.785 277.68 520.812 277.656 520.828 cv
277.629 520.848 277.598 520.855 277.559 520.855 cv
277.508 520.855 277.438 520.84 277.352 520.809 cv
277.262 520.777 277.156 520.742 277.035 520.699 cv
276.91 520.664 276.762 520.629 276.586 520.594 cv
276.41 520.566 276.207 520.551 275.977 520.547 cv
275.547 520.551 275.18 520.637 274.875 520.809 cv
274.57 520.98 274.32 521.215 274.125 521.508 cv
273.93 521.801 273.785 522.141 273.695 522.523 cv
273.598 522.914 273.543 523.316 273.535 523.734 cv
273.652 523.668 273.789 523.602 273.938 523.531 cv
274.086 523.465 274.246 523.402 274.422 523.344 cv
274.598 523.293 274.785 523.246 274.98 523.211 cv
275.176 523.18 275.387 523.164 275.613 523.16 cv
276.09 523.164 276.492 523.23 276.824 523.355 cv
277.152 523.488 277.418 523.668 277.625 523.898 cv
277.824 524.129 277.969 524.398 278.059 524.711 cv
278.145 525.023 278.191 525.363 278.191 525.73 cv
cp
276.996 525.84 mo
276.996 525.578 276.969 525.336 276.918 525.117 cv
276.863 524.902 276.773 524.719 276.652 524.562 cv
276.527 524.414 276.363 524.297 276.16 524.215 cv
275.949 524.133 275.695 524.09 275.398 524.09 cv
275.227 524.09 275.059 524.105 274.891 524.137 cv
274.719 524.168 274.555 524.211 274.398 524.258 cv
274.238 524.312 274.09 524.375 273.949 524.445 cv
273.805 524.52 273.672 524.594 273.555 524.672 cv
273.551 525.266 273.59 525.762 273.668 526.156 cv
273.742 526.555 273.852 526.871 273.996 527.109 cv
274.141 527.352 274.32 527.523 274.535 527.625 cv
274.75 527.73 275 527.781 275.289 527.777 cv
275.578 527.781 275.832 527.727 276.047 527.613 cv
276.262 527.508 276.438 527.359 276.582 527.172 cv
276.723 526.988 276.828 526.781 276.895 526.551 cv
276.961 526.32 276.996 526.086 276.996 525.84 cv
cp
f
348.949 526.324 mo
348.949 526.711 348.879 527.055 348.742 527.352 cv
348.605 527.656 348.41 527.906 348.152 528.109 cv
347.895 528.316 347.574 528.473 347.195 528.574 cv
346.813 528.68 346.379 528.73 345.895 528.73 cv
345.434 528.73 345.023 528.684 344.664 528.59 cv
344.301 528.496 343.996 528.355 343.746 528.164 cv
343.496 527.98 343.305 527.75 343.172 527.473 cv
343.039 527.199 342.973 526.887 342.973 526.531 cv
342.973 526.258 343.016 526 343.109 525.766 cv
343.195 525.531 343.328 525.316 343.504 525.121 cv
343.672 524.926 343.883 524.742 344.137 524.566 cv
344.387 524.398 344.672 524.234 344.988 524.078 cv
344.715 523.937 344.473 523.789 344.262 523.629 cv
344.051 523.473 343.871 523.301 343.727 523.113 cv
343.578 522.93 343.469 522.734 343.395 522.523 cv
343.316 522.316 343.277 522.086 343.281 521.836 cv
343.277 521.527 343.332 521.234 343.449 520.961 cv
343.559 520.691 343.73 520.457 343.957 520.254 cv
344.184 520.055 344.469 519.895 344.82 519.777 cv
345.164 519.66 345.574 519.602 346.043 519.602 cv
346.488 519.602 346.875 519.656 347.203 519.762 cv
347.531 519.871 347.801 520.016 348.012 520.199 cv
348.223 520.387 348.379 520.605 348.484 520.855 cv
348.582 521.105 348.633 521.375 348.637 521.664 cv
348.633 521.898 348.594 522.125 348.523 522.336 cv
348.445 522.555 348.336 522.758 348.188 522.945 cv
348.039 523.141 347.859 523.32 347.648 523.484 cv
347.438 523.656 347.195 523.812 346.922 523.953 cv
347.242 524.117 347.527 524.281 347.785 524.449 cv
348.035 524.617 348.25 524.797 348.426 524.992 cv
348.594 525.187 348.723 525.395 348.816 525.609 cv
348.902 525.828 348.949 526.066 348.949 526.324 cv
cp
347.469 521.773 mo
347.465 521.586 347.434 521.41 347.367 521.254 cv
347.301 521.098 347.203 520.965 347.078 520.855 cv
346.949 520.746 346.789 520.664 346.602 520.605 cv
346.406 520.551 346.191 520.523 345.953 520.52 cv
345.457 520.523 345.082 520.633 344.832 520.855 cv
344.574 521.082 344.449 521.391 344.453 521.773 cv
344.449 521.953 344.48 522.117 344.543 522.27 cv
344.605 522.426 344.699 522.57 344.832 522.707 cv
344.957 522.844 345.121 522.977 345.324 523.105 cv
345.52 523.238 345.758 523.375 346.035 523.516 cv
346.496 523.281 346.852 523.02 347.098 522.727 cv
347.344 522.441 347.465 522.125 347.469 521.773 cv
cp
347.758 526.449 mo
347.754 526.242 347.715 526.051 347.641 525.879 cv
347.559 525.711 347.441 525.551 347.285 525.398 cv
347.129 525.25 346.93 525.105 346.695 524.965 cv
346.457 524.828 346.188 524.684 345.879 524.531 cv
345.59 524.676 345.336 524.816 345.121 524.957 cv
344.902 525.098 344.723 525.246 344.586 525.395 cv
344.445 525.551 344.34 525.707 344.27 525.871 cv
344.195 526.039 344.16 526.223 344.164 526.422 cv
344.16 526.867 344.313 527.211 344.621 527.449 cv
344.922 527.695 345.375 527.816 345.98 527.812 cv
346.563 527.816 347.008 527.695 347.309 527.445 cv
347.605 527.203 347.754 526.871 347.758 526.449 cv
cp
f
415.984 528.137 mo
415.98 528.227 415.973 528.297 415.961 528.355 cv
415.945 528.418 415.926 528.469 415.906 528.5 cv
415.883 528.539 415.859 528.562 415.828 528.578 cv
415.797 528.594 415.766 528.602 415.738 528.602 cv
411.102 528.602 li
411.066 528.602 411.039 528.594 411.012 528.578 cv
410.984 528.562 410.957 528.539 410.934 528.5 cv
410.906 528.469 410.887 528.418 410.875 528.355 cv
410.859 528.297 410.852 528.227 410.855 528.137 cv
410.852 528.059 410.859 527.984 410.875 527.922 cv
410.887 527.863 410.902 527.816 410.926 527.777 cv
410.941 527.742 410.969 527.711 411 527.687 cv
411.031 527.668 411.063 527.66 411.102 527.656 cv
412.953 527.656 li
412.953 520.91 li
411.238 521.93 li
411.148 521.98 411.078 522.008 411.031 522.016 cv
410.977 522.023 410.934 522.016 410.902 521.984 cv
410.867 521.957 410.848 521.906 410.836 521.836 cv
410.824 521.77 410.816 521.684 410.82 521.574 cv
410.816 521.5 410.82 521.434 410.832 521.375 cv
410.836 521.324 410.848 521.277 410.863 521.238 cv
410.875 521.203 410.895 521.172 410.918 521.145 cv
410.941 521.117 410.973 521.09 411.02 521.062 cv
413.063 519.75 li
413.078 519.738 413.098 519.727 413.129 519.719 cv
413.152 519.711 413.188 519.703 413.234 519.691 cv
413.273 519.684 413.324 519.676 413.379 519.672 cv
413.434 519.672 413.5 519.672 413.586 519.668 cv
413.691 519.672 413.785 519.676 413.859 519.684 cv
413.93 519.691 413.984 519.707 414.031 519.723 cv
414.07 519.742 414.098 519.762 414.113 519.785 cv
414.121 519.812 414.129 519.836 414.133 519.859 cv
414.133 527.656 li
415.738 527.656 li
415.773 527.66 415.809 527.668 415.84 527.687 cv
415.871 527.711 415.895 527.742 415.918 527.777 cv
415.934 527.816 415.949 527.863 415.965 527.922 cv
415.973 527.984 415.98 528.059 415.984 528.137 cv
cp
f
423.34 524.145 mo
423.336 524.828 423.285 525.449 423.18 526.012 cv
423.07 526.574 422.891 527.059 422.645 527.461 cv
422.391 527.867 422.063 528.18 421.664 528.398 cv
421.258 528.621 420.766 528.73 420.18 528.73 cv
419.621 528.73 419.148 528.633 418.77 528.434 cv
418.387 528.238 418.082 527.945 417.848 527.559 cv
417.613 527.172 417.445 526.699 417.352 526.133 cv
417.25 525.57 417.203 524.922 417.203 524.187 cv
417.203 523.516 417.258 522.895 417.367 522.328 cv
417.477 521.766 417.652 521.281 417.902 520.875 cv
418.145 520.473 418.469 520.16 418.875 519.934 cv
419.273 519.715 419.77 519.602 420.359 519.602 cv
420.918 519.602 421.391 519.703 421.773 519.898 cv
422.156 520.102 422.461 520.395 422.695 520.777 cv
422.926 521.168 423.094 521.641 423.191 522.203 cv
423.289 522.766 423.336 523.414 423.34 524.145 cv
cp
422.133 524.227 mo
422.129 523.785 422.113 523.387 422.086 523.035 cv
422.051 522.684 422.004 522.375 421.945 522.105 cv
421.879 521.836 421.801 521.605 421.703 521.41 cv
421.605 521.219 421.488 521.059 421.352 520.93 cv
421.211 520.805 421.051 520.711 420.879 520.652 cv
420.699 520.598 420.504 520.57 420.289 520.566 cv
419.898 520.57 419.582 520.66 419.344 520.844 cv
419.098 521.027 418.906 521.281 418.77 521.598 cv
418.629 521.918 418.535 522.289 418.484 522.719 cv
418.434 523.148 418.41 523.613 418.41 524.105 cv
418.41 524.77 418.441 525.332 418.512 525.793 cv
418.578 526.262 418.688 526.641 418.84 526.93 cv
418.984 527.227 419.176 527.437 419.406 527.566 cv
419.637 527.703 419.918 527.77 420.25 527.766 cv
420.504 527.77 420.727 527.73 420.922 527.645 cv
421.113 527.566 421.281 527.445 421.422 527.289 cv
421.563 527.137 421.676 526.953 421.77 526.738 cv
421.855 526.523 421.93 526.285 421.988 526.023 cv
422.039 525.766 422.078 525.484 422.102 525.18 cv
422.121 524.875 422.129 524.559 422.133 524.227 cv
cp
f
486.734 528.137 mo
486.73 528.227 486.723 528.297 486.711 528.355 cv
486.695 528.418 486.676 528.469 486.656 528.5 cv
486.633 528.539 486.609 528.562 486.578 528.578 cv
486.547 528.594 486.516 528.602 486.488 528.602 cv
481.852 528.602 li
481.816 528.602 481.789 528.594 481.762 528.578 cv
481.734 528.562 481.707 528.539 481.684 528.5 cv
481.656 528.469 481.637 528.418 481.625 528.355 cv
481.609 528.297 481.602 528.227 481.605 528.137 cv
481.602 528.059 481.609 527.984 481.625 527.922 cv
481.637 527.863 481.652 527.816 481.676 527.777 cv
481.691 527.742 481.719 527.711 481.75 527.687 cv
481.781 527.668 481.813 527.66 481.852 527.656 cv
483.703 527.656 li
483.703 520.91 li
481.988 521.93 li
481.898 521.98 481.828 522.008 481.781 522.016 cv
481.727 522.023 481.684 522.016 481.652 521.984 cv
481.617 521.957 481.598 521.906 481.586 521.836 cv
481.574 521.77 481.566 521.684 481.57 521.574 cv
481.566 521.5 481.57 521.434 481.582 521.375 cv
481.586 521.324 481.598 521.277 481.613 521.238 cv
481.625 521.203 481.645 521.172 481.668 521.145 cv
481.691 521.117 481.723 521.09 481.77 521.062 cv
483.813 519.75 li
483.828 519.738 483.848 519.727 483.879 519.719 cv
483.902 519.711 483.938 519.703 483.984 519.691 cv
484.023 519.684 484.074 519.676 484.129 519.672 cv
484.184 519.672 484.25 519.672 484.336 519.668 cv
484.441 519.672 484.535 519.676 484.609 519.684 cv
484.68 519.691 484.734 519.707 484.781 519.723 cv
484.82 519.742 484.848 519.762 484.863 519.785 cv
484.871 519.812 484.879 519.836 484.883 519.859 cv
484.883 527.656 li
486.488 527.656 li
486.523 527.66 486.559 527.668 486.59 527.687 cv
486.621 527.711 486.645 527.742 486.668 527.777 cv
486.684 527.816 486.699 527.863 486.715 527.922 cv
486.723 527.984 486.73 528.059 486.734 528.137 cv
cp
f
493.797 528.094 mo
493.793 528.18 493.789 528.254 493.777 528.316 cv
493.766 528.383 493.75 528.437 493.73 528.477 cv
493.707 528.523 493.68 528.555 493.648 528.57 cv
493.613 528.594 493.574 528.602 493.535 528.602 cv
488.633 528.602 li
488.57 528.602 488.512 528.594 488.465 528.578 cv
488.414 528.562 488.375 528.539 488.34 528.5 cv
488.305 528.469 488.277 528.414 488.266 528.344 cv
488.246 528.273 488.238 528.187 488.242 528.086 cv
488.238 527.996 488.242 527.918 488.25 527.848 cv
488.254 527.781 488.27 527.723 488.297 527.668 cv
488.32 527.617 488.352 527.562 488.387 527.508 cv
488.422 527.457 488.465 527.402 488.523 527.34 cv
490.297 525.516 li
490.707 525.098 491.035 524.723 491.285 524.387 cv
491.531 524.059 491.723 523.754 491.855 523.477 cv
491.988 523.203 492.074 522.953 492.121 522.727 cv
492.16 522.504 492.184 522.293 492.184 522.098 cv
492.184 521.902 492.148 521.719 492.082 521.539 cv
492.016 521.367 491.922 521.211 491.797 521.074 cv
491.672 520.945 491.516 520.84 491.328 520.758 cv
491.141 520.684 490.922 520.645 490.676 520.641 cv
490.387 520.645 490.129 520.684 489.902 520.758 cv
489.672 520.84 489.473 520.926 489.301 521.012 cv
489.129 521.105 488.984 521.187 488.867 521.266 cv
488.75 521.344 488.664 521.383 488.613 521.383 cv
488.578 521.383 488.547 521.375 488.523 521.355 cv
488.492 521.34 488.473 521.309 488.457 521.266 cv
488.441 521.227 488.426 521.172 488.418 521.102 cv
488.406 521.035 488.402 520.953 488.406 520.855 cv
488.402 520.789 488.406 520.73 488.414 520.68 cv
488.418 520.629 488.426 520.586 488.438 520.547 cv
488.445 520.512 488.461 520.477 488.48 520.445 cv
488.5 520.414 488.535 520.375 488.594 520.324 cv
488.645 520.277 488.738 520.211 488.875 520.129 cv
489.008 520.047 489.18 519.969 489.383 519.887 cv
489.586 519.809 489.809 519.738 490.055 519.684 cv
490.297 519.629 490.555 519.602 490.828 519.602 cv
491.254 519.602 491.629 519.664 491.953 519.785 cv
492.273 519.906 492.539 520.07 492.754 520.281 cv
492.965 520.492 493.125 520.738 493.23 521.012 cv
493.336 521.293 493.391 521.59 493.391 521.902 cv
493.391 522.191 493.363 522.473 493.313 522.75 cv
493.262 523.035 493.156 523.34 492.996 523.664 cv
492.832 523.992 492.598 524.355 492.293 524.754 cv
491.984 525.156 491.578 525.617 491.074 526.133 cv
489.668 527.602 li
493.527 527.602 li
493.559 527.605 493.594 527.617 493.633 527.633 cv
493.664 527.656 493.695 527.687 493.723 527.727 cv
493.746 527.77 493.766 527.82 493.777 527.879 cv
493.789 527.945 493.793 528.016 493.797 528.094 cv
cp
f
557.516 528.137 mo
557.512 528.227 557.504 528.297 557.492 528.355 cv
557.477 528.418 557.457 528.469 557.438 528.5 cv
557.414 528.539 557.391 528.562 557.359 528.578 cv
557.328 528.594 557.297 528.602 557.27 528.602 cv
552.633 528.602 li
552.598 528.602 552.57 528.594 552.543 528.578 cv
552.516 528.562 552.488 528.539 552.465 528.5 cv
552.438 528.469 552.418 528.418 552.406 528.355 cv
552.391 528.297 552.383 528.227 552.387 528.137 cv
552.383 528.059 552.391 527.984 552.406 527.922 cv
552.418 527.863 552.434 527.816 552.457 527.777 cv
552.473 527.742 552.5 527.711 552.531 527.687 cv
552.563 527.668 552.594 527.66 552.633 527.656 cv
554.484 527.656 li
554.484 520.91 li
552.77 521.93 li
552.68 521.98 552.609 522.008 552.563 522.016 cv
552.508 522.023 552.465 522.016 552.434 521.984 cv
552.398 521.957 552.379 521.906 552.367 521.836 cv
552.355 521.77 552.348 521.684 552.352 521.574 cv
552.348 521.5 552.352 521.434 552.363 521.375 cv
552.367 521.324 552.379 521.277 552.395 521.238 cv
552.406 521.203 552.426 521.172 552.449 521.145 cv
552.473 521.117 552.504 521.09 552.551 521.062 cv
554.594 519.75 li
554.609 519.738 554.629 519.727 554.66 519.719 cv
554.684 519.711 554.719 519.703 554.766 519.691 cv
554.805 519.684 554.855 519.676 554.91 519.672 cv
554.965 519.672 555.031 519.672 555.117 519.668 cv
555.223 519.672 555.316 519.676 555.391 519.684 cv
555.461 519.691 555.516 519.707 555.563 519.723 cv
555.602 519.742 555.629 519.762 555.645 519.785 cv
555.652 519.812 555.66 519.836 555.664 519.859 cv
555.664 527.656 li
557.27 527.656 li
557.305 527.66 557.34 527.668 557.371 527.687 cv
557.402 527.711 557.426 527.742 557.449 527.777 cv
557.465 527.816 557.48 527.863 557.496 527.922 cv
557.504 527.984 557.512 528.059 557.516 528.137 cv
cp
f
564.949 526.078 mo
564.945 526.23 564.922 526.352 564.879 526.437 cv
564.832 526.527 564.77 526.57 564.688 526.566 cv
563.688 526.566 li
563.688 528.43 li
563.688 528.469 563.676 528.5 563.66 528.523 cv
563.637 528.551 563.605 528.57 563.563 528.59 cv
563.512 528.605 563.449 528.617 563.379 528.629 cv
563.301 528.637 563.207 528.641 563.09 528.645 cv
562.973 528.641 562.875 528.637 562.805 528.629 cv
562.727 528.617 562.668 528.605 562.625 528.59 cv
562.578 528.57 562.547 528.551 562.531 528.523 cv
562.512 528.5 562.504 528.469 562.508 528.43 cv
562.508 526.566 li
558.879 526.566 li
558.82 526.57 558.777 526.562 558.742 526.547 cv
558.707 526.535 558.672 526.508 558.645 526.469 cv
558.613 526.434 558.594 526.383 558.582 526.312 cv
558.57 526.246 558.566 526.156 558.566 526.043 cv
558.566 525.961 558.566 525.883 558.574 525.812 cv
558.574 525.742 558.586 525.68 558.602 525.625 cv
558.613 525.57 558.629 525.516 558.656 525.461 cv
558.676 525.406 558.703 525.352 558.738 525.289 cv
561.898 519.902 li
561.918 519.867 561.953 519.836 562 519.809 cv
562.043 519.781 562.098 519.758 562.172 519.738 cv
562.238 519.723 562.324 519.711 562.43 519.699 cv
562.531 519.695 562.652 519.691 562.793 519.687 cv
562.941 519.691 563.078 519.695 563.195 519.707 cv
563.309 519.719 563.398 519.734 563.473 519.75 cv
563.539 519.77 563.594 519.793 563.633 519.824 cv
563.668 519.855 563.688 519.891 563.688 519.93 cv
563.688 525.594 li
564.688 525.594 li
564.762 525.598 564.824 525.637 564.875 525.715 cv
564.922 525.797 564.945 525.918 564.949 526.078 cv
cp
562.508 520.727 mo
562.496 520.727 li
559.645 525.594 li
562.508 525.594 li
cp
f
628.266 528.137 mo
628.262 528.227 628.254 528.297 628.242 528.355 cv
628.227 528.418 628.207 528.469 628.188 528.5 cv
628.164 528.539 628.141 528.562 628.109 528.578 cv
628.078 528.594 628.047 528.602 628.02 528.602 cv
623.383 528.602 li
623.348 528.602 623.32 528.594 623.293 528.578 cv
623.266 528.562 623.238 528.539 623.215 528.5 cv
623.188 528.469 623.168 528.418 623.156 528.355 cv
623.141 528.297 623.133 528.227 623.137 528.137 cv
623.133 528.059 623.141 527.984 623.156 527.922 cv
623.168 527.863 623.184 527.816 623.207 527.777 cv
623.223 527.742 623.25 527.711 623.281 527.687 cv
623.313 527.668 623.344 527.66 623.383 527.656 cv
625.234 527.656 li
625.234 520.91 li
623.52 521.93 li
623.43 521.98 623.359 522.008 623.313 522.016 cv
623.258 522.023 623.215 522.016 623.184 521.984 cv
623.148 521.957 623.129 521.906 623.117 521.836 cv
623.105 521.77 623.098 521.684 623.102 521.574 cv
623.098 521.5 623.102 521.434 623.113 521.375 cv
623.117 521.324 623.129 521.277 623.145 521.238 cv
623.156 521.203 623.176 521.172 623.199 521.145 cv
623.223 521.117 623.254 521.09 623.301 521.062 cv
625.344 519.75 li
625.359 519.738 625.379 519.727 625.41 519.719 cv
625.434 519.711 625.469 519.703 625.516 519.691 cv
625.555 519.684 625.605 519.676 625.66 519.672 cv
625.715 519.672 625.781 519.672 625.867 519.668 cv
625.973 519.672 626.066 519.676 626.141 519.684 cv
626.211 519.691 626.266 519.707 626.313 519.723 cv
626.352 519.742 626.379 519.762 626.395 519.785 cv
626.402 519.812 626.41 519.836 626.414 519.859 cv
626.414 527.656 li
628.02 527.656 li
628.055 527.66 628.09 527.668 628.121 527.687 cv
628.152 527.711 628.176 527.742 628.199 527.777 cv
628.215 527.816 628.23 527.863 628.246 527.922 cv
628.254 527.984 628.262 528.059 628.266 528.137 cv
cp
f
635.551 525.73 mo
635.551 526.121 635.488 526.5 635.371 526.859 cv
635.246 527.227 635.063 527.543 634.82 527.816 cv
634.57 528.094 634.258 528.316 633.883 528.48 cv
633.5 528.648 633.055 528.73 632.539 528.73 cv
632.168 528.73 631.84 528.687 631.559 528.594 cv
631.273 528.508 631.027 528.375 630.816 528.203 cv
630.605 528.035 630.43 527.828 630.293 527.582 cv
630.152 527.336 630.039 527.055 629.957 526.738 cv
629.871 526.426 629.813 526.082 629.777 525.703 cv
629.738 525.332 629.719 524.93 629.723 524.496 cv
629.719 524.117 629.738 523.734 629.781 523.344 cv
629.82 522.961 629.895 522.586 630 522.219 cv
630.105 521.859 630.25 521.52 630.43 521.203 cv
630.609 520.887 630.836 520.609 631.109 520.375 cv
631.383 520.141 631.707 519.953 632.086 519.812 cv
632.465 519.676 632.906 519.609 633.41 519.605 cv
633.578 519.609 633.75 519.617 633.922 519.637 cv
634.094 519.66 634.254 519.691 634.402 519.723 cv
634.551 519.762 634.672 519.797 634.773 519.836 cv
634.871 519.875 634.938 519.91 634.973 519.934 cv
635 519.961 635.023 519.988 635.043 520.016 cv
635.059 520.047 635.074 520.078 635.082 520.113 cv
635.09 520.148 635.094 520.187 635.102 520.23 cv
635.102 520.273 635.105 520.328 635.109 520.391 cv
635.105 520.477 635.105 520.547 635.105 520.602 cv
635.102 520.664 635.09 520.711 635.078 520.746 cv
635.059 520.785 635.039 520.812 635.016 520.828 cv
634.988 520.848 634.957 520.855 634.918 520.855 cv
634.867 520.855 634.797 520.84 634.711 520.809 cv
634.621 520.777 634.516 520.742 634.395 520.699 cv
634.27 520.664 634.121 520.629 633.945 520.594 cv
633.77 520.566 633.566 520.551 633.336 520.547 cv
632.906 520.551 632.539 520.637 632.234 520.809 cv
631.93 520.98 631.68 521.215 631.484 521.508 cv
631.289 521.801 631.145 522.141 631.055 522.523 cv
630.957 522.914 630.902 523.316 630.895 523.734 cv
631.012 523.668 631.148 523.602 631.297 523.531 cv
631.445 523.465 631.605 523.402 631.781 523.344 cv
631.957 523.293 632.145 523.246 632.34 523.211 cv
632.535 523.18 632.746 523.164 632.973 523.16 cv
633.449 523.164 633.852 523.23 634.184 523.355 cv
634.512 523.488 634.777 523.668 634.984 523.898 cv
635.184 524.129 635.328 524.398 635.418 524.711 cv
635.504 525.023 635.551 525.363 635.551 525.73 cv
cp
634.355 525.84 mo
634.355 525.578 634.328 525.336 634.277 525.117 cv
634.223 524.902 634.133 524.719 634.012 524.562 cv
633.887 524.414 633.723 524.297 633.52 524.215 cv
633.309 524.133 633.055 524.09 632.758 524.09 cv
632.586 524.09 632.418 524.105 632.25 524.137 cv
632.078 524.168 631.914 524.211 631.758 524.258 cv
631.598 524.312 631.449 524.375 631.309 524.445 cv
631.164 524.52 631.031 524.594 630.914 524.672 cv
630.91 525.266 630.949 525.762 631.027 526.156 cv
631.102 526.555 631.211 526.871 631.355 527.109 cv
631.5 527.352 631.68 527.523 631.895 527.625 cv
632.109 527.73 632.359 527.781 632.648 527.777 cv
632.938 527.781 633.191 527.727 633.406 527.613 cv
633.621 527.508 633.797 527.359 633.941 527.172 cv
634.082 526.988 634.188 526.781 634.254 526.551 cv
634.32 526.32 634.355 526.086 634.355 525.84 cv
cp
f
19.461 358.187 mo
19.559 358.191 19.641 358.195 19.707 358.203 cv
19.781 358.215 19.84 358.234 19.883 358.258 cv
19.934 358.285 19.969 358.316 19.984 358.348 cv
20.008 358.387 20.016 358.422 20.016 358.461 cv
20.016 363.301 li
20.016 363.422 19.977 363.535 19.895 363.641 cv
19.816 363.75 19.676 363.805 19.469 363.801 cv
10.477 363.801 li
10.273 363.805 10.133 363.75 10.051 363.641 cv
9.973 363.535 9.934 363.422 9.93 363.301 cv
9.93 358.516 li
9.934 358.477 9.941 358.437 9.961 358.402 cv
9.984 358.371 10.02 358.344 10.063 358.32 cv
10.113 358.301 10.172 358.285 10.238 358.27 cv
10.313 358.258 10.398 358.25 10.5 358.25 cv
10.594 358.25 10.676 358.258 10.746 358.27 cv
10.816 358.285 10.875 358.301 10.918 358.32 cv
10.965 358.344 10.996 358.371 11.016 358.402 cv
11.039 358.437 11.051 358.477 11.047 358.516 cv
11.047 362.461 li
14.211 362.461 li
14.211 359.078 li
14.215 359.039 14.227 359 14.246 358.965 cv
14.273 358.934 14.305 358.906 14.344 358.879 cv
14.387 358.859 14.445 358.844 14.516 358.828 cv
14.59 358.82 14.676 358.812 14.77 358.812 cv
14.867 358.812 14.945 358.82 15.012 358.828 cv
15.082 358.844 15.137 358.859 15.176 358.879 cv
15.219 358.906 15.25 358.934 15.266 358.965 cv
15.285 359 15.293 359.039 15.293 359.078 cv
15.293 362.461 li
18.902 362.461 li
18.902 358.461 li
18.902 358.422 18.914 358.387 18.934 358.348 cv
18.957 358.316 18.988 358.285 19.031 358.258 cv
19.078 358.234 19.137 358.215 19.203 358.203 cv
19.273 358.195 19.359 358.191 19.461 358.187 cv
cp
f
19.82 350.121 mo
19.867 350.121 19.902 350.133 19.926 350.152 cv
19.957 350.176 19.98 350.211 20 350.254 cv
20.02 350.305 20.031 350.367 20.047 350.449 cv
20.055 350.531 20.063 350.637 20.063 350.758 cv
20.063 350.891 20.055 350.996 20.047 351.078 cv
20.031 351.164 20.02 351.23 20 351.273 cv
19.98 351.324 19.957 351.355 19.926 351.375 cv
19.902 351.398 19.867 351.41 19.82 351.406 cv
15.715 351.406 li
15.316 351.41 14.996 351.441 14.75 351.5 cv
14.508 351.566 14.297 351.656 14.117 351.773 cv
13.941 351.891 13.805 352.047 13.711 352.234 cv
13.617 352.43 13.57 352.648 13.57 352.895 cv
13.57 353.219 13.688 353.543 13.914 353.863 cv
14.148 354.187 14.48 354.523 14.918 354.875 cv
19.82 354.875 li
19.867 354.879 19.902 354.891 19.926 354.906 cv
19.957 354.93 19.98 354.961 20 355.008 cv
20.02 355.055 20.031 355.121 20.047 355.199 cv
20.055 355.285 20.063 355.391 20.063 355.52 cv
20.063 355.648 20.055 355.754 20.047 355.832 cv
20.031 355.918 20.02 355.984 20 356.031 cv
19.98 356.086 19.957 356.117 19.926 356.133 cv
19.902 356.152 19.867 356.164 19.82 356.16 cv
12.809 356.16 li
12.77 356.164 12.734 356.156 12.703 356.137 cv
12.676 356.125 12.652 356.094 12.625 356.043 cv
12.605 356 12.59 355.937 12.578 355.863 cv
12.574 355.793 12.57 355.699 12.566 355.574 cv
12.57 355.465 12.574 355.367 12.578 355.289 cv
12.59 355.215 12.605 355.156 12.625 355.113 cv
12.652 355.074 12.676 355.047 12.703 355.027 cv
12.734 355.012 12.77 355.004 12.809 355 cv
13.734 355 li
13.293 354.609 12.973 354.215 12.766 353.82 cv
12.563 353.43 12.457 353.031 12.457 352.629 cv
12.457 352.16 12.539 351.77 12.695 351.449 cv
12.859 351.133 13.07 350.871 13.332 350.672 cv
13.598 350.477 13.906 350.336 14.262 350.25 cv
14.617 350.164 15.047 350.121 15.543 350.121 cv
cp
f
16.012 341.797 mo
16.215 341.801 16.355 341.852 16.441 341.949 cv
16.527 342.055 16.57 342.172 16.57 342.297 cv
16.57 346.914 li
16.961 346.918 17.313 346.879 17.625 346.797 cv
17.938 346.723 18.207 346.59 18.426 346.406 cv
18.652 346.227 18.824 345.992 18.941 345.695 cv
19.066 345.406 19.125 345.047 19.121 344.621 cv
19.125 344.289 19.098 343.992 19.039 343.73 cv
18.988 343.469 18.926 343.242 18.855 343.051 cv
18.789 342.863 18.73 342.707 18.672 342.582 cv
18.621 342.461 18.594 342.367 18.59 342.305 cv
18.594 342.27 18.602 342.238 18.617 342.207 cv
18.637 342.18 18.664 342.156 18.699 342.137 cv
18.738 342.125 18.789 342.113 18.852 342.102 cv
18.918 342.098 18.996 342.094 19.09 342.09 cv
19.16 342.094 19.219 342.098 19.266 342.098 cv
19.313 342.105 19.355 342.109 19.395 342.117 cv
19.434 342.125 19.469 342.141 19.5 342.156 cv
19.531 342.18 19.563 342.203 19.59 342.227 cv
19.621 342.258 19.668 342.34 19.73 342.48 cv
19.797 342.621 19.859 342.805 19.922 343.027 cv
19.984 343.254 20.039 343.512 20.09 343.805 cv
20.137 344.098 20.16 344.41 20.164 344.742 cv
20.16 345.32 20.082 345.828 19.922 346.258 cv
19.762 346.695 19.523 347.059 19.207 347.352 cv
18.891 347.652 18.496 347.875 18.016 348.023 cv
17.539 348.172 16.98 348.246 16.344 348.246 cv
15.746 348.246 15.207 348.172 14.723 348.016 cv
14.246 347.863 13.836 347.637 13.5 347.34 cv
13.164 347.047 12.906 346.691 12.727 346.277 cv
12.547 345.863 12.457 345.398 12.457 344.883 cv
12.457 344.332 12.547 343.863 12.723 343.477 cv
12.902 343.09 13.141 342.773 13.438 342.52 cv
13.738 342.273 14.09 342.09 14.488 341.973 cv
14.895 341.859 15.324 341.801 15.777 341.797 cv
cp
15.629 343.09 mo
14.953 343.074 14.422 343.227 14.039 343.543 cv
13.656 343.859 13.465 344.328 13.461 344.945 cv
13.465 345.27 13.523 345.551 13.641 345.789 cv
13.762 346.031 13.922 346.23 14.117 346.391 cv
14.316 346.555 14.547 346.68 14.809 346.766 cv
15.07 346.855 15.344 346.906 15.629 346.914 cv
cp
f
13.266 335.73 mo
13.383 335.734 13.48 335.734 13.555 335.738 cv
13.637 335.746 13.699 335.758 13.738 335.77 cv
13.785 335.789 13.816 335.809 13.84 335.828 cv
13.863 335.855 13.875 335.887 13.875 335.926 cv
13.875 335.969 13.863 336.02 13.84 336.078 cv
13.816 336.141 13.793 336.211 13.77 336.281 cv
13.746 336.359 13.727 336.441 13.703 336.535 cv
13.688 336.629 13.676 336.73 13.672 336.84 cv
13.676 336.973 13.703 337.102 13.75 337.223 cv
13.805 337.348 13.891 337.477 14.008 337.613 cv
14.133 337.754 14.289 337.898 14.484 338.047 cv
14.68 338.199 14.922 338.367 15.207 338.547 cv
19.82 338.547 li
19.867 338.551 19.902 338.562 19.926 338.578 cv
19.957 338.602 19.98 338.633 20 338.68 cv
20.02 338.727 20.031 338.793 20.047 338.871 cv
20.055 338.957 20.063 339.062 20.063 339.191 cv
20.063 339.32 20.055 339.426 20.047 339.504 cv
20.031 339.59 20.02 339.656 20 339.703 cv
19.98 339.758 19.957 339.789 19.926 339.805 cv
19.902 339.824 19.867 339.836 19.82 339.832 cv
12.809 339.832 li
12.77 339.836 12.734 339.828 12.703 339.809 cv
12.676 339.797 12.652 339.766 12.625 339.715 cv
12.605 339.672 12.59 339.609 12.578 339.535 cv
12.574 339.465 12.57 339.371 12.566 339.246 cv
12.57 339.137 12.574 339.039 12.578 338.961 cv
12.59 338.887 12.605 338.828 12.625 338.785 cv
12.652 338.746 12.676 338.719 12.703 338.699 cv
12.734 338.684 12.77 338.676 12.809 338.672 cv
13.828 338.672 li
13.547 338.484 13.32 338.301 13.145 338.129 cv
12.969 337.961 12.828 337.801 12.727 337.648 cv
12.625 337.5 12.555 337.352 12.516 337.203 cv
12.477 337.055 12.457 336.906 12.457 336.754 cv
12.457 336.687 12.461 336.609 12.469 336.523 cv
12.477 336.437 12.492 336.348 12.512 336.254 cv
12.535 336.16 12.559 336.078 12.582 336 cv
12.609 335.93 12.637 335.875 12.66 335.84 cv
12.691 335.812 12.715 335.793 12.734 335.777 cv
12.762 335.77 12.793 335.758 12.824 335.75 cv
12.863 335.742 12.914 335.738 12.984 335.734 cv
13.055 335.734 13.148 335.734 13.266 335.73 cv
cp
f
13.125 328.691 mo
13.309 328.695 13.441 328.719 13.52 328.766 cv
13.602 328.816 13.641 328.879 13.641 328.953 cv
13.641 329.961 li
13.828 329.781 14.035 329.652 14.262 329.578 cv
14.488 329.508 14.723 329.473 14.965 329.469 cv
15.371 329.473 15.73 329.539 16.043 329.664 cv
16.355 329.797 16.621 329.98 16.832 330.223 cv
17.051 330.465 17.215 330.754 17.328 331.082 cv
17.445 331.418 17.504 331.785 17.5 332.187 cv
17.504 332.477 17.465 332.75 17.387 333.004 cv
17.313 333.266 17.219 333.461 17.102 333.598 cv
17.199 333.691 17.305 333.77 17.422 333.828 cv
17.543 333.891 17.68 333.922 17.832 333.918 cv
18.016 333.922 18.168 333.836 18.285 333.664 cv
18.41 333.496 18.473 333.273 18.48 332.992 cv
18.559 331.16 li
18.57 330.812 18.617 330.496 18.703 330.203 cv
18.789 329.914 18.914 329.66 19.07 329.445 cv
19.23 329.234 19.422 329.066 19.652 328.945 cv
19.887 328.828 20.156 328.77 20.461 328.766 cv
20.781 328.77 21.086 328.836 21.379 328.969 cv
21.668 329.105 21.922 329.312 22.145 329.59 cv
22.363 329.871 22.539 330.227 22.668 330.656 cv
22.793 331.086 22.855 331.594 22.859 332.18 cv
22.855 332.75 22.809 333.234 22.715 333.629 cv
22.617 334.027 22.484 334.352 22.32 334.605 cv
22.152 334.859 21.957 335.043 21.727 335.156 cv
21.492 335.273 21.238 335.332 20.973 335.328 cv
20.801 335.332 20.637 335.312 20.477 335.266 cv
20.313 335.227 20.16 335.164 20.016 335.078 cv
19.871 334.996 19.734 334.887 19.598 334.758 cv
19.469 334.633 19.336 334.488 19.207 334.316 cv
19.078 334.574 18.914 334.762 18.715 334.883 cv
18.52 335.004 18.309 335.062 18.074 335.062 cv
17.762 335.062 17.477 335 17.227 334.871 cv
16.977 334.742 16.754 334.582 16.555 334.387 cv
16.363 334.551 16.148 334.676 15.906 334.77 cv
15.668 334.863 15.375 334.91 15.027 334.91 cv
14.633 334.91 14.273 334.844 13.953 334.707 cv
13.637 334.574 13.371 334.387 13.152 334.145 cv
12.938 333.906 12.77 333.621 12.648 333.285 cv
12.535 332.953 12.477 332.586 12.473 332.187 cv
12.477 331.977 12.488 331.777 12.508 331.594 cv
12.535 331.41 12.566 331.238 12.605 331.074 cv
12.605 328.953 li
12.609 328.867 12.652 328.801 12.734 328.758 cv
12.824 328.715 12.953 328.695 13.125 328.691 cv
cp
14.973 330.699 mo
14.5 330.703 14.129 330.836 13.855 331.094 cv
13.59 331.359 13.453 331.73 13.453 332.211 cv
13.453 332.465 13.496 332.684 13.578 332.863 cv
13.664 333.051 13.777 333.203 13.922 333.324 cv
14.07 333.445 14.238 333.535 14.426 333.594 cv
14.613 333.656 14.813 333.687 15.02 333.684 cv
15.484 333.687 15.848 333.555 16.113 333.293 cv
16.379 333.031 16.512 332.664 16.508 332.187 cv
16.512 331.937 16.473 331.719 16.387 331.527 cv
16.309 331.344 16.195 331.187 16.055 331.062 cv
15.914 330.941 15.75 330.852 15.559 330.789 cv
15.375 330.734 15.18 330.703 14.973 330.699 cv
cp
20.531 330.055 mo
20.227 330.059 19.996 330.184 19.832 330.426 cv
19.672 330.676 19.582 331.008 19.57 331.426 cv
19.508 333.242 li
19.641 333.41 19.766 333.547 19.879 333.648 cv
19.996 333.758 20.105 333.84 20.215 333.902 cv
20.32 333.965 20.426 334.008 20.531 334.031 cv
20.633 334.055 20.738 334.066 20.848 334.066 cv
21.184 334.066 21.438 333.898 21.617 333.555 cv
21.789 333.215 21.879 332.734 21.879 332.117 cv
21.879 331.73 21.84 331.406 21.766 331.141 cv
21.688 330.883 21.586 330.672 21.465 330.508 cv
21.336 330.352 21.195 330.234 21.035 330.16 cv
20.875 330.094 20.707 330.059 20.531 330.055 cv
cp
f
20.016 323.836 mo
22.594 324.77 li
22.676 324.805 22.738 324.883 22.785 325.008 cv
22.828 325.137 22.852 325.332 22.852 325.59 cv
22.852 325.73 22.844 325.84 22.832 325.918 cv
22.816 326.004 22.793 326.066 22.766 326.105 cv
22.73 326.152 22.691 326.176 22.641 326.18 cv
22.586 326.187 22.523 326.176 22.453 326.141 cv
20.016 325.176 li
19.996 325.223 19.965 325.27 19.914 325.309 cv
19.871 325.355 19.82 325.383 19.766 325.395 cv
13.063 327.895 li
12.957 327.937 12.871 327.961 12.809 327.957 cv
12.746 327.961 12.699 327.937 12.66 327.895 cv
12.629 327.855 12.602 327.789 12.586 327.691 cv
12.574 327.602 12.57 327.477 12.566 327.32 cv
12.57 327.164 12.574 327.043 12.578 326.953 cv
12.59 326.867 12.602 326.797 12.621 326.742 cv
12.645 326.691 12.676 326.652 12.711 326.629 cv
12.754 326.605 12.809 326.582 12.871 326.555 cv
18.496 324.551 li
18.496 324.527 li
12.84 322.598 li
12.742 322.566 12.68 322.531 12.648 322.484 cv
12.625 322.445 12.602 322.379 12.586 322.285 cv
12.574 322.199 12.57 322.07 12.566 321.902 cv
12.57 321.758 12.574 321.637 12.586 321.543 cv
12.602 321.449 12.629 321.383 12.66 321.336 cv
12.699 321.297 12.746 321.273 12.809 321.27 cv
12.871 321.273 12.949 321.289 13.039 321.316 cv
cp
f
18.59 309.203 mo
18.676 309.203 18.746 309.207 18.809 309.211 cv
18.871 309.219 18.926 309.227 18.973 309.238 cv
19.02 309.254 19.063 309.273 19.098 309.289 cv
19.137 309.312 19.18 309.348 19.23 309.398 cv
19.281 309.453 19.359 309.562 19.465 309.727 cv
19.574 309.895 19.68 310.102 19.777 310.348 cv
19.883 310.594 19.965 310.875 20.035 311.195 cv
20.102 311.516 20.137 311.867 20.141 312.242 cv
20.137 312.902 20.031 313.492 19.813 314.02 cv
19.598 314.547 19.277 314.996 18.848 315.367 cv
18.426 315.738 17.898 316.023 17.27 316.223 cv
16.645 316.422 15.922 316.523 15.105 316.52 cv
14.27 316.523 13.527 316.414 12.871 316.199 cv
12.219 315.984 11.664 315.684 11.207 315.293 cv
10.754 314.906 10.406 314.441 10.168 313.895 cv
9.93 313.355 9.809 312.75 9.809 312.086 cv
9.809 311.797 9.836 311.516 9.891 311.238 cv
9.945 310.965 10.016 310.711 10.094 310.477 cv
10.18 310.246 10.273 310.039 10.383 309.852 cv
10.492 309.672 10.582 309.543 10.652 309.473 cv
10.723 309.402 10.777 309.359 10.813 309.336 cv
10.852 309.32 10.895 309.301 10.941 309.285 cv
10.992 309.273 11.051 309.266 11.117 309.254 cv
11.188 309.25 11.27 309.246 11.359 309.242 cv
11.465 309.246 11.551 309.25 11.621 309.258 cv
11.695 309.27 11.758 309.285 11.805 309.305 cv
11.859 309.328 11.895 309.352 11.914 309.379 cv
11.941 309.41 11.953 309.445 11.949 309.484 cv
11.953 309.559 11.902 309.664 11.797 309.793 cv
11.699 309.926 11.59 310.094 11.465 310.297 cv
11.348 310.508 11.234 310.758 11.129 311.051 cv
11.031 311.348 10.98 311.699 10.977 312.109 cv
10.98 312.562 11.07 312.973 11.246 313.34 cv
11.426 313.707 11.688 314.023 12.035 314.281 cv
12.387 314.547 12.813 314.746 13.313 314.887 cv
13.813 315.031 14.387 315.105 15.027 315.102 cv
15.672 315.105 16.238 315.035 16.727 314.895 cv
17.219 314.758 17.629 314.559 17.957 314.301 cv
18.289 314.043 18.535 313.727 18.703 313.352 cv
18.875 312.977 18.961 312.551 18.957 312.07 cv
18.961 311.672 18.91 311.32 18.809 311.02 cv
18.711 310.719 18.602 310.465 18.477 310.25 cv
18.355 310.043 18.246 309.867 18.145 309.73 cv
18.051 309.594 18 309.488 17.996 309.406 cv
18 309.375 18.008 309.344 18.02 309.312 cv
18.039 309.289 18.07 309.266 18.109 309.25 cv
18.156 309.234 18.215 309.223 18.293 309.215 cv
18.371 309.207 18.473 309.203 18.59 309.203 cv
cp
f
16.234 301.055 mo
16.813 301.059 17.34 301.133 17.816 301.281 cv
18.301 301.434 18.715 301.66 19.059 301.957 cv
19.41 302.258 19.68 302.633 19.871 303.078 cv
20.066 303.531 20.16 304.051 20.164 304.641 cv
20.16 305.219 20.078 305.723 19.906 306.148 cv
19.738 306.578 19.488 306.934 19.16 307.219 cv
18.832 307.508 18.438 307.723 17.969 307.859 cv
17.504 308 16.973 308.066 16.375 308.066 cv
15.809 308.066 15.281 307.996 14.801 307.848 cv
14.32 307.703 13.906 307.477 13.555 307.176 cv
13.207 306.879 12.938 306.508 12.746 306.059 cv
12.555 305.613 12.457 305.09 12.457 304.492 cv
12.457 303.914 12.543 303.414 12.715 302.984 cv
12.887 302.559 13.137 302.199 13.465 301.914 cv
13.793 301.629 14.191 301.414 14.656 301.27 cv
15.125 301.129 15.652 301.059 16.234 301.055 cv
cp
16.32 302.387 mo
15.945 302.391 15.586 302.426 15.246 302.492 cv
14.91 302.566 14.617 302.684 14.359 302.844 cv
14.109 303.008 13.906 303.227 13.754 303.504 cv
13.609 303.785 13.535 304.133 13.531 304.543 cv
13.535 304.93 13.602 305.258 13.734 305.531 cv
13.871 305.809 14.063 306.035 14.309 306.211 cv
14.555 306.391 14.848 306.523 15.184 306.605 cv
15.523 306.695 15.891 306.738 16.289 306.734 cv
16.676 306.738 17.039 306.703 17.375 306.629 cv
17.715 306.562 18.008 306.445 18.258 306.277 cv
18.512 306.113 18.715 305.891 18.859 305.613 cv
19.012 305.336 19.086 304.988 19.082 304.574 cv
19.086 304.199 19.016 303.871 18.879 303.59 cv
18.746 303.312 18.559 303.086 18.309 302.906 cv
18.066 302.73 17.773 302.602 17.438 302.516 cv
17.102 302.434 16.73 302.391 16.32 302.387 cv
cp
f
19.82 293.129 mo
19.867 293.129 19.902 293.141 19.926 293.16 cv
19.957 293.184 19.98 293.219 20 293.262 cv
20.02 293.312 20.031 293.375 20.047 293.457 cv
20.055 293.539 20.063 293.645 20.063 293.766 cv
20.063 293.898 20.055 294.004 20.047 294.086 cv
20.031 294.172 20.02 294.238 20 294.281 cv
19.98 294.332 19.957 294.363 19.926 294.383 cv
19.902 294.406 19.867 294.418 19.82 294.414 cv
15.715 294.414 li
15.316 294.418 14.996 294.449 14.75 294.508 cv
14.508 294.574 14.297 294.664 14.117 294.781 cv
13.941 294.898 13.805 295.055 13.711 295.242 cv
13.617 295.437 13.57 295.656 13.57 295.902 cv
13.57 296.227 13.688 296.551 13.914 296.871 cv
14.148 297.195 14.48 297.531 14.918 297.883 cv
19.82 297.883 li
19.867 297.887 19.902 297.898 19.926 297.914 cv
19.957 297.937 19.98 297.969 20 298.016 cv
20.02 298.062 20.031 298.129 20.047 298.207 cv
20.055 298.293 20.063 298.398 20.063 298.527 cv
20.063 298.656 20.055 298.762 20.047 298.84 cv
20.031 298.926 20.02 298.992 20 299.039 cv
19.98 299.094 19.957 299.125 19.926 299.141 cv
19.902 299.16 19.867 299.172 19.82 299.168 cv
12.809 299.168 li
12.77 299.172 12.734 299.164 12.703 299.145 cv
12.676 299.133 12.652 299.102 12.625 299.051 cv
12.605 299.008 12.59 298.945 12.578 298.871 cv
12.574 298.801 12.57 298.707 12.566 298.582 cv
12.57 298.473 12.574 298.375 12.578 298.297 cv
12.59 298.223 12.605 298.164 12.625 298.121 cv
12.652 298.082 12.676 298.055 12.703 298.035 cv
12.734 298.02 12.77 298.012 12.809 298.008 cv
13.734 298.008 li
13.293 297.617 12.973 297.223 12.766 296.828 cv
12.563 296.437 12.457 296.039 12.457 295.637 cv
12.457 295.168 12.539 294.777 12.695 294.457 cv
12.859 294.141 13.07 293.879 13.332 293.68 cv
13.598 293.484 13.906 293.344 14.262 293.258 cv
14.617 293.172 15.047 293.129 15.543 293.129 cv
cp
f
17.91 286.387 mo
18.273 286.391 18.594 286.457 18.871 286.586 cv
19.152 286.719 19.387 286.906 19.578 287.148 cv
19.773 287.395 19.918 287.687 20.016 288.023 cv
20.113 288.363 20.16 288.734 20.164 289.137 cv
20.16 289.391 20.141 289.629 20.105 289.852 cv
20.063 290.078 20.016 290.277 19.957 290.457 cv
19.898 290.637 19.836 290.789 19.77 290.914 cv
19.707 291.039 19.648 291.133 19.594 291.187 cv
19.543 291.246 19.473 291.285 19.375 291.309 cv
19.285 291.336 19.156 291.348 18.996 291.348 cv
18.898 291.348 18.816 291.344 18.746 291.332 cv
18.68 291.324 18.625 291.312 18.582 291.293 cv
18.543 291.281 18.512 291.258 18.492 291.23 cv
18.477 291.203 18.469 291.172 18.465 291.133 cv
18.469 291.078 18.504 290.992 18.57 290.879 cv
18.645 290.77 18.723 290.633 18.801 290.465 cv
18.887 290.305 18.961 290.113 19.031 289.887 cv
19.102 289.668 19.137 289.41 19.137 289.113 cv
19.137 288.898 19.113 288.699 19.066 288.52 cv
19.02 288.344 18.953 288.191 18.859 288.062 cv
18.773 287.934 18.656 287.832 18.512 287.762 cv
18.375 287.691 18.207 287.656 18.012 287.656 cv
17.816 287.656 17.652 287.707 17.516 287.809 cv
17.383 287.91 17.262 288.047 17.156 288.211 cv
17.055 288.379 16.965 288.562 16.879 288.77 cv
16.801 288.98 16.715 289.195 16.625 289.414 cv
16.539 289.633 16.438 289.848 16.324 290.059 cv
16.215 290.27 16.082 290.461 15.918 290.625 cv
15.762 290.797 15.566 290.93 15.34 291.027 cv
15.117 291.133 14.852 291.184 14.539 291.18 cv
14.266 291.184 14 291.129 13.746 291.02 cv
13.496 290.914 13.277 290.754 13.086 290.539 cv
12.898 290.328 12.746 290.062 12.629 289.742 cv
12.516 289.422 12.457 289.051 12.457 288.621 cv
12.457 288.437 12.473 288.25 12.504 288.062 cv
12.535 287.879 12.574 287.711 12.621 287.555 cv
12.668 287.406 12.719 287.277 12.773 287.168 cv
12.828 287.066 12.879 286.984 12.918 286.926 cv
12.965 286.875 13 286.84 13.027 286.816 cv
13.059 286.801 13.094 286.785 13.129 286.777 cv
13.172 286.77 13.219 286.762 13.273 286.754 cv
13.332 286.746 13.402 286.742 13.484 286.742 cv
13.574 286.742 13.652 286.746 13.715 286.754 cv
13.785 286.762 13.836 286.777 13.875 286.793 cv
13.918 286.816 13.949 286.836 13.965 286.859 cv
13.984 286.887 13.992 286.918 13.992 286.945 cv
13.992 286.996 13.965 287.062 13.906 287.148 cv
13.852 287.238 13.789 287.352 13.723 287.492 cv
13.66 287.633 13.602 287.801 13.539 287.988 cv
13.484 288.18 13.453 288.395 13.453 288.637 cv
13.453 288.859 13.48 289.051 13.527 289.215 cv
13.582 289.383 13.652 289.52 13.738 289.625 cv
13.832 289.73 13.938 289.812 14.063 289.863 cv
14.188 289.922 14.324 289.949 14.469 289.945 cv
14.672 289.949 14.84 289.898 14.977 289.793 cv
15.117 289.691 15.238 289.555 15.34 289.387 cv
15.445 289.223 15.539 289.031 15.621 288.816 cv
15.707 288.605 15.793 288.391 15.879 288.168 cv
15.969 287.949 16.07 287.73 16.176 287.512 cv
16.285 287.297 16.414 287.105 16.57 286.937 cv
16.727 286.773 16.914 286.641 17.133 286.539 cv
17.352 286.441 17.613 286.391 17.91 286.387 cv
cp
f
19.82 278.539 mo
19.867 278.543 19.902 278.551 19.926 278.566 cv
19.957 278.586 19.98 278.621 20 278.664 cv
20.02 278.711 20.031 278.77 20.047 278.844 cv
20.055 278.922 20.063 279.016 20.063 279.121 cv
20.063 279.246 20.055 279.344 20.047 279.414 cv
20.031 279.492 20.02 279.551 20 279.594 cv
19.98 279.641 19.957 279.672 19.926 279.684 cv
19.902 279.703 19.867 279.711 19.82 279.707 cv
18.895 279.707 li
19.34 280.109 19.66 280.504 19.859 280.891 cv
20.063 281.285 20.16 281.68 20.164 282.074 cv
20.16 282.547 20.086 282.941 19.93 283.258 cv
19.777 283.578 19.566 283.836 19.297 284.031 cv
19.031 284.234 18.719 284.375 18.359 284.457 cv
18.004 284.547 17.57 284.59 17.063 284.586 cv
12.809 284.586 li
12.77 284.59 12.734 284.582 12.703 284.559 cv
12.676 284.543 12.652 284.508 12.625 284.453 cv
12.605 284.406 12.59 284.336 12.578 284.25 cv
12.574 284.168 12.57 284.066 12.566 283.937 cv
12.57 283.816 12.574 283.711 12.578 283.625 cv
12.59 283.543 12.605 283.477 12.625 283.43 cv
12.652 283.383 12.676 283.348 12.703 283.324 cv
12.734 283.305 12.77 283.297 12.809 283.293 cv
16.891 283.293 li
17.305 283.297 17.633 283.266 17.879 283.203 cv
18.125 283.145 18.336 283.055 18.508 282.93 cv
18.688 282.812 18.82 282.656 18.914 282.465 cv
19.012 282.281 19.063 282.062 19.059 281.812 cv
19.063 281.492 18.945 281.172 18.715 280.848 cv
18.488 280.531 18.152 280.191 17.707 279.832 cv
12.809 279.832 li
12.77 279.832 12.734 279.824 12.703 279.805 cv
12.676 279.789 12.652 279.754 12.625 279.699 cv
12.605 279.648 12.59 279.582 12.578 279.5 cv
12.574 279.422 12.57 279.316 12.566 279.184 cv
12.57 279.062 12.574 278.957 12.578 278.871 cv
12.59 278.789 12.605 278.727 12.625 278.68 cv
12.652 278.637 12.676 278.602 12.703 278.574 cv
12.734 278.555 12.77 278.543 12.809 278.539 cv
cp
f
19.82 265.762 mo
19.867 265.766 19.902 265.773 19.926 265.793 cv
19.957 265.816 19.98 265.852 20 265.895 cv
20.02 265.945 20.031 266.012 20.047 266.09 cv
20.055 266.176 20.063 266.277 20.063 266.402 cv
20.063 266.535 20.055 266.645 20.047 266.723 cv
20.031 266.809 20.02 266.875 20 266.922 cv
19.98 266.977 19.957 267.012 19.926 267.027 cv
19.902 267.051 19.867 267.059 19.82 267.059 cv
15.559 267.059 li
15.266 267.059 14.996 267.086 14.75 267.137 cv
14.508 267.191 14.297 267.273 14.117 267.387 cv
13.941 267.5 13.805 267.645 13.711 267.82 cv
13.617 268 13.57 268.211 13.57 268.445 cv
13.57 268.742 13.688 269.039 13.914 269.336 cv
14.148 269.641 14.48 269.969 14.918 270.324 cv
19.82 270.324 li
19.867 270.328 19.902 270.34 19.926 270.355 cv
19.957 270.379 19.98 270.41 20 270.457 cv
20.02 270.508 20.031 270.574 20.047 270.656 cv
20.055 270.742 20.063 270.848 20.063 270.969 cv
20.063 271.09 20.055 271.191 20.047 271.277 cv
20.031 271.363 20.02 271.434 20 271.48 cv
19.98 271.535 19.957 271.566 19.926 271.582 cv
19.902 271.602 19.867 271.613 19.82 271.609 cv
15.559 271.609 li
15.266 271.613 14.996 271.641 14.75 271.695 cv
14.508 271.754 14.297 271.84 14.117 271.953 cv
13.941 272.066 13.805 272.211 13.711 272.383 cv
13.617 272.562 13.57 272.77 13.57 273.004 cv
13.57 273.305 13.688 273.602 13.914 273.902 cv
14.148 274.203 14.48 274.531 14.918 274.883 cv
19.82 274.883 li
19.867 274.887 19.902 274.898 19.926 274.914 cv
19.957 274.937 19.98 274.969 20 275.016 cv
20.02 275.062 20.031 275.129 20.047 275.207 cv
20.055 275.293 20.063 275.398 20.063 275.527 cv
20.063 275.656 20.055 275.762 20.047 275.84 cv
20.031 275.926 20.02 275.992 20 276.039 cv
19.98 276.094 19.957 276.125 19.926 276.141 cv
19.902 276.16 19.867 276.172 19.82 276.168 cv
12.809 276.168 li
12.77 276.172 12.734 276.164 12.703 276.145 cv
12.676 276.133 12.652 276.102 12.625 276.051 cv
12.605 276.008 12.59 275.945 12.578 275.871 cv
12.574 275.801 12.57 275.707 12.566 275.582 cv
12.57 275.473 12.574 275.375 12.578 275.297 cv
12.59 275.223 12.605 275.164 12.625 275.121 cv
12.652 275.082 12.676 275.055 12.703 275.035 cv
12.734 275.02 12.77 275.012 12.809 275.008 cv
13.734 275.008 li
13.293 274.617 12.973 274.234 12.766 273.859 cv
12.563 273.492 12.457 273.113 12.457 272.73 cv
12.457 272.441 12.492 272.184 12.559 271.949 cv
12.629 271.723 12.723 271.516 12.844 271.336 cv
12.965 271.16 13.109 271.012 13.277 270.883 cv
13.449 270.762 13.641 270.656 13.844 270.57 cv
13.594 270.34 13.379 270.117 13.199 269.906 cv
13.027 269.695 12.883 269.492 12.77 269.297 cv
12.664 269.102 12.586 268.914 12.531 268.73 cv
12.484 268.547 12.457 268.359 12.457 268.172 cv
12.457 267.719 12.539 267.34 12.695 267.035 cv
12.859 266.73 13.07 266.484 13.332 266.289 cv
13.598 266.102 13.906 265.965 14.262 265.883 cv
14.617 265.805 14.992 265.766 15.387 265.762 cv
cp
f
16.203 256.965 mo
16.82 256.969 17.371 257.035 17.859 257.164 cv
18.348 257.301 18.762 257.496 19.102 257.75 cv
19.441 258.008 19.703 258.324 19.887 258.703 cv
20.07 259.082 20.16 259.516 20.164 260.004 cv
20.16 260.215 20.141 260.41 20.102 260.582 cv
20.059 260.762 19.996 260.934 19.906 261.098 cv
19.82 261.27 19.707 261.437 19.57 261.602 cv
19.438 261.773 19.281 261.949 19.098 262.133 cv
22.602 262.133 li
22.641 262.137 22.68 262.148 22.711 262.164 cv
22.742 262.187 22.766 262.219 22.789 262.266 cv
22.805 262.312 22.82 262.379 22.836 262.457 cv
22.844 262.543 22.852 262.648 22.852 262.777 cv
22.852 262.906 22.844 263.012 22.836 263.09 cv
22.82 263.176 22.805 263.242 22.789 263.289 cv
22.766 263.344 22.742 263.375 22.711 263.391 cv
22.68 263.41 22.641 263.422 22.602 263.418 cv
12.809 263.418 li
12.762 263.422 12.727 263.414 12.695 263.395 cv
12.672 263.383 12.645 263.352 12.621 263.301 cv
12.602 263.258 12.59 263.195 12.578 263.121 cv
12.574 263.051 12.57 262.965 12.566 262.855 cv
12.57 262.75 12.574 262.66 12.578 262.586 cv
12.59 262.52 12.602 262.461 12.621 262.41 cv
12.645 262.367 12.672 262.332 12.695 262.312 cv
12.727 262.297 12.762 262.289 12.809 262.285 cv
13.75 262.285 li
13.535 262.078 13.344 261.875 13.184 261.672 cv
13.023 261.477 12.891 261.277 12.781 261.074 cv
12.676 260.879 12.594 260.672 12.539 260.461 cv
12.484 260.25 12.457 260.027 12.457 259.793 cv
12.457 259.285 12.559 258.852 12.754 258.492 cv
12.953 258.133 13.223 257.844 13.563 257.617 cv
13.91 257.395 14.309 257.227 14.762 257.121 cv
15.219 257.02 15.699 256.969 16.203 256.965 cv
cp
16.352 258.297 mo
16 258.301 15.652 258.328 15.313 258.379 cv
14.98 258.437 14.684 258.531 14.422 258.664 cv
14.164 258.801 13.957 258.98 13.797 259.199 cv
13.645 259.426 13.566 259.703 13.563 260.039 cv
13.566 260.207 13.59 260.371 13.637 260.531 cv
13.688 260.695 13.766 260.863 13.871 261.027 cv
13.98 261.199 14.121 261.371 14.293 261.551 cv
14.469 261.734 14.684 261.93 14.934 262.133 cv
17.723 262.133 li
18.16 261.777 18.488 261.441 18.715 261.121 cv
18.945 260.805 19.063 260.469 19.059 260.117 cv
19.063 259.793 18.984 259.516 18.824 259.281 cv
18.672 259.055 18.461 258.867 18.199 258.719 cv
17.941 258.578 17.652 258.469 17.328 258.398 cv
17.008 258.332 16.684 258.301 16.352 258.297 cv
cp
f
19.305 251.469 mo
19.461 251.469 19.578 251.48 19.664 251.5 cv
19.754 251.523 19.82 251.555 19.859 251.594 cv
19.902 251.637 19.941 251.699 19.977 251.781 cv
20.012 251.867 20.039 251.961 20.066 252.066 cv
20.086 252.176 20.105 252.289 20.125 252.406 cv
20.137 252.523 20.145 252.645 20.148 252.762 cv
20.145 253.129 20.098 253.441 20.004 253.699 cv
19.91 253.961 19.766 254.172 19.566 254.336 cv
19.375 254.504 19.129 254.625 18.828 254.699 cv
18.531 254.777 18.18 254.816 17.77 254.812 cv
13.672 254.812 li
13.672 255.793 li
13.676 255.871 13.633 255.934 13.547 255.98 cv
13.465 256.027 13.332 256.051 13.141 256.051 cv
13.047 256.051 12.965 256.047 12.895 256.031 cv
12.832 256.023 12.773 256.004 12.727 255.98 cv
12.684 255.961 12.652 255.934 12.633 255.898 cv
12.617 255.867 12.609 255.832 12.605 255.785 cv
12.605 254.812 li
10.938 254.812 li
10.906 254.816 10.871 254.805 10.836 254.785 cv
10.809 254.77 10.781 254.738 10.754 254.684 cv
10.734 254.637 10.719 254.57 10.703 254.484 cv
10.695 254.406 10.688 254.301 10.688 254.172 cv
10.688 254.043 10.695 253.937 10.703 253.855 cv
10.719 253.773 10.734 253.707 10.754 253.66 cv
10.781 253.613 10.809 253.582 10.836 253.559 cv
10.871 253.543 10.906 253.531 10.938 253.527 cv
12.605 253.527 li
12.605 251.727 li
12.609 251.687 12.617 251.652 12.633 251.617 cv
12.652 251.59 12.684 251.562 12.727 251.535 cv
12.773 251.516 12.832 251.5 12.895 251.484 cv
12.965 251.477 13.047 251.469 13.141 251.469 cv
13.332 251.469 13.465 251.492 13.547 251.539 cv
13.633 251.586 13.676 251.648 13.672 251.727 cv
13.672 253.527 li
17.586 253.527 li
18.07 253.531 18.434 253.461 18.68 253.312 cv
18.93 253.172 19.055 252.914 19.051 252.543 cv
19.055 252.43 19.043 252.324 19.016 252.227 cv
18.996 252.137 18.973 252.055 18.941 251.977 cv
18.918 251.906 18.891 251.844 18.867 251.789 cv
18.844 251.742 18.832 251.695 18.832 251.648 cv
18.832 251.625 18.84 251.598 18.852 251.574 cv
18.867 251.551 18.891 251.535 18.926 251.52 cv
18.965 251.512 19.016 251.5 19.074 251.484 cv
19.141 251.477 19.219 251.469 19.305 251.469 cv
cp
f
19.82 248.453 mo
19.867 248.457 19.902 248.469 19.926 248.484 cv
19.957 248.508 19.98 248.539 20 248.586 cv
20.02 248.633 20.031 248.699 20.047 248.777 cv
20.055 248.863 20.063 248.969 20.063 249.098 cv
20.063 249.227 20.055 249.332 20.047 249.41 cv
20.031 249.496 20.02 249.562 20 249.609 cv
19.98 249.664 19.957 249.695 19.926 249.711 cv
19.902 249.73 19.867 249.742 19.82 249.738 cv
12.809 249.738 li
12.773 249.742 12.742 249.73 12.707 249.711 cv
12.68 249.695 12.652 249.664 12.629 249.609 cv
12.609 249.562 12.594 249.496 12.582 249.41 cv
12.574 249.332 12.57 249.227 12.566 249.098 cv
12.57 248.969 12.574 248.863 12.582 248.777 cv
12.594 248.699 12.609 248.633 12.629 248.586 cv
12.652 248.539 12.68 248.508 12.707 248.484 cv
12.742 248.469 12.773 248.457 12.809 248.453 cv
cp
10.438 248.305 mo
10.742 248.305 10.949 248.363 11.055 248.477 cv
11.168 248.59 11.223 248.801 11.219 249.105 cv
11.223 249.41 11.168 249.617 11.059 249.727 cv
10.953 249.844 10.75 249.898 10.453 249.895 cv
10.152 249.898 9.949 249.84 9.84 249.723 cv
9.734 249.609 9.68 249.398 9.676 249.09 cv
9.68 248.789 9.734 248.586 9.836 248.473 cv
9.945 248.363 10.145 248.305 10.438 248.305 cv
cp
f
16.234 239.512 mo
16.813 239.516 17.34 239.59 17.816 239.738 cv
18.301 239.891 18.715 240.117 19.059 240.414 cv
19.41 240.715 19.68 241.09 19.871 241.535 cv
20.066 241.988 20.16 242.508 20.164 243.098 cv
20.16 243.676 20.078 244.18 19.906 244.605 cv
19.738 245.035 19.488 245.391 19.16 245.676 cv
18.832 245.965 18.438 246.18 17.969 246.316 cv
17.504 246.457 16.973 246.523 16.375 246.523 cv
15.809 246.523 15.281 246.453 14.801 246.305 cv
14.32 246.16 13.906 245.934 13.555 245.633 cv
13.207 245.336 12.938 244.965 12.746 244.516 cv
12.555 244.07 12.457 243.547 12.457 242.949 cv
12.457 242.371 12.543 241.871 12.715 241.441 cv
12.887 241.016 13.137 240.656 13.465 240.371 cv
13.793 240.086 14.191 239.871 14.656 239.727 cv
15.125 239.586 15.652 239.516 16.234 239.512 cv
cp
16.32 240.844 mo
15.945 240.848 15.586 240.883 15.246 240.949 cv
14.91 241.023 14.617 241.141 14.359 241.301 cv
14.109 241.465 13.906 241.684 13.754 241.961 cv
13.609 242.242 13.535 242.59 13.531 243 cv
13.535 243.387 13.602 243.715 13.734 243.988 cv
13.871 244.266 14.063 244.492 14.309 244.668 cv
14.555 244.848 14.848 244.98 15.184 245.062 cv
15.523 245.152 15.891 245.195 16.289 245.191 cv
16.676 245.195 17.039 245.16 17.375 245.086 cv
17.715 245.02 18.008 244.902 18.258 244.734 cv
18.512 244.57 18.715 244.348 18.859 244.07 cv
19.012 243.793 19.086 243.445 19.082 243.031 cv
19.086 242.656 19.016 242.328 18.879 242.047 cv
18.746 241.77 18.559 241.543 18.309 241.363 cv
18.066 241.187 17.773 241.059 17.438 240.973 cv
17.102 240.891 16.73 240.848 16.32 240.844 cv
cp
f
19.82 231.586 mo
19.867 231.586 19.902 231.598 19.926 231.617 cv
19.957 231.641 19.98 231.676 20 231.719 cv
20.02 231.77 20.031 231.832 20.047 231.914 cv
20.055 231.996 20.063 232.102 20.063 232.223 cv
20.063 232.355 20.055 232.461 20.047 232.543 cv
20.031 232.629 20.02 232.695 20 232.738 cv
19.98 232.789 19.957 232.82 19.926 232.84 cv
19.902 232.863 19.867 232.875 19.82 232.871 cv
15.715 232.871 li
15.316 232.875 14.996 232.906 14.75 232.965 cv
14.508 233.031 14.297 233.121 14.117 233.238 cv
13.941 233.355 13.805 233.512 13.711 233.699 cv
13.617 233.895 13.57 234.113 13.57 234.359 cv
13.57 234.684 13.688 235.008 13.914 235.328 cv
14.148 235.652 14.48 235.988 14.918 236.34 cv
19.82 236.34 li
19.867 236.344 19.902 236.355 19.926 236.371 cv
19.957 236.395 19.98 236.426 20 236.473 cv
20.02 236.52 20.031 236.586 20.047 236.664 cv
20.055 236.75 20.063 236.855 20.063 236.984 cv
20.063 237.113 20.055 237.219 20.047 237.297 cv
20.031 237.383 20.02 237.449 20 237.496 cv
19.98 237.551 19.957 237.582 19.926 237.598 cv
19.902 237.617 19.867 237.629 19.82 237.625 cv
12.809 237.625 li
12.77 237.629 12.734 237.621 12.703 237.602 cv
12.676 237.59 12.652 237.559 12.625 237.508 cv
12.605 237.465 12.59 237.402 12.578 237.328 cv
12.574 237.258 12.57 237.164 12.566 237.039 cv
12.57 236.93 12.574 236.832 12.578 236.754 cv
12.59 236.68 12.605 236.621 12.625 236.578 cv
12.652 236.539 12.676 236.512 12.703 236.492 cv
12.734 236.477 12.77 236.469 12.809 236.465 cv
13.734 236.465 li
13.293 236.074 12.973 235.68 12.766 235.285 cv
12.563 234.895 12.457 234.496 12.457 234.094 cv
12.457 233.625 12.539 233.234 12.695 232.914 cv
12.859 232.598 13.07 232.336 13.332 232.137 cv
13.598 231.941 13.906 231.801 14.262 231.715 cv
14.617 231.629 15.047 231.586 15.543 231.586 cv
cp
f
7.906 222.16 mo
9.086 222.719 10.293 223.133 11.531 223.406 cv
12.773 223.68 14.02 223.816 15.27 223.812 cv
16.531 223.816 17.781 223.68 19.016 223.398 cv
20.25 223.125 21.461 222.719 22.652 222.18 cv
22.723 222.156 22.781 222.141 22.832 222.133 cv
22.879 222.133 22.918 222.148 22.953 222.187 cv
22.984 222.23 23.008 222.297 23.023 222.379 cv
23.035 222.465 23.043 222.578 23.047 222.723 cv
23.043 222.832 23.043 222.922 23.039 222.996 cv
23.031 223.074 23.02 223.141 23.004 223.195 cv
22.984 223.25 22.961 223.297 22.941 223.332 cv
22.914 223.367 22.891 223.395 22.863 223.41 cv
22.266 223.73 21.66 224.008 21.047 224.246 cv
20.434 224.488 19.813 224.691 19.18 224.852 cv
18.551 225.02 17.91 225.141 17.262 225.223 cv
16.613 225.305 15.961 225.348 15.297 225.344 cv
14.641 225.348 13.984 225.301 13.336 225.207 cv
12.691 225.117 12.051 224.988 11.414 224.82 cv
10.781 224.656 10.156 224.453 9.539 224.211 cv
8.926 223.973 8.316 223.703 7.711 223.402 cv
7.688 223.398 7.668 223.383 7.652 223.352 cv
7.637 223.328 7.621 223.289 7.598 223.242 cv
7.582 223.195 7.566 223.133 7.559 223.051 cv
7.551 222.969 7.547 222.863 7.543 222.73 cv
7.547 222.602 7.555 222.492 7.57 222.41 cv
7.59 222.328 7.613 222.266 7.641 222.215 cv
7.672 222.172 7.711 222.145 7.754 222.137 cv
7.805 222.133 7.855 222.141 7.906 222.16 cv
cp
f
19.797 213.191 mo
19.844 213.195 19.879 213.203 19.91 213.219 cv
19.945 213.238 19.973 213.273 19.992 213.324 cv
20.012 213.379 20.027 213.449 20.043 213.535 cv
20.055 213.625 20.063 213.738 20.063 213.879 cv
20.063 214.059 20.055 214.207 20.039 214.32 cv
20.023 214.437 19.996 214.523 19.953 214.578 cv
19.914 214.637 19.867 214.684 19.813 214.719 cv
14.77 218.43 li
19.813 218.43 li
19.852 218.434 19.887 218.441 19.918 218.461 cv
19.953 218.484 19.98 218.523 19.996 218.57 cv
20.016 218.625 20.027 218.691 20.043 218.777 cv
20.055 218.863 20.063 218.973 20.063 219.098 cv
20.063 219.227 20.055 219.332 20.043 219.418 cv
20.027 219.508 20.016 219.578 19.996 219.629 cv
19.98 219.684 19.953 219.719 19.918 219.738 cv
19.887 219.762 19.852 219.773 19.813 219.77 cv
10.133 219.77 li
10.094 219.773 10.059 219.762 10.023 219.738 cv
9.996 219.719 9.969 219.684 9.949 219.629 cv
9.934 219.578 9.918 219.508 9.902 219.418 cv
9.891 219.332 9.887 219.227 9.883 219.098 cv
9.887 218.973 9.891 218.863 9.902 218.777 cv
9.918 218.691 9.934 218.625 9.949 218.57 cv
9.969 218.523 9.996 218.484 10.023 218.461 cv
10.059 218.441 10.094 218.434 10.133 218.43 cv
14.613 218.43 li
10.133 214.859 li
10.09 214.832 10.051 214.797 10.016 214.75 cv
9.988 214.711 9.965 214.66 9.941 214.598 cv
9.926 214.543 9.91 214.469 9.898 214.379 cv
9.891 214.297 9.887 214.187 9.883 214.051 cv
9.887 213.918 9.891 213.809 9.902 213.723 cv
9.918 213.641 9.938 213.574 9.953 213.523 cv
9.977 213.477 10 213.441 10.031 213.422 cv
10.063 213.406 10.098 213.398 10.133 213.395 cv
10.203 213.398 10.27 213.414 10.336 213.445 cv
10.406 213.48 10.5 213.547 10.617 213.637 cv
14.613 216.98 li
19.398 213.379 li
19.539 213.293 19.629 213.238 19.676 213.219 cv
19.727 213.203 19.77 213.195 19.797 213.191 cv
cp
f
19.719 202.07 mo
19.793 202.094 19.852 202.125 19.895 202.164 cv
19.941 202.207 19.977 202.266 19.996 202.336 cv
20.02 202.414 20.031 202.504 20.047 202.605 cv
20.055 202.715 20.063 202.844 20.063 202.996 cv
20.063 203.16 20.055 203.297 20.047 203.406 cv
20.031 203.52 20.02 203.613 19.996 203.684 cv
19.977 203.762 19.941 203.816 19.895 203.848 cv
19.852 203.887 19.793 203.914 19.719 203.934 cv
12.105 206.047 li
12.105 206.059 li
19.719 208.008 li
19.793 208.027 19.852 208.051 19.895 208.086 cv
19.941 208.125 19.977 208.18 19.996 208.242 cv
20.02 208.312 20.031 208.398 20.047 208.504 cv
20.055 208.613 20.063 208.75 20.063 208.914 cv
20.063 209.086 20.055 209.227 20.047 209.34 cv
20.031 209.457 20.02 209.551 19.996 209.621 cv
19.977 209.695 19.941 209.754 19.895 209.789 cv
19.852 209.832 19.793 209.859 19.719 209.871 cv
10.406 212.535 li
10.289 212.57 10.195 212.586 10.125 212.586 cv
10.059 212.59 10.008 212.57 9.969 212.523 cv
9.934 212.48 9.91 212.41 9.898 212.312 cv
9.891 212.215 9.887 212.082 9.883 211.914 cv
9.887 211.754 9.891 211.625 9.895 211.531 cv
9.906 211.437 9.918 211.367 9.938 211.316 cv
9.961 211.27 9.992 211.234 10.023 211.215 cv
10.063 211.199 10.109 211.187 10.164 211.172 cv
18.613 208.906 li
18.613 208.898 li
10.18 206.746 li
10.125 206.734 10.078 206.715 10.035 206.687 cv
10 206.668 9.969 206.629 9.945 206.574 cv
9.926 206.523 9.91 206.449 9.898 206.352 cv
9.891 206.258 9.887 206.133 9.883 205.977 cv
9.887 205.832 9.891 205.719 9.898 205.629 cv
9.91 205.547 9.926 205.477 9.945 205.422 cv
9.969 205.371 10 205.332 10.035 205.309 cv
10.078 205.285 10.125 205.266 10.18 205.25 cv
18.613 202.934 li
18.613 202.922 li
10.172 200.699 li
10.121 200.687 10.078 200.672 10.035 200.652 cv
10 200.641 9.969 200.609 9.945 200.555 cv
9.926 200.508 9.91 200.437 9.898 200.344 cv
9.891 200.258 9.887 200.137 9.883 199.98 cv
9.887 199.832 9.891 199.707 9.902 199.613 cv
9.918 199.523 9.945 199.457 9.977 199.414 cv
10.016 199.375 10.066 199.355 10.133 199.355 cv
10.203 199.359 10.297 199.375 10.414 199.398 cv
cp
f
19.82 191.633 mo
19.867 191.633 19.902 191.645 19.926 191.664 cv
19.957 191.687 19.98 191.723 20 191.766 cv
20.02 191.816 20.031 191.879 20.047 191.961 cv
20.055 192.043 20.063 192.148 20.063 192.27 cv
20.063 192.402 20.055 192.508 20.047 192.59 cv
20.031 192.676 20.02 192.742 20 192.785 cv
19.98 192.836 19.957 192.867 19.926 192.887 cv
19.902 192.91 19.867 192.922 19.82 192.918 cv
15.715 192.918 li
15.316 192.922 14.996 192.953 14.75 193.012 cv
14.508 193.078 14.297 193.168 14.117 193.285 cv
13.941 193.402 13.805 193.559 13.711 193.746 cv
13.617 193.941 13.57 194.16 13.57 194.406 cv
13.57 194.73 13.688 195.055 13.914 195.375 cv
14.148 195.699 14.48 196.035 14.918 196.387 cv
19.82 196.387 li
19.867 196.391 19.902 196.402 19.926 196.418 cv
19.957 196.441 19.98 196.473 20 196.52 cv
20.02 196.566 20.031 196.633 20.047 196.711 cv
20.055 196.797 20.063 196.902 20.063 197.031 cv
20.063 197.16 20.055 197.266 20.047 197.344 cv
20.031 197.43 20.02 197.496 20 197.543 cv
19.98 197.598 19.957 197.629 19.926 197.645 cv
19.902 197.664 19.867 197.676 19.82 197.672 cv
9.41 197.672 li
9.371 197.676 9.336 197.664 9.301 197.645 cv
9.273 197.629 9.246 197.598 9.223 197.543 cv
9.203 197.496 9.188 197.43 9.176 197.344 cv
9.168 197.266 9.164 197.16 9.16 197.031 cv
9.164 196.902 9.168 196.797 9.176 196.711 cv
9.188 196.633 9.203 196.566 9.223 196.52 cv
9.246 196.473 9.273 196.441 9.301 196.418 cv
9.336 196.402 9.371 196.391 9.41 196.387 cv
13.609 196.387 li
13.223 196.02 12.934 195.648 12.742 195.273 cv
12.555 194.902 12.457 194.523 12.457 194.141 cv
12.457 193.672 12.539 193.281 12.695 192.961 cv
12.859 192.645 13.07 192.383 13.332 192.184 cv
13.598 191.988 13.906 191.848 14.262 191.762 cv
14.617 191.676 15.047 191.633 15.551 191.633 cv
cp
f
21.895 189.176 mo
21.961 189.199 22.016 189.227 22.055 189.258 cv
22.094 189.297 22.121 189.34 22.145 189.387 cv
22.16 189.441 22.176 189.504 22.191 189.578 cv
22.199 189.656 22.207 189.746 22.207 189.852 cv
22.207 189.984 22.195 190.094 22.18 190.176 cv
22.156 190.266 22.133 190.332 22.102 190.375 cv
22.066 190.426 22.023 190.453 21.977 190.461 cv
21.926 190.473 21.867 190.465 21.801 190.43 cv
8.871 185.715 li
8.805 185.695 8.754 185.668 8.711 185.633 cv
8.676 185.602 8.645 185.562 8.617 185.508 cv
8.598 185.461 8.582 185.395 8.57 185.316 cv
8.566 185.238 8.563 185.145 8.559 185.035 cv
8.563 184.91 8.57 184.805 8.586 184.719 cv
8.605 184.637 8.629 184.574 8.66 184.523 cv
8.691 184.48 8.734 184.449 8.785 184.437 cv
8.84 184.43 8.898 184.437 8.965 184.461 cv
cp
f
19.484 177.164 mo
19.586 177.168 19.668 177.176 19.734 177.187 cv
19.805 177.207 19.859 177.227 19.898 177.25 cv
19.941 177.277 19.973 177.309 19.988 177.34 cv
20.008 177.375 20.016 177.41 20.016 177.441 cv
20.016 182.711 li
20.016 182.75 20.008 182.785 19.988 182.812 cv
19.973 182.848 19.941 182.879 19.898 182.902 cv
19.859 182.934 19.805 182.953 19.734 182.969 cv
19.668 182.984 19.586 182.992 19.484 182.992 cv
19.395 182.992 19.316 182.984 19.246 182.969 cv
19.184 182.953 19.125 182.934 19.078 182.91 cv
19.035 182.887 19.004 182.859 18.977 182.824 cv
18.957 182.793 18.945 182.754 18.941 182.711 cv
18.941 180.605 li
11.273 180.605 li
12.434 182.555 li
12.488 182.656 12.52 182.734 12.527 182.793 cv
12.539 182.855 12.527 182.906 12.492 182.937 cv
12.461 182.977 12.406 183 12.324 183.012 cv
12.25 183.027 12.152 183.035 12.027 183.031 cv
11.941 183.035 11.863 183.031 11.801 183.02 cv
11.738 183.016 11.688 183.004 11.645 182.984 cv
11.605 182.973 11.57 182.949 11.535 182.918 cv
11.508 182.891 11.477 182.852 11.445 182.805 cv
9.953 180.484 li
9.941 180.465 9.926 180.441 9.914 180.406 cv
9.906 180.379 9.898 180.34 9.887 180.289 cv
9.879 180.246 9.871 180.191 9.867 180.125 cv
9.867 180.066 9.867 179.988 9.863 179.891 cv
9.867 179.77 9.871 179.664 9.879 179.578 cv
9.887 179.496 9.902 179.43 9.918 179.383 cv
9.941 179.336 9.965 179.305 9.988 179.289 cv
10.02 179.273 10.047 179.266 10.078 179.266 cv
18.941 179.266 li
18.941 177.441 li
18.945 177.402 18.957 177.363 18.977 177.328 cv
19.004 177.293 19.035 177.262 19.078 177.238 cv
19.125 177.215 19.184 177.199 19.246 177.184 cv
19.316 177.176 19.395 177.168 19.484 177.164 cv
cp
f
14.949 168.809 mo
15.727 168.809 16.434 168.871 17.07 168.992 cv
17.711 169.117 18.262 169.32 18.719 169.602 cv
19.18 169.887 19.535 170.258 19.785 170.711 cv
20.039 171.172 20.16 171.734 20.164 172.402 cv
20.16 173.039 20.051 173.574 19.824 174.004 cv
19.602 174.441 19.27 174.789 18.828 175.051 cv
18.391 175.32 17.852 175.508 17.207 175.617 cv
16.566 175.727 15.828 175.781 14.996 175.781 cv
14.23 175.781 13.527 175.723 12.883 175.598 cv
12.242 175.477 11.691 175.273 11.23 174.988 cv
10.773 174.711 10.418 174.34 10.164 173.883 cv
9.914 173.426 9.785 172.867 9.785 172.199 cv
9.785 171.562 9.898 171.023 10.125 170.59 cv
10.352 170.156 10.684 169.809 11.121 169.543 cv
11.559 169.281 12.102 169.094 12.742 168.977 cv
13.387 168.867 14.121 168.809 14.949 168.809 cv
cp
15.043 170.18 mo
14.543 170.18 14.09 170.199 13.688 170.234 cv
13.289 170.273 12.938 170.328 12.629 170.395 cv
12.324 170.469 12.059 170.559 11.836 170.668 cv
11.617 170.781 11.438 170.914 11.293 171.07 cv
11.152 171.227 11.047 171.406 10.98 171.602 cv
10.918 171.805 10.887 172.027 10.883 172.277 cv
10.887 172.719 10.992 173.078 11.195 173.352 cv
11.406 173.629 11.691 173.848 12.051 174.004 cv
12.418 174.164 12.844 174.27 13.332 174.324 cv
13.82 174.383 14.344 174.41 14.902 174.41 cv
15.66 174.41 16.301 174.371 16.828 174.293 cv
17.355 174.215 17.785 174.094 18.117 173.926 cv
18.449 173.758 18.691 173.543 18.84 173.277 cv
18.992 173.02 19.066 172.699 19.066 172.324 cv
19.066 172.035 19.02 171.781 18.926 171.555 cv
18.832 171.336 18.699 171.145 18.523 170.988 cv
18.352 170.832 18.145 170.703 17.898 170.594 cv
17.656 170.492 17.383 170.406 17.086 170.344 cv
16.789 170.281 16.469 170.238 16.125 170.215 cv
15.781 170.191 15.422 170.18 15.043 170.18 cv
cp
f
12.582 165.398 mo
12.723 165.402 12.816 165.418 12.863 165.445 cv
12.918 165.48 12.941 165.527 12.941 165.582 cv
12.941 167.762 li
12.941 167.828 12.918 167.875 12.863 167.902 cv
12.813 167.937 12.719 167.953 12.582 167.949 cv
12.453 167.953 12.359 167.937 12.305 167.902 cv
12.254 167.875 12.227 167.828 12.227 167.762 cv
12.227 165.582 li
12.227 165.559 12.234 165.531 12.242 165.508 cv
12.258 165.484 12.277 165.465 12.305 165.449 cv
12.336 165.434 12.371 165.422 12.414 165.414 cv
12.461 165.406 12.52 165.402 12.582 165.398 cv
cp
f
13.285 160.305 mo
13.598 160.309 13.875 160.363 14.125 160.469 cv
14.375 160.578 14.59 160.73 14.762 160.93 cv
14.941 161.133 15.078 161.383 15.172 161.676 cv
15.266 161.973 15.309 162.305 15.313 162.676 cv
15.309 162.906 15.289 163.117 15.258 163.312 cv
15.219 163.508 15.18 163.684 15.129 163.836 cv
15.082 163.988 15.031 164.113 14.973 164.215 cv
14.922 164.316 14.883 164.383 14.855 164.406 cv
14.836 164.437 14.813 164.457 14.785 164.465 cv
14.762 164.48 14.73 164.492 14.695 164.5 cv
14.66 164.516 14.617 164.523 14.566 164.523 cv
14.516 164.531 14.453 164.531 14.379 164.531 cv
14.258 164.531 14.172 164.52 14.121 164.496 cv
14.074 164.473 14.051 164.437 14.047 164.391 cv
14.051 164.359 14.078 164.297 14.133 164.199 cv
14.191 164.109 14.25 163.988 14.313 163.836 cv
14.375 163.691 14.438 163.52 14.492 163.316 cv
14.551 163.121 14.578 162.898 14.574 162.656 cv
14.578 162.422 14.547 162.215 14.484 162.035 cv
14.426 161.855 14.344 161.707 14.234 161.586 cv
14.133 161.465 14.004 161.375 13.852 161.312 cv
13.707 161.258 13.547 161.227 13.367 161.223 cv
13.18 161.227 13.008 161.266 12.855 161.34 cv
12.703 161.418 12.57 161.531 12.457 161.676 cv
12.348 161.828 12.262 162.012 12.203 162.227 cv
12.145 162.445 12.117 162.691 12.113 162.965 cv
12.113 163.629 li
12.117 163.66 12.109 163.691 12.094 163.715 cv
12.082 163.746 12.063 163.77 12.035 163.785 cv
12.008 163.809 11.973 163.824 11.926 163.832 cv
11.883 163.848 11.82 163.852 11.746 163.852 cv
11.684 163.852 11.629 163.848 11.582 163.836 cv
11.539 163.828 11.504 163.812 11.477 163.793 cv
11.453 163.773 11.438 163.754 11.422 163.727 cv
11.414 163.703 11.406 163.672 11.402 163.641 cv
11.402 163.051 li
11.406 162.824 11.379 162.617 11.316 162.434 cv
11.262 162.254 11.176 162.102 11.059 161.973 cv
10.949 161.848 10.816 161.75 10.66 161.68 cv
10.508 161.613 10.332 161.578 10.141 161.578 cv
10.004 161.578 9.871 161.602 9.742 161.645 cv
9.617 161.691 9.508 161.758 9.41 161.848 cv
9.32 161.941 9.246 162.059 9.191 162.195 cv
9.137 162.34 9.109 162.504 9.109 162.684 cv
9.109 162.887 9.141 163.07 9.199 163.238 cv
9.262 163.406 9.328 163.555 9.395 163.687 cv
9.469 163.82 9.535 163.934 9.594 164.02 cv
9.656 164.109 9.684 164.168 9.684 164.199 cv
9.684 164.227 9.68 164.25 9.672 164.266 cv
9.664 164.289 9.648 164.305 9.617 164.312 cv
9.594 164.328 9.555 164.336 9.508 164.336 cv
9.461 164.344 9.398 164.344 9.32 164.344 cv
9.27 164.344 9.227 164.344 9.184 164.34 cv
9.148 164.34 9.113 164.332 9.082 164.32 cv
9.055 164.312 9.027 164.301 9 164.285 cv
8.977 164.27 8.949 164.246 8.914 164.215 cv
8.883 164.184 8.832 164.117 8.77 164.012 cv
8.707 163.914 8.648 163.789 8.586 163.641 cv
8.527 163.492 8.473 163.324 8.43 163.129 cv
8.391 162.941 8.371 162.73 8.367 162.504 cv
8.371 162.191 8.41 161.918 8.488 161.68 cv
8.57 161.445 8.684 161.25 8.828 161.09 cv
8.977 160.934 9.152 160.812 9.352 160.734 cv
9.559 160.656 9.785 160.617 10.027 160.617 cv
10.242 160.617 10.438 160.648 10.617 160.703 cv
10.801 160.762 10.961 160.84 11.102 160.945 cv
11.242 161.055 11.363 161.187 11.465 161.344 cv
11.566 161.5 11.637 161.68 11.668 161.883 cv
11.68 161.883 li
11.707 161.652 11.766 161.441 11.855 161.246 cv
11.949 161.055 12.063 160.891 12.203 160.75 cv
12.344 160.613 12.508 160.504 12.691 160.422 cv
12.879 160.348 13.078 160.309 13.285 160.305 cv
cp
f
15.297 155.391 mo
15.961 155.395 16.613 155.437 17.262 155.516 cv
17.91 155.602 18.551 155.723 19.18 155.883 cv
19.813 156.051 20.434 156.254 21.047 156.488 cv
21.66 156.73 22.266 157.004 22.863 157.316 cv
22.891 157.336 22.914 157.363 22.941 157.398 cv
22.961 157.434 22.984 157.48 23.004 157.535 cv
23.02 157.594 23.031 157.66 23.039 157.73 cv
23.043 157.809 23.043 157.898 23.047 158 cv
23.043 158.156 23.035 158.273 23.023 158.359 cv
23.008 158.445 22.984 158.508 22.953 158.543 cv
22.918 158.586 22.879 158.605 22.832 158.598 cv
22.781 158.598 22.723 158.578 22.652 158.547 cv
21.465 158.008 20.254 157.602 19.02 157.328 cv
17.781 157.055 16.531 156.918 15.27 156.914 cv
14.02 156.918 12.773 157.055 11.531 157.328 cv
10.293 157.602 9.086 158.016 7.906 158.562 cv
7.855 158.594 7.805 158.602 7.754 158.594 cv
7.711 158.586 7.672 158.559 7.641 158.512 cv
7.613 158.465 7.59 158.402 7.57 158.32 cv
7.555 158.238 7.547 158.129 7.543 157.992 cv
7.547 157.871 7.551 157.77 7.559 157.687 cv
7.566 157.605 7.582 157.539 7.598 157.488 cv
7.621 157.441 7.637 157.406 7.652 157.379 cv
7.668 157.359 7.688 157.34 7.711 157.324 cv
8.914 156.727 10.152 156.254 11.418 155.906 cv
12.691 155.566 13.984 155.395 15.297 155.391 cv
cp
f
288.422 544.004 mo
288.418 544.109 288.402 544.199 288.367 544.27 cv
288.332 544.348 288.285 544.406 288.23 544.449 cv
288.172 544.5 288.109 544.535 288.043 544.551 cv
287.969 544.574 287.898 544.582 287.836 544.582 cv
287.391 544.582 li
287.25 544.582 287.129 544.57 287.023 544.539 cv
286.918 544.516 286.82 544.461 286.727 544.383 cv
286.633 544.309 286.539 544.207 286.445 544.074 cv
286.352 543.945 286.25 543.781 286.145 543.578 cv
283.07 537.84 li
282.906 537.547 282.742 537.238 282.582 536.91 cv
282.414 536.59 282.262 536.273 282.125 535.965 cv
282.109 535.965 li
282.117 536.34 282.125 536.723 282.133 537.109 cv
282.137 537.5 282.137 537.887 282.141 538.27 cv
282.141 544.355 li
282.137 544.395 282.125 544.43 282.105 544.461 cv
282.082 544.496 282.047 544.523 281.996 544.539 cv
281.941 544.559 281.871 544.57 281.789 544.586 cv
281.703 544.598 281.598 544.605 281.469 544.605 cv
281.332 544.605 281.223 544.598 281.141 544.586 cv
281.055 544.57 280.988 544.559 280.941 544.539 cv
280.891 544.523 280.855 544.496 280.832 544.461 cv
280.809 544.43 280.797 544.395 280.801 544.355 cv
280.801 535.051 li
280.797 534.844 280.855 534.695 280.977 534.605 cv
281.094 534.52 281.223 534.477 281.363 534.473 cv
282.023 534.473 li
282.176 534.477 282.309 534.488 282.414 534.512 cv
282.516 534.539 282.609 534.582 282.695 534.641 cv
282.777 534.703 282.855 534.785 282.938 534.891 cv
283.012 535 283.094 535.137 283.18 535.293 cv
285.547 539.719 li
285.691 539.992 285.832 540.258 285.969 540.512 cv
286.102 540.77 286.23 541.023 286.359 541.27 cv
286.48 541.523 286.605 541.77 286.73 542.008 cv
286.852 542.25 286.973 542.492 287.098 542.734 cv
287.105 542.734 li
287.094 542.328 287.086 541.898 287.086 541.453 cv
287.078 541.008 287.078 540.582 287.082 540.172 cv
287.082 534.699 li
287.078 534.664 287.09 534.629 287.113 534.598 cv
287.137 534.566 287.172 534.539 287.227 534.516 cv
287.273 534.492 287.344 534.477 287.43 534.465 cv
287.516 534.457 287.625 534.453 287.766 534.449 cv
287.883 534.453 287.988 534.457 288.078 534.465 cv
288.164 534.477 288.23 534.492 288.281 534.516 cv
288.328 534.539 288.363 534.566 288.387 534.598 cv
288.406 534.629 288.418 534.664 288.422 534.699 cv
cp
f
296.969 544.363 mo
296.965 544.41 296.957 544.445 296.941 544.469 cv
296.922 544.5 296.887 544.523 296.844 544.543 cv
296.797 544.562 296.738 544.574 296.664 544.59 cv
296.586 544.598 296.492 544.605 296.387 544.605 cv
296.262 544.605 296.164 544.598 296.094 544.59 cv
296.016 544.574 295.957 544.562 295.914 544.543 cv
295.867 544.523 295.836 544.5 295.824 544.469 cv
295.805 544.445 295.797 544.41 295.801 544.363 cv
295.801 543.437 li
295.398 543.883 295.004 544.203 294.617 544.402 cv
294.223 544.605 293.828 544.703 293.434 544.707 cv
292.961 544.703 292.566 544.629 292.25 544.473 cv
291.93 544.32 291.672 544.109 291.477 543.84 cv
291.273 543.574 291.133 543.262 291.051 542.902 cv
290.961 542.547 290.918 542.113 290.922 541.605 cv
290.922 537.352 li
290.918 537.312 290.926 537.277 290.949 537.246 cv
290.965 537.219 291 537.195 291.055 537.168 cv
291.102 537.148 291.172 537.133 291.258 537.121 cv
291.34 537.117 291.441 537.113 291.57 537.109 cv
291.691 537.113 291.797 537.117 291.883 537.121 cv
291.965 537.133 292.031 537.148 292.078 537.168 cv
292.125 537.195 292.16 537.219 292.184 537.246 cv
292.203 537.277 292.211 537.312 292.215 537.352 cv
292.215 541.434 li
292.211 541.848 292.242 542.176 292.305 542.422 cv
292.363 542.668 292.453 542.879 292.578 543.051 cv
292.695 543.23 292.852 543.363 293.043 543.457 cv
293.227 543.555 293.445 543.605 293.695 543.602 cv
294.016 543.605 294.336 543.488 294.66 543.258 cv
294.977 543.031 295.316 542.695 295.676 542.25 cv
295.676 537.352 li
295.676 537.312 295.684 537.277 295.703 537.246 cv
295.719 537.219 295.754 537.195 295.809 537.168 cv
295.859 537.148 295.926 537.133 296.008 537.121 cv
296.086 537.117 296.191 537.113 296.324 537.109 cv
296.445 537.113 296.551 537.117 296.637 537.121 cv
296.719 537.133 296.781 537.148 296.828 537.168 cv
296.871 537.195 296.906 537.219 296.934 537.246 cv
296.953 537.277 296.965 537.312 296.969 537.352 cv
cp
f
309.746 544.363 mo
309.742 544.41 309.734 544.445 309.715 544.469 cv
309.691 544.5 309.656 544.523 309.613 544.543 cv
309.563 544.562 309.496 544.574 309.418 544.59 cv
309.332 544.598 309.23 544.605 309.105 544.605 cv
308.973 544.605 308.863 544.598 308.785 544.59 cv
308.699 544.574 308.633 544.562 308.586 544.543 cv
308.531 544.523 308.496 544.5 308.48 544.469 cv
308.457 544.445 308.449 544.41 308.449 544.363 cv
308.449 540.102 li
308.449 539.809 308.422 539.539 308.371 539.293 cv
308.316 539.051 308.234 538.84 308.121 538.66 cv
308.008 538.484 307.863 538.348 307.688 538.254 cv
307.508 538.16 307.297 538.113 307.063 538.113 cv
306.766 538.113 306.469 538.23 306.172 538.457 cv
305.867 538.691 305.539 539.023 305.184 539.461 cv
305.184 544.363 li
305.18 544.41 305.168 544.445 305.152 544.469 cv
305.129 544.5 305.098 544.523 305.051 544.543 cv
305 544.562 304.934 544.574 304.852 544.59 cv
304.766 544.598 304.66 544.605 304.539 544.605 cv
304.418 544.605 304.316 544.598 304.23 544.59 cv
304.145 544.574 304.074 544.562 304.027 544.543 cv
303.973 544.523 303.941 544.5 303.926 544.469 cv
303.906 544.445 303.895 544.41 303.898 544.363 cv
303.898 540.102 li
303.895 539.809 303.867 539.539 303.813 539.293 cv
303.754 539.051 303.668 538.84 303.555 538.66 cv
303.441 538.484 303.297 538.348 303.125 538.254 cv
302.945 538.16 302.738 538.113 302.504 538.113 cv
302.203 538.113 301.906 538.23 301.605 538.457 cv
301.305 538.691 300.977 539.023 300.625 539.461 cv
300.625 544.363 li
300.621 544.41 300.609 544.445 300.594 544.469 cv
300.57 544.5 300.539 544.523 300.492 544.543 cv
300.445 544.562 300.379 544.574 300.301 544.59 cv
300.215 544.598 300.109 544.605 299.98 544.605 cv
299.852 544.605 299.746 544.598 299.668 544.59 cv
299.582 544.574 299.516 544.562 299.469 544.543 cv
299.414 544.523 299.383 544.5 299.367 544.469 cv
299.348 544.445 299.336 544.41 299.34 544.363 cv
299.34 537.352 li
299.336 537.312 299.344 537.277 299.363 537.246 cv
299.375 537.219 299.406 537.195 299.457 537.168 cv
299.5 537.148 299.563 537.133 299.637 537.121 cv
299.707 537.117 299.801 537.113 299.926 537.109 cv
300.035 537.113 300.133 537.117 300.211 537.121 cv
300.285 537.133 300.344 537.148 300.387 537.168 cv
300.426 537.195 300.453 537.219 300.473 537.246 cv
300.488 537.277 300.496 537.312 300.5 537.352 cv
300.5 538.277 li
300.891 537.836 301.273 537.516 301.648 537.309 cv
302.016 537.105 302.395 537 302.777 537 cv
303.066 537 303.324 537.035 303.559 537.102 cv
303.785 537.172 303.992 537.266 304.172 537.387 cv
304.348 537.508 304.496 537.652 304.625 537.82 cv
304.746 537.992 304.852 538.184 304.938 538.387 cv
305.168 538.137 305.391 537.922 305.602 537.742 cv
305.813 537.57 306.016 537.426 306.211 537.312 cv
306.406 537.207 306.594 537.129 306.777 537.074 cv
306.961 537.027 307.148 537 307.336 537 cv
307.789 537 308.168 537.082 308.473 537.238 cv
308.777 537.402 309.023 537.613 309.219 537.875 cv
309.406 538.141 309.543 538.449 309.625 538.805 cv
309.703 539.16 309.742 539.535 309.746 539.93 cv
cp
f
318.547 540.762 mo
318.543 541.371 318.477 541.922 318.348 542.406 cv
318.211 542.895 318.016 543.309 317.762 543.648 cv
317.504 543.992 317.188 544.254 316.816 544.434 cv
316.441 544.617 316.016 544.703 315.531 544.707 cv
315.305 544.703 315.098 544.684 314.91 544.641 cv
314.723 544.594 314.535 544.523 314.355 544.426 cv
314.168 544.328 313.988 544.203 313.809 544.051 cv
313.625 543.902 313.434 543.723 313.234 543.508 cv
313.234 544.363 li
313.234 544.41 313.223 544.445 313.203 544.473 cv
313.18 544.508 313.145 544.531 313.102 544.547 cv
313.051 544.562 312.992 544.574 312.926 544.59 cv
312.852 544.598 312.762 544.605 312.656 544.605 cv
312.547 544.605 312.461 544.598 312.391 544.59 cv
312.316 544.574 312.254 544.562 312.211 544.547 cv
312.16 544.531 312.129 544.508 312.117 544.473 cv
312.098 544.445 312.09 544.41 312.094 544.363 cv
312.094 533.953 li
312.09 533.914 312.102 533.879 312.121 533.844 cv
312.137 533.816 312.168 533.789 312.223 533.766 cv
312.27 533.746 312.336 533.73 312.422 533.719 cv
312.5 533.711 312.605 533.707 312.734 533.703 cv
312.863 533.707 312.969 533.711 313.055 533.719 cv
313.133 533.73 313.199 533.746 313.246 533.766 cv
313.293 533.789 313.324 533.816 313.348 533.844 cv
313.363 533.879 313.375 533.914 313.379 533.953 cv
313.379 538.152 li
313.586 537.941 313.789 537.762 313.984 537.617 cv
314.18 537.473 314.367 537.355 314.555 537.262 cv
314.738 537.176 314.926 537.109 315.117 537.062 cv
315.301 537.023 315.5 537 315.711 537 cv
316.215 537 316.648 537.102 317.016 537.305 cv
317.375 537.508 317.668 537.781 317.895 538.117 cv
318.117 538.461 318.285 538.859 318.391 539.316 cv
318.492 539.773 318.543 540.254 318.547 540.762 cv
cp
317.215 540.91 mo
317.211 540.555 317.184 540.207 317.133 539.867 cv
317.074 539.531 316.98 539.234 316.844 538.973 cv
316.707 538.715 316.527 538.504 316.305 538.344 cv
316.078 538.187 315.797 538.109 315.465 538.105 cv
315.297 538.109 315.133 538.133 314.973 538.176 cv
314.809 538.227 314.645 538.305 314.477 538.41 cv
314.309 538.523 314.133 538.664 313.957 538.832 cv
313.773 539.008 313.582 539.223 313.379 539.477 cv
313.379 542.273 li
313.734 542.707 314.074 543.039 314.398 543.262 cv
314.723 543.492 315.059 543.605 315.41 543.602 cv
315.73 543.605 316.008 543.527 316.242 543.367 cv
316.469 543.215 316.656 543.008 316.801 542.746 cv
316.945 542.492 317.051 542.203 317.117 541.883 cv
317.18 541.566 317.211 541.242 317.215 540.91 cv
cp
f
326.457 540.555 mo
326.453 540.758 326.402 540.898 326.305 540.984 cv
326.199 541.07 326.082 541.113 325.957 541.113 cv
321.34 541.113 li
321.336 541.504 321.375 541.855 321.457 542.168 cv
321.531 542.48 321.664 542.75 321.848 542.969 cv
322.027 543.195 322.262 543.367 322.559 543.484 cv
322.848 543.609 323.207 543.668 323.633 543.664 cv
323.965 543.668 324.262 543.641 324.523 543.582 cv
324.785 543.531 325.012 543.469 325.203 543.398 cv
325.391 543.332 325.547 543.273 325.672 543.215 cv
325.793 543.164 325.887 543.137 325.949 543.133 cv
325.984 543.137 326.016 543.145 326.047 543.16 cv
326.074 543.18 326.098 543.207 326.117 543.242 cv
326.129 543.281 326.141 543.332 326.152 543.395 cv
326.156 543.461 326.16 543.539 326.164 543.633 cv
326.16 543.703 326.156 543.762 326.156 543.809 cv
326.148 543.855 326.145 543.898 326.137 543.937 cv
326.129 543.977 326.113 544.012 326.098 544.043 cv
326.074 544.074 326.051 544.105 326.027 544.133 cv
325.996 544.164 325.914 544.211 325.773 544.273 cv
325.633 544.34 325.449 544.402 325.227 544.465 cv
325 544.527 324.742 544.582 324.449 544.633 cv
324.156 544.68 323.844 544.703 323.512 544.707 cv
322.934 544.703 322.426 544.625 321.996 544.465 cv
321.559 544.305 321.195 544.066 320.902 543.75 cv
320.602 543.434 320.379 543.039 320.23 542.559 cv
320.082 542.082 320.008 541.523 320.008 540.887 cv
320.008 540.289 320.082 539.75 320.238 539.266 cv
320.391 538.789 320.617 538.379 320.914 538.043 cv
321.207 537.707 321.563 537.449 321.977 537.27 cv
322.391 537.09 322.855 537 323.371 537 cv
323.922 537 324.391 537.09 324.777 537.266 cv
325.164 537.445 325.48 537.684 325.734 537.98 cv
325.98 538.281 326.164 538.633 326.281 539.031 cv
326.395 539.437 326.453 539.867 326.457 540.32 cv
cp
325.164 540.172 mo
325.18 539.496 325.027 538.965 324.711 538.582 cv
324.395 538.199 323.926 538.008 323.309 538.004 cv
322.984 538.008 322.703 538.066 322.465 538.184 cv
322.223 538.305 322.023 538.465 321.863 538.66 cv
321.699 538.859 321.574 539.09 321.488 539.352 cv
321.398 539.613 321.348 539.887 321.34 540.172 cv
cp
f
332.52 537.809 mo
332.516 537.926 332.516 538.023 332.512 538.098 cv
332.504 538.18 332.492 538.242 332.48 538.281 cv
332.461 538.328 332.441 538.359 332.422 538.383 cv
332.395 538.406 332.363 538.418 332.324 538.418 cv
332.281 538.418 332.23 538.406 332.172 538.383 cv
332.109 538.359 332.039 538.336 331.969 538.312 cv
331.891 538.289 331.809 538.27 331.715 538.246 cv
331.621 538.23 331.52 538.219 331.41 538.215 cv
331.277 538.219 331.148 538.246 331.027 538.293 cv
330.902 538.348 330.773 538.434 330.637 538.551 cv
330.496 538.676 330.352 538.832 330.203 539.027 cv
330.051 539.223 329.883 539.465 329.703 539.75 cv
329.703 544.363 li
329.699 544.41 329.688 544.445 329.672 544.469 cv
329.648 544.5 329.617 544.523 329.57 544.543 cv
329.523 544.562 329.457 544.574 329.379 544.59 cv
329.293 544.598 329.188 544.605 329.059 544.605 cv
328.93 544.605 328.824 544.598 328.746 544.59 cv
328.66 544.574 328.594 544.562 328.547 544.543 cv
328.492 544.523 328.461 544.5 328.445 544.469 cv
328.426 544.445 328.414 544.41 328.418 544.363 cv
328.418 537.352 li
328.414 537.312 328.422 537.277 328.441 537.246 cv
328.453 537.219 328.484 537.195 328.535 537.168 cv
328.578 537.148 328.641 537.133 328.715 537.121 cv
328.785 537.117 328.879 537.113 329.004 537.109 cv
329.113 537.113 329.211 537.117 329.289 537.121 cv
329.363 537.133 329.422 537.148 329.465 537.168 cv
329.504 537.195 329.531 537.219 329.551 537.246 cv
329.566 537.277 329.574 537.312 329.578 537.352 cv
329.578 538.371 li
329.766 538.09 329.949 537.863 330.121 537.687 cv
330.289 537.512 330.449 537.371 330.602 537.27 cv
330.75 537.168 330.898 537.098 331.047 537.059 cv
331.195 537.02 331.344 537 331.496 537 cv
331.563 537 331.641 537.004 331.727 537.012 cv
331.813 537.02 331.902 537.035 331.996 537.055 cv
332.09 537.078 332.172 537.102 332.25 537.125 cv
332.32 537.152 332.375 537.18 332.41 537.203 cv
332.438 537.234 332.457 537.258 332.473 537.277 cv
332.48 537.305 332.492 537.336 332.5 537.367 cv
332.508 537.406 332.512 537.457 332.516 537.527 cv
332.516 537.598 332.516 537.691 332.52 537.809 cv
cp
f
344.281 540.777 mo
344.277 541.355 344.203 541.883 344.055 542.359 cv
343.902 542.844 343.676 543.258 343.379 543.602 cv
343.078 543.953 342.703 544.223 342.258 544.414 cv
341.805 544.609 341.285 544.703 340.695 544.707 cv
340.117 544.703 339.613 544.621 339.188 544.449 cv
338.758 544.281 338.402 544.031 338.117 543.703 cv
337.828 543.375 337.613 542.98 337.477 542.512 cv
337.336 542.047 337.27 541.516 337.27 540.918 cv
337.27 540.352 337.34 539.824 337.488 539.344 cv
337.633 538.863 337.859 538.449 338.16 538.098 cv
338.457 537.75 338.828 537.48 339.277 537.289 cv
339.723 537.098 340.246 537 340.844 537 cv
341.422 537 341.922 537.086 342.352 537.258 cv
342.777 537.43 343.137 537.68 343.422 538.008 cv
343.707 538.336 343.922 538.734 344.066 539.199 cv
344.207 539.668 344.277 540.195 344.281 540.777 cv
cp
342.949 540.863 mo
342.945 540.488 342.91 540.129 342.844 539.789 cv
342.77 539.453 342.652 539.16 342.492 538.902 cv
342.328 538.652 342.109 538.449 341.832 538.297 cv
341.551 538.152 341.203 538.078 340.793 538.074 cv
340.406 538.078 340.078 538.145 339.805 538.277 cv
339.527 538.414 339.301 538.605 339.125 538.852 cv
338.945 539.098 338.813 539.391 338.73 539.727 cv
338.641 540.066 338.598 540.434 338.602 540.832 cv
338.598 541.219 338.633 541.582 338.707 541.918 cv
338.773 542.258 338.891 542.551 339.059 542.801 cv
339.223 543.055 339.445 543.258 339.723 543.402 cv
340 543.555 340.348 543.629 340.762 543.625 cv
341.137 543.629 341.465 543.559 341.746 543.422 cv
342.023 543.289 342.25 543.102 342.43 542.852 cv
342.605 542.609 342.734 542.316 342.82 541.98 cv
342.902 541.645 342.945 541.273 342.949 540.863 cv
cp
f
350.012 534.465 mo
350.008 534.566 350.004 534.645 349.996 534.703 cv
349.984 534.766 349.973 534.816 349.961 534.848 cv
349.945 534.887 349.93 534.91 349.91 534.922 cv
349.887 534.937 349.859 534.945 349.832 534.941 cv
349.793 534.945 349.746 534.934 349.695 534.906 cv
349.637 534.887 349.57 534.859 349.496 534.828 cv
349.414 534.801 349.324 534.773 349.219 534.75 cv
349.109 534.727 348.984 534.715 348.852 534.715 cv
348.656 534.715 348.492 534.746 348.359 534.809 cv
348.219 534.871 348.109 534.969 348.031 535.102 cv
347.945 535.234 347.887 535.406 347.852 535.617 cv
347.813 535.828 347.793 536.086 347.797 536.383 cv
347.797 537.148 li
349.363 537.148 li
349.402 537.152 349.438 537.16 349.469 537.176 cv
349.496 537.195 349.523 537.227 349.547 537.27 cv
349.57 537.316 349.586 537.375 349.602 537.437 cv
349.609 537.508 349.617 537.59 349.621 537.684 cv
349.617 537.875 349.594 538.008 349.551 538.09 cv
349.5 538.176 349.438 538.219 349.363 538.215 cv
347.797 538.215 li
347.797 544.363 li
347.793 544.41 347.785 544.445 347.766 544.469 cv
347.742 544.5 347.707 544.523 347.66 544.543 cv
347.609 544.562 347.543 544.574 347.461 544.59 cv
347.375 544.598 347.27 544.605 347.152 544.605 cv
347.023 544.605 346.922 544.598 346.84 544.59 cv
346.754 544.574 346.688 544.562 346.641 544.543 cv
346.59 544.523 346.555 544.5 346.535 544.469 cv
346.512 544.445 346.5 544.41 346.504 544.363 cv
346.504 538.215 li
345.516 538.215 li
345.43 538.219 345.367 538.176 345.328 538.09 cv
345.285 538.008 345.262 537.875 345.266 537.684 cv
345.262 537.59 345.27 537.508 345.281 537.437 cv
345.289 537.375 345.305 537.316 345.328 537.27 cv
345.348 537.227 345.371 537.195 345.406 537.176 cv
345.434 537.16 345.473 537.152 345.516 537.148 cv
346.504 537.148 li
346.504 536.422 li
346.5 535.937 346.547 535.52 346.641 535.164 cv
346.73 534.816 346.867 534.527 347.055 534.305 cv
347.238 534.082 347.473 533.918 347.762 533.809 cv
348.043 533.703 348.379 533.648 348.766 533.648 cv
348.941 533.648 349.117 533.668 349.293 533.699 cv
349.461 533.738 349.594 533.773 349.691 533.809 cv
349.781 533.852 349.844 533.887 349.879 533.914 cv
349.906 533.949 349.934 533.988 349.957 534.035 cv
349.977 534.086 349.988 534.148 350 534.215 cv
350.004 534.289 350.008 534.371 350.012 534.465 cv
cp
f
360.207 541.73 mo
360.203 542.203 360.117 542.625 359.945 542.992 cv
359.77 543.367 359.527 543.68 359.219 543.934 cv
358.91 544.191 358.547 544.383 358.129 544.512 cv
357.707 544.641 357.258 544.703 356.777 544.707 cv
356.438 544.703 356.121 544.676 355.836 544.621 cv
355.547 544.562 355.293 544.496 355.066 544.41 cv
354.84 544.332 354.648 544.246 354.496 544.152 cv
354.34 544.066 354.234 543.988 354.176 543.926 cv
354.117 543.863 354.074 543.785 354.047 543.691 cv
354.016 543.598 354 543.469 354.004 543.305 cv
354 543.191 354.004 543.098 354.02 543.02 cv
354.027 542.945 354.043 542.883 354.066 542.836 cv
354.082 542.789 354.109 542.758 354.145 542.738 cv
354.172 542.723 354.207 542.715 354.25 542.711 cv
354.32 542.715 354.422 542.758 354.559 542.844 cv
354.688 542.934 354.859 543.031 355.07 543.133 cv
355.277 543.242 355.527 543.34 355.82 543.426 cv
356.113 543.52 356.453 543.562 356.84 543.562 cv
357.129 543.562 357.395 543.523 357.637 543.445 cv
357.875 543.367 358.082 543.258 358.262 543.113 cv
358.434 542.973 358.57 542.797 358.664 542.586 cv
358.758 542.379 358.805 542.145 358.805 541.879 cv
358.805 541.598 358.738 541.352 358.609 541.145 cv
358.477 540.945 358.305 540.77 358.094 540.613 cv
357.879 540.465 357.637 540.324 357.363 540.191 cv
357.09 540.066 356.809 539.934 356.527 539.801 cv
356.238 539.668 355.961 539.523 355.691 539.359 cv
355.422 539.203 355.18 539.012 354.969 538.793 cv
354.75 538.574 354.578 538.32 354.449 538.023 cv
354.313 537.734 354.246 537.383 354.25 536.969 cv
354.246 536.551 354.324 536.176 354.48 535.844 cv
354.633 535.516 354.844 535.238 355.121 535.012 cv
355.391 534.793 355.715 534.621 356.094 534.504 cv
356.469 534.387 356.879 534.328 357.316 534.328 cv
357.535 534.328 357.758 534.348 357.988 534.387 cv
358.211 534.426 358.422 534.477 358.625 534.539 cv
358.82 534.605 359 534.68 359.16 534.758 cv
359.313 534.84 359.414 534.906 359.469 534.953 cv
359.516 535.008 359.551 535.047 359.566 535.07 cv
359.582 535.102 359.594 535.137 359.605 535.18 cv
359.613 535.227 359.621 535.281 359.629 535.34 cv
359.633 535.406 359.637 535.484 359.637 535.582 cv
359.637 535.676 359.633 535.762 359.625 535.832 cv
359.617 535.91 359.605 535.969 359.59 536.016 cv
359.574 536.062 359.551 536.098 359.523 536.121 cv
359.492 536.145 359.461 536.156 359.426 536.156 cv
359.367 536.156 359.277 536.121 359.156 536.051 cv
359.031 535.98 358.879 535.898 358.707 535.805 cv
358.527 535.715 358.32 535.633 358.082 535.555 cv
357.836 535.48 357.566 535.441 357.27 535.441 cv
356.988 535.441 356.742 535.48 356.535 535.555 cv
356.324 535.633 356.152 535.734 356.02 535.855 cv
355.883 535.98 355.781 536.125 355.715 536.297 cv
355.648 536.469 355.617 536.652 355.617 536.844 cv
355.617 537.129 355.68 537.371 355.809 537.57 cv
355.938 537.773 356.109 537.953 356.328 538.105 cv
356.539 538.266 356.785 538.406 357.063 538.535 cv
357.336 538.668 357.617 538.801 357.906 538.93 cv
358.191 539.062 358.473 539.207 358.746 539.363 cv
359.02 539.523 359.266 539.711 359.484 539.926 cv
359.699 540.145 359.871 540.398 360.008 540.691 cv
360.137 540.984 360.203 541.332 360.207 541.73 cv
cp
f
367.977 544.363 mo
367.973 544.41 367.965 544.445 367.949 544.469 cv
367.93 544.5 367.895 544.523 367.852 544.543 cv
367.805 544.562 367.746 544.574 367.672 544.59 cv
367.594 544.598 367.5 544.605 367.395 544.605 cv
367.27 544.605 367.172 544.598 367.102 544.59 cv
367.023 544.574 366.965 544.562 366.922 544.543 cv
366.875 544.523 366.844 544.5 366.832 544.469 cv
366.813 544.445 366.805 544.41 366.809 544.363 cv
366.809 543.437 li
366.406 543.883 366.012 544.203 365.625 544.402 cv
365.23 544.605 364.836 544.703 364.441 544.707 cv
363.969 544.703 363.574 544.629 363.258 544.473 cv
362.938 544.32 362.68 544.109 362.484 543.84 cv
362.281 543.574 362.141 543.262 362.059 542.902 cv
361.969 542.547 361.926 542.113 361.93 541.605 cv
361.93 537.352 li
361.926 537.312 361.934 537.277 361.957 537.246 cv
361.973 537.219 362.008 537.195 362.063 537.168 cv
362.109 537.148 362.18 537.133 362.266 537.121 cv
362.348 537.117 362.449 537.113 362.578 537.109 cv
362.699 537.113 362.805 537.117 362.891 537.121 cv
362.973 537.133 363.039 537.148 363.086 537.168 cv
363.133 537.195 363.168 537.219 363.191 537.246 cv
363.211 537.277 363.219 537.312 363.223 537.352 cv
363.223 541.434 li
363.219 541.848 363.25 542.176 363.313 542.422 cv
363.371 542.668 363.461 542.879 363.586 543.051 cv
363.703 543.23 363.859 543.363 364.051 543.457 cv
364.234 543.555 364.453 543.605 364.703 543.602 cv
365.023 543.605 365.344 543.488 365.668 543.258 cv
365.984 543.031 366.324 542.695 366.684 542.25 cv
366.684 537.352 li
366.684 537.312 366.691 537.277 366.711 537.246 cv
366.727 537.219 366.762 537.195 366.816 537.168 cv
366.867 537.148 366.934 537.133 367.016 537.121 cv
367.094 537.117 367.199 537.113 367.332 537.109 cv
367.453 537.113 367.559 537.117 367.645 537.121 cv
367.727 537.133 367.789 537.148 367.836 537.168 cv
367.879 537.195 367.914 537.219 367.941 537.246 cv
367.961 537.277 367.973 537.312 367.977 537.352 cv
cp
f
376.832 540.762 mo
376.828 541.371 376.762 541.922 376.633 542.406 cv
376.496 542.895 376.301 543.309 376.047 543.648 cv
375.789 543.992 375.473 544.254 375.102 544.434 cv
374.727 544.617 374.301 544.703 373.816 544.707 cv
373.59 544.703 373.383 544.684 373.195 544.641 cv
373.008 544.594 372.82 544.523 372.641 544.426 cv
372.453 544.328 372.273 544.203 372.094 544.051 cv
371.91 543.902 371.719 543.723 371.52 543.508 cv
371.52 544.363 li
371.52 544.41 371.508 544.445 371.488 544.473 cv
371.465 544.508 371.43 544.531 371.387 544.547 cv
371.336 544.562 371.277 544.574 371.211 544.59 cv
371.137 544.598 371.047 544.605 370.941 544.605 cv
370.832 544.605 370.746 544.598 370.676 544.59 cv
370.602 544.574 370.539 544.562 370.496 544.547 cv
370.445 544.531 370.414 544.508 370.402 544.473 cv
370.383 544.445 370.375 544.41 370.379 544.363 cv
370.379 533.953 li
370.375 533.914 370.387 533.879 370.406 533.844 cv
370.422 533.816 370.453 533.789 370.508 533.766 cv
370.555 533.746 370.621 533.73 370.707 533.719 cv
370.785 533.711 370.891 533.707 371.02 533.703 cv
371.148 533.707 371.254 533.711 371.34 533.719 cv
371.418 533.73 371.484 533.746 371.531 533.766 cv
371.578 533.789 371.609 533.816 371.633 533.844 cv
371.648 533.879 371.66 533.914 371.664 533.953 cv
371.664 538.152 li
371.871 537.941 372.074 537.762 372.27 537.617 cv
372.465 537.473 372.652 537.355 372.84 537.262 cv
373.023 537.176 373.211 537.109 373.402 537.062 cv
373.586 537.023 373.785 537 373.996 537 cv
374.5 537 374.934 537.102 375.301 537.305 cv
375.66 537.508 375.953 537.781 376.18 538.117 cv
376.402 538.461 376.57 538.859 376.676 539.316 cv
376.777 539.773 376.828 540.254 376.832 540.762 cv
cp
375.5 540.91 mo
375.496 540.555 375.469 540.207 375.418 539.867 cv
375.359 539.531 375.266 539.234 375.129 538.973 cv
374.992 538.715 374.813 538.504 374.59 538.344 cv
374.363 538.187 374.082 538.109 373.75 538.105 cv
373.582 538.109 373.418 538.133 373.258 538.176 cv
373.094 538.227 372.93 538.305 372.762 538.41 cv
372.594 538.523 372.418 538.664 372.242 538.832 cv
372.059 539.008 371.867 539.223 371.664 539.477 cv
371.664 542.273 li
372.02 542.707 372.359 543.039 372.684 543.262 cv
373.008 543.492 373.344 543.605 373.695 543.602 cv
374.016 543.605 374.293 543.527 374.527 543.367 cv
374.754 543.215 374.941 543.008 375.086 542.746 cv
375.23 542.492 375.336 542.203 375.402 541.883 cv
375.465 541.566 375.496 541.242 375.5 540.91 cv
cp
f
381.969 540.625 mo
381.969 540.828 381.945 540.965 381.898 541.043 cv
381.852 541.121 381.781 541.16 381.695 541.16 cv
378.438 541.16 li
378.344 541.16 378.277 541.121 378.23 541.039 cv
378.184 540.961 378.16 540.824 378.16 540.625 cv
378.16 540.43 378.184 540.289 378.23 540.211 cv
378.277 540.133 378.344 540.094 378.438 540.094 cv
381.695 540.094 li
381.734 540.094 381.773 540.102 381.809 540.117 cv
381.84 540.133 381.867 540.164 381.895 540.207 cv
381.914 540.254 381.934 540.309 381.949 540.375 cv
381.961 540.445 381.969 540.531 381.969 540.625 cv
cp
f
385.219 544.355 mo
385.215 544.398 385.207 544.434 385.188 544.465 cv
385.164 544.496 385.125 544.523 385.078 544.539 cv
385.023 544.559 384.957 544.57 384.871 544.586 cv
384.785 544.598 384.676 544.605 384.551 544.605 cv
384.422 544.605 384.316 544.598 384.23 544.586 cv
384.141 544.57 384.07 544.559 384.02 544.539 cv
383.965 544.523 383.93 544.496 383.91 544.465 cv
383.887 544.434 383.875 544.398 383.879 544.355 cv
383.879 534.676 li
383.875 534.637 383.887 534.602 383.914 534.566 cv
383.934 534.539 383.973 534.512 384.031 534.492 cv
384.082 534.477 384.152 534.461 384.242 534.445 cv
384.324 534.434 384.426 534.43 384.551 534.426 cv
384.676 534.43 384.785 534.434 384.871 534.445 cv
384.957 534.461 385.023 534.477 385.078 534.492 cv
385.125 534.512 385.164 534.539 385.188 534.566 cv
385.207 534.602 385.215 534.637 385.219 534.676 cv
cp
f
398.207 544.363 mo
398.203 544.41 398.195 544.445 398.176 544.469 cv
398.152 544.5 398.117 544.523 398.074 544.543 cv
398.023 544.562 397.957 544.574 397.879 544.59 cv
397.793 544.598 397.691 544.605 397.566 544.605 cv
397.434 544.605 397.324 544.598 397.246 544.59 cv
397.16 544.574 397.094 544.562 397.047 544.543 cv
396.992 544.523 396.957 544.5 396.941 544.469 cv
396.918 544.445 396.91 544.41 396.91 544.363 cv
396.91 540.102 li
396.91 539.809 396.883 539.539 396.832 539.293 cv
396.777 539.051 396.695 538.84 396.582 538.66 cv
396.469 538.484 396.324 538.348 396.148 538.254 cv
395.969 538.16 395.758 538.113 395.523 538.113 cv
395.227 538.113 394.93 538.23 394.633 538.457 cv
394.328 538.691 394 539.023 393.645 539.461 cv
393.645 544.363 li
393.641 544.41 393.629 544.445 393.613 544.469 cv
393.59 544.5 393.559 544.523 393.512 544.543 cv
393.461 544.562 393.395 544.574 393.313 544.59 cv
393.227 544.598 393.121 544.605 393 544.605 cv
392.879 544.605 392.777 544.598 392.691 544.59 cv
392.605 544.574 392.535 544.562 392.488 544.543 cv
392.434 544.523 392.402 544.5 392.387 544.469 cv
392.367 544.445 392.355 544.41 392.359 544.363 cv
392.359 540.102 li
392.355 539.809 392.328 539.539 392.273 539.293 cv
392.215 539.051 392.129 538.84 392.016 538.66 cv
391.902 538.484 391.758 538.348 391.586 538.254 cv
391.406 538.16 391.199 538.113 390.965 538.113 cv
390.664 538.113 390.367 538.23 390.066 538.457 cv
389.766 538.691 389.438 539.023 389.086 539.461 cv
389.086 544.363 li
389.082 544.41 389.07 544.445 389.055 544.469 cv
389.031 544.5 389 544.523 388.953 544.543 cv
388.906 544.562 388.84 544.574 388.762 544.59 cv
388.676 544.598 388.57 544.605 388.441 544.605 cv
388.313 544.605 388.207 544.598 388.129 544.59 cv
388.043 544.574 387.977 544.562 387.93 544.543 cv
387.875 544.523 387.844 544.5 387.828 544.469 cv
387.809 544.445 387.797 544.41 387.801 544.363 cv
387.801 537.352 li
387.797 537.312 387.805 537.277 387.824 537.246 cv
387.836 537.219 387.867 537.195 387.918 537.168 cv
387.961 537.148 388.023 537.133 388.098 537.121 cv
388.168 537.117 388.262 537.113 388.387 537.109 cv
388.496 537.113 388.594 537.117 388.672 537.121 cv
388.746 537.133 388.805 537.148 388.848 537.168 cv
388.887 537.195 388.914 537.219 388.934 537.246 cv
388.949 537.277 388.957 537.312 388.961 537.352 cv
388.961 538.277 li
389.352 537.836 389.734 537.516 390.109 537.309 cv
390.477 537.105 390.855 537 391.238 537 cv
391.527 537 391.785 537.035 392.02 537.102 cv
392.246 537.172 392.453 537.266 392.633 537.387 cv
392.809 537.508 392.957 537.652 393.086 537.82 cv
393.207 537.992 393.313 538.184 393.398 538.387 cv
393.629 538.137 393.852 537.922 394.063 537.742 cv
394.273 537.57 394.477 537.426 394.672 537.312 cv
394.867 537.207 395.055 537.129 395.238 537.074 cv
395.422 537.027 395.609 537 395.797 537 cv
396.25 537 396.629 537.082 396.934 537.238 cv
397.238 537.402 397.484 537.613 397.68 537.875 cv
397.867 538.141 398.004 538.449 398.086 538.805 cv
398.164 539.16 398.203 539.535 398.207 539.93 cv
cp
f
405.84 544.371 mo
405.836 544.434 405.816 544.48 405.777 544.512 cv
405.734 544.543 405.676 544.566 405.605 544.582 cv
405.527 544.598 405.422 544.605 405.285 544.605 cv
405.148 544.605 405.039 544.598 404.961 544.582 cv
404.875 544.566 404.816 544.543 404.785 544.512 cv
404.746 544.48 404.73 544.434 404.734 544.371 cv
404.734 543.672 li
404.426 544 404.082 544.254 403.707 544.434 cv
403.328 544.617 402.93 544.703 402.512 544.707 cv
402.137 544.703 401.805 544.656 401.508 544.562 cv
401.211 544.465 400.957 544.328 400.746 544.145 cv
400.535 543.965 400.371 543.742 400.254 543.477 cv
400.137 543.215 400.078 542.914 400.082 542.57 cv
400.078 542.18 400.156 541.836 400.32 541.543 cv
400.477 541.254 400.711 541.012 401.016 540.82 cv
401.316 540.629 401.684 540.484 402.121 540.387 cv
402.555 540.293 403.047 540.246 403.594 540.242 cv
404.563 540.242 li
404.563 539.695 li
404.559 539.426 404.531 539.187 404.477 538.98 cv
404.418 538.773 404.324 538.602 404.199 538.461 cv
404.066 538.324 403.902 538.219 403.703 538.148 cv
403.496 538.078 403.246 538.043 402.957 538.043 cv
402.637 538.043 402.352 538.082 402.102 538.156 cv
401.844 538.234 401.625 538.316 401.438 538.406 cv
401.25 538.5 401.09 538.586 400.965 538.656 cv
400.832 538.734 400.738 538.77 400.68 538.77 cv
400.637 538.77 400.602 538.762 400.57 538.738 cv
400.539 538.723 400.512 538.691 400.488 538.645 cv
400.465 538.605 400.445 538.551 400.438 538.484 cv
400.422 538.422 400.418 538.352 400.422 538.27 cv
400.418 538.145 400.426 538.039 400.449 537.961 cv
400.465 537.887 400.512 537.816 400.582 537.746 cv
400.652 537.68 400.773 537.602 400.945 537.512 cv
401.117 537.422 401.313 537.34 401.535 537.262 cv
401.758 537.191 402.004 537.129 402.27 537.074 cv
402.535 537.027 402.801 537 403.074 537 cv
403.574 537 404.004 537.059 404.355 537.172 cv
404.707 537.289 404.992 537.457 405.215 537.676 cv
405.43 537.898 405.59 538.172 405.691 538.496 cv
405.789 538.828 405.836 539.211 405.84 539.641 cv
cp
404.563 541.168 mo
403.461 541.168 li
403.105 541.172 402.801 541.203 402.543 541.258 cv
402.281 541.32 402.066 541.406 401.895 541.523 cv
401.723 541.641 401.598 541.781 401.52 541.945 cv
401.438 542.109 401.395 542.297 401.398 542.508 cv
401.395 542.875 401.512 543.168 401.742 543.379 cv
401.973 543.598 402.297 543.703 402.715 543.703 cv
403.051 543.703 403.363 543.617 403.652 543.445 cv
403.941 543.273 404.242 543.012 404.563 542.656 cv
cp
f
414.059 537.668 mo
414.055 537.852 414.031 537.984 413.984 538.062 cv
413.934 538.145 413.871 538.184 413.797 538.184 cv
412.789 538.184 li
412.969 538.371 413.098 538.578 413.172 538.805 cv
413.242 539.031 413.277 539.266 413.281 539.508 cv
413.277 539.914 413.211 540.273 413.086 540.586 cv
412.953 540.898 412.77 541.164 412.527 541.375 cv
412.285 541.594 411.996 541.758 411.668 541.871 cv
411.332 541.988 410.965 542.047 410.563 542.043 cv
410.273 542.047 410 542.008 409.746 541.93 cv
409.484 541.855 409.289 541.762 409.152 541.645 cv
409.059 541.742 408.98 541.848 408.922 541.965 cv
408.859 542.086 408.828 542.223 408.832 542.375 cv
408.828 542.559 408.914 542.711 409.086 542.828 cv
409.254 542.953 409.477 543.016 409.758 543.023 cv
411.59 543.102 li
411.938 543.113 412.254 543.16 412.547 543.246 cv
412.836 543.332 413.09 543.457 413.305 543.613 cv
413.516 543.773 413.684 543.965 413.805 544.195 cv
413.922 544.43 413.98 544.699 413.984 545.004 cv
413.98 545.324 413.914 545.629 413.781 545.922 cv
413.645 546.211 413.438 546.465 413.16 546.687 cv
412.879 546.906 412.523 547.082 412.094 547.211 cv
411.664 547.336 411.156 547.398 410.57 547.402 cv
410 547.398 409.516 547.352 409.121 547.258 cv
408.723 547.16 408.398 547.027 408.145 546.863 cv
407.891 546.695 407.707 546.5 407.594 546.27 cv
407.477 546.035 407.418 545.781 407.422 545.516 cv
407.418 545.344 407.438 545.18 407.484 545.02 cv
407.523 544.855 407.586 544.703 407.672 544.559 cv
407.754 544.414 407.863 544.277 407.992 544.141 cv
408.117 544.012 408.262 543.879 408.434 543.75 cv
408.176 543.621 407.988 543.457 407.867 543.258 cv
407.746 543.062 407.688 542.852 407.688 542.617 cv
407.688 542.305 407.75 542.02 407.879 541.77 cv
408.008 541.52 408.168 541.297 408.363 541.098 cv
408.199 540.906 408.074 540.691 407.98 540.449 cv
407.887 540.211 407.84 539.918 407.84 539.57 cv
407.84 539.176 407.906 538.816 408.043 538.496 cv
408.176 538.18 408.363 537.914 408.605 537.695 cv
408.844 537.48 409.129 537.312 409.465 537.191 cv
409.797 537.078 410.164 537.02 410.563 537.016 cv
410.773 537.02 410.973 537.031 411.156 537.051 cv
411.34 537.078 411.512 537.109 411.676 537.148 cv
413.797 537.148 li
413.883 537.152 413.949 537.195 413.992 537.277 cv
414.035 537.367 414.055 537.496 414.059 537.668 cv
cp
412.051 539.516 mo
412.047 539.043 411.914 538.672 411.656 538.398 cv
411.391 538.133 411.02 537.996 410.539 537.996 cv
410.285 537.996 410.066 538.039 409.887 538.121 cv
409.699 538.207 409.547 538.32 409.426 538.465 cv
409.305 538.613 409.215 538.781 409.156 538.969 cv
409.094 539.156 409.063 539.355 409.066 539.562 cv
409.063 540.027 409.195 540.391 409.457 540.656 cv
409.719 540.922 410.086 541.055 410.563 541.051 cv
410.813 541.055 411.031 541.016 411.223 540.93 cv
411.406 540.852 411.563 540.738 411.688 540.598 cv
411.809 540.457 411.898 540.293 411.961 540.102 cv
412.016 539.918 412.047 539.723 412.051 539.516 cv
cp
412.695 545.074 mo
412.691 544.77 412.566 544.539 412.324 544.375 cv
412.074 544.215 411.742 544.125 411.324 544.113 cv
409.508 544.051 li
409.34 544.184 409.203 544.309 409.102 544.422 cv
408.992 544.539 408.91 544.648 408.848 544.758 cv
408.785 544.863 408.742 544.969 408.719 545.074 cv
408.695 545.176 408.684 545.281 408.684 545.391 cv
408.684 545.727 408.852 545.98 409.195 546.16 cv
409.535 546.332 410.016 546.422 410.633 546.422 cv
411.02 546.422 411.344 546.383 411.609 546.309 cv
411.867 546.23 412.078 546.129 412.242 546.008 cv
412.398 545.879 412.516 545.738 412.59 545.578 cv
412.656 545.418 412.691 545.25 412.695 545.074 cv
cp
f
421.621 540.555 mo
421.617 540.758 421.566 540.898 421.469 540.984 cv
421.363 541.07 421.246 541.113 421.121 541.113 cv
416.504 541.113 li
416.5 541.504 416.539 541.855 416.621 542.168 cv
416.695 542.48 416.828 542.75 417.012 542.969 cv
417.191 543.195 417.426 543.367 417.723 543.484 cv
418.012 543.609 418.371 543.668 418.797 543.664 cv
419.129 543.668 419.426 543.641 419.688 543.582 cv
419.949 543.531 420.176 543.469 420.367 543.398 cv
420.555 543.332 420.711 543.273 420.836 543.215 cv
420.957 543.164 421.051 543.137 421.113 543.133 cv
421.148 543.137 421.18 543.145 421.211 543.16 cv
421.238 543.18 421.262 543.207 421.281 543.242 cv
421.293 543.281 421.305 543.332 421.316 543.395 cv
421.32 543.461 421.324 543.539 421.328 543.633 cv
421.324 543.703 421.32 543.762 421.32 543.809 cv
421.313 543.855 421.309 543.898 421.301 543.937 cv
421.293 543.977 421.277 544.012 421.262 544.043 cv
421.238 544.074 421.215 544.105 421.191 544.133 cv
421.16 544.164 421.078 544.211 420.938 544.273 cv
420.797 544.34 420.613 544.402 420.391 544.465 cv
420.164 544.527 419.906 544.582 419.613 544.633 cv
419.32 544.68 419.008 544.703 418.676 544.707 cv
418.098 544.703 417.59 544.625 417.16 544.465 cv
416.723 544.305 416.359 544.066 416.066 543.75 cv
415.766 543.434 415.543 543.039 415.395 542.559 cv
415.246 542.082 415.172 541.523 415.172 540.887 cv
415.172 540.289 415.246 539.75 415.402 539.266 cv
415.555 538.789 415.781 538.379 416.078 538.043 cv
416.371 537.707 416.727 537.449 417.141 537.27 cv
417.555 537.09 418.02 537 418.535 537 cv
419.086 537 419.555 537.09 419.941 537.266 cv
420.328 537.445 420.645 537.684 420.898 537.98 cv
421.145 538.281 421.328 538.633 421.445 539.031 cv
421.559 539.437 421.617 539.867 421.621 540.32 cv
cp
420.328 540.172 mo
420.344 539.496 420.191 538.965 419.875 538.582 cv
419.559 538.199 419.09 538.008 418.473 538.004 cv
418.148 538.008 417.867 538.066 417.629 538.184 cv
417.387 538.305 417.188 538.465 417.027 538.66 cv
416.863 538.859 416.738 539.09 416.652 539.352 cv
416.563 539.613 416.512 539.887 416.504 540.172 cv
cp
f
427.984 542.453 mo
427.98 542.816 427.914 543.137 427.785 543.414 cv
427.652 543.695 427.465 543.93 427.223 544.121 cv
426.977 544.316 426.684 544.461 426.348 544.559 cv
426.008 544.656 425.637 544.703 425.234 544.707 cv
424.98 544.703 424.742 544.684 424.52 544.648 cv
424.293 544.605 424.094 544.559 423.914 544.5 cv
423.734 544.441 423.582 544.379 423.457 544.312 cv
423.332 544.25 423.238 544.191 423.184 544.137 cv
423.125 544.086 423.086 544.016 423.063 543.918 cv
423.035 543.828 423.023 543.699 423.023 543.539 cv
423.023 543.441 423.027 543.359 423.039 543.289 cv
423.047 543.223 423.059 543.168 423.078 543.125 cv
423.09 543.086 423.113 543.055 423.141 543.035 cv
423.168 543.02 423.199 543.012 423.238 543.008 cv
423.293 543.012 423.379 543.047 423.492 543.113 cv
423.602 543.187 423.738 543.266 423.906 543.344 cv
424.066 543.43 424.258 543.504 424.484 543.574 cv
424.703 543.645 424.961 543.68 425.258 543.68 cv
425.473 543.68 425.672 543.656 425.852 543.609 cv
426.027 543.562 426.18 543.496 426.309 543.402 cv
426.438 543.316 426.539 543.199 426.609 543.055 cv
426.68 542.918 426.715 542.75 426.715 542.555 cv
426.715 542.359 426.664 542.195 426.563 542.059 cv
426.461 541.926 426.324 541.805 426.16 541.699 cv
425.992 541.598 425.809 541.508 425.602 541.422 cv
425.391 541.344 425.176 541.258 424.957 541.168 cv
424.738 541.082 424.523 540.98 424.313 540.867 cv
424.102 540.758 423.91 540.625 423.746 540.461 cv
423.574 540.305 423.441 540.109 423.344 539.883 cv
423.238 539.66 423.188 539.395 423.191 539.082 cv
423.188 538.809 423.242 538.543 423.352 538.289 cv
423.457 538.039 423.617 537.82 423.832 537.629 cv
424.043 537.441 424.309 537.289 424.629 537.172 cv
424.949 537.059 425.32 537 425.75 537 cv
425.934 537 426.121 537.016 426.309 537.047 cv
426.492 537.078 426.66 537.117 426.816 537.164 cv
426.965 537.211 427.094 537.262 427.203 537.316 cv
427.305 537.371 427.387 537.422 427.445 537.461 cv
427.496 537.508 427.531 537.543 427.555 537.57 cv
427.57 537.602 427.586 537.637 427.594 537.672 cv
427.602 537.715 427.609 537.762 427.617 537.816 cv
427.625 537.875 427.629 537.945 427.629 538.027 cv
427.629 538.117 427.625 538.195 427.617 538.258 cv
427.609 538.328 427.594 538.379 427.578 538.418 cv
427.555 538.461 427.535 538.492 427.512 538.508 cv
427.484 538.527 427.453 538.535 427.426 538.535 cv
427.375 538.535 427.309 538.508 427.223 538.449 cv
427.133 538.395 427.02 538.332 426.879 538.266 cv
426.738 538.203 426.57 538.145 426.383 538.082 cv
426.191 538.027 425.977 537.996 425.734 537.996 cv
425.512 537.996 425.32 538.023 425.156 538.07 cv
424.988 538.125 424.852 538.195 424.746 538.281 cv
424.641 538.375 424.559 538.48 424.508 538.605 cv
424.449 538.73 424.422 538.867 424.426 539.012 cv
424.422 539.215 424.473 539.383 424.578 539.52 cv
424.68 539.66 424.816 539.781 424.984 539.883 cv
425.148 539.988 425.34 540.082 425.555 540.164 cv
425.766 540.25 425.98 540.336 426.203 540.422 cv
426.422 540.512 426.641 540.613 426.859 540.719 cv
427.074 540.828 427.266 540.957 427.434 541.113 cv
427.598 541.27 427.73 541.457 427.832 541.676 cv
427.93 541.895 427.98 542.156 427.984 542.453 cv
cp
f
208.625 15.98 mo
208.621 16.133 208.617 16.258 208.605 16.355 cv
208.59 16.461 208.57 16.543 208.547 16.602 cv
208.523 16.668 208.492 16.715 208.453 16.738 cv
208.414 16.77 208.371 16.781 208.324 16.781 cv
203.258 16.781 li
203.082 16.781 202.938 16.73 202.824 16.629 cv
202.703 16.527 202.645 16.363 202.648 16.133 cv
202.648 7.34399 li
202.645 7.117 202.703 6.953 202.824 6.84802 cv
202.938 6.75 203.082 6.69897 203.258 6.69501 cv
208.293 6.69501 li
208.336 6.69897 208.379 6.711 208.418 6.73401 cv
208.453 6.76202 208.484 6.80902 208.512 6.87097 cv
208.535 6.94098 208.551 7.02301 208.566 7.12097 cv
208.574 7.22699 208.582 7.35498 208.586 7.508 cv
208.582 7.65601 208.574 7.78101 208.566 7.87903 cv
208.551 7.98401 208.535 8.06598 208.512 8.125 cv
208.484 8.18701 208.453 8.22998 208.418 8.258 cv
208.379 8.289 208.336 8.30499 208.293 8.30103 cv
204.691 8.30103 li
204.691 10.766 li
207.738 10.766 li
207.785 10.77 207.828 10.785 207.867 10.809 cv
207.906 10.84 207.938 10.883 207.965 10.941 cv
207.988 11.004 208.008 11.086 208.023 11.184 cv
208.035 11.285 208.043 11.406 208.043 11.551 cv
208.043 11.703 208.035 11.828 208.023 11.926 cv
208.008 12.027 207.988 12.105 207.965 12.164 cv
207.938 12.227 207.906 12.27 207.867 12.293 cv
207.828 12.32 207.785 12.336 207.738 12.332 cv
204.691 12.332 li
204.691 15.176 li
208.324 15.176 li
208.371 15.176 208.414 15.191 208.453 15.219 cv
208.492 15.25 208.523 15.297 208.547 15.355 cv
208.57 15.422 208.59 15.504 208.605 15.602 cv
208.617 15.707 208.621 15.832 208.625 15.98 cv
cp
f
216.961 16.516 mo
216.957 16.57 216.941 16.613 216.914 16.652 cv
216.879 16.691 216.828 16.727 216.758 16.75 cv
216.684 16.777 216.582 16.793 216.457 16.809 cv
216.328 16.82 216.172 16.828 215.988 16.828 cv
215.793 16.828 215.633 16.82 215.508 16.809 cv
215.379 16.793 215.277 16.777 215.207 16.75 cv
215.129 16.727 215.078 16.691 215.051 16.652 cv
215.016 16.613 215 16.57 215.004 16.516 cv
215.004 12.551 li
215 12.215 214.977 11.949 214.93 11.754 cv
214.879 11.562 214.805 11.398 214.715 11.262 cv
214.621 11.125 214.504 11.02 214.355 10.941 cv
214.207 10.867 214.031 10.828 213.836 10.828 cv
213.582 10.828 213.332 10.922 213.078 11.102 cv
212.824 11.285 212.559 11.547 212.285 11.895 cv
212.285 16.516 li
212.281 16.57 212.266 16.613 212.238 16.652 cv
212.203 16.691 212.148 16.727 212.078 16.75 cv
212 16.777 211.902 16.793 211.777 16.809 cv
211.652 16.82 211.492 16.828 211.305 16.828 cv
211.109 16.828 210.953 16.82 210.828 16.809 cv
210.703 16.793 210.602 16.777 210.527 16.75 cv
210.449 16.727 210.395 16.691 210.367 16.652 cv
210.332 16.613 210.316 16.57 210.32 16.516 cv
210.32 9.56598 li
210.316 9.52002 210.332 9.47302 210.359 9.42999 cv
210.383 9.39502 210.43 9.36298 210.5 9.33197 cv
210.566 9.30902 210.652 9.289 210.762 9.27301 cv
210.867 9.26599 211 9.258 211.164 9.25403 cv
211.328 9.258 211.465 9.26599 211.574 9.27301 cv
211.68 9.289 211.766 9.30902 211.828 9.33197 cv
211.887 9.36298 211.93 9.39502 211.957 9.42999 cv
211.98 9.47302 211.992 9.52002 211.996 9.56598 cv
211.996 10.367 li
212.379 9.95697 212.77 9.64502 213.168 9.43402 cv
213.563 9.22699 213.98 9.125 214.414 9.12097 cv
214.883 9.125 215.281 9.203 215.609 9.35498 cv
215.934 9.51599 216.195 9.72699 216.395 9.992 cv
216.594 10.262 216.738 10.574 216.828 10.93 cv
216.914 11.289 216.957 11.719 216.961 12.223 cv
cp
f
225.313 12.84 mo
225.309 13.078 225.258 13.254 225.152 13.367 cv
225.043 13.484 224.895 13.543 224.715 13.539 cv
220.48 13.539 li
220.477 13.84 220.512 14.109 220.586 14.348 cv
220.652 14.59 220.766 14.793 220.922 14.961 cv
221.074 15.133 221.27 15.262 221.512 15.348 cv
221.75 15.437 222.039 15.48 222.383 15.48 cv
222.723 15.48 223.023 15.457 223.285 15.406 cv
223.543 15.359 223.77 15.305 223.961 15.242 cv
224.148 15.184 224.305 15.129 224.434 15.078 cv
224.555 15.031 224.656 15.008 224.738 15.004 cv
224.781 15.008 224.82 15.016 224.855 15.031 cv
224.883 15.051 224.91 15.082 224.93 15.129 cv
224.949 15.176 224.961 15.242 224.973 15.328 cv
224.977 15.414 224.98 15.523 224.984 15.652 cv
224.98 15.77 224.98 15.867 224.977 15.945 cv
224.969 16.027 224.961 16.094 224.953 16.148 cv
224.941 16.207 224.926 16.258 224.906 16.293 cv
224.887 16.336 224.859 16.371 224.828 16.406 cv
224.793 16.445 224.699 16.496 224.551 16.555 cv
224.395 16.621 224.203 16.684 223.973 16.738 cv
223.734 16.801 223.465 16.848 223.168 16.895 cv
222.863 16.934 222.543 16.957 222.203 16.961 cv
221.582 16.957 221.039 16.883 220.578 16.727 cv
220.109 16.574 219.723 16.336 219.414 16.02 cv
219.098 15.703 218.863 15.305 218.715 14.82 cv
218.559 14.34 218.484 13.773 218.488 13.117 cv
218.484 12.504 218.563 11.945 218.727 11.449 cv
218.883 10.953 219.117 10.535 219.43 10.187 cv
219.734 9.84399 220.109 9.578 220.547 9.39502 cv
220.984 9.21503 221.477 9.125 222.031 9.12097 cv
222.609 9.125 223.109 9.211 223.523 9.37903 cv
223.938 9.55499 224.273 9.79303 224.539 10.094 cv
224.801 10.398 224.996 10.758 225.125 11.172 cv
225.246 11.59 225.309 12.039 225.313 12.527 cv
cp
223.41 12.277 mo
223.422 11.727 223.313 11.293 223.078 10.98 cv
222.844 10.668 222.477 10.512 221.984 10.508 cv
221.734 10.512 221.52 10.559 221.336 10.648 cv
221.148 10.746 220.996 10.871 220.875 11.027 cv
220.75 11.187 220.656 11.375 220.594 11.59 cv
220.527 11.805 220.488 12.035 220.48 12.277 cv
cp
f
231.387 10.211 mo
231.387 10.402 231.379 10.555 231.371 10.672 cv
231.355 10.793 231.34 10.887 231.324 10.953 cv
231.301 11.023 231.273 11.07 231.242 11.094 cv
231.203 11.121 231.16 11.133 231.113 11.133 cv
231.066 11.133 231.02 11.125 230.973 11.105 cv
230.918 11.09 230.859 11.07 230.797 11.047 cv
230.727 11.027 230.656 11.008 230.582 10.988 cv
230.5 10.973 230.414 10.965 230.324 10.961 cv
230.211 10.965 230.102 10.984 229.996 11.027 cv
229.887 11.074 229.773 11.145 229.66 11.234 cv
229.539 11.328 229.418 11.453 229.293 11.605 cv
229.164 11.766 229.027 11.957 228.883 12.184 cv
228.883 16.516 li
228.879 16.57 228.863 16.613 228.836 16.652 cv
228.801 16.691 228.746 16.727 228.676 16.75 cv
228.598 16.777 228.5 16.793 228.375 16.809 cv
228.25 16.82 228.09 16.828 227.902 16.828 cv
227.707 16.828 227.551 16.82 227.426 16.809 cv
227.301 16.793 227.199 16.777 227.125 16.75 cv
227.047 16.727 226.992 16.691 226.965 16.652 cv
226.93 16.613 226.914 16.57 226.918 16.516 cv
226.918 9.56598 li
226.914 9.52002 226.93 9.47302 226.957 9.42999 cv
226.98 9.39502 227.027 9.36298 227.098 9.33197 cv
227.164 9.30902 227.25 9.289 227.359 9.27301 cv
227.465 9.26599 227.598 9.258 227.762 9.25403 cv
227.926 9.258 228.063 9.26599 228.172 9.27301 cv
228.277 9.289 228.363 9.30902 228.426 9.33197 cv
228.484 9.36298 228.527 9.39502 228.555 9.42999 cv
228.578 9.47302 228.59 9.52002 228.594 9.56598 cv
228.594 10.43 li
228.773 10.172 228.945 9.961 229.109 9.789 cv
229.266 9.625 229.422 9.48798 229.57 9.38702 cv
229.715 9.289 229.859 9.22302 230.004 9.17999 cv
230.148 9.14502 230.293 9.125 230.441 9.12097 cv
230.508 9.125 230.582 9.12903 230.66 9.133 cv
230.738 9.14502 230.816 9.15601 230.902 9.172 cv
230.98 9.19098 231.055 9.211 231.121 9.23401 cv
231.18 9.258 231.227 9.28497 231.258 9.30902 cv
231.285 9.34003 231.305 9.367 231.32 9.39502 cv
231.332 9.42999 231.344 9.47302 231.355 9.52301 cv
231.363 9.58197 231.371 9.664 231.379 9.77002 cv
231.383 9.87903 231.387 10.027 231.387 10.211 cv
cp
f
238.563 10.047 mo
238.559 10.301 238.531 10.484 238.477 10.602 cv
238.418 10.723 238.348 10.781 238.27 10.781 cv
237.449 10.781 li
237.563 10.906 237.645 11.051 237.695 11.207 cv
237.742 11.367 237.766 11.531 237.77 11.699 cv
237.766 12.109 237.699 12.469 237.566 12.781 cv
237.43 13.098 237.234 13.363 236.984 13.574 cv
236.73 13.793 236.43 13.957 236.074 14.066 cv
235.715 14.184 235.316 14.238 234.887 14.234 cv
234.66 14.238 234.449 14.211 234.246 14.152 cv
234.043 14.102 233.887 14.039 233.777 13.961 cv
233.715 14.031 233.656 14.109 233.609 14.203 cv
233.559 14.297 233.535 14.402 233.539 14.512 cv
233.535 14.668 233.602 14.789 233.734 14.883 cv
233.863 14.98 234.051 15.035 234.293 15.043 cv
235.984 15.105 li
236.379 15.121 236.73 15.18 237.039 15.273 cv
237.348 15.375 237.609 15.508 237.82 15.68 cv
238.031 15.855 238.191 16.066 238.301 16.309 cv
238.41 16.555 238.465 16.828 238.469 17.141 cv
238.465 17.477 238.391 17.801 238.242 18.109 cv
238.094 18.41 237.867 18.672 237.566 18.898 cv
237.262 19.117 236.883 19.297 236.43 19.43 cv
235.973 19.559 235.441 19.621 234.84 19.625 cv
234.242 19.621 233.738 19.574 233.32 19.484 cv
232.902 19.387 232.559 19.258 232.293 19.094 cv
232.023 18.926 231.828 18.727 231.711 18.5 cv
231.586 18.266 231.527 18.012 231.527 17.738 cv
231.527 17.566 231.547 17.406 231.594 17.25 cv
231.633 17.094 231.699 16.941 231.789 16.801 cv
231.871 16.656 231.977 16.523 232.102 16.391 cv
232.227 16.262 232.367 16.137 232.531 16.016 cv
232.305 15.902 232.133 15.742 232.012 15.531 cv
231.891 15.328 231.832 15.102 231.832 14.855 cv
231.832 14.555 231.898 14.277 232.039 14.02 cv
232.176 13.77 232.359 13.539 232.586 13.336 cv
232.402 13.156 232.258 12.941 232.148 12.684 cv
232.039 12.434 231.984 12.113 231.988 11.73 cv
231.984 11.328 232.055 10.969 232.199 10.645 cv
232.34 10.328 232.539 10.059 232.797 9.836 cv
233.051 9.617 233.355 9.44501 233.707 9.328 cv
234.059 9.211 234.449 9.15198 234.879 9.15198 cv
235.098 9.15198 235.305 9.16803 235.504 9.19098 cv
235.703 9.22302 235.891 9.258 236.063 9.30103 cv
238.27 9.30103 li
238.352 9.30499 238.422 9.36298 238.48 9.47302 cv
238.531 9.59003 238.559 9.78101 238.563 10.047 cv
cp
236.047 11.691 mo
236.043 11.32 235.941 11.031 235.734 10.82 cv
235.523 10.617 235.23 10.512 234.855 10.508 cv
234.66 10.512 234.488 10.543 234.348 10.605 cv
234.199 10.672 234.078 10.762 233.984 10.871 cv
233.883 10.984 233.813 11.113 233.77 11.262 cv
233.719 11.41 233.695 11.566 233.699 11.723 cv
233.695 12.082 233.801 12.359 234.012 12.562 cv
234.219 12.77 234.508 12.875 234.879 12.871 cv
235.074 12.875 235.242 12.844 235.391 12.777 cv
235.531 12.719 235.652 12.633 235.754 12.52 cv
235.848 12.414 235.922 12.285 235.973 12.141 cv
236.02 12 236.043 11.852 236.047 11.691 cv
cp
236.508 17.242 mo
236.508 17.004 236.414 16.828 236.227 16.703 cv
236.039 16.582 235.781 16.512 235.453 16.5 cv
234.059 16.461 li
233.922 16.562 233.813 16.656 233.734 16.746 cv
233.652 16.836 233.59 16.922 233.543 17.008 cv
233.492 17.09 233.457 17.172 233.445 17.25 cv
233.426 17.328 233.418 17.406 233.422 17.492 cv
233.418 17.746 233.551 17.945 233.813 18.082 cv
234.074 18.215 234.445 18.281 234.926 18.285 cv
235.219 18.281 235.465 18.25 235.672 18.195 cv
235.871 18.133 236.035 18.055 236.164 17.957 cv
236.285 17.855 236.375 17.746 236.43 17.625 cv
236.48 17.504 236.508 17.375 236.508 17.242 cv
cp
f
243.891 16.781 mo
243.047 19.242 li
242.996 19.371 242.871 19.465 242.664 19.523 cv
242.457 19.578 242.152 19.605 241.754 19.609 cv
241.543 19.605 241.375 19.598 241.254 19.582 cv
241.129 19.562 241.039 19.531 240.977 19.492 cv
240.914 19.449 240.879 19.398 240.875 19.336 cv
240.867 19.273 240.883 19.199 240.922 19.113 cv
241.848 16.781 li
241.777 16.75 241.715 16.703 241.664 16.637 cv
241.605 16.574 241.566 16.504 241.543 16.43 cv
239.152 10.039 li
239.082 9.85901 239.047 9.72302 239.051 9.625 cv
239.047 9.53101 239.078 9.453 239.145 9.39801 cv
239.203 9.34399 239.309 9.30902 239.457 9.28497 cv
239.602 9.27002 239.797 9.258 240.047 9.25403 cv
240.266 9.258 240.445 9.26202 240.578 9.26599 cv
240.707 9.27698 240.809 9.297 240.883 9.32397 cv
240.953 9.35901 241.008 9.40601 241.047 9.46899 cv
241.082 9.53497 241.117 9.62903 241.156 9.74597 cv
242.789 14.398 li
242.813 14.398 li
244.313 9.65198 li
244.336 9.52002 244.375 9.42999 244.43 9.383 cv
244.477 9.34003 244.559 9.30902 244.676 9.28497 cv
244.785 9.27002 244.988 9.258 245.277 9.25403 cv
245.5 9.258 245.684 9.27002 245.832 9.28497 cv
245.977 9.30902 246.086 9.34802 246.16 9.40198 cv
246.227 9.46503 246.262 9.539 246.266 9.633 cv
246.262 9.72699 246.242 9.84003 246.203 9.96899 cv
cp
f
258.336 15.254 mo
258.336 15.387 258.332 15.496 258.324 15.586 cv
258.316 15.68 258.305 15.758 258.289 15.82 cv
258.273 15.887 258.25 15.945 258.227 15.988 cv
258.195 16.035 258.156 16.086 258.102 16.145 cv
258.043 16.207 257.93 16.285 257.77 16.375 cv
257.602 16.473 257.402 16.562 257.168 16.645 cv
256.93 16.734 256.66 16.801 256.359 16.859 cv
256.051 16.914 255.723 16.945 255.375 16.945 cv
254.68 16.945 254.055 16.84 253.5 16.625 cv
252.941 16.414 252.469 16.098 252.082 15.672 cv
251.691 15.25 251.395 14.719 251.188 14.086 cv
250.98 13.453 250.875 12.715 250.879 11.871 cv
250.875 11.016 250.988 10.258 251.219 9.59003 cv
251.445 8.92603 251.766 8.367 252.176 7.914 cv
252.586 7.46503 253.078 7.12097 253.652 6.88702 cv
254.227 6.65601 254.859 6.539 255.555 6.53497 cv
255.828 6.539 256.098 6.56201 256.363 6.60498 cv
256.621 6.65198 256.863 6.711 257.082 6.78497 cv
257.301 6.86298 257.5 6.953 257.68 7.047 cv
257.855 7.14801 257.977 7.22998 258.051 7.30103 cv
258.117 7.37097 258.168 7.42999 258.195 7.47699 cv
258.219 7.52301 258.238 7.586 258.258 7.65601 cv
258.27 7.73401 258.281 7.82001 258.293 7.914 cv
258.297 8.01599 258.301 8.13702 258.305 8.27698 cv
258.301 8.43701 258.297 8.57001 258.289 8.67603 cv
258.277 8.789 258.258 8.875 258.234 8.94098 cv
258.207 9.01202 258.176 9.06201 258.141 9.09003 cv
258.102 9.125 258.059 9.14099 258.016 9.13702 cv
257.934 9.14099 257.836 9.09399 257.719 9 cv
257.598 8.90997 257.441 8.80902 257.254 8.69501 cv
257.063 8.586 256.84 8.48401 256.578 8.39099 cv
256.313 8.30103 256 8.258 255.641 8.25403 cv
255.238 8.258 254.879 8.34003 254.566 8.5 cv
254.25 8.66803 253.984 8.90198 253.766 9.203 cv
253.543 9.51202 253.375 9.87903 253.262 10.309 cv
253.145 10.742 253.086 11.227 253.09 11.762 cv
253.086 12.359 253.148 12.875 253.273 13.305 cv
253.395 13.742 253.566 14.098 253.797 14.375 cv
254.02 14.656 254.293 14.863 254.613 15 cv
254.93 15.141 255.289 15.211 255.695 15.207 cv
256.055 15.211 256.371 15.168 256.637 15.078 cv
256.902 14.996 257.129 14.902 257.316 14.793 cv
257.504 14.691 257.66 14.598 257.785 14.516 cv
257.906 14.434 258 14.391 258.07 14.391 cv
258.121 14.391 258.164 14.402 258.195 14.422 cv
258.227 14.441 258.25 14.48 258.273 14.543 cv
258.289 14.605 258.305 14.695 258.32 14.805 cv
258.328 14.922 258.336 15.07 258.336 15.254 cv
cp
f
266.715 12.969 mo
266.711 13.566 266.633 14.109 266.48 14.594 cv
266.32 15.086 266.086 15.504 265.77 15.855 cv
265.453 16.207 265.055 16.48 264.578 16.672 cv
264.098 16.863 263.539 16.957 262.902 16.961 cv
262.281 16.957 261.742 16.875 261.289 16.703 cv
260.828 16.535 260.449 16.285 260.152 15.957 cv
259.848 15.633 259.625 15.23 259.48 14.75 cv
259.336 14.273 259.266 13.727 259.266 13.109 cv
259.266 12.52 259.344 11.98 259.5 11.488 cv
259.656 11 259.895 10.578 260.215 10.227 cv
260.531 9.87903 260.926 9.60498 261.402 9.40997 cv
261.875 9.21899 262.434 9.125 263.074 9.12097 cv
263.699 9.125 264.238 9.20697 264.695 9.375 cv
265.152 9.547 265.531 9.797 265.828 10.121 cv
266.125 10.449 266.348 10.852 266.496 11.328 cv
266.641 11.809 266.711 12.355 266.715 12.969 cv
cp
264.695 13.047 mo
264.691 12.711 264.664 12.395 264.613 12.102 cv
264.555 11.816 264.461 11.566 264.336 11.352 cv
264.203 11.141 264.031 10.973 263.82 10.852 cv
263.602 10.734 263.332 10.676 263.004 10.672 cv
262.715 10.676 262.461 10.73 262.242 10.832 cv
262.023 10.941 261.844 11.098 261.703 11.301 cv
261.563 11.508 261.457 11.754 261.387 12.039 cv
261.316 12.332 261.281 12.66 261.281 13.023 cv
261.281 13.371 261.309 13.687 261.367 13.973 cv
261.422 14.266 261.516 14.516 261.645 14.727 cv
261.77 14.941 261.941 15.105 262.164 15.219 cv
262.379 15.34 262.648 15.398 262.973 15.395 cv
263.266 15.398 263.523 15.344 263.746 15.234 cv
263.961 15.129 264.141 14.977 264.281 14.77 cv
264.422 14.57 264.523 14.324 264.594 14.035 cv
264.656 13.75 264.691 13.422 264.695 13.047 cv
cp
f
274.91 16.516 mo
274.906 16.57 274.891 16.613 274.863 16.652 cv
274.828 16.691 274.777 16.727 274.707 16.75 cv
274.633 16.777 274.531 16.793 274.406 16.809 cv
274.277 16.82 274.121 16.828 273.938 16.828 cv
273.742 16.828 273.582 16.82 273.457 16.809 cv
273.328 16.793 273.227 16.777 273.156 16.75 cv
273.078 16.727 273.027 16.691 273 16.652 cv
272.965 16.613 272.949 16.57 272.953 16.516 cv
272.953 12.551 li
272.949 12.215 272.926 11.949 272.879 11.754 cv
272.828 11.562 272.754 11.398 272.664 11.262 cv
272.57 11.125 272.453 11.02 272.305 10.941 cv
272.156 10.867 271.98 10.828 271.785 10.828 cv
271.531 10.828 271.281 10.922 271.027 11.102 cv
270.773 11.285 270.508 11.547 270.234 11.895 cv
270.234 16.516 li
270.23 16.57 270.215 16.613 270.188 16.652 cv
270.152 16.691 270.098 16.727 270.027 16.75 cv
269.949 16.777 269.852 16.793 269.727 16.809 cv
269.602 16.82 269.441 16.828 269.254 16.828 cv
269.059 16.828 268.902 16.82 268.777 16.809 cv
268.652 16.793 268.551 16.777 268.477 16.75 cv
268.398 16.727 268.344 16.691 268.316 16.652 cv
268.281 16.613 268.266 16.57 268.27 16.516 cv
268.27 9.56598 li
268.266 9.52002 268.281 9.47302 268.309 9.42999 cv
268.332 9.39502 268.379 9.36298 268.449 9.33197 cv
268.516 9.30902 268.602 9.289 268.711 9.27301 cv
268.816 9.26599 268.949 9.258 269.113 9.25403 cv
269.277 9.258 269.414 9.26599 269.523 9.27301 cv
269.629 9.289 269.715 9.30902 269.777 9.33197 cv
269.836 9.36298 269.879 9.39502 269.906 9.42999 cv
269.93 9.47302 269.941 9.52002 269.945 9.56598 cv
269.945 10.367 li
270.328 9.95697 270.719 9.64502 271.117 9.43402 cv
271.512 9.22699 271.93 9.125 272.363 9.12097 cv
272.832 9.125 273.23 9.203 273.559 9.35498 cv
273.883 9.51599 274.145 9.72699 274.344 9.992 cv
274.543 10.262 274.688 10.574 274.777 10.93 cv
274.863 11.289 274.906 11.719 274.91 12.223 cv
cp
f
281.734 14.551 mo
281.73 14.949 281.656 15.297 281.512 15.598 cv
281.363 15.898 281.156 16.152 280.887 16.352 cv
280.613 16.559 280.293 16.707 279.926 16.809 cv
279.559 16.906 279.156 16.957 278.727 16.961 cv
278.461 16.957 278.215 16.937 277.98 16.902 cv
277.746 16.859 277.535 16.812 277.348 16.754 cv
277.16 16.695 277.004 16.633 276.879 16.57 cv
276.754 16.508 276.66 16.449 276.605 16.395 cv
276.547 16.34 276.504 16.258 276.477 16.141 cv
276.441 16.027 276.426 15.852 276.43 15.621 cv
276.426 15.473 276.434 15.352 276.445 15.258 cv
276.453 15.168 276.469 15.098 276.492 15.039 cv
276.512 14.988 276.535 14.949 276.57 14.93 cv
276.598 14.914 276.637 14.906 276.684 14.902 cv
276.738 14.906 276.824 14.937 276.938 15 cv
277.047 15.066 277.184 15.141 277.355 15.215 cv
277.52 15.297 277.715 15.367 277.934 15.434 cv
278.152 15.504 278.402 15.539 278.688 15.535 cv
278.863 15.539 279.02 15.52 279.16 15.48 cv
279.293 15.445 279.414 15.395 279.52 15.324 cv
279.617 15.258 279.691 15.172 279.746 15.066 cv
279.793 14.965 279.82 14.844 279.824 14.707 cv
279.82 14.551 279.773 14.418 279.68 14.309 cv
279.586 14.199 279.457 14.102 279.301 14.016 cv
279.137 13.934 278.957 13.855 278.762 13.781 cv
278.559 13.711 278.355 13.633 278.145 13.539 cv
277.934 13.453 277.727 13.352 277.531 13.234 cv
277.328 13.125 277.148 12.984 276.992 12.816 cv
276.828 12.652 276.703 12.453 276.609 12.215 cv
276.516 11.984 276.469 11.703 276.469 11.371 cv
276.469 11.043 276.531 10.738 276.66 10.457 cv
276.789 10.184 276.977 9.94501 277.223 9.74597 cv
277.465 9.55103 277.762 9.39801 278.113 9.28497 cv
278.461 9.17999 278.855 9.125 279.297 9.12097 cv
279.512 9.125 279.723 9.14099 279.93 9.16803 cv
280.133 9.203 280.32 9.242 280.488 9.28497 cv
280.652 9.336 280.793 9.38702 280.91 9.43701 cv
281.023 9.49597 281.105 9.54303 281.156 9.578 cv
281.203 9.62097 281.238 9.65997 281.262 9.69501 cv
281.281 9.73798 281.293 9.78497 281.305 9.836 cv
281.313 9.89099 281.324 9.95697 281.332 10.035 cv
281.34 10.121 281.344 10.219 281.344 10.336 cv
281.344 10.477 281.34 10.594 281.332 10.68 cv
281.324 10.773 281.309 10.844 281.293 10.891 cv
281.273 10.945 281.25 10.98 281.223 10.996 cv
281.188 11.02 281.152 11.027 281.113 11.023 cv
281.063 11.027 280.988 11 280.895 10.941 cv
280.793 10.891 280.672 10.832 280.523 10.766 cv
280.375 10.707 280.203 10.648 280.008 10.59 cv
279.813 10.539 279.59 10.512 279.344 10.508 cv
279.164 10.512 279.012 10.531 278.883 10.562 cv
278.75 10.602 278.641 10.652 278.563 10.719 cv
278.477 10.789 278.414 10.867 278.375 10.957 cv
278.328 11.051 278.309 11.148 278.313 11.25 cv
278.309 11.41 278.359 11.547 278.461 11.652 cv
278.559 11.766 278.688 11.859 278.852 11.941 cv
279.012 12.027 279.195 12.105 279.402 12.176 cv
279.605 12.25 279.813 12.332 280.023 12.414 cv
280.23 12.504 280.438 12.602 280.648 12.715 cv
280.852 12.828 281.035 12.969 281.195 13.133 cv
281.355 13.301 281.484 13.5 281.586 13.73 cv
281.68 13.965 281.73 14.238 281.734 14.551 cv
cp
f
289.801 16.516 mo
289.797 16.57 289.785 16.613 289.762 16.652 cv
289.734 16.691 289.688 16.727 289.625 16.75 cv
289.559 16.777 289.473 16.793 289.367 16.809 cv
289.262 16.82 289.129 16.828 288.969 16.828 cv
288.793 16.828 288.652 16.82 288.551 16.809 cv
288.441 16.793 288.359 16.777 288.297 16.75 cv
288.234 16.727 288.188 16.691 288.164 16.652 cv
288.133 16.613 288.121 16.57 288.125 16.516 cv
288.125 15.715 li
287.738 16.129 287.348 16.441 286.953 16.648 cv
286.551 16.855 286.141 16.957 285.719 16.961 cv
285.238 16.957 284.836 16.883 284.512 16.727 cv
284.188 16.574 283.926 16.359 283.727 16.09 cv
283.523 15.82 283.379 15.508 283.297 15.148 cv
283.207 14.793 283.164 14.352 283.168 13.82 cv
283.168 9.56598 li
283.164 9.52002 283.18 9.47302 283.211 9.42999 cv
283.238 9.39502 283.289 9.36298 283.367 9.33197 cv
283.441 9.30902 283.543 9.289 283.672 9.27301 cv
283.797 9.26599 283.953 9.258 284.145 9.25403 cv
284.332 9.258 284.492 9.26599 284.617 9.27301 cv
284.742 9.289 284.84 9.30902 284.918 9.33197 cv
284.988 9.36298 285.043 9.39502 285.078 9.42999 cv
285.105 9.47302 285.121 9.52002 285.125 9.56598 cv
285.125 13.492 li
285.121 13.859 285.145 14.137 285.195 14.328 cv
285.238 14.52 285.309 14.684 285.41 14.82 cv
285.504 14.961 285.629 15.066 285.777 15.141 cv
285.926 15.219 286.098 15.258 286.293 15.254 cv
286.543 15.258 286.793 15.168 287.047 14.98 cv
287.297 14.801 287.566 14.535 287.852 14.187 cv
287.852 9.56598 li
287.852 9.52002 287.863 9.47302 287.895 9.42999 cv
287.918 9.39502 287.973 9.36298 288.051 9.33197 cv
288.125 9.30902 288.223 9.289 288.352 9.27301 cv
288.473 9.26599 288.633 9.258 288.828 9.25403 cv
289.02 9.258 289.176 9.26599 289.301 9.27301 cv
289.422 9.289 289.523 9.30902 289.598 9.33197 cv
289.668 9.36298 289.719 9.39502 289.754 9.42999 cv
289.781 9.47302 289.797 9.52002 289.801 9.56598 cv
cp
f
302.742 16.516 mo
302.738 16.57 302.723 16.613 302.695 16.652 cv
302.66 16.691 302.609 16.727 302.539 16.75 cv
302.465 16.777 302.363 16.793 302.242 16.809 cv
302.117 16.82 301.961 16.828 301.77 16.828 cv
301.57 16.828 301.41 16.82 301.285 16.809 cv
301.16 16.793 301.059 16.777 300.984 16.75 cv
300.906 16.727 300.855 16.691 300.828 16.652 cv
300.801 16.613 300.785 16.57 300.789 16.516 cv
300.789 12.395 li
300.785 12.164 300.766 11.949 300.723 11.754 cv
300.676 11.562 300.605 11.398 300.52 11.262 cv
300.426 11.125 300.313 11.02 300.176 10.941 cv
300.035 10.867 299.871 10.828 299.68 10.828 cv
299.445 10.828 299.207 10.922 298.969 11.102 cv
298.73 11.285 298.473 11.547 298.191 11.895 cv
298.191 16.516 li
298.191 16.57 298.176 16.613 298.145 16.652 cv
298.113 16.691 298.059 16.727 297.984 16.75 cv
297.906 16.777 297.805 16.793 297.684 16.809 cv
297.559 16.82 297.406 16.828 297.219 16.828 cv
297.023 16.828 296.863 16.82 296.742 16.809 cv
296.613 16.793 296.512 16.777 296.441 16.75 cv
296.363 16.727 296.313 16.691 296.281 16.652 cv
296.25 16.613 296.234 16.57 296.234 16.516 cv
296.234 12.395 li
296.234 12.164 296.211 11.949 296.168 11.754 cv
296.125 11.562 296.059 11.398 295.973 11.262 cv
295.879 11.125 295.766 11.02 295.629 10.941 cv
295.484 10.867 295.32 10.828 295.137 10.828 cv
294.895 10.828 294.656 10.922 294.418 11.102 cv
294.18 11.285 293.922 11.547 293.648 11.895 cv
293.648 16.516 li
293.645 16.57 293.629 16.613 293.602 16.652 cv
293.566 16.691 293.512 16.727 293.441 16.75 cv
293.363 16.777 293.266 16.793 293.141 16.809 cv
293.016 16.82 292.855 16.828 292.668 16.828 cv
292.473 16.828 292.316 16.82 292.191 16.809 cv
292.066 16.793 291.965 16.777 291.891 16.75 cv
291.813 16.727 291.758 16.691 291.73 16.652 cv
291.695 16.613 291.68 16.57 291.684 16.516 cv
291.684 9.56598 li
291.68 9.52002 291.695 9.47302 291.723 9.42999 cv
291.746 9.39502 291.793 9.36298 291.863 9.33197 cv
291.93 9.30902 292.016 9.289 292.125 9.27301 cv
292.23 9.26599 292.363 9.258 292.527 9.25403 cv
292.691 9.258 292.828 9.26599 292.938 9.27301 cv
293.043 9.289 293.129 9.30902 293.191 9.33197 cv
293.25 9.36298 293.293 9.39502 293.32 9.42999 cv
293.344 9.47302 293.355 9.52002 293.359 9.56598 cv
293.359 10.367 li
293.742 9.95697 294.125 9.64502 294.508 9.43402 cv
294.887 9.22699 295.289 9.125 295.707 9.12097 cv
295.992 9.125 296.246 9.15198 296.477 9.211 cv
296.703 9.27301 296.91 9.35901 297.09 9.46899 cv
297.27 9.58197 297.422 9.71899 297.551 9.87097 cv
297.68 10.027 297.789 10.199 297.879 10.391 cv
298.086 10.168 298.289 9.97699 298.492 9.81598 cv
298.688 9.65601 298.887 9.52301 299.082 9.422 cv
299.277 9.32001 299.473 9.24597 299.668 9.19501 cv
299.863 9.14801 300.063 9.125 300.266 9.12097 cv
300.727 9.125 301.113 9.203 301.434 9.35498 cv
301.746 9.51599 302.004 9.72699 302.199 9.992 cv
302.395 10.262 302.531 10.574 302.617 10.93 cv
302.695 11.289 302.738 11.668 302.742 12.066 cv
cp
f
311.66 12.937 mo
311.66 13.559 311.594 14.117 311.461 14.613 cv
311.328 15.109 311.133 15.531 310.879 15.879 cv
310.625 16.227 310.309 16.496 309.93 16.68 cv
309.547 16.867 309.113 16.957 308.629 16.961 cv
308.422 16.957 308.234 16.937 308.07 16.902 cv
307.898 16.859 307.734 16.801 307.578 16.723 cv
307.418 16.645 307.262 16.547 307.109 16.422 cv
306.949 16.305 306.789 16.164 306.625 16 cv
306.625 19.273 li
306.621 19.32 306.605 19.367 306.578 19.414 cv
306.543 19.453 306.488 19.488 306.418 19.52 cv
306.34 19.543 306.242 19.566 306.117 19.586 cv
305.992 19.598 305.832 19.605 305.645 19.609 cv
305.449 19.605 305.293 19.598 305.168 19.586 cv
305.043 19.566 304.941 19.543 304.867 19.52 cv
304.789 19.488 304.734 19.453 304.707 19.414 cv
304.672 19.367 304.656 19.32 304.66 19.273 cv
304.66 9.56598 li
304.656 9.52002 304.672 9.47302 304.699 9.42999 cv
304.723 9.39502 304.766 9.36298 304.836 9.33197 cv
304.898 9.30902 304.984 9.289 305.094 9.27301 cv
305.195 9.26599 305.332 9.258 305.496 9.25403 cv
305.652 9.258 305.781 9.26599 305.887 9.27301 cv
305.992 9.289 306.078 9.30902 306.145 9.33197 cv
306.207 9.36298 306.254 9.39502 306.281 9.42999 cv
306.305 9.47302 306.316 9.52002 306.32 9.56598 cv
306.32 10.383 li
306.52 10.176 306.719 9.99597 306.918 9.836 cv
307.109 9.67999 307.309 9.547 307.512 9.43701 cv
307.715 9.336 307.922 9.25403 308.141 9.19897 cv
308.352 9.14801 308.582 9.125 308.832 9.12097 cv
309.336 9.125 309.77 9.22302 310.133 9.422 cv
310.488 9.625 310.781 9.90198 311.008 10.246 cv
311.23 10.598 311.395 11 311.504 11.461 cv
311.605 11.922 311.66 12.414 311.66 12.937 cv
cp
309.617 13.078 mo
309.613 12.785 309.594 12.504 309.551 12.227 cv
309.504 11.957 309.426 11.715 309.324 11.5 cv
309.215 11.289 309.074 11.117 308.902 10.988 cv
308.727 10.863 308.512 10.801 308.254 10.797 cv
308.121 10.801 307.992 10.82 307.867 10.855 cv
307.738 10.898 307.609 10.961 307.477 11.047 cv
307.344 11.137 307.207 11.25 307.07 11.391 cv
306.926 11.531 306.777 11.707 306.625 11.91 cv
306.625 14.203 li
306.898 14.551 307.16 14.82 307.41 15.008 cv
307.656 15.199 307.918 15.293 308.191 15.293 cv
308.445 15.293 308.66 15.23 308.844 15.098 cv
309.02 14.973 309.168 14.801 309.281 14.59 cv
309.395 14.379 309.477 14.141 309.535 13.875 cv
309.586 13.609 309.613 13.344 309.617 13.078 cv
cp
f
317.156 15.832 mo
317.156 16.059 317.141 16.234 317.113 16.355 cv
317.082 16.48 317.043 16.566 317 16.613 cv
316.949 16.664 316.883 16.707 316.793 16.746 cv
316.699 16.785 316.59 16.816 316.473 16.848 cv
316.348 16.871 316.215 16.895 316.074 16.914 cv
315.93 16.926 315.789 16.934 315.645 16.937 cv
315.254 16.934 314.914 16.883 314.629 16.789 cv
314.344 16.687 314.109 16.539 313.922 16.332 cv
313.734 16.129 313.594 15.871 313.508 15.559 cv
313.414 15.25 313.371 14.879 313.375 14.449 cv
313.375 10.891 li
312.543 10.891 li
312.441 10.895 312.367 10.832 312.316 10.707 cv
312.262 10.586 312.234 10.383 312.238 10.094 cv
312.234 9.94501 312.242 9.81598 312.258 9.71503 cv
312.27 9.61298 312.289 9.53101 312.316 9.46899 cv
312.34 9.40997 312.371 9.367 312.414 9.34003 cv
312.449 9.31598 312.496 9.30499 312.551 9.30103 cv
313.375 9.30103 li
313.375 7.75 li
313.371 7.703 313.387 7.65601 313.418 7.60901 cv
313.445 7.57001 313.496 7.53497 313.574 7.50403 cv
313.648 7.47998 313.75 7.45697 313.879 7.44098 cv
314.004 7.42999 314.16 7.42603 314.352 7.422 cv
314.539 7.42603 314.699 7.42999 314.828 7.44098 cv
314.953 7.45697 315.055 7.47998 315.129 7.50403 cv
315.199 7.53497 315.25 7.57001 315.285 7.60901 cv
315.313 7.65601 315.328 7.703 315.332 7.75 cv
315.332 9.30103 li
316.844 9.30103 li
316.895 9.30499 316.941 9.31598 316.98 9.34003 cv
317.02 9.367 317.051 9.40997 317.078 9.46899 cv
317.102 9.53101 317.121 9.61298 317.137 9.71503 cv
317.148 9.81598 317.156 9.94501 317.156 10.094 cv
317.156 10.383 317.129 10.586 317.078 10.707 cv
317.023 10.832 316.949 10.895 316.852 10.891 cv
315.332 10.891 li
315.332 14.156 li
315.328 14.535 315.387 14.82 315.512 15.008 cv
315.629 15.199 315.844 15.293 316.148 15.293 cv
316.25 15.293 316.344 15.285 316.43 15.266 cv
316.512 15.25 316.586 15.23 316.652 15.203 cv
316.715 15.184 316.77 15.16 316.816 15.141 cv
316.859 15.125 316.898 15.117 316.938 15.113 cv
316.965 15.117 316.996 15.125 317.027 15.141 cv
317.055 15.16 317.074 15.199 317.094 15.25 cv
317.105 15.309 317.121 15.383 317.137 15.473 cv
317.148 15.57 317.156 15.687 317.156 15.832 cv
cp
f
320.539 16.516 mo
320.535 16.57 320.52 16.613 320.492 16.652 cv
320.457 16.691 320.402 16.727 320.332 16.75 cv
320.254 16.777 320.156 16.793 320.031 16.809 cv
319.906 16.82 319.746 16.828 319.559 16.828 cv
319.363 16.828 319.207 16.82 319.082 16.809 cv
318.957 16.793 318.855 16.777 318.781 16.75 cv
318.703 16.727 318.648 16.691 318.621 16.652 cv
318.586 16.613 318.57 16.57 318.574 16.516 cv
318.574 9.58197 li
318.57 9.53101 318.586 9.48401 318.621 9.44501 cv
318.648 9.40601 318.703 9.375 318.781 9.34399 cv
318.855 9.32001 318.957 9.297 319.082 9.27698 cv
319.207 9.26599 319.363 9.258 319.559 9.25403 cv
319.746 9.258 319.906 9.26599 320.031 9.27698 cv
320.156 9.297 320.254 9.32001 320.332 9.34399 cv
320.402 9.375 320.457 9.40601 320.492 9.44501 cv
320.52 9.48401 320.535 9.53101 320.539 9.58197 cv
cp
320.688 7.211 mo
320.688 7.60901 320.605 7.883 320.445 8.03101 cv
320.281 8.18402 319.984 8.258 319.551 8.25403 cv
319.105 8.258 318.805 8.18402 318.656 8.039 cv
318.5 7.89502 318.426 7.633 318.426 7.25 cv
318.426 6.85498 318.504 6.58197 318.664 6.42999 cv
318.82 6.27698 319.121 6.19897 319.566 6.19897 cv
320 6.19897 320.297 6.27301 320.453 6.422 cv
320.609 6.57001 320.688 6.836 320.688 7.211 cv
cp
f
329.531 12.969 mo
329.527 13.566 329.449 14.109 329.297 14.594 cv
329.137 15.086 328.902 15.504 328.586 15.855 cv
328.27 16.207 327.871 16.48 327.395 16.672 cv
326.914 16.863 326.355 16.957 325.719 16.961 cv
325.098 16.957 324.559 16.875 324.105 16.703 cv
323.645 16.535 323.266 16.285 322.969 15.957 cv
322.664 15.633 322.441 15.23 322.297 14.75 cv
322.152 14.273 322.082 13.727 322.082 13.109 cv
322.082 12.52 322.16 11.98 322.316 11.488 cv
322.473 11 322.711 10.578 323.031 10.227 cv
323.348 9.87903 323.742 9.60498 324.219 9.40997 cv
324.691 9.21899 325.25 9.125 325.891 9.12097 cv
326.516 9.125 327.055 9.20697 327.512 9.375 cv
327.969 9.547 328.348 9.797 328.645 10.121 cv
328.941 10.449 329.164 10.852 329.313 11.328 cv
329.457 11.809 329.527 12.355 329.531 12.969 cv
cp
327.512 13.047 mo
327.508 12.711 327.48 12.395 327.43 12.102 cv
327.371 11.816 327.277 11.566 327.152 11.352 cv
327.02 11.141 326.848 10.973 326.637 10.852 cv
326.418 10.734 326.148 10.676 325.82 10.672 cv
325.531 10.676 325.277 10.73 325.059 10.832 cv
324.84 10.941 324.66 11.098 324.52 11.301 cv
324.379 11.508 324.273 11.754 324.203 12.039 cv
324.133 12.332 324.098 12.66 324.098 13.023 cv
324.098 13.371 324.125 13.687 324.184 13.973 cv
324.238 14.266 324.332 14.516 324.461 14.727 cv
324.586 14.941 324.758 15.105 324.98 15.219 cv
325.195 15.34 325.465 15.398 325.789 15.395 cv
326.082 15.398 326.34 15.344 326.563 15.234 cv
326.777 15.129 326.957 14.977 327.098 14.77 cv
327.238 14.57 327.34 14.324 327.41 14.035 cv
327.473 13.75 327.508 13.422 327.512 13.047 cv
cp
f
337.777 16.516 mo
337.773 16.57 337.758 16.613 337.73 16.652 cv
337.695 16.691 337.645 16.727 337.574 16.75 cv
337.5 16.777 337.398 16.793 337.273 16.809 cv
337.145 16.82 336.988 16.828 336.805 16.828 cv
336.609 16.828 336.449 16.82 336.324 16.809 cv
336.195 16.793 336.094 16.777 336.023 16.75 cv
335.945 16.727 335.895 16.691 335.867 16.652 cv
335.832 16.613 335.816 16.57 335.82 16.516 cv
335.82 12.551 li
335.816 12.215 335.793 11.949 335.746 11.754 cv
335.695 11.562 335.621 11.398 335.531 11.262 cv
335.438 11.125 335.32 11.02 335.172 10.941 cv
335.023 10.867 334.848 10.828 334.652 10.828 cv
334.398 10.828 334.148 10.922 333.895 11.102 cv
333.641 11.285 333.375 11.547 333.102 11.895 cv
333.102 16.516 li
333.098 16.57 333.082 16.613 333.055 16.652 cv
333.02 16.691 332.965 16.727 332.895 16.75 cv
332.816 16.777 332.719 16.793 332.594 16.809 cv
332.469 16.82 332.309 16.828 332.121 16.828 cv
331.926 16.828 331.77 16.82 331.645 16.809 cv
331.52 16.793 331.418 16.777 331.344 16.75 cv
331.266 16.727 331.211 16.691 331.184 16.652 cv
331.148 16.613 331.133 16.57 331.137 16.516 cv
331.137 9.56598 li
331.133 9.52002 331.148 9.47302 331.176 9.42999 cv
331.199 9.39502 331.246 9.36298 331.316 9.33197 cv
331.383 9.30902 331.469 9.289 331.578 9.27301 cv
331.684 9.26599 331.816 9.258 331.98 9.25403 cv
332.145 9.258 332.281 9.26599 332.391 9.27301 cv
332.496 9.289 332.582 9.30902 332.645 9.33197 cv
332.703 9.36298 332.746 9.39502 332.773 9.42999 cv
332.797 9.47302 332.809 9.52002 332.813 9.56598 cv
332.813 10.367 li
333.195 9.95697 333.586 9.64502 333.984 9.43402 cv
334.379 9.22699 334.797 9.125 335.23 9.12097 cv
335.699 9.125 336.098 9.203 336.426 9.35498 cv
336.75 9.51599 337.012 9.72699 337.211 9.992 cv
337.41 10.262 337.555 10.574 337.645 10.93 cv
337.73 11.289 337.773 11.719 337.777 12.223 cv
cp
f
354.242 9.55103 mo
354.238 9.60901 354.23 9.67999 354.219 9.76202 cv
354.199 9.84399 354.172 9.96503 354.133 10.117 cv
352.277 16.406 li
352.25 16.496 352.215 16.57 352.176 16.621 cv
352.133 16.68 352.07 16.723 351.984 16.75 cv
351.898 16.781 351.773 16.797 351.617 16.812 cv
351.453 16.82 351.25 16.828 351 16.828 cv
350.742 16.828 350.531 16.82 350.375 16.809 cv
350.211 16.793 350.086 16.773 349.996 16.742 cv
349.902 16.715 349.836 16.672 349.797 16.613 cv
349.754 16.562 349.723 16.492 349.703 16.406 cv
348.535 12.184 li
348.52 12.113 li
348.504 12.184 li
347.43 16.406 li
347.406 16.496 347.375 16.57 347.34 16.621 cv
347.297 16.68 347.23 16.723 347.141 16.75 cv
347.043 16.781 346.918 16.797 346.758 16.812 cv
346.598 16.82 346.391 16.828 346.137 16.828 cv
345.875 16.828 345.664 16.82 345.508 16.809 cv
345.348 16.793 345.223 16.773 345.133 16.742 cv
345.039 16.715 344.973 16.672 344.934 16.613 cv
344.891 16.562 344.859 16.492 344.844 16.406 cv
343.004 10.117 li
342.953 9.96899 342.926 9.85199 342.914 9.76599 cv
342.898 9.68402 342.891 9.60901 342.895 9.55103 cv
342.891 9.5 342.906 9.45697 342.938 9.414 cv
342.965 9.37903 343.016 9.34802 343.094 9.32001 cv
343.168 9.30103 343.27 9.28101 343.395 9.27002 cv
343.52 9.26202 343.68 9.258 343.875 9.25403 cv
344.082 9.258 344.25 9.26202 344.383 9.27002 cv
344.512 9.28101 344.613 9.30103 344.688 9.32397 cv
344.758 9.35199 344.809 9.38702 344.84 9.42999 cv
344.867 9.47699 344.891 9.53101 344.906 9.59003 cv
346.285 14.691 li
346.301 14.785 li
346.316 14.691 li
347.609 9.59003 li
347.621 9.53101 347.648 9.47699 347.684 9.42999 cv
347.715 9.38702 347.766 9.35199 347.836 9.32397 cv
347.902 9.30103 347.996 9.28101 348.117 9.27002 cv
348.238 9.26202 348.395 9.258 348.59 9.25403 cv
348.781 9.258 348.938 9.26599 349.059 9.27301 cv
349.176 9.289 349.27 9.30499 349.344 9.328 cv
349.41 9.35199 349.461 9.383 349.492 9.422 cv
349.52 9.461 349.543 9.508 349.559 9.55902 cv
350.945 14.699 li
350.969 14.785 li
350.984 14.691 li
352.309 9.59003 li
352.316 9.53101 352.34 9.47699 352.371 9.42999 cv
352.402 9.38702 352.453 9.35199 352.527 9.32397 cv
352.598 9.30103 352.695 9.28101 352.82 9.27002 cv
352.941 9.26202 353.102 9.258 353.297 9.25403 cv
353.488 9.258 353.645 9.26202 353.77 9.27002 cv
353.891 9.28101 353.988 9.30103 354.059 9.32001 cv
354.129 9.34802 354.176 9.37903 354.203 9.414 cv
354.227 9.45697 354.238 9.5 354.242 9.55103 cv
cp
f
357.457 16.516 mo
357.453 16.57 357.438 16.613 357.41 16.652 cv
357.375 16.691 357.32 16.727 357.25 16.75 cv
357.172 16.777 357.074 16.793 356.949 16.809 cv
356.824 16.82 356.664 16.828 356.477 16.828 cv
356.281 16.828 356.125 16.82 356 16.809 cv
355.875 16.793 355.773 16.777 355.699 16.75 cv
355.621 16.727 355.566 16.691 355.539 16.652 cv
355.504 16.613 355.488 16.57 355.492 16.516 cv
355.492 9.58197 li
355.488 9.53101 355.504 9.48401 355.539 9.44501 cv
355.566 9.40601 355.621 9.375 355.699 9.34399 cv
355.773 9.32001 355.875 9.297 356 9.27698 cv
356.125 9.26599 356.281 9.258 356.477 9.25403 cv
356.664 9.258 356.824 9.26599 356.949 9.27698 cv
357.074 9.297 357.172 9.32001 357.25 9.34399 cv
357.32 9.375 357.375 9.40601 357.41 9.44501 cv
357.438 9.48401 357.453 9.53101 357.457 9.58197 cv
cp
357.605 7.211 mo
357.605 7.60901 357.523 7.883 357.363 8.03101 cv
357.199 8.18402 356.902 8.258 356.469 8.25403 cv
356.023 8.258 355.723 8.18402 355.574 8.039 cv
355.418 7.89502 355.344 7.633 355.344 7.25 cv
355.344 6.85498 355.422 6.58197 355.582 6.42999 cv
355.738 6.27698 356.039 6.19897 356.484 6.19897 cv
356.918 6.19897 357.215 6.27301 357.371 6.422 cv
357.527 6.57001 357.605 6.836 357.605 7.211 cv
cp
f
363.535 15.832 mo
363.535 16.059 363.52 16.234 363.492 16.355 cv
363.461 16.48 363.422 16.566 363.379 16.613 cv
363.328 16.664 363.262 16.707 363.172 16.746 cv
363.078 16.785 362.969 16.816 362.852 16.848 cv
362.727 16.871 362.594 16.895 362.453 16.914 cv
362.309 16.926 362.168 16.934 362.023 16.937 cv
361.633 16.934 361.293 16.883 361.008 16.789 cv
360.723 16.687 360.488 16.539 360.301 16.332 cv
360.113 16.129 359.973 15.871 359.887 15.559 cv
359.793 15.25 359.75 14.879 359.754 14.449 cv
359.754 10.891 li
358.922 10.891 li
358.82 10.895 358.746 10.832 358.695 10.707 cv
358.641 10.586 358.613 10.383 358.617 10.094 cv
358.613 9.94501 358.621 9.81598 358.637 9.71503 cv
358.648 9.61298 358.668 9.53101 358.695 9.46899 cv
358.719 9.40997 358.75 9.367 358.793 9.34003 cv
358.828 9.31598 358.875 9.30499 358.93 9.30103 cv
359.754 9.30103 li
359.754 7.75 li
359.75 7.703 359.766 7.65601 359.797 7.60901 cv
359.824 7.57001 359.875 7.53497 359.953 7.50403 cv
360.027 7.47998 360.129 7.45697 360.258 7.44098 cv
360.383 7.42999 360.539 7.42603 360.73 7.422 cv
360.918 7.42603 361.078 7.42999 361.207 7.44098 cv
361.332 7.45697 361.434 7.47998 361.508 7.50403 cv
361.578 7.53497 361.629 7.57001 361.664 7.60901 cv
361.691 7.65601 361.707 7.703 361.711 7.75 cv
361.711 9.30103 li
363.223 9.30103 li
363.273 9.30499 363.32 9.31598 363.359 9.34003 cv
363.398 9.367 363.43 9.40997 363.457 9.46899 cv
363.48 9.53101 363.5 9.61298 363.516 9.71503 cv
363.527 9.81598 363.535 9.94501 363.535 10.094 cv
363.535 10.383 363.508 10.586 363.457 10.707 cv
363.402 10.832 363.328 10.895 363.23 10.891 cv
361.711 10.891 li
361.711 14.156 li
361.707 14.535 361.766 14.82 361.891 15.008 cv
362.008 15.199 362.223 15.293 362.527 15.293 cv
362.629 15.293 362.723 15.285 362.809 15.266 cv
362.891 15.25 362.965 15.23 363.031 15.203 cv
363.094 15.184 363.148 15.16 363.195 15.141 cv
363.238 15.125 363.277 15.117 363.316 15.113 cv
363.344 15.117 363.375 15.125 363.406 15.141 cv
363.434 15.16 363.453 15.199 363.473 15.25 cv
363.484 15.309 363.5 15.383 363.516 15.473 cv
363.527 15.57 363.535 15.687 363.535 15.832 cv
cp
f
371.598 16.516 mo
371.594 16.57 371.578 16.613 371.551 16.652 cv
371.516 16.691 371.465 16.727 371.395 16.75 cv
371.32 16.777 371.219 16.793 371.094 16.809 cv
370.965 16.82 370.809 16.828 370.625 16.828 cv
370.43 16.828 370.27 16.82 370.145 16.809 cv
370.016 16.793 369.914 16.777 369.844 16.75 cv
369.766 16.727 369.715 16.691 369.688 16.652 cv
369.652 16.613 369.637 16.57 369.641 16.516 cv
369.641 12.551 li
369.637 12.215 369.613 11.949 369.566 11.754 cv
369.516 11.562 369.441 11.398 369.352 11.262 cv
369.258 11.125 369.141 11.02 368.992 10.941 cv
368.844 10.867 368.668 10.828 368.473 10.828 cv
368.219 10.828 367.969 10.922 367.715 11.102 cv
367.461 11.285 367.195 11.547 366.922 11.895 cv
366.922 16.516 li
366.918 16.57 366.902 16.613 366.875 16.652 cv
366.84 16.691 366.785 16.727 366.715 16.75 cv
366.637 16.777 366.539 16.793 366.414 16.809 cv
366.289 16.82 366.129 16.828 365.941 16.828 cv
365.746 16.828 365.59 16.82 365.465 16.809 cv
365.34 16.793 365.238 16.777 365.164 16.75 cv
365.086 16.727 365.031 16.691 365.004 16.652 cv
364.969 16.613 364.953 16.57 364.957 16.516 cv
364.957 6.27002 li
364.953 6.21899 364.969 6.172 365.004 6.12903 cv
365.031 6.09003 365.086 6.05499 365.164 6.02301 cv
365.238 5.99597 365.34 5.97699 365.465 5.95697 cv
365.59 5.94501 365.746 5.93701 365.941 5.93402 cv
366.129 5.93701 366.289 5.94501 366.414 5.95697 cv
366.539 5.97699 366.637 5.99597 366.715 6.02301 cv
366.785 6.05499 366.84 6.09003 366.875 6.12903 cv
366.902 6.172 366.918 6.21899 366.922 6.27002 cv
366.922 10.109 li
367.258 9.78101 367.602 9.53497 367.953 9.367 cv
368.301 9.20697 368.668 9.125 369.051 9.12097 cv
369.52 9.125 369.918 9.203 370.246 9.35498 cv
370.57 9.51599 370.832 9.72699 371.031 9.99597 cv
371.23 10.266 371.375 10.582 371.465 10.941 cv
371.551 11.305 371.594 11.742 371.598 12.254 cv
cp
f
382.957 7.539 mo
382.953 7.69897 382.949 7.828 382.938 7.93402 cv
382.922 8.04303 382.898 8.12903 382.875 8.18701 cv
382.844 8.25 382.813 8.297 382.777 8.32397 cv
382.738 8.35901 382.695 8.375 382.652 8.37097 cv
379.355 8.37097 li
379.355 11.086 li
382.449 11.086 li
382.492 11.086 382.535 11.102 382.574 11.125 cv
382.609 11.156 382.641 11.199 382.672 11.258 cv
382.699 11.32 382.719 11.402 382.734 11.504 cv
382.742 11.609 382.75 11.738 382.754 11.895 cv
382.75 12.051 382.742 12.184 382.734 12.285 cv
382.719 12.395 382.699 12.48 382.672 12.543 cv
382.641 12.613 382.609 12.66 382.574 12.687 cv
382.535 12.719 382.492 12.734 382.449 12.73 cv
379.355 12.73 li
379.355 16.484 li
379.352 16.543 379.336 16.594 379.309 16.633 cv
379.273 16.68 379.219 16.715 379.141 16.738 cv
379.059 16.77 378.953 16.789 378.824 16.805 cv
378.691 16.82 378.523 16.828 378.328 16.828 cv
378.125 16.828 377.961 16.82 377.832 16.805 cv
377.695 16.789 377.59 16.77 377.516 16.738 cv
377.434 16.715 377.379 16.68 377.348 16.633 cv
377.313 16.594 377.293 16.543 377.297 16.484 cv
377.297 7.34399 li
377.293 7.117 377.352 6.953 377.473 6.84802 cv
377.586 6.75 377.73 6.69897 377.906 6.69501 cv
382.652 6.69501 li
382.695 6.69897 382.738 6.711 382.777 6.73798 cv
382.813 6.77002 382.844 6.81598 382.875 6.87903 cv
382.898 6.94501 382.922 7.03497 382.938 7.14099 cv
382.949 7.25403 382.953 7.38702 382.957 7.539 cv
cp
f
391.297 12.969 mo
391.293 13.566 391.215 14.109 391.063 14.594 cv
390.902 15.086 390.668 15.504 390.352 15.855 cv
390.035 16.207 389.637 16.48 389.16 16.672 cv
388.68 16.863 388.121 16.957 387.484 16.961 cv
386.863 16.957 386.324 16.875 385.871 16.703 cv
385.41 16.535 385.031 16.285 384.734 15.957 cv
384.43 15.633 384.207 15.23 384.063 14.75 cv
383.918 14.273 383.848 13.727 383.848 13.109 cv
383.848 12.52 383.926 11.98 384.082 11.488 cv
384.238 11 384.477 10.578 384.797 10.227 cv
385.113 9.87903 385.508 9.60498 385.984 9.40997 cv
386.457 9.21899 387.016 9.125 387.656 9.12097 cv
388.281 9.125 388.82 9.20697 389.277 9.375 cv
389.734 9.547 390.113 9.797 390.41 10.121 cv
390.707 10.449 390.93 10.852 391.078 11.328 cv
391.223 11.809 391.293 12.355 391.297 12.969 cv
cp
389.277 13.047 mo
389.273 12.711 389.246 12.395 389.195 12.102 cv
389.137 11.816 389.043 11.566 388.918 11.352 cv
388.785 11.141 388.613 10.973 388.402 10.852 cv
388.184 10.734 387.914 10.676 387.586 10.672 cv
387.297 10.676 387.043 10.73 386.824 10.832 cv
386.605 10.941 386.426 11.098 386.285 11.301 cv
386.145 11.508 386.039 11.754 385.969 12.039 cv
385.898 12.332 385.863 12.66 385.863 13.023 cv
385.863 13.371 385.891 13.687 385.949 13.973 cv
386.004 14.266 386.098 14.516 386.227 14.727 cv
386.352 14.941 386.523 15.105 386.746 15.219 cv
386.961 15.34 387.23 15.398 387.555 15.395 cv
387.848 15.398 388.105 15.344 388.328 15.234 cv
388.543 15.129 388.723 14.977 388.863 14.77 cv
389.004 14.57 389.105 14.324 389.176 14.035 cv
389.238 13.75 389.273 13.422 389.277 13.047 cv
cp
f
399.48 16.516 mo
399.477 16.57 399.465 16.613 399.441 16.652 cv
399.414 16.691 399.367 16.727 399.305 16.75 cv
399.238 16.777 399.152 16.793 399.047 16.809 cv
398.941 16.82 398.809 16.828 398.648 16.828 cv
398.473 16.828 398.332 16.82 398.23 16.809 cv
398.121 16.793 398.039 16.777 397.977 16.75 cv
397.914 16.727 397.867 16.691 397.844 16.652 cv
397.813 16.613 397.801 16.57 397.805 16.516 cv
397.805 15.715 li
397.418 16.129 397.027 16.441 396.633 16.648 cv
396.23 16.855 395.82 16.957 395.398 16.961 cv
394.918 16.957 394.516 16.883 394.191 16.727 cv
393.867 16.574 393.605 16.359 393.406 16.09 cv
393.203 15.82 393.059 15.508 392.977 15.148 cv
392.887 14.793 392.844 14.352 392.848 13.82 cv
392.848 9.56598 li
392.844 9.52002 392.859 9.47302 392.891 9.42999 cv
392.918 9.39502 392.969 9.36298 393.047 9.33197 cv
393.121 9.30902 393.223 9.289 393.352 9.27301 cv
393.477 9.26599 393.633 9.258 393.824 9.25403 cv
394.012 9.258 394.172 9.26599 394.297 9.27301 cv
394.422 9.289 394.52 9.30902 394.598 9.33197 cv
394.668 9.36298 394.723 9.39502 394.758 9.42999 cv
394.785 9.47302 394.801 9.52002 394.805 9.56598 cv
394.805 13.492 li
394.801 13.859 394.824 14.137 394.875 14.328 cv
394.918 14.52 394.988 14.684 395.09 14.82 cv
395.184 14.961 395.309 15.066 395.457 15.141 cv
395.605 15.219 395.777 15.258 395.973 15.254 cv
396.223 15.258 396.473 15.168 396.727 14.98 cv
396.977 14.801 397.246 14.535 397.531 14.187 cv
397.531 9.56598 li
397.531 9.52002 397.543 9.47302 397.574 9.42999 cv
397.598 9.39502 397.652 9.36298 397.73 9.33197 cv
397.805 9.30902 397.902 9.289 398.031 9.27301 cv
398.152 9.26599 398.313 9.258 398.508 9.25403 cv
398.699 9.258 398.855 9.26599 398.98 9.27301 cv
399.102 9.289 399.203 9.30902 399.277 9.33197 cv
399.348 9.36298 399.398 9.39502 399.434 9.42999 cv
399.461 9.47302 399.477 9.52002 399.48 9.56598 cv
cp
f
405.875 10.211 mo
405.875 10.402 405.867 10.555 405.859 10.672 cv
405.844 10.793 405.828 10.887 405.813 10.953 cv
405.789 11.023 405.762 11.07 405.73 11.094 cv
405.691 11.121 405.648 11.133 405.602 11.133 cv
405.555 11.133 405.508 11.125 405.461 11.105 cv
405.406 11.09 405.348 11.07 405.285 11.047 cv
405.215 11.027 405.145 11.008 405.07 10.988 cv
404.988 10.973 404.902 10.965 404.813 10.961 cv
404.699 10.965 404.59 10.984 404.484 11.027 cv
404.375 11.074 404.262 11.145 404.148 11.234 cv
404.027 11.328 403.906 11.453 403.781 11.605 cv
403.652 11.766 403.516 11.957 403.371 12.184 cv
403.371 16.516 li
403.367 16.57 403.352 16.613 403.324 16.652 cv
403.289 16.691 403.234 16.727 403.164 16.75 cv
403.086 16.777 402.988 16.793 402.863 16.809 cv
402.738 16.82 402.578 16.828 402.391 16.828 cv
402.195 16.828 402.039 16.82 401.914 16.809 cv
401.789 16.793 401.688 16.777 401.613 16.75 cv
401.535 16.727 401.48 16.691 401.453 16.652 cv
401.418 16.613 401.402 16.57 401.406 16.516 cv
401.406 9.56598 li
401.402 9.52002 401.418 9.47302 401.445 9.42999 cv
401.469 9.39502 401.516 9.36298 401.586 9.33197 cv
401.652 9.30902 401.738 9.289 401.848 9.27301 cv
401.953 9.26599 402.086 9.258 402.25 9.25403 cv
402.414 9.258 402.551 9.26599 402.66 9.27301 cv
402.766 9.289 402.852 9.30902 402.914 9.33197 cv
402.973 9.36298 403.016 9.39502 403.043 9.42999 cv
403.066 9.47302 403.078 9.52002 403.082 9.56598 cv
403.082 10.43 li
403.262 10.172 403.434 9.961 403.598 9.789 cv
403.754 9.625 403.91 9.48798 404.059 9.38702 cv
404.203 9.289 404.348 9.22302 404.492 9.17999 cv
404.637 9.14502 404.781 9.125 404.93 9.12097 cv
404.996 9.125 405.07 9.12903 405.148 9.133 cv
405.227 9.14502 405.305 9.15601 405.391 9.172 cv
405.469 9.19098 405.543 9.211 405.609 9.23401 cv
405.668 9.258 405.715 9.28497 405.746 9.30902 cv
405.773 9.34003 405.793 9.367 405.809 9.39502 cv
405.82 9.42999 405.832 9.47302 405.844 9.52301 cv
405.852 9.58197 405.859 9.664 405.867 9.77002 cv
405.871 9.87903 405.875 10.027 405.875 10.211 cv
cp
f
417.699 7.539 mo
417.695 7.69501 417.688 7.82397 417.68 7.92603 cv
417.664 8.03497 417.645 8.12097 417.621 8.18402 cv
417.59 8.25 417.559 8.297 417.523 8.32397 cv
417.48 8.35901 417.438 8.375 417.395 8.37097 cv
414.871 8.37097 li
414.871 16.5 li
414.871 16.555 414.852 16.602 414.82 16.641 cv
414.781 16.684 414.727 16.719 414.652 16.742 cv
414.57 16.77 414.465 16.789 414.336 16.805 cv
414.199 16.82 414.035 16.828 413.84 16.828 cv
413.645 16.828 413.48 16.82 413.348 16.805 cv
413.215 16.789 413.109 16.77 413.031 16.742 cv
412.953 16.719 412.895 16.684 412.863 16.641 cv
412.824 16.602 412.809 16.555 412.813 16.5 cv
412.813 8.37097 li
410.289 8.37097 li
410.234 8.375 410.188 8.35901 410.156 8.32397 cv
410.117 8.297 410.086 8.25 410.063 8.18402 cv
410.031 8.12097 410.012 8.03497 410.004 7.92603 cv
409.988 7.82397 409.984 7.69501 409.984 7.539 cv
409.984 7.38702 409.988 7.25403 410.004 7.14099 cv
410.012 7.03497 410.031 6.94501 410.063 6.87903 cv
410.086 6.81598 410.117 6.77002 410.156 6.73798 cv
410.188 6.711 410.234 6.69897 410.289 6.69501 cv
417.395 6.69501 li
417.438 6.69897 417.48 6.711 417.523 6.73798 cv
417.559 6.77002 417.59 6.81598 417.621 6.87903 cv
417.645 6.94501 417.664 7.03497 417.68 7.14099 cv
417.688 7.25403 417.695 7.38702 417.699 7.539 cv
cp
f
425.414 16.516 mo
425.41 16.57 425.395 16.613 425.367 16.652 cv
425.332 16.691 425.281 16.727 425.211 16.75 cv
425.137 16.777 425.035 16.793 424.91 16.809 cv
424.781 16.82 424.625 16.828 424.441 16.828 cv
424.246 16.828 424.086 16.82 423.961 16.809 cv
423.832 16.793 423.73 16.777 423.66 16.75 cv
423.582 16.727 423.531 16.691 423.504 16.652 cv
423.469 16.613 423.453 16.57 423.457 16.516 cv
423.457 12.551 li
423.453 12.215 423.43 11.949 423.383 11.754 cv
423.332 11.562 423.258 11.398 423.168 11.262 cv
423.074 11.125 422.957 11.02 422.809 10.941 cv
422.66 10.867 422.484 10.828 422.289 10.828 cv
422.035 10.828 421.785 10.922 421.531 11.102 cv
421.277 11.285 421.012 11.547 420.738 11.895 cv
420.738 16.516 li
420.734 16.57 420.719 16.613 420.691 16.652 cv
420.656 16.691 420.602 16.727 420.531 16.75 cv
420.453 16.777 420.355 16.793 420.23 16.809 cv
420.105 16.82 419.945 16.828 419.758 16.828 cv
419.563 16.828 419.406 16.82 419.281 16.809 cv
419.156 16.793 419.055 16.777 418.98 16.75 cv
418.902 16.727 418.848 16.691 418.82 16.652 cv
418.785 16.613 418.77 16.57 418.773 16.516 cv
418.773 6.27002 li
418.77 6.21899 418.785 6.172 418.82 6.12903 cv
418.848 6.09003 418.902 6.05499 418.98 6.02301 cv
419.055 5.99597 419.156 5.97699 419.281 5.95697 cv
419.406 5.94501 419.563 5.93701 419.758 5.93402 cv
419.945 5.93701 420.105 5.94501 420.23 5.95697 cv
420.355 5.97699 420.453 5.99597 420.531 6.02301 cv
420.602 6.05499 420.656 6.09003 420.691 6.12903 cv
420.719 6.172 420.734 6.21899 420.738 6.27002 cv
420.738 10.109 li
421.074 9.78101 421.418 9.53497 421.77 9.367 cv
422.117 9.20697 422.484 9.125 422.867 9.12097 cv
423.336 9.125 423.734 9.203 424.063 9.35498 cv
424.387 9.51599 424.648 9.72699 424.848 9.99597 cv
425.047 10.266 425.191 10.582 425.281 10.941 cv
425.367 11.305 425.41 11.742 425.414 12.254 cv
cp
f
431.813 10.211 mo
431.813 10.402 431.805 10.555 431.797 10.672 cv
431.781 10.793 431.766 10.887 431.75 10.953 cv
431.727 11.023 431.699 11.07 431.668 11.094 cv
431.629 11.121 431.586 11.133 431.539 11.133 cv
431.492 11.133 431.445 11.125 431.398 11.105 cv
431.344 11.09 431.285 11.07 431.223 11.047 cv
431.152 11.027 431.082 11.008 431.008 10.988 cv
430.926 10.973 430.84 10.965 430.75 10.961 cv
430.637 10.965 430.527 10.984 430.422 11.027 cv
430.313 11.074 430.199 11.145 430.086 11.234 cv
429.965 11.328 429.844 11.453 429.719 11.605 cv
429.59 11.766 429.453 11.957 429.309 12.184 cv
429.309 16.516 li
429.305 16.57 429.289 16.613 429.262 16.652 cv
429.227 16.691 429.172 16.727 429.102 16.75 cv
429.023 16.777 428.926 16.793 428.801 16.809 cv
428.676 16.82 428.516 16.828 428.328 16.828 cv
428.133 16.828 427.977 16.82 427.852 16.809 cv
427.727 16.793 427.625 16.777 427.551 16.75 cv
427.473 16.727 427.418 16.691 427.391 16.652 cv
427.355 16.613 427.34 16.57 427.344 16.516 cv
427.344 9.56598 li
427.34 9.52002 427.355 9.47302 427.383 9.42999 cv
427.406 9.39502 427.453 9.36298 427.523 9.33197 cv
427.59 9.30902 427.676 9.289 427.785 9.27301 cv
427.891 9.26599 428.023 9.258 428.188 9.25403 cv
428.352 9.258 428.488 9.26599 428.598 9.27301 cv
428.703 9.289 428.789 9.30902 428.852 9.33197 cv
428.91 9.36298 428.953 9.39502 428.98 9.42999 cv
429.004 9.47302 429.016 9.52002 429.02 9.56598 cv
429.02 10.43 li
429.199 10.172 429.371 9.961 429.535 9.789 cv
429.691 9.625 429.848 9.48798 429.996 9.38702 cv
430.141 9.289 430.285 9.22302 430.43 9.17999 cv
430.574 9.14502 430.719 9.125 430.867 9.12097 cv
430.934 9.125 431.008 9.12903 431.086 9.133 cv
431.164 9.14502 431.242 9.15601 431.328 9.172 cv
431.406 9.19098 431.48 9.211 431.547 9.23401 cv
431.605 9.258 431.652 9.28497 431.684 9.30902 cv
431.711 9.34003 431.73 9.367 431.746 9.39502 cv
431.758 9.42999 431.77 9.47302 431.781 9.52301 cv
431.789 9.58197 431.797 9.664 431.805 9.77002 cv
431.809 9.87903 431.813 10.027 431.813 10.211 cv
cp
f
439.254 12.84 mo
439.25 13.078 439.199 13.254 439.094 13.367 cv
438.984 13.484 438.836 13.543 438.656 13.539 cv
434.422 13.539 li
434.418 13.84 434.453 14.109 434.527 14.348 cv
434.594 14.59 434.707 14.793 434.863 14.961 cv
435.016 15.133 435.211 15.262 435.453 15.348 cv
435.691 15.437 435.98 15.48 436.324 15.48 cv
436.664 15.48 436.965 15.457 437.227 15.406 cv
437.484 15.359 437.711 15.305 437.902 15.242 cv
438.09 15.184 438.246 15.129 438.375 15.078 cv
438.496 15.031 438.598 15.008 438.68 15.004 cv
438.723 15.008 438.762 15.016 438.797 15.031 cv
438.824 15.051 438.852 15.082 438.871 15.129 cv
438.891 15.176 438.902 15.242 438.914 15.328 cv
438.918 15.414 438.922 15.523 438.926 15.652 cv
438.922 15.77 438.922 15.867 438.918 15.945 cv
438.91 16.027 438.902 16.094 438.895 16.148 cv
438.883 16.207 438.867 16.258 438.848 16.293 cv
438.828 16.336 438.801 16.371 438.77 16.406 cv
438.734 16.445 438.641 16.496 438.492 16.555 cv
438.336 16.621 438.145 16.684 437.914 16.738 cv
437.676 16.801 437.406 16.848 437.109 16.895 cv
436.805 16.934 436.484 16.957 436.145 16.961 cv
435.523 16.957 434.98 16.883 434.52 16.727 cv
434.051 16.574 433.664 16.336 433.355 16.02 cv
433.039 15.703 432.805 15.305 432.656 14.82 cv
432.5 14.34 432.426 13.773 432.43 13.117 cv
432.426 12.504 432.504 11.945 432.668 11.449 cv
432.824 10.953 433.059 10.535 433.371 10.187 cv
433.676 9.84399 434.051 9.578 434.488 9.39502 cv
434.926 9.21503 435.418 9.125 435.973 9.12097 cv
436.551 9.125 437.051 9.211 437.465 9.37903 cv
437.879 9.55499 438.215 9.79303 438.48 10.094 cv
438.742 10.398 438.938 10.758 439.066 11.172 cv
439.188 11.59 439.25 12.039 439.254 12.527 cv
cp
437.352 12.277 mo
437.363 11.727 437.254 11.293 437.02 10.98 cv
436.785 10.668 436.418 10.512 435.926 10.508 cv
435.676 10.512 435.461 10.559 435.277 10.648 cv
435.09 10.746 434.938 10.871 434.816 11.027 cv
434.691 11.187 434.598 11.375 434.535 11.59 cv
434.469 11.805 434.43 12.035 434.422 12.277 cv
cp
f
446.785 16.539 mo
446.781 16.617 446.754 16.672 446.707 16.711 cv
446.652 16.754 446.57 16.781 446.461 16.801 cv
446.344 16.816 446.18 16.828 445.965 16.828 cv
445.727 16.828 445.555 16.816 445.453 16.801 cv
445.344 16.781 445.27 16.754 445.23 16.711 cv
445.184 16.672 445.164 16.617 445.164 16.539 cv
445.164 15.988 li
444.875 16.297 444.547 16.535 444.184 16.703 cv
443.816 16.875 443.41 16.957 442.965 16.961 cv
442.594 16.957 442.254 16.91 441.945 16.816 cv
441.637 16.723 441.371 16.582 441.145 16.387 cv
440.918 16.199 440.742 15.965 440.617 15.684 cv
440.492 15.406 440.43 15.078 440.434 14.699 cv
440.43 14.301 440.508 13.949 440.668 13.645 cv
440.824 13.348 441.063 13.102 441.379 12.906 cv
441.691 12.715 442.082 12.57 442.551 12.473 cv
443.02 12.383 443.563 12.336 444.18 12.332 cv
444.859 12.332 li
444.859 11.91 li
444.859 11.695 444.836 11.504 444.793 11.34 cv
444.746 11.18 444.672 11.043 444.574 10.93 cv
444.469 10.824 444.336 10.742 444.168 10.687 cv
443.996 10.637 443.785 10.613 443.543 10.609 cv
443.211 10.613 442.918 10.648 442.664 10.719 cv
442.402 10.793 442.176 10.875 441.98 10.961 cv
441.781 11.055 441.617 11.133 441.488 11.203 cv
441.352 11.277 441.242 11.316 441.164 11.312 cv
441.102 11.316 441.051 11.297 441.012 11.258 cv
440.965 11.223 440.93 11.172 440.902 11.102 cv
440.871 11.039 440.848 10.953 440.836 10.852 cv
440.816 10.754 440.809 10.645 440.813 10.523 cv
440.809 10.363 440.824 10.238 440.852 10.141 cv
440.875 10.051 440.922 9.96503 441 9.88702 cv
441.07 9.81201 441.199 9.72998 441.383 9.64099 cv
441.563 9.55103 441.773 9.46503 442.02 9.38702 cv
442.262 9.30902 442.531 9.24597 442.82 9.19501 cv
443.109 9.14801 443.406 9.125 443.715 9.12097 cv
444.258 9.125 444.723 9.17603 445.109 9.28101 cv
445.496 9.39099 445.816 9.55499 446.066 9.77301 cv
446.316 9.992 446.496 10.277 446.613 10.625 cv
446.723 10.977 446.781 11.391 446.785 11.863 cv
cp
444.859 13.562 mo
444.109 13.562 li
443.793 13.566 443.523 13.59 443.301 13.633 cv
443.074 13.684 442.891 13.754 442.754 13.844 cv
442.609 13.941 442.508 14.055 442.445 14.184 cv
442.379 14.32 442.344 14.469 442.348 14.637 cv
442.344 14.93 442.438 15.16 442.625 15.324 cv
442.809 15.492 443.066 15.574 443.395 15.574 cv
443.668 15.574 443.918 15.504 444.152 15.363 cv
444.379 15.223 444.617 15.02 444.859 14.746 cv
cp
f
455.371 16.516 mo
455.367 16.578 455.355 16.625 455.332 16.66 cv
455.305 16.703 455.258 16.734 455.199 16.758 cv
455.133 16.781 455.051 16.797 454.945 16.812 cv
454.84 16.82 454.707 16.828 454.555 16.828 cv
454.383 16.828 454.25 16.82 454.148 16.812 cv
454.043 16.797 453.957 16.781 453.895 16.758 cv
453.828 16.734 453.781 16.703 453.754 16.66 cv
453.723 16.625 453.707 16.578 453.711 16.516 cv
453.711 15.746 li
453.352 16.133 452.977 16.43 452.586 16.641 cv
452.188 16.852 451.754 16.957 451.281 16.961 cv
450.746 16.957 450.297 16.855 449.934 16.652 cv
449.566 16.449 449.27 16.176 449.039 15.824 cv
448.805 15.48 448.637 15.074 448.535 14.605 cv
448.434 14.145 448.383 13.652 448.383 13.133 cv
448.383 12.52 448.445 11.965 448.578 11.469 cv
448.707 10.977 448.902 10.555 449.16 10.207 cv
449.414 9.85901 449.73 9.59399 450.109 9.40198 cv
450.488 9.21899 450.926 9.125 451.422 9.12097 cv
451.809 9.125 452.16 9.203 452.48 9.35901 cv
452.793 9.52002 453.109 9.75 453.422 10.055 cv
453.422 6.29303 li
453.422 6.242 453.434 6.19501 453.465 6.15198 cv
453.488 6.11298 453.543 6.078 453.621 6.047 cv
453.695 6.02002 453.793 6 453.922 5.97998 cv
454.043 5.96899 454.203 5.961 454.398 5.95697 cv
454.59 5.961 454.746 5.96899 454.871 5.97998 cv
454.992 6 455.094 6.02002 455.168 6.047 cv
455.238 6.078 455.289 6.11298 455.324 6.15198 cv
455.352 6.19501 455.367 6.242 455.371 6.29303 cv
cp
453.422 11.871 mo
453.141 11.52 452.871 11.25 452.617 11.062 cv
452.355 10.875 452.086 10.781 451.809 10.781 cv
451.555 10.781 451.336 10.848 451.152 10.973 cv
450.965 11.105 450.816 11.273 450.707 11.484 cv
450.594 11.695 450.512 11.934 450.457 12.195 cv
450.402 12.461 450.375 12.73 450.375 13 cv
450.375 13.297 450.398 13.578 450.445 13.852 cv
450.492 14.129 450.566 14.375 450.676 14.59 cv
450.777 14.805 450.922 14.977 451.102 15.105 cv
451.277 15.238 451.5 15.305 451.77 15.301 cv
451.902 15.305 452.031 15.285 452.164 15.242 cv
452.289 15.207 452.422 15.145 452.555 15.051 cv
452.688 14.965 452.824 14.848 452.965 14.703 cv
453.105 14.562 453.258 14.387 453.422 14.18 cv
cp
f
462.195 14.551 mo
462.191 14.949 462.117 15.297 461.973 15.598 cv
461.824 15.898 461.617 16.152 461.348 16.352 cv
461.074 16.559 460.754 16.707 460.387 16.809 cv
460.02 16.906 459.617 16.957 459.188 16.961 cv
458.922 16.957 458.676 16.937 458.441 16.902 cv
458.207 16.859 457.996 16.812 457.809 16.754 cv
457.621 16.695 457.465 16.633 457.34 16.57 cv
457.215 16.508 457.121 16.449 457.066 16.395 cv
457.008 16.34 456.965 16.258 456.938 16.141 cv
456.902 16.027 456.887 15.852 456.891 15.621 cv
456.887 15.473 456.895 15.352 456.906 15.258 cv
456.914 15.168 456.93 15.098 456.953 15.039 cv
456.973 14.988 456.996 14.949 457.031 14.93 cv
457.059 14.914 457.098 14.906 457.145 14.902 cv
457.199 14.906 457.285 14.937 457.398 15 cv
457.508 15.066 457.645 15.141 457.816 15.215 cv
457.98 15.297 458.176 15.367 458.395 15.434 cv
458.613 15.504 458.863 15.539 459.148 15.535 cv
459.324 15.539 459.48 15.52 459.621 15.48 cv
459.754 15.445 459.875 15.395 459.98 15.324 cv
460.078 15.258 460.152 15.172 460.207 15.066 cv
460.254 14.965 460.281 14.844 460.285 14.707 cv
460.281 14.551 460.234 14.418 460.141 14.309 cv
460.047 14.199 459.918 14.102 459.762 14.016 cv
459.598 13.934 459.418 13.855 459.223 13.781 cv
459.02 13.711 458.816 13.633 458.605 13.539 cv
458.395 13.453 458.188 13.352 457.992 13.234 cv
457.789 13.125 457.609 12.984 457.453 12.816 cv
457.289 12.652 457.164 12.453 457.07 12.215 cv
456.977 11.984 456.93 11.703 456.93 11.371 cv
456.93 11.043 456.992 10.738 457.121 10.457 cv
457.25 10.184 457.438 9.94501 457.684 9.74597 cv
457.926 9.55103 458.223 9.39801 458.574 9.28497 cv
458.922 9.17999 459.316 9.125 459.758 9.12097 cv
459.973 9.125 460.184 9.14099 460.391 9.16803 cv
460.594 9.203 460.781 9.242 460.949 9.28497 cv
461.113 9.336 461.254 9.38702 461.371 9.43701 cv
461.484 9.49597 461.566 9.54303 461.617 9.578 cv
461.664 9.62097 461.699 9.65997 461.723 9.69501 cv
461.742 9.73798 461.754 9.78497 461.766 9.836 cv
461.773 9.89099 461.785 9.95697 461.793 10.035 cv
461.801 10.121 461.805 10.219 461.805 10.336 cv
461.805 10.477 461.801 10.594 461.793 10.68 cv
461.785 10.773 461.77 10.844 461.754 10.891 cv
461.734 10.945 461.711 10.98 461.684 10.996 cv
461.648 11.02 461.613 11.027 461.574 11.023 cv
461.523 11.027 461.449 11 461.355 10.941 cv
461.254 10.891 461.133 10.832 460.984 10.766 cv
460.836 10.707 460.664 10.648 460.469 10.59 cv
460.273 10.539 460.051 10.512 459.805 10.508 cv
459.625 10.512 459.473 10.531 459.344 10.562 cv
459.211 10.602 459.102 10.652 459.023 10.719 cv
458.938 10.789 458.875 10.867 458.836 10.957 cv
458.789 11.051 458.77 11.148 458.773 11.25 cv
458.77 11.41 458.82 11.547 458.922 11.652 cv
459.02 11.766 459.148 11.859 459.313 11.941 cv
459.473 12.027 459.656 12.105 459.863 12.176 cv
460.066 12.25 460.273 12.332 460.484 12.414 cv
460.691 12.504 460.898 12.602 461.109 12.715 cv
461.313 12.828 461.496 12.969 461.656 13.133 cv
461.816 13.301 461.945 13.5 462.047 13.73 cv
462.141 13.965 462.191 14.238 462.195 14.551 cv
cp
f
470.965 12.863 mo
470.961 13.164 470.934 13.375 470.879 13.492 cv
470.82 13.617 470.73 13.676 470.605 13.672 cv
467.363 13.672 li
467.234 13.676 467.141 13.613 467.086 13.488 cv
467.023 13.367 466.996 13.16 467 12.863 cv
466.996 12.574 467.023 12.367 467.086 12.246 cv
467.141 12.129 467.234 12.07 467.363 12.066 cv
470.605 12.066 li
470.668 12.07 470.719 12.082 470.766 12.105 cv
470.805 12.133 470.844 12.18 470.879 12.238 cv
470.906 12.305 470.93 12.387 470.945 12.488 cv
470.957 12.594 470.961 12.719 470.965 12.863 cv
cp
f
483.637 16.516 mo
483.637 16.578 483.625 16.625 483.605 16.66 cv
483.586 16.703 483.539 16.734 483.461 16.758 cv
483.383 16.781 483.266 16.797 483.117 16.812 cv
482.961 16.82 482.758 16.828 482.5 16.828 cv
482.281 16.828 482.105 16.82 481.977 16.812 cv
481.848 16.797 481.746 16.781 481.672 16.754 cv
481.594 16.727 481.539 16.691 481.512 16.645 cv
481.477 16.605 481.453 16.551 481.434 16.484 cv
480.527 14.234 li
480.418 13.98 480.313 13.754 480.211 13.555 cv
480.102 13.359 479.988 13.195 479.863 13.062 cv
479.734 12.934 479.586 12.832 479.422 12.762 cv
479.254 12.695 479.063 12.664 478.848 12.66 cv
478.207 12.66 li
478.207 16.5 li
478.203 16.555 478.188 16.602 478.156 16.641 cv
478.121 16.684 478.066 16.719 477.988 16.742 cv
477.91 16.77 477.805 16.789 477.676 16.805 cv
477.543 16.82 477.379 16.828 477.18 16.828 cv
476.98 16.828 476.813 16.82 476.684 16.805 cv
476.547 16.789 476.441 16.77 476.367 16.742 cv
476.285 16.719 476.23 16.684 476.203 16.641 cv
476.168 16.602 476.152 16.555 476.156 16.5 cv
476.156 7.34399 li
476.152 7.117 476.211 6.953 476.332 6.84802 cv
476.445 6.75 476.59 6.69897 476.766 6.69501 cv
479.375 6.69501 li
479.637 6.69897 479.855 6.703 480.031 6.711 cv
480.199 6.72302 480.355 6.73401 480.5 6.75 cv
480.902 6.80902 481.266 6.90997 481.59 7.047 cv
481.914 7.19098 482.191 7.375 482.418 7.59802 cv
482.645 7.828 482.816 8.09399 482.938 8.40198 cv
483.055 8.711 483.113 9.06598 483.117 9.46503 cv
483.113 9.80499 483.07 10.113 482.988 10.387 cv
482.898 10.668 482.773 10.914 482.609 11.133 cv
482.441 11.352 482.234 11.543 481.992 11.699 cv
481.746 11.863 481.469 11.992 481.16 12.09 cv
481.309 12.164 481.453 12.254 481.586 12.355 cv
481.719 12.465 481.84 12.59 481.957 12.734 cv
482.07 12.883 482.184 13.051 482.289 13.238 cv
482.391 13.43 482.492 13.645 482.594 13.883 cv
483.445 15.871 li
483.52 16.07 483.57 16.211 483.598 16.301 cv
483.621 16.395 483.637 16.469 483.637 16.516 cv
cp
480.996 9.67603 mo
480.992 9.34399 480.918 9.06201 480.77 8.83197 cv
480.617 8.60498 480.371 8.44501 480.031 8.34802 cv
479.926 8.32397 479.809 8.30103 479.676 8.28497 cv
479.543 8.27002 479.359 8.26202 479.125 8.26202 cv
478.207 8.26202 li
478.207 11.125 li
479.25 11.125 li
479.539 11.129 479.797 11.094 480.016 11.02 cv
480.234 10.953 480.414 10.852 480.559 10.723 cv
480.703 10.598 480.813 10.445 480.887 10.266 cv
480.957 10.09 480.992 9.89502 480.996 9.67603 cv
cp
f
491.223 12.84 mo
491.219 13.078 491.168 13.254 491.063 13.367 cv
490.953 13.484 490.805 13.543 490.625 13.539 cv
486.391 13.539 li
486.387 13.84 486.422 14.109 486.496 14.348 cv
486.563 14.59 486.676 14.793 486.832 14.961 cv
486.984 15.133 487.18 15.262 487.422 15.348 cv
487.66 15.437 487.949 15.48 488.293 15.48 cv
488.633 15.48 488.934 15.457 489.195 15.406 cv
489.453 15.359 489.68 15.305 489.871 15.242 cv
490.059 15.184 490.215 15.129 490.344 15.078 cv
490.465 15.031 490.566 15.008 490.648 15.004 cv
490.691 15.008 490.73 15.016 490.766 15.031 cv
490.793 15.051 490.82 15.082 490.84 15.129 cv
490.859 15.176 490.871 15.242 490.883 15.328 cv
490.887 15.414 490.891 15.523 490.895 15.652 cv
490.891 15.77 490.891 15.867 490.887 15.945 cv
490.879 16.027 490.871 16.094 490.863 16.148 cv
490.852 16.207 490.836 16.258 490.816 16.293 cv
490.797 16.336 490.77 16.371 490.738 16.406 cv
490.703 16.445 490.609 16.496 490.461 16.555 cv
490.305 16.621 490.113 16.684 489.883 16.738 cv
489.645 16.801 489.375 16.848 489.078 16.895 cv
488.773 16.934 488.453 16.957 488.113 16.961 cv
487.492 16.957 486.949 16.883 486.488 16.727 cv
486.02 16.574 485.633 16.336 485.324 16.02 cv
485.008 15.703 484.773 15.305 484.625 14.82 cv
484.469 14.34 484.395 13.773 484.398 13.117 cv
484.395 12.504 484.473 11.945 484.637 11.449 cv
484.793 10.953 485.027 10.535 485.34 10.187 cv
485.645 9.84399 486.02 9.578 486.457 9.39502 cv
486.895 9.21503 487.387 9.125 487.941 9.12097 cv
488.52 9.125 489.02 9.211 489.434 9.37903 cv
489.848 9.55499 490.184 9.79303 490.449 10.094 cv
490.711 10.398 490.906 10.758 491.035 11.172 cv
491.156 11.59 491.219 12.039 491.223 12.527 cv
cp
489.32 12.277 mo
489.332 11.727 489.223 11.293 488.988 10.98 cv
488.754 10.668 488.387 10.512 487.895 10.508 cv
487.645 10.512 487.43 10.559 487.246 10.648 cv
487.059 10.746 486.906 10.871 486.785 11.027 cv
486.66 11.187 486.566 11.375 486.504 11.59 cv
486.438 11.805 486.398 12.035 486.391 12.277 cv
cp
f
503.891 16.516 mo
503.887 16.57 503.871 16.613 503.844 16.652 cv
503.809 16.691 503.758 16.727 503.688 16.75 cv
503.613 16.777 503.512 16.793 503.391 16.809 cv
503.266 16.82 503.109 16.828 502.918 16.828 cv
502.719 16.828 502.559 16.82 502.434 16.809 cv
502.309 16.793 502.207 16.777 502.133 16.75 cv
502.055 16.727 502.004 16.691 501.977 16.652 cv
501.949 16.613 501.934 16.57 501.938 16.516 cv
501.938 12.395 li
501.934 12.164 501.914 11.949 501.871 11.754 cv
501.824 11.562 501.754 11.398 501.668 11.262 cv
501.574 11.125 501.461 11.02 501.324 10.941 cv
501.184 10.867 501.02 10.828 500.828 10.828 cv
500.594 10.828 500.355 10.922 500.117 11.102 cv
499.879 11.285 499.621 11.547 499.34 11.895 cv
499.34 16.516 li
499.34 16.57 499.324 16.613 499.293 16.652 cv
499.262 16.691 499.207 16.727 499.133 16.75 cv
499.055 16.777 498.953 16.793 498.832 16.809 cv
498.707 16.82 498.555 16.828 498.367 16.828 cv
498.172 16.828 498.012 16.82 497.891 16.809 cv
497.762 16.793 497.66 16.777 497.59 16.75 cv
497.512 16.727 497.461 16.691 497.43 16.652 cv
497.398 16.613 497.383 16.57 497.383 16.516 cv
497.383 12.395 li
497.383 12.164 497.359 11.949 497.316 11.754 cv
497.273 11.562 497.207 11.398 497.121 11.262 cv
497.027 11.125 496.914 11.02 496.777 10.941 cv
496.633 10.867 496.469 10.828 496.285 10.828 cv
496.043 10.828 495.805 10.922 495.566 11.102 cv
495.328 11.285 495.07 11.547 494.797 11.895 cv
494.797 16.516 li
494.793 16.57 494.777 16.613 494.75 16.652 cv
494.715 16.691 494.66 16.727 494.59 16.75 cv
494.512 16.777 494.414 16.793 494.289 16.809 cv
494.164 16.82 494.004 16.828 493.816 16.828 cv
493.621 16.828 493.465 16.82 493.34 16.809 cv
493.215 16.793 493.113 16.777 493.039 16.75 cv
492.961 16.727 492.906 16.691 492.879 16.652 cv
492.844 16.613 492.828 16.57 492.832 16.516 cv
492.832 9.56598 li
492.828 9.52002 492.844 9.47302 492.871 9.42999 cv
492.895 9.39502 492.941 9.36298 493.012 9.33197 cv
493.078 9.30902 493.164 9.289 493.273 9.27301 cv
493.379 9.26599 493.512 9.258 493.676 9.25403 cv
493.84 9.258 493.977 9.26599 494.086 9.27301 cv
494.191 9.289 494.277 9.30902 494.34 9.33197 cv
494.398 9.36298 494.441 9.39502 494.469 9.42999 cv
494.492 9.47302 494.504 9.52002 494.508 9.56598 cv
494.508 10.367 li
494.891 9.95697 495.273 9.64502 495.656 9.43402 cv
496.035 9.22699 496.438 9.125 496.855 9.12097 cv
497.141 9.125 497.395 9.15198 497.625 9.211 cv
497.852 9.27301 498.059 9.35901 498.238 9.46899 cv
498.418 9.58197 498.57 9.71899 498.699 9.87097 cv
498.828 10.027 498.938 10.199 499.027 10.391 cv
499.234 10.168 499.438 9.97699 499.641 9.81598 cv
499.836 9.65601 500.035 9.52301 500.23 9.422 cv
500.426 9.32001 500.621 9.24597 500.816 9.19501 cv
501.012 9.14801 501.211 9.125 501.414 9.12097 cv
501.875 9.125 502.262 9.203 502.582 9.35498 cv
502.895 9.51599 503.152 9.72699 503.348 9.992 cv
503.543 10.262 503.68 10.574 503.766 10.93 cv
503.844 11.289 503.887 11.668 503.891 12.066 cv
cp
f
512.836 12.969 mo
512.832 13.566 512.754 14.109 512.602 14.594 cv
512.441 15.086 512.207 15.504 511.891 15.855 cv
511.574 16.207 511.176 16.48 510.699 16.672 cv
510.219 16.863 509.66 16.957 509.023 16.961 cv
508.402 16.957 507.863 16.875 507.41 16.703 cv
506.949 16.535 506.57 16.285 506.273 15.957 cv
505.969 15.633 505.746 15.23 505.602 14.75 cv
505.457 14.273 505.387 13.727 505.387 13.109 cv
505.387 12.52 505.465 11.98 505.621 11.488 cv
505.777 11 506.016 10.578 506.336 10.227 cv
506.652 9.87903 507.047 9.60498 507.523 9.40997 cv
507.996 9.21899 508.555 9.125 509.195 9.12097 cv
509.82 9.125 510.359 9.20697 510.816 9.375 cv
511.273 9.547 511.652 9.797 511.949 10.121 cv
512.246 10.449 512.469 10.852 512.617 11.328 cv
512.762 11.809 512.832 12.355 512.836 12.969 cv
cp
510.816 13.047 mo
510.813 12.711 510.785 12.395 510.734 12.102 cv
510.676 11.816 510.582 11.566 510.457 11.352 cv
510.324 11.141 510.152 10.973 509.941 10.852 cv
509.723 10.734 509.453 10.676 509.125 10.672 cv
508.836 10.676 508.582 10.73 508.363 10.832 cv
508.145 10.941 507.965 11.098 507.824 11.301 cv
507.684 11.508 507.578 11.754 507.508 12.039 cv
507.438 12.332 507.402 12.66 507.402 13.023 cv
507.402 13.371 507.43 13.687 507.488 13.973 cv
507.543 14.266 507.637 14.516 507.766 14.727 cv
507.891 14.941 508.063 15.105 508.285 15.219 cv
508.5 15.34 508.77 15.398 509.094 15.395 cv
509.387 15.398 509.645 15.344 509.867 15.234 cv
510.082 15.129 510.262 14.977 510.402 14.77 cv
510.543 14.57 510.645 14.324 510.715 14.035 cv
510.777 13.75 510.813 13.422 510.816 13.047 cv
cp
f
518.543 15.832 mo
518.543 16.059 518.527 16.234 518.5 16.355 cv
518.469 16.48 518.43 16.566 518.387 16.613 cv
518.336 16.664 518.27 16.707 518.18 16.746 cv
518.086 16.785 517.977 16.816 517.859 16.848 cv
517.734 16.871 517.602 16.895 517.461 16.914 cv
517.316 16.926 517.176 16.934 517.031 16.937 cv
516.641 16.934 516.301 16.883 516.016 16.789 cv
515.73 16.687 515.496 16.539 515.309 16.332 cv
515.121 16.129 514.98 15.871 514.895 15.559 cv
514.801 15.25 514.758 14.879 514.762 14.449 cv
514.762 10.891 li
513.93 10.891 li
513.828 10.895 513.754 10.832 513.703 10.707 cv
513.648 10.586 513.621 10.383 513.625 10.094 cv
513.621 9.94501 513.629 9.81598 513.645 9.71503 cv
513.656 9.61298 513.676 9.53101 513.703 9.46899 cv
513.727 9.40997 513.758 9.367 513.801 9.34003 cv
513.836 9.31598 513.883 9.30499 513.938 9.30103 cv
514.762 9.30103 li
514.762 7.75 li
514.758 7.703 514.773 7.65601 514.805 7.60901 cv
514.832 7.57001 514.883 7.53497 514.961 7.50403 cv
515.035 7.47998 515.137 7.45697 515.266 7.44098 cv
515.391 7.42999 515.547 7.42603 515.738 7.422 cv
515.926 7.42603 516.086 7.42999 516.215 7.44098 cv
516.34 7.45697 516.441 7.47998 516.516 7.50403 cv
516.586 7.53497 516.637 7.57001 516.672 7.60901 cv
516.699 7.65601 516.715 7.703 516.719 7.75 cv
516.719 9.30103 li
518.23 9.30103 li
518.281 9.30499 518.328 9.31598 518.367 9.34003 cv
518.406 9.367 518.438 9.40997 518.465 9.46899 cv
518.488 9.53101 518.508 9.61298 518.523 9.71503 cv
518.535 9.81598 518.543 9.94501 518.543 10.094 cv
518.543 10.383 518.516 10.586 518.465 10.707 cv
518.41 10.832 518.336 10.895 518.238 10.891 cv
516.719 10.891 li
516.719 14.156 li
516.715 14.535 516.773 14.82 516.898 15.008 cv
517.016 15.199 517.23 15.293 517.535 15.293 cv
517.637 15.293 517.73 15.285 517.816 15.266 cv
517.898 15.25 517.973 15.23 518.039 15.203 cv
518.102 15.184 518.156 15.16 518.203 15.141 cv
518.246 15.125 518.285 15.117 518.324 15.113 cv
518.352 15.117 518.383 15.125 518.414 15.141 cv
518.441 15.16 518.461 15.199 518.48 15.25 cv
518.492 15.309 518.508 15.383 518.523 15.473 cv
518.535 15.57 518.543 15.687 518.543 15.832 cv
cp
f
526.129 12.84 mo
526.125 13.078 526.074 13.254 525.969 13.367 cv
525.859 13.484 525.711 13.543 525.531 13.539 cv
521.297 13.539 li
521.293 13.84 521.328 14.109 521.402 14.348 cv
521.469 14.59 521.582 14.793 521.738 14.961 cv
521.891 15.133 522.086 15.262 522.328 15.348 cv
522.566 15.437 522.855 15.48 523.199 15.48 cv
523.539 15.48 523.84 15.457 524.102 15.406 cv
524.359 15.359 524.586 15.305 524.777 15.242 cv
524.965 15.184 525.121 15.129 525.25 15.078 cv
525.371 15.031 525.473 15.008 525.555 15.004 cv
525.598 15.008 525.637 15.016 525.672 15.031 cv
525.699 15.051 525.727 15.082 525.746 15.129 cv
525.766 15.176 525.777 15.242 525.789 15.328 cv
525.793 15.414 525.797 15.523 525.801 15.652 cv
525.797 15.77 525.797 15.867 525.793 15.945 cv
525.785 16.027 525.777 16.094 525.77 16.148 cv
525.758 16.207 525.742 16.258 525.723 16.293 cv
525.703 16.336 525.676 16.371 525.645 16.406 cv
525.609 16.445 525.516 16.496 525.367 16.555 cv
525.211 16.621 525.02 16.684 524.789 16.738 cv
524.551 16.801 524.281 16.848 523.984 16.895 cv
523.68 16.934 523.359 16.957 523.02 16.961 cv
522.398 16.957 521.855 16.883 521.395 16.727 cv
520.926 16.574 520.539 16.336 520.23 16.02 cv
519.914 15.703 519.68 15.305 519.531 14.82 cv
519.375 14.34 519.301 13.773 519.305 13.117 cv
519.301 12.504 519.379 11.945 519.543 11.449 cv
519.699 10.953 519.934 10.535 520.246 10.187 cv
520.551 9.84399 520.926 9.578 521.363 9.39502 cv
521.801 9.21503 522.293 9.125 522.848 9.12097 cv
523.426 9.125 523.926 9.211 524.34 9.37903 cv
524.754 9.55499 525.09 9.79303 525.355 10.094 cv
525.617 10.398 525.813 10.758 525.941 11.172 cv
526.063 11.59 526.125 12.039 526.129 12.527 cv
cp
524.227 12.277 mo
524.238 11.727 524.129 11.293 523.895 10.98 cv
523.66 10.668 523.293 10.512 522.801 10.508 cv
522.551 10.512 522.336 10.559 522.152 10.648 cv
521.965 10.746 521.813 10.871 521.691 11.027 cv
521.566 11.187 521.473 11.375 521.41 11.59 cv
521.344 11.805 521.305 12.035 521.297 12.277 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
