%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-FourThreads-Remote.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 2:28:37 p.m.
%%BoundingBox: 0 0 630 549
%%HiResBoundingBox: 0 0 630 549
%%CropBox: 0 0 630 549
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -549 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 549 li
630 549 li
630 0 li
cp
clp
gsave
0 549 mo
630 549 li
630 0 li
0 0 li
cp
clp
0 549 mo
630 549 li
630 0 li
0 0 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
57.602 488.879 mo
614.641 488.879 li
57.602 462.359 mo
614.641 462.359 li
57.602 435.84 mo
614.641 435.84 li
57.602 409.32 mo
614.641 409.32 li
57.602 382.801 mo
614.641 382.801 li
57.602 356.281 mo
614.641 356.281 li
57.602 329.879 mo
614.641 329.879 li
57.602 303.359 mo
614.641 303.359 li
57.602 276.84 mo
614.641 276.84 li
57.602 250.32 mo
614.641 250.32 li
57.602 223.801 mo
614.641 223.801 li
57.602 197.281 mo
614.641 197.281 li
57.602 170.762 mo
614.641 170.762 li
57.602 144.238 mo
614.641 144.238 li
57.602 117.719 mo
614.641 117.719 li
57.602 91.32 mo
614.641 91.32 li
57.602 64.801 mo
614.641 64.801 li
57.602 38.281 mo
614.641 38.281 li
.140414 .108034 .108034 0 cmyk
@
57.602 475.559 mo
614.641 475.559 li
57.602 449.16 mo
614.641 449.16 li
57.602 422.641 mo
614.641 422.641 li
57.602 396.121 mo
614.641 396.121 li
57.602 369.602 mo
614.641 369.602 li
57.602 343.078 mo
614.641 343.078 li
57.602 316.559 mo
614.641 316.559 li
57.602 290.039 mo
614.641 290.039 li
57.602 263.52 mo
614.641 263.52 li
57.602 237 mo
614.641 237 li
57.602 210.602 mo
614.641 210.602 li
57.602 184.078 mo
614.641 184.078 li
57.602 157.559 mo
614.641 157.559 li
57.602 131.039 mo
614.641 131.039 li
57.602 104.52 mo
614.641 104.52 li
57.602 78 mo
614.641 78 li
57.602 51.48 mo
614.641 51.48 li
57.602 24.961 mo
614.641 24.961 li
.328344 .284215 .278569 .000915541 cmyk
@
92.398 24.961 mo
92.398 502.078 li
162.121 24.961 mo
162.121 502.078 li
231.719 24.961 mo
231.719 502.078 li
301.32 24.961 mo
301.32 502.078 li
370.922 24.961 mo
370.922 502.078 li
440.52 24.961 mo
440.52 502.078 li
510.121 24.961 mo
510.121 502.078 li
579.719 24.961 mo
579.719 502.078 li
.178592 .148898 .143923 0 cmyk
@
57.602 24.961 mo
57.602 502.078 li
127.32 24.961 mo
127.32 502.078 li
196.922 24.961 mo
196.922 502.078 li
266.52 24.961 mo
266.52 502.078 li
336.121 24.961 mo
336.121 502.078 li
405.719 24.961 mo
405.719 502.078 li
475.32 24.961 mo
475.32 502.078 li
544.922 24.961 mo
544.922 502.078 li
614.641 24.961 mo
614.641 502.078 li
.328344 .284215 .278569 .000915541 cmyk
@
37.559 492.84 mo
44.641 492.84 li
44.641 509.879 li
37.559 509.879 li
cp
0 0 0 0 cmyk
ef
37.559 466.32 mo
44.641 466.32 li
44.641 483.359 li
37.559 483.359 li
cp
ef
37.559 439.801 mo
44.641 439.801 li
44.641 456.84 li
37.559 456.84 li
cp
ef
37.559 413.281 mo
44.641 413.281 li
44.641 430.32 li
37.559 430.32 li
cp
ef
37.559 386.762 mo
44.641 386.762 li
44.641 403.922 li
37.559 403.922 li
cp
ef
30.48 360.238 mo
44.64 360.238 li
44.64 377.398 li
30.48 377.398 li
cp
ef
30.48 333.719 mo
44.64 333.719 li
44.64 350.879 li
30.48 350.879 li
cp
ef
30.48 307.199 mo
44.64 307.199 li
44.64 324.359 li
30.48 324.359 li
cp
ef
30.48 280.801 mo
44.64 280.801 li
44.64 297.84 li
30.48 297.84 li
cp
ef
30.48 254.281 mo
44.64 254.281 li
44.64 271.32 li
30.48 271.32 li
cp
ef
30.48 227.762 mo
44.64 227.762 li
44.64 244.801 li
30.48 244.801 li
cp
ef
30.48 201.238 mo
44.64 201.238 li
44.64 218.281 li
30.48 218.281 li
cp
ef
30.48 174.719 mo
44.64 174.719 li
44.64 191.762 li
30.48 191.762 li
cp
ef
30.48 148.199 mo
44.64 148.199 li
44.64 165.359 li
30.48 165.359 li
cp
ef
30.48 121.68 mo
44.64 121.68 li
44.64 138.84 li
30.48 138.84 li
cp
ef
30.48 95.16 mo
44.64 95.16 li
44.64 112.32 li
30.48 112.32 li
cp
ef
30.48 68.641 mo
44.64 68.641 li
44.64 85.801 li
30.48 85.801 li
cp
ef
30.48 42.238 mo
44.64 42.238 li
44.64 59.281 li
30.48 59.281 li
cp
ef
30.48 15.719 mo
44.64 15.719 li
44.64 32.762 li
30.48 32.762 li
cp
ef
.96 lw
57.602 502.078 mo
614.641 502.078 li
.367803 .29575 .300999 .00198367 cmyk
@
57.602 502.078 mo
57.602 506.52 li
127.32 502.078 mo
127.32 506.52 li
196.922 502.078 mo
196.922 506.52 li
266.52 502.078 mo
266.52 506.52 li
336.121 502.078 mo
336.121 506.52 li
405.719 502.078 mo
405.719 506.52 li
475.32 502.078 mo
475.32 506.52 li
544.922 502.078 mo
544.922 506.52 li
614.641 502.078 mo
614.641 506.52 li
@
gsave
57.602 24.961 mo
615.239 24.961 li
615.239 502.801 li
57.602 502.801 li
cp
clp
1 lc
57.602 473.762 mo
127.32 481.441 li
196.922 490.199 li
266.52 490.199 li
336.121 492.359 li
405.719 494.398 li
475.32 491.762 li
544.922 484.68 li
614.641 490.922 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
52.5 468.66 mo
62.461 468.66 li
62.461 478.621 li
52.5 478.621 li
cp
.62768 .285466 0 0 cmyk
@
122.102 476.34 mo
132.059 476.34 li
132.059 486.301 li
122.102 486.301 li
cp
@
191.699 485.102 mo
201.66 485.102 li
201.66 495.059 li
191.699 495.059 li
cp
@
261.301 485.102 mo
271.262 485.102 li
271.262 495.059 li
261.301 495.059 li
cp
@
330.898 487.379 mo
340.859 487.379 li
340.859 497.34 li
330.898 497.34 li
cp
@
400.621 489.301 mo
410.578 489.301 li
410.578 499.262 li
400.621 499.262 li
cp
@
470.219 486.781 mo
480.18 486.781 li
480.18 496.738 li
470.219 496.738 li
cp
@
539.82 479.578 mo
549.781 479.578 li
549.781 489.539 li
539.82 489.539 li
cp
@
609.422 485.941 mo
619.379 485.941 li
619.379 495.898 li
609.422 495.898 li
cp
@
gsave
57.602 24.961 mo
615.239 24.961 li
615.239 502.801 li
57.602 502.801 li
cp
clp
.96 lw
1 lc
57.602 426.84 mo
127.32 460.32 li
196.922 468.719 li
266.52 470.039 li
336.121 474.961 li
405.719 478.199 li
475.32 487.559 li
544.922 482.52 li
614.641 484.801 li
.466651 0 .889799 0 cmyk
@
grestore
52.5 421.859 mo
62.461 421.859 li
62.461 431.82 li
52.5 431.82 li
cp
.466651 0 .889799 0 cmyk
@
122.102 455.34 mo
132.059 455.34 li
132.059 465.301 li
122.102 465.301 li
cp
@
191.699 463.621 mo
201.66 463.621 li
201.66 473.578 li
191.699 473.578 li
cp
@
261.301 465.059 mo
271.262 465.059 li
271.262 475.02 li
261.301 475.02 li
cp
@
330.898 469.859 mo
340.859 469.859 li
340.859 479.82 li
330.898 479.82 li
cp
@
400.621 473.219 mo
410.578 473.219 li
410.578 483.18 li
400.621 483.18 li
cp
@
470.219 482.578 mo
480.18 482.578 li
480.18 492.539 li
470.219 492.539 li
cp
@
539.82 477.539 mo
549.781 477.539 li
549.781 487.5 li
539.82 487.5 li
cp
@
609.422 479.82 mo
619.379 479.82 li
619.379 489.781 li
609.422 489.781 li
cp
@
gsave
57.602 24.961 mo
615.239 24.961 li
615.239 502.801 li
57.602 502.801 li
cp
clp
.96 lw
1 lc
57.602 270.238 mo
127.32 330.961 li
196.922 391.922 li
266.52 402.238 li
336.121 417.238 li
405.719 432.961 li
475.32 430.559 li
544.922 429.719 li
614.641 426.961 li
0 .990631 1 .000396735 cmyk
@
grestore
52.5 265.262 mo
62.461 265.262 li
62.461 275.219 li
52.5 275.219 li
cp
0 .990631 1 .000396735 cmyk
@
122.102 325.98 mo
132.059 325.98 li
132.059 335.941 li
122.102 335.941 li
cp
@
191.699 386.82 mo
201.66 386.82 li
201.66 396.781 li
191.699 396.781 li
cp
@
261.301 397.141 mo
271.262 397.141 li
271.262 407.102 li
261.301 407.102 li
cp
@
330.898 412.141 mo
340.859 412.141 li
340.859 422.102 li
330.898 422.102 li
cp
@
400.621 427.859 mo
410.578 427.859 li
410.578 437.82 li
400.621 437.82 li
cp
@
470.219 425.461 mo
480.18 425.461 li
480.18 435.422 li
470.219 435.422 li
cp
@
539.82 424.738 mo
549.781 424.738 li
549.781 434.699 li
539.82 434.699 li
cp
@
609.422 421.859 mo
619.379 421.859 li
619.379 431.82 li
609.422 431.82 li
cp
@
gsave
57.602 24.961 mo
615.239 24.961 li
615.239 502.801 li
57.602 502.801 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
57.602 339.121 mo
127.32 387 li
196.922 428.879 li
266.52 449.52 li
336.121 444.84 li
405.719 460.922 li
475.32 449.879 li
544.922 464.641 li
614.641 465.719 li
@
grestore
52.5 334.02 mo
62.461 334.02 li
62.461 343.981 li
52.5 343.981 li
cp
@
122.102 382.02 mo
132.059 382.02 li
132.059 391.981 li
122.102 391.981 li
cp
@
191.699 423.898 mo
201.66 423.898 li
201.66 433.859 li
191.699 433.859 li
cp
@
261.301 444.422 mo
271.262 444.422 li
271.262 454.379 li
261.301 454.379 li
cp
@
330.898 439.859 mo
340.859 439.859 li
340.859 449.82 li
330.898 449.82 li
cp
@
400.621 455.82 mo
410.578 455.82 li
410.578 465.781 li
400.621 465.781 li
cp
@
470.219 444.781 mo
480.18 444.781 li
480.18 454.738 li
470.219 454.738 li
cp
@
539.82 459.66 mo
549.781 459.66 li
549.781 469.621 li
539.82 469.621 li
cp
@
609.422 460.738 mo
619.379 460.738 li
619.379 470.699 li
609.422 470.699 li
cp
@
gsave
57.602 24.961 mo
615.239 24.961 li
615.239 502.801 li
57.602 502.801 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
57.602 81.238 mo
127.32 210.84 li
196.922 296.641 li
266.52 367.922 li
336.121 349.32 li
405.719 386.16 li
475.32 355.559 li
544.922 386.281 li
614.641 352.68 li
.62768 .285466 0 0 cmyk
@
grestore
52.5 76.141 mo
62.461 76.141 li
62.461 86.102 li
52.5 86.102 li
cp
.62768 .285466 0 0 cmyk
@
122.102 205.859 mo
132.059 205.859 li
132.059 215.82 li
122.102 215.82 li
cp
@
191.699 291.539 mo
201.66 291.539 li
201.66 301.5 li
191.699 301.5 li
cp
@
261.301 362.941 mo
271.262 362.941 li
271.262 372.898 li
261.301 372.898 li
cp
@
330.898 344.219 mo
340.859 344.219 li
340.859 354.18 li
330.898 354.18 li
cp
@
400.621 381.18 mo
410.578 381.18 li
410.578 391.141 li
400.621 391.141 li
cp
@
470.219 350.461 mo
480.18 350.461 li
480.18 360.422 li
470.219 360.422 li
cp
@
539.82 381.18 mo
549.781 381.18 li
549.781 391.141 li
539.82 391.141 li
cp
@
609.422 347.699 mo
619.379 347.699 li
619.379 357.66 li
609.422 357.66 li
cp
@
gsave
57.602 24.961 mo
615.239 24.961 li
615.239 502.801 li
57.602 502.801 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
57.602 162.719 mo
127.32 316.68 li
196.922 368.52 li
266.52 366.961 li
336.121 390.121 li
405.719 412.922 li
475.32 403.922 li
544.922 435.48 li
614.641 419.398 li
.466651 0 .889799 0 cmyk
@
grestore
52.98 158.219 mo
61.98 158.219 li
61.98 167.219 li
52.98 167.219 li
cp
.466651 0 .889799 0 cmyk
@
122.578 312.059 mo
131.578 312.059 li
131.578 321.059 li
122.578 321.059 li
cp
@
192.18 364.02 mo
201.18 364.02 li
201.18 373.02 li
192.18 373.02 li
cp
@
261.781 362.461 mo
270.781 362.461 li
270.781 371.461 li
261.781 371.461 li
cp
@
331.379 385.5 mo
340.379 385.5 li
340.379 394.5 li
331.379 394.5 li
cp
@
401.102 408.422 mo
410.102 408.422 li
410.102 417.422 li
401.102 417.422 li
cp
@
470.699 399.422 mo
479.699 399.422 li
479.699 408.422 li
470.699 408.422 li
cp
@
540.301 430.98 mo
549.301 430.98 li
549.301 439.98 li
540.301 439.98 li
cp
@
609.898 414.898 mo
618.898 414.898 li
618.898 423.898 li
609.898 423.898 li
cp
@
37.512 492.855 mo
44.606 492.855 li
44.606 509.945 li
37.512 509.945 li
cp
0 0 0 0 cmyk
ef
44.168 501.824 mo
44.164 502.508 44.113 503.129 44.008 503.691 cv
43.898 504.254 43.719 504.738 43.473 505.141 cv
43.219 505.547 42.891 505.859 42.492 506.078 cv
42.086 506.301 41.594 506.41 41.008 506.41 cv
40.449 506.41 39.977 506.312 39.598 506.113 cv
39.215 505.918 38.91 505.625 38.676 505.238 cv
38.441 504.852 38.273 504.379 38.18 503.812 cv
38.078 503.25 38.031 502.602 38.031 501.867 cv
38.031 501.195 38.086 500.574 38.195 500.008 cv
38.305 499.445 38.48 498.961 38.73 498.555 cv
38.973 498.152 39.297 497.84 39.703 497.613 cv
40.102 497.395 40.598 497.281 41.188 497.281 cv
41.746 497.281 42.219 497.383 42.602 497.578 cv
42.984 497.781 43.289 498.074 43.523 498.457 cv
43.754 498.848 43.922 499.32 44.02 499.883 cv
44.117 500.445 44.164 501.094 44.168 501.824 cv
cp
42.961 501.906 mo
42.957 501.465 42.941 501.066 42.914 500.715 cv
42.879 500.363 42.832 500.055 42.773 499.785 cv
42.707 499.516 42.629 499.285 42.531 499.09 cv
42.434 498.898 42.316 498.738 42.18 498.609 cv
42.039 498.484 41.879 498.391 41.707 498.332 cv
41.527 498.277 41.332 498.25 41.117 498.246 cv
40.727 498.25 40.41 498.34 40.172 498.523 cv
39.926 498.707 39.734 498.961 39.598 499.277 cv
39.457 499.598 39.363 499.969 39.313 500.398 cv
39.262 500.828 39.238 501.293 39.238 501.785 cv
39.238 502.449 39.27 503.012 39.34 503.473 cv
39.406 503.941 39.516 504.32 39.668 504.609 cv
39.813 504.906 40.004 505.117 40.234 505.246 cv
40.465 505.383 40.746 505.449 41.078 505.445 cv
41.332 505.449 41.555 505.41 41.75 505.324 cv
41.941 505.246 42.109 505.125 42.25 504.969 cv
42.391 504.816 42.504 504.633 42.598 504.418 cv
42.684 504.203 42.758 503.965 42.816 503.703 cv
42.867 503.445 42.906 503.164 42.93 502.859 cv
42.949 502.555 42.957 502.238 42.961 501.906 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.512 466.352 mo
44.606 466.352 li
44.606 483.442 li
37.512 483.442 li
cp
0 0 0 0 cmyk
ef
43.875 479.254 mo
43.871 479.34 43.867 479.414 43.855 479.477 cv
43.844 479.543 43.828 479.598 43.809 479.637 cv
43.785 479.684 43.758 479.715 43.727 479.73 cv
43.691 479.754 43.652 479.762 43.613 479.762 cv
38.711 479.762 li
38.648 479.762 38.59 479.754 38.543 479.738 cv
38.492 479.723 38.453 479.699 38.418 479.66 cv
38.383 479.629 38.355 479.574 38.344 479.504 cv
38.324 479.434 38.316 479.348 38.32 479.246 cv
38.316 479.156 38.32 479.078 38.328 479.008 cv
38.332 478.941 38.348 478.883 38.375 478.828 cv
38.398 478.777 38.43 478.723 38.465 478.668 cv
38.5 478.617 38.543 478.562 38.602 478.5 cv
40.375 476.676 li
40.785 476.258 41.113 475.883 41.363 475.547 cv
41.609 475.219 41.801 474.914 41.934 474.637 cv
42.066 474.363 42.152 474.113 42.199 473.887 cv
42.238 473.664 42.262 473.453 42.262 473.258 cv
42.262 473.062 42.227 472.879 42.16 472.699 cv
42.094 472.527 42 472.371 41.875 472.234 cv
41.75 472.105 41.594 472 41.406 471.918 cv
41.219 471.844 41 471.805 40.754 471.801 cv
40.465 471.805 40.207 471.844 39.98 471.918 cv
39.75 472 39.551 472.086 39.379 472.172 cv
39.207 472.266 39.063 472.348 38.945 472.426 cv
38.828 472.504 38.742 472.543 38.691 472.543 cv
38.656 472.543 38.625 472.535 38.602 472.516 cv
38.57 472.5 38.551 472.469 38.535 472.426 cv
38.52 472.387 38.504 472.332 38.496 472.262 cv
38.484 472.195 38.48 472.113 38.484 472.016 cv
38.48 471.949 38.484 471.891 38.492 471.84 cv
38.496 471.789 38.504 471.746 38.516 471.707 cv
38.523 471.672 38.539 471.637 38.559 471.605 cv
38.578 471.574 38.613 471.535 38.672 471.484 cv
38.723 471.437 38.816 471.371 38.953 471.289 cv
39.086 471.207 39.258 471.129 39.461 471.047 cv
39.664 470.969 39.887 470.898 40.133 470.844 cv
40.375 470.789 40.633 470.762 40.906 470.762 cv
41.332 470.762 41.707 470.824 42.031 470.945 cv
42.352 471.066 42.617 471.23 42.832 471.441 cv
43.043 471.652 43.203 471.898 43.309 472.172 cv
43.414 472.453 43.469 472.75 43.469 473.062 cv
43.469 473.352 43.441 473.633 43.391 473.91 cv
43.34 474.195 43.234 474.5 43.074 474.824 cv
42.91 475.152 42.676 475.516 42.371 475.914 cv
42.063 476.316 41.656 476.777 41.152 477.293 cv
39.746 478.762 li
43.605 478.762 li
43.637 478.766 43.672 478.777 43.711 478.793 cv
43.742 478.816 43.773 478.848 43.801 478.887 cv
43.824 478.93 43.844 478.98 43.855 479.039 cv
43.867 479.105 43.871 479.176 43.875 479.254 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.512 439.84 mo
44.606 439.84 li
44.606 456.93 li
37.512 456.93 li
cp
0 0 0 0 cmyk
ef
44.25 450.715 mo
44.246 450.867 44.223 450.988 44.18 451.074 cv
44.133 451.164 44.07 451.207 43.988 451.203 cv
42.988 451.203 li
42.988 453.066 li
42.988 453.105 42.977 453.137 42.961 453.16 cv
42.938 453.187 42.906 453.207 42.863 453.227 cv
42.813 453.242 42.75 453.254 42.68 453.266 cv
42.602 453.273 42.508 453.277 42.391 453.281 cv
42.273 453.277 42.176 453.273 42.105 453.266 cv
42.027 453.254 41.969 453.242 41.926 453.227 cv
41.879 453.207 41.848 453.187 41.832 453.16 cv
41.813 453.137 41.805 453.105 41.809 453.066 cv
41.809 451.203 li
38.18 451.203 li
38.121 451.207 38.078 451.199 38.043 451.184 cv
38.008 451.172 37.973 451.145 37.945 451.105 cv
37.914 451.07 37.895 451.02 37.883 450.949 cv
37.871 450.883 37.867 450.793 37.867 450.68 cv
37.867 450.598 37.867 450.52 37.875 450.449 cv
37.875 450.379 37.887 450.316 37.902 450.262 cv
37.914 450.207 37.93 450.152 37.957 450.098 cv
37.977 450.043 38.004 449.988 38.039 449.926 cv
41.199 444.539 li
41.219 444.504 41.254 444.473 41.301 444.445 cv
41.344 444.418 41.398 444.395 41.473 444.375 cv
41.539 444.359 41.625 444.348 41.73 444.336 cv
41.832 444.332 41.953 444.328 42.094 444.324 cv
42.242 444.328 42.379 444.332 42.496 444.344 cv
42.609 444.355 42.699 444.371 42.773 444.387 cv
42.84 444.406 42.895 444.43 42.934 444.461 cv
42.969 444.492 42.988 444.527 42.988 444.566 cv
42.988 450.23 li
43.988 450.23 li
44.063 450.234 44.125 450.273 44.176 450.352 cv
44.223 450.434 44.246 450.555 44.25 450.715 cv
cp
41.809 445.363 mo
41.797 445.363 li
38.945 450.23 li
41.809 450.23 li
cp
.629114 .553033 .543389 .289647 cmyk
f
37.512 413.34 mo
44.606 413.34 li
44.606 430.43 li
37.512 430.43 li
cp
0 0 0 0 cmyk
ef
44.102 423.867 mo
44.102 424.258 44.039 424.637 43.922 424.996 cv
43.797 425.363 43.613 425.68 43.371 425.953 cv
43.121 426.23 42.809 426.453 42.434 426.617 cv
42.051 426.785 41.605 426.867 41.09 426.867 cv
40.719 426.867 40.391 426.824 40.109 426.73 cv
39.824 426.645 39.578 426.512 39.367 426.34 cv
39.156 426.172 38.98 425.965 38.844 425.719 cv
38.703 425.473 38.59 425.191 38.508 424.875 cv
38.422 424.562 38.363 424.219 38.328 423.84 cv
38.289 423.469 38.27 423.066 38.273 422.633 cv
38.27 422.254 38.289 421.871 38.332 421.48 cv
38.371 421.098 38.445 420.723 38.551 420.355 cv
38.656 419.996 38.801 419.656 38.98 419.34 cv
39.16 419.023 39.387 418.746 39.66 418.512 cv
39.934 418.277 40.258 418.09 40.637 417.949 cv
41.016 417.812 41.457 417.746 41.961 417.742 cv
42.129 417.746 42.301 417.754 42.473 417.773 cv
42.645 417.797 42.805 417.828 42.953 417.859 cv
43.102 417.898 43.223 417.934 43.324 417.973 cv
43.422 418.012 43.488 418.047 43.523 418.07 cv
43.551 418.098 43.574 418.125 43.594 418.152 cv
43.609 418.184 43.625 418.215 43.633 418.25 cv
43.641 418.285 43.645 418.324 43.652 418.367 cv
43.652 418.41 43.656 418.465 43.66 418.527 cv
43.656 418.613 43.656 418.684 43.656 418.738 cv
43.652 418.801 43.641 418.848 43.629 418.883 cv
43.609 418.922 43.59 418.949 43.566 418.965 cv
43.539 418.984 43.508 418.992 43.469 418.992 cv
43.418 418.992 43.348 418.977 43.262 418.945 cv
43.172 418.914 43.066 418.879 42.945 418.836 cv
42.82 418.801 42.672 418.766 42.496 418.73 cv
42.32 418.703 42.117 418.687 41.887 418.684 cv
41.457 418.687 41.09 418.773 40.785 418.945 cv
40.48 419.117 40.23 419.352 40.035 419.645 cv
39.84 419.937 39.695 420.277 39.605 420.66 cv
39.508 421.051 39.453 421.453 39.445 421.871 cv
39.563 421.805 39.699 421.738 39.848 421.668 cv
39.996 421.602 40.156 421.539 40.332 421.48 cv
40.508 421.43 40.695 421.383 40.891 421.348 cv
41.086 421.316 41.297 421.301 41.523 421.297 cv
42 421.301 42.402 421.367 42.734 421.492 cv
43.063 421.625 43.328 421.805 43.535 422.035 cv
43.734 422.266 43.879 422.535 43.969 422.848 cv
44.055 423.16 44.102 423.5 44.102 423.867 cv
cp
42.906 423.977 mo
42.906 423.715 42.879 423.473 42.828 423.254 cv
42.773 423.039 42.684 422.855 42.563 422.699 cv
42.438 422.551 42.273 422.434 42.07 422.352 cv
41.859 422.27 41.605 422.227 41.309 422.227 cv
41.137 422.227 40.969 422.242 40.801 422.273 cv
40.629 422.305 40.465 422.348 40.309 422.395 cv
40.148 422.449 40 422.512 39.859 422.582 cv
39.715 422.656 39.582 422.73 39.465 422.809 cv
39.461 423.402 39.5 423.898 39.578 424.293 cv
39.652 424.691 39.762 425.008 39.906 425.246 cv
40.051 425.488 40.23 425.66 40.445 425.762 cv
40.66 425.867 40.91 425.918 41.199 425.914 cv
41.488 425.918 41.742 425.863 41.957 425.75 cv
42.172 425.645 42.348 425.496 42.492 425.309 cv
42.633 425.125 42.738 424.918 42.805 424.687 cv
42.871 424.457 42.906 424.223 42.906 423.977 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.512 386.828 mo
44.606 386.828 li
44.606 403.922 li
37.512 403.922 li
cp
0 0 0 0 cmyk
ef
44.078 397.941 mo
44.078 398.328 44.008 398.672 43.871 398.969 cv
43.734 399.273 43.539 399.523 43.281 399.727 cv
43.023 399.934 42.703 400.09 42.324 400.191 cv
41.941 400.297 41.508 400.348 41.023 400.348 cv
40.563 400.348 40.152 400.301 39.793 400.207 cv
39.43 400.113 39.125 399.973 38.875 399.781 cv
38.625 399.598 38.434 399.367 38.301 399.09 cv
38.168 398.816 38.102 398.504 38.102 398.148 cv
38.102 397.875 38.145 397.617 38.238 397.383 cv
38.324 397.148 38.457 396.934 38.633 396.738 cv
38.801 396.543 39.012 396.359 39.266 396.184 cv
39.516 396.016 39.801 395.852 40.117 395.695 cv
39.844 395.555 39.602 395.406 39.391 395.246 cv
39.18 395.09 39 394.918 38.855 394.73 cv
38.707 394.547 38.598 394.352 38.523 394.141 cv
38.445 393.934 38.406 393.703 38.41 393.453 cv
38.406 393.145 38.461 392.852 38.578 392.578 cv
38.688 392.309 38.859 392.074 39.086 391.871 cv
39.313 391.672 39.598 391.512 39.949 391.395 cv
40.293 391.277 40.703 391.219 41.172 391.219 cv
41.617 391.219 42.004 391.273 42.332 391.379 cv
42.66 391.488 42.93 391.633 43.141 391.816 cv
43.352 392.004 43.508 392.223 43.613 392.473 cv
43.711 392.723 43.762 392.992 43.766 393.281 cv
43.762 393.516 43.723 393.742 43.652 393.953 cv
43.574 394.172 43.465 394.375 43.316 394.562 cv
43.168 394.758 42.988 394.937 42.777 395.102 cv
42.566 395.273 42.324 395.43 42.051 395.57 cv
42.371 395.734 42.656 395.898 42.914 396.066 cv
43.164 396.234 43.379 396.414 43.555 396.609 cv
43.723 396.805 43.852 397.012 43.945 397.227 cv
44.031 397.445 44.078 397.684 44.078 397.941 cv
cp
42.598 393.391 mo
42.594 393.203 42.563 393.027 42.496 392.871 cv
42.43 392.715 42.332 392.582 42.207 392.473 cv
42.078 392.363 41.918 392.281 41.73 392.223 cv
41.535 392.168 41.32 392.141 41.082 392.137 cv
40.586 392.141 40.211 392.25 39.961 392.473 cv
39.703 392.699 39.578 393.008 39.582 393.391 cv
39.578 393.57 39.609 393.734 39.672 393.887 cv
39.734 394.043 39.828 394.187 39.961 394.324 cv
40.086 394.461 40.25 394.594 40.453 394.723 cv
40.648 394.855 40.887 394.992 41.164 395.133 cv
41.625 394.898 41.98 394.637 42.227 394.344 cv
42.473 394.059 42.594 393.742 42.598 393.391 cv
cp
42.887 398.066 mo
42.883 397.859 42.844 397.668 42.77 397.496 cv
42.688 397.328 42.57 397.168 42.414 397.016 cv
42.258 396.867 42.059 396.723 41.824 396.582 cv
41.586 396.445 41.316 396.301 41.008 396.148 cv
40.719 396.293 40.465 396.434 40.25 396.574 cv
40.031 396.715 39.852 396.863 39.715 397.012 cv
39.574 397.168 39.469 397.324 39.398 397.488 cv
39.324 397.656 39.289 397.84 39.293 398.039 cv
39.289 398.484 39.441 398.828 39.75 399.066 cv
40.051 399.312 40.504 399.434 41.109 399.43 cv
41.691 399.434 42.137 399.312 42.438 399.062 cv
42.734 398.82 42.883 398.488 42.887 398.066 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
30.41 360.328 mo
44.601 360.328 li
44.601 377.422 li
30.41 377.422 li
cp
0 0 0 0 cmyk
ef
36.785 373.266 mo
36.781 373.355 36.773 373.426 36.762 373.484 cv
36.746 373.547 36.727 373.598 36.707 373.629 cv
36.684 373.668 36.66 373.691 36.629 373.707 cv
36.598 373.723 36.566 373.73 36.539 373.73 cv
31.902 373.73 li
31.867 373.73 31.84 373.723 31.813 373.707 cv
31.785 373.691 31.758 373.668 31.734 373.629 cv
31.707 373.598 31.688 373.547 31.676 373.484 cv
31.66 373.426 31.652 373.355 31.656 373.266 cv
31.652 373.187 31.66 373.113 31.676 373.051 cv
31.688 372.992 31.703 372.945 31.727 372.906 cv
31.742 372.871 31.77 372.84 31.801 372.816 cv
31.832 372.797 31.863 372.789 31.902 372.785 cv
33.754 372.785 li
33.754 366.039 li
32.039 367.059 li
31.949 367.109 31.879 367.137 31.832 367.145 cv
31.777 367.152 31.734 367.145 31.703 367.113 cv
31.668 367.086 31.648 367.035 31.637 366.965 cv
31.625 366.898 31.617 366.812 31.621 366.703 cv
31.617 366.629 31.621 366.562 31.633 366.504 cv
31.637 366.453 31.648 366.406 31.664 366.367 cv
31.676 366.332 31.695 366.301 31.719 366.273 cv
31.742 366.246 31.773 366.219 31.82 366.191 cv
33.863 364.879 li
33.879 364.867 33.898 364.855 33.93 364.848 cv
33.953 364.84 33.988 364.832 34.035 364.82 cv
34.074 364.812 34.125 364.805 34.18 364.801 cv
34.234 364.801 34.301 364.801 34.387 364.797 cv
34.492 364.801 34.586 364.805 34.66 364.812 cv
34.73 364.82 34.785 364.836 34.832 364.852 cv
34.871 364.871 34.898 364.891 34.914 364.914 cv
34.922 364.941 34.93 364.965 34.934 364.988 cv
34.934 372.785 li
36.539 372.785 li
36.574 372.789 36.609 372.797 36.641 372.816 cv
36.672 372.84 36.695 372.871 36.719 372.906 cv
36.734 372.945 36.75 372.992 36.766 373.051 cv
36.773 373.113 36.781 373.187 36.785 373.266 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.141 369.273 mo
44.137 369.957 44.086 370.578 43.98 371.141 cv
43.871 371.703 43.691 372.187 43.445 372.59 cv
43.191 372.996 42.863 373.309 42.465 373.527 cv
42.059 373.75 41.566 373.859 40.98 373.859 cv
40.422 373.859 39.949 373.762 39.57 373.562 cv
39.188 373.367 38.883 373.074 38.648 372.687 cv
38.414 372.301 38.246 371.828 38.152 371.262 cv
38.051 370.699 38.004 370.051 38.004 369.316 cv
38.004 368.645 38.059 368.023 38.168 367.457 cv
38.277 366.895 38.453 366.41 38.703 366.004 cv
38.945 365.602 39.27 365.289 39.676 365.062 cv
40.074 364.844 40.57 364.73 41.16 364.73 cv
41.719 364.73 42.191 364.832 42.574 365.027 cv
42.957 365.23 43.262 365.523 43.496 365.906 cv
43.727 366.297 43.895 366.77 43.992 367.332 cv
44.09 367.895 44.137 368.543 44.141 369.273 cv
cp
42.934 369.355 mo
42.93 368.914 42.914 368.516 42.887 368.164 cv
42.852 367.812 42.805 367.504 42.746 367.234 cv
42.68 366.965 42.602 366.734 42.504 366.539 cv
42.406 366.348 42.289 366.187 42.152 366.059 cv
42.012 365.934 41.852 365.84 41.68 365.781 cv
41.5 365.727 41.305 365.699 41.09 365.695 cv
40.699 365.699 40.383 365.789 40.145 365.973 cv
39.898 366.156 39.707 366.41 39.57 366.727 cv
39.43 367.047 39.336 367.418 39.285 367.848 cv
39.234 368.277 39.211 368.742 39.211 369.234 cv
39.211 369.898 39.242 370.461 39.313 370.922 cv
39.379 371.391 39.488 371.77 39.641 372.059 cv
39.785 372.355 39.977 372.566 40.207 372.695 cv
40.438 372.832 40.719 372.898 41.051 372.895 cv
41.305 372.898 41.527 372.859 41.723 372.773 cv
41.914 372.695 42.082 372.574 42.223 372.418 cv
42.363 372.266 42.477 372.082 42.57 371.867 cv
42.656 371.652 42.73 371.414 42.789 371.152 cv
42.84 370.895 42.879 370.613 42.902 370.309 cv
42.922 370.004 42.93 369.687 42.934 369.355 cv
cp
f
30.41 333.82 mo
44.601 333.82 li
44.601 350.91 li
30.41 350.91 li
cp
0 0 0 0 cmyk
ef
36.785 346.746 mo
36.781 346.836 36.773 346.906 36.762 346.965 cv
36.746 347.027 36.727 347.078 36.707 347.109 cv
36.684 347.148 36.66 347.172 36.629 347.187 cv
36.598 347.203 36.566 347.211 36.539 347.211 cv
31.902 347.211 li
31.867 347.211 31.84 347.203 31.813 347.187 cv
31.785 347.172 31.758 347.148 31.734 347.109 cv
31.707 347.078 31.688 347.027 31.676 346.965 cv
31.66 346.906 31.652 346.836 31.656 346.746 cv
31.652 346.668 31.66 346.594 31.676 346.531 cv
31.688 346.473 31.703 346.426 31.727 346.387 cv
31.742 346.352 31.77 346.32 31.801 346.297 cv
31.832 346.277 31.863 346.27 31.902 346.266 cv
33.754 346.266 li
33.754 339.52 li
32.039 340.539 li
31.949 340.59 31.879 340.617 31.832 340.625 cv
31.777 340.633 31.734 340.625 31.703 340.594 cv
31.668 340.566 31.648 340.516 31.637 340.445 cv
31.625 340.379 31.617 340.293 31.621 340.184 cv
31.617 340.109 31.621 340.043 31.633 339.984 cv
31.637 339.934 31.648 339.887 31.664 339.848 cv
31.676 339.812 31.695 339.781 31.719 339.754 cv
31.742 339.727 31.773 339.699 31.82 339.672 cv
33.863 338.359 li
33.879 338.348 33.898 338.336 33.93 338.328 cv
33.953 338.32 33.988 338.312 34.035 338.301 cv
34.074 338.293 34.125 338.285 34.18 338.281 cv
34.234 338.281 34.301 338.281 34.387 338.277 cv
34.492 338.281 34.586 338.285 34.66 338.293 cv
34.73 338.301 34.785 338.316 34.832 338.332 cv
34.871 338.352 34.898 338.371 34.914 338.395 cv
34.922 338.422 34.93 338.445 34.934 338.469 cv
34.934 346.266 li
36.539 346.266 li
36.574 346.27 36.609 346.277 36.641 346.297 cv
36.672 346.32 36.695 346.352 36.719 346.387 cv
36.734 346.426 36.75 346.473 36.766 346.531 cv
36.773 346.594 36.781 346.668 36.785 346.746 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.848 346.703 mo
43.844 346.789 43.84 346.863 43.828 346.926 cv
43.816 346.992 43.801 347.047 43.781 347.086 cv
43.758 347.133 43.73 347.164 43.699 347.18 cv
43.664 347.203 43.625 347.211 43.586 347.211 cv
38.684 347.211 li
38.621 347.211 38.563 347.203 38.516 347.187 cv
38.465 347.172 38.426 347.148 38.391 347.109 cv
38.355 347.078 38.328 347.023 38.316 346.953 cv
38.297 346.883 38.289 346.797 38.293 346.695 cv
38.289 346.605 38.293 346.527 38.301 346.457 cv
38.305 346.391 38.32 346.332 38.348 346.277 cv
38.371 346.227 38.402 346.172 38.438 346.117 cv
38.473 346.066 38.516 346.012 38.574 345.949 cv
40.348 344.125 li
40.758 343.707 41.086 343.332 41.336 342.996 cv
41.582 342.668 41.773 342.363 41.906 342.086 cv
42.039 341.812 42.125 341.562 42.172 341.336 cv
42.211 341.113 42.234 340.902 42.234 340.707 cv
42.234 340.512 42.199 340.328 42.133 340.148 cv
42.066 339.977 41.973 339.82 41.848 339.684 cv
41.723 339.555 41.566 339.449 41.379 339.367 cv
41.191 339.293 40.973 339.254 40.727 339.25 cv
40.438 339.254 40.18 339.293 39.953 339.367 cv
39.723 339.449 39.523 339.535 39.352 339.621 cv
39.18 339.715 39.035 339.797 38.918 339.875 cv
38.801 339.953 38.715 339.992 38.664 339.992 cv
38.629 339.992 38.598 339.984 38.574 339.965 cv
38.543 339.949 38.523 339.918 38.508 339.875 cv
38.492 339.836 38.477 339.781 38.469 339.711 cv
38.457 339.645 38.453 339.562 38.457 339.465 cv
38.453 339.398 38.457 339.34 38.465 339.289 cv
38.469 339.238 38.477 339.195 38.488 339.156 cv
38.496 339.121 38.512 339.086 38.531 339.055 cv
38.551 339.023 38.586 338.984 38.645 338.934 cv
38.695 338.887 38.789 338.82 38.926 338.738 cv
39.059 338.656 39.23 338.578 39.434 338.496 cv
39.637 338.418 39.859 338.348 40.105 338.293 cv
40.348 338.238 40.605 338.211 40.879 338.211 cv
41.305 338.211 41.68 338.273 42.004 338.395 cv
42.324 338.516 42.59 338.68 42.805 338.891 cv
43.016 339.102 43.176 339.348 43.281 339.621 cv
43.387 339.902 43.441 340.199 43.441 340.512 cv
43.441 340.801 43.414 341.082 43.363 341.359 cv
43.313 341.645 43.207 341.949 43.047 342.273 cv
42.883 342.602 42.648 342.965 42.344 343.363 cv
42.035 343.766 41.629 344.227 41.125 344.742 cv
39.719 346.211 li
43.578 346.211 li
43.609 346.215 43.645 346.227 43.684 346.242 cv
43.715 346.266 43.746 346.297 43.773 346.336 cv
43.797 346.379 43.816 346.43 43.828 346.488 cv
43.84 346.555 43.844 346.625 43.848 346.703 cv
cp
f
30.41 307.309 mo
44.601 307.309 li
44.601 324.399 li
30.41 324.399 li
cp
0 0 0 0 cmyk
ef
36.785 320.227 mo
36.781 320.316 36.773 320.387 36.762 320.445 cv
36.746 320.508 36.727 320.559 36.707 320.59 cv
36.684 320.629 36.66 320.652 36.629 320.668 cv
36.598 320.684 36.566 320.691 36.539 320.691 cv
31.902 320.691 li
31.867 320.691 31.84 320.684 31.813 320.668 cv
31.785 320.652 31.758 320.629 31.734 320.59 cv
31.707 320.559 31.688 320.508 31.676 320.445 cv
31.66 320.387 31.652 320.316 31.656 320.227 cv
31.652 320.148 31.66 320.074 31.676 320.012 cv
31.688 319.953 31.703 319.906 31.727 319.867 cv
31.742 319.832 31.77 319.801 31.801 319.777 cv
31.832 319.758 31.863 319.75 31.902 319.746 cv
33.754 319.746 li
33.754 313 li
32.039 314.02 li
31.949 314.07 31.879 314.098 31.832 314.105 cv
31.777 314.113 31.734 314.105 31.703 314.074 cv
31.668 314.047 31.648 313.996 31.637 313.926 cv
31.625 313.859 31.617 313.773 31.621 313.664 cv
31.617 313.59 31.621 313.523 31.633 313.465 cv
31.637 313.414 31.648 313.367 31.664 313.328 cv
31.676 313.293 31.695 313.262 31.719 313.234 cv
31.742 313.207 31.773 313.18 31.82 313.152 cv
33.863 311.84 li
33.879 311.828 33.898 311.816 33.93 311.809 cv
33.953 311.801 33.988 311.793 34.035 311.781 cv
34.074 311.773 34.125 311.766 34.18 311.762 cv
34.234 311.762 34.301 311.762 34.387 311.758 cv
34.492 311.762 34.586 311.766 34.66 311.773 cv
34.73 311.781 34.785 311.797 34.832 311.812 cv
34.871 311.832 34.898 311.852 34.914 311.875 cv
34.922 311.902 34.93 311.926 34.934 311.949 cv
34.934 319.746 li
36.539 319.746 li
36.574 319.75 36.609 319.758 36.641 319.777 cv
36.672 319.801 36.695 319.832 36.719 319.867 cv
36.734 319.906 36.75 319.953 36.766 320.012 cv
36.773 320.074 36.781 320.148 36.785 320.227 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.223 318.168 mo
44.219 318.32 44.195 318.441 44.152 318.527 cv
44.105 318.617 44.043 318.66 43.961 318.656 cv
42.961 318.656 li
42.961 320.52 li
42.961 320.559 42.949 320.59 42.934 320.613 cv
42.91 320.641 42.879 320.66 42.836 320.68 cv
42.785 320.695 42.723 320.707 42.652 320.719 cv
42.574 320.727 42.48 320.73 42.363 320.734 cv
42.246 320.73 42.148 320.727 42.078 320.719 cv
42 320.707 41.941 320.695 41.898 320.68 cv
41.852 320.66 41.82 320.641 41.805 320.613 cv
41.785 320.59 41.777 320.559 41.781 320.52 cv
41.781 318.656 li
38.152 318.656 li
38.094 318.66 38.051 318.652 38.016 318.637 cv
37.98 318.625 37.945 318.598 37.918 318.559 cv
37.887 318.523 37.867 318.473 37.855 318.402 cv
37.844 318.336 37.84 318.246 37.84 318.133 cv
37.84 318.051 37.84 317.973 37.848 317.902 cv
37.848 317.832 37.859 317.77 37.875 317.715 cv
37.887 317.66 37.902 317.605 37.93 317.551 cv
37.949 317.496 37.977 317.441 38.012 317.379 cv
41.172 311.992 li
41.191 311.957 41.227 311.926 41.273 311.898 cv
41.316 311.871 41.371 311.848 41.445 311.828 cv
41.512 311.812 41.598 311.801 41.703 311.789 cv
41.805 311.785 41.926 311.781 42.066 311.777 cv
42.215 311.781 42.352 311.785 42.469 311.797 cv
42.582 311.809 42.672 311.824 42.746 311.84 cv
42.813 311.859 42.867 311.883 42.906 311.914 cv
42.941 311.945 42.961 311.98 42.961 312.02 cv
42.961 317.684 li
43.961 317.684 li
44.035 317.687 44.098 317.727 44.148 317.805 cv
44.195 317.887 44.219 318.008 44.223 318.168 cv
cp
41.781 312.816 mo
41.77 312.816 li
38.918 317.684 li
41.781 317.684 li
cp
f
30.41 280.809 mo
44.601 280.809 li
44.601 297.899 li
30.41 297.899 li
cp
0 0 0 0 cmyk
ef
36.785 293.727 mo
36.781 293.816 36.773 293.887 36.762 293.945 cv
36.746 294.008 36.727 294.059 36.707 294.09 cv
36.684 294.129 36.66 294.152 36.629 294.168 cv
36.598 294.184 36.566 294.191 36.539 294.191 cv
31.902 294.191 li
31.867 294.191 31.84 294.184 31.813 294.168 cv
31.785 294.152 31.758 294.129 31.734 294.09 cv
31.707 294.059 31.688 294.008 31.676 293.945 cv
31.66 293.887 31.652 293.816 31.656 293.727 cv
31.652 293.648 31.66 293.574 31.676 293.512 cv
31.688 293.453 31.703 293.406 31.727 293.367 cv
31.742 293.332 31.77 293.301 31.801 293.277 cv
31.832 293.258 31.863 293.25 31.902 293.246 cv
33.754 293.246 li
33.754 286.5 li
32.039 287.52 li
31.949 287.57 31.879 287.598 31.832 287.605 cv
31.777 287.613 31.734 287.605 31.703 287.574 cv
31.668 287.547 31.648 287.496 31.637 287.426 cv
31.625 287.359 31.617 287.273 31.621 287.164 cv
31.617 287.09 31.621 287.023 31.633 286.965 cv
31.637 286.914 31.648 286.867 31.664 286.828 cv
31.676 286.793 31.695 286.762 31.719 286.734 cv
31.742 286.707 31.773 286.68 31.82 286.652 cv
33.863 285.34 li
33.879 285.328 33.898 285.316 33.93 285.309 cv
33.953 285.301 33.988 285.293 34.035 285.281 cv
34.074 285.273 34.125 285.266 34.18 285.262 cv
34.234 285.262 34.301 285.262 34.387 285.258 cv
34.492 285.262 34.586 285.266 34.66 285.273 cv
34.73 285.281 34.785 285.297 34.832 285.312 cv
34.871 285.332 34.898 285.352 34.914 285.375 cv
34.922 285.402 34.93 285.426 34.934 285.449 cv
34.934 293.246 li
36.539 293.246 li
36.574 293.25 36.609 293.258 36.641 293.277 cv
36.672 293.301 36.695 293.332 36.719 293.367 cv
36.734 293.406 36.75 293.453 36.766 293.512 cv
36.773 293.574 36.781 293.648 36.785 293.727 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.074 291.32 mo
44.074 291.711 44.012 292.09 43.895 292.449 cv
43.77 292.816 43.586 293.133 43.344 293.406 cv
43.094 293.684 42.781 293.906 42.406 294.07 cv
42.023 294.238 41.578 294.32 41.063 294.32 cv
40.691 294.32 40.363 294.277 40.082 294.184 cv
39.797 294.098 39.551 293.965 39.34 293.793 cv
39.129 293.625 38.953 293.418 38.816 293.172 cv
38.676 292.926 38.563 292.645 38.48 292.328 cv
38.395 292.016 38.336 291.672 38.301 291.293 cv
38.262 290.922 38.242 290.52 38.246 290.086 cv
38.242 289.707 38.262 289.324 38.305 288.934 cv
38.344 288.551 38.418 288.176 38.523 287.809 cv
38.629 287.449 38.773 287.109 38.953 286.793 cv
39.133 286.477 39.359 286.199 39.633 285.965 cv
39.906 285.73 40.23 285.543 40.609 285.402 cv
40.988 285.266 41.43 285.199 41.934 285.195 cv
42.102 285.199 42.273 285.207 42.445 285.227 cv
42.617 285.25 42.777 285.281 42.926 285.312 cv
43.074 285.352 43.195 285.387 43.297 285.426 cv
43.395 285.465 43.461 285.5 43.496 285.523 cv
43.523 285.551 43.547 285.578 43.566 285.605 cv
43.582 285.637 43.598 285.668 43.605 285.703 cv
43.613 285.738 43.617 285.777 43.625 285.82 cv
43.625 285.863 43.629 285.918 43.633 285.98 cv
43.629 286.066 43.629 286.137 43.629 286.191 cv
43.625 286.254 43.613 286.301 43.602 286.336 cv
43.582 286.375 43.563 286.402 43.539 286.418 cv
43.512 286.437 43.48 286.445 43.441 286.445 cv
43.391 286.445 43.32 286.43 43.234 286.398 cv
43.145 286.367 43.039 286.332 42.918 286.289 cv
42.793 286.254 42.645 286.219 42.469 286.184 cv
42.293 286.156 42.09 286.141 41.859 286.137 cv
41.43 286.141 41.063 286.227 40.758 286.398 cv
40.453 286.57 40.203 286.805 40.008 287.098 cv
39.813 287.391 39.668 287.73 39.578 288.113 cv
39.48 288.504 39.426 288.906 39.418 289.324 cv
39.535 289.258 39.672 289.191 39.82 289.121 cv
39.969 289.055 40.129 288.992 40.305 288.934 cv
40.48 288.883 40.668 288.836 40.863 288.801 cv
41.059 288.77 41.27 288.754 41.496 288.75 cv
41.973 288.754 42.375 288.82 42.707 288.945 cv
43.035 289.078 43.301 289.258 43.508 289.488 cv
43.707 289.719 43.852 289.988 43.941 290.301 cv
44.027 290.613 44.074 290.953 44.074 291.32 cv
cp
42.879 291.43 mo
42.879 291.168 42.852 290.926 42.801 290.707 cv
42.746 290.492 42.656 290.309 42.535 290.152 cv
42.41 290.004 42.246 289.887 42.043 289.805 cv
41.832 289.723 41.578 289.68 41.281 289.68 cv
41.109 289.68 40.941 289.695 40.773 289.727 cv
40.602 289.758 40.438 289.801 40.281 289.848 cv
40.121 289.902 39.973 289.965 39.832 290.035 cv
39.688 290.109 39.555 290.184 39.438 290.262 cv
39.434 290.855 39.473 291.352 39.551 291.746 cv
39.625 292.145 39.734 292.461 39.879 292.699 cv
40.023 292.941 40.203 293.113 40.418 293.215 cv
40.633 293.32 40.883 293.371 41.172 293.367 cv
41.461 293.371 41.715 293.316 41.93 293.203 cv
42.145 293.098 42.32 292.949 42.465 292.762 cv
42.605 292.578 42.711 292.371 42.777 292.141 cv
42.844 291.91 42.879 291.676 42.879 291.43 cv
cp
f
30.41 254.301 mo
44.601 254.301 li
44.601 271.391 li
30.41 271.391 li
cp
0 0 0 0 cmyk
ef
36.785 267.207 mo
36.781 267.297 36.773 267.367 36.762 267.426 cv
36.746 267.488 36.727 267.539 36.707 267.57 cv
36.684 267.609 36.66 267.633 36.629 267.648 cv
36.598 267.664 36.566 267.672 36.539 267.672 cv
31.902 267.672 li
31.867 267.672 31.84 267.664 31.813 267.648 cv
31.785 267.633 31.758 267.609 31.734 267.57 cv
31.707 267.539 31.688 267.488 31.676 267.426 cv
31.66 267.367 31.652 267.297 31.656 267.207 cv
31.652 267.129 31.66 267.055 31.676 266.992 cv
31.688 266.934 31.703 266.887 31.727 266.848 cv
31.742 266.812 31.77 266.781 31.801 266.758 cv
31.832 266.738 31.863 266.73 31.902 266.727 cv
33.754 266.727 li
33.754 259.98 li
32.039 261 li
31.949 261.051 31.879 261.078 31.832 261.086 cv
31.777 261.094 31.734 261.086 31.703 261.055 cv
31.668 261.027 31.648 260.977 31.637 260.906 cv
31.625 260.84 31.617 260.754 31.621 260.645 cv
31.617 260.57 31.621 260.504 31.633 260.445 cv
31.637 260.395 31.648 260.348 31.664 260.309 cv
31.676 260.273 31.695 260.242 31.719 260.215 cv
31.742 260.187 31.773 260.16 31.82 260.133 cv
33.863 258.82 li
33.879 258.809 33.898 258.797 33.93 258.789 cv
33.953 258.781 33.988 258.773 34.035 258.762 cv
34.074 258.754 34.125 258.746 34.18 258.742 cv
34.234 258.742 34.301 258.742 34.387 258.738 cv
34.492 258.742 34.586 258.746 34.66 258.754 cv
34.73 258.762 34.785 258.777 34.832 258.793 cv
34.871 258.812 34.898 258.832 34.914 258.855 cv
34.922 258.883 34.93 258.906 34.934 258.93 cv
34.934 266.727 li
36.539 266.727 li
36.574 266.73 36.609 266.738 36.641 266.758 cv
36.672 266.781 36.695 266.812 36.719 266.848 cv
36.734 266.887 36.75 266.934 36.766 266.992 cv
36.773 267.055 36.781 267.129 36.785 267.207 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.051 265.395 mo
44.051 265.781 43.98 266.125 43.844 266.422 cv
43.707 266.727 43.512 266.977 43.254 267.18 cv
42.996 267.387 42.676 267.543 42.297 267.645 cv
41.914 267.75 41.48 267.801 40.996 267.801 cv
40.535 267.801 40.125 267.754 39.766 267.66 cv
39.402 267.566 39.098 267.426 38.848 267.234 cv
38.598 267.051 38.406 266.82 38.273 266.543 cv
38.141 266.27 38.074 265.957 38.074 265.602 cv
38.074 265.328 38.117 265.07 38.211 264.836 cv
38.297 264.602 38.43 264.387 38.605 264.191 cv
38.773 263.996 38.984 263.812 39.238 263.637 cv
39.488 263.469 39.773 263.305 40.09 263.148 cv
39.816 263.008 39.574 262.859 39.363 262.699 cv
39.152 262.543 38.973 262.371 38.828 262.184 cv
38.68 262 38.57 261.805 38.496 261.594 cv
38.418 261.387 38.379 261.156 38.383 260.906 cv
38.379 260.598 38.434 260.305 38.551 260.031 cv
38.66 259.762 38.832 259.527 39.059 259.324 cv
39.285 259.125 39.57 258.965 39.922 258.848 cv
40.266 258.73 40.676 258.672 41.145 258.672 cv
41.59 258.672 41.977 258.727 42.305 258.832 cv
42.633 258.941 42.902 259.086 43.113 259.27 cv
43.324 259.457 43.48 259.676 43.586 259.926 cv
43.684 260.176 43.734 260.445 43.738 260.734 cv
43.734 260.969 43.695 261.195 43.625 261.406 cv
43.547 261.625 43.438 261.828 43.289 262.016 cv
43.141 262.211 42.961 262.391 42.75 262.555 cv
42.539 262.727 42.297 262.883 42.023 263.023 cv
42.344 263.187 42.629 263.352 42.887 263.52 cv
43.137 263.687 43.352 263.867 43.527 264.062 cv
43.695 264.258 43.824 264.465 43.918 264.68 cv
44.004 264.898 44.051 265.137 44.051 265.395 cv
cp
42.57 260.844 mo
42.566 260.656 42.535 260.48 42.469 260.324 cv
42.402 260.168 42.305 260.035 42.18 259.926 cv
42.051 259.816 41.891 259.734 41.703 259.676 cv
41.508 259.621 41.293 259.594 41.055 259.59 cv
40.559 259.594 40.184 259.703 39.934 259.926 cv
39.676 260.152 39.551 260.461 39.555 260.844 cv
39.551 261.023 39.582 261.187 39.645 261.34 cv
39.707 261.496 39.801 261.641 39.934 261.777 cv
40.059 261.914 40.223 262.047 40.426 262.176 cv
40.621 262.309 40.859 262.445 41.137 262.586 cv
41.598 262.352 41.953 262.09 42.199 261.797 cv
42.445 261.512 42.566 261.195 42.57 260.844 cv
cp
42.859 265.52 mo
42.855 265.312 42.816 265.121 42.742 264.949 cv
42.66 264.781 42.543 264.621 42.387 264.469 cv
42.23 264.32 42.031 264.176 41.797 264.035 cv
41.559 263.898 41.289 263.754 40.98 263.602 cv
40.691 263.746 40.438 263.887 40.223 264.027 cv
40.004 264.168 39.824 264.316 39.688 264.465 cv
39.547 264.621 39.441 264.777 39.371 264.941 cv
39.297 265.109 39.262 265.293 39.266 265.492 cv
39.262 265.937 39.414 266.281 39.723 266.52 cv
40.023 266.766 40.477 266.887 41.082 266.883 cv
41.664 266.887 42.109 266.766 42.41 266.516 cv
42.707 266.273 42.855 265.941 42.859 265.52 cv
cp
f
30.41 227.789 mo
44.601 227.789 li
44.601 244.879 li
30.41 244.879 li
cp
0 0 0 0 cmyk
ef
36.766 240.641 mo
36.762 240.727 36.758 240.801 36.746 240.863 cv
36.734 240.93 36.719 240.984 36.699 241.023 cv
36.676 241.07 36.648 241.102 36.617 241.117 cv
36.582 241.141 36.543 241.148 36.504 241.148 cv
31.602 241.148 li
31.539 241.148 31.48 241.141 31.434 241.125 cv
31.383 241.109 31.344 241.086 31.309 241.047 cv
31.273 241.016 31.246 240.961 31.234 240.891 cv
31.215 240.82 31.207 240.734 31.211 240.633 cv
31.207 240.543 31.211 240.465 31.219 240.395 cv
31.223 240.328 31.238 240.27 31.266 240.215 cv
31.289 240.164 31.32 240.109 31.355 240.055 cv
31.391 240.004 31.434 239.949 31.492 239.887 cv
33.266 238.062 li
33.676 237.645 34.004 237.27 34.254 236.934 cv
34.5 236.605 34.691 236.301 34.824 236.023 cv
34.957 235.75 35.043 235.5 35.09 235.273 cv
35.129 235.051 35.152 234.84 35.152 234.645 cv
35.152 234.449 35.117 234.266 35.051 234.086 cv
34.984 233.914 34.891 233.758 34.766 233.621 cv
34.641 233.492 34.484 233.387 34.297 233.305 cv
34.109 233.23 33.891 233.191 33.645 233.187 cv
33.355 233.191 33.098 233.23 32.871 233.305 cv
32.641 233.387 32.441 233.473 32.27 233.559 cv
32.098 233.652 31.953 233.734 31.836 233.812 cv
31.719 233.891 31.633 233.93 31.582 233.93 cv
31.547 233.93 31.516 233.922 31.492 233.902 cv
31.461 233.887 31.441 233.855 31.426 233.812 cv
31.41 233.773 31.395 233.719 31.387 233.648 cv
31.375 233.582 31.371 233.5 31.375 233.402 cv
31.371 233.336 31.375 233.277 31.383 233.227 cv
31.387 233.176 31.395 233.133 31.406 233.094 cv
31.414 233.059 31.43 233.023 31.449 232.992 cv
31.469 232.961 31.504 232.922 31.563 232.871 cv
31.613 232.824 31.707 232.758 31.844 232.676 cv
31.977 232.594 32.148 232.516 32.352 232.434 cv
32.555 232.355 32.777 232.285 33.023 232.23 cv
33.266 232.176 33.523 232.148 33.797 232.148 cv
34.223 232.148 34.598 232.211 34.922 232.332 cv
35.242 232.453 35.508 232.617 35.723 232.828 cv
35.934 233.039 36.094 233.285 36.199 233.559 cv
36.305 233.84 36.359 234.137 36.359 234.449 cv
36.359 234.738 36.332 235.02 36.281 235.297 cv
36.23 235.582 36.125 235.887 35.965 236.211 cv
35.801 236.539 35.566 236.902 35.262 237.301 cv
34.953 237.703 34.547 238.164 34.043 238.68 cv
32.637 240.148 li
36.496 240.148 li
36.527 240.152 36.563 240.164 36.602 240.18 cv
36.633 240.203 36.664 240.234 36.691 240.273 cv
36.715 240.316 36.734 240.367 36.746 240.426 cv
36.758 240.492 36.762 240.562 36.766 240.641 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.141 236.691 mo
44.137 237.375 44.086 237.996 43.98 238.559 cv
43.871 239.121 43.691 239.605 43.445 240.008 cv
43.191 240.414 42.863 240.727 42.465 240.945 cv
42.059 241.168 41.566 241.277 40.98 241.277 cv
40.422 241.277 39.949 241.18 39.57 240.98 cv
39.188 240.785 38.883 240.492 38.648 240.105 cv
38.414 239.719 38.246 239.246 38.152 238.68 cv
38.051 238.117 38.004 237.469 38.004 236.734 cv
38.004 236.062 38.059 235.441 38.168 234.875 cv
38.277 234.312 38.453 233.828 38.703 233.422 cv
38.945 233.02 39.27 232.707 39.676 232.48 cv
40.074 232.262 40.57 232.148 41.16 232.148 cv
41.719 232.148 42.191 232.25 42.574 232.445 cv
42.957 232.648 43.262 232.941 43.496 233.324 cv
43.727 233.715 43.895 234.187 43.992 234.75 cv
44.09 235.312 44.137 235.961 44.141 236.691 cv
cp
42.934 236.773 mo
42.93 236.332 42.914 235.934 42.887 235.582 cv
42.852 235.23 42.805 234.922 42.746 234.652 cv
42.68 234.383 42.602 234.152 42.504 233.957 cv
42.406 233.766 42.289 233.605 42.152 233.477 cv
42.012 233.352 41.852 233.258 41.68 233.199 cv
41.5 233.145 41.305 233.117 41.09 233.113 cv
40.699 233.117 40.383 233.207 40.145 233.391 cv
39.898 233.574 39.707 233.828 39.57 234.145 cv
39.43 234.465 39.336 234.836 39.285 235.266 cv
39.234 235.695 39.211 236.16 39.211 236.652 cv
39.211 237.316 39.242 237.879 39.313 238.34 cv
39.379 238.809 39.488 239.187 39.641 239.477 cv
39.785 239.773 39.977 239.984 40.207 240.113 cv
40.438 240.25 40.719 240.316 41.051 240.312 cv
41.305 240.316 41.527 240.277 41.723 240.191 cv
41.914 240.113 42.082 239.992 42.223 239.836 cv
42.363 239.684 42.477 239.5 42.57 239.285 cv
42.656 239.07 42.73 238.832 42.789 238.57 cv
42.84 238.312 42.879 238.031 42.902 237.727 cv
42.922 237.422 42.93 237.105 42.934 236.773 cv
cp
f
30.41 201.289 mo
44.601 201.289 li
44.601 218.379 li
30.41 218.379 li
cp
0 0 0 0 cmyk
ef
36.766 214.152 mo
36.762 214.238 36.758 214.312 36.746 214.375 cv
36.734 214.441 36.719 214.496 36.699 214.535 cv
36.676 214.582 36.648 214.613 36.617 214.629 cv
36.582 214.652 36.543 214.66 36.504 214.66 cv
31.602 214.66 li
31.539 214.66 31.48 214.652 31.434 214.637 cv
31.383 214.621 31.344 214.598 31.309 214.559 cv
31.273 214.527 31.246 214.473 31.234 214.402 cv
31.215 214.332 31.207 214.246 31.211 214.145 cv
31.207 214.055 31.211 213.977 31.219 213.906 cv
31.223 213.84 31.238 213.781 31.266 213.727 cv
31.289 213.676 31.32 213.621 31.355 213.566 cv
31.391 213.516 31.434 213.461 31.492 213.398 cv
33.266 211.574 li
33.676 211.156 34.004 210.781 34.254 210.445 cv
34.5 210.117 34.691 209.812 34.824 209.535 cv
34.957 209.262 35.043 209.012 35.09 208.785 cv
35.129 208.562 35.152 208.352 35.152 208.156 cv
35.152 207.961 35.117 207.777 35.051 207.598 cv
34.984 207.426 34.891 207.27 34.766 207.133 cv
34.641 207.004 34.484 206.898 34.297 206.816 cv
34.109 206.742 33.891 206.703 33.645 206.699 cv
33.355 206.703 33.098 206.742 32.871 206.816 cv
32.641 206.898 32.441 206.984 32.27 207.07 cv
32.098 207.164 31.953 207.246 31.836 207.324 cv
31.719 207.402 31.633 207.441 31.582 207.441 cv
31.547 207.441 31.516 207.434 31.492 207.414 cv
31.461 207.398 31.441 207.367 31.426 207.324 cv
31.41 207.285 31.395 207.23 31.387 207.16 cv
31.375 207.094 31.371 207.012 31.375 206.914 cv
31.371 206.848 31.375 206.789 31.383 206.738 cv
31.387 206.687 31.395 206.645 31.406 206.605 cv
31.414 206.57 31.43 206.535 31.449 206.504 cv
31.469 206.473 31.504 206.434 31.563 206.383 cv
31.613 206.336 31.707 206.27 31.844 206.187 cv
31.977 206.105 32.148 206.027 32.352 205.945 cv
32.555 205.867 32.777 205.797 33.023 205.742 cv
33.266 205.687 33.523 205.66 33.797 205.66 cv
34.223 205.66 34.598 205.723 34.922 205.844 cv
35.242 205.965 35.508 206.129 35.723 206.34 cv
35.934 206.551 36.094 206.797 36.199 207.07 cv
36.305 207.352 36.359 207.648 36.359 207.961 cv
36.359 208.25 36.332 208.531 36.281 208.809 cv
36.23 209.094 36.125 209.398 35.965 209.723 cv
35.801 210.051 35.566 210.414 35.262 210.812 cv
34.953 211.215 34.547 211.676 34.043 212.191 cv
32.637 213.66 li
36.496 213.66 li
36.527 213.664 36.563 213.676 36.602 213.691 cv
36.633 213.715 36.664 213.746 36.691 213.785 cv
36.715 213.828 36.734 213.879 36.746 213.937 cv
36.758 214.004 36.762 214.074 36.766 214.152 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.848 214.152 mo
43.844 214.238 43.84 214.312 43.828 214.375 cv
43.816 214.441 43.801 214.496 43.781 214.535 cv
43.758 214.582 43.73 214.613 43.699 214.629 cv
43.664 214.652 43.625 214.66 43.586 214.66 cv
38.684 214.66 li
38.621 214.66 38.563 214.652 38.516 214.637 cv
38.465 214.621 38.426 214.598 38.391 214.559 cv
38.355 214.527 38.328 214.473 38.316 214.402 cv
38.297 214.332 38.289 214.246 38.293 214.145 cv
38.289 214.055 38.293 213.977 38.301 213.906 cv
38.305 213.84 38.32 213.781 38.348 213.727 cv
38.371 213.676 38.402 213.621 38.438 213.566 cv
38.473 213.516 38.516 213.461 38.574 213.398 cv
40.348 211.574 li
40.758 211.156 41.086 210.781 41.336 210.445 cv
41.582 210.117 41.773 209.812 41.906 209.535 cv
42.039 209.262 42.125 209.012 42.172 208.785 cv
42.211 208.562 42.234 208.352 42.234 208.156 cv
42.234 207.961 42.199 207.777 42.133 207.598 cv
42.066 207.426 41.973 207.27 41.848 207.133 cv
41.723 207.004 41.566 206.898 41.379 206.816 cv
41.191 206.742 40.973 206.703 40.727 206.699 cv
40.438 206.703 40.18 206.742 39.953 206.816 cv
39.723 206.898 39.523 206.984 39.352 207.07 cv
39.18 207.164 39.035 207.246 38.918 207.324 cv
38.801 207.402 38.715 207.441 38.664 207.441 cv
38.629 207.441 38.598 207.434 38.574 207.414 cv
38.543 207.398 38.523 207.367 38.508 207.324 cv
38.492 207.285 38.477 207.23 38.469 207.16 cv
38.457 207.094 38.453 207.012 38.457 206.914 cv
38.453 206.848 38.457 206.789 38.465 206.738 cv
38.469 206.687 38.477 206.645 38.488 206.605 cv
38.496 206.57 38.512 206.535 38.531 206.504 cv
38.551 206.473 38.586 206.434 38.645 206.383 cv
38.695 206.336 38.789 206.27 38.926 206.187 cv
39.059 206.105 39.23 206.027 39.434 205.945 cv
39.637 205.867 39.859 205.797 40.105 205.742 cv
40.348 205.687 40.605 205.66 40.879 205.66 cv
41.305 205.66 41.68 205.723 42.004 205.844 cv
42.324 205.965 42.59 206.129 42.805 206.34 cv
43.016 206.551 43.176 206.797 43.281 207.07 cv
43.387 207.352 43.441 207.648 43.441 207.961 cv
43.441 208.25 43.414 208.531 43.363 208.809 cv
43.313 209.094 43.207 209.398 43.047 209.723 cv
42.883 210.051 42.648 210.414 42.344 210.812 cv
42.035 211.215 41.629 211.676 41.125 212.191 cv
39.719 213.66 li
43.578 213.66 li
43.609 213.664 43.645 213.676 43.684 213.691 cv
43.715 213.715 43.746 213.746 43.773 213.785 cv
43.797 213.828 43.816 213.879 43.828 213.937 cv
43.84 214.004 43.844 214.074 43.848 214.152 cv
cp
f
30.41 174.781 mo
44.601 174.781 li
44.601 191.871 li
30.41 191.871 li
cp
0 0 0 0 cmyk
ef
36.766 187.633 mo
36.762 187.719 36.758 187.793 36.746 187.855 cv
36.734 187.922 36.719 187.977 36.699 188.016 cv
36.676 188.062 36.648 188.094 36.617 188.109 cv
36.582 188.133 36.543 188.141 36.504 188.141 cv
31.602 188.141 li
31.539 188.141 31.48 188.133 31.434 188.117 cv
31.383 188.102 31.344 188.078 31.309 188.039 cv
31.273 188.008 31.246 187.953 31.234 187.883 cv
31.215 187.812 31.207 187.727 31.211 187.625 cv
31.207 187.535 31.211 187.457 31.219 187.387 cv
31.223 187.32 31.238 187.262 31.266 187.207 cv
31.289 187.156 31.32 187.102 31.355 187.047 cv
31.391 186.996 31.434 186.941 31.492 186.879 cv
33.266 185.055 li
33.676 184.637 34.004 184.262 34.254 183.926 cv
34.5 183.598 34.691 183.293 34.824 183.016 cv
34.957 182.742 35.043 182.492 35.09 182.266 cv
35.129 182.043 35.152 181.832 35.152 181.637 cv
35.152 181.441 35.117 181.258 35.051 181.078 cv
34.984 180.906 34.891 180.75 34.766 180.613 cv
34.641 180.484 34.484 180.379 34.297 180.297 cv
34.109 180.223 33.891 180.184 33.645 180.18 cv
33.355 180.184 33.098 180.223 32.871 180.297 cv
32.641 180.379 32.441 180.465 32.27 180.551 cv
32.098 180.645 31.953 180.727 31.836 180.805 cv
31.719 180.883 31.633 180.922 31.582 180.922 cv
31.547 180.922 31.516 180.914 31.492 180.895 cv
31.461 180.879 31.441 180.848 31.426 180.805 cv
31.41 180.766 31.395 180.711 31.387 180.641 cv
31.375 180.574 31.371 180.492 31.375 180.395 cv
31.371 180.328 31.375 180.27 31.383 180.219 cv
31.387 180.168 31.395 180.125 31.406 180.086 cv
31.414 180.051 31.43 180.016 31.449 179.984 cv
31.469 179.953 31.504 179.914 31.563 179.863 cv
31.613 179.816 31.707 179.75 31.844 179.668 cv
31.977 179.586 32.148 179.508 32.352 179.426 cv
32.555 179.348 32.777 179.277 33.023 179.223 cv
33.266 179.168 33.523 179.141 33.797 179.141 cv
34.223 179.141 34.598 179.203 34.922 179.324 cv
35.242 179.445 35.508 179.609 35.723 179.82 cv
35.934 180.031 36.094 180.277 36.199 180.551 cv
36.305 180.832 36.359 181.129 36.359 181.441 cv
36.359 181.73 36.332 182.012 36.281 182.289 cv
36.23 182.574 36.125 182.879 35.965 183.203 cv
35.801 183.531 35.566 183.895 35.262 184.293 cv
34.953 184.695 34.547 185.156 34.043 185.672 cv
32.637 187.141 li
36.496 187.141 li
36.527 187.145 36.563 187.156 36.602 187.172 cv
36.633 187.195 36.664 187.227 36.691 187.266 cv
36.715 187.309 36.734 187.359 36.746 187.418 cv
36.758 187.484 36.762 187.555 36.766 187.633 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.223 185.617 mo
44.219 185.77 44.195 185.891 44.152 185.977 cv
44.105 186.066 44.043 186.109 43.961 186.105 cv
42.961 186.105 li
42.961 187.969 li
42.961 188.008 42.949 188.039 42.934 188.062 cv
42.91 188.09 42.879 188.109 42.836 188.129 cv
42.785 188.145 42.723 188.156 42.652 188.168 cv
42.574 188.176 42.48 188.18 42.363 188.184 cv
42.246 188.18 42.148 188.176 42.078 188.168 cv
42 188.156 41.941 188.145 41.898 188.129 cv
41.852 188.109 41.82 188.09 41.805 188.062 cv
41.785 188.039 41.777 188.008 41.781 187.969 cv
41.781 186.105 li
38.152 186.105 li
38.094 186.109 38.051 186.102 38.016 186.086 cv
37.98 186.074 37.945 186.047 37.918 186.008 cv
37.887 185.973 37.867 185.922 37.855 185.852 cv
37.844 185.785 37.84 185.695 37.84 185.582 cv
37.84 185.5 37.84 185.422 37.848 185.352 cv
37.848 185.281 37.859 185.219 37.875 185.164 cv
37.887 185.109 37.902 185.055 37.93 185 cv
37.949 184.945 37.977 184.891 38.012 184.828 cv
41.172 179.441 li
41.191 179.406 41.227 179.375 41.273 179.348 cv
41.316 179.32 41.371 179.297 41.445 179.277 cv
41.512 179.262 41.598 179.25 41.703 179.238 cv
41.805 179.234 41.926 179.23 42.066 179.227 cv
42.215 179.23 42.352 179.234 42.469 179.246 cv
42.582 179.258 42.672 179.273 42.746 179.289 cv
42.813 179.309 42.867 179.332 42.906 179.363 cv
42.941 179.395 42.961 179.43 42.961 179.469 cv
42.961 185.133 li
43.961 185.133 li
44.035 185.137 44.098 185.176 44.148 185.254 cv
44.195 185.336 44.219 185.457 44.223 185.617 cv
cp
41.781 180.266 mo
41.77 180.266 li
38.918 185.133 li
41.781 185.133 li
cp
f
30.41 148.281 mo
44.601 148.281 li
44.601 165.371 li
30.41 165.371 li
cp
0 0 0 0 cmyk
ef
36.766 161.133 mo
36.762 161.219 36.758 161.293 36.746 161.355 cv
36.734 161.422 36.719 161.477 36.699 161.516 cv
36.676 161.562 36.648 161.594 36.617 161.609 cv
36.582 161.633 36.543 161.641 36.504 161.641 cv
31.602 161.641 li
31.539 161.641 31.48 161.633 31.434 161.617 cv
31.383 161.602 31.344 161.578 31.309 161.539 cv
31.273 161.508 31.246 161.453 31.234 161.383 cv
31.215 161.312 31.207 161.227 31.211 161.125 cv
31.207 161.035 31.211 160.957 31.219 160.887 cv
31.223 160.82 31.238 160.762 31.266 160.707 cv
31.289 160.656 31.32 160.602 31.355 160.547 cv
31.391 160.496 31.434 160.441 31.492 160.379 cv
33.266 158.555 li
33.676 158.137 34.004 157.762 34.254 157.426 cv
34.5 157.098 34.691 156.793 34.824 156.516 cv
34.957 156.242 35.043 155.992 35.09 155.766 cv
35.129 155.543 35.152 155.332 35.152 155.137 cv
35.152 154.941 35.117 154.758 35.051 154.578 cv
34.984 154.406 34.891 154.25 34.766 154.113 cv
34.641 153.984 34.484 153.879 34.297 153.797 cv
34.109 153.723 33.891 153.684 33.645 153.68 cv
33.355 153.684 33.098 153.723 32.871 153.797 cv
32.641 153.879 32.441 153.965 32.27 154.051 cv
32.098 154.145 31.953 154.227 31.836 154.305 cv
31.719 154.383 31.633 154.422 31.582 154.422 cv
31.547 154.422 31.516 154.414 31.492 154.395 cv
31.461 154.379 31.441 154.348 31.426 154.305 cv
31.41 154.266 31.395 154.211 31.387 154.141 cv
31.375 154.074 31.371 153.992 31.375 153.895 cv
31.371 153.828 31.375 153.77 31.383 153.719 cv
31.387 153.668 31.395 153.625 31.406 153.586 cv
31.414 153.551 31.43 153.516 31.449 153.484 cv
31.469 153.453 31.504 153.414 31.563 153.363 cv
31.613 153.316 31.707 153.25 31.844 153.168 cv
31.977 153.086 32.148 153.008 32.352 152.926 cv
32.555 152.848 32.777 152.777 33.023 152.723 cv
33.266 152.668 33.523 152.641 33.797 152.641 cv
34.223 152.641 34.598 152.703 34.922 152.824 cv
35.242 152.945 35.508 153.109 35.723 153.32 cv
35.934 153.531 36.094 153.777 36.199 154.051 cv
36.305 154.332 36.359 154.629 36.359 154.941 cv
36.359 155.23 36.332 155.512 36.281 155.789 cv
36.23 156.074 36.125 156.379 35.965 156.703 cv
35.801 157.031 35.566 157.395 35.262 157.793 cv
34.953 158.195 34.547 158.656 34.043 159.172 cv
32.637 160.641 li
36.496 160.641 li
36.527 160.645 36.563 160.656 36.602 160.672 cv
36.633 160.695 36.664 160.727 36.691 160.766 cv
36.715 160.809 36.734 160.859 36.746 160.918 cv
36.758 160.984 36.762 161.055 36.766 161.133 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.074 158.77 mo
44.074 159.16 44.012 159.539 43.895 159.898 cv
43.77 160.266 43.586 160.582 43.344 160.855 cv
43.094 161.133 42.781 161.355 42.406 161.52 cv
42.023 161.687 41.578 161.77 41.063 161.77 cv
40.691 161.77 40.363 161.727 40.082 161.633 cv
39.797 161.547 39.551 161.414 39.34 161.242 cv
39.129 161.074 38.953 160.867 38.816 160.621 cv
38.676 160.375 38.563 160.094 38.48 159.777 cv
38.395 159.465 38.336 159.121 38.301 158.742 cv
38.262 158.371 38.242 157.969 38.246 157.535 cv
38.242 157.156 38.262 156.773 38.305 156.383 cv
38.344 156 38.418 155.625 38.523 155.258 cv
38.629 154.898 38.773 154.559 38.953 154.242 cv
39.133 153.926 39.359 153.648 39.633 153.414 cv
39.906 153.18 40.23 152.992 40.609 152.852 cv
40.988 152.715 41.43 152.648 41.934 152.645 cv
42.102 152.648 42.273 152.656 42.445 152.676 cv
42.617 152.699 42.777 152.73 42.926 152.762 cv
43.074 152.801 43.195 152.836 43.297 152.875 cv
43.395 152.914 43.461 152.949 43.496 152.973 cv
43.523 153 43.547 153.027 43.566 153.055 cv
43.582 153.086 43.598 153.117 43.605 153.152 cv
43.613 153.187 43.617 153.227 43.625 153.27 cv
43.625 153.312 43.629 153.367 43.633 153.43 cv
43.629 153.516 43.629 153.586 43.629 153.641 cv
43.625 153.703 43.613 153.75 43.602 153.785 cv
43.582 153.824 43.563 153.852 43.539 153.867 cv
43.512 153.887 43.48 153.895 43.441 153.895 cv
43.391 153.895 43.32 153.879 43.234 153.848 cv
43.145 153.816 43.039 153.781 42.918 153.738 cv
42.793 153.703 42.645 153.668 42.469 153.633 cv
42.293 153.605 42.09 153.59 41.859 153.586 cv
41.43 153.59 41.063 153.676 40.758 153.848 cv
40.453 154.02 40.203 154.254 40.008 154.547 cv
39.813 154.84 39.668 155.18 39.578 155.562 cv
39.48 155.953 39.426 156.355 39.418 156.773 cv
39.535 156.707 39.672 156.641 39.82 156.57 cv
39.969 156.504 40.129 156.441 40.305 156.383 cv
40.48 156.332 40.668 156.285 40.863 156.25 cv
41.059 156.219 41.27 156.203 41.496 156.199 cv
41.973 156.203 42.375 156.27 42.707 156.395 cv
43.035 156.527 43.301 156.707 43.508 156.937 cv
43.707 157.168 43.852 157.437 43.941 157.75 cv
44.027 158.062 44.074 158.402 44.074 158.77 cv
cp
42.879 158.879 mo
42.879 158.617 42.852 158.375 42.801 158.156 cv
42.746 157.941 42.656 157.758 42.535 157.602 cv
42.41 157.453 42.246 157.336 42.043 157.254 cv
41.832 157.172 41.578 157.129 41.281 157.129 cv
41.109 157.129 40.941 157.145 40.773 157.176 cv
40.602 157.207 40.438 157.25 40.281 157.297 cv
40.121 157.352 39.973 157.414 39.832 157.484 cv
39.688 157.559 39.555 157.633 39.438 157.711 cv
39.434 158.305 39.473 158.801 39.551 159.195 cv
39.625 159.594 39.734 159.91 39.879 160.148 cv
40.023 160.391 40.203 160.562 40.418 160.664 cv
40.633 160.77 40.883 160.82 41.172 160.816 cv
41.461 160.82 41.715 160.766 41.93 160.652 cv
42.145 160.547 42.32 160.398 42.465 160.211 cv
42.605 160.027 42.711 159.82 42.777 159.59 cv
42.844 159.359 42.879 159.125 42.879 158.879 cv
cp
f
30.41 121.77 mo
44.601 121.77 li
44.601 138.86 li
30.41 138.86 li
cp
0 0 0 0 cmyk
ef
36.766 134.613 mo
36.762 134.699 36.758 134.773 36.746 134.836 cv
36.734 134.902 36.719 134.957 36.699 134.996 cv
36.676 135.043 36.648 135.074 36.617 135.09 cv
36.582 135.113 36.543 135.121 36.504 135.121 cv
31.602 135.121 li
31.539 135.121 31.48 135.113 31.434 135.098 cv
31.383 135.082 31.344 135.059 31.309 135.02 cv
31.273 134.988 31.246 134.934 31.234 134.863 cv
31.215 134.793 31.207 134.707 31.211 134.605 cv
31.207 134.516 31.211 134.437 31.219 134.367 cv
31.223 134.301 31.238 134.242 31.266 134.187 cv
31.289 134.137 31.32 134.082 31.355 134.027 cv
31.391 133.977 31.434 133.922 31.492 133.859 cv
33.266 132.035 li
33.676 131.617 34.004 131.242 34.254 130.906 cv
34.5 130.578 34.691 130.273 34.824 129.996 cv
34.957 129.723 35.043 129.473 35.09 129.246 cv
35.129 129.023 35.152 128.812 35.152 128.617 cv
35.152 128.422 35.117 128.238 35.051 128.059 cv
34.984 127.887 34.891 127.73 34.766 127.594 cv
34.641 127.465 34.484 127.359 34.297 127.277 cv
34.109 127.203 33.891 127.164 33.645 127.16 cv
33.355 127.164 33.098 127.203 32.871 127.277 cv
32.641 127.359 32.441 127.445 32.27 127.531 cv
32.098 127.625 31.953 127.707 31.836 127.785 cv
31.719 127.863 31.633 127.902 31.582 127.902 cv
31.547 127.902 31.516 127.895 31.492 127.875 cv
31.461 127.859 31.441 127.828 31.426 127.785 cv
31.41 127.746 31.395 127.691 31.387 127.621 cv
31.375 127.555 31.371 127.473 31.375 127.375 cv
31.371 127.309 31.375 127.25 31.383 127.199 cv
31.387 127.148 31.395 127.105 31.406 127.066 cv
31.414 127.031 31.43 126.996 31.449 126.965 cv
31.469 126.934 31.504 126.895 31.563 126.844 cv
31.613 126.797 31.707 126.73 31.844 126.648 cv
31.977 126.566 32.148 126.488 32.352 126.406 cv
32.555 126.328 32.777 126.258 33.023 126.203 cv
33.266 126.148 33.523 126.121 33.797 126.121 cv
34.223 126.121 34.598 126.184 34.922 126.305 cv
35.242 126.426 35.508 126.59 35.723 126.801 cv
35.934 127.012 36.094 127.258 36.199 127.531 cv
36.305 127.812 36.359 128.109 36.359 128.422 cv
36.359 128.711 36.332 128.992 36.281 129.27 cv
36.23 129.555 36.125 129.859 35.965 130.184 cv
35.801 130.512 35.566 130.875 35.262 131.273 cv
34.953 131.676 34.547 132.137 34.043 132.652 cv
32.637 134.121 li
36.496 134.121 li
36.527 134.125 36.563 134.137 36.602 134.152 cv
36.633 134.176 36.664 134.207 36.691 134.246 cv
36.715 134.289 36.734 134.34 36.746 134.398 cv
36.758 134.465 36.762 134.535 36.766 134.613 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.051 132.844 mo
44.051 133.23 43.98 133.574 43.844 133.871 cv
43.707 134.176 43.512 134.426 43.254 134.629 cv
42.996 134.836 42.676 134.992 42.297 135.094 cv
41.914 135.199 41.48 135.25 40.996 135.25 cv
40.535 135.25 40.125 135.203 39.766 135.109 cv
39.402 135.016 39.098 134.875 38.848 134.684 cv
38.598 134.5 38.406 134.27 38.273 133.992 cv
38.141 133.719 38.074 133.406 38.074 133.051 cv
38.074 132.777 38.117 132.52 38.211 132.285 cv
38.297 132.051 38.43 131.836 38.605 131.641 cv
38.773 131.445 38.984 131.262 39.238 131.086 cv
39.488 130.918 39.773 130.754 40.09 130.598 cv
39.816 130.457 39.574 130.309 39.363 130.148 cv
39.152 129.992 38.973 129.82 38.828 129.633 cv
38.68 129.449 38.57 129.254 38.496 129.043 cv
38.418 128.836 38.379 128.605 38.383 128.355 cv
38.379 128.047 38.434 127.754 38.551 127.48 cv
38.66 127.211 38.832 126.977 39.059 126.773 cv
39.285 126.574 39.57 126.414 39.922 126.297 cv
40.266 126.18 40.676 126.121 41.145 126.121 cv
41.59 126.121 41.977 126.176 42.305 126.281 cv
42.633 126.391 42.902 126.535 43.113 126.719 cv
43.324 126.906 43.48 127.125 43.586 127.375 cv
43.684 127.625 43.734 127.895 43.738 128.184 cv
43.734 128.418 43.695 128.645 43.625 128.855 cv
43.547 129.074 43.438 129.277 43.289 129.465 cv
43.141 129.66 42.961 129.84 42.75 130.004 cv
42.539 130.176 42.297 130.332 42.023 130.473 cv
42.344 130.637 42.629 130.801 42.887 130.969 cv
43.137 131.137 43.352 131.316 43.527 131.512 cv
43.695 131.707 43.824 131.914 43.918 132.129 cv
44.004 132.348 44.051 132.586 44.051 132.844 cv
cp
42.57 128.293 mo
42.566 128.105 42.535 127.93 42.469 127.773 cv
42.402 127.617 42.305 127.484 42.18 127.375 cv
42.051 127.266 41.891 127.184 41.703 127.125 cv
41.508 127.07 41.293 127.043 41.055 127.039 cv
40.559 127.043 40.184 127.152 39.934 127.375 cv
39.676 127.602 39.551 127.91 39.555 128.293 cv
39.551 128.473 39.582 128.637 39.645 128.789 cv
39.707 128.945 39.801 129.09 39.934 129.227 cv
40.059 129.363 40.223 129.496 40.426 129.625 cv
40.621 129.758 40.859 129.895 41.137 130.035 cv
41.598 129.801 41.953 129.539 42.199 129.246 cv
42.445 128.961 42.566 128.645 42.57 128.293 cv
cp
42.859 132.969 mo
42.855 132.762 42.816 132.57 42.742 132.398 cv
42.66 132.23 42.543 132.07 42.387 131.918 cv
42.23 131.77 42.031 131.625 41.797 131.484 cv
41.559 131.348 41.289 131.203 40.98 131.051 cv
40.691 131.195 40.438 131.336 40.223 131.477 cv
40.004 131.617 39.824 131.766 39.688 131.914 cv
39.547 132.07 39.441 132.227 39.371 132.391 cv
39.297 132.559 39.262 132.742 39.266 132.941 cv
39.262 133.387 39.414 133.73 39.723 133.969 cv
40.023 134.215 40.477 134.336 41.082 134.332 cv
41.664 134.336 42.109 134.215 42.41 133.965 cv
42.707 133.723 42.855 133.391 42.859 132.969 cv
cp
f
30.41 95.262 mo
44.601 95.262 li
44.601 112.352 li
30.41 112.352 li
cp
0 0 0 0 cmyk
ef
36.695 106.066 mo
36.691 106.477 36.621 106.844 36.48 107.168 cv
36.336 107.496 36.133 107.777 35.871 108.008 cv
35.605 108.242 35.277 108.418 34.891 108.543 cv
34.5 108.668 34.063 108.73 33.578 108.73 cv
33.273 108.73 32.996 108.703 32.742 108.656 cv
32.48 108.609 32.25 108.559 32.055 108.488 cv
31.852 108.426 31.688 108.355 31.555 108.285 cv
31.422 108.215 31.336 108.164 31.305 108.129 cv
31.266 108.102 31.242 108.07 31.227 108.035 cv
31.207 108.004 31.188 107.965 31.176 107.918 cv
31.16 107.875 31.152 107.82 31.145 107.75 cv
31.137 107.687 31.133 107.605 31.137 107.504 cv
31.133 107.344 31.148 107.23 31.184 107.164 cv
31.215 107.102 31.262 107.066 31.324 107.066 cv
31.367 107.066 31.449 107.105 31.574 107.176 cv
31.695 107.254 31.855 107.332 32.051 107.414 cv
32.242 107.5 32.469 107.578 32.734 107.648 cv
32.992 107.723 33.285 107.758 33.605 107.758 cv
33.914 107.758 34.184 107.719 34.422 107.641 cv
34.652 107.562 34.852 107.453 35.012 107.312 cv
35.168 107.172 35.285 107.004 35.367 106.809 cv
35.445 106.613 35.484 106.402 35.488 106.176 cv
35.484 105.926 35.434 105.699 35.336 105.496 cv
35.23 105.297 35.082 105.125 34.891 104.977 cv
34.691 104.832 34.453 104.719 34.168 104.641 cv
33.883 104.562 33.559 104.523 33.195 104.523 cv
32.324 104.523 li
32.281 104.523 32.246 104.516 32.211 104.5 cv
32.176 104.484 32.145 104.457 32.121 104.418 cv
32.094 104.383 32.074 104.336 32.059 104.277 cv
32.043 104.219 32.035 104.141 32.035 104.043 cv
32.035 103.957 32.039 103.887 32.055 103.828 cv
32.063 103.773 32.082 103.727 32.113 103.691 cv
32.137 103.656 32.168 103.633 32.199 103.613 cv
32.23 103.602 32.266 103.594 32.309 103.59 cv
33.082 103.59 li
33.383 103.594 33.652 103.555 33.895 103.473 cv
34.129 103.398 34.332 103.285 34.504 103.137 cv
34.668 102.992 34.797 102.816 34.887 102.613 cv
34.977 102.41 35.023 102.184 35.023 101.93 cv
35.023 101.75 34.992 101.574 34.934 101.406 cv
34.871 101.242 34.781 101.098 34.664 100.973 cv
34.543 100.848 34.391 100.75 34.211 100.68 cv
34.023 100.609 33.813 100.574 33.57 100.574 cv
33.305 100.574 33.059 100.617 32.84 100.695 cv
32.613 100.777 32.418 100.863 32.246 100.953 cv
32.07 101.047 31.926 101.133 31.813 101.211 cv
31.699 101.293 31.617 101.332 31.574 101.328 cv
31.539 101.332 31.512 101.324 31.488 101.312 cv
31.461 101.301 31.441 101.277 31.426 101.242 cv
31.41 101.211 31.398 101.164 31.391 101.098 cv
31.383 101.039 31.379 100.957 31.383 100.855 cv
31.379 100.789 31.379 100.73 31.387 100.676 cv
31.387 100.625 31.398 100.578 31.414 100.535 cv
31.43 100.5 31.445 100.465 31.465 100.43 cv
31.48 100.402 31.512 100.363 31.555 100.316 cv
31.598 100.273 31.684 100.211 31.82 100.129 cv
31.949 100.047 32.113 99.969 32.309 99.887 cv
32.5 99.809 32.723 99.738 32.98 99.684 cv
33.23 99.629 33.504 99.602 33.801 99.602 cv
34.207 99.602 34.57 99.656 34.883 99.758 cv
35.195 99.867 35.453 100.016 35.664 100.203 cv
35.867 100.398 36.023 100.629 36.129 100.895 cv
36.23 101.164 36.281 101.457 36.285 101.781 cv
36.281 102.062 36.246 102.324 36.176 102.559 cv
36.102 102.801 35.992 103.012 35.852 103.195 cv
35.707 103.383 35.535 103.539 35.332 103.668 cv
35.125 103.801 34.887 103.895 34.617 103.941 cv
34.617 103.953 li
34.922 103.988 35.203 104.062 35.457 104.184 cv
35.711 104.305 35.93 104.457 36.113 104.641 cv
36.293 104.824 36.434 105.039 36.539 105.281 cv
36.641 105.527 36.691 105.789 36.695 106.066 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.141 104.145 mo
44.137 104.828 44.086 105.449 43.98 106.012 cv
43.871 106.574 43.691 107.059 43.445 107.461 cv
43.191 107.867 42.863 108.18 42.465 108.398 cv
42.059 108.621 41.566 108.73 40.98 108.73 cv
40.422 108.73 39.949 108.633 39.57 108.434 cv
39.188 108.238 38.883 107.945 38.648 107.559 cv
38.414 107.172 38.246 106.699 38.152 106.133 cv
38.051 105.57 38.004 104.922 38.004 104.187 cv
38.004 103.516 38.059 102.895 38.168 102.328 cv
38.277 101.766 38.453 101.281 38.703 100.875 cv
38.945 100.473 39.27 100.16 39.676 99.934 cv
40.074 99.715 40.57 99.602 41.16 99.602 cv
41.719 99.602 42.191 99.703 42.574 99.898 cv
42.957 100.102 43.262 100.395 43.496 100.777 cv
43.727 101.168 43.895 101.641 43.992 102.203 cv
44.09 102.766 44.137 103.414 44.141 104.145 cv
cp
42.934 104.227 mo
42.93 103.785 42.914 103.387 42.887 103.035 cv
42.852 102.684 42.805 102.375 42.746 102.105 cv
42.68 101.836 42.602 101.605 42.504 101.41 cv
42.406 101.219 42.289 101.059 42.152 100.93 cv
42.012 100.805 41.852 100.711 41.68 100.652 cv
41.5 100.598 41.305 100.57 41.09 100.566 cv
40.699 100.57 40.383 100.66 40.145 100.844 cv
39.898 101.027 39.707 101.281 39.57 101.598 cv
39.43 101.918 39.336 102.289 39.285 102.719 cv
39.234 103.148 39.211 103.613 39.211 104.105 cv
39.211 104.77 39.242 105.332 39.313 105.793 cv
39.379 106.262 39.488 106.641 39.641 106.93 cv
39.785 107.227 39.977 107.437 40.207 107.566 cv
40.438 107.703 40.719 107.77 41.051 107.766 cv
41.305 107.77 41.527 107.73 41.723 107.645 cv
41.914 107.566 42.082 107.445 42.223 107.289 cv
42.363 107.137 42.477 106.953 42.57 106.738 cv
42.656 106.523 42.73 106.285 42.789 106.023 cv
42.84 105.766 42.879 105.484 42.902 105.18 cv
42.922 104.875 42.93 104.559 42.934 104.227 cv
cp
f
30.41 68.762 mo
44.601 68.762 li
44.601 85.852 li
30.41 85.852 li
cp
0 0 0 0 cmyk
ef
36.695 79.566 mo
36.691 79.977 36.621 80.344 36.48 80.668 cv
36.336 80.996 36.133 81.277 35.871 81.508 cv
35.605 81.742 35.277 81.918 34.891 82.043 cv
34.5 82.168 34.063 82.23 33.578 82.23 cv
33.273 82.23 32.996 82.203 32.742 82.156 cv
32.48 82.109 32.25 82.059 32.055 81.988 cv
31.852 81.926 31.688 81.855 31.555 81.785 cv
31.422 81.715 31.336 81.664 31.305 81.629 cv
31.266 81.602 31.242 81.57 31.227 81.535 cv
31.207 81.504 31.188 81.465 31.176 81.418 cv
31.16 81.375 31.152 81.32 31.145 81.25 cv
31.137 81.187 31.133 81.105 31.137 81.004 cv
31.133 80.844 31.148 80.73 31.184 80.664 cv
31.215 80.602 31.262 80.566 31.324 80.566 cv
31.367 80.566 31.449 80.605 31.574 80.676 cv
31.695 80.754 31.855 80.832 32.051 80.914 cv
32.242 81 32.469 81.078 32.734 81.148 cv
32.992 81.223 33.285 81.258 33.605 81.258 cv
33.914 81.258 34.184 81.219 34.422 81.141 cv
34.652 81.062 34.852 80.953 35.012 80.812 cv
35.168 80.672 35.285 80.504 35.367 80.309 cv
35.445 80.113 35.484 79.902 35.488 79.676 cv
35.484 79.426 35.434 79.199 35.336 78.996 cv
35.23 78.797 35.082 78.625 34.891 78.477 cv
34.691 78.332 34.453 78.219 34.168 78.141 cv
33.883 78.062 33.559 78.023 33.195 78.023 cv
32.324 78.023 li
32.281 78.023 32.246 78.016 32.211 78 cv
32.176 77.984 32.145 77.957 32.121 77.918 cv
32.094 77.883 32.074 77.836 32.059 77.777 cv
32.043 77.719 32.035 77.641 32.035 77.543 cv
32.035 77.457 32.039 77.387 32.055 77.328 cv
32.063 77.273 32.082 77.227 32.113 77.191 cv
32.137 77.156 32.168 77.133 32.199 77.113 cv
32.23 77.102 32.266 77.094 32.309 77.09 cv
33.082 77.09 li
33.383 77.094 33.652 77.055 33.895 76.973 cv
34.129 76.898 34.332 76.785 34.504 76.637 cv
34.668 76.492 34.797 76.316 34.887 76.113 cv
34.977 75.91 35.023 75.684 35.023 75.43 cv
35.023 75.25 34.992 75.074 34.934 74.906 cv
34.871 74.742 34.781 74.598 34.664 74.473 cv
34.543 74.348 34.391 74.25 34.211 74.18 cv
34.023 74.109 33.813 74.074 33.57 74.074 cv
33.305 74.074 33.059 74.117 32.84 74.195 cv
32.613 74.277 32.418 74.363 32.246 74.453 cv
32.07 74.547 31.926 74.633 31.813 74.711 cv
31.699 74.793 31.617 74.832 31.574 74.828 cv
31.539 74.832 31.512 74.824 31.488 74.812 cv
31.461 74.801 31.441 74.777 31.426 74.742 cv
31.41 74.711 31.398 74.664 31.391 74.598 cv
31.383 74.539 31.379 74.457 31.383 74.355 cv
31.379 74.289 31.379 74.23 31.387 74.176 cv
31.387 74.125 31.398 74.078 31.414 74.035 cv
31.43 74 31.445 73.965 31.465 73.93 cv
31.48 73.902 31.512 73.863 31.555 73.816 cv
31.598 73.773 31.684 73.711 31.82 73.629 cv
31.949 73.547 32.113 73.469 32.309 73.387 cv
32.5 73.309 32.723 73.238 32.98 73.184 cv
33.23 73.129 33.504 73.102 33.801 73.102 cv
34.207 73.102 34.57 73.156 34.883 73.258 cv
35.195 73.367 35.453 73.516 35.664 73.703 cv
35.867 73.898 36.023 74.129 36.129 74.395 cv
36.23 74.664 36.281 74.957 36.285 75.281 cv
36.281 75.562 36.246 75.824 36.176 76.059 cv
36.102 76.301 35.992 76.512 35.852 76.695 cv
35.707 76.883 35.535 77.039 35.332 77.168 cv
35.125 77.301 34.887 77.395 34.617 77.441 cv
34.617 77.453 li
34.922 77.488 35.203 77.562 35.457 77.684 cv
35.711 77.805 35.93 77.957 36.113 78.141 cv
36.293 78.324 36.434 78.539 36.539 78.781 cv
36.641 79.027 36.691 79.289 36.695 79.566 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.848 81.594 mo
43.844 81.68 43.84 81.754 43.828 81.816 cv
43.816 81.883 43.801 81.937 43.781 81.977 cv
43.758 82.023 43.73 82.055 43.699 82.07 cv
43.664 82.094 43.625 82.102 43.586 82.102 cv
38.684 82.102 li
38.621 82.102 38.563 82.094 38.516 82.078 cv
38.465 82.062 38.426 82.039 38.391 82 cv
38.355 81.969 38.328 81.914 38.316 81.844 cv
38.297 81.773 38.289 81.687 38.293 81.586 cv
38.289 81.496 38.293 81.418 38.301 81.348 cv
38.305 81.281 38.32 81.223 38.348 81.168 cv
38.371 81.117 38.402 81.062 38.438 81.008 cv
38.473 80.957 38.516 80.902 38.574 80.84 cv
40.348 79.016 li
40.758 78.598 41.086 78.223 41.336 77.887 cv
41.582 77.559 41.773 77.254 41.906 76.977 cv
42.039 76.703 42.125 76.453 42.172 76.227 cv
42.211 76.004 42.234 75.793 42.234 75.598 cv
42.234 75.402 42.199 75.219 42.133 75.039 cv
42.066 74.867 41.973 74.711 41.848 74.574 cv
41.723 74.445 41.566 74.34 41.379 74.258 cv
41.191 74.184 40.973 74.145 40.727 74.141 cv
40.438 74.145 40.18 74.184 39.953 74.258 cv
39.723 74.34 39.523 74.426 39.352 74.512 cv
39.18 74.605 39.035 74.687 38.918 74.766 cv
38.801 74.844 38.715 74.883 38.664 74.883 cv
38.629 74.883 38.598 74.875 38.574 74.855 cv
38.543 74.84 38.523 74.809 38.508 74.766 cv
38.492 74.727 38.477 74.672 38.469 74.602 cv
38.457 74.535 38.453 74.453 38.457 74.355 cv
38.453 74.289 38.457 74.23 38.465 74.18 cv
38.469 74.129 38.477 74.086 38.488 74.047 cv
38.496 74.012 38.512 73.977 38.531 73.945 cv
38.551 73.914 38.586 73.875 38.645 73.824 cv
38.695 73.777 38.789 73.711 38.926 73.629 cv
39.059 73.547 39.23 73.469 39.434 73.387 cv
39.637 73.309 39.859 73.238 40.105 73.184 cv
40.348 73.129 40.605 73.102 40.879 73.102 cv
41.305 73.102 41.68 73.164 42.004 73.285 cv
42.324 73.406 42.59 73.57 42.805 73.781 cv
43.016 73.992 43.176 74.238 43.281 74.512 cv
43.387 74.793 43.441 75.09 43.441 75.402 cv
43.441 75.691 43.414 75.973 43.363 76.25 cv
43.313 76.535 43.207 76.84 43.047 77.164 cv
42.883 77.492 42.648 77.855 42.344 78.254 cv
42.035 78.656 41.629 79.117 41.125 79.633 cv
39.719 81.102 li
43.578 81.102 li
43.609 81.105 43.645 81.117 43.684 81.133 cv
43.715 81.156 43.746 81.187 43.773 81.227 cv
43.797 81.27 43.816 81.32 43.828 81.379 cv
43.84 81.445 43.844 81.516 43.848 81.594 cv
cp
f
30.41 42.25 mo
44.601 42.25 li
44.601 59.34 li
30.41 59.34 li
cp
0 0 0 0 cmyk
ef
36.695 53.043 mo
36.691 53.453 36.621 53.82 36.48 54.145 cv
36.336 54.473 36.133 54.754 35.871 54.984 cv
35.605 55.219 35.277 55.395 34.891 55.52 cv
34.5 55.645 34.063 55.707 33.578 55.707 cv
33.273 55.707 32.996 55.68 32.742 55.633 cv
32.48 55.586 32.25 55.535 32.055 55.465 cv
31.852 55.402 31.688 55.332 31.555 55.262 cv
31.422 55.191 31.336 55.141 31.305 55.105 cv
31.266 55.078 31.242 55.047 31.227 55.012 cv
31.207 54.98 31.188 54.941 31.176 54.895 cv
31.16 54.852 31.152 54.797 31.145 54.727 cv
31.137 54.664 31.133 54.582 31.137 54.48 cv
31.133 54.32 31.148 54.207 31.184 54.141 cv
31.215 54.078 31.262 54.043 31.324 54.043 cv
31.367 54.043 31.449 54.082 31.574 54.152 cv
31.695 54.23 31.855 54.309 32.051 54.391 cv
32.242 54.477 32.469 54.555 32.734 54.625 cv
32.992 54.699 33.285 54.734 33.605 54.734 cv
33.914 54.734 34.184 54.695 34.422 54.617 cv
34.652 54.539 34.852 54.43 35.012 54.289 cv
35.168 54.148 35.285 53.98 35.367 53.785 cv
35.445 53.59 35.484 53.379 35.488 53.152 cv
35.484 52.902 35.434 52.676 35.336 52.473 cv
35.23 52.273 35.082 52.102 34.891 51.953 cv
34.691 51.809 34.453 51.695 34.168 51.617 cv
33.883 51.539 33.559 51.5 33.195 51.5 cv
32.324 51.5 li
32.281 51.5 32.246 51.492 32.211 51.477 cv
32.176 51.461 32.145 51.434 32.121 51.395 cv
32.094 51.359 32.074 51.312 32.059 51.254 cv
32.043 51.195 32.035 51.117 32.035 51.02 cv
32.035 50.934 32.039 50.863 32.055 50.805 cv
32.063 50.75 32.082 50.703 32.113 50.668 cv
32.137 50.633 32.168 50.609 32.199 50.59 cv
32.23 50.578 32.266 50.57 32.309 50.566 cv
33.082 50.566 li
33.383 50.57 33.652 50.531 33.895 50.449 cv
34.129 50.375 34.332 50.262 34.504 50.113 cv
34.668 49.969 34.797 49.793 34.887 49.59 cv
34.977 49.387 35.023 49.16 35.023 48.906 cv
35.023 48.727 34.992 48.551 34.934 48.383 cv
34.871 48.219 34.781 48.074 34.664 47.949 cv
34.543 47.824 34.391 47.727 34.211 47.656 cv
34.023 47.586 33.813 47.551 33.57 47.551 cv
33.305 47.551 33.059 47.594 32.84 47.672 cv
32.613 47.754 32.418 47.84 32.246 47.93 cv
32.07 48.023 31.926 48.109 31.813 48.187 cv
31.699 48.27 31.617 48.309 31.574 48.305 cv
31.539 48.309 31.512 48.301 31.488 48.289 cv
31.461 48.277 31.441 48.254 31.426 48.219 cv
31.41 48.187 31.398 48.141 31.391 48.074 cv
31.383 48.016 31.379 47.934 31.383 47.832 cv
31.379 47.766 31.379 47.707 31.387 47.652 cv
31.387 47.602 31.398 47.555 31.414 47.512 cv
31.43 47.477 31.445 47.441 31.465 47.406 cv
31.48 47.379 31.512 47.34 31.555 47.293 cv
31.598 47.25 31.684 47.187 31.82 47.105 cv
31.949 47.023 32.113 46.945 32.309 46.863 cv
32.5 46.785 32.723 46.715 32.98 46.66 cv
33.23 46.605 33.504 46.578 33.801 46.578 cv
34.207 46.578 34.57 46.633 34.883 46.734 cv
35.195 46.844 35.453 46.992 35.664 47.18 cv
35.867 47.375 36.023 47.605 36.129 47.871 cv
36.23 48.141 36.281 48.434 36.285 48.758 cv
36.281 49.039 36.246 49.301 36.176 49.535 cv
36.102 49.777 35.992 49.988 35.852 50.172 cv
35.707 50.359 35.535 50.516 35.332 50.645 cv
35.125 50.777 34.887 50.871 34.617 50.918 cv
34.617 50.93 li
34.922 50.965 35.203 51.039 35.457 51.16 cv
35.711 51.281 35.93 51.434 36.113 51.617 cv
36.293 51.801 36.434 52.016 36.539 52.258 cv
36.641 52.504 36.691 52.766 36.695 53.043 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.223 53.055 mo
44.219 53.207 44.195 53.328 44.152 53.414 cv
44.105 53.504 44.043 53.547 43.961 53.543 cv
42.961 53.543 li
42.961 55.406 li
42.961 55.445 42.949 55.477 42.934 55.5 cv
42.91 55.527 42.879 55.547 42.836 55.566 cv
42.785 55.582 42.723 55.594 42.652 55.605 cv
42.574 55.613 42.48 55.617 42.363 55.621 cv
42.246 55.617 42.148 55.613 42.078 55.605 cv
42 55.594 41.941 55.582 41.898 55.566 cv
41.852 55.547 41.82 55.527 41.805 55.5 cv
41.785 55.477 41.777 55.445 41.781 55.406 cv
41.781 53.543 li
38.152 53.543 li
38.094 53.547 38.051 53.539 38.016 53.523 cv
37.98 53.512 37.945 53.484 37.918 53.445 cv
37.887 53.41 37.867 53.359 37.855 53.289 cv
37.844 53.223 37.84 53.133 37.84 53.02 cv
37.84 52.937 37.84 52.859 37.848 52.789 cv
37.848 52.719 37.859 52.656 37.875 52.602 cv
37.887 52.547 37.902 52.492 37.93 52.437 cv
37.949 52.383 37.977 52.328 38.012 52.266 cv
41.172 46.879 li
41.191 46.844 41.227 46.812 41.273 46.785 cv
41.316 46.758 41.371 46.734 41.445 46.715 cv
41.512 46.699 41.598 46.687 41.703 46.676 cv
41.805 46.672 41.926 46.668 42.066 46.664 cv
42.215 46.668 42.352 46.672 42.469 46.684 cv
42.582 46.695 42.672 46.711 42.746 46.727 cv
42.813 46.746 42.867 46.77 42.906 46.801 cv
42.941 46.832 42.961 46.867 42.961 46.906 cv
42.961 52.57 li
43.961 52.57 li
44.035 52.574 44.098 52.613 44.148 52.691 cv
44.195 52.773 44.219 52.895 44.223 53.055 cv
cp
41.781 47.703 mo
41.77 47.703 li
38.918 52.57 li
41.781 52.57 li
cp
f
30.41 15.75 mo
44.601 15.75 li
44.601 32.84 li
30.41 32.84 li
cp
0 0 0 0 cmyk
ef
36.695 26.523 mo
36.691 26.934 36.621 27.301 36.48 27.625 cv
36.336 27.953 36.133 28.234 35.871 28.465 cv
35.605 28.699 35.277 28.875 34.891 29 cv
34.5 29.125 34.063 29.187 33.578 29.187 cv
33.273 29.187 32.996 29.16 32.742 29.113 cv
32.48 29.066 32.25 29.016 32.055 28.945 cv
31.852 28.883 31.688 28.812 31.555 28.742 cv
31.422 28.672 31.336 28.621 31.305 28.586 cv
31.266 28.559 31.242 28.527 31.227 28.492 cv
31.207 28.461 31.188 28.422 31.176 28.375 cv
31.16 28.332 31.152 28.277 31.145 28.207 cv
31.137 28.145 31.133 28.062 31.137 27.961 cv
31.133 27.801 31.148 27.687 31.184 27.621 cv
31.215 27.559 31.262 27.523 31.324 27.523 cv
31.367 27.523 31.449 27.562 31.574 27.633 cv
31.695 27.711 31.855 27.789 32.051 27.871 cv
32.242 27.957 32.469 28.035 32.734 28.105 cv
32.992 28.18 33.285 28.215 33.605 28.215 cv
33.914 28.215 34.184 28.176 34.422 28.098 cv
34.652 28.02 34.852 27.91 35.012 27.77 cv
35.168 27.629 35.285 27.461 35.367 27.266 cv
35.445 27.07 35.484 26.859 35.488 26.633 cv
35.484 26.383 35.434 26.156 35.336 25.953 cv
35.23 25.754 35.082 25.582 34.891 25.434 cv
34.691 25.289 34.453 25.176 34.168 25.098 cv
33.883 25.02 33.559 24.98 33.195 24.98 cv
32.324 24.98 li
32.281 24.98 32.246 24.973 32.211 24.957 cv
32.176 24.941 32.145 24.914 32.121 24.875 cv
32.094 24.84 32.074 24.793 32.059 24.734 cv
32.043 24.676 32.035 24.598 32.035 24.5 cv
32.035 24.414 32.039 24.344 32.055 24.285 cv
32.063 24.23 32.082 24.184 32.113 24.148 cv
32.137 24.113 32.168 24.09 32.199 24.07 cv
32.23 24.059 32.266 24.051 32.309 24.047 cv
33.082 24.047 li
33.383 24.051 33.652 24.012 33.895 23.93 cv
34.129 23.855 34.332 23.742 34.504 23.594 cv
34.668 23.449 34.797 23.273 34.887 23.07 cv
34.977 22.867 35.023 22.641 35.023 22.387 cv
35.023 22.207 34.992 22.031 34.934 21.863 cv
34.871 21.699 34.781 21.555 34.664 21.43 cv
34.543 21.305 34.391 21.207 34.211 21.137 cv
34.023 21.066 33.813 21.031 33.57 21.031 cv
33.305 21.031 33.059 21.074 32.84 21.152 cv
32.613 21.234 32.418 21.32 32.246 21.41 cv
32.07 21.504 31.926 21.59 31.813 21.668 cv
31.699 21.75 31.617 21.789 31.574 21.785 cv
31.539 21.789 31.512 21.781 31.488 21.77 cv
31.461 21.758 31.441 21.734 31.426 21.699 cv
31.41 21.668 31.398 21.621 31.391 21.555 cv
31.383 21.496 31.379 21.414 31.383 21.312 cv
31.379 21.246 31.379 21.187 31.387 21.133 cv
31.387 21.082 31.398 21.035 31.414 20.992 cv
31.43 20.957 31.445 20.922 31.465 20.887 cv
31.48 20.859 31.512 20.82 31.555 20.773 cv
31.598 20.73 31.684 20.668 31.82 20.586 cv
31.949 20.504 32.113 20.426 32.309 20.344 cv
32.5 20.266 32.723 20.195 32.98 20.141 cv
33.23 20.086 33.504 20.059 33.801 20.059 cv
34.207 20.059 34.57 20.113 34.883 20.215 cv
35.195 20.324 35.453 20.473 35.664 20.66 cv
35.867 20.855 36.023 21.086 36.129 21.352 cv
36.23 21.621 36.281 21.914 36.285 22.238 cv
36.281 22.52 36.246 22.781 36.176 23.016 cv
36.102 23.258 35.992 23.469 35.852 23.652 cv
35.707 23.84 35.535 23.996 35.332 24.125 cv
35.125 24.258 34.887 24.352 34.617 24.398 cv
34.617 24.41 li
34.922 24.445 35.203 24.52 35.457 24.641 cv
35.711 24.762 35.93 24.914 36.113 25.098 cv
36.293 25.281 36.434 25.496 36.539 25.738 cv
36.641 25.984 36.691 26.246 36.695 26.523 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.074 26.187 mo
44.074 26.578 44.012 26.957 43.895 27.316 cv
43.77 27.684 43.586 28 43.344 28.273 cv
43.094 28.551 42.781 28.773 42.406 28.937 cv
42.023 29.105 41.578 29.187 41.063 29.187 cv
40.691 29.187 40.363 29.145 40.082 29.051 cv
39.797 28.965 39.551 28.832 39.34 28.66 cv
39.129 28.492 38.953 28.285 38.816 28.039 cv
38.676 27.793 38.563 27.512 38.48 27.195 cv
38.395 26.883 38.336 26.539 38.301 26.16 cv
38.262 25.789 38.242 25.387 38.246 24.953 cv
38.242 24.574 38.262 24.191 38.305 23.801 cv
38.344 23.418 38.418 23.043 38.523 22.676 cv
38.629 22.316 38.773 21.977 38.953 21.66 cv
39.133 21.344 39.359 21.066 39.633 20.832 cv
39.906 20.598 40.23 20.41 40.609 20.27 cv
40.988 20.133 41.43 20.066 41.934 20.062 cv
42.102 20.066 42.273 20.074 42.445 20.094 cv
42.617 20.117 42.777 20.148 42.926 20.18 cv
43.074 20.219 43.195 20.254 43.297 20.293 cv
43.395 20.332 43.461 20.367 43.496 20.391 cv
43.523 20.418 43.547 20.445 43.566 20.473 cv
43.582 20.504 43.598 20.535 43.605 20.57 cv
43.613 20.605 43.617 20.645 43.625 20.687 cv
43.625 20.73 43.629 20.785 43.633 20.848 cv
43.629 20.934 43.629 21.004 43.629 21.059 cv
43.625 21.121 43.613 21.168 43.602 21.203 cv
43.582 21.242 43.563 21.27 43.539 21.285 cv
43.512 21.305 43.48 21.312 43.441 21.312 cv
43.391 21.312 43.32 21.297 43.234 21.266 cv
43.145 21.234 43.039 21.199 42.918 21.156 cv
42.793 21.121 42.645 21.086 42.469 21.051 cv
42.293 21.023 42.09 21.008 41.859 21.004 cv
41.43 21.008 41.063 21.094 40.758 21.266 cv
40.453 21.437 40.203 21.672 40.008 21.965 cv
39.813 22.258 39.668 22.598 39.578 22.98 cv
39.48 23.371 39.426 23.773 39.418 24.191 cv
39.535 24.125 39.672 24.059 39.82 23.988 cv
39.969 23.922 40.129 23.859 40.305 23.801 cv
40.48 23.75 40.668 23.703 40.863 23.668 cv
41.059 23.637 41.27 23.621 41.496 23.617 cv
41.973 23.621 42.375 23.687 42.707 23.812 cv
43.035 23.945 43.301 24.125 43.508 24.355 cv
43.707 24.586 43.852 24.855 43.941 25.168 cv
44.027 25.48 44.074 25.82 44.074 26.187 cv
cp
42.879 26.297 mo
42.879 26.035 42.852 25.793 42.801 25.574 cv
42.746 25.359 42.656 25.176 42.535 25.02 cv
42.41 24.871 42.246 24.754 42.043 24.672 cv
41.832 24.59 41.578 24.547 41.281 24.547 cv
41.109 24.547 40.941 24.562 40.773 24.594 cv
40.602 24.625 40.438 24.668 40.281 24.715 cv
40.121 24.77 39.973 24.832 39.832 24.902 cv
39.688 24.977 39.555 25.051 39.438 25.129 cv
39.434 25.723 39.473 26.219 39.551 26.613 cv
39.625 27.012 39.734 27.328 39.879 27.566 cv
40.023 27.809 40.203 27.98 40.418 28.082 cv
40.633 28.187 40.883 28.238 41.172 28.234 cv
41.461 28.238 41.715 28.184 41.93 28.07 cv
42.145 27.965 42.32 27.816 42.465 27.629 cv
42.605 27.445 42.711 27.238 42.777 27.008 cv
42.844 26.777 42.879 26.543 42.879 26.297 cv
cp
f
60.426 524.008 mo
60.422 524.098 60.414 524.168 60.402 524.227 cv
60.387 524.289 60.367 524.34 60.348 524.371 cv
60.324 524.41 60.301 524.434 60.27 524.449 cv
60.238 524.465 60.207 524.473 60.18 524.473 cv
55.543 524.473 li
55.508 524.473 55.48 524.465 55.453 524.449 cv
55.426 524.434 55.398 524.41 55.375 524.371 cv
55.348 524.34 55.328 524.289 55.316 524.227 cv
55.301 524.168 55.293 524.098 55.297 524.008 cv
55.293 523.93 55.301 523.855 55.316 523.793 cv
55.328 523.734 55.344 523.687 55.367 523.648 cv
55.383 523.613 55.41 523.582 55.441 523.559 cv
55.473 523.539 55.504 523.531 55.543 523.527 cv
57.395 523.527 li
57.395 516.781 li
55.68 517.801 li
55.59 517.852 55.52 517.879 55.473 517.887 cv
55.418 517.895 55.375 517.887 55.344 517.855 cv
55.309 517.828 55.289 517.777 55.277 517.707 cv
55.266 517.641 55.258 517.555 55.262 517.445 cv
55.258 517.371 55.262 517.305 55.273 517.246 cv
55.277 517.195 55.289 517.148 55.305 517.109 cv
55.316 517.074 55.336 517.043 55.359 517.016 cv
55.383 516.988 55.414 516.961 55.461 516.934 cv
57.504 515.621 li
57.52 515.609 57.539 515.598 57.57 515.59 cv
57.594 515.582 57.629 515.574 57.676 515.562 cv
57.715 515.555 57.766 515.547 57.82 515.543 cv
57.875 515.543 57.941 515.543 58.027 515.539 cv
58.133 515.543 58.227 515.547 58.301 515.555 cv
58.371 515.562 58.426 515.578 58.473 515.594 cv
58.512 515.613 58.539 515.633 58.555 515.656 cv
58.563 515.684 58.57 515.707 58.574 515.73 cv
58.574 523.527 li
60.18 523.527 li
60.215 523.531 60.25 523.539 60.281 523.559 cv
60.313 523.582 60.336 523.613 60.359 523.648 cv
60.375 523.687 60.391 523.734 60.406 523.793 cv
60.414 523.855 60.422 523.93 60.426 524.008 cv
cp
f
130.035 523.965 mo
130.031 524.051 130.027 524.125 130.016 524.187 cv
130.004 524.254 129.988 524.309 129.969 524.348 cv
129.945 524.395 129.918 524.426 129.887 524.441 cv
129.852 524.465 129.813 524.473 129.773 524.473 cv
124.871 524.473 li
124.809 524.473 124.75 524.465 124.703 524.449 cv
124.652 524.434 124.613 524.41 124.578 524.371 cv
124.543 524.34 124.516 524.285 124.504 524.215 cv
124.484 524.145 124.477 524.059 124.48 523.957 cv
124.477 523.867 124.48 523.789 124.488 523.719 cv
124.492 523.652 124.508 523.594 124.535 523.539 cv
124.559 523.488 124.59 523.434 124.625 523.379 cv
124.66 523.328 124.703 523.273 124.762 523.211 cv
126.535 521.387 li
126.945 520.969 127.273 520.594 127.523 520.258 cv
127.77 519.93 127.961 519.625 128.094 519.348 cv
128.227 519.074 128.313 518.824 128.359 518.598 cv
128.398 518.375 128.422 518.164 128.422 517.969 cv
128.422 517.773 128.387 517.59 128.32 517.41 cv
128.254 517.238 128.16 517.082 128.035 516.945 cv
127.91 516.816 127.754 516.711 127.566 516.629 cv
127.379 516.555 127.16 516.516 126.914 516.512 cv
126.625 516.516 126.367 516.555 126.141 516.629 cv
125.91 516.711 125.711 516.797 125.539 516.883 cv
125.367 516.977 125.223 517.059 125.105 517.137 cv
124.988 517.215 124.902 517.254 124.852 517.254 cv
124.816 517.254 124.785 517.246 124.762 517.227 cv
124.73 517.211 124.711 517.18 124.695 517.137 cv
124.68 517.098 124.664 517.043 124.656 516.973 cv
124.645 516.906 124.641 516.824 124.645 516.727 cv
124.641 516.66 124.645 516.602 124.652 516.551 cv
124.656 516.5 124.664 516.457 124.676 516.418 cv
124.684 516.383 124.699 516.348 124.719 516.316 cv
124.738 516.285 124.773 516.246 124.832 516.195 cv
124.883 516.148 124.977 516.082 125.113 516 cv
125.246 515.918 125.418 515.84 125.621 515.758 cv
125.824 515.68 126.047 515.609 126.293 515.555 cv
126.535 515.5 126.793 515.473 127.066 515.473 cv
127.492 515.473 127.867 515.535 128.191 515.656 cv
128.512 515.777 128.777 515.941 128.992 516.152 cv
129.203 516.363 129.363 516.609 129.469 516.883 cv
129.574 517.164 129.629 517.461 129.629 517.773 cv
129.629 518.062 129.602 518.344 129.551 518.621 cv
129.5 518.906 129.395 519.211 129.234 519.535 cv
129.07 519.863 128.836 520.227 128.531 520.625 cv
128.223 521.027 127.816 521.488 127.313 522.004 cv
125.906 523.473 li
129.766 523.473 li
129.797 523.477 129.832 523.488 129.871 523.504 cv
129.902 523.527 129.934 523.559 129.961 523.598 cv
129.984 523.641 130.004 523.691 130.016 523.75 cv
130.027 523.816 130.031 523.887 130.035 523.965 cv
cp
f
200.031 521.949 mo
200.027 522.102 200.004 522.223 199.961 522.309 cv
199.914 522.398 199.852 522.441 199.77 522.437 cv
198.77 522.437 li
198.77 524.301 li
198.77 524.34 198.758 524.371 198.742 524.395 cv
198.719 524.422 198.688 524.441 198.645 524.461 cv
198.594 524.477 198.531 524.488 198.461 524.5 cv
198.383 524.508 198.289 524.512 198.172 524.516 cv
198.055 524.512 197.957 524.508 197.887 524.5 cv
197.809 524.488 197.75 524.477 197.707 524.461 cv
197.66 524.441 197.629 524.422 197.613 524.395 cv
197.594 524.371 197.586 524.34 197.59 524.301 cv
197.59 522.437 li
193.961 522.437 li
193.902 522.441 193.859 522.434 193.824 522.418 cv
193.789 522.406 193.754 522.379 193.727 522.34 cv
193.695 522.305 193.676 522.254 193.664 522.184 cv
193.652 522.117 193.648 522.027 193.648 521.914 cv
193.648 521.832 193.648 521.754 193.656 521.684 cv
193.656 521.613 193.668 521.551 193.684 521.496 cv
193.695 521.441 193.711 521.387 193.738 521.332 cv
193.758 521.277 193.785 521.223 193.82 521.16 cv
196.98 515.773 li
197 515.738 197.035 515.707 197.082 515.68 cv
197.125 515.652 197.18 515.629 197.254 515.609 cv
197.32 515.594 197.406 515.582 197.512 515.57 cv
197.613 515.566 197.734 515.562 197.875 515.559 cv
198.023 515.562 198.16 515.566 198.277 515.578 cv
198.391 515.59 198.48 515.605 198.555 515.621 cv
198.621 515.641 198.676 515.664 198.715 515.695 cv
198.75 515.727 198.77 515.762 198.77 515.801 cv
198.77 521.465 li
199.77 521.465 li
199.844 521.469 199.906 521.508 199.957 521.586 cv
200.004 521.668 200.027 521.789 200.031 521.949 cv
cp
197.59 516.598 mo
197.578 516.598 li
194.727 521.465 li
197.59 521.465 li
cp
f
269.504 521.602 mo
269.504 521.992 269.441 522.371 269.324 522.73 cv
269.199 523.098 269.016 523.414 268.773 523.687 cv
268.523 523.965 268.211 524.187 267.836 524.352 cv
267.453 524.52 267.008 524.602 266.492 524.602 cv
266.121 524.602 265.793 524.559 265.512 524.465 cv
265.227 524.379 264.98 524.246 264.77 524.074 cv
264.559 523.906 264.383 523.699 264.246 523.453 cv
264.105 523.207 263.992 522.926 263.91 522.609 cv
263.824 522.297 263.766 521.953 263.73 521.574 cv
263.691 521.203 263.672 520.801 263.676 520.367 cv
263.672 519.988 263.691 519.605 263.734 519.215 cv
263.773 518.832 263.848 518.457 263.953 518.09 cv
264.059 517.73 264.203 517.391 264.383 517.074 cv
264.563 516.758 264.789 516.48 265.063 516.246 cv
265.336 516.012 265.66 515.824 266.039 515.684 cv
266.418 515.547 266.859 515.48 267.363 515.477 cv
267.531 515.48 267.703 515.488 267.875 515.508 cv
268.047 515.531 268.207 515.562 268.355 515.594 cv
268.504 515.633 268.625 515.668 268.727 515.707 cv
268.824 515.746 268.891 515.781 268.926 515.805 cv
268.953 515.832 268.977 515.859 268.996 515.887 cv
269.012 515.918 269.027 515.949 269.035 515.984 cv
269.043 516.02 269.047 516.059 269.055 516.102 cv
269.055 516.145 269.059 516.199 269.063 516.262 cv
269.059 516.348 269.059 516.418 269.059 516.473 cv
269.055 516.535 269.043 516.582 269.031 516.617 cv
269.012 516.656 268.992 516.684 268.969 516.699 cv
268.941 516.719 268.91 516.727 268.871 516.727 cv
268.82 516.727 268.75 516.711 268.664 516.68 cv
268.574 516.648 268.469 516.613 268.348 516.57 cv
268.223 516.535 268.074 516.5 267.898 516.465 cv
267.723 516.437 267.52 516.422 267.289 516.418 cv
266.859 516.422 266.492 516.508 266.188 516.68 cv
265.883 516.852 265.633 517.086 265.438 517.379 cv
265.242 517.672 265.098 518.012 265.008 518.395 cv
264.91 518.785 264.855 519.187 264.848 519.605 cv
264.965 519.539 265.102 519.473 265.25 519.402 cv
265.398 519.336 265.559 519.273 265.734 519.215 cv
265.91 519.164 266.098 519.117 266.293 519.082 cv
266.488 519.051 266.699 519.035 266.926 519.031 cv
267.402 519.035 267.805 519.102 268.137 519.227 cv
268.465 519.359 268.73 519.539 268.938 519.77 cv
269.137 520 269.281 520.27 269.371 520.582 cv
269.457 520.895 269.504 521.234 269.504 521.602 cv
cp
268.309 521.711 mo
268.309 521.449 268.281 521.207 268.23 520.988 cv
268.176 520.773 268.086 520.59 267.965 520.434 cv
267.84 520.285 267.676 520.168 267.473 520.086 cv
267.262 520.004 267.008 519.961 266.711 519.961 cv
266.539 519.961 266.371 519.977 266.203 520.008 cv
266.031 520.039 265.867 520.082 265.711 520.129 cv
265.551 520.184 265.402 520.246 265.262 520.316 cv
265.117 520.391 264.984 520.465 264.867 520.543 cv
264.863 521.137 264.902 521.633 264.98 522.027 cv
265.055 522.426 265.164 522.742 265.309 522.98 cv
265.453 523.223 265.633 523.395 265.848 523.496 cv
266.063 523.602 266.313 523.652 266.602 523.648 cv
266.891 523.652 267.145 523.598 267.359 523.484 cv
267.574 523.379 267.75 523.23 267.895 523.043 cv
268.035 522.859 268.141 522.652 268.207 522.422 cv
268.273 522.191 268.309 521.957 268.309 521.711 cv
cp
f
339.109 522.195 mo
339.109 522.582 339.039 522.926 338.902 523.223 cv
338.766 523.527 338.57 523.777 338.313 523.98 cv
338.055 524.187 337.734 524.344 337.355 524.445 cv
336.973 524.551 336.539 524.602 336.055 524.602 cv
335.594 524.602 335.184 524.555 334.824 524.461 cv
334.461 524.367 334.156 524.227 333.906 524.035 cv
333.656 523.852 333.465 523.621 333.332 523.344 cv
333.199 523.07 333.133 522.758 333.133 522.402 cv
333.133 522.129 333.176 521.871 333.27 521.637 cv
333.355 521.402 333.488 521.187 333.664 520.992 cv
333.832 520.797 334.043 520.613 334.297 520.437 cv
334.547 520.27 334.832 520.105 335.148 519.949 cv
334.875 519.809 334.633 519.66 334.422 519.5 cv
334.211 519.344 334.031 519.172 333.887 518.984 cv
333.738 518.801 333.629 518.605 333.555 518.395 cv
333.477 518.187 333.438 517.957 333.441 517.707 cv
333.438 517.398 333.492 517.105 333.609 516.832 cv
333.719 516.562 333.891 516.328 334.117 516.125 cv
334.344 515.926 334.629 515.766 334.98 515.648 cv
335.324 515.531 335.734 515.473 336.203 515.473 cv
336.648 515.473 337.035 515.527 337.363 515.633 cv
337.691 515.742 337.961 515.887 338.172 516.07 cv
338.383 516.258 338.539 516.477 338.645 516.727 cv
338.742 516.977 338.793 517.246 338.797 517.535 cv
338.793 517.77 338.754 517.996 338.684 518.207 cv
338.605 518.426 338.496 518.629 338.348 518.816 cv
338.199 519.012 338.02 519.191 337.809 519.355 cv
337.598 519.527 337.355 519.684 337.082 519.824 cv
337.402 519.988 337.688 520.152 337.945 520.32 cv
338.195 520.488 338.41 520.668 338.586 520.863 cv
338.754 521.059 338.883 521.266 338.977 521.48 cv
339.063 521.699 339.109 521.937 339.109 522.195 cv
cp
337.629 517.645 mo
337.625 517.457 337.594 517.281 337.527 517.125 cv
337.461 516.969 337.363 516.836 337.238 516.727 cv
337.109 516.617 336.949 516.535 336.762 516.477 cv
336.566 516.422 336.352 516.395 336.113 516.391 cv
335.617 516.395 335.242 516.504 334.992 516.727 cv
334.734 516.953 334.609 517.262 334.613 517.645 cv
334.609 517.824 334.641 517.988 334.703 518.141 cv
334.766 518.297 334.859 518.441 334.992 518.578 cv
335.117 518.715 335.281 518.848 335.484 518.977 cv
335.68 519.109 335.918 519.246 336.195 519.387 cv
336.656 519.152 337.012 518.891 337.258 518.598 cv
337.504 518.312 337.625 517.996 337.629 517.645 cv
cp
337.918 522.32 mo
337.914 522.113 337.875 521.922 337.801 521.75 cv
337.719 521.582 337.602 521.422 337.445 521.27 cv
337.289 521.121 337.09 520.977 336.855 520.836 cv
336.617 520.699 336.348 520.555 336.039 520.402 cv
335.75 520.547 335.496 520.687 335.281 520.828 cv
335.063 520.969 334.883 521.117 334.746 521.266 cv
334.605 521.422 334.5 521.578 334.43 521.742 cv
334.355 521.91 334.32 522.094 334.324 522.293 cv
334.32 522.738 334.473 523.082 334.781 523.32 cv
335.082 523.566 335.535 523.687 336.141 523.684 cv
336.723 523.687 337.168 523.566 337.469 523.316 cv
337.766 523.074 337.914 522.742 337.918 522.32 cv
cp
f
404.996 524.008 mo
404.992 524.098 404.984 524.168 404.973 524.227 cv
404.957 524.289 404.938 524.34 404.918 524.371 cv
404.895 524.41 404.871 524.434 404.84 524.449 cv
404.809 524.465 404.777 524.473 404.75 524.473 cv
400.113 524.473 li
400.078 524.473 400.051 524.465 400.023 524.449 cv
399.996 524.434 399.969 524.41 399.945 524.371 cv
399.918 524.34 399.898 524.289 399.887 524.227 cv
399.871 524.168 399.863 524.098 399.867 524.008 cv
399.863 523.93 399.871 523.855 399.887 523.793 cv
399.898 523.734 399.914 523.687 399.938 523.648 cv
399.953 523.613 399.98 523.582 400.012 523.559 cv
400.043 523.539 400.074 523.531 400.113 523.527 cv
401.965 523.527 li
401.965 516.781 li
400.25 517.801 li
400.16 517.852 400.09 517.879 400.043 517.887 cv
399.988 517.895 399.945 517.887 399.914 517.855 cv
399.879 517.828 399.859 517.777 399.848 517.707 cv
399.836 517.641 399.828 517.555 399.832 517.445 cv
399.828 517.371 399.832 517.305 399.844 517.246 cv
399.848 517.195 399.859 517.148 399.875 517.109 cv
399.887 517.074 399.906 517.043 399.93 517.016 cv
399.953 516.988 399.984 516.961 400.031 516.934 cv
402.074 515.621 li
402.09 515.609 402.109 515.598 402.141 515.59 cv
402.164 515.582 402.199 515.574 402.246 515.562 cv
402.285 515.555 402.336 515.547 402.391 515.543 cv
402.445 515.543 402.512 515.543 402.598 515.539 cv
402.703 515.543 402.797 515.547 402.871 515.555 cv
402.941 515.562 402.996 515.578 403.043 515.594 cv
403.082 515.613 403.109 515.633 403.125 515.656 cv
403.133 515.684 403.141 515.707 403.145 515.73 cv
403.145 523.527 li
404.75 523.527 li
404.785 523.531 404.82 523.539 404.852 523.559 cv
404.883 523.582 404.906 523.613 404.93 523.648 cv
404.945 523.687 404.961 523.734 404.977 523.793 cv
404.984 523.855 404.992 523.93 404.996 524.008 cv
cp
f
412.348 520.016 mo
412.344 520.699 412.293 521.32 412.188 521.883 cv
412.078 522.445 411.898 522.93 411.652 523.332 cv
411.398 523.738 411.07 524.051 410.672 524.27 cv
410.266 524.492 409.773 524.602 409.188 524.602 cv
408.629 524.602 408.156 524.504 407.777 524.305 cv
407.395 524.109 407.09 523.816 406.855 523.43 cv
406.621 523.043 406.453 522.57 406.359 522.004 cv
406.258 521.441 406.211 520.793 406.211 520.059 cv
406.211 519.387 406.266 518.766 406.375 518.199 cv
406.484 517.637 406.66 517.152 406.91 516.746 cv
407.152 516.344 407.477 516.031 407.883 515.805 cv
408.281 515.586 408.777 515.473 409.367 515.473 cv
409.926 515.473 410.398 515.574 410.781 515.77 cv
411.164 515.973 411.469 516.266 411.703 516.648 cv
411.934 517.039 412.102 517.512 412.199 518.074 cv
412.297 518.637 412.344 519.285 412.348 520.016 cv
cp
411.141 520.098 mo
411.137 519.656 411.121 519.258 411.094 518.906 cv
411.059 518.555 411.012 518.246 410.953 517.977 cv
410.887 517.707 410.809 517.477 410.711 517.281 cv
410.613 517.09 410.496 516.93 410.359 516.801 cv
410.219 516.676 410.059 516.582 409.887 516.523 cv
409.707 516.469 409.512 516.441 409.297 516.437 cv
408.906 516.441 408.59 516.531 408.352 516.715 cv
408.105 516.898 407.914 517.152 407.777 517.469 cv
407.637 517.789 407.543 518.16 407.492 518.59 cv
407.441 519.02 407.418 519.484 407.418 519.977 cv
407.418 520.641 407.449 521.203 407.52 521.664 cv
407.586 522.133 407.695 522.512 407.848 522.801 cv
407.992 523.098 408.184 523.309 408.414 523.437 cv
408.645 523.574 408.926 523.641 409.258 523.637 cv
409.512 523.641 409.734 523.602 409.93 523.516 cv
410.121 523.437 410.289 523.316 410.43 523.16 cv
410.57 523.008 410.684 522.824 410.777 522.609 cv
410.863 522.395 410.938 522.156 410.996 521.895 cv
411.047 521.637 411.086 521.355 411.109 521.051 cv
411.129 520.746 411.137 520.43 411.141 520.098 cv
cp
f
474.617 524.008 mo
474.613 524.098 474.605 524.168 474.594 524.227 cv
474.578 524.289 474.559 524.34 474.539 524.371 cv
474.516 524.41 474.492 524.434 474.461 524.449 cv
474.43 524.465 474.398 524.473 474.371 524.473 cv
469.734 524.473 li
469.699 524.473 469.672 524.465 469.645 524.449 cv
469.617 524.434 469.59 524.41 469.566 524.371 cv
469.539 524.34 469.52 524.289 469.508 524.227 cv
469.492 524.168 469.484 524.098 469.488 524.008 cv
469.484 523.93 469.492 523.855 469.508 523.793 cv
469.52 523.734 469.535 523.687 469.559 523.648 cv
469.574 523.613 469.602 523.582 469.633 523.559 cv
469.664 523.539 469.695 523.531 469.734 523.527 cv
471.586 523.527 li
471.586 516.781 li
469.871 517.801 li
469.781 517.852 469.711 517.879 469.664 517.887 cv
469.609 517.895 469.566 517.887 469.535 517.855 cv
469.5 517.828 469.48 517.777 469.469 517.707 cv
469.457 517.641 469.449 517.555 469.453 517.445 cv
469.449 517.371 469.453 517.305 469.465 517.246 cv
469.469 517.195 469.48 517.148 469.496 517.109 cv
469.508 517.074 469.527 517.043 469.551 517.016 cv
469.574 516.988 469.605 516.961 469.652 516.934 cv
471.695 515.621 li
471.711 515.609 471.73 515.598 471.762 515.59 cv
471.785 515.582 471.82 515.574 471.867 515.562 cv
471.906 515.555 471.957 515.547 472.012 515.543 cv
472.066 515.543 472.133 515.543 472.219 515.539 cv
472.324 515.543 472.418 515.547 472.492 515.555 cv
472.563 515.562 472.617 515.578 472.664 515.594 cv
472.703 515.613 472.73 515.633 472.746 515.656 cv
472.754 515.684 472.762 515.707 472.766 515.73 cv
472.766 523.527 li
474.371 523.527 li
474.406 523.531 474.441 523.539 474.473 523.559 cv
474.504 523.582 474.527 523.613 474.551 523.648 cv
474.566 523.687 474.582 523.734 474.598 523.793 cv
474.605 523.855 474.613 523.93 474.617 524.008 cv
cp
f
481.676 523.965 mo
481.672 524.051 481.668 524.125 481.656 524.187 cv
481.645 524.254 481.629 524.309 481.609 524.348 cv
481.586 524.395 481.559 524.426 481.527 524.441 cv
481.492 524.465 481.453 524.473 481.414 524.473 cv
476.512 524.473 li
476.449 524.473 476.391 524.465 476.344 524.449 cv
476.293 524.434 476.254 524.41 476.219 524.371 cv
476.184 524.34 476.156 524.285 476.145 524.215 cv
476.125 524.145 476.117 524.059 476.121 523.957 cv
476.117 523.867 476.121 523.789 476.129 523.719 cv
476.133 523.652 476.148 523.594 476.176 523.539 cv
476.199 523.488 476.23 523.434 476.266 523.379 cv
476.301 523.328 476.344 523.273 476.402 523.211 cv
478.176 521.387 li
478.586 520.969 478.914 520.594 479.164 520.258 cv
479.41 519.93 479.602 519.625 479.734 519.348 cv
479.867 519.074 479.953 518.824 480 518.598 cv
480.039 518.375 480.063 518.164 480.063 517.969 cv
480.063 517.773 480.027 517.59 479.961 517.41 cv
479.895 517.238 479.801 517.082 479.676 516.945 cv
479.551 516.816 479.395 516.711 479.207 516.629 cv
479.02 516.555 478.801 516.516 478.555 516.512 cv
478.266 516.516 478.008 516.555 477.781 516.629 cv
477.551 516.711 477.352 516.797 477.18 516.883 cv
477.008 516.977 476.863 517.059 476.746 517.137 cv
476.629 517.215 476.543 517.254 476.492 517.254 cv
476.457 517.254 476.426 517.246 476.402 517.227 cv
476.371 517.211 476.352 517.18 476.336 517.137 cv
476.32 517.098 476.305 517.043 476.297 516.973 cv
476.285 516.906 476.281 516.824 476.285 516.727 cv
476.281 516.66 476.285 516.602 476.293 516.551 cv
476.297 516.5 476.305 516.457 476.316 516.418 cv
476.324 516.383 476.34 516.348 476.359 516.316 cv
476.379 516.285 476.414 516.246 476.473 516.195 cv
476.523 516.148 476.617 516.082 476.754 516 cv
476.887 515.918 477.059 515.84 477.262 515.758 cv
477.465 515.68 477.688 515.609 477.934 515.555 cv
478.176 515.5 478.434 515.473 478.707 515.473 cv
479.133 515.473 479.508 515.535 479.832 515.656 cv
480.152 515.777 480.418 515.941 480.633 516.152 cv
480.844 516.363 481.004 516.609 481.109 516.883 cv
481.215 517.164 481.27 517.461 481.27 517.773 cv
481.27 518.062 481.242 518.344 481.191 518.621 cv
481.141 518.906 481.035 519.211 480.875 519.535 cv
480.711 519.863 480.477 520.227 480.172 520.625 cv
479.863 521.027 479.457 521.488 478.953 522.004 cv
477.547 523.473 li
481.406 523.473 li
481.438 523.477 481.473 523.488 481.512 523.504 cv
481.543 523.527 481.574 523.559 481.602 523.598 cv
481.625 523.641 481.645 523.691 481.656 523.75 cv
481.668 523.816 481.672 523.887 481.676 523.965 cv
cp
f
544.246 524.008 mo
544.242 524.098 544.234 524.168 544.223 524.227 cv
544.207 524.289 544.188 524.34 544.168 524.371 cv
544.145 524.41 544.121 524.434 544.09 524.449 cv
544.059 524.465 544.027 524.473 544 524.473 cv
539.363 524.473 li
539.328 524.473 539.301 524.465 539.273 524.449 cv
539.246 524.434 539.219 524.41 539.195 524.371 cv
539.168 524.34 539.148 524.289 539.137 524.227 cv
539.121 524.168 539.113 524.098 539.117 524.008 cv
539.113 523.93 539.121 523.855 539.137 523.793 cv
539.148 523.734 539.164 523.687 539.188 523.648 cv
539.203 523.613 539.23 523.582 539.262 523.559 cv
539.293 523.539 539.324 523.531 539.363 523.527 cv
541.215 523.527 li
541.215 516.781 li
539.5 517.801 li
539.41 517.852 539.34 517.879 539.293 517.887 cv
539.238 517.895 539.195 517.887 539.164 517.855 cv
539.129 517.828 539.109 517.777 539.098 517.707 cv
539.086 517.641 539.078 517.555 539.082 517.445 cv
539.078 517.371 539.082 517.305 539.094 517.246 cv
539.098 517.195 539.109 517.148 539.125 517.109 cv
539.137 517.074 539.156 517.043 539.18 517.016 cv
539.203 516.988 539.234 516.961 539.281 516.934 cv
541.324 515.621 li
541.34 515.609 541.359 515.598 541.391 515.59 cv
541.414 515.582 541.449 515.574 541.496 515.562 cv
541.535 515.555 541.586 515.547 541.641 515.543 cv
541.695 515.543 541.762 515.543 541.848 515.539 cv
541.953 515.543 542.047 515.547 542.121 515.555 cv
542.191 515.562 542.246 515.578 542.293 515.594 cv
542.332 515.613 542.359 515.633 542.375 515.656 cv
542.383 515.684 542.391 515.707 542.395 515.73 cv
542.395 523.527 li
544 523.527 li
544.035 523.531 544.07 523.539 544.102 523.559 cv
544.133 523.582 544.156 523.613 544.18 523.648 cv
544.195 523.687 544.211 523.734 544.227 523.793 cv
544.234 523.855 544.242 523.93 544.246 524.008 cv
cp
f
551.68 521.949 mo
551.676 522.102 551.652 522.223 551.609 522.309 cv
551.563 522.398 551.5 522.441 551.418 522.437 cv
550.418 522.437 li
550.418 524.301 li
550.418 524.34 550.406 524.371 550.391 524.395 cv
550.367 524.422 550.336 524.441 550.293 524.461 cv
550.242 524.477 550.18 524.488 550.109 524.5 cv
550.031 524.508 549.938 524.512 549.82 524.516 cv
549.703 524.512 549.605 524.508 549.535 524.5 cv
549.457 524.488 549.398 524.477 549.355 524.461 cv
549.309 524.441 549.277 524.422 549.262 524.395 cv
549.242 524.371 549.234 524.34 549.238 524.301 cv
549.238 522.437 li
545.609 522.437 li
545.551 522.441 545.508 522.434 545.473 522.418 cv
545.438 522.406 545.402 522.379 545.375 522.34 cv
545.344 522.305 545.324 522.254 545.313 522.184 cv
545.301 522.117 545.297 522.027 545.297 521.914 cv
545.297 521.832 545.297 521.754 545.305 521.684 cv
545.305 521.613 545.316 521.551 545.332 521.496 cv
545.344 521.441 545.359 521.387 545.387 521.332 cv
545.406 521.277 545.434 521.223 545.469 521.16 cv
548.629 515.773 li
548.648 515.738 548.684 515.707 548.73 515.68 cv
548.773 515.652 548.828 515.629 548.902 515.609 cv
548.969 515.594 549.055 515.582 549.16 515.57 cv
549.262 515.566 549.383 515.562 549.523 515.559 cv
549.672 515.562 549.809 515.566 549.926 515.578 cv
550.039 515.59 550.129 515.605 550.203 515.621 cv
550.27 515.641 550.324 515.664 550.363 515.695 cv
550.398 515.727 550.418 515.762 550.418 515.801 cv
550.418 521.465 li
551.418 521.465 li
551.492 521.469 551.555 521.508 551.605 521.586 cv
551.652 521.668 551.676 521.789 551.68 521.949 cv
cp
549.238 516.598 mo
549.227 516.598 li
546.375 521.465 li
549.238 521.465 li
cp
f
613.867 524.008 mo
613.863 524.098 613.855 524.168 613.844 524.227 cv
613.828 524.289 613.809 524.34 613.789 524.371 cv
613.766 524.41 613.742 524.434 613.711 524.449 cv
613.68 524.465 613.648 524.473 613.621 524.473 cv
608.984 524.473 li
608.949 524.473 608.922 524.465 608.895 524.449 cv
608.867 524.434 608.84 524.41 608.816 524.371 cv
608.789 524.34 608.77 524.289 608.758 524.227 cv
608.742 524.168 608.734 524.098 608.738 524.008 cv
608.734 523.93 608.742 523.855 608.758 523.793 cv
608.77 523.734 608.785 523.687 608.809 523.648 cv
608.824 523.613 608.852 523.582 608.883 523.559 cv
608.914 523.539 608.945 523.531 608.984 523.527 cv
610.836 523.527 li
610.836 516.781 li
609.121 517.801 li
609.031 517.852 608.961 517.879 608.914 517.887 cv
608.859 517.895 608.816 517.887 608.785 517.855 cv
608.75 517.828 608.73 517.777 608.719 517.707 cv
608.707 517.641 608.699 517.555 608.703 517.445 cv
608.699 517.371 608.703 517.305 608.715 517.246 cv
608.719 517.195 608.73 517.148 608.746 517.109 cv
608.758 517.074 608.777 517.043 608.801 517.016 cv
608.824 516.988 608.855 516.961 608.902 516.934 cv
610.945 515.621 li
610.961 515.609 610.98 515.598 611.012 515.59 cv
611.035 515.582 611.07 515.574 611.117 515.562 cv
611.156 515.555 611.207 515.547 611.262 515.543 cv
611.316 515.543 611.383 515.543 611.469 515.539 cv
611.574 515.543 611.668 515.547 611.742 515.555 cv
611.813 515.562 611.867 515.578 611.914 515.594 cv
611.953 515.613 611.98 515.633 611.996 515.656 cv
612.004 515.684 612.012 515.707 612.016 515.73 cv
612.016 523.527 li
613.621 523.527 li
613.656 523.531 613.691 523.539 613.723 523.559 cv
613.754 523.582 613.777 523.613 613.801 523.648 cv
613.816 523.687 613.832 523.734 613.848 523.793 cv
613.855 523.855 613.863 523.93 613.867 524.008 cv
cp
f
621.152 521.602 mo
621.152 521.992 621.09 522.371 620.973 522.73 cv
620.848 523.098 620.664 523.414 620.422 523.687 cv
620.172 523.965 619.859 524.187 619.484 524.352 cv
619.102 524.52 618.656 524.602 618.141 524.602 cv
617.77 524.602 617.441 524.559 617.16 524.465 cv
616.875 524.379 616.629 524.246 616.418 524.074 cv
616.207 523.906 616.031 523.699 615.895 523.453 cv
615.754 523.207 615.641 522.926 615.559 522.609 cv
615.473 522.297 615.414 521.953 615.379 521.574 cv
615.34 521.203 615.32 520.801 615.324 520.367 cv
615.32 519.988 615.34 519.605 615.383 519.215 cv
615.422 518.832 615.496 518.457 615.602 518.09 cv
615.707 517.73 615.852 517.391 616.031 517.074 cv
616.211 516.758 616.438 516.48 616.711 516.246 cv
616.984 516.012 617.309 515.824 617.688 515.684 cv
618.066 515.547 618.508 515.48 619.012 515.477 cv
619.18 515.48 619.352 515.488 619.523 515.508 cv
619.695 515.531 619.855 515.562 620.004 515.594 cv
620.152 515.633 620.273 515.668 620.375 515.707 cv
620.473 515.746 620.539 515.781 620.574 515.805 cv
620.602 515.832 620.625 515.859 620.645 515.887 cv
620.66 515.918 620.676 515.949 620.684 515.984 cv
620.691 516.02 620.695 516.059 620.703 516.102 cv
620.703 516.145 620.707 516.199 620.711 516.262 cv
620.707 516.348 620.707 516.418 620.707 516.473 cv
620.703 516.535 620.691 516.582 620.68 516.617 cv
620.66 516.656 620.641 516.684 620.617 516.699 cv
620.59 516.719 620.559 516.727 620.52 516.727 cv
620.469 516.727 620.398 516.711 620.313 516.68 cv
620.223 516.648 620.117 516.613 619.996 516.57 cv
619.871 516.535 619.723 516.5 619.547 516.465 cv
619.371 516.437 619.168 516.422 618.938 516.418 cv
618.508 516.422 618.141 516.508 617.836 516.68 cv
617.531 516.852 617.281 517.086 617.086 517.379 cv
616.891 517.672 616.746 518.012 616.656 518.395 cv
616.559 518.785 616.504 519.187 616.496 519.605 cv
616.613 519.539 616.75 519.473 616.898 519.402 cv
617.047 519.336 617.207 519.273 617.383 519.215 cv
617.559 519.164 617.746 519.117 617.941 519.082 cv
618.137 519.051 618.348 519.035 618.574 519.031 cv
619.051 519.035 619.453 519.102 619.785 519.227 cv
620.113 519.359 620.379 519.539 620.586 519.77 cv
620.785 520 620.93 520.27 621.02 520.582 cv
621.105 520.895 621.152 521.234 621.152 521.602 cv
cp
619.957 521.711 mo
619.957 521.449 619.93 521.207 619.879 520.988 cv
619.824 520.773 619.734 520.59 619.613 520.434 cv
619.488 520.285 619.324 520.168 619.121 520.086 cv
618.91 520.004 618.656 519.961 618.359 519.961 cv
618.188 519.961 618.02 519.977 617.852 520.008 cv
617.68 520.039 617.516 520.082 617.359 520.129 cv
617.199 520.184 617.051 520.246 616.91 520.316 cv
616.766 520.391 616.633 520.465 616.516 520.543 cv
616.512 521.137 616.551 521.633 616.629 522.027 cv
616.703 522.426 616.813 522.742 616.957 522.98 cv
617.102 523.223 617.281 523.395 617.496 523.496 cv
617.711 523.602 617.961 523.652 618.25 523.648 cv
618.539 523.652 618.793 523.598 619.008 523.484 cv
619.223 523.379 619.398 523.23 619.543 523.043 cv
619.684 522.859 619.789 522.652 619.855 522.422 cv
619.922 522.191 619.957 521.957 619.957 521.711 cv
cp
f
16.555 349.156 mo
16.652 349.16 16.734 349.164 16.801 349.172 cv
16.875 349.184 16.934 349.203 16.977 349.227 cv
17.027 349.254 17.063 349.285 17.078 349.316 cv
17.102 349.355 17.109 349.391 17.109 349.43 cv
17.109 354.27 li
17.109 354.391 17.07 354.504 16.988 354.609 cv
16.91 354.719 16.77 354.773 16.563 354.77 cv
7.57 354.77 li
7.367 354.773 7.227 354.719 7.145 354.609 cv
7.066 354.504 7.027 354.391 7.023 354.27 cv
7.023 349.484 li
7.027 349.445 7.035 349.406 7.055 349.371 cv
7.078 349.34 7.113 349.312 7.156 349.289 cv
7.207 349.27 7.266 349.254 7.332 349.238 cv
7.406 349.227 7.492 349.219 7.594 349.219 cv
7.688 349.219 7.77 349.227 7.84 349.238 cv
7.91 349.254 7.969 349.27 8.012 349.289 cv
8.059 349.312 8.09 349.34 8.109 349.371 cv
8.133 349.406 8.145 349.445 8.141 349.484 cv
8.141 353.43 li
11.305 353.43 li
11.305 350.047 li
11.309 350.008 11.32 349.969 11.34 349.934 cv
11.367 349.902 11.398 349.875 11.438 349.848 cv
11.48 349.828 11.539 349.812 11.609 349.797 cv
11.684 349.789 11.77 349.781 11.863 349.781 cv
11.961 349.781 12.039 349.789 12.105 349.797 cv
12.176 349.812 12.23 349.828 12.27 349.848 cv
12.313 349.875 12.344 349.902 12.359 349.934 cv
12.379 349.969 12.387 350.008 12.387 350.047 cv
12.387 353.43 li
15.996 353.43 li
15.996 349.43 li
15.996 349.391 16.008 349.355 16.027 349.316 cv
16.051 349.285 16.082 349.254 16.125 349.227 cv
16.172 349.203 16.23 349.184 16.297 349.172 cv
16.367 349.164 16.453 349.16 16.555 349.156 cv
cp
f
16.914 341.09 mo
16.961 341.09 16.996 341.102 17.02 341.121 cv
17.051 341.145 17.074 341.18 17.094 341.223 cv
17.113 341.273 17.125 341.336 17.141 341.418 cv
17.148 341.5 17.156 341.605 17.156 341.727 cv
17.156 341.859 17.148 341.965 17.141 342.047 cv
17.125 342.133 17.113 342.199 17.094 342.242 cv
17.074 342.293 17.051 342.324 17.02 342.344 cv
16.996 342.367 16.961 342.379 16.914 342.375 cv
12.809 342.375 li
12.41 342.379 12.09 342.41 11.844 342.469 cv
11.602 342.535 11.391 342.625 11.211 342.742 cv
11.035 342.859 10.898 343.016 10.805 343.203 cv
10.711 343.398 10.664 343.617 10.664 343.863 cv
10.664 344.187 10.781 344.512 11.008 344.832 cv
11.242 345.156 11.574 345.492 12.012 345.844 cv
16.914 345.844 li
16.961 345.848 16.996 345.859 17.02 345.875 cv
17.051 345.898 17.074 345.93 17.094 345.977 cv
17.113 346.023 17.125 346.09 17.141 346.168 cv
17.148 346.254 17.156 346.359 17.156 346.488 cv
17.156 346.617 17.148 346.723 17.141 346.801 cv
17.125 346.887 17.113 346.953 17.094 347 cv
17.074 347.055 17.051 347.086 17.02 347.102 cv
16.996 347.121 16.961 347.133 16.914 347.129 cv
9.902 347.129 li
9.863 347.133 9.828 347.125 9.797 347.105 cv
9.77 347.094 9.746 347.062 9.719 347.012 cv
9.699 346.969 9.684 346.906 9.672 346.832 cv
9.668 346.762 9.664 346.668 9.66 346.543 cv
9.664 346.434 9.668 346.336 9.672 346.258 cv
9.684 346.184 9.699 346.125 9.719 346.082 cv
9.746 346.043 9.77 346.016 9.797 345.996 cv
9.828 345.98 9.863 345.973 9.902 345.969 cv
10.828 345.969 li
10.387 345.578 10.066 345.184 9.859 344.789 cv
9.656 344.398 9.551 344 9.551 343.598 cv
9.551 343.129 9.633 342.738 9.789 342.418 cv
9.953 342.102 10.164 341.84 10.426 341.641 cv
10.691 341.445 11 341.305 11.355 341.219 cv
11.711 341.133 12.141 341.09 12.637 341.09 cv
cp
f
13.105 332.766 mo
13.309 332.77 13.449 332.82 13.535 332.918 cv
13.621 333.023 13.664 333.141 13.664 333.266 cv
13.664 337.883 li
14.055 337.887 14.406 337.848 14.719 337.766 cv
15.031 337.691 15.301 337.559 15.52 337.375 cv
15.746 337.195 15.918 336.961 16.035 336.664 cv
16.16 336.375 16.219 336.016 16.215 335.59 cv
16.219 335.258 16.191 334.961 16.133 334.699 cv
16.082 334.437 16.02 334.211 15.949 334.02 cv
15.883 333.832 15.824 333.676 15.766 333.551 cv
15.715 333.43 15.688 333.336 15.684 333.273 cv
15.688 333.238 15.695 333.207 15.711 333.176 cv
15.73 333.148 15.758 333.125 15.793 333.105 cv
15.832 333.094 15.883 333.082 15.945 333.07 cv
16.012 333.066 16.09 333.062 16.184 333.059 cv
16.254 333.062 16.313 333.066 16.359 333.066 cv
16.406 333.074 16.449 333.078 16.488 333.086 cv
16.527 333.094 16.563 333.109 16.594 333.125 cv
16.625 333.148 16.656 333.172 16.684 333.195 cv
16.715 333.227 16.762 333.309 16.824 333.449 cv
16.891 333.59 16.953 333.773 17.016 333.996 cv
17.078 334.223 17.133 334.48 17.184 334.773 cv
17.23 335.066 17.254 335.379 17.258 335.711 cv
17.254 336.289 17.176 336.797 17.016 337.227 cv
16.855 337.664 16.617 338.027 16.301 338.32 cv
15.984 338.621 15.59 338.844 15.109 338.992 cv
14.633 339.141 14.074 339.215 13.438 339.215 cv
12.84 339.215 12.301 339.141 11.816 338.984 cv
11.34 338.832 10.93 338.605 10.594 338.309 cv
10.258 338.016 10 337.66 9.82 337.246 cv
9.641 336.832 9.551 336.367 9.551 335.852 cv
9.551 335.301 9.641 334.832 9.816 334.445 cv
9.996 334.059 10.234 333.742 10.531 333.488 cv
10.832 333.242 11.184 333.059 11.582 332.941 cv
11.988 332.828 12.418 332.77 12.871 332.766 cv
cp
12.723 334.059 mo
12.047 334.043 11.516 334.195 11.133 334.512 cv
10.75 334.828 10.559 335.297 10.555 335.914 cv
10.559 336.238 10.617 336.52 10.734 336.758 cv
10.855 337 11.016 337.199 11.211 337.359 cv
11.41 337.523 11.641 337.648 11.902 337.734 cv
12.164 337.824 12.438 337.875 12.723 337.883 cv
cp
f
10.359 326.703 mo
10.477 326.707 10.574 326.707 10.648 326.711 cv
10.73 326.719 10.793 326.73 10.832 326.742 cv
10.879 326.762 10.91 326.781 10.934 326.801 cv
10.957 326.828 10.969 326.859 10.969 326.898 cv
10.969 326.941 10.957 326.992 10.934 327.051 cv
10.91 327.113 10.887 327.184 10.863 327.254 cv
10.84 327.332 10.82 327.414 10.797 327.508 cv
10.781 327.602 10.77 327.703 10.766 327.812 cv
10.77 327.945 10.797 328.074 10.844 328.195 cv
10.898 328.32 10.984 328.449 11.102 328.586 cv
11.227 328.727 11.383 328.871 11.578 329.02 cv
11.773 329.172 12.016 329.34 12.301 329.52 cv
16.914 329.52 li
16.961 329.523 16.996 329.535 17.02 329.551 cv
17.051 329.574 17.074 329.605 17.094 329.652 cv
17.113 329.699 17.125 329.766 17.141 329.844 cv
17.148 329.93 17.156 330.035 17.156 330.164 cv
17.156 330.293 17.148 330.398 17.141 330.477 cv
17.125 330.562 17.113 330.629 17.094 330.676 cv
17.074 330.73 17.051 330.762 17.02 330.777 cv
16.996 330.797 16.961 330.809 16.914 330.805 cv
9.902 330.805 li
9.863 330.809 9.828 330.801 9.797 330.781 cv
9.77 330.77 9.746 330.738 9.719 330.687 cv
9.699 330.645 9.684 330.582 9.672 330.508 cv
9.668 330.437 9.664 330.344 9.66 330.219 cv
9.664 330.109 9.668 330.012 9.672 329.934 cv
9.684 329.859 9.699 329.801 9.719 329.758 cv
9.746 329.719 9.77 329.691 9.797 329.672 cv
9.828 329.656 9.863 329.648 9.902 329.645 cv
10.922 329.645 li
10.641 329.457 10.414 329.273 10.238 329.102 cv
10.063 328.934 9.922 328.773 9.82 328.621 cv
9.719 328.473 9.648 328.324 9.609 328.176 cv
9.57 328.027 9.551 327.879 9.551 327.727 cv
9.551 327.66 9.555 327.582 9.563 327.496 cv
9.57 327.41 9.586 327.32 9.605 327.227 cv
9.629 327.133 9.652 327.051 9.676 326.973 cv
9.703 326.902 9.73 326.848 9.754 326.812 cv
9.785 326.785 9.809 326.766 9.828 326.75 cv
9.855 326.742 9.887 326.73 9.918 326.723 cv
9.957 326.715 10.008 326.711 10.078 326.707 cv
10.148 326.707 10.242 326.707 10.359 326.703 cv
cp
f
10.219 319.66 mo
10.402 319.664 10.535 319.687 10.613 319.734 cv
10.695 319.785 10.734 319.848 10.734 319.922 cv
10.734 320.93 li
10.922 320.75 11.129 320.621 11.355 320.547 cv
11.582 320.477 11.816 320.441 12.059 320.437 cv
12.465 320.441 12.824 320.508 13.137 320.633 cv
13.449 320.766 13.715 320.949 13.926 321.191 cv
14.145 321.434 14.309 321.723 14.422 322.051 cv
14.539 322.387 14.598 322.754 14.594 323.156 cv
14.598 323.445 14.559 323.719 14.48 323.973 cv
14.406 324.234 14.313 324.43 14.195 324.566 cv
14.293 324.66 14.398 324.738 14.516 324.797 cv
14.637 324.859 14.773 324.891 14.926 324.887 cv
15.109 324.891 15.262 324.805 15.379 324.633 cv
15.504 324.465 15.566 324.242 15.574 323.961 cv
15.652 322.129 li
15.664 321.781 15.711 321.465 15.797 321.172 cv
15.883 320.883 16.008 320.629 16.164 320.414 cv
16.324 320.203 16.516 320.035 16.746 319.914 cv
16.98 319.797 17.25 319.738 17.555 319.734 cv
17.875 319.738 18.18 319.805 18.473 319.937 cv
18.762 320.074 19.016 320.281 19.238 320.559 cv
19.457 320.84 19.633 321.195 19.762 321.625 cv
19.887 322.055 19.949 322.562 19.953 323.148 cv
19.949 323.719 19.902 324.203 19.809 324.598 cv
19.711 324.996 19.578 325.32 19.414 325.574 cv
19.246 325.828 19.051 326.012 18.82 326.125 cv
18.586 326.242 18.332 326.301 18.066 326.297 cv
17.895 326.301 17.73 326.281 17.57 326.234 cv
17.406 326.195 17.254 326.133 17.109 326.047 cv
16.965 325.965 16.828 325.855 16.691 325.727 cv
16.563 325.602 16.43 325.457 16.301 325.285 cv
16.172 325.543 16.008 325.73 15.809 325.852 cv
15.613 325.973 15.402 326.031 15.168 326.031 cv
14.855 326.031 14.57 325.969 14.32 325.84 cv
14.07 325.711 13.848 325.551 13.648 325.355 cv
13.457 325.52 13.242 325.645 13 325.738 cv
12.762 325.832 12.469 325.879 12.121 325.879 cv
11.727 325.879 11.367 325.812 11.047 325.676 cv
10.73 325.543 10.465 325.355 10.246 325.113 cv
10.031 324.875 9.863 324.59 9.742 324.254 cv
9.629 323.922 9.57 323.555 9.566 323.156 cv
9.57 322.945 9.582 322.746 9.602 322.562 cv
9.629 322.379 9.66 322.207 9.699 322.043 cv
9.699 319.922 li
9.703 319.836 9.746 319.77 9.828 319.727 cv
9.918 319.684 10.047 319.664 10.219 319.66 cv
cp
12.066 321.668 mo
11.594 321.672 11.223 321.805 10.949 322.062 cv
10.684 322.328 10.547 322.699 10.547 323.18 cv
10.547 323.434 10.59 323.652 10.672 323.832 cv
10.758 324.02 10.871 324.172 11.016 324.293 cv
11.164 324.414 11.332 324.504 11.52 324.562 cv
11.707 324.625 11.906 324.656 12.113 324.652 cv
12.578 324.656 12.941 324.523 13.207 324.262 cv
13.473 324 13.605 323.633 13.602 323.156 cv
13.605 322.906 13.566 322.687 13.48 322.496 cv
13.402 322.312 13.289 322.156 13.148 322.031 cv
13.008 321.91 12.844 321.82 12.652 321.758 cv
12.469 321.703 12.273 321.672 12.066 321.668 cv
cp
17.625 321.023 mo
17.32 321.027 17.09 321.152 16.926 321.395 cv
16.766 321.645 16.676 321.977 16.664 322.395 cv
16.602 324.211 li
16.734 324.379 16.859 324.516 16.973 324.617 cv
17.09 324.727 17.199 324.809 17.309 324.871 cv
17.414 324.934 17.52 324.977 17.625 325 cv
17.727 325.023 17.832 325.035 17.941 325.035 cv
18.277 325.035 18.531 324.867 18.711 324.523 cv
18.883 324.184 18.973 323.703 18.973 323.086 cv
18.973 322.699 18.934 322.375 18.859 322.109 cv
18.781 321.852 18.68 321.641 18.559 321.477 cv
18.43 321.32 18.289 321.203 18.129 321.129 cv
17.969 321.062 17.801 321.027 17.625 321.023 cv
cp
f
17.109 314.809 mo
19.688 315.742 li
19.77 315.777 19.832 315.855 19.879 315.98 cv
19.922 316.109 19.945 316.305 19.945 316.562 cv
19.945 316.703 19.938 316.812 19.926 316.891 cv
19.91 316.977 19.887 317.039 19.859 317.078 cv
19.824 317.125 19.785 317.148 19.734 317.152 cv
19.68 317.16 19.617 317.148 19.547 317.113 cv
17.109 316.148 li
17.09 316.195 17.059 316.242 17.008 316.281 cv
16.965 316.328 16.914 316.355 16.859 316.367 cv
10.156 318.867 li
10.051 318.91 9.965 318.934 9.902 318.93 cv
9.84 318.934 9.793 318.91 9.754 318.867 cv
9.723 318.828 9.695 318.762 9.68 318.664 cv
9.668 318.574 9.664 318.449 9.66 318.293 cv
9.664 318.137 9.668 318.016 9.672 317.926 cv
9.684 317.84 9.695 317.77 9.715 317.715 cv
9.738 317.664 9.77 317.625 9.805 317.602 cv
9.848 317.578 9.902 317.555 9.965 317.527 cv
15.59 315.523 li
15.59 315.5 li
9.934 313.57 li
9.836 313.539 9.773 313.504 9.742 313.457 cv
9.719 313.418 9.695 313.352 9.68 313.258 cv
9.668 313.172 9.664 313.043 9.66 312.875 cv
9.664 312.73 9.668 312.609 9.68 312.516 cv
9.695 312.422 9.723 312.355 9.754 312.309 cv
9.793 312.27 9.84 312.246 9.902 312.242 cv
9.965 312.246 10.043 312.262 10.133 312.289 cv
cp
f
15.684 300.172 mo
15.77 300.172 15.84 300.176 15.902 300.18 cv
15.965 300.187 16.02 300.195 16.066 300.207 cv
16.113 300.223 16.156 300.242 16.191 300.258 cv
16.23 300.281 16.273 300.316 16.324 300.367 cv
16.375 300.422 16.453 300.531 16.559 300.695 cv
16.668 300.863 16.773 301.07 16.871 301.316 cv
16.977 301.562 17.059 301.844 17.129 302.164 cv
17.195 302.484 17.23 302.836 17.234 303.211 cv
17.23 303.871 17.125 304.461 16.906 304.988 cv
16.691 305.516 16.371 305.965 15.941 306.336 cv
15.52 306.707 14.992 306.992 14.363 307.191 cv
13.738 307.391 13.016 307.492 12.199 307.488 cv
11.363 307.492 10.621 307.383 9.965 307.168 cv
9.313 306.953 8.758 306.652 8.301 306.262 cv
7.848 305.875 7.5 305.41 7.262 304.863 cv
7.023 304.324 6.902 303.719 6.902 303.055 cv
6.902 302.766 6.93 302.484 6.984 302.207 cv
7.039 301.934 7.109 301.68 7.188 301.445 cv
7.273 301.215 7.367 301.008 7.477 300.82 cv
7.586 300.641 7.676 300.512 7.746 300.441 cv
7.816 300.371 7.871 300.328 7.906 300.305 cv
7.945 300.289 7.988 300.27 8.035 300.254 cv
8.086 300.242 8.145 300.234 8.211 300.223 cv
8.281 300.219 8.363 300.215 8.453 300.211 cv
8.559 300.215 8.645 300.219 8.715 300.227 cv
8.789 300.238 8.852 300.254 8.898 300.273 cv
8.953 300.297 8.988 300.32 9.008 300.348 cv
9.035 300.379 9.047 300.414 9.043 300.453 cv
9.047 300.527 8.996 300.633 8.891 300.762 cv
8.793 300.895 8.684 301.062 8.559 301.266 cv
8.441 301.477 8.328 301.727 8.223 302.02 cv
8.125 302.316 8.074 302.668 8.07 303.078 cv
8.074 303.531 8.164 303.941 8.34 304.309 cv
8.52 304.676 8.781 304.992 9.129 305.25 cv
9.48 305.516 9.906 305.715 10.406 305.855 cv
10.906 306 11.48 306.074 12.121 306.07 cv
12.766 306.074 13.332 306.004 13.82 305.863 cv
14.313 305.727 14.723 305.527 15.051 305.27 cv
15.383 305.012 15.629 304.695 15.797 304.32 cv
15.969 303.945 16.055 303.52 16.051 303.039 cv
16.055 302.641 16.004 302.289 15.902 301.988 cv
15.805 301.687 15.695 301.434 15.57 301.219 cv
15.449 301.012 15.34 300.836 15.238 300.699 cv
15.145 300.562 15.094 300.457 15.09 300.375 cv
15.094 300.344 15.102 300.312 15.113 300.281 cv
15.133 300.258 15.164 300.234 15.203 300.219 cv
15.25 300.203 15.309 300.191 15.387 300.184 cv
15.465 300.176 15.566 300.172 15.684 300.172 cv
cp
f
13.328 292.023 mo
13.906 292.027 14.434 292.102 14.91 292.25 cv
15.395 292.402 15.809 292.629 16.152 292.926 cv
16.504 293.227 16.773 293.602 16.965 294.047 cv
17.16 294.5 17.254 295.02 17.258 295.609 cv
17.254 296.187 17.172 296.691 17 297.117 cv
16.832 297.547 16.582 297.902 16.254 298.187 cv
15.926 298.477 15.531 298.691 15.063 298.828 cv
14.598 298.969 14.066 299.035 13.469 299.035 cv
12.902 299.035 12.375 298.965 11.895 298.816 cv
11.414 298.672 11 298.445 10.648 298.145 cv
10.301 297.848 10.031 297.477 9.84 297.027 cv
9.648 296.582 9.551 296.059 9.551 295.461 cv
9.551 294.883 9.637 294.383 9.809 293.953 cv
9.98 293.527 10.23 293.168 10.559 292.883 cv
10.887 292.598 11.285 292.383 11.75 292.238 cv
12.219 292.098 12.746 292.027 13.328 292.023 cv
cp
13.414 293.355 mo
13.039 293.359 12.68 293.395 12.34 293.461 cv
12.004 293.535 11.711 293.652 11.453 293.812 cv
11.203 293.977 11 294.195 10.848 294.473 cv
10.703 294.754 10.629 295.102 10.625 295.512 cv
10.629 295.898 10.695 296.227 10.828 296.5 cv
10.965 296.777 11.156 297.004 11.402 297.18 cv
11.648 297.359 11.941 297.492 12.277 297.574 cv
12.617 297.664 12.984 297.707 13.383 297.703 cv
13.77 297.707 14.133 297.672 14.469 297.598 cv
14.809 297.531 15.102 297.414 15.352 297.246 cv
15.605 297.082 15.809 296.859 15.953 296.582 cv
16.105 296.305 16.18 295.957 16.176 295.543 cv
16.18 295.168 16.109 294.84 15.973 294.559 cv
15.84 294.281 15.652 294.055 15.402 293.875 cv
15.16 293.699 14.867 293.57 14.531 293.484 cv
14.195 293.402 13.824 293.359 13.414 293.355 cv
cp
f
16.914 284.098 mo
16.961 284.098 16.996 284.109 17.02 284.129 cv
17.051 284.152 17.074 284.187 17.094 284.23 cv
17.113 284.281 17.125 284.344 17.141 284.426 cv
17.148 284.508 17.156 284.613 17.156 284.734 cv
17.156 284.867 17.148 284.973 17.141 285.055 cv
17.125 285.141 17.113 285.207 17.094 285.25 cv
17.074 285.301 17.051 285.332 17.02 285.352 cv
16.996 285.375 16.961 285.387 16.914 285.383 cv
12.809 285.383 li
12.41 285.387 12.09 285.418 11.844 285.477 cv
11.602 285.543 11.391 285.633 11.211 285.75 cv
11.035 285.867 10.898 286.023 10.805 286.211 cv
10.711 286.406 10.664 286.625 10.664 286.871 cv
10.664 287.195 10.781 287.52 11.008 287.84 cv
11.242 288.164 11.574 288.5 12.012 288.852 cv
16.914 288.852 li
16.961 288.855 16.996 288.867 17.02 288.883 cv
17.051 288.906 17.074 288.937 17.094 288.984 cv
17.113 289.031 17.125 289.098 17.141 289.176 cv
17.148 289.262 17.156 289.367 17.156 289.496 cv
17.156 289.625 17.148 289.73 17.141 289.809 cv
17.125 289.895 17.113 289.961 17.094 290.008 cv
17.074 290.062 17.051 290.094 17.02 290.109 cv
16.996 290.129 16.961 290.141 16.914 290.137 cv
9.902 290.137 li
9.863 290.141 9.828 290.133 9.797 290.113 cv
9.77 290.102 9.746 290.07 9.719 290.02 cv
9.699 289.977 9.684 289.914 9.672 289.84 cv
9.668 289.77 9.664 289.676 9.66 289.551 cv
9.664 289.441 9.668 289.344 9.672 289.266 cv
9.684 289.191 9.699 289.133 9.719 289.09 cv
9.746 289.051 9.77 289.023 9.797 289.004 cv
9.828 288.988 9.863 288.98 9.902 288.977 cv
10.828 288.977 li
10.387 288.586 10.066 288.191 9.859 287.797 cv
9.656 287.406 9.551 287.008 9.551 286.605 cv
9.551 286.137 9.633 285.746 9.789 285.426 cv
9.953 285.109 10.164 284.848 10.426 284.648 cv
10.691 284.453 11 284.312 11.355 284.227 cv
11.711 284.141 12.141 284.098 12.637 284.098 cv
cp
f
15.004 277.355 mo
15.367 277.359 15.688 277.426 15.965 277.555 cv
16.246 277.687 16.48 277.875 16.672 278.117 cv
16.867 278.363 17.012 278.656 17.109 278.992 cv
17.207 279.332 17.254 279.703 17.258 280.105 cv
17.254 280.359 17.234 280.598 17.199 280.82 cv
17.156 281.047 17.109 281.246 17.051 281.426 cv
16.992 281.605 16.93 281.758 16.863 281.883 cv
16.801 282.008 16.742 282.102 16.688 282.156 cv
16.637 282.215 16.566 282.254 16.469 282.277 cv
16.379 282.305 16.25 282.316 16.09 282.316 cv
15.992 282.316 15.91 282.312 15.84 282.301 cv
15.773 282.293 15.719 282.281 15.676 282.262 cv
15.637 282.25 15.605 282.227 15.586 282.199 cv
15.57 282.172 15.563 282.141 15.559 282.102 cv
15.563 282.047 15.598 281.961 15.664 281.848 cv
15.738 281.738 15.816 281.602 15.895 281.434 cv
15.98 281.273 16.055 281.082 16.125 280.855 cv
16.195 280.637 16.23 280.379 16.23 280.082 cv
16.23 279.867 16.207 279.668 16.16 279.488 cv
16.113 279.312 16.047 279.16 15.953 279.031 cv
15.867 278.902 15.75 278.801 15.605 278.73 cv
15.469 278.66 15.301 278.625 15.105 278.625 cv
14.91 278.625 14.746 278.676 14.609 278.777 cv
14.477 278.879 14.355 279.016 14.25 279.18 cv
14.148 279.348 14.059 279.531 13.973 279.738 cv
13.895 279.949 13.809 280.164 13.719 280.383 cv
13.633 280.602 13.531 280.816 13.418 281.027 cv
13.309 281.238 13.176 281.43 13.012 281.594 cv
12.855 281.766 12.66 281.898 12.434 281.996 cv
12.211 282.102 11.945 282.152 11.633 282.148 cv
11.359 282.152 11.094 282.098 10.84 281.988 cv
10.59 281.883 10.371 281.723 10.18 281.508 cv
9.992 281.297 9.84 281.031 9.723 280.711 cv
9.609 280.391 9.551 280.02 9.551 279.59 cv
9.551 279.406 9.566 279.219 9.598 279.031 cv
9.629 278.848 9.668 278.68 9.715 278.523 cv
9.762 278.375 9.813 278.246 9.867 278.137 cv
9.922 278.035 9.973 277.953 10.012 277.895 cv
10.059 277.844 10.094 277.809 10.121 277.785 cv
10.152 277.77 10.188 277.754 10.223 277.746 cv
10.266 277.738 10.313 277.73 10.367 277.723 cv
10.426 277.715 10.496 277.711 10.578 277.711 cv
10.668 277.711 10.746 277.715 10.809 277.723 cv
10.879 277.73 10.93 277.746 10.969 277.762 cv
11.012 277.785 11.043 277.805 11.059 277.828 cv
11.078 277.855 11.086 277.887 11.086 277.914 cv
11.086 277.965 11.059 278.031 11 278.117 cv
10.945 278.207 10.883 278.32 10.816 278.461 cv
10.754 278.602 10.695 278.77 10.633 278.957 cv
10.578 279.148 10.547 279.363 10.547 279.605 cv
10.547 279.828 10.574 280.02 10.621 280.184 cv
10.676 280.352 10.746 280.488 10.832 280.594 cv
10.926 280.699 11.031 280.781 11.156 280.832 cv
11.281 280.891 11.418 280.918 11.563 280.914 cv
11.766 280.918 11.934 280.867 12.07 280.762 cv
12.211 280.66 12.332 280.523 12.434 280.355 cv
12.539 280.191 12.633 280 12.715 279.785 cv
12.801 279.574 12.887 279.359 12.973 279.137 cv
13.063 278.918 13.164 278.699 13.27 278.48 cv
13.379 278.266 13.508 278.074 13.664 277.906 cv
13.82 277.742 14.008 277.609 14.227 277.508 cv
14.445 277.41 14.707 277.359 15.004 277.355 cv
cp
f
16.914 269.512 mo
16.961 269.516 16.996 269.523 17.02 269.539 cv
17.051 269.559 17.074 269.594 17.094 269.637 cv
17.113 269.684 17.125 269.742 17.141 269.816 cv
17.148 269.895 17.156 269.988 17.156 270.094 cv
17.156 270.219 17.148 270.316 17.141 270.387 cv
17.125 270.465 17.113 270.523 17.094 270.566 cv
17.074 270.613 17.051 270.645 17.02 270.656 cv
16.996 270.676 16.961 270.684 16.914 270.68 cv
15.988 270.68 li
16.434 271.082 16.754 271.477 16.953 271.863 cv
17.156 272.258 17.254 272.652 17.258 273.047 cv
17.254 273.52 17.18 273.914 17.023 274.23 cv
16.871 274.551 16.66 274.809 16.391 275.004 cv
16.125 275.207 15.813 275.348 15.453 275.43 cv
15.098 275.52 14.664 275.562 14.156 275.559 cv
9.902 275.559 li
9.863 275.562 9.828 275.555 9.797 275.531 cv
9.77 275.516 9.746 275.48 9.719 275.426 cv
9.699 275.379 9.684 275.309 9.672 275.223 cv
9.668 275.141 9.664 275.039 9.66 274.91 cv
9.664 274.789 9.668 274.684 9.672 274.598 cv
9.684 274.516 9.699 274.449 9.719 274.402 cv
9.746 274.355 9.77 274.32 9.797 274.297 cv
9.828 274.277 9.863 274.27 9.902 274.266 cv
13.984 274.266 li
14.398 274.27 14.727 274.238 14.973 274.176 cv
15.219 274.117 15.43 274.027 15.602 273.902 cv
15.781 273.785 15.914 273.629 16.008 273.437 cv
16.105 273.254 16.156 273.035 16.152 272.785 cv
16.156 272.465 16.039 272.145 15.809 271.82 cv
15.582 271.504 15.246 271.164 14.801 270.805 cv
9.902 270.805 li
9.863 270.805 9.828 270.797 9.797 270.777 cv
9.77 270.762 9.746 270.727 9.719 270.672 cv
9.699 270.621 9.684 270.555 9.672 270.473 cv
9.668 270.395 9.664 270.289 9.66 270.156 cv
9.664 270.035 9.668 269.93 9.672 269.844 cv
9.684 269.762 9.699 269.699 9.719 269.652 cv
9.746 269.609 9.77 269.574 9.797 269.547 cv
9.828 269.527 9.863 269.516 9.902 269.512 cv
cp
f
16.914 256.73 mo
16.961 256.734 16.996 256.742 17.02 256.762 cv
17.051 256.785 17.074 256.82 17.094 256.863 cv
17.113 256.914 17.125 256.98 17.141 257.059 cv
17.148 257.145 17.156 257.246 17.156 257.371 cv
17.156 257.504 17.148 257.613 17.141 257.691 cv
17.125 257.777 17.113 257.844 17.094 257.891 cv
17.074 257.945 17.051 257.98 17.02 257.996 cv
16.996 258.02 16.961 258.027 16.914 258.027 cv
12.652 258.027 li
12.359 258.027 12.09 258.055 11.844 258.105 cv
11.602 258.16 11.391 258.242 11.211 258.355 cv
11.035 258.469 10.898 258.613 10.805 258.789 cv
10.711 258.969 10.664 259.18 10.664 259.414 cv
10.664 259.711 10.781 260.008 11.008 260.305 cv
11.242 260.609 11.574 260.937 12.012 261.293 cv
16.914 261.293 li
16.961 261.297 16.996 261.309 17.02 261.324 cv
17.051 261.348 17.074 261.379 17.094 261.426 cv
17.113 261.477 17.125 261.543 17.141 261.625 cv
17.148 261.711 17.156 261.816 17.156 261.937 cv
17.156 262.059 17.148 262.16 17.141 262.246 cv
17.125 262.332 17.113 262.402 17.094 262.449 cv
17.074 262.504 17.051 262.535 17.02 262.551 cv
16.996 262.57 16.961 262.582 16.914 262.578 cv
12.652 262.578 li
12.359 262.582 12.09 262.609 11.844 262.664 cv
11.602 262.723 11.391 262.809 11.211 262.922 cv
11.035 263.035 10.898 263.18 10.805 263.352 cv
10.711 263.531 10.664 263.738 10.664 263.973 cv
10.664 264.273 10.781 264.57 11.008 264.871 cv
11.242 265.172 11.574 265.5 12.012 265.852 cv
16.914 265.852 li
16.961 265.855 16.996 265.867 17.02 265.883 cv
17.051 265.906 17.074 265.937 17.094 265.984 cv
17.113 266.031 17.125 266.098 17.141 266.176 cv
17.148 266.262 17.156 266.367 17.156 266.496 cv
17.156 266.625 17.148 266.73 17.141 266.809 cv
17.125 266.895 17.113 266.961 17.094 267.008 cv
17.074 267.062 17.051 267.094 17.02 267.109 cv
16.996 267.129 16.961 267.141 16.914 267.137 cv
9.902 267.137 li
9.863 267.141 9.828 267.133 9.797 267.113 cv
9.77 267.102 9.746 267.07 9.719 267.02 cv
9.699 266.977 9.684 266.914 9.672 266.84 cv
9.668 266.77 9.664 266.676 9.66 266.551 cv
9.664 266.441 9.668 266.344 9.672 266.266 cv
9.684 266.191 9.699 266.133 9.719 266.09 cv
9.746 266.051 9.77 266.023 9.797 266.004 cv
9.828 265.988 9.863 265.98 9.902 265.977 cv
10.828 265.977 li
10.387 265.586 10.066 265.203 9.859 264.828 cv
9.656 264.461 9.551 264.082 9.551 263.699 cv
9.551 263.41 9.586 263.152 9.652 262.918 cv
9.723 262.691 9.816 262.484 9.938 262.305 cv
10.059 262.129 10.203 261.98 10.371 261.852 cv
10.543 261.73 10.734 261.625 10.938 261.539 cv
10.688 261.309 10.473 261.086 10.293 260.875 cv
10.121 260.664 9.977 260.461 9.863 260.266 cv
9.758 260.07 9.68 259.883 9.625 259.699 cv
9.578 259.516 9.551 259.328 9.551 259.141 cv
9.551 258.687 9.633 258.309 9.789 258.004 cv
9.953 257.699 10.164 257.453 10.426 257.258 cv
10.691 257.07 11 256.934 11.355 256.852 cv
11.711 256.773 12.086 256.734 12.48 256.73 cv
cp
f
13.297 247.934 mo
13.914 247.937 14.465 248.004 14.953 248.133 cv
15.441 248.27 15.855 248.465 16.195 248.719 cv
16.535 248.977 16.797 249.293 16.98 249.672 cv
17.164 250.051 17.254 250.484 17.258 250.973 cv
17.254 251.184 17.234 251.379 17.195 251.551 cv
17.152 251.73 17.09 251.902 17 252.066 cv
16.914 252.238 16.801 252.406 16.664 252.57 cv
16.531 252.742 16.375 252.918 16.191 253.102 cv
19.695 253.102 li
19.734 253.105 19.773 253.117 19.805 253.133 cv
19.836 253.156 19.859 253.187 19.883 253.234 cv
19.898 253.281 19.914 253.348 19.93 253.426 cv
19.938 253.512 19.945 253.617 19.945 253.746 cv
19.945 253.875 19.938 253.98 19.93 254.059 cv
19.914 254.145 19.898 254.211 19.883 254.258 cv
19.859 254.312 19.836 254.344 19.805 254.359 cv
19.773 254.379 19.734 254.391 19.695 254.387 cv
9.902 254.387 li
9.855 254.391 9.82 254.383 9.789 254.363 cv
9.766 254.352 9.738 254.32 9.715 254.27 cv
9.695 254.227 9.684 254.164 9.672 254.09 cv
9.668 254.02 9.664 253.934 9.66 253.824 cv
9.664 253.719 9.668 253.629 9.672 253.555 cv
9.684 253.488 9.695 253.43 9.715 253.379 cv
9.738 253.336 9.766 253.301 9.789 253.281 cv
9.82 253.266 9.855 253.258 9.902 253.254 cv
10.844 253.254 li
10.629 253.047 10.438 252.844 10.277 252.641 cv
10.117 252.445 9.984 252.246 9.875 252.043 cv
9.77 251.848 9.688 251.641 9.633 251.43 cv
9.578 251.219 9.551 250.996 9.551 250.762 cv
9.551 250.254 9.652 249.82 9.848 249.461 cv
10.047 249.102 10.316 248.812 10.656 248.586 cv
11.004 248.363 11.402 248.195 11.855 248.09 cv
12.313 247.988 12.793 247.937 13.297 247.934 cv
cp
13.445 249.266 mo
13.094 249.27 12.746 249.297 12.406 249.348 cv
12.074 249.406 11.777 249.5 11.516 249.633 cv
11.258 249.77 11.051 249.949 10.891 250.168 cv
10.738 250.395 10.66 250.672 10.656 251.008 cv
10.66 251.176 10.684 251.34 10.73 251.5 cv
10.781 251.664 10.859 251.832 10.965 251.996 cv
11.074 252.168 11.215 252.34 11.387 252.52 cv
11.563 252.703 11.777 252.898 12.027 253.102 cv
14.816 253.102 li
15.254 252.746 15.582 252.41 15.809 252.09 cv
16.039 251.773 16.156 251.437 16.152 251.086 cv
16.156 250.762 16.078 250.484 15.918 250.25 cv
15.766 250.023 15.555 249.836 15.293 249.687 cv
15.035 249.547 14.746 249.437 14.422 249.367 cv
14.102 249.301 13.777 249.27 13.445 249.266 cv
cp
f
16.398 242.437 mo
16.555 242.437 16.672 242.449 16.758 242.469 cv
16.848 242.492 16.914 242.523 16.953 242.562 cv
16.996 242.605 17.035 242.668 17.07 242.75 cv
17.105 242.836 17.133 242.93 17.16 243.035 cv
17.18 243.145 17.199 243.258 17.219 243.375 cv
17.23 243.492 17.238 243.613 17.242 243.73 cv
17.238 244.098 17.191 244.41 17.098 244.668 cv
17.004 244.93 16.859 245.141 16.66 245.305 cv
16.469 245.473 16.223 245.594 15.922 245.668 cv
15.625 245.746 15.273 245.785 14.863 245.781 cv
10.766 245.781 li
10.766 246.762 li
10.77 246.84 10.727 246.902 10.641 246.949 cv
10.559 246.996 10.426 247.02 10.234 247.02 cv
10.141 247.02 10.059 247.016 9.988 247 cv
9.926 246.992 9.867 246.973 9.82 246.949 cv
9.777 246.93 9.746 246.902 9.727 246.867 cv
9.711 246.836 9.703 246.801 9.699 246.754 cv
9.699 245.781 li
8.031 245.781 li
8 245.785 7.965 245.773 7.93 245.754 cv
7.902 245.738 7.875 245.707 7.848 245.652 cv
7.828 245.605 7.813 245.539 7.797 245.453 cv
7.789 245.375 7.781 245.27 7.781 245.141 cv
7.781 245.012 7.789 244.906 7.797 244.824 cv
7.813 244.742 7.828 244.676 7.848 244.629 cv
7.875 244.582 7.902 244.551 7.93 244.527 cv
7.965 244.512 8 244.5 8.031 244.496 cv
9.699 244.496 li
9.699 242.695 li
9.703 242.656 9.711 242.621 9.727 242.586 cv
9.746 242.559 9.777 242.531 9.82 242.504 cv
9.867 242.484 9.926 242.469 9.988 242.453 cv
10.059 242.445 10.141 242.437 10.234 242.437 cv
10.426 242.437 10.559 242.461 10.641 242.508 cv
10.727 242.555 10.77 242.617 10.766 242.695 cv
10.766 244.496 li
14.68 244.496 li
15.164 244.5 15.527 244.43 15.773 244.281 cv
16.023 244.141 16.148 243.883 16.145 243.512 cv
16.148 243.398 16.137 243.293 16.109 243.195 cv
16.09 243.105 16.066 243.023 16.035 242.945 cv
16.012 242.875 15.984 242.812 15.961 242.758 cv
15.938 242.711 15.926 242.664 15.926 242.617 cv
15.926 242.594 15.934 242.566 15.945 242.543 cv
15.961 242.52 15.984 242.504 16.02 242.488 cv
16.059 242.48 16.109 242.469 16.168 242.453 cv
16.234 242.445 16.313 242.437 16.398 242.437 cv
cp
f
16.914 239.422 mo
16.961 239.426 16.996 239.437 17.02 239.453 cv
17.051 239.477 17.074 239.508 17.094 239.555 cv
17.113 239.602 17.125 239.668 17.141 239.746 cv
17.148 239.832 17.156 239.937 17.156 240.066 cv
17.156 240.195 17.148 240.301 17.141 240.379 cv
17.125 240.465 17.113 240.531 17.094 240.578 cv
17.074 240.633 17.051 240.664 17.02 240.68 cv
16.996 240.699 16.961 240.711 16.914 240.707 cv
9.902 240.707 li
9.867 240.711 9.836 240.699 9.801 240.68 cv
9.773 240.664 9.746 240.633 9.723 240.578 cv
9.703 240.531 9.688 240.465 9.676 240.379 cv
9.668 240.301 9.664 240.195 9.66 240.066 cv
9.664 239.937 9.668 239.832 9.676 239.746 cv
9.688 239.668 9.703 239.602 9.723 239.555 cv
9.746 239.508 9.773 239.477 9.801 239.453 cv
9.836 239.437 9.867 239.426 9.902 239.422 cv
cp
7.531 239.273 mo
7.836 239.273 8.043 239.332 8.148 239.445 cv
8.262 239.559 8.316 239.77 8.313 240.074 cv
8.316 240.379 8.262 240.586 8.152 240.695 cv
8.047 240.812 7.844 240.867 7.547 240.863 cv
7.246 240.867 7.043 240.809 6.934 240.691 cv
6.828 240.578 6.773 240.367 6.77 240.059 cv
6.773 239.758 6.828 239.555 6.93 239.441 cv
7.039 239.332 7.238 239.273 7.531 239.273 cv
cp
f
13.328 230.484 mo
13.906 230.488 14.434 230.562 14.91 230.711 cv
15.395 230.863 15.809 231.09 16.152 231.387 cv
16.504 231.687 16.773 232.062 16.965 232.508 cv
17.16 232.961 17.254 233.48 17.258 234.07 cv
17.254 234.648 17.172 235.152 17 235.578 cv
16.832 236.008 16.582 236.363 16.254 236.648 cv
15.926 236.937 15.531 237.152 15.063 237.289 cv
14.598 237.43 14.066 237.496 13.469 237.496 cv
12.902 237.496 12.375 237.426 11.895 237.277 cv
11.414 237.133 11 236.906 10.648 236.605 cv
10.301 236.309 10.031 235.937 9.84 235.488 cv
9.648 235.043 9.551 234.52 9.551 233.922 cv
9.551 233.344 9.637 232.844 9.809 232.414 cv
9.98 231.988 10.23 231.629 10.559 231.344 cv
10.887 231.059 11.285 230.844 11.75 230.699 cv
12.219 230.559 12.746 230.488 13.328 230.484 cv
cp
13.414 231.816 mo
13.039 231.82 12.68 231.855 12.34 231.922 cv
12.004 231.996 11.711 232.113 11.453 232.273 cv
11.203 232.437 11 232.656 10.848 232.934 cv
10.703 233.215 10.629 233.562 10.625 233.973 cv
10.629 234.359 10.695 234.687 10.828 234.961 cv
10.965 235.238 11.156 235.465 11.402 235.641 cv
11.648 235.82 11.941 235.953 12.277 236.035 cv
12.617 236.125 12.984 236.168 13.383 236.164 cv
13.77 236.168 14.133 236.133 14.469 236.059 cv
14.809 235.992 15.102 235.875 15.352 235.707 cv
15.605 235.543 15.809 235.32 15.953 235.043 cv
16.105 234.766 16.18 234.418 16.176 234.004 cv
16.18 233.629 16.109 233.301 15.973 233.02 cv
15.84 232.742 15.652 232.516 15.402 232.336 cv
15.16 232.16 14.867 232.031 14.531 231.945 cv
14.195 231.863 13.824 231.82 13.414 231.816 cv
cp
f
16.914 222.555 mo
16.961 222.555 16.996 222.566 17.02 222.586 cv
17.051 222.609 17.074 222.645 17.094 222.687 cv
17.113 222.738 17.125 222.801 17.141 222.883 cv
17.148 222.965 17.156 223.07 17.156 223.191 cv
17.156 223.324 17.148 223.43 17.141 223.512 cv
17.125 223.598 17.113 223.664 17.094 223.707 cv
17.074 223.758 17.051 223.789 17.02 223.809 cv
16.996 223.832 16.961 223.844 16.914 223.84 cv
12.809 223.84 li
12.41 223.844 12.09 223.875 11.844 223.934 cv
11.602 224 11.391 224.09 11.211 224.207 cv
11.035 224.324 10.898 224.48 10.805 224.668 cv
10.711 224.863 10.664 225.082 10.664 225.328 cv
10.664 225.652 10.781 225.977 11.008 226.297 cv
11.242 226.621 11.574 226.957 12.012 227.309 cv
16.914 227.309 li
16.961 227.312 16.996 227.324 17.02 227.34 cv
17.051 227.363 17.074 227.395 17.094 227.441 cv
17.113 227.488 17.125 227.555 17.141 227.633 cv
17.148 227.719 17.156 227.824 17.156 227.953 cv
17.156 228.082 17.148 228.187 17.141 228.266 cv
17.125 228.352 17.113 228.418 17.094 228.465 cv
17.074 228.52 17.051 228.551 17.02 228.566 cv
16.996 228.586 16.961 228.598 16.914 228.594 cv
9.902 228.594 li
9.863 228.598 9.828 228.59 9.797 228.57 cv
9.77 228.559 9.746 228.527 9.719 228.477 cv
9.699 228.434 9.684 228.371 9.672 228.297 cv
9.668 228.227 9.664 228.133 9.66 228.008 cv
9.664 227.898 9.668 227.801 9.672 227.723 cv
9.684 227.648 9.699 227.59 9.719 227.547 cv
9.746 227.508 9.77 227.48 9.797 227.461 cv
9.828 227.445 9.863 227.437 9.902 227.434 cv
10.828 227.434 li
10.387 227.043 10.066 226.648 9.859 226.254 cv
9.656 225.863 9.551 225.465 9.551 225.062 cv
9.551 224.594 9.633 224.203 9.789 223.883 cv
9.953 223.566 10.164 223.305 10.426 223.105 cv
10.691 222.91 11 222.77 11.355 222.684 cv
11.711 222.598 12.141 222.555 12.637 222.555 cv
cp
f
6.371 213.719 mo
7.418 214.215 8.488 214.582 9.586 214.824 cv
10.688 215.066 11.793 215.187 12.902 215.187 cv
14.02 215.187 15.129 215.066 16.223 214.816 cv
17.32 214.574 18.391 214.211 19.445 213.734 cv
19.504 213.711 19.559 213.699 19.605 213.691 cv
19.648 213.691 19.684 213.707 19.715 213.742 cv
19.742 213.781 19.762 213.836 19.777 213.91 cv
19.785 213.988 19.793 214.094 19.797 214.219 cv
19.793 214.316 19.789 214.395 19.789 214.461 cv
19.781 214.531 19.773 214.59 19.758 214.637 cv
19.742 214.687 19.723 214.73 19.703 214.758 cv
19.68 214.793 19.656 214.816 19.633 214.828 cv
19.102 215.109 18.566 215.355 18.023 215.566 cv
17.48 215.785 16.93 215.965 16.371 216.105 cv
15.809 216.254 15.242 216.363 14.668 216.434 cv
14.094 216.512 13.512 216.547 12.926 216.543 cv
12.34 216.547 11.762 216.508 11.188 216.422 cv
10.617 216.344 10.051 216.227 9.484 216.078 cv
8.922 215.93 8.367 215.75 7.82 215.539 cv
7.277 215.328 6.734 215.09 6.199 214.82 cv
6.18 214.816 6.164 214.801 6.145 214.777 cv
6.133 214.754 6.117 214.723 6.098 214.68 cv
6.086 214.641 6.074 214.582 6.063 214.508 cv
6.059 214.437 6.055 214.344 6.051 214.227 cv
6.055 214.109 6.063 214.016 6.074 213.937 cv
6.094 213.867 6.113 213.809 6.137 213.766 cv
6.164 213.727 6.199 213.703 6.238 213.695 cv
6.285 213.691 6.328 213.699 6.371 213.719 cv
cp
f
16.891 204.824 mo
16.938 204.828 16.973 204.836 17.004 204.852 cv
17.039 204.871 17.066 204.906 17.086 204.957 cv
17.105 205.012 17.121 205.082 17.137 205.168 cv
17.148 205.258 17.156 205.371 17.156 205.512 cv
17.156 205.691 17.148 205.84 17.133 205.953 cv
17.117 206.07 17.09 206.156 17.047 206.211 cv
17.008 206.27 16.961 206.316 16.906 206.352 cv
11.863 210.062 li
16.906 210.062 li
16.945 210.066 16.98 210.074 17.012 210.094 cv
17.047 210.117 17.074 210.156 17.09 210.203 cv
17.109 210.258 17.121 210.324 17.137 210.41 cv
17.148 210.496 17.156 210.605 17.156 210.73 cv
17.156 210.859 17.148 210.965 17.137 211.051 cv
17.121 211.141 17.109 211.211 17.09 211.262 cv
17.074 211.316 17.047 211.352 17.012 211.371 cv
16.98 211.395 16.945 211.406 16.906 211.402 cv
7.227 211.402 li
7.188 211.406 7.152 211.395 7.117 211.371 cv
7.09 211.352 7.063 211.316 7.043 211.262 cv
7.027 211.211 7.012 211.141 6.996 211.051 cv
6.984 210.965 6.98 210.859 6.977 210.73 cv
6.98 210.605 6.984 210.496 6.996 210.41 cv
7.012 210.324 7.027 210.258 7.043 210.203 cv
7.063 210.156 7.09 210.117 7.117 210.094 cv
7.152 210.074 7.188 210.066 7.227 210.062 cv
11.707 210.062 li
7.227 206.492 li
7.184 206.465 7.145 206.43 7.109 206.383 cv
7.082 206.344 7.059 206.293 7.035 206.23 cv
7.02 206.176 7.004 206.102 6.992 206.012 cv
6.984 205.93 6.98 205.82 6.977 205.684 cv
6.98 205.551 6.984 205.441 6.996 205.355 cv
7.012 205.273 7.031 205.207 7.047 205.156 cv
7.07 205.109 7.094 205.074 7.125 205.055 cv
7.156 205.039 7.191 205.031 7.227 205.027 cv
7.297 205.031 7.363 205.047 7.43 205.078 cv
7.5 205.113 7.594 205.18 7.711 205.27 cv
11.707 208.613 li
16.492 205.012 li
16.633 204.926 16.723 204.871 16.77 204.852 cv
16.82 204.836 16.863 204.828 16.891 204.824 cv
cp
f
16.914 202.012 mo
16.961 202.016 16.996 202.027 17.02 202.043 cv
17.051 202.066 17.074 202.098 17.094 202.145 cv
17.113 202.191 17.125 202.258 17.141 202.336 cv
17.148 202.422 17.156 202.527 17.156 202.656 cv
17.156 202.785 17.148 202.891 17.141 202.969 cv
17.125 203.055 17.113 203.121 17.094 203.168 cv
17.074 203.223 17.051 203.254 17.02 203.27 cv
16.996 203.289 16.961 203.301 16.914 203.297 cv
9.902 203.297 li
9.867 203.301 9.836 203.289 9.801 203.27 cv
9.773 203.254 9.746 203.223 9.723 203.168 cv
9.703 203.121 9.688 203.055 9.676 202.969 cv
9.668 202.891 9.664 202.785 9.66 202.656 cv
9.664 202.527 9.668 202.422 9.676 202.336 cv
9.688 202.258 9.703 202.191 9.723 202.145 cv
9.746 202.098 9.773 202.066 9.801 202.043 cv
9.836 202.027 9.867 202.016 9.902 202.012 cv
cp
7.531 201.863 mo
7.836 201.863 8.043 201.922 8.148 202.035 cv
8.262 202.148 8.316 202.359 8.313 202.664 cv
8.316 202.969 8.262 203.176 8.152 203.285 cv
8.047 203.402 7.844 203.457 7.547 203.453 cv
7.246 203.457 7.043 203.398 6.934 203.281 cv
6.828 203.168 6.773 202.957 6.77 202.648 cv
6.773 202.348 6.828 202.145 6.93 202.031 cv
7.039 201.922 7.238 201.863 7.531 201.863 cv
cp
f
16.914 198.312 mo
16.961 198.316 16.996 198.328 17.02 198.344 cv
17.051 198.367 17.074 198.398 17.094 198.445 cv
17.113 198.492 17.125 198.559 17.141 198.637 cv
17.148 198.723 17.156 198.828 17.156 198.957 cv
17.156 199.086 17.148 199.191 17.141 199.27 cv
17.125 199.355 17.113 199.422 17.094 199.469 cv
17.074 199.523 17.051 199.555 17.02 199.57 cv
16.996 199.59 16.961 199.602 16.914 199.598 cv
6.504 199.598 li
6.465 199.602 6.43 199.59 6.395 199.57 cv
6.367 199.555 6.34 199.523 6.316 199.469 cv
6.297 199.422 6.281 199.355 6.27 199.27 cv
6.262 199.191 6.258 199.086 6.254 198.957 cv
6.258 198.828 6.262 198.723 6.27 198.637 cv
6.281 198.559 6.297 198.492 6.316 198.445 cv
6.34 198.398 6.367 198.367 6.395 198.344 cv
6.43 198.328 6.465 198.316 6.504 198.312 cv
cp
f
13.328 189.371 mo
13.906 189.375 14.434 189.449 14.91 189.598 cv
15.395 189.75 15.809 189.977 16.152 190.273 cv
16.504 190.574 16.773 190.949 16.965 191.395 cv
17.16 191.848 17.254 192.367 17.258 192.957 cv
17.254 193.535 17.172 194.039 17 194.465 cv
16.832 194.895 16.582 195.25 16.254 195.535 cv
15.926 195.824 15.531 196.039 15.063 196.176 cv
14.598 196.316 14.066 196.383 13.469 196.383 cv
12.902 196.383 12.375 196.312 11.895 196.164 cv
11.414 196.02 11 195.793 10.648 195.492 cv
10.301 195.195 10.031 194.824 9.84 194.375 cv
9.648 193.93 9.551 193.406 9.551 192.809 cv
9.551 192.23 9.637 191.73 9.809 191.301 cv
9.98 190.875 10.23 190.516 10.559 190.23 cv
10.887 189.945 11.285 189.73 11.75 189.586 cv
12.219 189.445 12.746 189.375 13.328 189.371 cv
cp
13.414 190.703 mo
13.039 190.707 12.68 190.742 12.34 190.809 cv
12.004 190.883 11.711 191 11.453 191.16 cv
11.203 191.324 11 191.543 10.848 191.82 cv
10.703 192.102 10.629 192.449 10.625 192.859 cv
10.629 193.246 10.695 193.574 10.828 193.848 cv
10.965 194.125 11.156 194.352 11.402 194.527 cv
11.648 194.707 11.941 194.84 12.277 194.922 cv
12.617 195.012 12.984 195.055 13.383 195.051 cv
13.77 195.055 14.133 195.02 14.469 194.945 cv
14.809 194.879 15.102 194.762 15.352 194.594 cv
15.605 194.43 15.809 194.207 15.953 193.93 cv
16.105 193.652 16.18 193.305 16.176 192.891 cv
16.18 192.516 16.109 192.187 15.973 191.906 cv
15.84 191.629 15.652 191.402 15.402 191.223 cv
15.16 191.047 14.867 190.918 14.531 190.832 cv
14.195 190.75 13.824 190.707 13.414 190.703 cv
cp
f
16.813 174.07 mo
16.887 174.094 16.945 174.125 16.988 174.164 cv
17.035 174.207 17.07 174.266 17.09 174.336 cv
17.113 174.414 17.125 174.504 17.141 174.605 cv
17.148 174.715 17.156 174.844 17.156 174.996 cv
17.156 175.16 17.148 175.297 17.141 175.406 cv
17.125 175.52 17.113 175.613 17.09 175.684 cv
17.07 175.762 17.035 175.816 16.988 175.848 cv
16.945 175.887 16.887 175.914 16.813 175.934 cv
9.199 178.047 li
9.199 178.059 li
16.813 180.008 li
16.887 180.027 16.945 180.051 16.988 180.086 cv
17.035 180.125 17.07 180.18 17.09 180.242 cv
17.113 180.312 17.125 180.398 17.141 180.504 cv
17.148 180.613 17.156 180.75 17.156 180.914 cv
17.156 181.086 17.148 181.227 17.141 181.34 cv
17.125 181.457 17.113 181.551 17.09 181.621 cv
17.07 181.695 17.035 181.754 16.988 181.789 cv
16.945 181.832 16.887 181.859 16.813 181.871 cv
7.5 184.535 li
7.383 184.57 7.289 184.586 7.219 184.586 cv
7.152 184.59 7.102 184.57 7.063 184.523 cv
7.027 184.48 7.004 184.41 6.992 184.312 cv
6.984 184.215 6.98 184.082 6.977 183.914 cv
6.98 183.754 6.984 183.625 6.988 183.531 cv
7 183.437 7.012 183.367 7.031 183.316 cv
7.055 183.27 7.086 183.234 7.117 183.215 cv
7.156 183.199 7.203 183.187 7.258 183.172 cv
15.707 180.906 li
15.707 180.898 li
7.273 178.746 li
7.219 178.734 7.172 178.715 7.129 178.687 cv
7.094 178.668 7.063 178.629 7.039 178.574 cv
7.02 178.523 7.004 178.449 6.992 178.352 cv
6.984 178.258 6.98 178.133 6.977 177.977 cv
6.98 177.832 6.984 177.719 6.992 177.629 cv
7.004 177.547 7.02 177.477 7.039 177.422 cv
7.063 177.371 7.094 177.332 7.129 177.309 cv
7.172 177.285 7.219 177.266 7.273 177.25 cv
15.707 174.934 li
15.707 174.922 li
7.266 172.699 li
7.215 172.687 7.172 172.672 7.129 172.652 cv
7.094 172.641 7.063 172.609 7.039 172.555 cv
7.02 172.508 7.004 172.437 6.992 172.344 cv
6.984 172.258 6.98 172.137 6.977 171.98 cv
6.98 171.832 6.984 171.707 6.996 171.613 cv
7.012 171.523 7.039 171.457 7.07 171.414 cv
7.109 171.375 7.16 171.355 7.227 171.355 cv
7.297 171.359 7.391 171.375 7.508 171.398 cv
cp
f
16.922 165.039 mo
16.984 165.043 17.031 165.062 17.063 165.102 cv
17.094 165.145 17.117 165.203 17.133 165.273 cv
17.148 165.352 17.156 165.457 17.156 165.594 cv
17.156 165.73 17.148 165.84 17.133 165.918 cv
17.117 166.004 17.094 166.062 17.063 166.094 cv
17.031 166.133 16.984 166.148 16.922 166.145 cv
16.223 166.145 li
16.551 166.453 16.805 166.797 16.984 167.172 cv
17.168 167.551 17.254 167.949 17.258 168.367 cv
17.254 168.742 17.207 169.074 17.113 169.371 cv
17.016 169.668 16.879 169.922 16.695 170.133 cv
16.516 170.344 16.293 170.508 16.027 170.625 cv
15.766 170.742 15.465 170.801 15.121 170.797 cv
14.73 170.801 14.387 170.723 14.094 170.559 cv
13.805 170.402 13.563 170.168 13.371 169.863 cv
13.18 169.562 13.035 169.195 12.938 168.758 cv
12.844 168.324 12.797 167.832 12.793 167.285 cv
12.793 166.316 li
12.246 166.316 li
11.977 166.32 11.738 166.348 11.531 166.402 cv
11.324 166.461 11.152 166.555 11.012 166.68 cv
10.875 166.812 10.77 166.977 10.699 167.176 cv
10.629 167.383 10.594 167.633 10.594 167.922 cv
10.594 168.242 10.633 168.527 10.707 168.777 cv
10.785 169.035 10.867 169.254 10.957 169.441 cv
11.051 169.629 11.137 169.789 11.207 169.914 cv
11.285 170.047 11.32 170.141 11.32 170.199 cv
11.32 170.242 11.313 170.277 11.289 170.309 cv
11.273 170.34 11.242 170.367 11.195 170.391 cv
11.156 170.414 11.102 170.434 11.035 170.441 cv
10.973 170.457 10.902 170.461 10.82 170.457 cv
10.695 170.461 10.59 170.453 10.512 170.43 cv
10.438 170.414 10.367 170.367 10.297 170.297 cv
10.23 170.227 10.152 170.105 10.063 169.934 cv
9.973 169.762 9.891 169.566 9.813 169.344 cv
9.742 169.121 9.68 168.875 9.625 168.609 cv
9.578 168.344 9.551 168.078 9.551 167.805 cv
9.551 167.305 9.609 166.875 9.723 166.523 cv
9.84 166.172 10.008 165.887 10.227 165.664 cv
10.449 165.449 10.723 165.289 11.047 165.187 cv
11.379 165.09 11.762 165.043 12.191 165.039 cv
cp
13.719 166.316 mo
13.719 167.418 li
13.723 167.773 13.754 168.078 13.809 168.336 cv
13.871 168.598 13.957 168.812 14.074 168.984 cv
14.191 169.156 14.332 169.281 14.496 169.359 cv
14.66 169.441 14.848 169.484 15.059 169.48 cv
15.426 169.484 15.719 169.367 15.93 169.137 cv
16.148 168.906 16.254 168.582 16.254 168.164 cv
16.254 167.828 16.168 167.516 15.996 167.227 cv
15.824 166.937 15.563 166.637 15.207 166.316 cv
cp
f
16.398 159.113 mo
16.555 159.113 16.672 159.125 16.758 159.145 cv
16.848 159.168 16.914 159.199 16.953 159.238 cv
16.996 159.281 17.035 159.344 17.07 159.426 cv
17.105 159.512 17.133 159.605 17.16 159.711 cv
17.18 159.82 17.199 159.934 17.219 160.051 cv
17.23 160.168 17.238 160.289 17.242 160.406 cv
17.238 160.773 17.191 161.086 17.098 161.344 cv
17.004 161.605 16.859 161.816 16.66 161.98 cv
16.469 162.148 16.223 162.27 15.922 162.344 cv
15.625 162.422 15.273 162.461 14.863 162.457 cv
10.766 162.457 li
10.766 163.437 li
10.77 163.516 10.727 163.578 10.641 163.625 cv
10.559 163.672 10.426 163.695 10.234 163.695 cv
10.141 163.695 10.059 163.691 9.988 163.676 cv
9.926 163.668 9.867 163.648 9.82 163.625 cv
9.777 163.605 9.746 163.578 9.727 163.543 cv
9.711 163.512 9.703 163.477 9.699 163.43 cv
9.699 162.457 li
8.031 162.457 li
8 162.461 7.965 162.449 7.93 162.43 cv
7.902 162.414 7.875 162.383 7.848 162.328 cv
7.828 162.281 7.813 162.215 7.797 162.129 cv
7.789 162.051 7.781 161.945 7.781 161.816 cv
7.781 161.687 7.789 161.582 7.797 161.5 cv
7.813 161.418 7.828 161.352 7.848 161.305 cv
7.875 161.258 7.902 161.227 7.93 161.203 cv
7.965 161.187 8 161.176 8.031 161.172 cv
9.699 161.172 li
9.699 159.371 li
9.703 159.332 9.711 159.297 9.727 159.262 cv
9.746 159.234 9.777 159.207 9.82 159.18 cv
9.867 159.16 9.926 159.145 9.988 159.129 cv
10.059 159.121 10.141 159.113 10.234 159.113 cv
10.426 159.113 10.559 159.137 10.641 159.184 cv
10.727 159.23 10.77 159.293 10.766 159.371 cv
10.766 161.172 li
14.68 161.172 li
15.164 161.176 15.527 161.105 15.773 160.957 cv
16.023 160.816 16.148 160.559 16.145 160.187 cv
16.148 160.074 16.137 159.969 16.109 159.871 cv
16.09 159.781 16.066 159.699 16.035 159.621 cv
16.012 159.551 15.984 159.488 15.961 159.434 cv
15.938 159.387 15.926 159.34 15.926 159.293 cv
15.926 159.27 15.934 159.242 15.945 159.219 cv
15.961 159.195 15.984 159.18 16.02 159.164 cv
16.059 159.156 16.109 159.145 16.168 159.129 cv
16.234 159.121 16.313 159.113 16.398 159.113 cv
cp
f
16.398 153.957 mo
16.555 153.957 16.672 153.969 16.758 153.988 cv
16.848 154.012 16.914 154.043 16.953 154.082 cv
16.996 154.125 17.035 154.187 17.07 154.27 cv
17.105 154.355 17.133 154.449 17.16 154.555 cv
17.18 154.664 17.199 154.777 17.219 154.895 cv
17.23 155.012 17.238 155.133 17.242 155.25 cv
17.238 155.617 17.191 155.93 17.098 156.187 cv
17.004 156.449 16.859 156.66 16.66 156.824 cv
16.469 156.992 16.223 157.113 15.922 157.187 cv
15.625 157.266 15.273 157.305 14.863 157.301 cv
10.766 157.301 li
10.766 158.281 li
10.77 158.359 10.727 158.422 10.641 158.469 cv
10.559 158.516 10.426 158.539 10.234 158.539 cv
10.141 158.539 10.059 158.535 9.988 158.52 cv
9.926 158.512 9.867 158.492 9.82 158.469 cv
9.777 158.449 9.746 158.422 9.727 158.387 cv
9.711 158.355 9.703 158.32 9.699 158.273 cv
9.699 157.301 li
8.031 157.301 li
8 157.305 7.965 157.293 7.93 157.273 cv
7.902 157.258 7.875 157.227 7.848 157.172 cv
7.828 157.125 7.813 157.059 7.797 156.973 cv
7.789 156.895 7.781 156.789 7.781 156.66 cv
7.781 156.531 7.789 156.426 7.797 156.344 cv
7.813 156.262 7.828 156.195 7.848 156.148 cv
7.875 156.102 7.902 156.07 7.93 156.047 cv
7.965 156.031 8 156.02 8.031 156.016 cv
9.699 156.016 li
9.699 154.215 li
9.703 154.176 9.711 154.141 9.727 154.105 cv
9.746 154.078 9.777 154.051 9.82 154.023 cv
9.867 154.004 9.926 153.988 9.988 153.973 cv
10.059 153.965 10.141 153.957 10.234 153.957 cv
10.426 153.957 10.559 153.98 10.641 154.027 cv
10.727 154.074 10.77 154.137 10.766 154.215 cv
10.766 156.016 li
14.68 156.016 li
15.164 156.02 15.527 155.949 15.773 155.801 cv
16.023 155.66 16.148 155.402 16.145 155.031 cv
16.148 154.918 16.137 154.812 16.109 154.715 cv
16.09 154.625 16.066 154.543 16.035 154.465 cv
16.012 154.395 15.984 154.332 15.961 154.277 cv
15.938 154.23 15.926 154.184 15.926 154.137 cv
15.926 154.113 15.934 154.086 15.945 154.062 cv
15.961 154.039 15.984 154.023 16.02 154.008 cv
16.059 154 16.109 153.988 16.168 153.973 cv
16.234 153.965 16.313 153.957 16.398 153.957 cv
cp
f
15.004 147.824 mo
15.367 147.828 15.688 147.895 15.965 148.023 cv
16.246 148.156 16.48 148.344 16.672 148.586 cv
16.867 148.832 17.012 149.125 17.109 149.461 cv
17.207 149.801 17.254 150.172 17.258 150.574 cv
17.254 150.828 17.234 151.066 17.199 151.289 cv
17.156 151.516 17.109 151.715 17.051 151.895 cv
16.992 152.074 16.93 152.227 16.863 152.352 cv
16.801 152.477 16.742 152.57 16.688 152.625 cv
16.637 152.684 16.566 152.723 16.469 152.746 cv
16.379 152.773 16.25 152.785 16.09 152.785 cv
15.992 152.785 15.91 152.781 15.84 152.77 cv
15.773 152.762 15.719 152.75 15.676 152.73 cv
15.637 152.719 15.605 152.695 15.586 152.668 cv
15.57 152.641 15.563 152.609 15.559 152.57 cv
15.563 152.516 15.598 152.43 15.664 152.316 cv
15.738 152.207 15.816 152.07 15.895 151.902 cv
15.98 151.742 16.055 151.551 16.125 151.324 cv
16.195 151.105 16.23 150.848 16.23 150.551 cv
16.23 150.336 16.207 150.137 16.16 149.957 cv
16.113 149.781 16.047 149.629 15.953 149.5 cv
15.867 149.371 15.75 149.27 15.605 149.199 cv
15.469 149.129 15.301 149.094 15.105 149.094 cv
14.91 149.094 14.746 149.145 14.609 149.246 cv
14.477 149.348 14.355 149.484 14.25 149.648 cv
14.148 149.816 14.059 150 13.973 150.207 cv
13.895 150.418 13.809 150.633 13.719 150.852 cv
13.633 151.07 13.531 151.285 13.418 151.496 cv
13.309 151.707 13.176 151.898 13.012 152.062 cv
12.855 152.234 12.66 152.367 12.434 152.465 cv
12.211 152.57 11.945 152.621 11.633 152.617 cv
11.359 152.621 11.094 152.566 10.84 152.457 cv
10.59 152.352 10.371 152.191 10.18 151.977 cv
9.992 151.766 9.84 151.5 9.723 151.18 cv
9.609 150.859 9.551 150.488 9.551 150.059 cv
9.551 149.875 9.566 149.687 9.598 149.5 cv
9.629 149.316 9.668 149.148 9.715 148.992 cv
9.762 148.844 9.813 148.715 9.867 148.605 cv
9.922 148.504 9.973 148.422 10.012 148.363 cv
10.059 148.312 10.094 148.277 10.121 148.254 cv
10.152 148.238 10.188 148.223 10.223 148.215 cv
10.266 148.207 10.313 148.199 10.367 148.191 cv
10.426 148.184 10.496 148.18 10.578 148.18 cv
10.668 148.18 10.746 148.184 10.809 148.191 cv
10.879 148.199 10.93 148.215 10.969 148.23 cv
11.012 148.254 11.043 148.273 11.059 148.297 cv
11.078 148.324 11.086 148.355 11.086 148.383 cv
11.086 148.434 11.059 148.5 11 148.586 cv
10.945 148.676 10.883 148.789 10.816 148.93 cv
10.754 149.07 10.695 149.238 10.633 149.426 cv
10.578 149.617 10.547 149.832 10.547 150.074 cv
10.547 150.297 10.574 150.488 10.621 150.652 cv
10.676 150.82 10.746 150.957 10.832 151.062 cv
10.926 151.168 11.031 151.25 11.156 151.301 cv
11.281 151.359 11.418 151.387 11.563 151.383 cv
11.766 151.387 11.934 151.336 12.07 151.23 cv
12.211 151.129 12.332 150.992 12.434 150.824 cv
12.539 150.66 12.633 150.469 12.715 150.254 cv
12.801 150.043 12.887 149.828 12.973 149.605 cv
13.063 149.387 13.164 149.168 13.27 148.949 cv
13.379 148.734 13.508 148.543 13.664 148.375 cv
13.82 148.211 14.008 148.078 14.227 147.977 cv
14.445 147.879 14.707 147.828 15.004 147.824 cv
cp
f
12.926 143.379 mo
13.512 143.379 14.094 143.418 14.668 143.488 cv
15.242 143.566 15.809 143.676 16.371 143.816 cv
16.93 143.965 17.48 144.141 18.023 144.352 cv
18.566 144.562 19.102 144.809 19.633 145.086 cv
19.656 145.105 19.68 145.129 19.703 145.156 cv
19.723 145.191 19.742 145.23 19.758 145.277 cv
19.773 145.328 19.781 145.387 19.789 145.453 cv
19.789 145.523 19.793 145.605 19.797 145.695 cv
19.793 145.832 19.785 145.937 19.777 146.012 cv
19.762 146.09 19.742 146.145 19.715 146.176 cv
19.684 146.211 19.648 146.227 19.605 146.223 cv
19.559 146.223 19.504 146.207 19.445 146.18 cv
18.395 145.703 17.324 145.344 16.227 145.098 cv
15.129 144.855 14.02 144.734 12.902 144.73 cv
11.793 144.734 10.688 144.855 9.586 145.098 cv
8.488 145.344 7.418 145.711 6.371 146.195 cv
6.328 146.219 6.285 146.227 6.238 146.219 cv
6.199 146.219 6.164 146.195 6.137 146.148 cv
6.113 146.109 6.094 146.051 6.074 145.977 cv
6.063 145.906 6.055 145.809 6.051 145.687 cv
6.055 145.578 6.059 145.488 6.063 145.414 cv
6.074 145.344 6.086 145.285 6.098 145.238 cv
6.117 145.195 6.133 145.164 6.145 145.141 cv
6.164 145.125 6.18 145.109 6.199 145.094 cv
7.266 144.562 8.363 144.141 9.484 143.836 cv
10.613 143.531 11.758 143.379 12.926 143.379 cv
cp
f
258.852 542.805 mo
258.848 542.91 258.832 543 258.797 543.07 cv
258.762 543.148 258.715 543.207 258.66 543.25 cv
258.602 543.301 258.539 543.336 258.473 543.352 cv
258.398 543.375 258.328 543.383 258.266 543.383 cv
257.82 543.383 li
257.68 543.383 257.559 543.371 257.453 543.34 cv
257.348 543.316 257.25 543.262 257.156 543.184 cv
257.063 543.109 256.969 543.008 256.875 542.875 cv
256.781 542.746 256.68 542.582 256.574 542.379 cv
253.5 536.641 li
253.336 536.348 253.172 536.039 253.012 535.711 cv
252.844 535.391 252.691 535.074 252.555 534.766 cv
252.539 534.766 li
252.547 535.141 252.555 535.523 252.563 535.91 cv
252.566 536.301 252.566 536.687 252.57 537.07 cv
252.57 543.156 li
252.566 543.195 252.555 543.23 252.535 543.262 cv
252.512 543.297 252.477 543.324 252.426 543.34 cv
252.371 543.359 252.301 543.371 252.219 543.387 cv
252.133 543.398 252.027 543.406 251.898 543.406 cv
251.762 543.406 251.652 543.398 251.57 543.387 cv
251.484 543.371 251.418 543.359 251.371 543.34 cv
251.32 543.324 251.285 543.297 251.262 543.262 cv
251.238 543.23 251.227 543.195 251.23 543.156 cv
251.23 533.852 li
251.227 533.645 251.285 533.496 251.406 533.406 cv
251.523 533.32 251.652 533.277 251.793 533.273 cv
252.453 533.273 li
252.605 533.277 252.738 533.289 252.844 533.312 cv
252.945 533.34 253.039 533.383 253.125 533.441 cv
253.207 533.504 253.285 533.586 253.367 533.691 cv
253.441 533.801 253.523 533.937 253.609 534.094 cv
255.977 538.52 li
256.121 538.793 256.262 539.059 256.398 539.312 cv
256.531 539.57 256.66 539.824 256.789 540.07 cv
256.91 540.324 257.035 540.57 257.16 540.809 cv
257.281 541.051 257.402 541.293 257.527 541.535 cv
257.535 541.535 li
257.523 541.129 257.516 540.699 257.516 540.254 cv
257.508 539.809 257.508 539.383 257.512 538.973 cv
257.512 533.5 li
257.508 533.465 257.52 533.43 257.543 533.398 cv
257.566 533.367 257.602 533.34 257.656 533.316 cv
257.703 533.293 257.773 533.277 257.859 533.266 cv
257.945 533.258 258.055 533.254 258.195 533.25 cv
258.313 533.254 258.418 533.258 258.508 533.266 cv
258.594 533.277 258.66 533.293 258.711 533.316 cv
258.758 533.34 258.793 533.367 258.816 533.398 cv
258.836 533.43 258.848 533.465 258.852 533.5 cv
cp
f
267.398 543.164 mo
267.395 543.211 267.387 543.246 267.371 543.27 cv
267.352 543.301 267.316 543.324 267.273 543.344 cv
267.227 543.363 267.168 543.375 267.094 543.391 cv
267.016 543.398 266.922 543.406 266.816 543.406 cv
266.691 543.406 266.594 543.398 266.523 543.391 cv
266.445 543.375 266.387 543.363 266.344 543.344 cv
266.297 543.324 266.266 543.301 266.254 543.27 cv
266.234 543.246 266.227 543.211 266.23 543.164 cv
266.23 542.238 li
265.828 542.684 265.434 543.004 265.047 543.203 cv
264.652 543.406 264.258 543.504 263.863 543.508 cv
263.391 543.504 262.996 543.43 262.68 543.273 cv
262.359 543.121 262.102 542.91 261.906 542.641 cv
261.703 542.375 261.563 542.062 261.48 541.703 cv
261.391 541.348 261.348 540.914 261.352 540.406 cv
261.352 536.152 li
261.348 536.113 261.355 536.078 261.379 536.047 cv
261.395 536.02 261.43 535.996 261.484 535.969 cv
261.531 535.949 261.602 535.934 261.688 535.922 cv
261.77 535.918 261.871 535.914 262 535.91 cv
262.121 535.914 262.227 535.918 262.313 535.922 cv
262.395 535.934 262.461 535.949 262.508 535.969 cv
262.555 535.996 262.59 536.02 262.613 536.047 cv
262.633 536.078 262.641 536.113 262.645 536.152 cv
262.645 540.234 li
262.641 540.648 262.672 540.977 262.734 541.223 cv
262.793 541.469 262.883 541.68 263.008 541.852 cv
263.125 542.031 263.281 542.164 263.473 542.258 cv
263.656 542.355 263.875 542.406 264.125 542.402 cv
264.445 542.406 264.766 542.289 265.09 542.059 cv
265.406 541.832 265.746 541.496 266.105 541.051 cv
266.105 536.152 li
266.105 536.113 266.113 536.078 266.133 536.047 cv
266.148 536.02 266.184 535.996 266.238 535.969 cv
266.289 535.949 266.355 535.934 266.438 535.922 cv
266.516 535.918 266.621 535.914 266.754 535.91 cv
266.875 535.914 266.98 535.918 267.066 535.922 cv
267.148 535.934 267.211 535.949 267.258 535.969 cv
267.301 535.996 267.336 536.02 267.363 536.047 cv
267.383 536.078 267.395 536.113 267.398 536.152 cv
cp
f
280.176 543.164 mo
280.172 543.211 280.164 543.246 280.145 543.27 cv
280.121 543.301 280.086 543.324 280.043 543.344 cv
279.992 543.363 279.926 543.375 279.848 543.391 cv
279.762 543.398 279.66 543.406 279.535 543.406 cv
279.402 543.406 279.293 543.398 279.215 543.391 cv
279.129 543.375 279.063 543.363 279.016 543.344 cv
278.961 543.324 278.926 543.301 278.91 543.27 cv
278.887 543.246 278.879 543.211 278.879 543.164 cv
278.879 538.902 li
278.879 538.609 278.852 538.34 278.801 538.094 cv
278.746 537.852 278.664 537.641 278.551 537.461 cv
278.438 537.285 278.293 537.148 278.117 537.055 cv
277.938 536.961 277.727 536.914 277.492 536.914 cv
277.195 536.914 276.898 537.031 276.602 537.258 cv
276.297 537.492 275.969 537.824 275.613 538.262 cv
275.613 543.164 li
275.609 543.211 275.598 543.246 275.582 543.27 cv
275.559 543.301 275.527 543.324 275.48 543.344 cv
275.43 543.363 275.363 543.375 275.281 543.391 cv
275.195 543.398 275.09 543.406 274.969 543.406 cv
274.848 543.406 274.746 543.398 274.66 543.391 cv
274.574 543.375 274.504 543.363 274.457 543.344 cv
274.402 543.324 274.371 543.301 274.355 543.27 cv
274.336 543.246 274.324 543.211 274.328 543.164 cv
274.328 538.902 li
274.324 538.609 274.297 538.34 274.242 538.094 cv
274.184 537.852 274.098 537.641 273.984 537.461 cv
273.871 537.285 273.727 537.148 273.555 537.055 cv
273.375 536.961 273.168 536.914 272.934 536.914 cv
272.633 536.914 272.336 537.031 272.035 537.258 cv
271.734 537.492 271.406 537.824 271.055 538.262 cv
271.055 543.164 li
271.051 543.211 271.039 543.246 271.023 543.27 cv
271 543.301 270.969 543.324 270.922 543.344 cv
270.875 543.363 270.809 543.375 270.73 543.391 cv
270.645 543.398 270.539 543.406 270.41 543.406 cv
270.281 543.406 270.176 543.398 270.098 543.391 cv
270.012 543.375 269.945 543.363 269.898 543.344 cv
269.844 543.324 269.813 543.301 269.797 543.27 cv
269.777 543.246 269.766 543.211 269.77 543.164 cv
269.77 536.152 li
269.766 536.113 269.773 536.078 269.793 536.047 cv
269.805 536.02 269.836 535.996 269.887 535.969 cv
269.93 535.949 269.992 535.934 270.066 535.922 cv
270.137 535.918 270.23 535.914 270.355 535.91 cv
270.465 535.914 270.563 535.918 270.641 535.922 cv
270.715 535.934 270.773 535.949 270.816 535.969 cv
270.855 535.996 270.883 536.02 270.902 536.047 cv
270.918 536.078 270.926 536.113 270.93 536.152 cv
270.93 537.078 li
271.32 536.637 271.703 536.316 272.078 536.109 cv
272.445 535.906 272.824 535.801 273.207 535.801 cv
273.496 535.801 273.754 535.836 273.988 535.902 cv
274.215 535.973 274.422 536.066 274.602 536.187 cv
274.777 536.309 274.926 536.453 275.055 536.621 cv
275.176 536.793 275.281 536.984 275.367 537.187 cv
275.598 536.937 275.82 536.723 276.031 536.543 cv
276.242 536.371 276.445 536.227 276.641 536.113 cv
276.836 536.008 277.023 535.93 277.207 535.875 cv
277.391 535.828 277.578 535.801 277.766 535.801 cv
278.219 535.801 278.598 535.883 278.902 536.039 cv
279.207 536.203 279.453 536.414 279.648 536.676 cv
279.836 536.941 279.973 537.25 280.055 537.605 cv
280.133 537.961 280.172 538.336 280.176 538.73 cv
cp
f
288.977 539.562 mo
288.973 540.172 288.906 540.723 288.777 541.207 cv
288.641 541.695 288.445 542.109 288.191 542.449 cv
287.934 542.793 287.617 543.055 287.246 543.234 cv
286.871 543.418 286.445 543.504 285.961 543.508 cv
285.734 543.504 285.527 543.484 285.34 543.441 cv
285.152 543.395 284.965 543.324 284.785 543.227 cv
284.598 543.129 284.418 543.004 284.238 542.852 cv
284.055 542.703 283.863 542.523 283.664 542.309 cv
283.664 543.164 li
283.664 543.211 283.652 543.246 283.633 543.273 cv
283.609 543.309 283.574 543.332 283.531 543.348 cv
283.48 543.363 283.422 543.375 283.355 543.391 cv
283.281 543.398 283.191 543.406 283.086 543.406 cv
282.977 543.406 282.891 543.398 282.82 543.391 cv
282.746 543.375 282.684 543.363 282.641 543.348 cv
282.59 543.332 282.559 543.309 282.547 543.273 cv
282.527 543.246 282.52 543.211 282.523 543.164 cv
282.523 532.754 li
282.52 532.715 282.531 532.68 282.551 532.645 cv
282.566 532.617 282.598 532.59 282.652 532.566 cv
282.699 532.547 282.766 532.531 282.852 532.52 cv
282.93 532.512 283.035 532.508 283.164 532.504 cv
283.293 532.508 283.398 532.512 283.484 532.52 cv
283.563 532.531 283.629 532.547 283.676 532.566 cv
283.723 532.59 283.754 532.617 283.777 532.645 cv
283.793 532.68 283.805 532.715 283.809 532.754 cv
283.809 536.953 li
284.016 536.742 284.219 536.562 284.414 536.418 cv
284.609 536.273 284.797 536.156 284.984 536.062 cv
285.168 535.977 285.355 535.91 285.547 535.863 cv
285.73 535.824 285.93 535.801 286.141 535.801 cv
286.645 535.801 287.078 535.902 287.445 536.105 cv
287.805 536.309 288.098 536.582 288.324 536.918 cv
288.547 537.262 288.715 537.66 288.82 538.117 cv
288.922 538.574 288.973 539.055 288.977 539.562 cv
cp
287.645 539.711 mo
287.641 539.355 287.613 539.008 287.563 538.668 cv
287.504 538.332 287.41 538.035 287.273 537.773 cv
287.137 537.516 286.957 537.305 286.734 537.145 cv
286.508 536.988 286.227 536.91 285.895 536.906 cv
285.727 536.91 285.563 536.934 285.402 536.977 cv
285.238 537.027 285.074 537.105 284.906 537.211 cv
284.738 537.324 284.563 537.465 284.387 537.633 cv
284.203 537.809 284.012 538.023 283.809 538.277 cv
283.809 541.074 li
284.164 541.508 284.504 541.84 284.828 542.062 cv
285.152 542.293 285.488 542.406 285.84 542.402 cv
286.16 542.406 286.438 542.328 286.672 542.168 cv
286.898 542.016 287.086 541.809 287.23 541.547 cv
287.375 541.293 287.48 541.004 287.547 540.684 cv
287.609 540.367 287.641 540.043 287.645 539.711 cv
cp
f
296.887 539.355 mo
296.883 539.559 296.832 539.699 296.734 539.785 cv
296.629 539.871 296.512 539.914 296.387 539.914 cv
291.77 539.914 li
291.766 540.305 291.805 540.656 291.887 540.969 cv
291.961 541.281 292.094 541.551 292.277 541.77 cv
292.457 541.996 292.691 542.168 292.988 542.285 cv
293.277 542.41 293.637 542.469 294.063 542.465 cv
294.395 542.469 294.691 542.441 294.953 542.383 cv
295.215 542.332 295.441 542.27 295.633 542.199 cv
295.82 542.133 295.977 542.074 296.102 542.016 cv
296.223 541.965 296.316 541.937 296.379 541.934 cv
296.414 541.937 296.445 541.945 296.477 541.961 cv
296.504 541.98 296.527 542.008 296.547 542.043 cv
296.559 542.082 296.57 542.133 296.582 542.195 cv
296.586 542.262 296.59 542.34 296.594 542.434 cv
296.59 542.504 296.586 542.562 296.586 542.609 cv
296.578 542.656 296.574 542.699 296.566 542.738 cv
296.559 542.777 296.543 542.812 296.527 542.844 cv
296.504 542.875 296.48 542.906 296.457 542.934 cv
296.426 542.965 296.344 543.012 296.203 543.074 cv
296.063 543.141 295.879 543.203 295.656 543.266 cv
295.43 543.328 295.172 543.383 294.879 543.434 cv
294.586 543.48 294.273 543.504 293.941 543.508 cv
293.363 543.504 292.855 543.426 292.426 543.266 cv
291.988 543.105 291.625 542.867 291.332 542.551 cv
291.031 542.234 290.809 541.84 290.66 541.359 cv
290.512 540.883 290.438 540.324 290.438 539.687 cv
290.438 539.09 290.512 538.551 290.668 538.066 cv
290.82 537.59 291.047 537.18 291.344 536.844 cv
291.637 536.508 291.992 536.25 292.406 536.07 cv
292.82 535.891 293.285 535.801 293.801 535.801 cv
294.352 535.801 294.82 535.891 295.207 536.066 cv
295.594 536.246 295.91 536.484 296.164 536.781 cv
296.41 537.082 296.594 537.434 296.711 537.832 cv
296.824 538.238 296.883 538.668 296.887 539.121 cv
cp
295.594 538.973 mo
295.609 538.297 295.457 537.766 295.141 537.383 cv
294.824 537 294.355 536.809 293.738 536.805 cv
293.414 536.809 293.133 536.867 292.895 536.984 cv
292.652 537.105 292.453 537.266 292.293 537.461 cv
292.129 537.66 292.004 537.891 291.918 538.152 cv
291.828 538.414 291.777 538.687 291.77 538.973 cv
cp
f
302.953 536.609 mo
302.949 536.727 302.949 536.824 302.945 536.898 cv
302.938 536.98 302.926 537.043 302.914 537.082 cv
302.895 537.129 302.875 537.16 302.855 537.184 cv
302.828 537.207 302.797 537.219 302.758 537.219 cv
302.715 537.219 302.664 537.207 302.605 537.184 cv
302.543 537.16 302.473 537.137 302.402 537.113 cv
302.324 537.09 302.242 537.07 302.148 537.047 cv
302.055 537.031 301.953 537.02 301.844 537.016 cv
301.711 537.02 301.582 537.047 301.461 537.094 cv
301.336 537.148 301.207 537.234 301.07 537.352 cv
300.93 537.477 300.785 537.633 300.637 537.828 cv
300.484 538.023 300.316 538.266 300.137 538.551 cv
300.137 543.164 li
300.133 543.211 300.121 543.246 300.105 543.27 cv
300.082 543.301 300.051 543.324 300.004 543.344 cv
299.957 543.363 299.891 543.375 299.813 543.391 cv
299.727 543.398 299.621 543.406 299.492 543.406 cv
299.363 543.406 299.258 543.398 299.18 543.391 cv
299.094 543.375 299.027 543.363 298.98 543.344 cv
298.926 543.324 298.895 543.301 298.879 543.27 cv
298.859 543.246 298.848 543.211 298.852 543.164 cv
298.852 536.152 li
298.848 536.113 298.855 536.078 298.875 536.047 cv
298.887 536.02 298.918 535.996 298.969 535.969 cv
299.012 535.949 299.074 535.934 299.148 535.922 cv
299.219 535.918 299.313 535.914 299.438 535.91 cv
299.547 535.914 299.645 535.918 299.723 535.922 cv
299.797 535.934 299.855 535.949 299.898 535.969 cv
299.938 535.996 299.965 536.02 299.984 536.047 cv
300 536.078 300.008 536.113 300.012 536.152 cv
300.012 537.172 li
300.199 536.891 300.383 536.664 300.555 536.488 cv
300.723 536.312 300.883 536.172 301.035 536.07 cv
301.184 535.969 301.332 535.898 301.48 535.859 cv
301.629 535.82 301.777 535.801 301.93 535.801 cv
301.996 535.801 302.074 535.805 302.16 535.812 cv
302.246 535.82 302.336 535.836 302.43 535.855 cv
302.523 535.879 302.605 535.902 302.684 535.926 cv
302.754 535.953 302.809 535.98 302.844 536.004 cv
302.871 536.035 302.891 536.059 302.906 536.078 cv
302.914 536.105 302.926 536.137 302.934 536.168 cv
302.941 536.207 302.945 536.258 302.949 536.328 cv
302.949 536.398 302.949 536.492 302.953 536.609 cv
cp
f
314.711 539.578 mo
314.707 540.156 314.633 540.684 314.484 541.16 cv
314.332 541.645 314.105 542.059 313.809 542.402 cv
313.508 542.754 313.133 543.023 312.688 543.215 cv
312.234 543.41 311.715 543.504 311.125 543.508 cv
310.547 543.504 310.043 543.422 309.617 543.25 cv
309.188 543.082 308.832 542.832 308.547 542.504 cv
308.258 542.176 308.043 541.781 307.906 541.312 cv
307.766 540.848 307.699 540.316 307.699 539.719 cv
307.699 539.152 307.77 538.625 307.918 538.145 cv
308.063 537.664 308.289 537.25 308.59 536.898 cv
308.887 536.551 309.258 536.281 309.707 536.09 cv
310.152 535.898 310.676 535.801 311.273 535.801 cv
311.852 535.801 312.352 535.887 312.781 536.059 cv
313.207 536.23 313.566 536.48 313.852 536.809 cv
314.137 537.137 314.352 537.535 314.496 538 cv
314.637 538.469 314.707 538.996 314.711 539.578 cv
cp
313.379 539.664 mo
313.375 539.289 313.34 538.93 313.273 538.59 cv
313.199 538.254 313.082 537.961 312.922 537.703 cv
312.758 537.453 312.539 537.25 312.262 537.098 cv
311.98 536.953 311.633 536.879 311.223 536.875 cv
310.836 536.879 310.508 536.945 310.234 537.078 cv
309.957 537.215 309.73 537.406 309.555 537.652 cv
309.375 537.898 309.242 538.191 309.16 538.527 cv
309.07 538.867 309.027 539.234 309.031 539.633 cv
309.027 540.02 309.063 540.383 309.137 540.719 cv
309.203 541.059 309.32 541.352 309.488 541.602 cv
309.652 541.855 309.875 542.059 310.152 542.203 cv
310.43 542.355 310.777 542.43 311.191 542.426 cv
311.566 542.43 311.895 542.359 312.176 542.223 cv
312.453 542.09 312.68 541.902 312.859 541.652 cv
313.035 541.41 313.164 541.117 313.25 540.781 cv
313.332 540.445 313.375 540.074 313.379 539.664 cv
cp
f
320.441 533.266 mo
320.438 533.367 320.434 533.445 320.426 533.504 cv
320.414 533.566 320.402 533.617 320.391 533.648 cv
320.375 533.687 320.359 533.711 320.34 533.723 cv
320.316 533.738 320.289 533.746 320.262 533.742 cv
320.223 533.746 320.176 533.734 320.125 533.707 cv
320.066 533.687 320 533.66 319.926 533.629 cv
319.844 533.602 319.754 533.574 319.648 533.551 cv
319.539 533.527 319.414 533.516 319.281 533.516 cv
319.086 533.516 318.922 533.547 318.789 533.609 cv
318.648 533.672 318.539 533.77 318.461 533.902 cv
318.375 534.035 318.316 534.207 318.281 534.418 cv
318.242 534.629 318.223 534.887 318.227 535.184 cv
318.227 535.949 li
319.793 535.949 li
319.832 535.953 319.867 535.961 319.898 535.977 cv
319.926 535.996 319.953 536.027 319.977 536.07 cv
320 536.117 320.016 536.176 320.031 536.238 cv
320.039 536.309 320.047 536.391 320.051 536.484 cv
320.047 536.676 320.023 536.809 319.98 536.891 cv
319.93 536.977 319.867 537.02 319.793 537.016 cv
318.227 537.016 li
318.227 543.164 li
318.223 543.211 318.215 543.246 318.195 543.27 cv
318.172 543.301 318.137 543.324 318.09 543.344 cv
318.039 543.363 317.973 543.375 317.891 543.391 cv
317.805 543.398 317.699 543.406 317.582 543.406 cv
317.453 543.406 317.352 543.398 317.27 543.391 cv
317.184 543.375 317.117 543.363 317.07 543.344 cv
317.02 543.324 316.984 543.301 316.965 543.27 cv
316.941 543.246 316.93 543.211 316.934 543.164 cv
316.934 537.016 li
315.945 537.016 li
315.859 537.02 315.797 536.977 315.758 536.891 cv
315.715 536.809 315.691 536.676 315.695 536.484 cv
315.691 536.391 315.699 536.309 315.711 536.238 cv
315.719 536.176 315.734 536.117 315.758 536.07 cv
315.777 536.027 315.801 535.996 315.836 535.977 cv
315.863 535.961 315.902 535.953 315.945 535.949 cv
316.934 535.949 li
316.934 535.223 li
316.93 534.738 316.977 534.32 317.07 533.965 cv
317.16 533.617 317.297 533.328 317.484 533.105 cv
317.668 532.883 317.902 532.719 318.191 532.609 cv
318.473 532.504 318.809 532.449 319.195 532.449 cv
319.371 532.449 319.547 532.469 319.723 532.5 cv
319.891 532.539 320.023 532.574 320.121 532.609 cv
320.211 532.652 320.273 532.687 320.309 532.715 cv
320.336 532.75 320.363 532.789 320.387 532.836 cv
320.406 532.887 320.418 532.949 320.43 533.016 cv
320.434 533.09 320.438 533.172 320.441 533.266 cv
cp
f
330.637 540.531 mo
330.633 541.004 330.547 541.426 330.375 541.793 cv
330.199 542.168 329.957 542.48 329.648 542.734 cv
329.34 542.992 328.977 543.184 328.559 543.312 cv
328.137 543.441 327.688 543.504 327.207 543.508 cv
326.867 543.504 326.551 543.477 326.266 543.422 cv
325.977 543.363 325.723 543.297 325.496 543.211 cv
325.27 543.133 325.078 543.047 324.926 542.953 cv
324.77 542.867 324.664 542.789 324.605 542.727 cv
324.547 542.664 324.504 542.586 324.477 542.492 cv
324.445 542.398 324.43 542.27 324.434 542.105 cv
324.43 541.992 324.434 541.898 324.449 541.82 cv
324.457 541.746 324.473 541.684 324.496 541.637 cv
324.512 541.59 324.539 541.559 324.574 541.539 cv
324.602 541.523 324.637 541.516 324.68 541.512 cv
324.75 541.516 324.852 541.559 324.988 541.645 cv
325.117 541.734 325.289 541.832 325.5 541.934 cv
325.707 542.043 325.957 542.141 326.25 542.227 cv
326.543 542.32 326.883 542.363 327.27 542.363 cv
327.559 542.363 327.824 542.324 328.066 542.246 cv
328.305 542.168 328.512 542.059 328.691 541.914 cv
328.863 541.773 329 541.598 329.094 541.387 cv
329.188 541.18 329.234 540.945 329.234 540.68 cv
329.234 540.398 329.168 540.152 329.039 539.945 cv
328.906 539.746 328.734 539.57 328.523 539.414 cv
328.309 539.266 328.066 539.125 327.793 538.992 cv
327.52 538.867 327.238 538.734 326.957 538.602 cv
326.668 538.469 326.391 538.324 326.121 538.16 cv
325.852 538.004 325.609 537.812 325.398 537.594 cv
325.18 537.375 325.008 537.121 324.879 536.824 cv
324.742 536.535 324.676 536.184 324.68 535.77 cv
324.676 535.352 324.754 534.977 324.91 534.645 cv
325.063 534.316 325.273 534.039 325.551 533.812 cv
325.82 533.594 326.145 533.422 326.523 533.305 cv
326.898 533.187 327.309 533.129 327.746 533.129 cv
327.965 533.129 328.188 533.148 328.418 533.187 cv
328.641 533.227 328.852 533.277 329.055 533.34 cv
329.25 533.406 329.43 533.48 329.59 533.559 cv
329.742 533.641 329.844 533.707 329.898 533.754 cv
329.945 533.809 329.98 533.848 329.996 533.871 cv
330.012 533.902 330.023 533.937 330.035 533.98 cv
330.043 534.027 330.051 534.082 330.059 534.141 cv
330.063 534.207 330.066 534.285 330.066 534.383 cv
330.066 534.477 330.063 534.562 330.055 534.633 cv
330.047 534.711 330.035 534.77 330.02 534.816 cv
330.004 534.863 329.98 534.898 329.953 534.922 cv
329.922 534.945 329.891 534.957 329.855 534.957 cv
329.797 534.957 329.707 534.922 329.586 534.852 cv
329.461 534.781 329.309 534.699 329.137 534.605 cv
328.957 534.516 328.75 534.434 328.512 534.355 cv
328.266 534.281 327.996 534.242 327.699 534.242 cv
327.418 534.242 327.172 534.281 326.965 534.355 cv
326.754 534.434 326.582 534.535 326.449 534.656 cv
326.313 534.781 326.211 534.926 326.145 535.098 cv
326.078 535.27 326.047 535.453 326.047 535.645 cv
326.047 535.93 326.109 536.172 326.238 536.371 cv
326.367 536.574 326.539 536.754 326.758 536.906 cv
326.969 537.066 327.215 537.207 327.492 537.336 cv
327.766 537.469 328.047 537.602 328.336 537.73 cv
328.621 537.863 328.902 538.008 329.176 538.164 cv
329.449 538.324 329.695 538.512 329.914 538.727 cv
330.129 538.945 330.301 539.199 330.438 539.492 cv
330.566 539.785 330.633 540.133 330.637 540.531 cv
cp
f
338.406 543.164 mo
338.402 543.211 338.395 543.246 338.379 543.27 cv
338.359 543.301 338.324 543.324 338.281 543.344 cv
338.234 543.363 338.176 543.375 338.102 543.391 cv
338.023 543.398 337.93 543.406 337.824 543.406 cv
337.699 543.406 337.602 543.398 337.531 543.391 cv
337.453 543.375 337.395 543.363 337.352 543.344 cv
337.305 543.324 337.273 543.301 337.262 543.27 cv
337.242 543.246 337.234 543.211 337.238 543.164 cv
337.238 542.238 li
336.836 542.684 336.441 543.004 336.055 543.203 cv
335.66 543.406 335.266 543.504 334.871 543.508 cv
334.398 543.504 334.004 543.43 333.688 543.273 cv
333.367 543.121 333.109 542.91 332.914 542.641 cv
332.711 542.375 332.57 542.062 332.488 541.703 cv
332.398 541.348 332.355 540.914 332.359 540.406 cv
332.359 536.152 li
332.355 536.113 332.363 536.078 332.387 536.047 cv
332.402 536.02 332.438 535.996 332.492 535.969 cv
332.539 535.949 332.609 535.934 332.695 535.922 cv
332.777 535.918 332.879 535.914 333.008 535.91 cv
333.129 535.914 333.234 535.918 333.32 535.922 cv
333.402 535.934 333.469 535.949 333.516 535.969 cv
333.563 535.996 333.598 536.02 333.621 536.047 cv
333.641 536.078 333.648 536.113 333.652 536.152 cv
333.652 540.234 li
333.648 540.648 333.68 540.977 333.742 541.223 cv
333.801 541.469 333.891 541.68 334.016 541.852 cv
334.133 542.031 334.289 542.164 334.48 542.258 cv
334.664 542.355 334.883 542.406 335.133 542.402 cv
335.453 542.406 335.773 542.289 336.098 542.059 cv
336.414 541.832 336.754 541.496 337.113 541.051 cv
337.113 536.152 li
337.113 536.113 337.121 536.078 337.141 536.047 cv
337.156 536.02 337.191 535.996 337.246 535.969 cv
337.297 535.949 337.363 535.934 337.445 535.922 cv
337.523 535.918 337.629 535.914 337.762 535.91 cv
337.883 535.914 337.988 535.918 338.074 535.922 cv
338.156 535.934 338.219 535.949 338.266 535.969 cv
338.309 535.996 338.344 536.02 338.371 536.047 cv
338.391 536.078 338.402 536.113 338.406 536.152 cv
cp
f
347.262 539.562 mo
347.258 540.172 347.191 540.723 347.063 541.207 cv
346.926 541.695 346.73 542.109 346.477 542.449 cv
346.219 542.793 345.902 543.055 345.531 543.234 cv
345.156 543.418 344.73 543.504 344.246 543.508 cv
344.02 543.504 343.813 543.484 343.625 543.441 cv
343.438 543.395 343.25 543.324 343.07 543.227 cv
342.883 543.129 342.703 543.004 342.523 542.852 cv
342.34 542.703 342.148 542.523 341.949 542.309 cv
341.949 543.164 li
341.949 543.211 341.938 543.246 341.918 543.273 cv
341.895 543.309 341.859 543.332 341.816 543.348 cv
341.766 543.363 341.707 543.375 341.641 543.391 cv
341.566 543.398 341.477 543.406 341.371 543.406 cv
341.262 543.406 341.176 543.398 341.105 543.391 cv
341.031 543.375 340.969 543.363 340.926 543.348 cv
340.875 543.332 340.844 543.309 340.832 543.273 cv
340.813 543.246 340.805 543.211 340.809 543.164 cv
340.809 532.754 li
340.805 532.715 340.816 532.68 340.836 532.645 cv
340.852 532.617 340.883 532.59 340.938 532.566 cv
340.984 532.547 341.051 532.531 341.137 532.52 cv
341.215 532.512 341.32 532.508 341.449 532.504 cv
341.578 532.508 341.684 532.512 341.77 532.52 cv
341.848 532.531 341.914 532.547 341.961 532.566 cv
342.008 532.59 342.039 532.617 342.063 532.645 cv
342.078 532.68 342.09 532.715 342.094 532.754 cv
342.094 536.953 li
342.301 536.742 342.504 536.562 342.699 536.418 cv
342.895 536.273 343.082 536.156 343.27 536.062 cv
343.453 535.977 343.641 535.91 343.832 535.863 cv
344.016 535.824 344.215 535.801 344.426 535.801 cv
344.93 535.801 345.363 535.902 345.73 536.105 cv
346.09 536.309 346.383 536.582 346.609 536.918 cv
346.832 537.262 347 537.66 347.105 538.117 cv
347.207 538.574 347.258 539.055 347.262 539.562 cv
cp
345.93 539.711 mo
345.926 539.355 345.898 539.008 345.848 538.668 cv
345.789 538.332 345.695 538.035 345.559 537.773 cv
345.422 537.516 345.242 537.305 345.02 537.145 cv
344.793 536.988 344.512 536.91 344.18 536.906 cv
344.012 536.91 343.848 536.934 343.688 536.977 cv
343.523 537.027 343.359 537.105 343.191 537.211 cv
343.023 537.324 342.848 537.465 342.672 537.633 cv
342.488 537.809 342.297 538.023 342.094 538.277 cv
342.094 541.074 li
342.449 541.508 342.789 541.84 343.113 542.062 cv
343.438 542.293 343.773 542.406 344.125 542.402 cv
344.445 542.406 344.723 542.328 344.957 542.168 cv
345.184 542.016 345.371 541.809 345.516 541.547 cv
345.66 541.293 345.766 541.004 345.832 540.684 cv
345.895 540.367 345.926 540.043 345.93 539.711 cv
cp
f
352.418 539.426 mo
352.418 539.629 352.395 539.766 352.348 539.844 cv
352.301 539.922 352.23 539.961 352.145 539.961 cv
348.887 539.961 li
348.793 539.961 348.727 539.922 348.68 539.84 cv
348.633 539.762 348.609 539.625 348.609 539.426 cv
348.609 539.23 348.633 539.09 348.68 539.012 cv
348.727 538.934 348.793 538.895 348.887 538.895 cv
352.145 538.895 li
352.184 538.895 352.223 538.902 352.258 538.918 cv
352.289 538.934 352.316 538.965 352.344 539.008 cv
352.363 539.055 352.383 539.109 352.398 539.176 cv
352.41 539.246 352.418 539.332 352.418 539.426 cv
cp
f
355.668 543.156 mo
355.664 543.199 355.656 543.234 355.637 543.266 cv
355.613 543.297 355.574 543.324 355.527 543.34 cv
355.473 543.359 355.406 543.371 355.32 543.387 cv
355.234 543.398 355.125 543.406 355 543.406 cv
354.871 543.406 354.766 543.398 354.68 543.387 cv
354.59 543.371 354.52 543.359 354.469 543.34 cv
354.414 543.324 354.379 543.297 354.359 543.266 cv
354.336 543.234 354.324 543.199 354.328 543.156 cv
354.328 533.477 li
354.324 533.437 354.336 533.402 354.363 533.367 cv
354.383 533.34 354.422 533.312 354.48 533.293 cv
354.531 533.277 354.602 533.262 354.691 533.246 cv
354.773 533.234 354.875 533.23 355 533.227 cv
355.125 533.23 355.234 533.234 355.32 533.246 cv
355.406 533.262 355.473 533.277 355.527 533.293 cv
355.574 533.312 355.613 533.34 355.637 533.367 cv
355.656 533.402 355.664 533.437 355.668 533.477 cv
cp
f
368.656 543.164 mo
368.652 543.211 368.645 543.246 368.625 543.27 cv
368.602 543.301 368.566 543.324 368.523 543.344 cv
368.473 543.363 368.406 543.375 368.328 543.391 cv
368.242 543.398 368.141 543.406 368.016 543.406 cv
367.883 543.406 367.773 543.398 367.695 543.391 cv
367.609 543.375 367.543 543.363 367.496 543.344 cv
367.441 543.324 367.406 543.301 367.391 543.27 cv
367.367 543.246 367.359 543.211 367.359 543.164 cv
367.359 538.902 li
367.359 538.609 367.332 538.34 367.281 538.094 cv
367.227 537.852 367.145 537.641 367.031 537.461 cv
366.918 537.285 366.773 537.148 366.598 537.055 cv
366.418 536.961 366.207 536.914 365.973 536.914 cv
365.676 536.914 365.379 537.031 365.082 537.258 cv
364.777 537.492 364.449 537.824 364.094 538.262 cv
364.094 543.164 li
364.09 543.211 364.078 543.246 364.063 543.27 cv
364.039 543.301 364.008 543.324 363.961 543.344 cv
363.91 543.363 363.844 543.375 363.762 543.391 cv
363.676 543.398 363.57 543.406 363.449 543.406 cv
363.328 543.406 363.227 543.398 363.141 543.391 cv
363.055 543.375 362.984 543.363 362.938 543.344 cv
362.883 543.324 362.852 543.301 362.836 543.27 cv
362.816 543.246 362.805 543.211 362.809 543.164 cv
362.809 538.902 li
362.805 538.609 362.777 538.34 362.723 538.094 cv
362.664 537.852 362.578 537.641 362.465 537.461 cv
362.352 537.285 362.207 537.148 362.035 537.055 cv
361.855 536.961 361.648 536.914 361.414 536.914 cv
361.113 536.914 360.816 537.031 360.516 537.258 cv
360.215 537.492 359.887 537.824 359.535 538.262 cv
359.535 543.164 li
359.531 543.211 359.52 543.246 359.504 543.27 cv
359.48 543.301 359.449 543.324 359.402 543.344 cv
359.355 543.363 359.289 543.375 359.211 543.391 cv
359.125 543.398 359.02 543.406 358.891 543.406 cv
358.762 543.406 358.656 543.398 358.578 543.391 cv
358.492 543.375 358.426 543.363 358.379 543.344 cv
358.324 543.324 358.293 543.301 358.277 543.27 cv
358.258 543.246 358.246 543.211 358.25 543.164 cv
358.25 536.152 li
358.246 536.113 358.254 536.078 358.273 536.047 cv
358.285 536.02 358.316 535.996 358.367 535.969 cv
358.41 535.949 358.473 535.934 358.547 535.922 cv
358.617 535.918 358.711 535.914 358.836 535.91 cv
358.945 535.914 359.043 535.918 359.121 535.922 cv
359.195 535.934 359.254 535.949 359.297 535.969 cv
359.336 535.996 359.363 536.02 359.383 536.047 cv
359.398 536.078 359.406 536.113 359.41 536.152 cv
359.41 537.078 li
359.801 536.637 360.184 536.316 360.559 536.109 cv
360.926 535.906 361.305 535.801 361.688 535.801 cv
361.977 535.801 362.234 535.836 362.469 535.902 cv
362.695 535.973 362.902 536.066 363.082 536.187 cv
363.258 536.309 363.406 536.453 363.535 536.621 cv
363.656 536.793 363.762 536.984 363.848 537.187 cv
364.078 536.937 364.301 536.723 364.512 536.543 cv
364.723 536.371 364.926 536.227 365.121 536.113 cv
365.316 536.008 365.504 535.93 365.688 535.875 cv
365.871 535.828 366.059 535.801 366.246 535.801 cv
366.699 535.801 367.078 535.883 367.383 536.039 cv
367.688 536.203 367.934 536.414 368.129 536.676 cv
368.316 536.941 368.453 537.25 368.535 537.605 cv
368.613 537.961 368.652 538.336 368.656 538.73 cv
cp
f
376.289 543.172 mo
376.285 543.234 376.266 543.281 376.227 543.312 cv
376.184 543.344 376.125 543.367 376.055 543.383 cv
375.977 543.398 375.871 543.406 375.734 543.406 cv
375.598 543.406 375.488 543.398 375.41 543.383 cv
375.324 543.367 375.266 543.344 375.234 543.312 cv
375.195 543.281 375.18 543.234 375.184 543.172 cv
375.184 542.473 li
374.875 542.801 374.531 543.055 374.156 543.234 cv
373.777 543.418 373.379 543.504 372.961 543.508 cv
372.586 543.504 372.254 543.457 371.957 543.363 cv
371.66 543.266 371.406 543.129 371.195 542.945 cv
370.984 542.766 370.82 542.543 370.703 542.277 cv
370.586 542.016 370.527 541.715 370.531 541.371 cv
370.527 540.98 370.605 540.637 370.77 540.344 cv
370.926 540.055 371.16 539.812 371.465 539.621 cv
371.766 539.43 372.133 539.285 372.57 539.187 cv
373.004 539.094 373.496 539.047 374.043 539.043 cv
375.012 539.043 li
375.012 538.496 li
375.008 538.227 374.98 537.988 374.926 537.781 cv
374.867 537.574 374.773 537.402 374.648 537.262 cv
374.516 537.125 374.352 537.02 374.152 536.949 cv
373.945 536.879 373.695 536.844 373.406 536.844 cv
373.086 536.844 372.801 536.883 372.551 536.957 cv
372.293 537.035 372.074 537.117 371.887 537.207 cv
371.699 537.301 371.539 537.387 371.414 537.457 cv
371.281 537.535 371.188 537.57 371.129 537.57 cv
371.086 537.57 371.051 537.562 371.02 537.539 cv
370.988 537.523 370.961 537.492 370.938 537.445 cv
370.914 537.406 370.895 537.352 370.887 537.285 cv
370.871 537.223 370.867 537.152 370.871 537.07 cv
370.867 536.945 370.875 536.84 370.898 536.762 cv
370.914 536.687 370.961 536.617 371.031 536.547 cv
371.102 536.48 371.223 536.402 371.395 536.312 cv
371.566 536.223 371.762 536.141 371.984 536.062 cv
372.207 535.992 372.453 535.93 372.719 535.875 cv
372.984 535.828 373.25 535.801 373.523 535.801 cv
374.023 535.801 374.453 535.859 374.805 535.973 cv
375.156 536.09 375.441 536.258 375.664 536.477 cv
375.879 536.699 376.039 536.973 376.141 537.297 cv
376.238 537.629 376.285 538.012 376.289 538.441 cv
cp
375.012 539.969 mo
373.91 539.969 li
373.555 539.973 373.25 540.004 372.992 540.059 cv
372.73 540.121 372.516 540.207 372.344 540.324 cv
372.172 540.441 372.047 540.582 371.969 540.746 cv
371.887 540.91 371.844 541.098 371.848 541.309 cv
371.844 541.676 371.961 541.969 372.191 542.18 cv
372.422 542.398 372.746 542.504 373.164 542.504 cv
373.5 542.504 373.813 542.418 374.102 542.246 cv
374.391 542.074 374.691 541.812 375.012 541.457 cv
cp
f
384.508 536.469 mo
384.504 536.652 384.48 536.785 384.434 536.863 cv
384.383 536.945 384.32 536.984 384.246 536.984 cv
383.238 536.984 li
383.418 537.172 383.547 537.379 383.621 537.605 cv
383.691 537.832 383.727 538.066 383.73 538.309 cv
383.727 538.715 383.66 539.074 383.535 539.387 cv
383.402 539.699 383.219 539.965 382.977 540.176 cv
382.734 540.395 382.445 540.559 382.117 540.672 cv
381.781 540.789 381.414 540.848 381.012 540.844 cv
380.723 540.848 380.449 540.809 380.195 540.73 cv
379.934 540.656 379.738 540.562 379.602 540.445 cv
379.508 540.543 379.43 540.648 379.371 540.766 cv
379.309 540.887 379.277 541.023 379.281 541.176 cv
379.277 541.359 379.363 541.512 379.535 541.629 cv
379.703 541.754 379.926 541.816 380.207 541.824 cv
382.039 541.902 li
382.387 541.914 382.703 541.961 382.996 542.047 cv
383.285 542.133 383.539 542.258 383.754 542.414 cv
383.965 542.574 384.133 542.766 384.254 542.996 cv
384.371 543.23 384.43 543.5 384.434 543.805 cv
384.43 544.125 384.363 544.43 384.23 544.723 cv
384.094 545.012 383.887 545.266 383.609 545.488 cv
383.328 545.707 382.973 545.883 382.543 546.012 cv
382.113 546.137 381.605 546.199 381.02 546.203 cv
380.449 546.199 379.965 546.152 379.57 546.059 cv
379.172 545.961 378.848 545.828 378.594 545.664 cv
378.34 545.496 378.156 545.301 378.043 545.07 cv
377.926 544.836 377.867 544.582 377.871 544.316 cv
377.867 544.145 377.887 543.98 377.934 543.82 cv
377.973 543.656 378.035 543.504 378.121 543.359 cv
378.203 543.215 378.313 543.078 378.441 542.941 cv
378.566 542.812 378.711 542.68 378.883 542.551 cv
378.625 542.422 378.438 542.258 378.316 542.059 cv
378.195 541.863 378.137 541.652 378.137 541.418 cv
378.137 541.105 378.199 540.82 378.328 540.57 cv
378.457 540.32 378.617 540.098 378.813 539.898 cv
378.648 539.707 378.523 539.492 378.43 539.25 cv
378.336 539.012 378.289 538.719 378.289 538.371 cv
378.289 537.977 378.355 537.617 378.492 537.297 cv
378.625 536.98 378.813 536.715 379.055 536.496 cv
379.293 536.281 379.578 536.113 379.914 535.992 cv
380.246 535.879 380.613 535.82 381.012 535.816 cv
381.223 535.82 381.422 535.832 381.605 535.852 cv
381.789 535.879 381.961 535.91 382.125 535.949 cv
384.246 535.949 li
384.332 535.953 384.398 535.996 384.441 536.078 cv
384.484 536.168 384.504 536.297 384.508 536.469 cv
cp
382.5 538.316 mo
382.496 537.844 382.363 537.473 382.105 537.199 cv
381.84 536.934 381.469 536.797 380.988 536.797 cv
380.734 536.797 380.516 536.84 380.336 536.922 cv
380.148 537.008 379.996 537.121 379.875 537.266 cv
379.754 537.414 379.664 537.582 379.605 537.77 cv
379.543 537.957 379.512 538.156 379.516 538.363 cv
379.512 538.828 379.645 539.191 379.906 539.457 cv
380.168 539.723 380.535 539.855 381.012 539.852 cv
381.262 539.855 381.48 539.816 381.672 539.73 cv
381.855 539.652 382.012 539.539 382.137 539.398 cv
382.258 539.258 382.348 539.094 382.41 538.902 cv
382.465 538.719 382.496 538.523 382.5 538.316 cv
cp
383.145 543.875 mo
383.141 543.57 383.016 543.34 382.773 543.176 cv
382.523 543.016 382.191 542.926 381.773 542.914 cv
379.957 542.852 li
379.789 542.984 379.652 543.109 379.551 543.223 cv
379.441 543.34 379.359 543.449 379.297 543.559 cv
379.234 543.664 379.191 543.77 379.168 543.875 cv
379.145 543.977 379.133 544.082 379.133 544.191 cv
379.133 544.527 379.301 544.781 379.645 544.961 cv
379.984 545.133 380.465 545.223 381.082 545.223 cv
381.469 545.223 381.793 545.184 382.059 545.109 cv
382.316 545.031 382.527 544.93 382.691 544.809 cv
382.848 544.68 382.965 544.539 383.039 544.379 cv
383.105 544.219 383.141 544.051 383.145 543.875 cv
cp
f
392.07 539.355 mo
392.066 539.559 392.016 539.699 391.918 539.785 cv
391.813 539.871 391.695 539.914 391.57 539.914 cv
386.953 539.914 li
386.949 540.305 386.988 540.656 387.07 540.969 cv
387.145 541.281 387.277 541.551 387.461 541.77 cv
387.641 541.996 387.875 542.168 388.172 542.285 cv
388.461 542.41 388.82 542.469 389.246 542.465 cv
389.578 542.469 389.875 542.441 390.137 542.383 cv
390.398 542.332 390.625 542.27 390.816 542.199 cv
391.004 542.133 391.16 542.074 391.285 542.016 cv
391.406 541.965 391.5 541.937 391.563 541.934 cv
391.598 541.937 391.629 541.945 391.66 541.961 cv
391.688 541.98 391.711 542.008 391.73 542.043 cv
391.742 542.082 391.754 542.133 391.766 542.195 cv
391.77 542.262 391.773 542.34 391.777 542.434 cv
391.773 542.504 391.77 542.562 391.77 542.609 cv
391.762 542.656 391.758 542.699 391.75 542.738 cv
391.742 542.777 391.727 542.812 391.711 542.844 cv
391.688 542.875 391.664 542.906 391.641 542.934 cv
391.609 542.965 391.527 543.012 391.387 543.074 cv
391.246 543.141 391.063 543.203 390.84 543.266 cv
390.613 543.328 390.355 543.383 390.063 543.434 cv
389.77 543.48 389.457 543.504 389.125 543.508 cv
388.547 543.504 388.039 543.426 387.609 543.266 cv
387.172 543.105 386.809 542.867 386.516 542.551 cv
386.215 542.234 385.992 541.84 385.844 541.359 cv
385.695 540.883 385.621 540.324 385.621 539.687 cv
385.621 539.09 385.695 538.551 385.852 538.066 cv
386.004 537.59 386.23 537.18 386.527 536.844 cv
386.82 536.508 387.176 536.25 387.59 536.07 cv
388.004 535.891 388.469 535.801 388.984 535.801 cv
389.535 535.801 390.004 535.891 390.391 536.066 cv
390.777 536.246 391.094 536.484 391.348 536.781 cv
391.594 537.082 391.777 537.434 391.895 537.832 cv
392.008 538.238 392.066 538.668 392.07 539.121 cv
cp
390.777 538.973 mo
390.793 538.297 390.641 537.766 390.324 537.383 cv
390.008 537 389.539 536.809 388.922 536.805 cv
388.598 536.809 388.316 536.867 388.078 536.984 cv
387.836 537.105 387.637 537.266 387.477 537.461 cv
387.313 537.66 387.188 537.891 387.102 538.152 cv
387.012 538.414 386.961 538.687 386.953 538.973 cv
cp
f
398.438 541.254 mo
398.434 541.617 398.367 541.937 398.238 542.215 cv
398.105 542.496 397.918 542.73 397.676 542.922 cv
397.43 543.117 397.137 543.262 396.801 543.359 cv
396.461 543.457 396.09 543.504 395.688 543.508 cv
395.434 543.504 395.195 543.484 394.973 543.449 cv
394.746 543.406 394.547 543.359 394.367 543.301 cv
394.188 543.242 394.035 543.18 393.91 543.113 cv
393.785 543.051 393.691 542.992 393.637 542.937 cv
393.578 542.887 393.539 542.816 393.516 542.719 cv
393.488 542.629 393.477 542.5 393.477 542.34 cv
393.477 542.242 393.48 542.16 393.492 542.09 cv
393.5 542.023 393.512 541.969 393.531 541.926 cv
393.543 541.887 393.566 541.855 393.594 541.836 cv
393.621 541.82 393.652 541.812 393.691 541.809 cv
393.746 541.812 393.832 541.848 393.945 541.914 cv
394.055 541.988 394.191 542.066 394.359 542.145 cv
394.52 542.23 394.711 542.305 394.938 542.375 cv
395.156 542.445 395.414 542.48 395.711 542.48 cv
395.926 542.48 396.125 542.457 396.305 542.41 cv
396.48 542.363 396.633 542.297 396.762 542.203 cv
396.891 542.117 396.992 542 397.063 541.855 cv
397.133 541.719 397.168 541.551 397.168 541.355 cv
397.168 541.16 397.117 540.996 397.016 540.859 cv
396.914 540.727 396.777 540.605 396.613 540.5 cv
396.445 540.398 396.262 540.309 396.055 540.223 cv
395.844 540.145 395.629 540.059 395.41 539.969 cv
395.191 539.883 394.977 539.781 394.766 539.668 cv
394.555 539.559 394.363 539.426 394.199 539.262 cv
394.027 539.105 393.895 538.91 393.797 538.684 cv
393.691 538.461 393.641 538.195 393.645 537.883 cv
393.641 537.609 393.695 537.344 393.805 537.09 cv
393.91 536.84 394.07 536.621 394.285 536.43 cv
394.496 536.242 394.762 536.09 395.082 535.973 cv
395.402 535.859 395.773 535.801 396.203 535.801 cv
396.387 535.801 396.574 535.816 396.762 535.848 cv
396.945 535.879 397.113 535.918 397.27 535.965 cv
397.418 536.012 397.547 536.062 397.656 536.117 cv
397.758 536.172 397.84 536.223 397.898 536.262 cv
397.949 536.309 397.984 536.344 398.008 536.371 cv
398.023 536.402 398.039 536.437 398.047 536.473 cv
398.055 536.516 398.063 536.562 398.07 536.617 cv
398.078 536.676 398.082 536.746 398.082 536.828 cv
398.082 536.918 398.078 536.996 398.07 537.059 cv
398.063 537.129 398.047 537.18 398.031 537.219 cv
398.008 537.262 397.988 537.293 397.965 537.309 cv
397.938 537.328 397.906 537.336 397.879 537.336 cv
397.828 537.336 397.762 537.309 397.676 537.25 cv
397.586 537.195 397.473 537.133 397.332 537.066 cv
397.191 537.004 397.023 536.945 396.836 536.883 cv
396.645 536.828 396.43 536.797 396.188 536.797 cv
395.965 536.797 395.773 536.824 395.609 536.871 cv
395.441 536.926 395.305 536.996 395.199 537.082 cv
395.094 537.176 395.012 537.281 394.961 537.406 cv
394.902 537.531 394.875 537.668 394.879 537.812 cv
394.875 538.016 394.926 538.184 395.031 538.32 cv
395.133 538.461 395.27 538.582 395.438 538.684 cv
395.602 538.789 395.793 538.883 396.008 538.965 cv
396.219 539.051 396.434 539.137 396.656 539.223 cv
396.875 539.312 397.094 539.414 397.313 539.52 cv
397.527 539.629 397.719 539.758 397.887 539.914 cv
398.051 540.07 398.184 540.258 398.285 540.477 cv
398.383 540.695 398.434 540.957 398.438 541.254 cv
cp
f
172.074 16 mo
172.07 16.152 172.066 16.277 172.055 16.375 cv
172.039 16.48 172.02 16.562 171.996 16.621 cv
171.973 16.687 171.941 16.734 171.902 16.758 cv
171.863 16.789 171.82 16.801 171.773 16.801 cv
166.707 16.801 li
166.531 16.801 166.387 16.75 166.273 16.648 cv
166.152 16.547 166.094 16.383 166.098 16.152 cv
166.098 7.36298 li
166.094 7.13702 166.152 6.97302 166.273 6.867 cv
166.387 6.77002 166.531 6.71899 166.707 6.71503 cv
171.742 6.71503 li
171.785 6.71899 171.828 6.72998 171.867 6.75403 cv
171.902 6.78101 171.934 6.828 171.961 6.89099 cv
171.984 6.961 172 7.04303 172.016 7.14099 cv
172.023 7.24597 172.031 7.375 172.035 7.52698 cv
172.031 7.67603 172.023 7.80103 172.016 7.89801 cv
172 8.00403 171.984 8.086 171.961 8.14502 cv
171.934 8.20697 171.902 8.25 171.867 8.27698 cv
171.828 8.30902 171.785 8.32397 171.742 8.32001 cv
168.141 8.32001 li
168.141 10.785 li
171.188 10.785 li
171.234 10.789 171.277 10.805 171.316 10.828 cv
171.355 10.859 171.387 10.902 171.414 10.961 cv
171.438 11.023 171.457 11.105 171.473 11.203 cv
171.484 11.305 171.492 11.426 171.492 11.57 cv
171.492 11.723 171.484 11.848 171.473 11.945 cv
171.457 12.047 171.438 12.125 171.414 12.184 cv
171.387 12.246 171.355 12.289 171.316 12.312 cv
171.277 12.34 171.234 12.355 171.188 12.352 cv
168.141 12.352 li
168.141 15.195 li
171.773 15.195 li
171.82 15.195 171.863 15.211 171.902 15.238 cv
171.941 15.27 171.973 15.316 171.996 15.375 cv
172.02 15.441 172.039 15.523 172.055 15.621 cv
172.066 15.727 172.07 15.852 172.074 16 cv
cp
f
180.41 16.535 mo
180.406 16.59 180.391 16.633 180.363 16.672 cv
180.328 16.711 180.277 16.746 180.207 16.77 cv
180.133 16.797 180.031 16.812 179.906 16.828 cv
179.777 16.84 179.621 16.848 179.438 16.848 cv
179.242 16.848 179.082 16.84 178.957 16.828 cv
178.828 16.812 178.727 16.797 178.656 16.77 cv
178.578 16.746 178.527 16.711 178.5 16.672 cv
178.465 16.633 178.449 16.59 178.453 16.535 cv
178.453 12.57 li
178.449 12.234 178.426 11.969 178.379 11.773 cv
178.328 11.582 178.254 11.418 178.164 11.281 cv
178.07 11.145 177.953 11.039 177.805 10.961 cv
177.656 10.887 177.48 10.848 177.285 10.848 cv
177.031 10.848 176.781 10.941 176.527 11.121 cv
176.273 11.305 176.008 11.566 175.734 11.914 cv
175.734 16.535 li
175.73 16.59 175.715 16.633 175.688 16.672 cv
175.652 16.711 175.598 16.746 175.527 16.77 cv
175.449 16.797 175.352 16.812 175.227 16.828 cv
175.102 16.84 174.941 16.848 174.754 16.848 cv
174.559 16.848 174.402 16.84 174.277 16.828 cv
174.152 16.812 174.051 16.797 173.977 16.77 cv
173.898 16.746 173.844 16.711 173.816 16.672 cv
173.781 16.633 173.766 16.59 173.77 16.535 cv
173.77 9.586 li
173.766 9.539 173.781 9.492 173.809 9.44897 cv
173.832 9.414 173.879 9.383 173.949 9.35199 cv
174.016 9.328 174.102 9.30902 174.211 9.29303 cv
174.316 9.28497 174.449 9.27698 174.613 9.27301 cv
174.777 9.27698 174.914 9.28497 175.023 9.29303 cv
175.129 9.30902 175.215 9.328 175.277 9.35199 cv
175.336 9.383 175.379 9.414 175.406 9.44897 cv
175.43 9.492 175.441 9.539 175.445 9.586 cv
175.445 10.387 li
175.828 9.97699 176.219 9.664 176.617 9.453 cv
177.012 9.24597 177.43 9.14502 177.863 9.14099 cv
178.332 9.14502 178.73 9.22302 179.059 9.375 cv
179.383 9.53497 179.645 9.74597 179.844 10.012 cv
180.043 10.281 180.188 10.594 180.277 10.949 cv
180.363 11.309 180.406 11.738 180.41 12.242 cv
cp
f
188.762 12.859 mo
188.758 13.098 188.707 13.273 188.602 13.387 cv
188.492 13.504 188.344 13.562 188.164 13.559 cv
183.93 13.559 li
183.926 13.859 183.961 14.129 184.035 14.367 cv
184.102 14.609 184.215 14.812 184.371 14.98 cv
184.523 15.152 184.719 15.281 184.961 15.367 cv
185.199 15.457 185.488 15.5 185.832 15.5 cv
186.172 15.5 186.473 15.477 186.734 15.426 cv
186.992 15.379 187.219 15.324 187.41 15.262 cv
187.598 15.203 187.754 15.148 187.883 15.098 cv
188.004 15.051 188.105 15.027 188.188 15.023 cv
188.23 15.027 188.27 15.035 188.305 15.051 cv
188.332 15.07 188.359 15.102 188.379 15.148 cv
188.398 15.195 188.41 15.262 188.422 15.348 cv
188.426 15.434 188.43 15.543 188.434 15.672 cv
188.43 15.789 188.43 15.887 188.426 15.965 cv
188.418 16.047 188.41 16.113 188.402 16.168 cv
188.391 16.227 188.375 16.277 188.355 16.312 cv
188.336 16.355 188.309 16.391 188.277 16.426 cv
188.242 16.465 188.148 16.516 188 16.574 cv
187.844 16.641 187.652 16.703 187.422 16.758 cv
187.184 16.82 186.914 16.867 186.617 16.914 cv
186.313 16.953 185.992 16.977 185.652 16.98 cv
185.031 16.977 184.488 16.902 184.027 16.746 cv
183.559 16.594 183.172 16.355 182.863 16.039 cv
182.547 15.723 182.313 15.324 182.164 14.84 cv
182.008 14.359 181.934 13.793 181.938 13.137 cv
181.934 12.523 182.012 11.965 182.176 11.469 cv
182.332 10.973 182.566 10.555 182.879 10.207 cv
183.184 9.86298 183.559 9.59802 183.996 9.414 cv
184.434 9.23401 184.926 9.14502 185.48 9.14099 cv
186.059 9.14502 186.559 9.22998 186.973 9.39801 cv
187.387 9.57397 187.723 9.81201 187.988 10.113 cv
188.25 10.418 188.445 10.777 188.574 11.191 cv
188.695 11.609 188.758 12.059 188.762 12.547 cv
cp
186.859 12.297 mo
186.871 11.746 186.762 11.312 186.527 11 cv
186.293 10.687 185.926 10.531 185.434 10.527 cv
185.184 10.531 184.969 10.578 184.785 10.668 cv
184.598 10.766 184.445 10.891 184.324 11.047 cv
184.199 11.207 184.105 11.395 184.043 11.609 cv
183.977 11.824 183.938 12.055 183.93 12.297 cv
cp
f
194.836 10.23 mo
194.836 10.422 194.828 10.574 194.82 10.691 cv
194.805 10.812 194.789 10.906 194.773 10.973 cv
194.75 11.043 194.723 11.09 194.691 11.113 cv
194.652 11.141 194.609 11.152 194.563 11.152 cv
194.516 11.152 194.469 11.145 194.422 11.125 cv
194.367 11.109 194.309 11.09 194.246 11.066 cv
194.176 11.047 194.105 11.027 194.031 11.008 cv
193.949 10.992 193.863 10.984 193.773 10.98 cv
193.66 10.984 193.551 11.004 193.445 11.047 cv
193.336 11.094 193.223 11.164 193.109 11.254 cv
192.988 11.348 192.867 11.473 192.742 11.625 cv
192.613 11.785 192.477 11.977 192.332 12.203 cv
192.332 16.535 li
192.328 16.59 192.313 16.633 192.285 16.672 cv
192.25 16.711 192.195 16.746 192.125 16.77 cv
192.047 16.797 191.949 16.812 191.824 16.828 cv
191.699 16.84 191.539 16.848 191.352 16.848 cv
191.156 16.848 191 16.84 190.875 16.828 cv
190.75 16.812 190.648 16.797 190.574 16.77 cv
190.496 16.746 190.441 16.711 190.414 16.672 cv
190.379 16.633 190.363 16.59 190.367 16.535 cv
190.367 9.586 li
190.363 9.539 190.379 9.492 190.406 9.44897 cv
190.43 9.414 190.477 9.383 190.547 9.35199 cv
190.613 9.328 190.699 9.30902 190.809 9.29303 cv
190.914 9.28497 191.047 9.27698 191.211 9.27301 cv
191.375 9.27698 191.512 9.28497 191.621 9.29303 cv
191.727 9.30902 191.813 9.328 191.875 9.35199 cv
191.934 9.383 191.977 9.414 192.004 9.44897 cv
192.027 9.492 192.039 9.539 192.043 9.586 cv
192.043 10.449 li
192.223 10.191 192.395 9.97998 192.559 9.80902 cv
192.715 9.64502 192.871 9.508 193.02 9.40601 cv
193.164 9.30902 193.309 9.242 193.453 9.19897 cv
193.598 9.164 193.742 9.14502 193.891 9.14099 cv
193.957 9.14502 194.031 9.14801 194.109 9.15198 cv
194.188 9.164 194.266 9.17603 194.352 9.19098 cv
194.43 9.211 194.504 9.22998 194.57 9.25403 cv
194.629 9.27698 194.676 9.30499 194.707 9.328 cv
194.734 9.35901 194.754 9.38702 194.77 9.414 cv
194.781 9.44897 194.793 9.492 194.805 9.54303 cv
194.813 9.60199 194.82 9.68402 194.828 9.789 cv
194.832 9.89801 194.836 10.047 194.836 10.23 cv
cp
f
202.012 10.066 mo
202.008 10.32 201.98 10.504 201.926 10.621 cv
201.867 10.742 201.797 10.801 201.719 10.801 cv
200.898 10.801 li
201.012 10.926 201.094 11.07 201.145 11.227 cv
201.191 11.387 201.215 11.551 201.219 11.719 cv
201.215 12.129 201.148 12.488 201.016 12.801 cv
200.879 13.117 200.684 13.383 200.434 13.594 cv
200.18 13.812 199.879 13.977 199.523 14.086 cv
199.164 14.203 198.766 14.258 198.336 14.254 cv
198.109 14.258 197.898 14.23 197.695 14.172 cv
197.492 14.121 197.336 14.059 197.227 13.98 cv
197.164 14.051 197.105 14.129 197.059 14.223 cv
197.008 14.316 196.984 14.422 196.988 14.531 cv
196.984 14.687 197.051 14.809 197.184 14.902 cv
197.313 15 197.5 15.055 197.742 15.062 cv
199.434 15.125 li
199.828 15.141 200.18 15.199 200.488 15.293 cv
200.797 15.395 201.059 15.527 201.27 15.699 cv
201.48 15.875 201.641 16.086 201.75 16.328 cv
201.859 16.574 201.914 16.848 201.918 17.16 cv
201.914 17.496 201.84 17.82 201.691 18.129 cv
201.543 18.43 201.316 18.691 201.016 18.918 cv
200.711 19.137 200.332 19.316 199.879 19.449 cv
199.422 19.578 198.891 19.641 198.289 19.645 cv
197.691 19.641 197.188 19.594 196.77 19.504 cv
196.352 19.406 196.008 19.277 195.742 19.113 cv
195.473 18.945 195.277 18.746 195.16 18.52 cv
195.035 18.285 194.977 18.031 194.977 17.758 cv
194.977 17.586 194.996 17.426 195.043 17.27 cv
195.082 17.113 195.148 16.961 195.238 16.82 cv
195.32 16.676 195.426 16.543 195.551 16.41 cv
195.676 16.281 195.816 16.156 195.98 16.035 cv
195.754 15.922 195.582 15.762 195.461 15.551 cv
195.34 15.348 195.281 15.121 195.281 14.875 cv
195.281 14.574 195.348 14.297 195.488 14.039 cv
195.625 13.789 195.809 13.559 196.035 13.355 cv
195.852 13.176 195.707 12.961 195.598 12.703 cv
195.488 12.453 195.434 12.133 195.438 11.75 cv
195.434 11.348 195.504 10.988 195.648 10.664 cv
195.789 10.348 195.988 10.078 196.246 9.85498 cv
196.5 9.63702 196.805 9.46503 197.156 9.34802 cv
197.508 9.22998 197.898 9.172 198.328 9.172 cv
198.547 9.172 198.754 9.18701 198.953 9.211 cv
199.152 9.242 199.34 9.27698 199.512 9.32001 cv
201.719 9.32001 li
201.801 9.32397 201.871 9.383 201.93 9.492 cv
201.98 9.60901 202.008 9.80103 202.012 10.066 cv
cp
199.496 11.711 mo
199.492 11.34 199.391 11.051 199.184 10.84 cv
198.973 10.637 198.68 10.531 198.305 10.527 cv
198.109 10.531 197.938 10.562 197.797 10.625 cv
197.648 10.691 197.527 10.781 197.434 10.891 cv
197.332 11.004 197.262 11.133 197.219 11.281 cv
197.168 11.43 197.145 11.586 197.148 11.742 cv
197.145 12.102 197.25 12.379 197.461 12.582 cv
197.668 12.789 197.957 12.895 198.328 12.891 cv
198.523 12.895 198.691 12.863 198.84 12.797 cv
198.98 12.738 199.102 12.652 199.203 12.539 cv
199.297 12.434 199.371 12.305 199.422 12.16 cv
199.469 12.02 199.492 11.871 199.496 11.711 cv
cp
199.957 17.262 mo
199.957 17.023 199.863 16.848 199.676 16.723 cv
199.488 16.602 199.23 16.531 198.902 16.52 cv
197.508 16.48 li
197.371 16.582 197.262 16.676 197.184 16.766 cv
197.102 16.855 197.039 16.941 196.992 17.027 cv
196.941 17.109 196.906 17.191 196.895 17.27 cv
196.875 17.348 196.867 17.426 196.871 17.512 cv
196.867 17.766 197 17.965 197.262 18.102 cv
197.523 18.234 197.895 18.301 198.375 18.305 cv
198.668 18.301 198.914 18.27 199.121 18.215 cv
199.32 18.152 199.484 18.074 199.613 17.977 cv
199.734 17.875 199.824 17.766 199.879 17.645 cv
199.93 17.523 199.957 17.395 199.957 17.262 cv
cp
f
207.344 16.801 mo
206.5 19.262 li
206.449 19.391 206.324 19.484 206.117 19.543 cv
205.91 19.598 205.605 19.625 205.207 19.629 cv
204.996 19.625 204.828 19.617 204.707 19.602 cv
204.582 19.582 204.492 19.551 204.43 19.512 cv
204.367 19.469 204.332 19.418 204.328 19.355 cv
204.32 19.293 204.336 19.219 204.375 19.133 cv
205.301 16.801 li
205.23 16.77 205.168 16.723 205.117 16.656 cv
205.059 16.594 205.02 16.523 204.996 16.449 cv
202.605 10.059 li
202.535 9.87903 202.5 9.742 202.504 9.64502 cv
202.5 9.55103 202.531 9.47302 202.598 9.41803 cv
202.656 9.36298 202.762 9.328 202.91 9.30499 cv
203.055 9.289 203.25 9.27698 203.5 9.27301 cv
203.719 9.27698 203.898 9.28101 204.031 9.28497 cv
204.16 9.297 204.262 9.31598 204.336 9.34399 cv
204.406 9.37903 204.461 9.42603 204.5 9.48798 cv
204.535 9.55499 204.57 9.64801 204.609 9.76599 cv
206.242 14.418 li
206.266 14.418 li
207.766 9.672 li
207.789 9.539 207.828 9.44897 207.883 9.40198 cv
207.93 9.35901 208.012 9.328 208.129 9.30499 cv
208.238 9.289 208.441 9.27698 208.73 9.27301 cv
208.953 9.27698 209.137 9.289 209.285 9.30499 cv
209.43 9.328 209.539 9.367 209.613 9.422 cv
209.68 9.48401 209.715 9.55902 209.719 9.65198 cv
209.715 9.74597 209.695 9.85901 209.656 9.98798 cv
cp
f
221.785 15.273 mo
221.785 15.406 221.781 15.516 221.773 15.605 cv
221.766 15.699 221.754 15.777 221.738 15.84 cv
221.723 15.906 221.699 15.965 221.676 16.008 cv
221.645 16.055 221.605 16.105 221.551 16.164 cv
221.492 16.227 221.379 16.305 221.219 16.395 cv
221.051 16.492 220.852 16.582 220.617 16.664 cv
220.379 16.754 220.109 16.82 219.809 16.879 cv
219.5 16.934 219.172 16.965 218.824 16.965 cv
218.129 16.965 217.504 16.859 216.949 16.645 cv
216.391 16.434 215.918 16.117 215.531 15.691 cv
215.141 15.27 214.844 14.738 214.637 14.105 cv
214.43 13.473 214.324 12.734 214.328 11.891 cv
214.324 11.035 214.438 10.277 214.668 9.60901 cv
214.895 8.94501 215.215 8.38702 215.625 7.93402 cv
216.035 7.48401 216.527 7.14099 217.102 6.90601 cv
217.676 6.67603 218.309 6.55902 219.004 6.55499 cv
219.277 6.55902 219.547 6.58197 219.813 6.625 cv
220.07 6.672 220.313 6.72998 220.531 6.80499 cv
220.75 6.883 220.949 6.97302 221.129 7.06598 cv
221.305 7.16803 221.426 7.25 221.5 7.32001 cv
221.566 7.39099 221.617 7.44897 221.645 7.49597 cv
221.668 7.54303 221.688 7.60498 221.707 7.67603 cv
221.719 7.75403 221.73 7.84003 221.742 7.93402 cv
221.746 8.03497 221.75 8.15601 221.754 8.297 cv
221.75 8.45697 221.746 8.59003 221.738 8.69501 cv
221.727 8.80902 221.707 8.89502 221.684 8.961 cv
221.656 9.03101 221.625 9.08197 221.59 9.10901 cv
221.551 9.14502 221.508 9.15997 221.465 9.15601 cv
221.383 9.15997 221.285 9.11298 221.168 9.02002 cv
221.047 8.92999 220.891 8.828 220.703 8.71503 cv
220.512 8.60498 220.289 8.50403 220.027 8.40997 cv
219.762 8.32001 219.449 8.27698 219.09 8.27301 cv
218.688 8.27698 218.328 8.35901 218.016 8.52002 cv
217.699 8.68701 217.434 8.922 217.215 9.22302 cv
216.992 9.53101 216.824 9.89801 216.711 10.328 cv
216.594 10.762 216.535 11.246 216.539 11.781 cv
216.535 12.379 216.598 12.895 216.723 13.324 cv
216.844 13.762 217.016 14.117 217.246 14.395 cv
217.469 14.676 217.742 14.883 218.063 15.02 cv
218.379 15.16 218.738 15.23 219.145 15.227 cv
219.504 15.23 219.82 15.187 220.086 15.098 cv
220.352 15.016 220.578 14.922 220.766 14.812 cv
220.953 14.711 221.109 14.617 221.234 14.535 cv
221.355 14.453 221.449 14.41 221.52 14.41 cv
221.57 14.41 221.613 14.422 221.645 14.441 cv
221.676 14.461 221.699 14.5 221.723 14.562 cv
221.738 14.625 221.754 14.715 221.77 14.824 cv
221.777 14.941 221.785 15.09 221.785 15.273 cv
cp
f
230.164 12.988 mo
230.16 13.586 230.082 14.129 229.93 14.613 cv
229.77 15.105 229.535 15.523 229.219 15.875 cv
228.902 16.227 228.504 16.5 228.027 16.691 cv
227.547 16.883 226.988 16.977 226.352 16.98 cv
225.73 16.977 225.191 16.895 224.738 16.723 cv
224.277 16.555 223.898 16.305 223.602 15.977 cv
223.297 15.652 223.074 15.25 222.93 14.77 cv
222.785 14.293 222.715 13.746 222.715 13.129 cv
222.715 12.539 222.793 12 222.949 11.508 cv
223.105 11.02 223.344 10.598 223.664 10.246 cv
223.98 9.89801 224.375 9.625 224.852 9.42999 cv
225.324 9.23798 225.883 9.14502 226.523 9.14099 cv
227.148 9.14502 227.688 9.22699 228.145 9.39502 cv
228.602 9.56598 228.98 9.81598 229.277 10.141 cv
229.574 10.469 229.797 10.871 229.945 11.348 cv
230.09 11.828 230.16 12.375 230.164 12.988 cv
cp
228.145 13.066 mo
228.141 12.73 228.113 12.414 228.063 12.121 cv
228.004 11.836 227.91 11.586 227.785 11.371 cv
227.652 11.16 227.48 10.992 227.27 10.871 cv
227.051 10.754 226.781 10.695 226.453 10.691 cv
226.164 10.695 225.91 10.75 225.691 10.852 cv
225.473 10.961 225.293 11.117 225.152 11.32 cv
225.012 11.527 224.906 11.773 224.836 12.059 cv
224.766 12.352 224.73 12.68 224.73 13.043 cv
224.73 13.391 224.758 13.707 224.816 13.992 cv
224.871 14.285 224.965 14.535 225.094 14.746 cv
225.219 14.961 225.391 15.125 225.613 15.238 cv
225.828 15.359 226.098 15.418 226.422 15.414 cv
226.715 15.418 226.973 15.363 227.195 15.254 cv
227.41 15.148 227.59 14.996 227.73 14.789 cv
227.871 14.59 227.973 14.344 228.043 14.055 cv
228.105 13.77 228.141 13.441 228.145 13.066 cv
cp
f
238.359 16.535 mo
238.355 16.59 238.34 16.633 238.313 16.672 cv
238.277 16.711 238.227 16.746 238.156 16.77 cv
238.082 16.797 237.98 16.812 237.855 16.828 cv
237.727 16.84 237.57 16.848 237.387 16.848 cv
237.191 16.848 237.031 16.84 236.906 16.828 cv
236.777 16.812 236.676 16.797 236.605 16.77 cv
236.527 16.746 236.477 16.711 236.449 16.672 cv
236.414 16.633 236.398 16.59 236.402 16.535 cv
236.402 12.57 li
236.398 12.234 236.375 11.969 236.328 11.773 cv
236.277 11.582 236.203 11.418 236.113 11.281 cv
236.02 11.145 235.902 11.039 235.754 10.961 cv
235.605 10.887 235.43 10.848 235.234 10.848 cv
234.98 10.848 234.73 10.941 234.477 11.121 cv
234.223 11.305 233.957 11.566 233.684 11.914 cv
233.684 16.535 li
233.68 16.59 233.664 16.633 233.637 16.672 cv
233.602 16.711 233.547 16.746 233.477 16.77 cv
233.398 16.797 233.301 16.812 233.176 16.828 cv
233.051 16.84 232.891 16.848 232.703 16.848 cv
232.508 16.848 232.352 16.84 232.227 16.828 cv
232.102 16.812 232 16.797 231.926 16.77 cv
231.848 16.746 231.793 16.711 231.766 16.672 cv
231.73 16.633 231.715 16.59 231.719 16.535 cv
231.719 9.586 li
231.715 9.539 231.73 9.492 231.758 9.44897 cv
231.781 9.414 231.828 9.383 231.898 9.35199 cv
231.965 9.328 232.051 9.30902 232.16 9.29303 cv
232.266 9.28497 232.398 9.27698 232.563 9.27301 cv
232.727 9.27698 232.863 9.28497 232.973 9.29303 cv
233.078 9.30902 233.164 9.328 233.227 9.35199 cv
233.285 9.383 233.328 9.414 233.355 9.44897 cv
233.379 9.492 233.391 9.539 233.395 9.586 cv
233.395 10.387 li
233.777 9.97699 234.168 9.664 234.566 9.453 cv
234.961 9.24597 235.379 9.14502 235.813 9.14099 cv
236.281 9.14502 236.68 9.22302 237.008 9.375 cv
237.332 9.53497 237.594 9.74597 237.793 10.012 cv
237.992 10.281 238.137 10.594 238.227 10.949 cv
238.313 11.309 238.355 11.738 238.359 12.242 cv
cp
f
245.184 14.57 mo
245.18 14.969 245.105 15.316 244.961 15.617 cv
244.813 15.918 244.605 16.172 244.336 16.371 cv
244.063 16.578 243.742 16.727 243.375 16.828 cv
243.008 16.926 242.605 16.977 242.176 16.98 cv
241.91 16.977 241.664 16.957 241.43 16.922 cv
241.195 16.879 240.984 16.832 240.797 16.773 cv
240.609 16.715 240.453 16.652 240.328 16.59 cv
240.203 16.527 240.109 16.469 240.055 16.414 cv
239.996 16.359 239.953 16.277 239.926 16.16 cv
239.891 16.047 239.875 15.871 239.879 15.641 cv
239.875 15.492 239.883 15.371 239.895 15.277 cv
239.902 15.187 239.918 15.117 239.941 15.059 cv
239.961 15.008 239.984 14.969 240.02 14.949 cv
240.047 14.934 240.086 14.926 240.133 14.922 cv
240.188 14.926 240.273 14.957 240.387 15.02 cv
240.496 15.086 240.633 15.16 240.805 15.234 cv
240.969 15.316 241.164 15.387 241.383 15.453 cv
241.602 15.523 241.852 15.559 242.137 15.555 cv
242.313 15.559 242.469 15.539 242.609 15.5 cv
242.742 15.465 242.863 15.414 242.969 15.344 cv
243.066 15.277 243.141 15.191 243.195 15.086 cv
243.242 14.984 243.27 14.863 243.273 14.727 cv
243.27 14.57 243.223 14.437 243.129 14.328 cv
243.035 14.219 242.906 14.121 242.75 14.035 cv
242.586 13.953 242.406 13.875 242.211 13.801 cv
242.008 13.73 241.805 13.652 241.594 13.559 cv
241.383 13.473 241.176 13.371 240.98 13.254 cv
240.777 13.145 240.598 13.004 240.441 12.836 cv
240.277 12.672 240.152 12.473 240.059 12.234 cv
239.965 12.004 239.918 11.723 239.918 11.391 cv
239.918 11.062 239.98 10.758 240.109 10.477 cv
240.238 10.203 240.426 9.96503 240.672 9.76599 cv
240.914 9.57001 241.211 9.41803 241.563 9.30499 cv
241.91 9.19897 242.305 9.14502 242.746 9.14099 cv
242.961 9.14502 243.172 9.15997 243.379 9.18701 cv
243.582 9.22302 243.77 9.26202 243.938 9.30499 cv
244.102 9.35498 244.242 9.40601 244.359 9.45697 cv
244.473 9.51599 244.555 9.56201 244.605 9.59802 cv
244.652 9.64099 244.688 9.67999 244.711 9.71503 cv
244.73 9.758 244.742 9.80499 244.754 9.85498 cv
244.762 9.90997 244.773 9.97699 244.781 10.055 cv
244.789 10.141 244.793 10.238 244.793 10.355 cv
244.793 10.496 244.789 10.613 244.781 10.699 cv
244.773 10.793 244.758 10.863 244.742 10.91 cv
244.723 10.965 244.699 11 244.672 11.016 cv
244.637 11.039 244.602 11.047 244.563 11.043 cv
244.512 11.047 244.438 11.02 244.344 10.961 cv
244.242 10.91 244.121 10.852 243.973 10.785 cv
243.824 10.727 243.652 10.668 243.457 10.609 cv
243.262 10.559 243.039 10.531 242.793 10.527 cv
242.613 10.531 242.461 10.551 242.332 10.582 cv
242.199 10.621 242.09 10.672 242.012 10.738 cv
241.926 10.809 241.863 10.887 241.824 10.977 cv
241.777 11.07 241.758 11.168 241.762 11.27 cv
241.758 11.43 241.809 11.566 241.91 11.672 cv
242.008 11.785 242.137 11.879 242.301 11.961 cv
242.461 12.047 242.645 12.125 242.852 12.195 cv
243.055 12.27 243.262 12.352 243.473 12.434 cv
243.68 12.523 243.887 12.621 244.098 12.734 cv
244.301 12.848 244.484 12.988 244.645 13.152 cv
244.805 13.32 244.934 13.52 245.035 13.75 cv
245.129 13.984 245.18 14.258 245.184 14.57 cv
cp
f
253.254 16.535 mo
253.25 16.59 253.238 16.633 253.215 16.672 cv
253.188 16.711 253.141 16.746 253.078 16.77 cv
253.012 16.797 252.926 16.812 252.82 16.828 cv
252.715 16.84 252.582 16.848 252.422 16.848 cv
252.246 16.848 252.105 16.84 252.004 16.828 cv
251.895 16.812 251.813 16.797 251.75 16.77 cv
251.688 16.746 251.641 16.711 251.617 16.672 cv
251.586 16.633 251.574 16.59 251.578 16.535 cv
251.578 15.734 li
251.191 16.148 250.801 16.461 250.406 16.668 cv
250.004 16.875 249.594 16.977 249.172 16.98 cv
248.691 16.977 248.289 16.902 247.965 16.746 cv
247.641 16.594 247.379 16.379 247.18 16.109 cv
246.977 15.84 246.832 15.527 246.75 15.168 cv
246.66 14.812 246.617 14.371 246.621 13.84 cv
246.621 9.586 li
246.617 9.539 246.633 9.492 246.664 9.44897 cv
246.691 9.414 246.742 9.383 246.82 9.35199 cv
246.895 9.328 246.996 9.30902 247.125 9.29303 cv
247.25 9.28497 247.406 9.27698 247.598 9.27301 cv
247.785 9.27698 247.945 9.28497 248.07 9.29303 cv
248.195 9.30902 248.293 9.328 248.371 9.35199 cv
248.441 9.383 248.496 9.414 248.531 9.44897 cv
248.559 9.492 248.574 9.539 248.578 9.586 cv
248.578 13.512 li
248.574 13.879 248.598 14.156 248.648 14.348 cv
248.691 14.539 248.762 14.703 248.863 14.84 cv
248.957 14.98 249.082 15.086 249.23 15.16 cv
249.379 15.238 249.551 15.277 249.746 15.273 cv
249.996 15.277 250.246 15.187 250.5 15 cv
250.75 14.82 251.02 14.555 251.305 14.207 cv
251.305 9.586 li
251.305 9.539 251.316 9.492 251.348 9.44897 cv
251.371 9.414 251.426 9.383 251.504 9.35199 cv
251.578 9.328 251.676 9.30902 251.805 9.29303 cv
251.926 9.28497 252.086 9.27698 252.281 9.27301 cv
252.473 9.27698 252.629 9.28497 252.754 9.29303 cv
252.875 9.30902 252.977 9.328 253.051 9.35199 cv
253.121 9.383 253.172 9.414 253.207 9.44897 cv
253.234 9.492 253.25 9.539 253.254 9.586 cv
cp
f
266.191 16.535 mo
266.188 16.59 266.172 16.633 266.145 16.672 cv
266.109 16.711 266.059 16.746 265.988 16.77 cv
265.914 16.797 265.813 16.812 265.691 16.828 cv
265.566 16.84 265.41 16.848 265.219 16.848 cv
265.02 16.848 264.859 16.84 264.734 16.828 cv
264.609 16.812 264.508 16.797 264.434 16.77 cv
264.355 16.746 264.305 16.711 264.277 16.672 cv
264.25 16.633 264.234 16.59 264.238 16.535 cv
264.238 12.414 li
264.234 12.184 264.215 11.969 264.172 11.773 cv
264.125 11.582 264.055 11.418 263.969 11.281 cv
263.875 11.145 263.762 11.039 263.625 10.961 cv
263.484 10.887 263.32 10.848 263.129 10.848 cv
262.895 10.848 262.656 10.941 262.418 11.121 cv
262.18 11.305 261.922 11.566 261.641 11.914 cv
261.641 16.535 li
261.641 16.59 261.625 16.633 261.594 16.672 cv
261.563 16.711 261.508 16.746 261.434 16.77 cv
261.355 16.797 261.254 16.812 261.133 16.828 cv
261.008 16.84 260.855 16.848 260.668 16.848 cv
260.473 16.848 260.313 16.84 260.191 16.828 cv
260.063 16.812 259.961 16.797 259.891 16.77 cv
259.813 16.746 259.762 16.711 259.73 16.672 cv
259.699 16.633 259.684 16.59 259.684 16.535 cv
259.684 12.414 li
259.684 12.184 259.66 11.969 259.617 11.773 cv
259.574 11.582 259.508 11.418 259.422 11.281 cv
259.328 11.145 259.215 11.039 259.078 10.961 cv
258.934 10.887 258.77 10.848 258.586 10.848 cv
258.344 10.848 258.105 10.941 257.867 11.121 cv
257.629 11.305 257.371 11.566 257.098 11.914 cv
257.098 16.535 li
257.094 16.59 257.078 16.633 257.051 16.672 cv
257.016 16.711 256.961 16.746 256.891 16.77 cv
256.813 16.797 256.715 16.812 256.59 16.828 cv
256.465 16.84 256.305 16.848 256.117 16.848 cv
255.922 16.848 255.766 16.84 255.641 16.828 cv
255.516 16.812 255.414 16.797 255.34 16.77 cv
255.262 16.746 255.207 16.711 255.18 16.672 cv
255.145 16.633 255.129 16.59 255.133 16.535 cv
255.133 9.586 li
255.129 9.539 255.145 9.492 255.172 9.44897 cv
255.195 9.414 255.242 9.383 255.313 9.35199 cv
255.379 9.328 255.465 9.30902 255.574 9.29303 cv
255.68 9.28497 255.813 9.27698 255.977 9.27301 cv
256.141 9.27698 256.277 9.28497 256.387 9.29303 cv
256.492 9.30902 256.578 9.328 256.641 9.35199 cv
256.699 9.383 256.742 9.414 256.77 9.44897 cv
256.793 9.492 256.805 9.539 256.809 9.586 cv
256.809 10.387 li
257.191 9.97699 257.574 9.664 257.957 9.453 cv
258.336 9.24597 258.738 9.14502 259.156 9.14099 cv
259.441 9.14502 259.695 9.172 259.926 9.22998 cv
260.152 9.29303 260.359 9.37903 260.539 9.48798 cv
260.719 9.60199 260.871 9.73798 261 9.89099 cv
261.129 10.047 261.238 10.219 261.328 10.41 cv
261.535 10.187 261.738 9.99597 261.941 9.836 cv
262.137 9.67603 262.336 9.54303 262.531 9.44098 cv
262.727 9.34003 262.922 9.26599 263.117 9.21503 cv
263.313 9.16803 263.512 9.14502 263.715 9.14099 cv
264.176 9.14502 264.563 9.22302 264.883 9.375 cv
265.195 9.53497 265.453 9.74597 265.648 10.012 cv
265.844 10.281 265.98 10.594 266.066 10.949 cv
266.145 11.309 266.188 11.687 266.191 12.086 cv
cp
f
275.109 12.957 mo
275.109 13.578 275.043 14.137 274.91 14.633 cv
274.777 15.129 274.582 15.551 274.328 15.898 cv
274.074 16.246 273.758 16.516 273.379 16.699 cv
272.996 16.887 272.563 16.977 272.078 16.98 cv
271.871 16.977 271.684 16.957 271.52 16.922 cv
271.348 16.879 271.184 16.82 271.027 16.742 cv
270.867 16.664 270.711 16.566 270.559 16.441 cv
270.398 16.324 270.238 16.184 270.074 16.02 cv
270.074 19.293 li
270.07 19.34 270.055 19.387 270.027 19.434 cv
269.992 19.473 269.938 19.508 269.867 19.539 cv
269.789 19.562 269.691 19.586 269.566 19.605 cv
269.441 19.617 269.281 19.625 269.094 19.629 cv
268.898 19.625 268.742 19.617 268.617 19.605 cv
268.492 19.586 268.391 19.562 268.316 19.539 cv
268.238 19.508 268.184 19.473 268.156 19.434 cv
268.121 19.387 268.105 19.34 268.109 19.293 cv
268.109 9.586 li
268.105 9.539 268.121 9.492 268.148 9.44897 cv
268.172 9.414 268.215 9.383 268.285 9.35199 cv
268.348 9.328 268.434 9.30902 268.543 9.29303 cv
268.645 9.28497 268.781 9.27698 268.945 9.27301 cv
269.102 9.27698 269.23 9.28497 269.336 9.29303 cv
269.441 9.30902 269.527 9.328 269.594 9.35199 cv
269.656 9.383 269.703 9.414 269.73 9.44897 cv
269.754 9.492 269.766 9.539 269.77 9.586 cv
269.77 10.402 li
269.969 10.195 270.168 10.016 270.367 9.85498 cv
270.559 9.69897 270.758 9.56598 270.961 9.45697 cv
271.164 9.35498 271.371 9.27301 271.59 9.21899 cv
271.801 9.16803 272.031 9.14502 272.281 9.14099 cv
272.785 9.14502 273.219 9.242 273.582 9.44098 cv
273.938 9.64502 274.23 9.922 274.457 10.266 cv
274.68 10.617 274.844 11.02 274.953 11.48 cv
275.055 11.941 275.109 12.434 275.109 12.957 cv
cp
273.066 13.098 mo
273.063 12.805 273.043 12.523 273 12.246 cv
272.953 11.977 272.875 11.734 272.773 11.52 cv
272.664 11.309 272.523 11.137 272.352 11.008 cv
272.176 10.883 271.961 10.82 271.703 10.816 cv
271.57 10.82 271.441 10.84 271.316 10.875 cv
271.188 10.918 271.059 10.98 270.926 11.066 cv
270.793 11.156 270.656 11.27 270.52 11.41 cv
270.375 11.551 270.227 11.727 270.074 11.93 cv
270.074 14.223 li
270.348 14.57 270.609 14.84 270.859 15.027 cv
271.105 15.219 271.367 15.312 271.641 15.312 cv
271.895 15.312 272.109 15.25 272.293 15.117 cv
272.469 14.992 272.617 14.82 272.73 14.609 cv
272.844 14.398 272.926 14.16 272.984 13.895 cv
273.035 13.629 273.063 13.363 273.066 13.098 cv
cp
f
280.605 15.852 mo
280.605 16.078 280.59 16.254 280.563 16.375 cv
280.531 16.5 280.492 16.586 280.449 16.633 cv
280.398 16.684 280.332 16.727 280.242 16.766 cv
280.148 16.805 280.039 16.836 279.922 16.867 cv
279.797 16.891 279.664 16.914 279.523 16.934 cv
279.379 16.945 279.238 16.953 279.094 16.957 cv
278.703 16.953 278.363 16.902 278.078 16.809 cv
277.793 16.707 277.559 16.559 277.371 16.352 cv
277.184 16.148 277.043 15.891 276.957 15.578 cv
276.863 15.27 276.82 14.898 276.824 14.469 cv
276.824 10.91 li
275.992 10.91 li
275.891 10.914 275.816 10.852 275.766 10.727 cv
275.711 10.605 275.684 10.402 275.688 10.113 cv
275.684 9.96503 275.691 9.836 275.707 9.73401 cv
275.719 9.633 275.738 9.55103 275.766 9.48798 cv
275.789 9.42999 275.82 9.38702 275.863 9.35901 cv
275.898 9.336 275.945 9.32397 276 9.32001 cv
276.824 9.32001 li
276.824 7.77002 li
276.82 7.72302 276.836 7.67603 276.867 7.62903 cv
276.895 7.59003 276.945 7.55499 277.023 7.52301 cv
277.098 7.5 277.199 7.47699 277.328 7.461 cv
277.453 7.44897 277.609 7.44501 277.801 7.44098 cv
277.988 7.44501 278.148 7.44897 278.277 7.461 cv
278.402 7.47699 278.504 7.5 278.578 7.52301 cv
278.648 7.55499 278.699 7.59003 278.734 7.62903 cv
278.762 7.67603 278.777 7.72302 278.781 7.77002 cv
278.781 9.32001 li
280.293 9.32001 li
280.344 9.32397 280.391 9.336 280.43 9.35901 cv
280.469 9.38702 280.5 9.42999 280.527 9.48798 cv
280.551 9.55103 280.57 9.633 280.586 9.73401 cv
280.598 9.836 280.605 9.96503 280.605 10.113 cv
280.605 10.402 280.578 10.605 280.527 10.727 cv
280.473 10.852 280.398 10.914 280.301 10.91 cv
278.781 10.91 li
278.781 14.176 li
278.777 14.555 278.836 14.84 278.961 15.027 cv
279.078 15.219 279.293 15.312 279.598 15.312 cv
279.699 15.312 279.793 15.305 279.879 15.285 cv
279.961 15.27 280.035 15.25 280.102 15.223 cv
280.164 15.203 280.219 15.18 280.266 15.16 cv
280.309 15.145 280.348 15.137 280.387 15.133 cv
280.414 15.137 280.445 15.145 280.477 15.16 cv
280.504 15.18 280.523 15.219 280.543 15.27 cv
280.555 15.328 280.57 15.402 280.586 15.492 cv
280.598 15.59 280.605 15.707 280.605 15.852 cv
cp
f
283.992 16.535 mo
283.988 16.59 283.973 16.633 283.945 16.672 cv
283.91 16.711 283.855 16.746 283.785 16.77 cv
283.707 16.797 283.609 16.812 283.484 16.828 cv
283.359 16.84 283.199 16.848 283.012 16.848 cv
282.816 16.848 282.66 16.84 282.535 16.828 cv
282.41 16.812 282.309 16.797 282.234 16.77 cv
282.156 16.746 282.102 16.711 282.074 16.672 cv
282.039 16.633 282.023 16.59 282.027 16.535 cv
282.027 9.60199 li
282.023 9.55103 282.039 9.50403 282.074 9.46503 cv
282.102 9.42603 282.156 9.39502 282.234 9.36298 cv
282.309 9.34003 282.41 9.31598 282.535 9.297 cv
282.66 9.28497 282.816 9.27698 283.012 9.27301 cv
283.199 9.27698 283.359 9.28497 283.484 9.297 cv
283.609 9.31598 283.707 9.34003 283.785 9.36298 cv
283.855 9.39502 283.91 9.42603 283.945 9.46503 cv
283.973 9.50403 283.988 9.55103 283.992 9.60199 cv
cp
284.141 7.22998 mo
284.141 7.62903 284.059 7.90198 283.898 8.05103 cv
283.734 8.203 283.438 8.27698 283.004 8.27301 cv
282.559 8.27698 282.258 8.203 282.109 8.05902 cv
281.953 7.914 281.879 7.65198 281.879 7.27002 cv
281.879 6.875 281.957 6.60199 282.117 6.44897 cv
282.273 6.297 282.574 6.21899 283.02 6.21899 cv
283.453 6.21899 283.75 6.29303 283.906 6.44098 cv
284.063 6.59003 284.141 6.85498 284.141 7.22998 cv
cp
f
292.984 12.988 mo
292.98 13.586 292.902 14.129 292.75 14.613 cv
292.59 15.105 292.355 15.523 292.039 15.875 cv
291.723 16.227 291.324 16.5 290.848 16.691 cv
290.367 16.883 289.809 16.977 289.172 16.98 cv
288.551 16.977 288.012 16.895 287.559 16.723 cv
287.098 16.555 286.719 16.305 286.422 15.977 cv
286.117 15.652 285.895 15.25 285.75 14.77 cv
285.605 14.293 285.535 13.746 285.535 13.129 cv
285.535 12.539 285.613 12 285.77 11.508 cv
285.926 11.02 286.164 10.598 286.484 10.246 cv
286.801 9.89801 287.195 9.625 287.672 9.42999 cv
288.145 9.23798 288.703 9.14502 289.344 9.14099 cv
289.969 9.14502 290.508 9.22699 290.965 9.39502 cv
291.422 9.56598 291.801 9.81598 292.098 10.141 cv
292.395 10.469 292.617 10.871 292.766 11.348 cv
292.91 11.828 292.98 12.375 292.984 12.988 cv
cp
290.965 13.066 mo
290.961 12.73 290.934 12.414 290.883 12.121 cv
290.824 11.836 290.73 11.586 290.605 11.371 cv
290.473 11.16 290.301 10.992 290.09 10.871 cv
289.871 10.754 289.602 10.695 289.273 10.691 cv
288.984 10.695 288.73 10.75 288.512 10.852 cv
288.293 10.961 288.113 11.117 287.973 11.32 cv
287.832 11.527 287.727 11.773 287.656 12.059 cv
287.586 12.352 287.551 12.68 287.551 13.043 cv
287.551 13.391 287.578 13.707 287.637 13.992 cv
287.691 14.285 287.785 14.535 287.914 14.746 cv
288.039 14.961 288.211 15.125 288.434 15.238 cv
288.648 15.359 288.918 15.418 289.242 15.414 cv
289.535 15.418 289.793 15.363 290.016 15.254 cv
290.23 15.148 290.41 14.996 290.551 14.789 cv
290.691 14.59 290.793 14.344 290.863 14.055 cv
290.926 13.77 290.961 13.441 290.965 13.066 cv
cp
f
301.227 16.535 mo
301.223 16.59 301.207 16.633 301.18 16.672 cv
301.145 16.711 301.094 16.746 301.023 16.77 cv
300.949 16.797 300.848 16.812 300.723 16.828 cv
300.594 16.84 300.438 16.848 300.254 16.848 cv
300.059 16.848 299.898 16.84 299.773 16.828 cv
299.645 16.812 299.543 16.797 299.473 16.77 cv
299.395 16.746 299.344 16.711 299.316 16.672 cv
299.281 16.633 299.266 16.59 299.27 16.535 cv
299.27 12.57 li
299.266 12.234 299.242 11.969 299.195 11.773 cv
299.145 11.582 299.07 11.418 298.98 11.281 cv
298.887 11.145 298.77 11.039 298.621 10.961 cv
298.473 10.887 298.297 10.848 298.102 10.848 cv
297.848 10.848 297.598 10.941 297.344 11.121 cv
297.09 11.305 296.824 11.566 296.551 11.914 cv
296.551 16.535 li
296.547 16.59 296.531 16.633 296.504 16.672 cv
296.469 16.711 296.414 16.746 296.344 16.77 cv
296.266 16.797 296.168 16.812 296.043 16.828 cv
295.918 16.84 295.758 16.848 295.57 16.848 cv
295.375 16.848 295.219 16.84 295.094 16.828 cv
294.969 16.812 294.867 16.797 294.793 16.77 cv
294.715 16.746 294.66 16.711 294.633 16.672 cv
294.598 16.633 294.582 16.59 294.586 16.535 cv
294.586 9.586 li
294.582 9.539 294.598 9.492 294.625 9.44897 cv
294.648 9.414 294.695 9.383 294.766 9.35199 cv
294.832 9.328 294.918 9.30902 295.027 9.29303 cv
295.133 9.28497 295.266 9.27698 295.43 9.27301 cv
295.594 9.27698 295.73 9.28497 295.84 9.29303 cv
295.945 9.30902 296.031 9.328 296.094 9.35199 cv
296.152 9.383 296.195 9.414 296.223 9.44897 cv
296.246 9.492 296.258 9.539 296.262 9.586 cv
296.262 10.387 li
296.645 9.97699 297.035 9.664 297.434 9.453 cv
297.828 9.24597 298.246 9.14502 298.68 9.14099 cv
299.148 9.14502 299.547 9.22302 299.875 9.375 cv
300.199 9.53497 300.461 9.74597 300.66 10.012 cv
300.859 10.281 301.004 10.594 301.094 10.949 cv
301.18 11.309 301.223 11.738 301.227 12.242 cv
cp
f
317.691 9.57001 mo
317.688 9.62903 317.68 9.69897 317.668 9.78101 cv
317.648 9.86298 317.621 9.98401 317.582 10.137 cv
315.727 16.426 li
315.699 16.516 315.664 16.59 315.625 16.641 cv
315.582 16.699 315.52 16.742 315.434 16.77 cv
315.348 16.801 315.223 16.816 315.066 16.832 cv
314.902 16.84 314.699 16.848 314.449 16.848 cv
314.191 16.848 313.98 16.84 313.824 16.828 cv
313.66 16.812 313.535 16.793 313.445 16.762 cv
313.352 16.734 313.285 16.691 313.246 16.633 cv
313.203 16.582 313.172 16.512 313.152 16.426 cv
311.984 12.203 li
311.969 12.133 li
311.953 12.203 li
310.879 16.426 li
310.855 16.516 310.824 16.59 310.789 16.641 cv
310.746 16.699 310.68 16.742 310.59 16.77 cv
310.492 16.801 310.367 16.816 310.207 16.832 cv
310.047 16.84 309.84 16.848 309.586 16.848 cv
309.324 16.848 309.113 16.84 308.957 16.828 cv
308.797 16.812 308.672 16.793 308.582 16.762 cv
308.488 16.734 308.422 16.691 308.383 16.633 cv
308.34 16.582 308.309 16.512 308.293 16.426 cv
306.453 10.137 li
306.402 9.98798 306.375 9.87097 306.363 9.78497 cv
306.348 9.703 306.34 9.62903 306.344 9.57001 cv
306.34 9.52002 306.355 9.47699 306.387 9.43402 cv
306.414 9.39801 306.465 9.367 306.543 9.34003 cv
306.617 9.32001 306.719 9.30103 306.844 9.289 cv
306.969 9.28101 307.129 9.27698 307.324 9.27301 cv
307.531 9.27698 307.699 9.28101 307.832 9.289 cv
307.961 9.30103 308.063 9.32001 308.137 9.34399 cv
308.207 9.37097 308.258 9.40601 308.289 9.44897 cv
308.316 9.49597 308.34 9.55103 308.355 9.60901 cv
309.734 14.711 li
309.75 14.805 li
309.766 14.711 li
311.059 9.60901 li
311.07 9.55103 311.098 9.49597 311.133 9.44897 cv
311.164 9.40601 311.215 9.37097 311.285 9.34399 cv
311.352 9.32001 311.445 9.30103 311.566 9.289 cv
311.688 9.28101 311.844 9.27698 312.039 9.27301 cv
312.23 9.27698 312.387 9.28497 312.508 9.29303 cv
312.625 9.30902 312.719 9.32397 312.793 9.34802 cv
312.859 9.37097 312.91 9.40198 312.941 9.44098 cv
312.969 9.47998 312.992 9.52698 313.008 9.578 cv
314.395 14.719 li
314.418 14.805 li
314.434 14.711 li
315.758 9.60901 li
315.766 9.55103 315.789 9.49597 315.82 9.44897 cv
315.852 9.40601 315.902 9.37097 315.977 9.34399 cv
316.047 9.32001 316.145 9.30103 316.27 9.289 cv
316.391 9.28101 316.551 9.27698 316.746 9.27301 cv
316.938 9.27698 317.094 9.28101 317.219 9.289 cv
317.34 9.30103 317.438 9.32001 317.508 9.34003 cv
317.578 9.367 317.625 9.39801 317.652 9.43402 cv
317.676 9.47699 317.688 9.52002 317.691 9.57001 cv
cp
f
320.906 16.535 mo
320.902 16.59 320.887 16.633 320.859 16.672 cv
320.824 16.711 320.77 16.746 320.699 16.77 cv
320.621 16.797 320.523 16.812 320.398 16.828 cv
320.273 16.84 320.113 16.848 319.926 16.848 cv
319.73 16.848 319.574 16.84 319.449 16.828 cv
319.324 16.812 319.223 16.797 319.148 16.77 cv
319.07 16.746 319.016 16.711 318.988 16.672 cv
318.953 16.633 318.938 16.59 318.941 16.535 cv
318.941 9.60199 li
318.938 9.55103 318.953 9.50403 318.988 9.46503 cv
319.016 9.42603 319.07 9.39502 319.148 9.36298 cv
319.223 9.34003 319.324 9.31598 319.449 9.297 cv
319.574 9.28497 319.73 9.27698 319.926 9.27301 cv
320.113 9.27698 320.273 9.28497 320.398 9.297 cv
320.523 9.31598 320.621 9.34003 320.699 9.36298 cv
320.77 9.39502 320.824 9.42603 320.859 9.46503 cv
320.887 9.50403 320.902 9.55103 320.906 9.60199 cv
cp
321.055 7.22998 mo
321.055 7.62903 320.973 7.90198 320.813 8.05103 cv
320.648 8.203 320.352 8.27698 319.918 8.27301 cv
319.473 8.27698 319.172 8.203 319.023 8.05902 cv
318.867 7.914 318.793 7.65198 318.793 7.27002 cv
318.793 6.875 318.871 6.60199 319.031 6.44897 cv
319.188 6.297 319.488 6.21899 319.934 6.21899 cv
320.367 6.21899 320.664 6.29303 320.82 6.44098 cv
320.977 6.59003 321.055 6.85498 321.055 7.22998 cv
cp
f
326.984 15.852 mo
326.984 16.078 326.969 16.254 326.941 16.375 cv
326.91 16.5 326.871 16.586 326.828 16.633 cv
326.777 16.684 326.711 16.727 326.621 16.766 cv
326.527 16.805 326.418 16.836 326.301 16.867 cv
326.176 16.891 326.043 16.914 325.902 16.934 cv
325.758 16.945 325.617 16.953 325.473 16.957 cv
325.082 16.953 324.742 16.902 324.457 16.809 cv
324.172 16.707 323.938 16.559 323.75 16.352 cv
323.563 16.148 323.422 15.891 323.336 15.578 cv
323.242 15.27 323.199 14.898 323.203 14.469 cv
323.203 10.91 li
322.371 10.91 li
322.27 10.914 322.195 10.852 322.145 10.727 cv
322.09 10.605 322.063 10.402 322.066 10.113 cv
322.063 9.96503 322.07 9.836 322.086 9.73401 cv
322.098 9.633 322.117 9.55103 322.145 9.48798 cv
322.168 9.42999 322.199 9.38702 322.242 9.35901 cv
322.277 9.336 322.324 9.32397 322.379 9.32001 cv
323.203 9.32001 li
323.203 7.77002 li
323.199 7.72302 323.215 7.67603 323.246 7.62903 cv
323.273 7.59003 323.324 7.55499 323.402 7.52301 cv
323.477 7.5 323.578 7.47699 323.707 7.461 cv
323.832 7.44897 323.988 7.44501 324.18 7.44098 cv
324.367 7.44501 324.527 7.44897 324.656 7.461 cv
324.781 7.47699 324.883 7.5 324.957 7.52301 cv
325.027 7.55499 325.078 7.59003 325.113 7.62903 cv
325.141 7.67603 325.156 7.72302 325.16 7.77002 cv
325.16 9.32001 li
326.672 9.32001 li
326.723 9.32397 326.77 9.336 326.809 9.35901 cv
326.848 9.38702 326.879 9.42999 326.906 9.48798 cv
326.93 9.55103 326.949 9.633 326.965 9.73401 cv
326.977 9.836 326.984 9.96503 326.984 10.113 cv
326.984 10.402 326.957 10.605 326.906 10.727 cv
326.852 10.852 326.777 10.914 326.68 10.91 cv
325.16 10.91 li
325.16 14.176 li
325.156 14.555 325.215 14.84 325.34 15.027 cv
325.457 15.219 325.672 15.312 325.977 15.312 cv
326.078 15.312 326.172 15.305 326.258 15.285 cv
326.34 15.27 326.414 15.25 326.48 15.223 cv
326.543 15.203 326.598 15.18 326.645 15.16 cv
326.688 15.145 326.727 15.137 326.766 15.133 cv
326.793 15.137 326.824 15.145 326.855 15.16 cv
326.883 15.18 326.902 15.219 326.922 15.27 cv
326.934 15.328 326.949 15.402 326.965 15.492 cv
326.977 15.59 326.984 15.707 326.984 15.852 cv
cp
f
335.047 16.535 mo
335.043 16.59 335.027 16.633 335 16.672 cv
334.965 16.711 334.914 16.746 334.844 16.77 cv
334.77 16.797 334.668 16.812 334.543 16.828 cv
334.414 16.84 334.258 16.848 334.074 16.848 cv
333.879 16.848 333.719 16.84 333.594 16.828 cv
333.465 16.812 333.363 16.797 333.293 16.77 cv
333.215 16.746 333.164 16.711 333.137 16.672 cv
333.102 16.633 333.086 16.59 333.09 16.535 cv
333.09 12.57 li
333.086 12.234 333.063 11.969 333.016 11.773 cv
332.965 11.582 332.891 11.418 332.801 11.281 cv
332.707 11.145 332.59 11.039 332.441 10.961 cv
332.293 10.887 332.117 10.848 331.922 10.848 cv
331.668 10.848 331.418 10.941 331.164 11.121 cv
330.91 11.305 330.645 11.566 330.371 11.914 cv
330.371 16.535 li
330.367 16.59 330.352 16.633 330.324 16.672 cv
330.289 16.711 330.234 16.746 330.164 16.77 cv
330.086 16.797 329.988 16.812 329.863 16.828 cv
329.738 16.84 329.578 16.848 329.391 16.848 cv
329.195 16.848 329.039 16.84 328.914 16.828 cv
328.789 16.812 328.688 16.797 328.613 16.77 cv
328.535 16.746 328.48 16.711 328.453 16.672 cv
328.418 16.633 328.402 16.59 328.406 16.535 cv
328.406 6.289 li
328.402 6.23798 328.418 6.19098 328.453 6.14801 cv
328.48 6.10901 328.535 6.07397 328.613 6.04303 cv
328.688 6.01599 328.789 5.99597 328.914 5.97699 cv
329.039 5.96503 329.195 5.95697 329.391 5.953 cv
329.578 5.95697 329.738 5.96503 329.863 5.97699 cv
329.988 5.99597 330.086 6.01599 330.164 6.04303 cv
330.234 6.07397 330.289 6.10901 330.324 6.14801 cv
330.352 6.19098 330.367 6.23798 330.371 6.289 cv
330.371 10.129 li
330.707 9.80103 331.051 9.55499 331.402 9.38702 cv
331.75 9.22699 332.117 9.14502 332.5 9.14099 cv
332.969 9.14502 333.367 9.22302 333.695 9.375 cv
334.02 9.53497 334.281 9.74597 334.48 10.016 cv
334.68 10.285 334.824 10.602 334.914 10.961 cv
335 11.324 335.043 11.762 335.047 12.273 cv
cp
f
346.406 7.55902 mo
346.402 7.71899 346.398 7.84802 346.387 7.953 cv
346.371 8.06201 346.348 8.14801 346.324 8.20697 cv
346.293 8.27002 346.262 8.31598 346.227 8.34399 cv
346.188 8.37903 346.145 8.39502 346.102 8.39099 cv
342.805 8.39099 li
342.805 11.105 li
345.898 11.105 li
345.941 11.105 345.984 11.121 346.023 11.145 cv
346.059 11.176 346.09 11.219 346.121 11.277 cv
346.148 11.34 346.168 11.422 346.184 11.523 cv
346.191 11.629 346.199 11.758 346.203 11.914 cv
346.199 12.07 346.191 12.203 346.184 12.305 cv
346.168 12.414 346.148 12.5 346.121 12.562 cv
346.09 12.633 346.059 12.68 346.023 12.707 cv
345.984 12.738 345.941 12.754 345.898 12.75 cv
342.805 12.75 li
342.805 16.504 li
342.801 16.562 342.785 16.613 342.758 16.652 cv
342.723 16.699 342.668 16.734 342.59 16.758 cv
342.508 16.789 342.402 16.809 342.273 16.824 cv
342.141 16.84 341.973 16.848 341.777 16.848 cv
341.574 16.848 341.41 16.84 341.281 16.824 cv
341.145 16.809 341.039 16.789 340.965 16.758 cv
340.883 16.734 340.828 16.699 340.797 16.652 cv
340.762 16.613 340.742 16.562 340.746 16.504 cv
340.746 7.36298 li
340.742 7.13702 340.801 6.97302 340.922 6.867 cv
341.035 6.77002 341.18 6.71899 341.355 6.71503 cv
346.102 6.71503 li
346.145 6.71899 346.188 6.72998 346.227 6.758 cv
346.262 6.789 346.293 6.836 346.324 6.89801 cv
346.348 6.96503 346.371 7.05499 346.387 7.15997 cv
346.398 7.27301 346.402 7.40601 346.406 7.55902 cv
cp
f
354.75 12.988 mo
354.746 13.586 354.668 14.129 354.516 14.613 cv
354.355 15.105 354.121 15.523 353.805 15.875 cv
353.488 16.227 353.09 16.5 352.613 16.691 cv
352.133 16.883 351.574 16.977 350.938 16.98 cv
350.316 16.977 349.777 16.895 349.324 16.723 cv
348.863 16.555 348.484 16.305 348.188 15.977 cv
347.883 15.652 347.66 15.25 347.516 14.77 cv
347.371 14.293 347.301 13.746 347.301 13.129 cv
347.301 12.539 347.379 12 347.535 11.508 cv
347.691 11.02 347.93 10.598 348.25 10.246 cv
348.566 9.89801 348.961 9.625 349.438 9.42999 cv
349.91 9.23798 350.469 9.14502 351.109 9.14099 cv
351.734 9.14502 352.273 9.22699 352.73 9.39502 cv
353.188 9.56598 353.566 9.81598 353.863 10.141 cv
354.16 10.469 354.383 10.871 354.531 11.348 cv
354.676 11.828 354.746 12.375 354.75 12.988 cv
cp
352.73 13.066 mo
352.727 12.73 352.699 12.414 352.648 12.121 cv
352.59 11.836 352.496 11.586 352.371 11.371 cv
352.238 11.16 352.066 10.992 351.855 10.871 cv
351.637 10.754 351.367 10.695 351.039 10.691 cv
350.75 10.695 350.496 10.75 350.277 10.852 cv
350.059 10.961 349.879 11.117 349.738 11.32 cv
349.598 11.527 349.492 11.773 349.422 12.059 cv
349.352 12.352 349.316 12.68 349.316 13.043 cv
349.316 13.391 349.344 13.707 349.402 13.992 cv
349.457 14.285 349.551 14.535 349.68 14.746 cv
349.805 14.961 349.977 15.125 350.199 15.238 cv
350.414 15.359 350.684 15.418 351.008 15.414 cv
351.301 15.418 351.559 15.363 351.781 15.254 cv
351.996 15.148 352.176 14.996 352.316 14.789 cv
352.457 14.59 352.559 14.344 352.629 14.055 cv
352.691 13.77 352.727 13.441 352.73 13.066 cv
cp
f
362.93 16.535 mo
362.926 16.59 362.914 16.633 362.891 16.672 cv
362.863 16.711 362.816 16.746 362.754 16.77 cv
362.688 16.797 362.602 16.812 362.496 16.828 cv
362.391 16.84 362.258 16.848 362.098 16.848 cv
361.922 16.848 361.781 16.84 361.68 16.828 cv
361.57 16.812 361.488 16.797 361.426 16.77 cv
361.363 16.746 361.316 16.711 361.293 16.672 cv
361.262 16.633 361.25 16.59 361.254 16.535 cv
361.254 15.734 li
360.867 16.148 360.477 16.461 360.082 16.668 cv
359.68 16.875 359.27 16.977 358.848 16.98 cv
358.367 16.977 357.965 16.902 357.641 16.746 cv
357.316 16.594 357.055 16.379 356.855 16.109 cv
356.652 15.84 356.508 15.527 356.426 15.168 cv
356.336 14.812 356.293 14.371 356.297 13.84 cv
356.297 9.586 li
356.293 9.539 356.309 9.492 356.34 9.44897 cv
356.367 9.414 356.418 9.383 356.496 9.35199 cv
356.57 9.328 356.672 9.30902 356.801 9.29303 cv
356.926 9.28497 357.082 9.27698 357.273 9.27301 cv
357.461 9.27698 357.621 9.28497 357.746 9.29303 cv
357.871 9.30902 357.969 9.328 358.047 9.35199 cv
358.117 9.383 358.172 9.414 358.207 9.44897 cv
358.234 9.492 358.25 9.539 358.254 9.586 cv
358.254 13.512 li
358.25 13.879 358.273 14.156 358.324 14.348 cv
358.367 14.539 358.438 14.703 358.539 14.84 cv
358.633 14.98 358.758 15.086 358.906 15.16 cv
359.055 15.238 359.227 15.277 359.422 15.273 cv
359.672 15.277 359.922 15.187 360.176 15 cv
360.426 14.82 360.695 14.555 360.98 14.207 cv
360.98 9.586 li
360.98 9.539 360.992 9.492 361.023 9.44897 cv
361.047 9.414 361.102 9.383 361.18 9.35199 cv
361.254 9.328 361.352 9.30902 361.48 9.29303 cv
361.602 9.28497 361.762 9.27698 361.957 9.27301 cv
362.148 9.27698 362.305 9.28497 362.43 9.29303 cv
362.551 9.30902 362.652 9.328 362.727 9.35199 cv
362.797 9.383 362.848 9.414 362.883 9.44897 cv
362.91 9.492 362.926 9.539 362.93 9.586 cv
cp
f
369.328 10.23 mo
369.328 10.422 369.32 10.574 369.313 10.691 cv
369.297 10.812 369.281 10.906 369.266 10.973 cv
369.242 11.043 369.215 11.09 369.184 11.113 cv
369.145 11.141 369.102 11.152 369.055 11.152 cv
369.008 11.152 368.961 11.145 368.914 11.125 cv
368.859 11.109 368.801 11.09 368.738 11.066 cv
368.668 11.047 368.598 11.027 368.523 11.008 cv
368.441 10.992 368.355 10.984 368.266 10.98 cv
368.152 10.984 368.043 11.004 367.938 11.047 cv
367.828 11.094 367.715 11.164 367.602 11.254 cv
367.48 11.348 367.359 11.473 367.234 11.625 cv
367.105 11.785 366.969 11.977 366.824 12.203 cv
366.824 16.535 li
366.82 16.59 366.805 16.633 366.777 16.672 cv
366.742 16.711 366.688 16.746 366.617 16.77 cv
366.539 16.797 366.441 16.812 366.316 16.828 cv
366.191 16.84 366.031 16.848 365.844 16.848 cv
365.648 16.848 365.492 16.84 365.367 16.828 cv
365.242 16.812 365.141 16.797 365.066 16.77 cv
364.988 16.746 364.934 16.711 364.906 16.672 cv
364.871 16.633 364.855 16.59 364.859 16.535 cv
364.859 9.586 li
364.855 9.539 364.871 9.492 364.898 9.44897 cv
364.922 9.414 364.969 9.383 365.039 9.35199 cv
365.105 9.328 365.191 9.30902 365.301 9.29303 cv
365.406 9.28497 365.539 9.27698 365.703 9.27301 cv
365.867 9.27698 366.004 9.28497 366.113 9.29303 cv
366.219 9.30902 366.305 9.328 366.367 9.35199 cv
366.426 9.383 366.469 9.414 366.496 9.44897 cv
366.52 9.492 366.531 9.539 366.535 9.586 cv
366.535 10.449 li
366.715 10.191 366.887 9.97998 367.051 9.80902 cv
367.207 9.64502 367.363 9.508 367.512 9.40601 cv
367.656 9.30902 367.801 9.242 367.945 9.19897 cv
368.09 9.164 368.234 9.14502 368.383 9.14099 cv
368.449 9.14502 368.523 9.14801 368.602 9.15198 cv
368.68 9.164 368.758 9.17603 368.844 9.19098 cv
368.922 9.211 368.996 9.22998 369.063 9.25403 cv
369.121 9.27698 369.168 9.30499 369.199 9.328 cv
369.227 9.35901 369.246 9.38702 369.262 9.414 cv
369.273 9.44897 369.285 9.492 369.297 9.54303 cv
369.305 9.60199 369.313 9.68402 369.32 9.789 cv
369.324 9.89801 369.328 10.047 369.328 10.23 cv
cp
f
381.152 7.55902 mo
381.148 7.71503 381.141 7.84399 381.133 7.94501 cv
381.117 8.05499 381.098 8.14099 381.074 8.203 cv
381.043 8.27002 381.012 8.31598 380.977 8.34399 cv
380.934 8.37903 380.891 8.39502 380.848 8.39099 cv
378.324 8.39099 li
378.324 16.52 li
378.324 16.574 378.305 16.621 378.273 16.66 cv
378.234 16.703 378.18 16.738 378.105 16.762 cv
378.023 16.789 377.918 16.809 377.789 16.824 cv
377.652 16.84 377.488 16.848 377.293 16.848 cv
377.098 16.848 376.934 16.84 376.801 16.824 cv
376.668 16.809 376.563 16.789 376.484 16.762 cv
376.406 16.738 376.348 16.703 376.316 16.66 cv
376.277 16.621 376.262 16.574 376.266 16.52 cv
376.266 8.39099 li
373.742 8.39099 li
373.688 8.39502 373.641 8.37903 373.609 8.34399 cv
373.57 8.31598 373.539 8.27002 373.516 8.203 cv
373.484 8.14099 373.465 8.05499 373.457 7.94501 cv
373.441 7.84399 373.438 7.71503 373.438 7.55902 cv
373.438 7.40601 373.441 7.27301 373.457 7.15997 cv
373.465 7.05499 373.484 6.96503 373.516 6.89801 cv
373.539 6.836 373.57 6.789 373.609 6.758 cv
373.641 6.72998 373.688 6.71899 373.742 6.71503 cv
380.848 6.71503 li
380.891 6.71899 380.934 6.72998 380.977 6.758 cv
381.012 6.789 381.043 6.836 381.074 6.89801 cv
381.098 6.96503 381.117 7.05499 381.133 7.15997 cv
381.141 7.27301 381.148 7.40601 381.152 7.55902 cv
cp
f
388.863 16.535 mo
388.859 16.59 388.844 16.633 388.816 16.672 cv
388.781 16.711 388.73 16.746 388.66 16.77 cv
388.586 16.797 388.484 16.812 388.359 16.828 cv
388.23 16.84 388.074 16.848 387.891 16.848 cv
387.695 16.848 387.535 16.84 387.41 16.828 cv
387.281 16.812 387.18 16.797 387.109 16.77 cv
387.031 16.746 386.98 16.711 386.953 16.672 cv
386.918 16.633 386.902 16.59 386.906 16.535 cv
386.906 12.57 li
386.902 12.234 386.879 11.969 386.832 11.773 cv
386.781 11.582 386.707 11.418 386.617 11.281 cv
386.523 11.145 386.406 11.039 386.258 10.961 cv
386.109 10.887 385.934 10.848 385.738 10.848 cv
385.484 10.848 385.234 10.941 384.98 11.121 cv
384.727 11.305 384.461 11.566 384.188 11.914 cv
384.188 16.535 li
384.184 16.59 384.168 16.633 384.141 16.672 cv
384.105 16.711 384.051 16.746 383.98 16.77 cv
383.902 16.797 383.805 16.812 383.68 16.828 cv
383.555 16.84 383.395 16.848 383.207 16.848 cv
383.012 16.848 382.855 16.84 382.73 16.828 cv
382.605 16.812 382.504 16.797 382.43 16.77 cv
382.352 16.746 382.297 16.711 382.27 16.672 cv
382.234 16.633 382.219 16.59 382.223 16.535 cv
382.223 6.289 li
382.219 6.23798 382.234 6.19098 382.27 6.14801 cv
382.297 6.10901 382.352 6.07397 382.43 6.04303 cv
382.504 6.01599 382.605 5.99597 382.73 5.97699 cv
382.855 5.96503 383.012 5.95697 383.207 5.953 cv
383.395 5.95697 383.555 5.96503 383.68 5.97699 cv
383.805 5.99597 383.902 6.01599 383.98 6.04303 cv
384.051 6.07397 384.105 6.10901 384.141 6.14801 cv
384.168 6.19098 384.184 6.23798 384.188 6.289 cv
384.188 10.129 li
384.523 9.80103 384.867 9.55499 385.219 9.38702 cv
385.566 9.22699 385.934 9.14502 386.316 9.14099 cv
386.785 9.14502 387.184 9.22302 387.512 9.375 cv
387.836 9.53497 388.098 9.74597 388.297 10.016 cv
388.496 10.285 388.641 10.602 388.73 10.961 cv
388.816 11.324 388.859 11.762 388.863 12.273 cv
cp
f
395.262 10.23 mo
395.262 10.422 395.254 10.574 395.246 10.691 cv
395.23 10.812 395.215 10.906 395.199 10.973 cv
395.176 11.043 395.148 11.09 395.117 11.113 cv
395.078 11.141 395.035 11.152 394.988 11.152 cv
394.941 11.152 394.895 11.145 394.848 11.125 cv
394.793 11.109 394.734 11.09 394.672 11.066 cv
394.602 11.047 394.531 11.027 394.457 11.008 cv
394.375 10.992 394.289 10.984 394.199 10.98 cv
394.086 10.984 393.977 11.004 393.871 11.047 cv
393.762 11.094 393.648 11.164 393.535 11.254 cv
393.414 11.348 393.293 11.473 393.168 11.625 cv
393.039 11.785 392.902 11.977 392.758 12.203 cv
392.758 16.535 li
392.754 16.59 392.738 16.633 392.711 16.672 cv
392.676 16.711 392.621 16.746 392.551 16.77 cv
392.473 16.797 392.375 16.812 392.25 16.828 cv
392.125 16.84 391.965 16.848 391.777 16.848 cv
391.582 16.848 391.426 16.84 391.301 16.828 cv
391.176 16.812 391.074 16.797 391 16.77 cv
390.922 16.746 390.867 16.711 390.84 16.672 cv
390.805 16.633 390.789 16.59 390.793 16.535 cv
390.793 9.586 li
390.789 9.539 390.805 9.492 390.832 9.44897 cv
390.855 9.414 390.902 9.383 390.973 9.35199 cv
391.039 9.328 391.125 9.30902 391.234 9.29303 cv
391.34 9.28497 391.473 9.27698 391.637 9.27301 cv
391.801 9.27698 391.938 9.28497 392.047 9.29303 cv
392.152 9.30902 392.238 9.328 392.301 9.35199 cv
392.359 9.383 392.402 9.414 392.43 9.44897 cv
392.453 9.492 392.465 9.539 392.469 9.586 cv
392.469 10.449 li
392.648 10.191 392.82 9.97998 392.984 9.80902 cv
393.141 9.64502 393.297 9.508 393.445 9.40601 cv
393.59 9.30902 393.734 9.242 393.879 9.19897 cv
394.023 9.164 394.168 9.14502 394.316 9.14099 cv
394.383 9.14502 394.457 9.14801 394.535 9.15198 cv
394.613 9.164 394.691 9.17603 394.777 9.19098 cv
394.855 9.211 394.93 9.22998 394.996 9.25403 cv
395.055 9.27698 395.102 9.30499 395.133 9.328 cv
395.16 9.35901 395.18 9.38702 395.195 9.414 cv
395.207 9.44897 395.219 9.492 395.23 9.54303 cv
395.238 9.60199 395.246 9.68402 395.254 9.789 cv
395.258 9.89801 395.262 10.047 395.262 10.23 cv
cp
f
402.707 12.859 mo
402.703 13.098 402.652 13.273 402.547 13.387 cv
402.438 13.504 402.289 13.562 402.109 13.559 cv
397.875 13.559 li
397.871 13.859 397.906 14.129 397.98 14.367 cv
398.047 14.609 398.16 14.812 398.316 14.98 cv
398.469 15.152 398.664 15.281 398.906 15.367 cv
399.145 15.457 399.434 15.5 399.777 15.5 cv
400.117 15.5 400.418 15.477 400.68 15.426 cv
400.938 15.379 401.164 15.324 401.355 15.262 cv
401.543 15.203 401.699 15.148 401.828 15.098 cv
401.949 15.051 402.051 15.027 402.133 15.023 cv
402.176 15.027 402.215 15.035 402.25 15.051 cv
402.277 15.07 402.305 15.102 402.324 15.148 cv
402.344 15.195 402.355 15.262 402.367 15.348 cv
402.371 15.434 402.375 15.543 402.379 15.672 cv
402.375 15.789 402.375 15.887 402.371 15.965 cv
402.363 16.047 402.355 16.113 402.348 16.168 cv
402.336 16.227 402.32 16.277 402.301 16.312 cv
402.281 16.355 402.254 16.391 402.223 16.426 cv
402.188 16.465 402.094 16.516 401.945 16.574 cv
401.789 16.641 401.598 16.703 401.367 16.758 cv
401.129 16.82 400.859 16.867 400.563 16.914 cv
400.258 16.953 399.938 16.977 399.598 16.98 cv
398.977 16.977 398.434 16.902 397.973 16.746 cv
397.504 16.594 397.117 16.355 396.809 16.039 cv
396.492 15.723 396.258 15.324 396.109 14.84 cv
395.953 14.359 395.879 13.793 395.883 13.137 cv
395.879 12.523 395.957 11.965 396.121 11.469 cv
396.277 10.973 396.512 10.555 396.824 10.207 cv
397.129 9.86298 397.504 9.59802 397.941 9.414 cv
398.379 9.23401 398.871 9.14502 399.426 9.14099 cv
400.004 9.14502 400.504 9.22998 400.918 9.39801 cv
401.332 9.57397 401.668 9.81201 401.934 10.113 cv
402.195 10.418 402.391 10.777 402.52 11.191 cv
402.641 11.609 402.703 12.059 402.707 12.547 cv
cp
400.805 12.297 mo
400.816 11.746 400.707 11.312 400.473 11 cv
400.238 10.687 399.871 10.531 399.379 10.527 cv
399.129 10.531 398.914 10.578 398.73 10.668 cv
398.543 10.766 398.391 10.891 398.27 11.047 cv
398.145 11.207 398.051 11.395 397.988 11.609 cv
397.922 11.824 397.883 12.055 397.875 12.297 cv
cp
f
410.238 16.559 mo
410.234 16.637 410.207 16.691 410.16 16.73 cv
410.105 16.773 410.023 16.801 409.914 16.82 cv
409.797 16.836 409.633 16.848 409.418 16.848 cv
409.18 16.848 409.008 16.836 408.906 16.82 cv
408.797 16.801 408.723 16.773 408.684 16.73 cv
408.637 16.691 408.617 16.637 408.617 16.559 cv
408.617 16.008 li
408.328 16.316 408 16.555 407.637 16.723 cv
407.27 16.895 406.863 16.977 406.418 16.98 cv
406.047 16.977 405.707 16.93 405.398 16.836 cv
405.09 16.742 404.824 16.602 404.598 16.406 cv
404.371 16.219 404.195 15.984 404.07 15.703 cv
403.945 15.426 403.883 15.098 403.887 14.719 cv
403.883 14.32 403.961 13.969 404.121 13.664 cv
404.277 13.367 404.516 13.121 404.832 12.926 cv
405.145 12.734 405.535 12.59 406.004 12.492 cv
406.473 12.402 407.016 12.355 407.633 12.352 cv
408.313 12.352 li
408.313 11.93 li
408.313 11.715 408.289 11.523 408.246 11.359 cv
408.199 11.199 408.125 11.062 408.027 10.949 cv
407.922 10.844 407.789 10.762 407.621 10.707 cv
407.449 10.656 407.238 10.633 406.996 10.629 cv
406.664 10.633 406.371 10.668 406.117 10.738 cv
405.855 10.812 405.629 10.895 405.434 10.98 cv
405.234 11.074 405.07 11.152 404.941 11.223 cv
404.805 11.297 404.695 11.336 404.617 11.332 cv
404.555 11.336 404.504 11.316 404.465 11.277 cv
404.418 11.242 404.383 11.191 404.355 11.121 cv
404.324 11.059 404.301 10.973 404.289 10.871 cv
404.27 10.773 404.262 10.664 404.266 10.543 cv
404.262 10.383 404.277 10.258 404.305 10.16 cv
404.328 10.07 404.375 9.98401 404.453 9.90601 cv
404.523 9.83197 404.652 9.75 404.836 9.65997 cv
405.016 9.57001 405.227 9.48401 405.473 9.40601 cv
405.715 9.328 405.984 9.26599 406.273 9.21503 cv
406.563 9.16803 406.859 9.14502 407.168 9.14099 cv
407.711 9.14502 408.176 9.19501 408.563 9.30103 cv
408.949 9.40997 409.27 9.57397 409.52 9.79303 cv
409.77 10.012 409.949 10.297 410.066 10.645 cv
410.176 10.996 410.234 11.41 410.238 11.883 cv
cp
408.313 13.582 mo
407.563 13.582 li
407.246 13.586 406.977 13.609 406.754 13.652 cv
406.527 13.703 406.344 13.773 406.207 13.863 cv
406.063 13.961 405.961 14.074 405.898 14.203 cv
405.832 14.34 405.797 14.488 405.801 14.656 cv
405.797 14.949 405.891 15.18 406.078 15.344 cv
406.262 15.512 406.52 15.594 406.848 15.594 cv
407.121 15.594 407.371 15.523 407.605 15.383 cv
407.832 15.242 408.07 15.039 408.313 14.766 cv
cp
f
418.82 16.535 mo
418.816 16.598 418.805 16.645 418.781 16.68 cv
418.754 16.723 418.707 16.754 418.648 16.777 cv
418.582 16.801 418.5 16.816 418.395 16.832 cv
418.289 16.84 418.156 16.848 418.004 16.848 cv
417.832 16.848 417.699 16.84 417.598 16.832 cv
417.492 16.816 417.406 16.801 417.344 16.777 cv
417.277 16.754 417.23 16.723 417.203 16.68 cv
417.172 16.645 417.156 16.598 417.16 16.535 cv
417.16 15.766 li
416.801 16.152 416.426 16.449 416.035 16.66 cv
415.637 16.871 415.203 16.977 414.73 16.98 cv
414.195 16.977 413.746 16.875 413.383 16.672 cv
413.016 16.469 412.719 16.195 412.488 15.844 cv
412.254 15.5 412.086 15.094 411.984 14.625 cv
411.883 14.164 411.832 13.672 411.832 13.152 cv
411.832 12.539 411.895 11.984 412.027 11.488 cv
412.156 10.996 412.352 10.574 412.609 10.227 cv
412.863 9.87903 413.18 9.61298 413.559 9.422 cv
413.938 9.23798 414.375 9.14502 414.871 9.14099 cv
415.258 9.14502 415.609 9.22302 415.93 9.37903 cv
416.242 9.539 416.559 9.77002 416.871 10.074 cv
416.871 6.31201 li
416.871 6.26202 416.883 6.21503 416.914 6.172 cv
416.938 6.133 416.992 6.09802 417.07 6.06598 cv
417.145 6.039 417.242 6.02002 417.371 6 cv
417.492 5.98798 417.652 5.97998 417.848 5.97699 cv
418.039 5.97998 418.195 5.98798 418.32 6 cv
418.441 6.02002 418.543 6.039 418.617 6.06598 cv
418.688 6.09802 418.738 6.133 418.773 6.172 cv
418.801 6.21503 418.816 6.26202 418.82 6.31201 cv
cp
416.871 11.891 mo
416.59 11.539 416.32 11.27 416.066 11.082 cv
415.805 10.895 415.535 10.801 415.258 10.801 cv
415.004 10.801 414.785 10.867 414.602 10.992 cv
414.414 11.125 414.266 11.293 414.156 11.504 cv
414.043 11.715 413.961 11.953 413.906 12.215 cv
413.852 12.48 413.824 12.75 413.824 13.02 cv
413.824 13.316 413.848 13.598 413.895 13.871 cv
413.941 14.148 414.016 14.395 414.125 14.609 cv
414.227 14.824 414.371 14.996 414.551 15.125 cv
414.727 15.258 414.949 15.324 415.219 15.32 cv
415.352 15.324 415.48 15.305 415.613 15.262 cv
415.738 15.227 415.871 15.164 416.004 15.07 cv
416.137 14.984 416.273 14.867 416.414 14.723 cv
416.555 14.582 416.707 14.406 416.871 14.199 cv
cp
f
425.645 14.57 mo
425.641 14.969 425.566 15.316 425.422 15.617 cv
425.273 15.918 425.066 16.172 424.797 16.371 cv
424.523 16.578 424.203 16.727 423.836 16.828 cv
423.469 16.926 423.066 16.977 422.637 16.98 cv
422.371 16.977 422.125 16.957 421.891 16.922 cv
421.656 16.879 421.445 16.832 421.258 16.773 cv
421.07 16.715 420.914 16.652 420.789 16.59 cv
420.664 16.527 420.57 16.469 420.516 16.414 cv
420.457 16.359 420.414 16.277 420.387 16.16 cv
420.352 16.047 420.336 15.871 420.34 15.641 cv
420.336 15.492 420.344 15.371 420.355 15.277 cv
420.363 15.187 420.379 15.117 420.402 15.059 cv
420.422 15.008 420.445 14.969 420.48 14.949 cv
420.508 14.934 420.547 14.926 420.594 14.922 cv
420.648 14.926 420.734 14.957 420.848 15.02 cv
420.957 15.086 421.094 15.16 421.266 15.234 cv
421.43 15.316 421.625 15.387 421.844 15.453 cv
422.063 15.523 422.313 15.559 422.598 15.555 cv
422.773 15.559 422.93 15.539 423.07 15.5 cv
423.203 15.465 423.324 15.414 423.43 15.344 cv
423.527 15.277 423.602 15.191 423.656 15.086 cv
423.703 14.984 423.73 14.863 423.734 14.727 cv
423.73 14.57 423.684 14.437 423.59 14.328 cv
423.496 14.219 423.367 14.121 423.211 14.035 cv
423.047 13.953 422.867 13.875 422.672 13.801 cv
422.469 13.73 422.266 13.652 422.055 13.559 cv
421.844 13.473 421.637 13.371 421.441 13.254 cv
421.238 13.145 421.059 13.004 420.902 12.836 cv
420.738 12.672 420.613 12.473 420.52 12.234 cv
420.426 12.004 420.379 11.723 420.379 11.391 cv
420.379 11.062 420.441 10.758 420.57 10.477 cv
420.699 10.203 420.887 9.96503 421.133 9.76599 cv
421.375 9.57001 421.672 9.41803 422.023 9.30499 cv
422.371 9.19897 422.766 9.14502 423.207 9.14099 cv
423.422 9.14502 423.633 9.15997 423.84 9.18701 cv
424.043 9.22302 424.23 9.26202 424.398 9.30499 cv
424.563 9.35498 424.703 9.40601 424.82 9.45697 cv
424.934 9.51599 425.016 9.56201 425.066 9.59802 cv
425.113 9.64099 425.148 9.67999 425.172 9.71503 cv
425.191 9.758 425.203 9.80499 425.215 9.85498 cv
425.223 9.90997 425.234 9.97699 425.242 10.055 cv
425.25 10.141 425.254 10.238 425.254 10.355 cv
425.254 10.496 425.25 10.613 425.242 10.699 cv
425.234 10.793 425.219 10.863 425.203 10.91 cv
425.184 10.965 425.16 11 425.133 11.016 cv
425.098 11.039 425.063 11.047 425.023 11.043 cv
424.973 11.047 424.898 11.02 424.805 10.961 cv
424.703 10.91 424.582 10.852 424.434 10.785 cv
424.285 10.727 424.113 10.668 423.918 10.609 cv
423.723 10.559 423.5 10.531 423.254 10.527 cv
423.074 10.531 422.922 10.551 422.793 10.582 cv
422.66 10.621 422.551 10.672 422.473 10.738 cv
422.387 10.809 422.324 10.887 422.285 10.977 cv
422.238 11.07 422.219 11.168 422.223 11.27 cv
422.219 11.43 422.27 11.566 422.371 11.672 cv
422.469 11.785 422.598 11.879 422.762 11.961 cv
422.922 12.047 423.105 12.125 423.313 12.195 cv
423.516 12.27 423.723 12.352 423.934 12.434 cv
424.141 12.523 424.348 12.621 424.559 12.734 cv
424.762 12.848 424.945 12.988 425.105 13.152 cv
425.266 13.32 425.395 13.52 425.496 13.75 cv
425.59 13.984 425.641 14.258 425.645 14.57 cv
cp
f
434.406 12.883 mo
434.402 13.184 434.375 13.395 434.32 13.512 cv
434.262 13.637 434.172 13.695 434.047 13.691 cv
430.805 13.691 li
430.676 13.695 430.582 13.633 430.527 13.508 cv
430.465 13.387 430.438 13.18 430.441 12.883 cv
430.438 12.594 430.465 12.387 430.527 12.266 cv
430.582 12.148 430.676 12.09 430.805 12.086 cv
434.047 12.086 li
434.109 12.09 434.16 12.102 434.207 12.125 cv
434.246 12.152 434.285 12.199 434.32 12.258 cv
434.348 12.324 434.371 12.406 434.387 12.508 cv
434.398 12.613 434.402 12.738 434.406 12.883 cv
cp
f
447.078 16.535 mo
447.078 16.598 447.066 16.645 447.047 16.68 cv
447.027 16.723 446.98 16.754 446.902 16.777 cv
446.824 16.801 446.707 16.816 446.559 16.832 cv
446.402 16.84 446.199 16.848 445.941 16.848 cv
445.723 16.848 445.547 16.84 445.418 16.832 cv
445.289 16.816 445.188 16.801 445.113 16.773 cv
445.035 16.746 444.98 16.711 444.953 16.664 cv
444.918 16.625 444.895 16.57 444.875 16.504 cv
443.969 14.254 li
443.859 14 443.754 13.773 443.652 13.574 cv
443.543 13.379 443.43 13.215 443.305 13.082 cv
443.176 12.953 443.027 12.852 442.863 12.781 cv
442.695 12.715 442.504 12.684 442.289 12.68 cv
441.648 12.68 li
441.648 16.52 li
441.645 16.574 441.629 16.621 441.598 16.66 cv
441.563 16.703 441.508 16.738 441.43 16.762 cv
441.352 16.789 441.246 16.809 441.117 16.824 cv
440.984 16.84 440.82 16.848 440.621 16.848 cv
440.422 16.848 440.254 16.84 440.125 16.824 cv
439.988 16.809 439.883 16.789 439.809 16.762 cv
439.727 16.738 439.672 16.703 439.645 16.66 cv
439.609 16.621 439.594 16.574 439.598 16.52 cv
439.598 7.36298 li
439.594 7.13702 439.652 6.97302 439.773 6.867 cv
439.887 6.77002 440.031 6.71899 440.207 6.71503 cv
442.816 6.71503 li
443.078 6.71899 443.297 6.72302 443.473 6.72998 cv
443.641 6.742 443.797 6.75403 443.941 6.77002 cv
444.344 6.828 444.707 6.92999 445.031 7.06598 cv
445.355 7.211 445.633 7.39502 445.859 7.617 cv
446.086 7.84802 446.258 8.11298 446.379 8.422 cv
446.496 8.72998 446.555 9.086 446.559 9.48401 cv
446.555 9.82397 446.512 10.133 446.43 10.406 cv
446.34 10.687 446.215 10.934 446.051 11.152 cv
445.883 11.371 445.676 11.562 445.434 11.719 cv
445.188 11.883 444.91 12.012 444.602 12.109 cv
444.75 12.184 444.895 12.273 445.027 12.375 cv
445.16 12.484 445.281 12.609 445.398 12.754 cv
445.512 12.902 445.625 13.07 445.73 13.258 cv
445.832 13.449 445.934 13.664 446.035 13.902 cv
446.887 15.891 li
446.961 16.09 447.012 16.23 447.039 16.32 cv
447.063 16.414 447.078 16.488 447.078 16.535 cv
cp
444.438 9.69501 mo
444.434 9.36298 444.359 9.08197 444.211 8.85199 cv
444.059 8.625 443.813 8.46503 443.473 8.367 cv
443.367 8.34399 443.25 8.32001 443.117 8.30499 cv
442.984 8.289 442.801 8.28101 442.566 8.28101 cv
441.648 8.28101 li
441.648 11.145 li
442.691 11.145 li
442.98 11.148 443.238 11.113 443.457 11.039 cv
443.676 10.973 443.855 10.871 444 10.742 cv
444.145 10.617 444.254 10.465 444.328 10.285 cv
444.398 10.109 444.434 9.914 444.438 9.69501 cv
cp
f
454.664 12.859 mo
454.66 13.098 454.609 13.273 454.504 13.387 cv
454.395 13.504 454.246 13.562 454.066 13.559 cv
449.832 13.559 li
449.828 13.859 449.863 14.129 449.938 14.367 cv
450.004 14.609 450.117 14.812 450.273 14.98 cv
450.426 15.152 450.621 15.281 450.863 15.367 cv
451.102 15.457 451.391 15.5 451.734 15.5 cv
452.074 15.5 452.375 15.477 452.637 15.426 cv
452.895 15.379 453.121 15.324 453.313 15.262 cv
453.5 15.203 453.656 15.148 453.785 15.098 cv
453.906 15.051 454.008 15.027 454.09 15.023 cv
454.133 15.027 454.172 15.035 454.207 15.051 cv
454.234 15.07 454.262 15.102 454.281 15.148 cv
454.301 15.195 454.313 15.262 454.324 15.348 cv
454.328 15.434 454.332 15.543 454.336 15.672 cv
454.332 15.789 454.332 15.887 454.328 15.965 cv
454.32 16.047 454.313 16.113 454.305 16.168 cv
454.293 16.227 454.277 16.277 454.258 16.312 cv
454.238 16.355 454.211 16.391 454.18 16.426 cv
454.145 16.465 454.051 16.516 453.902 16.574 cv
453.746 16.641 453.555 16.703 453.324 16.758 cv
453.086 16.82 452.816 16.867 452.52 16.914 cv
452.215 16.953 451.895 16.977 451.555 16.98 cv
450.934 16.977 450.391 16.902 449.93 16.746 cv
449.461 16.594 449.074 16.355 448.766 16.039 cv
448.449 15.723 448.215 15.324 448.066 14.84 cv
447.91 14.359 447.836 13.793 447.84 13.137 cv
447.836 12.523 447.914 11.965 448.078 11.469 cv
448.234 10.973 448.469 10.555 448.781 10.207 cv
449.086 9.86298 449.461 9.59802 449.898 9.414 cv
450.336 9.23401 450.828 9.14502 451.383 9.14099 cv
451.961 9.14502 452.461 9.22998 452.875 9.39801 cv
453.289 9.57397 453.625 9.81201 453.891 10.113 cv
454.152 10.418 454.348 10.777 454.477 11.191 cv
454.598 11.609 454.66 12.059 454.664 12.547 cv
cp
452.762 12.297 mo
452.773 11.746 452.664 11.312 452.43 11 cv
452.195 10.687 451.828 10.531 451.336 10.527 cv
451.086 10.531 450.871 10.578 450.688 10.668 cv
450.5 10.766 450.348 10.891 450.227 11.047 cv
450.102 11.207 450.008 11.395 449.945 11.609 cv
449.879 11.824 449.84 12.055 449.832 12.297 cv
cp
f
467.328 16.535 mo
467.324 16.59 467.309 16.633 467.281 16.672 cv
467.246 16.711 467.195 16.746 467.125 16.77 cv
467.051 16.797 466.949 16.812 466.828 16.828 cv
466.703 16.84 466.547 16.848 466.355 16.848 cv
466.156 16.848 465.996 16.84 465.871 16.828 cv
465.746 16.812 465.645 16.797 465.57 16.77 cv
465.492 16.746 465.441 16.711 465.414 16.672 cv
465.387 16.633 465.371 16.59 465.375 16.535 cv
465.375 12.414 li
465.371 12.184 465.352 11.969 465.309 11.773 cv
465.262 11.582 465.191 11.418 465.105 11.281 cv
465.012 11.145 464.898 11.039 464.762 10.961 cv
464.621 10.887 464.457 10.848 464.266 10.848 cv
464.031 10.848 463.793 10.941 463.555 11.121 cv
463.316 11.305 463.059 11.566 462.777 11.914 cv
462.777 16.535 li
462.777 16.59 462.762 16.633 462.73 16.672 cv
462.699 16.711 462.645 16.746 462.57 16.77 cv
462.492 16.797 462.391 16.812 462.27 16.828 cv
462.145 16.84 461.992 16.848 461.805 16.848 cv
461.609 16.848 461.449 16.84 461.328 16.828 cv
461.199 16.812 461.098 16.797 461.027 16.77 cv
460.949 16.746 460.898 16.711 460.867 16.672 cv
460.836 16.633 460.82 16.59 460.82 16.535 cv
460.82 12.414 li
460.82 12.184 460.797 11.969 460.754 11.773 cv
460.711 11.582 460.645 11.418 460.559 11.281 cv
460.465 11.145 460.352 11.039 460.215 10.961 cv
460.07 10.887 459.906 10.848 459.723 10.848 cv
459.48 10.848 459.242 10.941 459.004 11.121 cv
458.766 11.305 458.508 11.566 458.234 11.914 cv
458.234 16.535 li
458.23 16.59 458.215 16.633 458.188 16.672 cv
458.152 16.711 458.098 16.746 458.027 16.77 cv
457.949 16.797 457.852 16.812 457.727 16.828 cv
457.602 16.84 457.441 16.848 457.254 16.848 cv
457.059 16.848 456.902 16.84 456.777 16.828 cv
456.652 16.812 456.551 16.797 456.477 16.77 cv
456.398 16.746 456.344 16.711 456.316 16.672 cv
456.281 16.633 456.266 16.59 456.27 16.535 cv
456.27 9.586 li
456.266 9.539 456.281 9.492 456.309 9.44897 cv
456.332 9.414 456.379 9.383 456.449 9.35199 cv
456.516 9.328 456.602 9.30902 456.711 9.29303 cv
456.816 9.28497 456.949 9.27698 457.113 9.27301 cv
457.277 9.27698 457.414 9.28497 457.523 9.29303 cv
457.629 9.30902 457.715 9.328 457.777 9.35199 cv
457.836 9.383 457.879 9.414 457.906 9.44897 cv
457.93 9.492 457.941 9.539 457.945 9.586 cv
457.945 10.387 li
458.328 9.97699 458.711 9.664 459.094 9.453 cv
459.473 9.24597 459.875 9.14502 460.293 9.14099 cv
460.578 9.14502 460.832 9.172 461.063 9.22998 cv
461.289 9.29303 461.496 9.37903 461.676 9.48798 cv
461.855 9.60199 462.008 9.73798 462.137 9.89099 cv
462.266 10.047 462.375 10.219 462.465 10.41 cv
462.672 10.187 462.875 9.99597 463.078 9.836 cv
463.273 9.67603 463.473 9.54303 463.668 9.44098 cv
463.863 9.34003 464.059 9.26599 464.254 9.21503 cv
464.449 9.16803 464.648 9.14502 464.852 9.14099 cv
465.313 9.14502 465.699 9.22302 466.02 9.375 cv
466.332 9.53497 466.59 9.74597 466.785 10.012 cv
466.98 10.281 467.117 10.594 467.203 10.949 cv
467.281 11.309 467.324 11.687 467.328 12.086 cv
cp
f
476.277 12.988 mo
476.273 13.586 476.195 14.129 476.043 14.613 cv
475.883 15.105 475.648 15.523 475.332 15.875 cv
475.016 16.227 474.617 16.5 474.141 16.691 cv
473.66 16.883 473.102 16.977 472.465 16.98 cv
471.844 16.977 471.305 16.895 470.852 16.723 cv
470.391 16.555 470.012 16.305 469.715 15.977 cv
469.41 15.652 469.188 15.25 469.043 14.77 cv
468.898 14.293 468.828 13.746 468.828 13.129 cv
468.828 12.539 468.906 12 469.063 11.508 cv
469.219 11.02 469.457 10.598 469.777 10.246 cv
470.094 9.89801 470.488 9.625 470.965 9.42999 cv
471.438 9.23798 471.996 9.14502 472.637 9.14099 cv
473.262 9.14502 473.801 9.22699 474.258 9.39502 cv
474.715 9.56598 475.094 9.81598 475.391 10.141 cv
475.688 10.469 475.91 10.871 476.059 11.348 cv
476.203 11.828 476.273 12.375 476.277 12.988 cv
cp
474.258 13.066 mo
474.254 12.73 474.227 12.414 474.176 12.121 cv
474.117 11.836 474.023 11.586 473.898 11.371 cv
473.766 11.16 473.594 10.992 473.383 10.871 cv
473.164 10.754 472.895 10.695 472.566 10.691 cv
472.277 10.695 472.023 10.75 471.805 10.852 cv
471.586 10.961 471.406 11.117 471.266 11.32 cv
471.125 11.527 471.02 11.773 470.949 12.059 cv
470.879 12.352 470.844 12.68 470.844 13.043 cv
470.844 13.391 470.871 13.707 470.93 13.992 cv
470.984 14.285 471.078 14.535 471.207 14.746 cv
471.332 14.961 471.504 15.125 471.727 15.238 cv
471.941 15.359 472.211 15.418 472.535 15.414 cv
472.828 15.418 473.086 15.363 473.309 15.254 cv
473.523 15.148 473.703 14.996 473.844 14.789 cv
473.984 14.59 474.086 14.344 474.156 14.055 cv
474.219 13.77 474.254 13.441 474.258 13.066 cv
cp
f
481.98 15.852 mo
481.98 16.078 481.965 16.254 481.938 16.375 cv
481.906 16.5 481.867 16.586 481.824 16.633 cv
481.773 16.684 481.707 16.727 481.617 16.766 cv
481.523 16.805 481.414 16.836 481.297 16.867 cv
481.172 16.891 481.039 16.914 480.898 16.934 cv
480.754 16.945 480.613 16.953 480.469 16.957 cv
480.078 16.953 479.738 16.902 479.453 16.809 cv
479.168 16.707 478.934 16.559 478.746 16.352 cv
478.559 16.148 478.418 15.891 478.332 15.578 cv
478.238 15.27 478.195 14.898 478.199 14.469 cv
478.199 10.91 li
477.367 10.91 li
477.266 10.914 477.191 10.852 477.141 10.727 cv
477.086 10.605 477.059 10.402 477.063 10.113 cv
477.059 9.96503 477.066 9.836 477.082 9.73401 cv
477.094 9.633 477.113 9.55103 477.141 9.48798 cv
477.164 9.42999 477.195 9.38702 477.238 9.35901 cv
477.273 9.336 477.32 9.32397 477.375 9.32001 cv
478.199 9.32001 li
478.199 7.77002 li
478.195 7.72302 478.211 7.67603 478.242 7.62903 cv
478.27 7.59003 478.32 7.55499 478.398 7.52301 cv
478.473 7.5 478.574 7.47699 478.703 7.461 cv
478.828 7.44897 478.984 7.44501 479.176 7.44098 cv
479.363 7.44501 479.523 7.44897 479.652 7.461 cv
479.777 7.47699 479.879 7.5 479.953 7.52301 cv
480.023 7.55499 480.074 7.59003 480.109 7.62903 cv
480.137 7.67603 480.152 7.72302 480.156 7.77002 cv
480.156 9.32001 li
481.668 9.32001 li
481.719 9.32397 481.766 9.336 481.805 9.35901 cv
481.844 9.38702 481.875 9.42999 481.902 9.48798 cv
481.926 9.55103 481.945 9.633 481.961 9.73401 cv
481.973 9.836 481.98 9.96503 481.98 10.113 cv
481.98 10.402 481.953 10.605 481.902 10.727 cv
481.848 10.852 481.773 10.914 481.676 10.91 cv
480.156 10.91 li
480.156 14.176 li
480.152 14.555 480.211 14.84 480.336 15.027 cv
480.453 15.219 480.668 15.312 480.973 15.312 cv
481.074 15.312 481.168 15.305 481.254 15.285 cv
481.336 15.27 481.41 15.25 481.477 15.223 cv
481.539 15.203 481.594 15.18 481.641 15.16 cv
481.684 15.145 481.723 15.137 481.762 15.133 cv
481.789 15.137 481.82 15.145 481.852 15.16 cv
481.879 15.18 481.898 15.219 481.918 15.27 cv
481.93 15.328 481.945 15.402 481.961 15.492 cv
481.973 15.59 481.98 15.707 481.98 15.852 cv
cp
f
489.57 12.859 mo
489.566 13.098 489.516 13.273 489.41 13.387 cv
489.301 13.504 489.152 13.562 488.973 13.559 cv
484.738 13.559 li
484.734 13.859 484.77 14.129 484.844 14.367 cv
484.91 14.609 485.023 14.812 485.18 14.98 cv
485.332 15.152 485.527 15.281 485.77 15.367 cv
486.008 15.457 486.297 15.5 486.641 15.5 cv
486.98 15.5 487.281 15.477 487.543 15.426 cv
487.801 15.379 488.027 15.324 488.219 15.262 cv
488.406 15.203 488.563 15.148 488.691 15.098 cv
488.813 15.051 488.914 15.027 488.996 15.023 cv
489.039 15.027 489.078 15.035 489.113 15.051 cv
489.141 15.07 489.168 15.102 489.188 15.148 cv
489.207 15.195 489.219 15.262 489.23 15.348 cv
489.234 15.434 489.238 15.543 489.242 15.672 cv
489.238 15.789 489.238 15.887 489.234 15.965 cv
489.227 16.047 489.219 16.113 489.211 16.168 cv
489.199 16.227 489.184 16.277 489.164 16.312 cv
489.145 16.355 489.117 16.391 489.086 16.426 cv
489.051 16.465 488.957 16.516 488.809 16.574 cv
488.652 16.641 488.461 16.703 488.23 16.758 cv
487.992 16.82 487.723 16.867 487.426 16.914 cv
487.121 16.953 486.801 16.977 486.461 16.98 cv
485.84 16.977 485.297 16.902 484.836 16.746 cv
484.367 16.594 483.98 16.355 483.672 16.039 cv
483.355 15.723 483.121 15.324 482.973 14.84 cv
482.816 14.359 482.742 13.793 482.746 13.137 cv
482.742 12.523 482.82 11.965 482.984 11.469 cv
483.141 10.973 483.375 10.555 483.688 10.207 cv
483.992 9.86298 484.367 9.59802 484.805 9.414 cv
485.242 9.23401 485.734 9.14502 486.289 9.14099 cv
486.867 9.14502 487.367 9.22998 487.781 9.39801 cv
488.195 9.57397 488.531 9.81201 488.797 10.113 cv
489.059 10.418 489.254 10.777 489.383 11.191 cv
489.504 11.609 489.566 12.059 489.57 12.547 cv
cp
487.668 12.297 mo
487.68 11.746 487.57 11.312 487.336 11 cv
487.102 10.687 486.734 10.531 486.242 10.527 cv
485.992 10.531 485.777 10.578 485.594 10.668 cv
485.406 10.766 485.254 10.891 485.133 11.047 cv
485.008 11.207 484.914 11.395 484.852 11.609 cv
484.785 11.824 484.746 12.055 484.738 12.297 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
