%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-EightThreads-Remote.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 2:28:02 p.m.
%%BoundingBox: 0 0 641 531
%%HiResBoundingBox: 0 0 640.4401 530.5201
%%CropBox: 0 0 640.4401 530.5201
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -530.52 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 530.52 li
640.44 530.52 li
640.44 0 li
cp
clp
0 0 mo
640.441 0 li
640.441 530.52 li
0 530.52 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
57.359 474.961 mo
624.719 474.961 li
57.359 449.16 mo
624.719 449.16 li
57.359 423.359 mo
624.719 423.359 li
57.359 397.68 mo
624.719 397.68 li
57.359 371.879 mo
624.719 371.879 li
57.359 346.078 mo
624.719 346.078 li
57.359 320.398 mo
624.719 320.398 li
57.359 294.602 mo
624.719 294.602 li
57.359 268.801 mo
624.719 268.801 li
57.359 243.121 mo
624.719 243.121 li
57.359 217.32 mo
624.719 217.32 li
57.359 191.641 mo
624.719 191.641 li
57.359 165.84 mo
624.719 165.84 li
57.359 140.039 mo
624.719 140.039 li
57.359 114.359 mo
624.719 114.359 li
57.359 88.559 mo
624.719 88.559 li
57.359 62.762 mo
624.719 62.762 li
57.359 37.078 mo
624.719 37.078 li
.140414 .108034 .108034 0 cmyk
@
57.359 462 mo
624.719 462 li
57.359 436.32 mo
624.719 436.32 li
57.359 410.52 mo
624.719 410.52 li
57.359 384.719 mo
624.719 384.719 li
57.359 359.039 mo
624.719 359.039 li
57.359 333.238 mo
624.719 333.238 li
57.359 307.441 mo
624.719 307.441 li
57.359 281.762 mo
624.719 281.762 li
57.359 255.961 mo
624.719 255.961 li
57.359 230.16 mo
624.719 230.16 li
57.359 204.48 mo
624.719 204.48 li
57.359 178.68 mo
624.719 178.68 li
57.359 153 mo
624.719 153 li
57.359 127.199 mo
624.719 127.199 li
57.359 101.398 mo
624.719 101.398 li
57.359 75.719 mo
624.719 75.719 li
57.359 49.922 mo
624.719 49.922 li
57.359 24.121 mo
624.719 24.121 li
.328344 .284215 .278569 .000915541 cmyk
@
92.762 24.121 mo
92.762 487.801 li
163.68 24.121 mo
163.68 487.801 li
234.602 24.121 mo
234.602 487.801 li
305.52 24.121 mo
305.52 487.801 li
376.441 24.121 mo
376.441 487.801 li
447.359 24.121 mo
447.359 487.801 li
518.281 24.121 mo
518.281 487.801 li
589.32 24.121 mo
589.32 487.801 li
.178592 .148898 .143923 0 cmyk
@
57.359 24.121 mo
57.359 487.801 li
128.281 24.121 mo
128.281 487.801 li
199.199 24.121 mo
199.199 487.801 li
270.121 24.121 mo
270.121 487.801 li
341.039 24.121 mo
341.039 487.801 li
411.961 24.121 mo
411.961 487.801 li
482.879 24.121 mo
482.879 487.801 li
553.801 24.121 mo
553.801 487.801 li
624.719 24.121 mo
624.719 487.801 li
.328344 .284215 .278569 .000915541 cmyk
@
37.199 478.441 mo
44.281 478.441 li
44.281 495.601 li
37.199 495.601 li
cp
0 0 0 0 cmyk
ef
37.199 452.762 mo
44.281 452.762 li
44.281 469.801 li
37.199 469.801 li
cp
ef
37.199 426.961 mo
44.281 426.961 li
44.281 444 li
37.199 444 li
cp
ef
37.199 401.16 mo
44.281 401.16 li
44.281 418.32 li
37.199 418.32 li
cp
ef
37.199 375.48 mo
44.281 375.48 li
44.281 392.519 li
37.199 392.519 li
cp
ef
30.121 349.68 mo
44.281 349.68 li
44.281 366.719 li
30.121 366.719 li
cp
ef
30.121 323.879 mo
44.281 323.879 li
44.281 341.039 li
30.121 341.039 li
cp
ef
30.121 298.199 mo
44.281 298.199 li
44.281 315.238 li
30.121 315.238 li
cp
ef
30.121 272.398 mo
44.281 272.398 li
44.281 289.558 li
30.121 289.558 li
cp
ef
30.121 246.602 mo
44.281 246.602 li
44.281 263.762 li
30.121 263.762 li
cp
ef
30.121 220.922 mo
44.281 220.922 li
44.281 237.961 li
30.121 237.961 li
cp
ef
30.121 195.121 mo
44.281 195.121 li
44.281 212.281 li
30.121 212.281 li
cp
ef
30.121 169.441 mo
44.281 169.441 li
44.281 186.48 li
30.121 186.48 li
cp
ef
30.121 143.641 mo
44.281 143.641 li
44.281 160.68 li
30.121 160.68 li
cp
ef
30.121 117.84 mo
44.281 117.84 li
44.281 135 li
30.121 135 li
cp
ef
30.121 92.16 mo
44.281 92.16 li
44.281 109.199 li
30.121 109.199 li
cp
ef
30.121 66.359 mo
44.281 66.359 li
44.281 83.398 li
30.121 83.398 li
cp
ef
30.121 40.559 mo
44.281 40.559 li
44.281 57.719 li
30.121 57.719 li
cp
ef
30.121 14.879 mo
44.281 14.879 li
44.281 31.922 li
30.121 31.922 li
cp
ef
.96 lw
57.359 487.801 mo
624.719 487.801 li
.367803 .29575 .300999 .00198367 cmyk
@
57.359 487.801 mo
57.359 492.238 li
128.281 487.801 mo
128.281 492.238 li
199.199 487.801 mo
199.199 492.238 li
270.121 487.801 mo
270.121 492.238 li
341.039 487.801 mo
341.039 492.238 li
411.961 487.801 mo
411.961 492.238 li
482.879 487.801 mo
482.879 492.238 li
553.801 487.801 mo
553.801 492.238 li
624.719 487.801 mo
624.719 492.238 li
@
gsave
57.238 24.121 mo
625.441 24.121 li
625.441 488.519 li
57.238 488.519 li
cp
clp
1 lc
57.359 458.641 mo
128.281 468.121 li
199.199 475.078 li
270.121 479.16 li
341.039 479.16 li
411.961 475.68 li
482.879 480.602 li
553.801 480.359 li
624.719 480.84 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
52.199 453.469 mo
62.16 453.469 li
62.16 463.43 li
52.199 463.43 li
cp
.62768 .285466 0 0 cmyk
@
123.121 462.949 mo
133.078 462.949 li
133.078 472.91 li
123.121 472.91 li
cp
@
194.039 470.031 mo
204 470.031 li
204 479.988 li
194.039 479.988 li
cp
@
264.961 474.109 mo
274.922 474.109 li
274.922 484.07 li
264.961 484.07 li
cp
@
335.879 473.988 mo
345.84 473.988 li
345.84 483.949 li
335.879 483.949 li
cp
@
406.801 470.512 mo
416.762 470.512 li
416.762 480.469 li
406.801 480.469 li
cp
@
477.719 475.551 mo
487.68 475.551 li
487.68 485.512 li
477.719 485.512 li
cp
@
548.641 475.309 mo
558.602 475.309 li
558.602 485.27 li
548.641 485.27 li
cp
@
619.68 475.672 mo
629.641 475.672 li
629.641 485.629 li
619.68 485.629 li
cp
@
gsave
57.238 24.121 mo
625.441 24.121 li
625.441 488.519 li
57.238 488.519 li
cp
clp
.96 lw
1 lc
57.359 409.68 mo
128.281 442.441 li
199.199 450.238 li
270.121 456 li
341.039 468.961 li
411.961 460.922 li
482.879 463.199 li
553.801 466.078 li
624.719 472.199 li
.466651 0 .889799 0 cmyk
@
grestore
52.199 404.629 mo
62.16 404.629 li
62.16 414.59 li
52.199 414.59 li
cp
.466651 0 .889799 0 cmyk
@
123.121 437.27 mo
133.078 437.27 li
133.078 447.231 li
123.121 447.231 li
cp
@
194.039 445.07 mo
204 445.07 li
204 455.031 li
194.039 455.031 li
cp
@
264.961 450.828 mo
274.922 450.828 li
274.922 460.789 li
264.961 460.789 li
cp
@
335.879 463.789 mo
345.84 463.789 li
345.84 473.75 li
335.879 473.75 li
cp
@
406.801 455.75 mo
416.762 455.75 li
416.762 465.711 li
406.801 465.711 li
cp
@
477.719 458.148 mo
487.68 458.148 li
487.68 468.109 li
477.719 468.109 li
cp
@
548.641 461.031 mo
558.602 461.031 li
558.602 470.988 li
548.641 470.988 li
cp
@
619.68 467.148 mo
629.641 467.148 li
629.641 477.109 li
619.68 477.109 li
cp
@
gsave
57.238 24.121 mo
625.441 24.121 li
625.441 488.519 li
57.238 488.519 li
cp
clp
.96 lw
1 lc
57.359 230.281 mo
128.281 317.039 li
199.199 360.48 li
270.121 387.238 li
341.039 421.32 li
411.961 402.961 li
482.879 405.359 li
553.801 409.922 li
624.719 423.719 li
0 .990631 1 .000396735 cmyk
@
grestore
52.199 225.23 mo
62.16 225.23 li
62.16 235.191 li
52.199 235.191 li
cp
0 .990631 1 .000396735 cmyk
@
123.121 311.871 mo
133.078 311.871 li
133.078 321.828 li
123.121 321.828 li
cp
@
194.039 355.43 mo
204 355.43 li
204 365.391 li
194.039 365.391 li
cp
@
264.961 382.07 mo
274.922 382.07 li
274.922 392.031 li
264.961 392.031 li
cp
@
335.879 416.27 mo
345.84 416.27 li
345.84 426.231 li
335.879 426.231 li
cp
@
406.801 397.789 mo
416.762 397.789 li
416.762 407.75 li
406.801 407.75 li
cp
@
477.719 400.191 mo
487.68 400.191 li
487.68 410.148 li
477.719 410.148 li
cp
@
548.641 404.75 mo
558.602 404.75 li
558.602 414.711 li
548.641 414.711 li
cp
@
619.68 418.551 mo
629.641 418.551 li
629.641 428.512 li
619.68 428.512 li
cp
@
gsave
57.238 24.121 mo
625.441 24.121 li
625.441 488.519 li
57.238 488.519 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
57.359 315.719 mo
128.281 392.16 li
199.199 407.641 li
270.121 420.121 li
341.039 427.078 li
411.961 446.281 li
482.879 445.559 li
553.801 448.68 li
624.719 449.039 li
@
grestore
52.199 310.551 mo
62.16 310.551 li
62.16 320.512 li
52.199 320.512 li
cp
@
123.121 386.988 mo
133.078 386.988 li
133.078 396.949 li
123.121 396.949 li
cp
@
194.039 402.469 mo
204 402.469 li
204 412.43 li
194.039 412.43 li
cp
@
264.961 414.949 mo
274.922 414.949 li
274.922 424.91 li
264.961 424.91 li
cp
@
335.879 421.91 mo
345.84 421.91 li
345.84 431.871 li
335.879 431.871 li
cp
@
406.801 441.23 mo
416.762 441.23 li
416.762 451.191 li
406.801 451.191 li
cp
@
477.719 440.512 mo
487.68 440.512 li
487.68 450.469 li
477.719 450.469 li
cp
@
548.641 443.512 mo
558.602 443.512 li
558.602 453.469 li
548.641 453.469 li
cp
@
619.68 443.871 mo
629.641 443.871 li
629.641 453.828 li
619.68 453.828 li
cp
@
gsave
57.238 24.121 mo
625.441 24.121 li
625.441 488.519 li
57.238 488.519 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
57.359 44.879 mo
128.281 230.281 li
199.199 257.52 li
270.121 289.922 li
341.039 332.281 li
411.961 321.359 li
482.879 338.762 li
553.801 336.359 li
624.719 352.078 li
.62768 .285466 0 0 cmyk
@
grestore
52.199 39.711 mo
62.16 39.711 li
62.16 49.672 li
52.199 49.672 li
cp
.62768 .285466 0 0 cmyk
@
123.121 225.109 mo
133.078 225.109 li
133.078 235.07 li
123.121 235.07 li
cp
@
194.039 252.469 mo
204 252.469 li
204 262.43 li
194.039 262.43 li
cp
@
264.961 284.871 mo
274.922 284.871 li
274.922 294.828 li
264.961 294.828 li
cp
@
335.879 327.109 mo
345.84 327.109 li
345.84 337.07 li
335.879 337.07 li
cp
@
406.801 316.309 mo
416.762 316.309 li
416.762 326.27 li
406.801 326.27 li
cp
@
477.719 333.711 mo
487.68 333.711 li
487.68 343.672 li
477.719 343.672 li
cp
@
548.641 331.309 mo
558.602 331.309 li
558.602 341.27 li
548.641 341.27 li
cp
@
619.68 346.91 mo
629.641 346.91 li
629.641 356.871 li
619.68 356.871 li
cp
@
gsave
57.238 24.121 mo
625.441 24.121 li
625.441 488.519 li
57.238 488.519 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
57.359 183.48 mo
128.281 280.801 li
199.199 307.32 li
270.121 373.68 li
341.039 356.762 li
411.961 381.121 li
482.879 420.238 li
553.801 381.961 li
624.719 426 li
.466651 0 .889799 0 cmyk
@
grestore
52.68 178.789 mo
61.68 178.789 li
61.68 187.789 li
52.68 187.789 li
cp
.466651 0 .889799 0 cmyk
@
123.602 276.23 mo
132.602 276.23 li
132.602 285.23 li
123.602 285.23 li
cp
@
194.52 302.629 mo
203.52 302.629 li
203.52 311.629 li
194.52 311.629 li
cp
@
265.441 369.109 mo
274.441 369.109 li
274.441 378.109 li
265.441 378.109 li
cp
@
336.359 352.07 mo
345.359 352.07 li
345.359 361.07 li
336.359 361.07 li
cp
@
407.281 376.551 mo
416.281 376.551 li
416.281 385.551 li
407.281 385.551 li
cp
@
478.199 415.551 mo
487.199 415.551 li
487.199 424.551 li
478.199 424.551 li
cp
@
549.121 377.27 mo
558.121 377.27 li
558.121 386.27 li
549.121 386.27 li
cp
@
620.16 421.43 mo
629.16 421.43 li
629.16 430.43 li
620.16 430.43 li
cp
@
37.219 478.465 mo
44.317 478.465 li
44.317 495.555 li
37.219 495.555 li
cp
0 0 0 0 cmyk
ef
43.879 487.422 mo
43.875 488.105 43.824 488.727 43.719 489.289 cv
43.609 489.852 43.43 490.336 43.184 490.738 cv
42.93 491.145 42.602 491.457 42.203 491.676 cv
41.797 491.898 41.305 492.008 40.719 492.008 cv
40.16 492.008 39.688 491.91 39.309 491.711 cv
38.926 491.516 38.621 491.223 38.387 490.836 cv
38.152 490.449 37.984 489.977 37.891 489.41 cv
37.789 488.848 37.742 488.199 37.742 487.465 cv
37.742 486.793 37.797 486.172 37.906 485.605 cv
38.016 485.043 38.191 484.559 38.441 484.152 cv
38.684 483.75 39.008 483.437 39.414 483.211 cv
39.813 482.992 40.309 482.879 40.898 482.879 cv
41.457 482.879 41.93 482.98 42.313 483.176 cv
42.695 483.379 43 483.672 43.234 484.055 cv
43.465 484.445 43.633 484.918 43.73 485.48 cv
43.828 486.043 43.875 486.691 43.879 487.422 cv
cp
42.672 487.504 mo
42.668 487.062 42.652 486.664 42.625 486.312 cv
42.59 485.961 42.543 485.652 42.484 485.383 cv
42.418 485.113 42.34 484.883 42.242 484.687 cv
42.145 484.496 42.027 484.336 41.891 484.207 cv
41.75 484.082 41.59 483.988 41.418 483.93 cv
41.238 483.875 41.043 483.848 40.828 483.844 cv
40.438 483.848 40.121 483.937 39.883 484.121 cv
39.637 484.305 39.445 484.559 39.309 484.875 cv
39.168 485.195 39.074 485.566 39.023 485.996 cv
38.973 486.426 38.949 486.891 38.949 487.383 cv
38.949 488.047 38.98 488.609 39.051 489.07 cv
39.117 489.539 39.227 489.918 39.379 490.207 cv
39.523 490.504 39.715 490.715 39.945 490.844 cv
40.176 490.98 40.457 491.047 40.789 491.043 cv
41.043 491.047 41.266 491.008 41.461 490.922 cv
41.652 490.844 41.82 490.723 41.961 490.566 cv
42.102 490.414 42.215 490.23 42.309 490.016 cv
42.395 489.801 42.469 489.562 42.527 489.301 cv
42.578 489.043 42.617 488.762 42.641 488.457 cv
42.66 488.152 42.668 487.836 42.672 487.504 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.219 452.707 mo
44.317 452.707 li
44.317 469.797 li
37.219 469.797 li
cp
0 0 0 0 cmyk
ef
43.586 465.598 mo
43.582 465.684 43.578 465.758 43.566 465.82 cv
43.555 465.887 43.539 465.941 43.52 465.98 cv
43.496 466.027 43.469 466.059 43.438 466.074 cv
43.402 466.098 43.363 466.105 43.324 466.105 cv
38.422 466.105 li
38.359 466.105 38.301 466.098 38.254 466.082 cv
38.203 466.066 38.164 466.043 38.129 466.004 cv
38.094 465.973 38.066 465.918 38.055 465.848 cv
38.035 465.777 38.027 465.691 38.031 465.59 cv
38.027 465.5 38.031 465.422 38.039 465.352 cv
38.043 465.285 38.059 465.227 38.086 465.172 cv
38.109 465.121 38.141 465.066 38.176 465.012 cv
38.211 464.961 38.254 464.906 38.313 464.844 cv
40.086 463.02 li
40.496 462.602 40.824 462.227 41.074 461.891 cv
41.32 461.562 41.512 461.258 41.645 460.98 cv
41.777 460.707 41.863 460.457 41.91 460.23 cv
41.949 460.008 41.973 459.797 41.973 459.602 cv
41.973 459.406 41.938 459.223 41.871 459.043 cv
41.805 458.871 41.711 458.715 41.586 458.578 cv
41.461 458.449 41.305 458.344 41.117 458.262 cv
40.93 458.187 40.711 458.148 40.465 458.145 cv
40.176 458.148 39.918 458.187 39.691 458.262 cv
39.461 458.344 39.262 458.43 39.09 458.516 cv
38.918 458.609 38.773 458.691 38.656 458.77 cv
38.539 458.848 38.453 458.887 38.402 458.887 cv
38.367 458.887 38.336 458.879 38.313 458.859 cv
38.281 458.844 38.262 458.812 38.246 458.77 cv
38.23 458.73 38.215 458.676 38.207 458.605 cv
38.195 458.539 38.191 458.457 38.195 458.359 cv
38.191 458.293 38.195 458.234 38.203 458.184 cv
38.207 458.133 38.215 458.09 38.227 458.051 cv
38.234 458.016 38.25 457.98 38.27 457.949 cv
38.289 457.918 38.324 457.879 38.383 457.828 cv
38.434 457.781 38.527 457.715 38.664 457.633 cv
38.797 457.551 38.969 457.473 39.172 457.391 cv
39.375 457.312 39.598 457.242 39.844 457.187 cv
40.086 457.133 40.344 457.105 40.617 457.105 cv
41.043 457.105 41.418 457.168 41.742 457.289 cv
42.063 457.41 42.328 457.574 42.543 457.785 cv
42.754 457.996 42.914 458.242 43.02 458.516 cv
43.125 458.797 43.18 459.094 43.18 459.406 cv
43.18 459.695 43.152 459.977 43.102 460.254 cv
43.051 460.539 42.945 460.844 42.785 461.168 cv
42.621 461.496 42.387 461.859 42.082 462.258 cv
41.773 462.66 41.367 463.121 40.863 463.637 cv
39.457 465.105 li
43.316 465.105 li
43.348 465.109 43.383 465.121 43.422 465.137 cv
43.453 465.16 43.484 465.191 43.512 465.23 cv
43.535 465.273 43.555 465.324 43.566 465.383 cv
43.578 465.449 43.582 465.52 43.586 465.598 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.219 426.949 mo
44.317 426.949 li
44.317 444.039 li
37.219 444.039 li
cp
0 0 0 0 cmyk
ef
43.961 437.828 mo
43.957 437.98 43.934 438.102 43.891 438.187 cv
43.844 438.277 43.781 438.32 43.699 438.316 cv
42.699 438.316 li
42.699 440.18 li
42.699 440.219 42.688 440.25 42.672 440.273 cv
42.648 440.301 42.617 440.32 42.574 440.34 cv
42.523 440.355 42.461 440.367 42.391 440.379 cv
42.313 440.387 42.219 440.391 42.102 440.395 cv
41.984 440.391 41.887 440.387 41.816 440.379 cv
41.738 440.367 41.68 440.355 41.637 440.34 cv
41.59 440.32 41.559 440.301 41.543 440.273 cv
41.523 440.25 41.516 440.219 41.52 440.18 cv
41.52 438.316 li
37.891 438.316 li
37.832 438.32 37.789 438.312 37.754 438.297 cv
37.719 438.285 37.684 438.258 37.656 438.219 cv
37.625 438.184 37.605 438.133 37.594 438.062 cv
37.582 437.996 37.578 437.906 37.578 437.793 cv
37.578 437.711 37.578 437.633 37.586 437.562 cv
37.586 437.492 37.598 437.43 37.613 437.375 cv
37.625 437.32 37.641 437.266 37.668 437.211 cv
37.688 437.156 37.715 437.102 37.75 437.039 cv
40.91 431.652 li
40.93 431.617 40.965 431.586 41.012 431.559 cv
41.055 431.531 41.109 431.508 41.184 431.488 cv
41.25 431.473 41.336 431.461 41.441 431.449 cv
41.543 431.445 41.664 431.441 41.805 431.437 cv
41.953 431.441 42.09 431.445 42.207 431.457 cv
42.32 431.469 42.41 431.484 42.484 431.5 cv
42.551 431.52 42.605 431.543 42.645 431.574 cv
42.68 431.605 42.699 431.641 42.699 431.68 cv
42.699 437.344 li
43.699 437.344 li
43.773 437.348 43.836 437.387 43.887 437.465 cv
43.934 437.547 43.957 437.668 43.961 437.828 cv
cp
41.52 432.477 mo
41.508 432.477 li
38.656 437.344 li
41.52 437.344 li
cp
.629114 .553033 .543389 .289647 cmyk
f
37.219 401.191 mo
44.317 401.191 li
44.317 418.281 li
37.219 418.281 li
cp
0 0 0 0 cmyk
ef
43.813 411.73 mo
43.813 412.121 43.75 412.5 43.633 412.859 cv
43.508 413.227 43.324 413.543 43.082 413.816 cv
42.832 414.094 42.52 414.316 42.145 414.48 cv
41.762 414.648 41.316 414.73 40.801 414.73 cv
40.43 414.73 40.102 414.687 39.82 414.594 cv
39.535 414.508 39.289 414.375 39.078 414.203 cv
38.867 414.035 38.691 413.828 38.555 413.582 cv
38.414 413.336 38.301 413.055 38.219 412.738 cv
38.133 412.426 38.074 412.082 38.039 411.703 cv
38 411.332 37.98 410.93 37.984 410.496 cv
37.98 410.117 38 409.734 38.043 409.344 cv
38.082 408.961 38.156 408.586 38.262 408.219 cv
38.367 407.859 38.512 407.52 38.691 407.203 cv
38.871 406.887 39.098 406.609 39.371 406.375 cv
39.645 406.141 39.969 405.953 40.348 405.812 cv
40.727 405.676 41.168 405.609 41.672 405.605 cv
41.84 405.609 42.012 405.617 42.184 405.637 cv
42.355 405.66 42.516 405.691 42.664 405.723 cv
42.813 405.762 42.934 405.797 43.035 405.836 cv
43.133 405.875 43.199 405.91 43.234 405.934 cv
43.262 405.961 43.285 405.988 43.305 406.016 cv
43.32 406.047 43.336 406.078 43.344 406.113 cv
43.352 406.148 43.355 406.187 43.363 406.23 cv
43.363 406.273 43.367 406.328 43.371 406.391 cv
43.367 406.477 43.367 406.547 43.367 406.602 cv
43.363 406.664 43.352 406.711 43.34 406.746 cv
43.32 406.785 43.301 406.812 43.277 406.828 cv
43.25 406.848 43.219 406.855 43.18 406.855 cv
43.129 406.855 43.059 406.84 42.973 406.809 cv
42.883 406.777 42.777 406.742 42.656 406.699 cv
42.531 406.664 42.383 406.629 42.207 406.594 cv
42.031 406.566 41.828 406.551 41.598 406.547 cv
41.168 406.551 40.801 406.637 40.496 406.809 cv
40.191 406.98 39.941 407.215 39.746 407.508 cv
39.551 407.801 39.406 408.141 39.316 408.523 cv
39.219 408.914 39.164 409.316 39.156 409.734 cv
39.273 409.668 39.41 409.602 39.559 409.531 cv
39.707 409.465 39.867 409.402 40.043 409.344 cv
40.219 409.293 40.406 409.246 40.602 409.211 cv
40.797 409.18 41.008 409.164 41.234 409.16 cv
41.711 409.164 42.113 409.23 42.445 409.355 cv
42.773 409.488 43.039 409.668 43.246 409.898 cv
43.445 410.129 43.59 410.398 43.68 410.711 cv
43.766 411.023 43.813 411.363 43.813 411.73 cv
cp
42.617 411.84 mo
42.617 411.578 42.59 411.336 42.539 411.117 cv
42.484 410.902 42.395 410.719 42.273 410.562 cv
42.148 410.414 41.984 410.297 41.781 410.215 cv
41.57 410.133 41.316 410.09 41.02 410.09 cv
40.848 410.09 40.68 410.105 40.512 410.137 cv
40.34 410.168 40.176 410.211 40.02 410.258 cv
39.859 410.312 39.711 410.375 39.57 410.445 cv
39.426 410.52 39.293 410.594 39.176 410.672 cv
39.172 411.266 39.211 411.762 39.289 412.156 cv
39.363 412.555 39.473 412.871 39.617 413.109 cv
39.762 413.352 39.941 413.523 40.156 413.625 cv
40.371 413.73 40.621 413.781 40.91 413.777 cv
41.199 413.781 41.453 413.727 41.668 413.613 cv
41.883 413.508 42.059 413.359 42.203 413.172 cv
42.344 412.988 42.449 412.781 42.516 412.551 cv
42.582 412.32 42.617 412.086 42.617 411.84 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
37.219 375.43 mo
44.317 375.43 li
44.317 392.52 li
37.219 392.52 li
cp
0 0 0 0 cmyk
ef
43.789 386.543 mo
43.789 386.93 43.719 387.273 43.582 387.57 cv
43.445 387.875 43.25 388.125 42.992 388.328 cv
42.734 388.535 42.414 388.691 42.035 388.793 cv
41.652 388.898 41.219 388.949 40.734 388.949 cv
40.273 388.949 39.863 388.902 39.504 388.809 cv
39.141 388.715 38.836 388.574 38.586 388.383 cv
38.336 388.199 38.145 387.969 38.012 387.691 cv
37.879 387.418 37.813 387.105 37.813 386.75 cv
37.813 386.477 37.855 386.219 37.949 385.984 cv
38.035 385.75 38.168 385.535 38.344 385.34 cv
38.512 385.145 38.723 384.961 38.977 384.785 cv
39.227 384.617 39.512 384.453 39.828 384.297 cv
39.555 384.156 39.313 384.008 39.102 383.848 cv
38.891 383.691 38.711 383.52 38.566 383.332 cv
38.418 383.148 38.309 382.953 38.234 382.742 cv
38.156 382.535 38.117 382.305 38.121 382.055 cv
38.117 381.746 38.172 381.453 38.289 381.18 cv
38.398 380.91 38.57 380.676 38.797 380.473 cv
39.023 380.273 39.309 380.113 39.66 379.996 cv
40.004 379.879 40.414 379.82 40.883 379.82 cv
41.328 379.82 41.715 379.875 42.043 379.98 cv
42.371 380.09 42.641 380.234 42.852 380.418 cv
43.063 380.605 43.219 380.824 43.324 381.074 cv
43.422 381.324 43.473 381.594 43.477 381.883 cv
43.473 382.117 43.434 382.344 43.363 382.555 cv
43.285 382.773 43.176 382.977 43.027 383.164 cv
42.879 383.359 42.699 383.539 42.488 383.703 cv
42.277 383.875 42.035 384.031 41.762 384.172 cv
42.082 384.336 42.367 384.5 42.625 384.668 cv
42.875 384.836 43.09 385.016 43.266 385.211 cv
43.434 385.406 43.563 385.613 43.656 385.828 cv
43.742 386.047 43.789 386.285 43.789 386.543 cv
cp
42.309 381.992 mo
42.305 381.805 42.273 381.629 42.207 381.473 cv
42.141 381.316 42.043 381.184 41.918 381.074 cv
41.789 380.965 41.629 380.883 41.441 380.824 cv
41.246 380.77 41.031 380.742 40.793 380.738 cv
40.297 380.742 39.922 380.852 39.672 381.074 cv
39.414 381.301 39.289 381.609 39.293 381.992 cv
39.289 382.172 39.32 382.336 39.383 382.488 cv
39.445 382.645 39.539 382.789 39.672 382.926 cv
39.797 383.062 39.961 383.195 40.164 383.324 cv
40.359 383.457 40.598 383.594 40.875 383.734 cv
41.336 383.5 41.691 383.238 41.938 382.945 cv
42.184 382.66 42.305 382.344 42.309 381.992 cv
cp
42.598 386.668 mo
42.594 386.461 42.555 386.27 42.48 386.098 cv
42.398 385.93 42.281 385.77 42.125 385.617 cv
41.969 385.469 41.77 385.324 41.535 385.184 cv
41.297 385.047 41.027 384.902 40.719 384.75 cv
40.43 384.895 40.176 385.035 39.961 385.176 cv
39.742 385.316 39.563 385.465 39.426 385.613 cv
39.285 385.77 39.18 385.926 39.109 386.09 cv
39.035 386.258 39 386.441 39.004 386.641 cv
39 387.086 39.152 387.43 39.461 387.668 cv
39.762 387.914 40.215 388.035 40.82 388.031 cv
41.402 388.035 41.848 387.914 42.148 387.664 cv
42.445 387.422 42.594 387.09 42.598 386.668 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
30.129 349.68 mo
44.32 349.68 li
44.32 366.77 li
30.129 366.77 li
cp
0 0 0 0 cmyk
ef
36.496 362.605 mo
36.492 362.695 36.484 362.766 36.473 362.824 cv
36.457 362.887 36.438 362.937 36.418 362.969 cv
36.395 363.008 36.371 363.031 36.34 363.047 cv
36.309 363.062 36.277 363.07 36.25 363.07 cv
31.613 363.07 li
31.578 363.07 31.551 363.062 31.523 363.047 cv
31.496 363.031 31.469 363.008 31.445 362.969 cv
31.418 362.937 31.398 362.887 31.387 362.824 cv
31.371 362.766 31.363 362.695 31.367 362.605 cv
31.363 362.527 31.371 362.453 31.387 362.391 cv
31.398 362.332 31.414 362.285 31.438 362.246 cv
31.453 362.211 31.48 362.18 31.512 362.156 cv
31.543 362.137 31.574 362.129 31.613 362.125 cv
33.465 362.125 li
33.465 355.379 li
31.75 356.398 li
31.66 356.449 31.59 356.477 31.543 356.484 cv
31.488 356.492 31.445 356.484 31.414 356.453 cv
31.379 356.426 31.359 356.375 31.348 356.305 cv
31.336 356.238 31.328 356.152 31.332 356.043 cv
31.328 355.969 31.332 355.902 31.344 355.844 cv
31.348 355.793 31.359 355.746 31.375 355.707 cv
31.387 355.672 31.406 355.641 31.43 355.613 cv
31.453 355.586 31.484 355.559 31.531 355.531 cv
33.574 354.219 li
33.59 354.207 33.609 354.195 33.641 354.187 cv
33.664 354.18 33.699 354.172 33.746 354.16 cv
33.785 354.152 33.836 354.145 33.891 354.141 cv
33.945 354.141 34.012 354.141 34.098 354.137 cv
34.203 354.141 34.297 354.145 34.371 354.152 cv
34.441 354.16 34.496 354.176 34.543 354.191 cv
34.582 354.211 34.609 354.23 34.625 354.254 cv
34.633 354.281 34.641 354.305 34.645 354.328 cv
34.645 362.125 li
36.25 362.125 li
36.285 362.129 36.32 362.137 36.352 362.156 cv
36.383 362.18 36.406 362.211 36.43 362.246 cv
36.445 362.285 36.461 362.332 36.477 362.391 cv
36.484 362.453 36.492 362.527 36.496 362.605 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.848 358.613 mo
43.844 359.297 43.793 359.918 43.688 360.48 cv
43.578 361.043 43.398 361.527 43.152 361.93 cv
42.898 362.336 42.57 362.648 42.172 362.867 cv
41.766 363.09 41.273 363.199 40.688 363.199 cv
40.129 363.199 39.656 363.102 39.277 362.902 cv
38.895 362.707 38.59 362.414 38.355 362.027 cv
38.121 361.641 37.953 361.168 37.859 360.602 cv
37.758 360.039 37.711 359.391 37.711 358.656 cv
37.711 357.984 37.766 357.363 37.875 356.797 cv
37.984 356.234 38.16 355.75 38.41 355.344 cv
38.652 354.941 38.977 354.629 39.383 354.402 cv
39.781 354.184 40.277 354.07 40.867 354.07 cv
41.426 354.07 41.898 354.172 42.281 354.367 cv
42.664 354.57 42.969 354.863 43.203 355.246 cv
43.434 355.637 43.602 356.109 43.699 356.672 cv
43.797 357.234 43.844 357.883 43.848 358.613 cv
cp
42.641 358.695 mo
42.637 358.254 42.621 357.855 42.594 357.504 cv
42.559 357.152 42.512 356.844 42.453 356.574 cv
42.387 356.305 42.309 356.074 42.211 355.879 cv
42.113 355.687 41.996 355.527 41.859 355.398 cv
41.719 355.273 41.559 355.18 41.387 355.121 cv
41.207 355.066 41.012 355.039 40.797 355.035 cv
40.406 355.039 40.09 355.129 39.852 355.312 cv
39.605 355.496 39.414 355.75 39.277 356.066 cv
39.137 356.387 39.043 356.758 38.992 357.187 cv
38.941 357.617 38.918 358.082 38.918 358.574 cv
38.918 359.238 38.949 359.801 39.02 360.262 cv
39.086 360.73 39.195 361.109 39.348 361.398 cv
39.492 361.695 39.684 361.906 39.914 362.035 cv
40.145 362.172 40.426 362.238 40.758 362.234 cv
41.012 362.238 41.234 362.199 41.43 362.113 cv
41.621 362.035 41.789 361.914 41.93 361.758 cv
42.07 361.605 42.184 361.422 42.277 361.207 cv
42.363 360.992 42.438 360.754 42.496 360.492 cv
42.547 360.234 42.586 359.953 42.609 359.648 cv
42.629 359.344 42.637 359.027 42.641 358.695 cv
cp
f
30.129 323.922 mo
44.32 323.922 li
44.32 341.012 li
30.129 341.012 li
cp
0 0 0 0 cmyk
ef
36.496 336.836 mo
36.492 336.926 36.484 336.996 36.473 337.055 cv
36.457 337.117 36.438 337.168 36.418 337.199 cv
36.395 337.238 36.371 337.262 36.34 337.277 cv
36.309 337.293 36.277 337.301 36.25 337.301 cv
31.613 337.301 li
31.578 337.301 31.551 337.293 31.523 337.277 cv
31.496 337.262 31.469 337.238 31.445 337.199 cv
31.418 337.168 31.398 337.117 31.387 337.055 cv
31.371 336.996 31.363 336.926 31.367 336.836 cv
31.363 336.758 31.371 336.684 31.387 336.621 cv
31.398 336.562 31.414 336.516 31.438 336.477 cv
31.453 336.441 31.48 336.41 31.512 336.387 cv
31.543 336.367 31.574 336.359 31.613 336.355 cv
33.465 336.355 li
33.465 329.609 li
31.75 330.629 li
31.66 330.68 31.59 330.707 31.543 330.715 cv
31.488 330.723 31.445 330.715 31.414 330.684 cv
31.379 330.656 31.359 330.605 31.348 330.535 cv
31.336 330.469 31.328 330.383 31.332 330.273 cv
31.328 330.199 31.332 330.133 31.344 330.074 cv
31.348 330.023 31.359 329.977 31.375 329.937 cv
31.387 329.902 31.406 329.871 31.43 329.844 cv
31.453 329.816 31.484 329.789 31.531 329.762 cv
33.574 328.449 li
33.59 328.437 33.609 328.426 33.641 328.418 cv
33.664 328.41 33.699 328.402 33.746 328.391 cv
33.785 328.383 33.836 328.375 33.891 328.371 cv
33.945 328.371 34.012 328.371 34.098 328.367 cv
34.203 328.371 34.297 328.375 34.371 328.383 cv
34.441 328.391 34.496 328.406 34.543 328.422 cv
34.582 328.441 34.609 328.461 34.625 328.484 cv
34.633 328.512 34.641 328.535 34.645 328.559 cv
34.645 336.355 li
36.25 336.355 li
36.285 336.359 36.32 336.367 36.352 336.387 cv
36.383 336.41 36.406 336.441 36.43 336.477 cv
36.445 336.516 36.461 336.562 36.477 336.621 cv
36.484 336.684 36.492 336.758 36.496 336.836 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.555 336.793 mo
43.551 336.879 43.547 336.953 43.535 337.016 cv
43.523 337.082 43.508 337.137 43.488 337.176 cv
43.465 337.223 43.438 337.254 43.406 337.27 cv
43.371 337.293 43.332 337.301 43.293 337.301 cv
38.391 337.301 li
38.328 337.301 38.27 337.293 38.223 337.277 cv
38.172 337.262 38.133 337.238 38.098 337.199 cv
38.063 337.168 38.035 337.113 38.023 337.043 cv
38.004 336.973 37.996 336.887 38 336.785 cv
37.996 336.695 38 336.617 38.008 336.547 cv
38.012 336.48 38.027 336.422 38.055 336.367 cv
38.078 336.316 38.109 336.262 38.145 336.207 cv
38.18 336.156 38.223 336.102 38.281 336.039 cv
40.055 334.215 li
40.465 333.797 40.793 333.422 41.043 333.086 cv
41.289 332.758 41.48 332.453 41.613 332.176 cv
41.746 331.902 41.832 331.652 41.879 331.426 cv
41.918 331.203 41.941 330.992 41.941 330.797 cv
41.941 330.602 41.906 330.418 41.84 330.238 cv
41.773 330.066 41.68 329.91 41.555 329.773 cv
41.43 329.645 41.273 329.539 41.086 329.457 cv
40.898 329.383 40.68 329.344 40.434 329.34 cv
40.145 329.344 39.887 329.383 39.66 329.457 cv
39.43 329.539 39.23 329.625 39.059 329.711 cv
38.887 329.805 38.742 329.887 38.625 329.965 cv
38.508 330.043 38.422 330.082 38.371 330.082 cv
38.336 330.082 38.305 330.074 38.281 330.055 cv
38.25 330.039 38.23 330.008 38.215 329.965 cv
38.199 329.926 38.184 329.871 38.176 329.801 cv
38.164 329.734 38.16 329.652 38.164 329.555 cv
38.16 329.488 38.164 329.43 38.172 329.379 cv
38.176 329.328 38.184 329.285 38.195 329.246 cv
38.203 329.211 38.219 329.176 38.238 329.145 cv
38.258 329.113 38.293 329.074 38.352 329.023 cv
38.402 328.977 38.496 328.91 38.633 328.828 cv
38.766 328.746 38.938 328.668 39.141 328.586 cv
39.344 328.508 39.566 328.437 39.813 328.383 cv
40.055 328.328 40.313 328.301 40.586 328.301 cv
41.012 328.301 41.387 328.363 41.711 328.484 cv
42.031 328.605 42.297 328.77 42.512 328.98 cv
42.723 329.191 42.883 329.437 42.988 329.711 cv
43.094 329.992 43.148 330.289 43.148 330.602 cv
43.148 330.891 43.121 331.172 43.07 331.449 cv
43.02 331.734 42.914 332.039 42.754 332.363 cv
42.59 332.691 42.355 333.055 42.051 333.453 cv
41.742 333.855 41.336 334.316 40.832 334.832 cv
39.426 336.301 li
43.285 336.301 li
43.316 336.305 43.352 336.316 43.391 336.332 cv
43.422 336.355 43.453 336.387 43.48 336.426 cv
43.504 336.469 43.523 336.52 43.535 336.578 cv
43.547 336.645 43.551 336.715 43.555 336.793 cv
cp
f
30.129 298.16 mo
44.32 298.16 li
44.32 315.25 li
30.129 315.25 li
cp
0 0 0 0 cmyk
ef
36.496 311.074 mo
36.492 311.164 36.484 311.234 36.473 311.293 cv
36.457 311.355 36.438 311.406 36.418 311.437 cv
36.395 311.477 36.371 311.5 36.34 311.516 cv
36.309 311.531 36.277 311.539 36.25 311.539 cv
31.613 311.539 li
31.578 311.539 31.551 311.531 31.523 311.516 cv
31.496 311.5 31.469 311.477 31.445 311.437 cv
31.418 311.406 31.398 311.355 31.387 311.293 cv
31.371 311.234 31.363 311.164 31.367 311.074 cv
31.363 310.996 31.371 310.922 31.387 310.859 cv
31.398 310.801 31.414 310.754 31.438 310.715 cv
31.453 310.68 31.48 310.648 31.512 310.625 cv
31.543 310.605 31.574 310.598 31.613 310.594 cv
33.465 310.594 li
33.465 303.848 li
31.75 304.867 li
31.66 304.918 31.59 304.945 31.543 304.953 cv
31.488 304.961 31.445 304.953 31.414 304.922 cv
31.379 304.895 31.359 304.844 31.348 304.773 cv
31.336 304.707 31.328 304.621 31.332 304.512 cv
31.328 304.437 31.332 304.371 31.344 304.312 cv
31.348 304.262 31.359 304.215 31.375 304.176 cv
31.387 304.141 31.406 304.109 31.43 304.082 cv
31.453 304.055 31.484 304.027 31.531 304 cv
33.574 302.687 li
33.59 302.676 33.609 302.664 33.641 302.656 cv
33.664 302.648 33.699 302.641 33.746 302.629 cv
33.785 302.621 33.836 302.613 33.891 302.609 cv
33.945 302.609 34.012 302.609 34.098 302.605 cv
34.203 302.609 34.297 302.613 34.371 302.621 cv
34.441 302.629 34.496 302.645 34.543 302.66 cv
34.582 302.68 34.609 302.699 34.625 302.723 cv
34.633 302.75 34.641 302.773 34.645 302.797 cv
34.645 310.594 li
36.25 310.594 li
36.285 310.598 36.32 310.605 36.352 310.625 cv
36.383 310.648 36.406 310.68 36.43 310.715 cv
36.445 310.754 36.461 310.801 36.477 310.859 cv
36.484 310.922 36.492 310.996 36.496 311.074 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.93 309.016 mo
43.926 309.168 43.902 309.289 43.859 309.375 cv
43.813 309.465 43.75 309.508 43.668 309.504 cv
42.668 309.504 li
42.668 311.367 li
42.668 311.406 42.656 311.437 42.641 311.461 cv
42.617 311.488 42.586 311.508 42.543 311.527 cv
42.492 311.543 42.43 311.555 42.359 311.566 cv
42.281 311.574 42.188 311.578 42.07 311.582 cv
41.953 311.578 41.855 311.574 41.785 311.566 cv
41.707 311.555 41.648 311.543 41.605 311.527 cv
41.559 311.508 41.527 311.488 41.512 311.461 cv
41.492 311.437 41.484 311.406 41.488 311.367 cv
41.488 309.504 li
37.859 309.504 li
37.801 309.508 37.758 309.5 37.723 309.484 cv
37.688 309.473 37.652 309.445 37.625 309.406 cv
37.594 309.371 37.574 309.32 37.563 309.25 cv
37.551 309.184 37.547 309.094 37.547 308.98 cv
37.547 308.898 37.547 308.82 37.555 308.75 cv
37.555 308.68 37.566 308.617 37.582 308.562 cv
37.594 308.508 37.609 308.453 37.637 308.398 cv
37.656 308.344 37.684 308.289 37.719 308.227 cv
40.879 302.84 li
40.898 302.805 40.934 302.773 40.98 302.746 cv
41.023 302.719 41.078 302.695 41.152 302.676 cv
41.219 302.66 41.305 302.648 41.41 302.637 cv
41.512 302.633 41.633 302.629 41.773 302.625 cv
41.922 302.629 42.059 302.633 42.176 302.645 cv
42.289 302.656 42.379 302.672 42.453 302.687 cv
42.52 302.707 42.574 302.73 42.613 302.762 cv
42.648 302.793 42.668 302.828 42.668 302.867 cv
42.668 308.531 li
43.668 308.531 li
43.742 308.535 43.805 308.574 43.855 308.652 cv
43.902 308.734 43.926 308.855 43.93 309.016 cv
cp
41.488 303.664 mo
41.477 303.664 li
38.625 308.531 li
41.488 308.531 li
cp
f
30.129 272.41 mo
44.32 272.41 li
44.32 289.5 li
30.129 289.5 li
cp
0 0 0 0 cmyk
ef
36.496 285.324 mo
36.492 285.414 36.484 285.484 36.473 285.543 cv
36.457 285.605 36.438 285.656 36.418 285.687 cv
36.395 285.727 36.371 285.75 36.34 285.766 cv
36.309 285.781 36.277 285.789 36.25 285.789 cv
31.613 285.789 li
31.578 285.789 31.551 285.781 31.523 285.766 cv
31.496 285.75 31.469 285.727 31.445 285.687 cv
31.418 285.656 31.398 285.605 31.387 285.543 cv
31.371 285.484 31.363 285.414 31.367 285.324 cv
31.363 285.246 31.371 285.172 31.387 285.109 cv
31.398 285.051 31.414 285.004 31.438 284.965 cv
31.453 284.93 31.48 284.898 31.512 284.875 cv
31.543 284.855 31.574 284.848 31.613 284.844 cv
33.465 284.844 li
33.465 278.098 li
31.75 279.117 li
31.66 279.168 31.59 279.195 31.543 279.203 cv
31.488 279.211 31.445 279.203 31.414 279.172 cv
31.379 279.145 31.359 279.094 31.348 279.023 cv
31.336 278.957 31.328 278.871 31.332 278.762 cv
31.328 278.687 31.332 278.621 31.344 278.562 cv
31.348 278.512 31.359 278.465 31.375 278.426 cv
31.387 278.391 31.406 278.359 31.43 278.332 cv
31.453 278.305 31.484 278.277 31.531 278.25 cv
33.574 276.937 li
33.59 276.926 33.609 276.914 33.641 276.906 cv
33.664 276.898 33.699 276.891 33.746 276.879 cv
33.785 276.871 33.836 276.863 33.891 276.859 cv
33.945 276.859 34.012 276.859 34.098 276.855 cv
34.203 276.859 34.297 276.863 34.371 276.871 cv
34.441 276.879 34.496 276.895 34.543 276.91 cv
34.582 276.93 34.609 276.949 34.625 276.973 cv
34.633 277 34.641 277.023 34.645 277.047 cv
34.645 284.844 li
36.25 284.844 li
36.285 284.848 36.32 284.855 36.352 284.875 cv
36.383 284.898 36.406 284.93 36.43 284.965 cv
36.445 285.004 36.461 285.051 36.477 285.109 cv
36.484 285.172 36.492 285.246 36.496 285.324 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.781 282.918 mo
43.781 283.309 43.719 283.687 43.602 284.047 cv
43.477 284.414 43.293 284.73 43.051 285.004 cv
42.801 285.281 42.488 285.504 42.113 285.668 cv
41.73 285.836 41.285 285.918 40.77 285.918 cv
40.398 285.918 40.07 285.875 39.789 285.781 cv
39.504 285.695 39.258 285.562 39.047 285.391 cv
38.836 285.223 38.66 285.016 38.523 284.77 cv
38.383 284.523 38.27 284.242 38.188 283.926 cv
38.102 283.613 38.043 283.27 38.008 282.891 cv
37.969 282.52 37.949 282.117 37.953 281.684 cv
37.949 281.305 37.969 280.922 38.012 280.531 cv
38.051 280.148 38.125 279.773 38.23 279.406 cv
38.336 279.047 38.48 278.707 38.66 278.391 cv
38.84 278.074 39.066 277.797 39.34 277.562 cv
39.613 277.328 39.938 277.141 40.316 277 cv
40.695 276.863 41.137 276.797 41.641 276.793 cv
41.809 276.797 41.98 276.805 42.152 276.824 cv
42.324 276.848 42.484 276.879 42.633 276.91 cv
42.781 276.949 42.902 276.984 43.004 277.023 cv
43.102 277.062 43.168 277.098 43.203 277.121 cv
43.23 277.148 43.254 277.176 43.273 277.203 cv
43.289 277.234 43.305 277.266 43.313 277.301 cv
43.32 277.336 43.324 277.375 43.332 277.418 cv
43.332 277.461 43.336 277.516 43.34 277.578 cv
43.336 277.664 43.336 277.734 43.336 277.789 cv
43.332 277.852 43.32 277.898 43.309 277.934 cv
43.289 277.973 43.27 278 43.246 278.016 cv
43.219 278.035 43.188 278.043 43.148 278.043 cv
43.098 278.043 43.027 278.027 42.941 277.996 cv
42.852 277.965 42.746 277.93 42.625 277.887 cv
42.5 277.852 42.352 277.816 42.176 277.781 cv
42 277.754 41.797 277.738 41.566 277.734 cv
41.137 277.738 40.77 277.824 40.465 277.996 cv
40.16 278.168 39.91 278.402 39.715 278.695 cv
39.52 278.988 39.375 279.328 39.285 279.711 cv
39.188 280.102 39.133 280.504 39.125 280.922 cv
39.242 280.855 39.379 280.789 39.527 280.719 cv
39.676 280.652 39.836 280.59 40.012 280.531 cv
40.188 280.48 40.375 280.434 40.57 280.398 cv
40.766 280.367 40.977 280.352 41.203 280.348 cv
41.68 280.352 42.082 280.418 42.414 280.543 cv
42.742 280.676 43.008 280.855 43.215 281.086 cv
43.414 281.316 43.559 281.586 43.648 281.898 cv
43.734 282.211 43.781 282.551 43.781 282.918 cv
cp
42.586 283.027 mo
42.586 282.766 42.559 282.523 42.508 282.305 cv
42.453 282.09 42.363 281.906 42.242 281.75 cv
42.117 281.602 41.953 281.484 41.75 281.402 cv
41.539 281.32 41.285 281.277 40.988 281.277 cv
40.816 281.277 40.648 281.293 40.48 281.324 cv
40.309 281.355 40.145 281.398 39.988 281.445 cv
39.828 281.5 39.68 281.562 39.539 281.633 cv
39.395 281.707 39.262 281.781 39.145 281.859 cv
39.141 282.453 39.18 282.949 39.258 283.344 cv
39.332 283.742 39.441 284.059 39.586 284.297 cv
39.73 284.539 39.91 284.711 40.125 284.812 cv
40.34 284.918 40.59 284.969 40.879 284.965 cv
41.168 284.969 41.422 284.914 41.637 284.801 cv
41.852 284.695 42.027 284.547 42.172 284.359 cv
42.313 284.176 42.418 283.969 42.484 283.738 cv
42.551 283.508 42.586 283.273 42.586 283.027 cv
cp
f
30.129 246.648 mo
44.32 246.648 li
44.32 263.738 li
30.129 263.738 li
cp
0 0 0 0 cmyk
ef
36.496 259.555 mo
36.492 259.645 36.484 259.715 36.473 259.773 cv
36.457 259.836 36.438 259.887 36.418 259.918 cv
36.395 259.957 36.371 259.98 36.34 259.996 cv
36.309 260.012 36.277 260.02 36.25 260.02 cv
31.613 260.02 li
31.578 260.02 31.551 260.012 31.523 259.996 cv
31.496 259.98 31.469 259.957 31.445 259.918 cv
31.418 259.887 31.398 259.836 31.387 259.773 cv
31.371 259.715 31.363 259.645 31.367 259.555 cv
31.363 259.477 31.371 259.402 31.387 259.34 cv
31.398 259.281 31.414 259.234 31.438 259.195 cv
31.453 259.16 31.48 259.129 31.512 259.105 cv
31.543 259.086 31.574 259.078 31.613 259.074 cv
33.465 259.074 li
33.465 252.328 li
31.75 253.348 li
31.66 253.398 31.59 253.426 31.543 253.434 cv
31.488 253.441 31.445 253.434 31.414 253.402 cv
31.379 253.375 31.359 253.324 31.348 253.254 cv
31.336 253.187 31.328 253.102 31.332 252.992 cv
31.328 252.918 31.332 252.852 31.344 252.793 cv
31.348 252.742 31.359 252.695 31.375 252.656 cv
31.387 252.621 31.406 252.59 31.43 252.562 cv
31.453 252.535 31.484 252.508 31.531 252.48 cv
33.574 251.168 li
33.59 251.156 33.609 251.145 33.641 251.137 cv
33.664 251.129 33.699 251.121 33.746 251.109 cv
33.785 251.102 33.836 251.094 33.891 251.09 cv
33.945 251.09 34.012 251.09 34.098 251.086 cv
34.203 251.09 34.297 251.094 34.371 251.102 cv
34.441 251.109 34.496 251.125 34.543 251.141 cv
34.582 251.16 34.609 251.18 34.625 251.203 cv
34.633 251.23 34.641 251.254 34.645 251.277 cv
34.645 259.074 li
36.25 259.074 li
36.285 259.078 36.32 259.086 36.352 259.105 cv
36.383 259.129 36.406 259.16 36.43 259.195 cv
36.445 259.234 36.461 259.281 36.477 259.34 cv
36.484 259.402 36.492 259.477 36.496 259.555 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.758 257.742 mo
43.758 258.129 43.688 258.473 43.551 258.77 cv
43.414 259.074 43.219 259.324 42.961 259.527 cv
42.703 259.734 42.383 259.891 42.004 259.992 cv
41.621 260.098 41.188 260.148 40.703 260.148 cv
40.242 260.148 39.832 260.102 39.473 260.008 cv
39.109 259.914 38.805 259.773 38.555 259.582 cv
38.305 259.398 38.113 259.168 37.98 258.891 cv
37.848 258.617 37.781 258.305 37.781 257.949 cv
37.781 257.676 37.824 257.418 37.918 257.184 cv
38.004 256.949 38.137 256.734 38.313 256.539 cv
38.48 256.344 38.691 256.16 38.945 255.984 cv
39.195 255.816 39.48 255.652 39.797 255.496 cv
39.523 255.355 39.281 255.207 39.07 255.047 cv
38.859 254.891 38.68 254.719 38.535 254.531 cv
38.387 254.348 38.277 254.152 38.203 253.941 cv
38.125 253.734 38.086 253.504 38.09 253.254 cv
38.086 252.945 38.141 252.652 38.258 252.379 cv
38.367 252.109 38.539 251.875 38.766 251.672 cv
38.992 251.473 39.277 251.312 39.629 251.195 cv
39.973 251.078 40.383 251.02 40.852 251.02 cv
41.297 251.02 41.684 251.074 42.012 251.18 cv
42.34 251.289 42.609 251.434 42.82 251.617 cv
43.031 251.805 43.188 252.023 43.293 252.273 cv
43.391 252.523 43.441 252.793 43.445 253.082 cv
43.441 253.316 43.402 253.543 43.332 253.754 cv
43.254 253.973 43.145 254.176 42.996 254.363 cv
42.848 254.559 42.668 254.738 42.457 254.902 cv
42.246 255.074 42.004 255.23 41.73 255.371 cv
42.051 255.535 42.336 255.699 42.594 255.867 cv
42.844 256.035 43.059 256.215 43.234 256.41 cv
43.402 256.605 43.531 256.812 43.625 257.027 cv
43.711 257.246 43.758 257.484 43.758 257.742 cv
cp
42.277 253.191 mo
42.273 253.004 42.242 252.828 42.176 252.672 cv
42.109 252.516 42.012 252.383 41.887 252.273 cv
41.758 252.164 41.598 252.082 41.41 252.023 cv
41.215 251.969 41 251.941 40.762 251.937 cv
40.266 251.941 39.891 252.051 39.641 252.273 cv
39.383 252.5 39.258 252.809 39.262 253.191 cv
39.258 253.371 39.289 253.535 39.352 253.687 cv
39.414 253.844 39.508 253.988 39.641 254.125 cv
39.766 254.262 39.93 254.395 40.133 254.523 cv
40.328 254.656 40.566 254.793 40.844 254.934 cv
41.305 254.699 41.66 254.437 41.906 254.145 cv
42.152 253.859 42.273 253.543 42.277 253.191 cv
cp
42.566 257.867 mo
42.563 257.66 42.523 257.469 42.449 257.297 cv
42.367 257.129 42.25 256.969 42.094 256.816 cv
41.938 256.668 41.738 256.523 41.504 256.383 cv
41.266 256.246 40.996 256.102 40.688 255.949 cv
40.398 256.094 40.145 256.234 39.93 256.375 cv
39.711 256.516 39.531 256.664 39.395 256.812 cv
39.254 256.969 39.148 257.125 39.078 257.289 cv
39.004 257.457 38.969 257.641 38.973 257.84 cv
38.969 258.285 39.121 258.629 39.43 258.867 cv
39.73 259.113 40.184 259.234 40.789 259.23 cv
41.371 259.234 41.816 259.113 42.117 258.863 cv
42.414 258.621 42.563 258.289 42.566 257.867 cv
cp
f
30.129 220.891 mo
44.32 220.891 li
44.32 237.981 li
30.129 237.981 li
cp
0 0 0 0 cmyk
ef
36.477 233.754 mo
36.473 233.84 36.469 233.914 36.457 233.977 cv
36.445 234.043 36.43 234.098 36.41 234.137 cv
36.387 234.184 36.359 234.215 36.328 234.23 cv
36.293 234.254 36.254 234.262 36.215 234.262 cv
31.313 234.262 li
31.25 234.262 31.191 234.254 31.145 234.238 cv
31.094 234.223 31.055 234.199 31.02 234.16 cv
30.984 234.129 30.957 234.074 30.945 234.004 cv
30.926 233.934 30.918 233.848 30.922 233.746 cv
30.918 233.656 30.922 233.578 30.93 233.508 cv
30.934 233.441 30.949 233.383 30.977 233.328 cv
31 233.277 31.031 233.223 31.066 233.168 cv
31.102 233.117 31.145 233.062 31.203 233 cv
32.977 231.176 li
33.387 230.758 33.715 230.383 33.965 230.047 cv
34.211 229.719 34.402 229.414 34.535 229.137 cv
34.668 228.863 34.754 228.613 34.801 228.387 cv
34.84 228.164 34.863 227.953 34.863 227.758 cv
34.863 227.562 34.828 227.379 34.762 227.199 cv
34.695 227.027 34.602 226.871 34.477 226.734 cv
34.352 226.605 34.195 226.5 34.008 226.418 cv
33.82 226.344 33.602 226.305 33.355 226.301 cv
33.066 226.305 32.809 226.344 32.582 226.418 cv
32.352 226.5 32.152 226.586 31.98 226.672 cv
31.809 226.766 31.664 226.848 31.547 226.926 cv
31.43 227.004 31.344 227.043 31.293 227.043 cv
31.258 227.043 31.227 227.035 31.203 227.016 cv
31.172 227 31.152 226.969 31.137 226.926 cv
31.121 226.887 31.105 226.832 31.098 226.762 cv
31.086 226.695 31.082 226.613 31.086 226.516 cv
31.082 226.449 31.086 226.391 31.094 226.34 cv
31.098 226.289 31.105 226.246 31.117 226.207 cv
31.125 226.172 31.141 226.137 31.16 226.105 cv
31.18 226.074 31.215 226.035 31.273 225.984 cv
31.324 225.937 31.418 225.871 31.555 225.789 cv
31.688 225.707 31.859 225.629 32.063 225.547 cv
32.266 225.469 32.488 225.398 32.734 225.344 cv
32.977 225.289 33.234 225.262 33.508 225.262 cv
33.934 225.262 34.309 225.324 34.633 225.445 cv
34.953 225.566 35.219 225.73 35.434 225.941 cv
35.645 226.152 35.805 226.398 35.91 226.672 cv
36.016 226.953 36.07 227.25 36.07 227.562 cv
36.07 227.852 36.043 228.133 35.992 228.41 cv
35.941 228.695 35.836 229 35.676 229.324 cv
35.512 229.652 35.277 230.016 34.973 230.414 cv
34.664 230.816 34.258 231.277 33.754 231.793 cv
32.348 233.262 li
36.207 233.262 li
36.238 233.266 36.273 233.277 36.313 233.293 cv
36.344 233.316 36.375 233.348 36.402 233.387 cv
36.426 233.43 36.445 233.48 36.457 233.539 cv
36.469 233.605 36.473 233.676 36.477 233.754 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.848 229.805 mo
43.844 230.488 43.793 231.109 43.688 231.672 cv
43.578 232.234 43.398 232.719 43.152 233.121 cv
42.898 233.527 42.57 233.84 42.172 234.059 cv
41.766 234.281 41.273 234.391 40.688 234.391 cv
40.129 234.391 39.656 234.293 39.277 234.094 cv
38.895 233.898 38.59 233.605 38.355 233.219 cv
38.121 232.832 37.953 232.359 37.859 231.793 cv
37.758 231.23 37.711 230.582 37.711 229.848 cv
37.711 229.176 37.766 228.555 37.875 227.988 cv
37.984 227.426 38.16 226.941 38.41 226.535 cv
38.652 226.133 38.977 225.82 39.383 225.594 cv
39.781 225.375 40.277 225.262 40.867 225.262 cv
41.426 225.262 41.898 225.363 42.281 225.559 cv
42.664 225.762 42.969 226.055 43.203 226.437 cv
43.434 226.828 43.602 227.301 43.699 227.863 cv
43.797 228.426 43.844 229.074 43.848 229.805 cv
cp
42.641 229.887 mo
42.637 229.445 42.621 229.047 42.594 228.695 cv
42.559 228.344 42.512 228.035 42.453 227.766 cv
42.387 227.496 42.309 227.266 42.211 227.07 cv
42.113 226.879 41.996 226.719 41.859 226.59 cv
41.719 226.465 41.559 226.371 41.387 226.312 cv
41.207 226.258 41.012 226.23 40.797 226.227 cv
40.406 226.23 40.09 226.32 39.852 226.504 cv
39.605 226.687 39.414 226.941 39.277 227.258 cv
39.137 227.578 39.043 227.949 38.992 228.379 cv
38.941 228.809 38.918 229.273 38.918 229.766 cv
38.918 230.43 38.949 230.992 39.02 231.453 cv
39.086 231.922 39.195 232.301 39.348 232.59 cv
39.492 232.887 39.684 233.098 39.914 233.227 cv
40.145 233.363 40.426 233.43 40.758 233.426 cv
41.012 233.43 41.234 233.391 41.43 233.305 cv
41.621 233.227 41.789 233.105 41.93 232.949 cv
42.07 232.797 42.184 232.613 42.277 232.398 cv
42.363 232.184 42.438 231.945 42.496 231.684 cv
42.547 231.426 42.586 231.145 42.609 230.84 cv
42.629 230.535 42.637 230.219 42.641 229.887 cv
cp
f
30.129 195.129 mo
44.32 195.129 li
44.32 212.219 li
30.129 212.219 li
cp
0 0 0 0 cmyk
ef
36.477 207.98 mo
36.473 208.066 36.469 208.141 36.457 208.203 cv
36.445 208.27 36.43 208.324 36.41 208.363 cv
36.387 208.41 36.359 208.441 36.328 208.457 cv
36.293 208.48 36.254 208.488 36.215 208.488 cv
31.313 208.488 li
31.25 208.488 31.191 208.48 31.145 208.465 cv
31.094 208.449 31.055 208.426 31.02 208.387 cv
30.984 208.355 30.957 208.301 30.945 208.23 cv
30.926 208.16 30.918 208.074 30.922 207.973 cv
30.918 207.883 30.922 207.805 30.93 207.734 cv
30.934 207.668 30.949 207.609 30.977 207.555 cv
31 207.504 31.031 207.449 31.066 207.395 cv
31.102 207.344 31.145 207.289 31.203 207.227 cv
32.977 205.402 li
33.387 204.984 33.715 204.609 33.965 204.273 cv
34.211 203.945 34.402 203.641 34.535 203.363 cv
34.668 203.09 34.754 202.84 34.801 202.613 cv
34.84 202.391 34.863 202.18 34.863 201.984 cv
34.863 201.789 34.828 201.605 34.762 201.426 cv
34.695 201.254 34.602 201.098 34.477 200.961 cv
34.352 200.832 34.195 200.727 34.008 200.645 cv
33.82 200.57 33.602 200.531 33.355 200.527 cv
33.066 200.531 32.809 200.57 32.582 200.645 cv
32.352 200.727 32.152 200.812 31.98 200.898 cv
31.809 200.992 31.664 201.074 31.547 201.152 cv
31.43 201.23 31.344 201.27 31.293 201.27 cv
31.258 201.27 31.227 201.262 31.203 201.242 cv
31.172 201.227 31.152 201.195 31.137 201.152 cv
31.121 201.113 31.105 201.059 31.098 200.988 cv
31.086 200.922 31.082 200.84 31.086 200.742 cv
31.082 200.676 31.086 200.617 31.094 200.566 cv
31.098 200.516 31.105 200.473 31.117 200.434 cv
31.125 200.398 31.141 200.363 31.16 200.332 cv
31.18 200.301 31.215 200.262 31.273 200.211 cv
31.324 200.164 31.418 200.098 31.555 200.016 cv
31.688 199.934 31.859 199.855 32.063 199.773 cv
32.266 199.695 32.488 199.625 32.734 199.57 cv
32.977 199.516 33.234 199.488 33.508 199.488 cv
33.934 199.488 34.309 199.551 34.633 199.672 cv
34.953 199.793 35.219 199.957 35.434 200.168 cv
35.645 200.379 35.805 200.625 35.91 200.898 cv
36.016 201.18 36.07 201.477 36.07 201.789 cv
36.07 202.078 36.043 202.359 35.992 202.637 cv
35.941 202.922 35.836 203.227 35.676 203.551 cv
35.512 203.879 35.277 204.242 34.973 204.641 cv
34.664 205.043 34.258 205.504 33.754 206.02 cv
32.348 207.488 li
36.207 207.488 li
36.238 207.492 36.273 207.504 36.313 207.52 cv
36.344 207.543 36.375 207.574 36.402 207.613 cv
36.426 207.656 36.445 207.707 36.457 207.766 cv
36.469 207.832 36.473 207.902 36.477 207.98 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.555 207.98 mo
43.551 208.066 43.547 208.141 43.535 208.203 cv
43.523 208.27 43.508 208.324 43.488 208.363 cv
43.465 208.41 43.438 208.441 43.406 208.457 cv
43.371 208.48 43.332 208.488 43.293 208.488 cv
38.391 208.488 li
38.328 208.488 38.27 208.48 38.223 208.465 cv
38.172 208.449 38.133 208.426 38.098 208.387 cv
38.063 208.355 38.035 208.301 38.023 208.23 cv
38.004 208.16 37.996 208.074 38 207.973 cv
37.996 207.883 38 207.805 38.008 207.734 cv
38.012 207.668 38.027 207.609 38.055 207.555 cv
38.078 207.504 38.109 207.449 38.145 207.395 cv
38.18 207.344 38.223 207.289 38.281 207.227 cv
40.055 205.402 li
40.465 204.984 40.793 204.609 41.043 204.273 cv
41.289 203.945 41.48 203.641 41.613 203.363 cv
41.746 203.09 41.832 202.84 41.879 202.613 cv
41.918 202.391 41.941 202.18 41.941 201.984 cv
41.941 201.789 41.906 201.605 41.84 201.426 cv
41.773 201.254 41.68 201.098 41.555 200.961 cv
41.43 200.832 41.273 200.727 41.086 200.645 cv
40.898 200.57 40.68 200.531 40.434 200.527 cv
40.145 200.531 39.887 200.57 39.66 200.645 cv
39.43 200.727 39.23 200.812 39.059 200.898 cv
38.887 200.992 38.742 201.074 38.625 201.152 cv
38.508 201.23 38.422 201.27 38.371 201.27 cv
38.336 201.27 38.305 201.262 38.281 201.242 cv
38.25 201.227 38.23 201.195 38.215 201.152 cv
38.199 201.113 38.184 201.059 38.176 200.988 cv
38.164 200.922 38.16 200.84 38.164 200.742 cv
38.16 200.676 38.164 200.617 38.172 200.566 cv
38.176 200.516 38.184 200.473 38.195 200.434 cv
38.203 200.398 38.219 200.363 38.238 200.332 cv
38.258 200.301 38.293 200.262 38.352 200.211 cv
38.402 200.164 38.496 200.098 38.633 200.016 cv
38.766 199.934 38.938 199.855 39.141 199.773 cv
39.344 199.695 39.566 199.625 39.813 199.57 cv
40.055 199.516 40.313 199.488 40.586 199.488 cv
41.012 199.488 41.387 199.551 41.711 199.672 cv
42.031 199.793 42.297 199.957 42.512 200.168 cv
42.723 200.379 42.883 200.625 42.988 200.898 cv
43.094 201.18 43.148 201.477 43.148 201.789 cv
43.148 202.078 43.121 202.359 43.07 202.637 cv
43.02 202.922 42.914 203.227 42.754 203.551 cv
42.59 203.879 42.355 204.242 42.051 204.641 cv
41.742 205.043 41.336 205.504 40.832 206.02 cv
39.426 207.488 li
43.285 207.488 li
43.316 207.492 43.352 207.504 43.391 207.52 cv
43.422 207.543 43.453 207.574 43.48 207.613 cv
43.504 207.656 43.523 207.707 43.535 207.766 cv
43.547 207.832 43.551 207.902 43.555 207.98 cv
cp
f
30.129 169.379 mo
44.32 169.379 li
44.32 186.469 li
30.129 186.469 li
cp
0 0 0 0 cmyk
ef
36.477 182.23 mo
36.473 182.316 36.469 182.391 36.457 182.453 cv
36.445 182.52 36.43 182.574 36.41 182.613 cv
36.387 182.66 36.359 182.691 36.328 182.707 cv
36.293 182.73 36.254 182.738 36.215 182.738 cv
31.313 182.738 li
31.25 182.738 31.191 182.73 31.145 182.715 cv
31.094 182.699 31.055 182.676 31.02 182.637 cv
30.984 182.605 30.957 182.551 30.945 182.48 cv
30.926 182.41 30.918 182.324 30.922 182.223 cv
30.918 182.133 30.922 182.055 30.93 181.984 cv
30.934 181.918 30.949 181.859 30.977 181.805 cv
31 181.754 31.031 181.699 31.066 181.645 cv
31.102 181.594 31.145 181.539 31.203 181.477 cv
32.977 179.652 li
33.387 179.234 33.715 178.859 33.965 178.523 cv
34.211 178.195 34.402 177.891 34.535 177.613 cv
34.668 177.34 34.754 177.09 34.801 176.863 cv
34.84 176.641 34.863 176.43 34.863 176.234 cv
34.863 176.039 34.828 175.855 34.762 175.676 cv
34.695 175.504 34.602 175.348 34.477 175.211 cv
34.352 175.082 34.195 174.977 34.008 174.895 cv
33.82 174.82 33.602 174.781 33.355 174.777 cv
33.066 174.781 32.809 174.82 32.582 174.895 cv
32.352 174.977 32.152 175.062 31.98 175.148 cv
31.809 175.242 31.664 175.324 31.547 175.402 cv
31.43 175.48 31.344 175.52 31.293 175.52 cv
31.258 175.52 31.227 175.512 31.203 175.492 cv
31.172 175.477 31.152 175.445 31.137 175.402 cv
31.121 175.363 31.105 175.309 31.098 175.238 cv
31.086 175.172 31.082 175.09 31.086 174.992 cv
31.082 174.926 31.086 174.867 31.094 174.816 cv
31.098 174.766 31.105 174.723 31.117 174.684 cv
31.125 174.648 31.141 174.613 31.16 174.582 cv
31.18 174.551 31.215 174.512 31.273 174.461 cv
31.324 174.414 31.418 174.348 31.555 174.266 cv
31.688 174.184 31.859 174.105 32.063 174.023 cv
32.266 173.945 32.488 173.875 32.734 173.82 cv
32.977 173.766 33.234 173.738 33.508 173.738 cv
33.934 173.738 34.309 173.801 34.633 173.922 cv
34.953 174.043 35.219 174.207 35.434 174.418 cv
35.645 174.629 35.805 174.875 35.91 175.148 cv
36.016 175.43 36.07 175.727 36.07 176.039 cv
36.07 176.328 36.043 176.609 35.992 176.887 cv
35.941 177.172 35.836 177.477 35.676 177.801 cv
35.512 178.129 35.277 178.492 34.973 178.891 cv
34.664 179.293 34.258 179.754 33.754 180.27 cv
32.348 181.738 li
36.207 181.738 li
36.238 181.742 36.273 181.754 36.313 181.77 cv
36.344 181.793 36.375 181.824 36.402 181.863 cv
36.426 181.906 36.445 181.957 36.457 182.016 cv
36.469 182.082 36.473 182.152 36.477 182.23 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.93 180.215 mo
43.926 180.367 43.902 180.488 43.859 180.574 cv
43.813 180.664 43.75 180.707 43.668 180.703 cv
42.668 180.703 li
42.668 182.566 li
42.668 182.605 42.656 182.637 42.641 182.66 cv
42.617 182.687 42.586 182.707 42.543 182.727 cv
42.492 182.742 42.43 182.754 42.359 182.766 cv
42.281 182.773 42.188 182.777 42.07 182.781 cv
41.953 182.777 41.855 182.773 41.785 182.766 cv
41.707 182.754 41.648 182.742 41.605 182.727 cv
41.559 182.707 41.527 182.687 41.512 182.66 cv
41.492 182.637 41.484 182.605 41.488 182.566 cv
41.488 180.703 li
37.859 180.703 li
37.801 180.707 37.758 180.699 37.723 180.684 cv
37.688 180.672 37.652 180.645 37.625 180.605 cv
37.594 180.57 37.574 180.52 37.563 180.449 cv
37.551 180.383 37.547 180.293 37.547 180.18 cv
37.547 180.098 37.547 180.02 37.555 179.949 cv
37.555 179.879 37.566 179.816 37.582 179.762 cv
37.594 179.707 37.609 179.652 37.637 179.598 cv
37.656 179.543 37.684 179.488 37.719 179.426 cv
40.879 174.039 li
40.898 174.004 40.934 173.973 40.98 173.945 cv
41.023 173.918 41.078 173.895 41.152 173.875 cv
41.219 173.859 41.305 173.848 41.41 173.836 cv
41.512 173.832 41.633 173.828 41.773 173.824 cv
41.922 173.828 42.059 173.832 42.176 173.844 cv
42.289 173.855 42.379 173.871 42.453 173.887 cv
42.52 173.906 42.574 173.93 42.613 173.961 cv
42.648 173.992 42.668 174.027 42.668 174.066 cv
42.668 179.73 li
43.668 179.73 li
43.742 179.734 43.805 179.773 43.855 179.852 cv
43.902 179.934 43.926 180.055 43.93 180.215 cv
cp
41.488 174.863 mo
41.477 174.863 li
38.625 179.73 li
41.488 179.73 li
cp
f
30.129 143.621 mo
44.32 143.621 li
44.32 160.711 li
30.129 160.711 li
cp
0 0 0 0 cmyk
ef
36.484 156.473 mo
36.48 156.559 36.477 156.633 36.469 156.695 cv
36.457 156.762 36.441 156.816 36.422 156.855 cv
36.398 156.902 36.367 156.934 36.336 156.949 cv
36.297 156.973 36.262 156.98 36.227 156.98 cv
31.316 156.98 li
31.25 156.98 31.191 156.973 31.145 156.957 cv
31.094 156.941 31.055 156.918 31.023 156.879 cv
30.988 156.848 30.961 156.793 30.945 156.723 cv
30.926 156.652 30.918 156.566 30.922 156.465 cv
30.918 156.375 30.922 156.297 30.934 156.227 cv
30.938 156.16 30.953 156.098 30.98 156.043 cv
31 155.992 31.031 155.941 31.066 155.887 cv
31.102 155.836 31.148 155.781 31.207 155.719 cv
32.984 153.891 li
33.391 153.473 33.719 153.094 33.969 152.758 cv
34.211 152.426 34.402 152.121 34.543 151.844 cv
34.676 151.574 34.766 151.324 34.809 151.098 cv
34.848 150.871 34.867 150.66 34.871 150.465 cv
34.867 150.27 34.836 150.086 34.77 149.906 cv
34.703 149.734 34.605 149.578 34.484 149.441 cv
34.355 149.312 34.199 149.207 34.012 149.125 cv
33.82 149.051 33.605 149.012 33.363 149.008 cv
33.074 149.012 32.813 149.051 32.586 149.125 cv
32.352 149.207 32.152 149.293 31.984 149.379 cv
31.809 149.473 31.664 149.555 31.551 149.633 cv
31.434 149.711 31.348 149.75 31.293 149.75 cv
31.258 149.75 31.23 149.742 31.207 149.723 cv
31.18 149.707 31.156 149.676 31.141 149.633 cv
31.121 149.594 31.109 149.539 31.102 149.469 cv
31.094 149.398 31.09 149.316 31.09 149.219 cv
31.09 149.152 31.09 149.094 31.094 149.043 cv
31.098 148.992 31.105 148.949 31.117 148.91 cv
31.129 148.879 31.145 148.844 31.164 148.809 cv
31.18 148.781 31.215 148.742 31.273 148.691 cv
31.324 148.645 31.422 148.578 31.559 148.492 cv
31.691 148.41 31.859 148.328 32.066 148.25 cv
32.266 148.172 32.488 148.105 32.738 148.047 cv
32.98 147.996 33.238 147.969 33.512 147.965 cv
33.938 147.969 34.316 148.031 34.641 148.148 cv
34.961 148.273 35.227 148.437 35.445 148.645 cv
35.656 148.859 35.816 149.105 35.922 149.379 cv
36.027 149.66 36.082 149.957 36.082 150.27 cv
36.082 150.559 36.055 150.84 36.004 151.121 cv
35.953 151.402 35.848 151.707 35.684 152.035 cv
35.52 152.363 35.285 152.727 34.98 153.125 cv
34.676 153.527 34.266 153.988 33.758 154.508 cv
32.352 155.977 li
36.219 155.977 li
36.25 155.98 36.285 155.988 36.324 156.008 cv
36.355 156.031 36.387 156.062 36.414 156.102 cv
36.438 156.145 36.457 156.199 36.469 156.258 cv
36.477 156.32 36.48 156.391 36.484 156.473 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.789 154.102 mo
43.785 154.496 43.727 154.871 43.609 155.234 cv
43.488 155.598 43.305 155.918 43.063 156.195 cv
42.813 156.473 42.5 156.695 42.121 156.859 cv
41.738 157.027 41.289 157.109 40.777 157.109 cv
40.402 157.109 40.074 157.066 39.793 156.973 cv
39.504 156.887 39.258 156.754 39.051 156.582 cv
38.84 156.414 38.664 156.207 38.527 155.957 cv
38.383 155.711 38.27 155.43 38.188 155.113 cv
38.102 154.801 38.043 154.457 38.008 154.078 cv
37.969 153.703 37.949 153.297 37.953 152.867 cv
37.949 152.488 37.973 152.105 38.016 151.715 cv
38.055 151.328 38.125 150.953 38.234 150.586 cv
38.336 150.227 38.48 149.887 38.664 149.566 cv
38.844 149.254 39.07 148.977 39.344 148.738 cv
39.613 148.504 39.941 148.316 40.324 148.18 cv
40.703 148.043 41.145 147.977 41.648 147.973 cv
41.816 147.977 41.988 147.984 42.164 148.004 cv
42.336 148.023 42.496 148.051 42.645 148.086 cv
42.789 148.121 42.91 148.16 43.012 148.199 cv
43.109 148.242 43.176 148.273 43.211 148.297 cv
43.242 148.324 43.266 148.355 43.285 148.383 cv
43.297 148.414 43.309 148.445 43.32 148.477 cv
43.328 148.516 43.336 148.555 43.344 148.594 cv
43.344 148.641 43.348 148.691 43.352 148.754 cv
43.348 148.84 43.348 148.914 43.348 148.969 cv
43.344 149.031 43.332 149.078 43.32 149.109 cv
43.301 149.148 43.281 149.176 43.258 149.191 cv
43.23 149.215 43.199 149.223 43.16 149.219 cv
43.105 149.223 43.035 149.207 42.953 149.172 cv
42.863 149.145 42.758 149.109 42.637 149.066 cv
42.512 149.031 42.363 148.996 42.188 148.961 cv
42.008 148.93 41.801 148.914 41.574 148.91 cv
41.145 148.914 40.777 149 40.473 149.172 cv
40.164 149.348 39.914 149.582 39.723 149.875 cv
39.523 150.168 39.379 150.508 39.289 150.895 cv
39.191 151.281 39.141 151.684 39.129 152.105 cv
39.246 152.035 39.379 151.969 39.527 151.898 cv
39.676 151.836 39.836 151.773 40.016 151.715 cv
40.188 151.664 40.375 151.621 40.574 151.582 cv
40.77 151.551 40.98 151.531 41.207 151.527 cv
41.688 151.531 42.094 151.598 42.422 151.723 cv
42.75 151.855 43.016 152.035 43.223 152.266 cv
43.426 152.5 43.57 152.773 43.66 153.086 cv
43.742 153.402 43.785 153.742 43.789 154.102 cv
cp
42.598 154.215 mo
42.598 153.949 42.57 153.711 42.516 153.492 cv
42.461 153.277 42.371 153.09 42.25 152.937 cv
42.125 152.789 41.961 152.672 41.758 152.586 cv
41.551 152.504 41.297 152.465 40.996 152.461 cv
40.824 152.465 40.656 152.48 40.488 152.508 cv
40.316 152.539 40.152 152.578 39.996 152.633 cv
39.836 152.687 39.684 152.75 39.543 152.816 cv
39.398 152.891 39.266 152.969 39.148 153.047 cv
39.145 153.641 39.184 154.133 39.262 154.527 cv
39.336 154.93 39.445 155.25 39.59 155.488 cv
39.734 155.73 39.914 155.902 40.129 156.004 cv
40.344 156.109 40.598 156.16 40.887 156.156 cv
41.176 156.16 41.43 156.105 41.648 155.992 cv
41.863 155.887 42.039 155.738 42.184 155.551 cv
42.324 155.363 42.43 155.156 42.496 154.926 cv
42.563 154.695 42.598 154.457 42.598 154.215 cv
cp
f
30.129 117.859 mo
44.32 117.859 li
44.32 134.949 li
30.129 134.949 li
cp
0 0 0 0 cmyk
ef
36.477 130.703 mo
36.473 130.789 36.469 130.863 36.457 130.926 cv
36.445 130.992 36.43 131.047 36.41 131.086 cv
36.387 131.133 36.359 131.164 36.328 131.18 cv
36.293 131.203 36.254 131.211 36.215 131.211 cv
31.313 131.211 li
31.25 131.211 31.191 131.203 31.145 131.187 cv
31.094 131.172 31.055 131.148 31.02 131.109 cv
30.984 131.078 30.957 131.023 30.945 130.953 cv
30.926 130.883 30.918 130.797 30.922 130.695 cv
30.918 130.605 30.922 130.527 30.93 130.457 cv
30.934 130.391 30.949 130.332 30.977 130.277 cv
31 130.227 31.031 130.172 31.066 130.117 cv
31.102 130.066 31.145 130.012 31.203 129.949 cv
32.977 128.125 li
33.387 127.707 33.715 127.332 33.965 126.996 cv
34.211 126.668 34.402 126.363 34.535 126.086 cv
34.668 125.812 34.754 125.562 34.801 125.336 cv
34.84 125.113 34.863 124.902 34.863 124.707 cv
34.863 124.512 34.828 124.328 34.762 124.148 cv
34.695 123.977 34.602 123.82 34.477 123.684 cv
34.352 123.555 34.195 123.449 34.008 123.367 cv
33.82 123.293 33.602 123.254 33.355 123.25 cv
33.066 123.254 32.809 123.293 32.582 123.367 cv
32.352 123.449 32.152 123.535 31.98 123.621 cv
31.809 123.715 31.664 123.797 31.547 123.875 cv
31.43 123.953 31.344 123.992 31.293 123.992 cv
31.258 123.992 31.227 123.984 31.203 123.965 cv
31.172 123.949 31.152 123.918 31.137 123.875 cv
31.121 123.836 31.105 123.781 31.098 123.711 cv
31.086 123.645 31.082 123.562 31.086 123.465 cv
31.082 123.398 31.086 123.34 31.094 123.289 cv
31.098 123.238 31.105 123.195 31.117 123.156 cv
31.125 123.121 31.141 123.086 31.16 123.055 cv
31.18 123.023 31.215 122.984 31.273 122.934 cv
31.324 122.887 31.418 122.82 31.555 122.738 cv
31.688 122.656 31.859 122.578 32.063 122.496 cv
32.266 122.418 32.488 122.348 32.734 122.293 cv
32.977 122.238 33.234 122.211 33.508 122.211 cv
33.934 122.211 34.309 122.273 34.633 122.395 cv
34.953 122.516 35.219 122.68 35.434 122.891 cv
35.645 123.102 35.805 123.348 35.91 123.621 cv
36.016 123.902 36.07 124.199 36.07 124.512 cv
36.07 124.801 36.043 125.082 35.992 125.359 cv
35.941 125.645 35.836 125.949 35.676 126.273 cv
35.512 126.602 35.277 126.965 34.973 127.363 cv
34.664 127.766 34.258 128.227 33.754 128.742 cv
32.348 130.211 li
36.207 130.211 li
36.238 130.215 36.273 130.227 36.313 130.242 cv
36.344 130.266 36.375 130.297 36.402 130.336 cv
36.426 130.379 36.445 130.43 36.457 130.488 cv
36.469 130.555 36.473 130.625 36.477 130.703 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.758 128.934 mo
43.758 129.32 43.688 129.664 43.551 129.961 cv
43.414 130.266 43.219 130.516 42.961 130.719 cv
42.703 130.926 42.383 131.082 42.004 131.184 cv
41.621 131.289 41.188 131.34 40.703 131.34 cv
40.242 131.34 39.832 131.293 39.473 131.199 cv
39.109 131.105 38.805 130.965 38.555 130.773 cv
38.305 130.59 38.113 130.359 37.98 130.082 cv
37.848 129.809 37.781 129.496 37.781 129.141 cv
37.781 128.867 37.824 128.609 37.918 128.375 cv
38.004 128.141 38.137 127.926 38.313 127.73 cv
38.48 127.535 38.691 127.352 38.945 127.176 cv
39.195 127.008 39.48 126.844 39.797 126.687 cv
39.523 126.547 39.281 126.398 39.07 126.238 cv
38.859 126.082 38.68 125.91 38.535 125.723 cv
38.387 125.539 38.277 125.344 38.203 125.133 cv
38.125 124.926 38.086 124.695 38.09 124.445 cv
38.086 124.137 38.141 123.844 38.258 123.57 cv
38.367 123.301 38.539 123.066 38.766 122.863 cv
38.992 122.664 39.277 122.504 39.629 122.387 cv
39.973 122.27 40.383 122.211 40.852 122.211 cv
41.297 122.211 41.684 122.266 42.012 122.371 cv
42.34 122.48 42.609 122.625 42.82 122.809 cv
43.031 122.996 43.188 123.215 43.293 123.465 cv
43.391 123.715 43.441 123.984 43.445 124.273 cv
43.441 124.508 43.402 124.734 43.332 124.945 cv
43.254 125.164 43.145 125.367 42.996 125.555 cv
42.848 125.75 42.668 125.93 42.457 126.094 cv
42.246 126.266 42.004 126.422 41.73 126.562 cv
42.051 126.727 42.336 126.891 42.594 127.059 cv
42.844 127.227 43.059 127.406 43.234 127.602 cv
43.402 127.797 43.531 128.004 43.625 128.219 cv
43.711 128.437 43.758 128.676 43.758 128.934 cv
cp
42.277 124.383 mo
42.273 124.195 42.242 124.02 42.176 123.863 cv
42.109 123.707 42.012 123.574 41.887 123.465 cv
41.758 123.355 41.598 123.273 41.41 123.215 cv
41.215 123.16 41 123.133 40.762 123.129 cv
40.266 123.133 39.891 123.242 39.641 123.465 cv
39.383 123.691 39.258 124 39.262 124.383 cv
39.258 124.562 39.289 124.727 39.352 124.879 cv
39.414 125.035 39.508 125.18 39.641 125.316 cv
39.766 125.453 39.93 125.586 40.133 125.715 cv
40.328 125.848 40.566 125.984 40.844 126.125 cv
41.305 125.891 41.66 125.629 41.906 125.336 cv
42.152 125.051 42.273 124.734 42.277 124.383 cv
cp
42.566 129.059 mo
42.563 128.852 42.523 128.66 42.449 128.488 cv
42.367 128.32 42.25 128.16 42.094 128.008 cv
41.938 127.859 41.738 127.715 41.504 127.574 cv
41.266 127.437 40.996 127.293 40.688 127.141 cv
40.398 127.285 40.145 127.426 39.93 127.566 cv
39.711 127.707 39.531 127.855 39.395 128.004 cv
39.254 128.16 39.148 128.316 39.078 128.48 cv
39.004 128.648 38.969 128.832 38.973 129.031 cv
38.969 129.477 39.121 129.82 39.43 130.059 cv
39.73 130.305 40.184 130.426 40.789 130.422 cv
41.371 130.426 41.816 130.305 42.117 130.055 cv
42.414 129.812 42.563 129.48 42.566 129.059 cv
cp
f
30.129 92.102 mo
44.32 92.102 li
44.32 109.192 li
30.129 109.192 li
cp
0 0 0 0 cmyk
ef
36.406 102.926 mo
36.402 103.336 36.332 103.703 36.191 104.027 cv
36.047 104.355 35.844 104.637 35.582 104.867 cv
35.316 105.102 34.988 105.277 34.602 105.402 cv
34.211 105.527 33.773 105.59 33.289 105.59 cv
32.984 105.59 32.707 105.562 32.453 105.516 cv
32.191 105.469 31.961 105.418 31.766 105.348 cv
31.563 105.285 31.398 105.215 31.266 105.145 cv
31.133 105.074 31.047 105.023 31.016 104.988 cv
30.977 104.961 30.953 104.93 30.938 104.895 cv
30.918 104.863 30.898 104.824 30.887 104.777 cv
30.871 104.734 30.863 104.68 30.855 104.609 cv
30.848 104.547 30.844 104.465 30.848 104.363 cv
30.844 104.203 30.859 104.09 30.895 104.023 cv
30.926 103.961 30.973 103.926 31.035 103.926 cv
31.078 103.926 31.16 103.965 31.285 104.035 cv
31.406 104.113 31.566 104.191 31.762 104.273 cv
31.953 104.359 32.18 104.437 32.445 104.508 cv
32.703 104.582 32.996 104.617 33.316 104.617 cv
33.625 104.617 33.895 104.578 34.133 104.5 cv
34.363 104.422 34.563 104.312 34.723 104.172 cv
34.879 104.031 34.996 103.863 35.078 103.668 cv
35.156 103.473 35.195 103.262 35.199 103.035 cv
35.195 102.785 35.145 102.559 35.047 102.355 cv
34.941 102.156 34.793 101.984 34.602 101.836 cv
34.402 101.691 34.164 101.578 33.879 101.5 cv
33.594 101.422 33.27 101.383 32.906 101.383 cv
32.035 101.383 li
31.992 101.383 31.957 101.375 31.922 101.359 cv
31.887 101.344 31.855 101.316 31.832 101.277 cv
31.805 101.242 31.785 101.195 31.77 101.137 cv
31.754 101.078 31.746 101 31.746 100.902 cv
31.746 100.816 31.75 100.746 31.766 100.687 cv
31.773 100.633 31.793 100.586 31.824 100.551 cv
31.848 100.516 31.879 100.492 31.91 100.473 cv
31.941 100.461 31.977 100.453 32.02 100.449 cv
32.793 100.449 li
33.094 100.453 33.363 100.414 33.605 100.332 cv
33.84 100.258 34.043 100.145 34.215 99.996 cv
34.379 99.852 34.508 99.676 34.598 99.473 cv
34.688 99.27 34.734 99.043 34.734 98.789 cv
34.734 98.609 34.703 98.434 34.645 98.266 cv
34.582 98.102 34.492 97.957 34.375 97.832 cv
34.254 97.707 34.102 97.609 33.922 97.539 cv
33.734 97.469 33.523 97.434 33.281 97.434 cv
33.016 97.434 32.77 97.477 32.551 97.555 cv
32.324 97.637 32.129 97.723 31.957 97.812 cv
31.781 97.906 31.637 97.992 31.523 98.07 cv
31.41 98.152 31.328 98.191 31.285 98.187 cv
31.25 98.191 31.223 98.184 31.199 98.172 cv
31.172 98.16 31.152 98.137 31.137 98.102 cv
31.121 98.07 31.109 98.023 31.102 97.957 cv
31.094 97.898 31.09 97.816 31.094 97.715 cv
31.09 97.648 31.09 97.59 31.098 97.535 cv
31.098 97.484 31.109 97.437 31.125 97.395 cv
31.141 97.359 31.156 97.324 31.176 97.289 cv
31.191 97.262 31.223 97.223 31.266 97.176 cv
31.309 97.133 31.395 97.07 31.531 96.988 cv
31.66 96.906 31.824 96.828 32.02 96.746 cv
32.211 96.668 32.434 96.598 32.691 96.543 cv
32.941 96.488 33.215 96.461 33.512 96.461 cv
33.918 96.461 34.281 96.516 34.594 96.617 cv
34.906 96.727 35.164 96.875 35.375 97.062 cv
35.578 97.258 35.734 97.488 35.84 97.754 cv
35.941 98.023 35.992 98.316 35.996 98.641 cv
35.992 98.922 35.957 99.184 35.887 99.418 cv
35.813 99.66 35.703 99.871 35.563 100.055 cv
35.418 100.242 35.246 100.398 35.043 100.527 cv
34.836 100.66 34.598 100.754 34.328 100.801 cv
34.328 100.812 li
34.633 100.848 34.914 100.922 35.168 101.043 cv
35.422 101.164 35.641 101.316 35.824 101.5 cv
36.004 101.684 36.145 101.898 36.25 102.141 cv
36.352 102.387 36.402 102.648 36.406 102.926 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.848 101.004 mo
43.844 101.687 43.793 102.309 43.688 102.871 cv
43.578 103.434 43.398 103.918 43.152 104.32 cv
42.898 104.727 42.57 105.039 42.172 105.258 cv
41.766 105.48 41.273 105.59 40.688 105.59 cv
40.129 105.59 39.656 105.492 39.277 105.293 cv
38.895 105.098 38.59 104.805 38.355 104.418 cv
38.121 104.031 37.953 103.559 37.859 102.992 cv
37.758 102.43 37.711 101.781 37.711 101.047 cv
37.711 100.375 37.766 99.754 37.875 99.187 cv
37.984 98.625 38.16 98.141 38.41 97.734 cv
38.652 97.332 38.977 97.02 39.383 96.793 cv
39.781 96.574 40.277 96.461 40.867 96.461 cv
41.426 96.461 41.898 96.562 42.281 96.758 cv
42.664 96.961 42.969 97.254 43.203 97.637 cv
43.434 98.027 43.602 98.5 43.699 99.062 cv
43.797 99.625 43.844 100.273 43.848 101.004 cv
cp
42.641 101.086 mo
42.637 100.645 42.621 100.246 42.594 99.895 cv
42.559 99.543 42.512 99.234 42.453 98.965 cv
42.387 98.695 42.309 98.465 42.211 98.27 cv
42.113 98.078 41.996 97.918 41.859 97.789 cv
41.719 97.664 41.559 97.57 41.387 97.512 cv
41.207 97.457 41.012 97.43 40.797 97.426 cv
40.406 97.43 40.09 97.52 39.852 97.703 cv
39.605 97.887 39.414 98.141 39.277 98.457 cv
39.137 98.777 39.043 99.148 38.992 99.578 cv
38.941 100.008 38.918 100.473 38.918 100.965 cv
38.918 101.629 38.949 102.191 39.02 102.652 cv
39.086 103.121 39.195 103.5 39.348 103.789 cv
39.492 104.086 39.684 104.297 39.914 104.426 cv
40.145 104.562 40.426 104.629 40.758 104.625 cv
41.012 104.629 41.234 104.59 41.43 104.504 cv
41.621 104.426 41.789 104.305 41.93 104.148 cv
42.07 103.996 42.184 103.812 42.277 103.598 cv
42.363 103.383 42.438 103.145 42.496 102.883 cv
42.547 102.625 42.586 102.344 42.609 102.039 cv
42.629 101.734 42.637 101.418 42.641 101.086 cv
cp
f
30.129 66.352 mo
44.32 66.352 li
44.32 83.442 li
30.129 83.442 li
cp
0 0 0 0 cmyk
ef
36.406 77.145 mo
36.402 77.555 36.332 77.922 36.191 78.246 cv
36.047 78.574 35.844 78.855 35.582 79.086 cv
35.316 79.32 34.988 79.496 34.602 79.621 cv
34.211 79.746 33.773 79.809 33.289 79.809 cv
32.984 79.809 32.707 79.781 32.453 79.734 cv
32.191 79.687 31.961 79.637 31.766 79.566 cv
31.563 79.504 31.398 79.434 31.266 79.363 cv
31.133 79.293 31.047 79.242 31.016 79.207 cv
30.977 79.18 30.953 79.148 30.938 79.113 cv
30.918 79.082 30.898 79.043 30.887 78.996 cv
30.871 78.953 30.863 78.898 30.855 78.828 cv
30.848 78.766 30.844 78.684 30.848 78.582 cv
30.844 78.422 30.859 78.309 30.895 78.242 cv
30.926 78.18 30.973 78.145 31.035 78.145 cv
31.078 78.145 31.16 78.184 31.285 78.254 cv
31.406 78.332 31.566 78.41 31.762 78.492 cv
31.953 78.578 32.18 78.656 32.445 78.727 cv
32.703 78.801 32.996 78.836 33.316 78.836 cv
33.625 78.836 33.895 78.797 34.133 78.719 cv
34.363 78.641 34.563 78.531 34.723 78.391 cv
34.879 78.25 34.996 78.082 35.078 77.887 cv
35.156 77.691 35.195 77.48 35.199 77.254 cv
35.195 77.004 35.145 76.777 35.047 76.574 cv
34.941 76.375 34.793 76.203 34.602 76.055 cv
34.402 75.91 34.164 75.797 33.879 75.719 cv
33.594 75.641 33.27 75.602 32.906 75.602 cv
32.035 75.602 li
31.992 75.602 31.957 75.594 31.922 75.578 cv
31.887 75.562 31.855 75.535 31.832 75.496 cv
31.805 75.461 31.785 75.414 31.77 75.355 cv
31.754 75.297 31.746 75.219 31.746 75.121 cv
31.746 75.035 31.75 74.965 31.766 74.906 cv
31.773 74.852 31.793 74.805 31.824 74.77 cv
31.848 74.734 31.879 74.711 31.91 74.691 cv
31.941 74.68 31.977 74.672 32.02 74.668 cv
32.793 74.668 li
33.094 74.672 33.363 74.633 33.605 74.551 cv
33.84 74.477 34.043 74.363 34.215 74.215 cv
34.379 74.07 34.508 73.895 34.598 73.691 cv
34.688 73.488 34.734 73.262 34.734 73.008 cv
34.734 72.828 34.703 72.652 34.645 72.484 cv
34.582 72.32 34.492 72.176 34.375 72.051 cv
34.254 71.926 34.102 71.828 33.922 71.758 cv
33.734 71.687 33.523 71.652 33.281 71.652 cv
33.016 71.652 32.77 71.695 32.551 71.773 cv
32.324 71.855 32.129 71.941 31.957 72.031 cv
31.781 72.125 31.637 72.211 31.523 72.289 cv
31.41 72.371 31.328 72.41 31.285 72.406 cv
31.25 72.41 31.223 72.402 31.199 72.391 cv
31.172 72.379 31.152 72.355 31.137 72.32 cv
31.121 72.289 31.109 72.242 31.102 72.176 cv
31.094 72.117 31.09 72.035 31.094 71.934 cv
31.09 71.867 31.09 71.809 31.098 71.754 cv
31.098 71.703 31.109 71.656 31.125 71.613 cv
31.141 71.578 31.156 71.543 31.176 71.508 cv
31.191 71.48 31.223 71.441 31.266 71.395 cv
31.309 71.352 31.395 71.289 31.531 71.207 cv
31.66 71.125 31.824 71.047 32.02 70.965 cv
32.211 70.887 32.434 70.816 32.691 70.762 cv
32.941 70.707 33.215 70.68 33.512 70.68 cv
33.918 70.68 34.281 70.734 34.594 70.836 cv
34.906 70.945 35.164 71.094 35.375 71.281 cv
35.578 71.477 35.734 71.707 35.84 71.973 cv
35.941 72.242 35.992 72.535 35.996 72.859 cv
35.992 73.141 35.957 73.402 35.887 73.637 cv
35.813 73.879 35.703 74.09 35.563 74.273 cv
35.418 74.461 35.246 74.617 35.043 74.746 cv
34.836 74.879 34.598 74.973 34.328 75.02 cv
34.328 75.031 li
34.633 75.066 34.914 75.141 35.168 75.262 cv
35.422 75.383 35.641 75.535 35.824 75.719 cv
36.004 75.902 36.145 76.117 36.25 76.359 cv
36.352 76.605 36.402 76.867 36.406 77.145 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.555 79.172 mo
43.551 79.258 43.547 79.332 43.535 79.395 cv
43.523 79.461 43.508 79.516 43.488 79.555 cv
43.465 79.602 43.438 79.633 43.406 79.648 cv
43.371 79.672 43.332 79.68 43.293 79.68 cv
38.391 79.68 li
38.328 79.68 38.27 79.672 38.223 79.656 cv
38.172 79.641 38.133 79.617 38.098 79.578 cv
38.063 79.547 38.035 79.492 38.023 79.422 cv
38.004 79.352 37.996 79.266 38 79.164 cv
37.996 79.074 38 78.996 38.008 78.926 cv
38.012 78.859 38.027 78.801 38.055 78.746 cv
38.078 78.695 38.109 78.641 38.145 78.586 cv
38.18 78.535 38.223 78.48 38.281 78.418 cv
40.055 76.594 li
40.465 76.176 40.793 75.801 41.043 75.465 cv
41.289 75.137 41.48 74.832 41.613 74.555 cv
41.746 74.281 41.832 74.031 41.879 73.805 cv
41.918 73.582 41.941 73.371 41.941 73.176 cv
41.941 72.98 41.906 72.797 41.84 72.617 cv
41.773 72.445 41.68 72.289 41.555 72.152 cv
41.43 72.023 41.273 71.918 41.086 71.836 cv
40.898 71.762 40.68 71.723 40.434 71.719 cv
40.145 71.723 39.887 71.762 39.66 71.836 cv
39.43 71.918 39.23 72.004 39.059 72.09 cv
38.887 72.184 38.742 72.266 38.625 72.344 cv
38.508 72.422 38.422 72.461 38.371 72.461 cv
38.336 72.461 38.305 72.453 38.281 72.434 cv
38.25 72.418 38.23 72.387 38.215 72.344 cv
38.199 72.305 38.184 72.25 38.176 72.18 cv
38.164 72.113 38.16 72.031 38.164 71.934 cv
38.16 71.867 38.164 71.809 38.172 71.758 cv
38.176 71.707 38.184 71.664 38.195 71.625 cv
38.203 71.59 38.219 71.555 38.238 71.523 cv
38.258 71.492 38.293 71.453 38.352 71.402 cv
38.402 71.355 38.496 71.289 38.633 71.207 cv
38.766 71.125 38.938 71.047 39.141 70.965 cv
39.344 70.887 39.566 70.816 39.813 70.762 cv
40.055 70.707 40.313 70.68 40.586 70.68 cv
41.012 70.68 41.387 70.742 41.711 70.863 cv
42.031 70.984 42.297 71.148 42.512 71.359 cv
42.723 71.57 42.883 71.816 42.988 72.09 cv
43.094 72.371 43.148 72.668 43.148 72.98 cv
43.148 73.27 43.121 73.551 43.07 73.828 cv
43.02 74.113 42.914 74.418 42.754 74.742 cv
42.59 75.07 42.355 75.434 42.051 75.832 cv
41.742 76.234 41.336 76.695 40.832 77.211 cv
39.426 78.68 li
43.285 78.68 li
43.316 78.684 43.352 78.695 43.391 78.711 cv
43.422 78.734 43.453 78.766 43.48 78.805 cv
43.504 78.848 43.523 78.898 43.535 78.957 cv
43.547 79.023 43.551 79.094 43.555 79.172 cv
cp
f
30.129 40.59 mo
44.32 40.59 li
44.32 57.68 li
30.129 57.68 li
cp
0 0 0 0 cmyk
ef
36.406 51.395 mo
36.402 51.805 36.332 52.172 36.191 52.496 cv
36.047 52.824 35.844 53.105 35.582 53.336 cv
35.316 53.57 34.988 53.746 34.602 53.871 cv
34.211 53.996 33.773 54.059 33.289 54.059 cv
32.984 54.059 32.707 54.031 32.453 53.984 cv
32.191 53.937 31.961 53.887 31.766 53.816 cv
31.563 53.754 31.398 53.684 31.266 53.613 cv
31.133 53.543 31.047 53.492 31.016 53.457 cv
30.977 53.43 30.953 53.398 30.938 53.363 cv
30.918 53.332 30.898 53.293 30.887 53.246 cv
30.871 53.203 30.863 53.148 30.855 53.078 cv
30.848 53.016 30.844 52.934 30.848 52.832 cv
30.844 52.672 30.859 52.559 30.895 52.492 cv
30.926 52.43 30.973 52.395 31.035 52.395 cv
31.078 52.395 31.16 52.434 31.285 52.504 cv
31.406 52.582 31.566 52.66 31.762 52.742 cv
31.953 52.828 32.18 52.906 32.445 52.977 cv
32.703 53.051 32.996 53.086 33.316 53.086 cv
33.625 53.086 33.895 53.047 34.133 52.969 cv
34.363 52.891 34.563 52.781 34.723 52.641 cv
34.879 52.5 34.996 52.332 35.078 52.137 cv
35.156 51.941 35.195 51.73 35.199 51.504 cv
35.195 51.254 35.145 51.027 35.047 50.824 cv
34.941 50.625 34.793 50.453 34.602 50.305 cv
34.402 50.16 34.164 50.047 33.879 49.969 cv
33.594 49.891 33.27 49.852 32.906 49.852 cv
32.035 49.852 li
31.992 49.852 31.957 49.844 31.922 49.828 cv
31.887 49.812 31.855 49.785 31.832 49.746 cv
31.805 49.711 31.785 49.664 31.77 49.605 cv
31.754 49.547 31.746 49.469 31.746 49.371 cv
31.746 49.285 31.75 49.215 31.766 49.156 cv
31.773 49.102 31.793 49.055 31.824 49.02 cv
31.848 48.984 31.879 48.961 31.91 48.941 cv
31.941 48.93 31.977 48.922 32.02 48.918 cv
32.793 48.918 li
33.094 48.922 33.363 48.883 33.605 48.801 cv
33.84 48.727 34.043 48.613 34.215 48.465 cv
34.379 48.32 34.508 48.145 34.598 47.941 cv
34.688 47.738 34.734 47.512 34.734 47.258 cv
34.734 47.078 34.703 46.902 34.645 46.734 cv
34.582 46.57 34.492 46.426 34.375 46.301 cv
34.254 46.176 34.102 46.078 33.922 46.008 cv
33.734 45.937 33.523 45.902 33.281 45.902 cv
33.016 45.902 32.77 45.945 32.551 46.023 cv
32.324 46.105 32.129 46.191 31.957 46.281 cv
31.781 46.375 31.637 46.461 31.523 46.539 cv
31.41 46.621 31.328 46.66 31.285 46.656 cv
31.25 46.66 31.223 46.652 31.199 46.641 cv
31.172 46.629 31.152 46.605 31.137 46.57 cv
31.121 46.539 31.109 46.492 31.102 46.426 cv
31.094 46.367 31.09 46.285 31.094 46.184 cv
31.09 46.117 31.09 46.059 31.098 46.004 cv
31.098 45.953 31.109 45.906 31.125 45.863 cv
31.141 45.828 31.156 45.793 31.176 45.758 cv
31.191 45.73 31.223 45.691 31.266 45.645 cv
31.309 45.602 31.395 45.539 31.531 45.457 cv
31.66 45.375 31.824 45.297 32.02 45.215 cv
32.211 45.137 32.434 45.066 32.691 45.012 cv
32.941 44.957 33.215 44.93 33.512 44.93 cv
33.918 44.93 34.281 44.984 34.594 45.086 cv
34.906 45.195 35.164 45.344 35.375 45.531 cv
35.578 45.727 35.734 45.957 35.84 46.223 cv
35.941 46.492 35.992 46.785 35.996 47.109 cv
35.992 47.391 35.957 47.652 35.887 47.887 cv
35.813 48.129 35.703 48.34 35.563 48.523 cv
35.418 48.711 35.246 48.867 35.043 48.996 cv
34.836 49.129 34.598 49.223 34.328 49.27 cv
34.328 49.281 li
34.633 49.316 34.914 49.391 35.168 49.512 cv
35.422 49.633 35.641 49.785 35.824 49.969 cv
36.004 50.152 36.145 50.367 36.25 50.609 cv
36.352 50.855 36.402 51.117 36.406 51.395 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.93 51.406 mo
43.926 51.559 43.902 51.68 43.859 51.766 cv
43.813 51.855 43.75 51.898 43.668 51.895 cv
42.668 51.895 li
42.668 53.758 li
42.668 53.797 42.656 53.828 42.641 53.852 cv
42.617 53.879 42.586 53.898 42.543 53.918 cv
42.492 53.934 42.43 53.945 42.359 53.957 cv
42.281 53.965 42.188 53.969 42.07 53.973 cv
41.953 53.969 41.855 53.965 41.785 53.957 cv
41.707 53.945 41.648 53.934 41.605 53.918 cv
41.559 53.898 41.527 53.879 41.512 53.852 cv
41.492 53.828 41.484 53.797 41.488 53.758 cv
41.488 51.895 li
37.859 51.895 li
37.801 51.898 37.758 51.891 37.723 51.875 cv
37.688 51.863 37.652 51.836 37.625 51.797 cv
37.594 51.762 37.574 51.711 37.563 51.641 cv
37.551 51.574 37.547 51.484 37.547 51.371 cv
37.547 51.289 37.547 51.211 37.555 51.141 cv
37.555 51.07 37.566 51.008 37.582 50.953 cv
37.594 50.898 37.609 50.844 37.637 50.789 cv
37.656 50.734 37.684 50.68 37.719 50.617 cv
40.879 45.23 li
40.898 45.195 40.934 45.164 40.98 45.137 cv
41.023 45.109 41.078 45.086 41.152 45.066 cv
41.219 45.051 41.305 45.039 41.41 45.027 cv
41.512 45.023 41.633 45.02 41.773 45.016 cv
41.922 45.02 42.059 45.023 42.176 45.035 cv
42.289 45.047 42.379 45.062 42.453 45.078 cv
42.52 45.098 42.574 45.121 42.613 45.152 cv
42.648 45.184 42.668 45.219 42.668 45.258 cv
42.668 50.922 li
43.668 50.922 li
43.742 50.926 43.805 50.965 43.855 51.043 cv
43.902 51.125 43.926 51.246 43.93 51.406 cv
cp
41.488 46.055 mo
41.477 46.055 li
38.625 50.922 li
41.488 50.922 li
cp
f
30.129 14.828 mo
44.32 14.828 li
44.32 31.922 li
30.129 31.922 li
cp
0 0 0 0 cmyk
ef
36.406 25.613 mo
36.402 26.023 36.332 26.391 36.191 26.715 cv
36.047 27.043 35.844 27.324 35.582 27.555 cv
35.316 27.789 34.988 27.965 34.602 28.09 cv
34.211 28.215 33.773 28.277 33.289 28.277 cv
32.984 28.277 32.707 28.25 32.453 28.203 cv
32.191 28.156 31.961 28.105 31.766 28.035 cv
31.563 27.973 31.398 27.902 31.266 27.832 cv
31.133 27.762 31.047 27.711 31.016 27.676 cv
30.977 27.648 30.953 27.617 30.938 27.582 cv
30.918 27.551 30.898 27.512 30.887 27.465 cv
30.871 27.422 30.863 27.367 30.855 27.297 cv
30.848 27.234 30.844 27.152 30.848 27.051 cv
30.844 26.891 30.859 26.777 30.895 26.711 cv
30.926 26.648 30.973 26.613 31.035 26.613 cv
31.078 26.613 31.16 26.652 31.285 26.723 cv
31.406 26.801 31.566 26.879 31.762 26.961 cv
31.953 27.047 32.18 27.125 32.445 27.195 cv
32.703 27.27 32.996 27.305 33.316 27.305 cv
33.625 27.305 33.895 27.266 34.133 27.187 cv
34.363 27.109 34.563 27 34.723 26.859 cv
34.879 26.719 34.996 26.551 35.078 26.355 cv
35.156 26.16 35.195 25.949 35.199 25.723 cv
35.195 25.473 35.145 25.246 35.047 25.043 cv
34.941 24.844 34.793 24.672 34.602 24.523 cv
34.402 24.379 34.164 24.266 33.879 24.187 cv
33.594 24.109 33.27 24.07 32.906 24.07 cv
32.035 24.07 li
31.992 24.07 31.957 24.062 31.922 24.047 cv
31.887 24.031 31.855 24.004 31.832 23.965 cv
31.805 23.93 31.785 23.883 31.77 23.824 cv
31.754 23.766 31.746 23.687 31.746 23.59 cv
31.746 23.504 31.75 23.434 31.766 23.375 cv
31.773 23.32 31.793 23.273 31.824 23.238 cv
31.848 23.203 31.879 23.18 31.91 23.16 cv
31.941 23.148 31.977 23.141 32.02 23.137 cv
32.793 23.137 li
33.094 23.141 33.363 23.102 33.605 23.02 cv
33.84 22.945 34.043 22.832 34.215 22.684 cv
34.379 22.539 34.508 22.363 34.598 22.16 cv
34.688 21.957 34.734 21.73 34.734 21.477 cv
34.734 21.297 34.703 21.121 34.645 20.953 cv
34.582 20.789 34.492 20.645 34.375 20.52 cv
34.254 20.395 34.102 20.297 33.922 20.227 cv
33.734 20.156 33.523 20.121 33.281 20.121 cv
33.016 20.121 32.77 20.164 32.551 20.242 cv
32.324 20.324 32.129 20.41 31.957 20.5 cv
31.781 20.594 31.637 20.68 31.523 20.758 cv
31.41 20.84 31.328 20.879 31.285 20.875 cv
31.25 20.879 31.223 20.871 31.199 20.859 cv
31.172 20.848 31.152 20.824 31.137 20.789 cv
31.121 20.758 31.109 20.711 31.102 20.645 cv
31.094 20.586 31.09 20.504 31.094 20.402 cv
31.09 20.336 31.09 20.277 31.098 20.223 cv
31.098 20.172 31.109 20.125 31.125 20.082 cv
31.141 20.047 31.156 20.012 31.176 19.977 cv
31.191 19.949 31.223 19.91 31.266 19.863 cv
31.309 19.82 31.395 19.758 31.531 19.676 cv
31.66 19.594 31.824 19.516 32.02 19.434 cv
32.211 19.355 32.434 19.285 32.691 19.23 cv
32.941 19.176 33.215 19.148 33.512 19.148 cv
33.918 19.148 34.281 19.203 34.594 19.305 cv
34.906 19.414 35.164 19.562 35.375 19.75 cv
35.578 19.945 35.734 20.176 35.84 20.441 cv
35.941 20.711 35.992 21.004 35.996 21.328 cv
35.992 21.609 35.957 21.871 35.887 22.105 cv
35.813 22.348 35.703 22.559 35.563 22.742 cv
35.418 22.93 35.246 23.086 35.043 23.215 cv
34.836 23.348 34.598 23.441 34.328 23.488 cv
34.328 23.5 li
34.633 23.535 34.914 23.609 35.168 23.73 cv
35.422 23.852 35.641 24.004 35.824 24.187 cv
36.004 24.371 36.145 24.586 36.25 24.828 cv
36.352 25.074 36.402 25.336 36.406 25.613 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
43.781 25.277 mo
43.781 25.668 43.719 26.047 43.602 26.406 cv
43.477 26.773 43.293 27.09 43.051 27.363 cv
42.801 27.641 42.488 27.863 42.113 28.027 cv
41.73 28.195 41.285 28.277 40.77 28.277 cv
40.398 28.277 40.07 28.234 39.789 28.141 cv
39.504 28.055 39.258 27.922 39.047 27.75 cv
38.836 27.582 38.66 27.375 38.523 27.129 cv
38.383 26.883 38.27 26.602 38.188 26.285 cv
38.102 25.973 38.043 25.629 38.008 25.25 cv
37.969 24.879 37.949 24.477 37.953 24.043 cv
37.949 23.664 37.969 23.281 38.012 22.891 cv
38.051 22.508 38.125 22.133 38.23 21.766 cv
38.336 21.406 38.48 21.066 38.66 20.75 cv
38.84 20.434 39.066 20.156 39.34 19.922 cv
39.613 19.687 39.938 19.5 40.316 19.359 cv
40.695 19.223 41.137 19.156 41.641 19.152 cv
41.809 19.156 41.98 19.164 42.152 19.184 cv
42.324 19.207 42.484 19.238 42.633 19.27 cv
42.781 19.309 42.902 19.344 43.004 19.383 cv
43.102 19.422 43.168 19.457 43.203 19.48 cv
43.23 19.508 43.254 19.535 43.273 19.562 cv
43.289 19.594 43.305 19.625 43.313 19.66 cv
43.32 19.695 43.324 19.734 43.332 19.777 cv
43.332 19.82 43.336 19.875 43.34 19.937 cv
43.336 20.023 43.336 20.094 43.336 20.148 cv
43.332 20.211 43.32 20.258 43.309 20.293 cv
43.289 20.332 43.27 20.359 43.246 20.375 cv
43.219 20.395 43.188 20.402 43.148 20.402 cv
43.098 20.402 43.027 20.387 42.941 20.355 cv
42.852 20.324 42.746 20.289 42.625 20.246 cv
42.5 20.211 42.352 20.176 42.176 20.141 cv
42 20.113 41.797 20.098 41.566 20.094 cv
41.137 20.098 40.77 20.184 40.465 20.355 cv
40.16 20.527 39.91 20.762 39.715 21.055 cv
39.52 21.348 39.375 21.687 39.285 22.07 cv
39.188 22.461 39.133 22.863 39.125 23.281 cv
39.242 23.215 39.379 23.148 39.527 23.078 cv
39.676 23.012 39.836 22.949 40.012 22.891 cv
40.188 22.84 40.375 22.793 40.57 22.758 cv
40.766 22.727 40.977 22.711 41.203 22.707 cv
41.68 22.711 42.082 22.777 42.414 22.902 cv
42.742 23.035 43.008 23.215 43.215 23.445 cv
43.414 23.676 43.559 23.945 43.648 24.258 cv
43.734 24.57 43.781 24.91 43.781 25.277 cv
cp
42.586 25.387 mo
42.586 25.125 42.559 24.883 42.508 24.664 cv
42.453 24.449 42.363 24.266 42.242 24.109 cv
42.117 23.961 41.953 23.844 41.75 23.762 cv
41.539 23.68 41.285 23.637 40.988 23.637 cv
40.816 23.637 40.648 23.652 40.48 23.684 cv
40.309 23.715 40.145 23.758 39.988 23.805 cv
39.828 23.859 39.68 23.922 39.539 23.992 cv
39.395 24.066 39.262 24.141 39.145 24.219 cv
39.141 24.812 39.18 25.309 39.258 25.703 cv
39.332 26.102 39.441 26.418 39.586 26.656 cv
39.73 26.898 39.91 27.07 40.125 27.172 cv
40.34 27.277 40.59 27.328 40.879 27.324 cv
41.168 27.328 41.422 27.273 41.637 27.16 cv
41.852 27.055 42.027 26.906 42.172 26.719 cv
42.313 26.535 42.418 26.328 42.484 26.098 cv
42.551 25.867 42.586 25.633 42.586 25.387 cv
cp
f
60.148 509.629 mo
60.145 509.719 60.137 509.793 60.125 509.852 cv
60.109 509.914 60.09 509.965 60.07 509.996 cv
60.047 510.035 60.023 510.059 59.992 510.074 cv
59.961 510.09 59.93 510.098 59.898 510.098 cv
55.258 510.098 li
55.227 510.098 55.195 510.09 55.168 510.074 cv
55.141 510.059 55.113 510.035 55.09 509.996 cv
55.059 509.965 55.039 509.914 55.031 509.852 cv
55.016 509.793 55.012 509.719 55.012 509.629 cv
55.012 509.551 55.016 509.48 55.031 509.418 cv
55.039 509.359 55.059 509.312 55.082 509.27 cv
55.102 509.234 55.125 509.203 55.156 509.18 cv
55.184 509.16 55.219 509.148 55.258 509.148 cv
57.113 509.148 li
57.113 502.395 li
55.395 503.414 li
55.305 503.465 55.234 503.492 55.184 503.5 cv
55.129 503.508 55.09 503.5 55.059 503.469 cv
55.027 503.441 55.004 503.391 54.992 503.32 cv
54.98 503.254 54.977 503.168 54.977 503.059 cv
54.977 502.984 54.977 502.918 54.984 502.859 cv
54.988 502.809 55 502.762 55.016 502.723 cv
55.027 502.687 55.047 502.656 55.074 502.629 cv
55.098 502.602 55.133 502.574 55.176 502.543 cv
57.223 501.23 li
57.238 501.223 57.262 501.211 57.289 501.199 cv
57.316 501.191 57.352 501.184 57.395 501.172 cv
57.434 501.164 57.48 501.156 57.539 501.152 cv
57.59 501.152 57.66 501.152 57.742 501.148 cv
57.852 501.152 57.941 501.156 58.02 501.164 cv
58.09 501.176 58.148 501.187 58.188 501.203 cv
58.227 501.219 58.254 501.242 58.27 501.266 cv
58.285 501.293 58.293 501.316 58.293 501.344 cv
58.293 509.148 li
59.898 509.148 li
59.934 509.148 59.965 509.16 60 509.18 cv
60.031 509.203 60.059 509.234 60.082 509.27 cv
60.098 509.312 60.113 509.359 60.129 509.418 cv
60.137 509.48 60.145 509.551 60.148 509.629 cv
cp
f
131.074 509.59 mo
131.07 509.676 131.066 509.75 131.059 509.812 cv
131.047 509.879 131.031 509.934 131.012 509.973 cv
130.988 510.02 130.957 510.051 130.926 510.066 cv
130.887 510.09 130.852 510.098 130.816 510.098 cv
125.906 510.098 li
125.84 510.098 125.781 510.09 125.734 510.074 cv
125.684 510.059 125.645 510.035 125.613 509.996 cv
125.578 509.965 125.551 509.91 125.535 509.84 cv
125.516 509.77 125.508 509.684 125.512 509.582 cv
125.508 509.492 125.512 509.414 125.523 509.344 cv
125.527 509.277 125.543 509.215 125.57 509.16 cv
125.59 509.109 125.621 509.059 125.656 509.004 cv
125.691 508.953 125.738 508.898 125.797 508.836 cv
127.574 507.008 li
127.98 506.59 128.309 506.211 128.559 505.875 cv
128.801 505.543 128.992 505.238 129.133 504.961 cv
129.266 504.691 129.355 504.441 129.398 504.215 cv
129.438 503.988 129.457 503.777 129.461 503.582 cv
129.457 503.387 129.426 503.203 129.359 503.023 cv
129.293 502.852 129.195 502.695 129.074 502.559 cv
128.945 502.43 128.789 502.324 128.602 502.242 cv
128.41 502.168 128.195 502.129 127.953 502.125 cv
127.664 502.129 127.402 502.168 127.176 502.242 cv
126.941 502.324 126.742 502.41 126.574 502.496 cv
126.398 502.59 126.254 502.672 126.141 502.75 cv
126.023 502.828 125.938 502.867 125.883 502.867 cv
125.848 502.867 125.82 502.859 125.797 502.84 cv
125.77 502.824 125.746 502.793 125.73 502.75 cv
125.711 502.711 125.699 502.656 125.691 502.586 cv
125.684 502.516 125.68 502.434 125.68 502.336 cv
125.68 502.27 125.68 502.211 125.684 502.16 cv
125.688 502.109 125.695 502.066 125.707 502.027 cv
125.719 501.996 125.734 501.961 125.754 501.926 cv
125.77 501.898 125.805 501.859 125.863 501.809 cv
125.914 501.762 126.012 501.695 126.148 501.609 cv
126.281 501.527 126.449 501.445 126.656 501.367 cv
126.855 501.289 127.078 501.223 127.328 501.164 cv
127.57 501.113 127.828 501.086 128.102 501.082 cv
128.527 501.086 128.906 501.148 129.23 501.266 cv
129.551 501.391 129.816 501.555 130.035 501.762 cv
130.246 501.977 130.406 502.223 130.512 502.496 cv
130.617 502.777 130.672 503.074 130.672 503.387 cv
130.672 503.676 130.645 503.957 130.594 504.238 cv
130.543 504.52 130.438 504.824 130.273 505.152 cv
130.109 505.48 129.875 505.844 129.57 506.242 cv
129.266 506.645 128.855 507.105 128.348 507.625 cv
126.941 509.094 li
130.809 509.094 li
130.84 509.098 130.875 509.105 130.914 509.125 cv
130.945 509.148 130.977 509.18 131.004 509.219 cv
131.027 509.262 131.047 509.316 131.059 509.375 cv
131.066 509.437 131.07 509.508 131.074 509.59 cv
cp
f
202.371 507.57 mo
202.367 507.727 202.344 507.844 202.301 507.93 cv
202.254 508.016 202.191 508.059 202.109 508.059 cv
201.109 508.059 li
201.109 509.926 li
201.109 509.965 201.098 509.996 201.078 510.02 cv
201.059 510.047 201.027 510.066 200.98 510.086 cv
200.934 510.102 200.871 510.113 200.797 510.125 cv
200.719 510.133 200.621 510.137 200.508 510.141 cv
200.391 510.137 200.297 510.133 200.223 510.125 cv
200.145 510.113 200.086 510.102 200.043 510.086 cv
199.996 510.066 199.965 510.047 199.949 510.02 cv
199.934 509.996 199.926 509.965 199.926 509.926 cv
199.926 508.059 li
196.293 508.059 li
196.238 508.059 196.191 508.055 196.156 508.039 cv
196.117 508.027 196.082 508 196.055 507.961 cv
196.023 507.926 196.004 507.875 195.992 507.805 cv
195.98 507.738 195.977 507.648 195.977 507.535 cv
195.977 507.453 195.977 507.375 195.984 507.305 cv
195.984 507.238 195.996 507.176 196.012 507.113 cv
196.023 507.059 196.039 507.004 196.066 506.949 cv
196.086 506.902 196.113 506.844 196.148 506.781 cv
199.316 501.383 li
199.34 501.352 199.371 501.32 199.418 501.289 cv
199.457 501.266 199.516 501.242 199.59 501.219 cv
199.656 501.203 199.742 501.191 199.848 501.184 cv
199.945 501.18 200.066 501.176 200.211 501.172 cv
200.363 501.176 200.496 501.18 200.613 501.187 cv
200.723 501.199 200.816 501.215 200.891 501.23 cv
200.957 501.254 201.012 501.277 201.051 501.305 cv
201.09 501.336 201.109 501.371 201.109 501.41 cv
201.109 507.082 li
202.109 507.082 li
202.184 507.086 202.246 507.125 202.297 507.203 cv
202.344 507.285 202.367 507.41 202.371 507.57 cv
cp
199.926 502.207 mo
199.914 502.207 li
197.055 507.082 li
199.926 507.082 li
cp
f
273.16 507.219 mo
273.156 507.613 273.098 507.988 272.98 508.352 cv
272.859 508.715 272.676 509.035 272.434 509.312 cv
272.184 509.59 271.871 509.812 271.492 509.977 cv
271.109 510.145 270.66 510.227 270.148 510.227 cv
269.773 510.227 269.445 510.184 269.164 510.09 cv
268.875 510.004 268.629 509.871 268.422 509.699 cv
268.211 509.531 268.035 509.324 267.898 509.074 cv
267.754 508.828 267.641 508.547 267.559 508.23 cv
267.473 507.918 267.414 507.574 267.379 507.195 cv
267.34 506.82 267.32 506.414 267.324 505.984 cv
267.32 505.605 267.344 505.223 267.387 504.832 cv
267.426 504.445 267.496 504.07 267.605 503.703 cv
267.707 503.344 267.852 503.004 268.035 502.684 cv
268.215 502.371 268.441 502.094 268.715 501.855 cv
268.984 501.621 269.313 501.434 269.695 501.297 cv
270.074 501.16 270.516 501.094 271.02 501.09 cv
271.188 501.094 271.359 501.102 271.535 501.121 cv
271.707 501.141 271.867 501.168 272.016 501.203 cv
272.16 501.238 272.281 501.277 272.383 501.316 cv
272.48 501.359 272.547 501.391 272.582 501.414 cv
272.613 501.441 272.637 501.473 272.656 501.5 cv
272.668 501.531 272.68 501.562 272.691 501.594 cv
272.699 501.633 272.707 501.672 272.715 501.711 cv
272.715 501.758 272.719 501.809 272.723 501.871 cv
272.719 501.957 272.719 502.031 272.719 502.086 cv
272.715 502.148 272.703 502.195 272.691 502.227 cv
272.672 502.266 272.652 502.293 272.629 502.309 cv
272.602 502.332 272.57 502.34 272.531 502.336 cv
272.477 502.34 272.406 502.324 272.324 502.289 cv
272.234 502.262 272.129 502.227 272.008 502.184 cv
271.883 502.148 271.734 502.113 271.559 502.078 cv
271.379 502.047 271.172 502.031 270.945 502.027 cv
270.516 502.031 270.148 502.117 269.844 502.289 cv
269.535 502.465 269.285 502.699 269.094 502.992 cv
268.895 503.285 268.75 503.625 268.66 504.012 cv
268.563 504.398 268.512 504.801 268.5 505.223 cv
268.617 505.152 268.75 505.086 268.898 505.016 cv
269.047 504.953 269.207 504.891 269.387 504.832 cv
269.559 504.781 269.746 504.738 269.945 504.699 cv
270.141 504.668 270.352 504.648 270.578 504.645 cv
271.059 504.648 271.465 504.715 271.793 504.84 cv
272.121 504.973 272.387 505.152 272.594 505.383 cv
272.797 505.617 272.941 505.891 273.031 506.203 cv
273.113 506.52 273.156 506.859 273.16 507.219 cv
cp
271.969 507.332 mo
271.969 507.066 271.941 506.828 271.887 506.609 cv
271.832 506.395 271.742 506.207 271.621 506.055 cv
271.496 505.906 271.332 505.789 271.129 505.703 cv
270.922 505.621 270.668 505.582 270.367 505.578 cv
270.195 505.582 270.027 505.598 269.859 505.625 cv
269.688 505.656 269.523 505.695 269.367 505.75 cv
269.207 505.805 269.055 505.867 268.914 505.934 cv
268.77 506.008 268.637 506.086 268.52 506.164 cv
268.516 506.758 268.555 507.25 268.633 507.645 cv
268.707 508.047 268.816 508.367 268.961 508.605 cv
269.105 508.848 269.285 509.02 269.5 509.121 cv
269.715 509.227 269.969 509.277 270.258 509.273 cv
270.547 509.277 270.801 509.223 271.02 509.109 cv
271.234 509.004 271.41 508.855 271.555 508.668 cv
271.695 508.48 271.801 508.273 271.867 508.043 cv
271.934 507.812 271.969 507.574 271.969 507.332 cv
cp
f
344.09 507.816 mo
344.09 508.207 344.02 508.547 343.883 508.844 cv
343.746 509.145 343.547 509.398 343.289 509.605 cv
343.027 509.812 342.711 509.969 342.332 510.07 cv
341.949 510.176 341.512 510.227 341.027 510.227 cv
340.566 510.227 340.156 510.18 339.797 510.086 cv
339.434 509.992 339.129 509.852 338.879 509.66 cv
338.625 509.473 338.434 509.242 338.301 508.965 cv
338.168 508.691 338.102 508.375 338.102 508.023 cv
338.102 507.746 338.145 507.492 338.238 507.258 cv
338.324 507.027 338.457 506.812 338.633 506.609 cv
338.801 506.414 339.012 506.227 339.27 506.055 cv
339.52 505.883 339.805 505.723 340.121 505.566 cv
339.844 505.426 339.602 505.273 339.395 505.117 cv
339.18 504.961 339 504.789 338.855 504.602 cv
338.707 504.418 338.598 504.223 338.523 504.008 cv
338.445 503.801 338.406 503.57 338.41 503.32 cv
338.406 503.012 338.461 502.719 338.578 502.445 cv
338.688 502.172 338.859 501.937 339.086 501.734 cv
339.313 501.535 339.598 501.375 339.949 501.258 cv
340.297 501.145 340.707 501.086 341.18 501.082 cv
341.625 501.086 342.012 501.141 342.34 501.242 cv
342.664 501.352 342.938 501.496 343.152 501.684 cv
343.363 501.871 343.52 502.09 343.621 502.34 cv
343.723 502.59 343.773 502.859 343.773 503.148 cv
343.773 503.383 343.734 503.609 343.66 503.824 cv
343.582 504.039 343.473 504.242 343.328 504.434 cv
343.18 504.625 343 504.805 342.789 504.973 cv
342.574 505.141 342.328 505.297 342.059 505.441 cv
342.379 505.605 342.668 505.77 342.926 505.937 cv
343.176 506.109 343.391 506.293 343.566 506.484 cv
343.734 506.68 343.863 506.887 343.957 507.102 cv
344.043 507.32 344.09 507.559 344.09 507.816 cv
cp
342.605 503.258 mo
342.602 503.07 342.566 502.895 342.504 502.738 cv
342.434 502.582 342.34 502.449 342.215 502.34 cv
342.086 502.23 341.926 502.148 341.738 502.086 cv
341.547 502.031 341.332 502 341.09 502 cv
340.594 502 340.219 502.113 339.965 502.34 cv
339.711 502.566 339.582 502.875 339.586 503.258 cv
339.582 503.441 339.613 503.605 339.676 503.758 cv
339.734 503.91 339.832 504.055 339.965 504.191 cv
340.098 504.332 340.262 504.469 340.461 504.594 cv
340.66 504.727 340.898 504.863 341.172 505.004 cv
341.633 504.77 341.984 504.504 342.234 504.215 cv
342.477 503.926 342.602 503.609 342.605 503.258 cv
cp
342.895 507.941 mo
342.895 507.73 342.855 507.539 342.777 507.367 cv
342.699 507.195 342.578 507.035 342.422 506.887 cv
342.262 506.738 342.066 506.598 341.832 506.457 cv
341.594 506.32 341.32 506.172 341.016 506.02 cv
340.723 506.16 340.469 506.305 340.254 506.445 cv
340.035 506.59 339.859 506.734 339.719 506.883 cv
339.578 507.035 339.473 507.195 339.402 507.363 cv
339.332 507.531 339.297 507.715 339.297 507.914 cv
339.297 508.359 339.449 508.703 339.754 508.945 cv
340.059 509.191 340.512 509.312 341.117 509.309 cv
341.699 509.312 342.141 509.191 342.445 508.941 cv
342.742 508.699 342.895 508.363 342.895 507.941 cv
cp
f
411.266 509.629 mo
411.262 509.719 411.254 509.793 411.242 509.852 cv
411.227 509.914 411.207 509.965 411.188 509.996 cv
411.164 510.035 411.141 510.059 411.109 510.074 cv
411.078 510.09 411.047 510.098 411.016 510.098 cv
406.375 510.098 li
406.344 510.098 406.313 510.09 406.285 510.074 cv
406.258 510.059 406.23 510.035 406.207 509.996 cv
406.176 509.965 406.156 509.914 406.148 509.852 cv
406.133 509.793 406.129 509.719 406.129 509.629 cv
406.129 509.551 406.133 509.48 406.148 509.418 cv
406.156 509.359 406.176 509.312 406.199 509.27 cv
406.219 509.234 406.242 509.203 406.273 509.18 cv
406.301 509.16 406.336 509.148 406.375 509.148 cv
408.23 509.148 li
408.23 502.395 li
406.512 503.414 li
406.422 503.465 406.352 503.492 406.301 503.5 cv
406.246 503.508 406.207 503.5 406.176 503.469 cv
406.145 503.441 406.121 503.391 406.109 503.32 cv
406.098 503.254 406.094 503.168 406.094 503.059 cv
406.094 502.984 406.094 502.918 406.102 502.859 cv
406.105 502.809 406.117 502.762 406.133 502.723 cv
406.145 502.687 406.164 502.656 406.191 502.629 cv
406.215 502.602 406.25 502.574 406.293 502.543 cv
408.34 501.23 li
408.355 501.223 408.379 501.211 408.406 501.199 cv
408.434 501.191 408.469 501.184 408.512 501.172 cv
408.551 501.164 408.598 501.156 408.656 501.152 cv
408.707 501.152 408.777 501.152 408.859 501.148 cv
408.969 501.152 409.059 501.156 409.137 501.164 cv
409.207 501.176 409.266 501.187 409.305 501.203 cv
409.344 501.219 409.371 501.242 409.387 501.266 cv
409.402 501.293 409.41 501.316 409.41 501.344 cv
409.41 509.148 li
411.016 509.148 li
411.051 509.148 411.082 509.16 411.117 509.18 cv
411.148 509.203 411.176 509.234 411.199 509.27 cv
411.215 509.312 411.23 509.359 411.246 509.418 cv
411.254 509.48 411.262 509.551 411.266 509.629 cv
cp
f
418.621 505.633 mo
418.617 506.316 418.563 506.941 418.457 507.504 cv
418.348 508.07 418.172 508.555 417.922 508.957 cv
417.672 509.363 417.344 509.676 416.945 509.895 cv
416.539 510.117 416.043 510.227 415.457 510.227 cv
414.895 510.227 414.426 510.129 414.043 509.93 cv
413.66 509.73 413.352 509.437 413.117 509.051 cv
412.883 508.664 412.715 508.187 412.621 507.621 cv
412.52 507.059 412.473 506.41 412.477 505.676 cv
412.473 505 412.527 504.379 412.641 503.812 cv
412.746 503.246 412.926 502.762 413.176 502.355 cv
413.422 501.953 413.746 501.637 414.148 501.414 cv
414.551 501.195 415.043 501.086 415.633 501.082 cv
416.191 501.086 416.664 501.187 417.051 501.383 cv
417.43 501.586 417.738 501.879 417.973 502.262 cv
418.203 502.652 418.371 503.125 418.473 503.687 cv
418.57 504.254 418.617 504.902 418.621 505.633 cv
cp
417.414 505.715 mo
417.41 505.273 417.395 504.879 417.363 504.523 cv
417.328 504.172 417.281 503.859 417.223 503.59 cv
417.156 503.32 417.074 503.086 416.98 502.891 cv
416.879 502.695 416.762 502.535 416.629 502.41 cv
416.488 502.285 416.332 502.195 416.156 502.137 cv
415.98 502.082 415.785 502.055 415.566 502.051 cv
415.176 502.055 414.859 502.145 414.617 502.324 cv
414.375 502.508 414.184 502.758 414.043 503.078 cv
413.902 503.398 413.805 503.777 413.758 504.207 cv
413.703 504.641 413.68 505.102 413.684 505.594 cv
413.68 506.262 413.715 506.828 413.785 507.289 cv
413.855 507.758 413.965 508.137 414.113 508.426 cv
414.262 508.723 414.449 508.934 414.684 509.062 cv
414.91 509.199 415.191 509.266 415.523 509.262 cv
415.777 509.266 416.004 509.223 416.199 509.137 cv
416.395 509.055 416.559 508.937 416.699 508.781 cv
416.836 508.629 416.953 508.445 417.047 508.23 cv
417.137 508.016 417.211 507.777 417.27 507.516 cv
417.32 507.258 417.359 506.977 417.383 506.668 cv
417.402 506.367 417.41 506.047 417.414 505.715 cv
cp
f
482.219 509.629 mo
482.215 509.719 482.207 509.793 482.195 509.852 cv
482.18 509.914 482.16 509.965 482.141 509.996 cv
482.117 510.035 482.094 510.059 482.063 510.074 cv
482.031 510.09 482 510.098 481.969 510.098 cv
477.328 510.098 li
477.297 510.098 477.266 510.09 477.238 510.074 cv
477.211 510.059 477.184 510.035 477.16 509.996 cv
477.129 509.965 477.109 509.914 477.102 509.852 cv
477.086 509.793 477.082 509.719 477.082 509.629 cv
477.082 509.551 477.086 509.48 477.102 509.418 cv
477.109 509.359 477.129 509.312 477.152 509.27 cv
477.172 509.234 477.195 509.203 477.227 509.18 cv
477.254 509.16 477.289 509.148 477.328 509.148 cv
479.184 509.148 li
479.184 502.395 li
477.465 503.414 li
477.375 503.465 477.305 503.492 477.254 503.5 cv
477.199 503.508 477.16 503.5 477.129 503.469 cv
477.098 503.441 477.074 503.391 477.063 503.32 cv
477.051 503.254 477.047 503.168 477.047 503.059 cv
477.047 502.984 477.047 502.918 477.055 502.859 cv
477.059 502.809 477.07 502.762 477.086 502.723 cv
477.098 502.687 477.117 502.656 477.145 502.629 cv
477.168 502.602 477.203 502.574 477.246 502.543 cv
479.293 501.23 li
479.309 501.223 479.332 501.211 479.359 501.199 cv
479.387 501.191 479.422 501.184 479.465 501.172 cv
479.504 501.164 479.551 501.156 479.609 501.152 cv
479.66 501.152 479.73 501.152 479.813 501.148 cv
479.922 501.152 480.012 501.156 480.09 501.164 cv
480.16 501.176 480.219 501.187 480.258 501.203 cv
480.297 501.219 480.324 501.242 480.34 501.266 cv
480.355 501.293 480.363 501.316 480.363 501.344 cv
480.363 509.148 li
481.969 509.148 li
482.004 509.148 482.035 509.16 482.07 509.18 cv
482.102 509.203 482.129 509.234 482.152 509.27 cv
482.168 509.312 482.184 509.359 482.199 509.418 cv
482.207 509.48 482.215 509.551 482.219 509.629 cv
cp
f
489.273 509.59 mo
489.27 509.676 489.266 509.75 489.258 509.812 cv
489.246 509.879 489.23 509.934 489.211 509.973 cv
489.188 510.02 489.156 510.051 489.125 510.066 cv
489.086 510.09 489.051 510.098 489.016 510.098 cv
484.105 510.098 li
484.039 510.098 483.98 510.09 483.934 510.074 cv
483.883 510.059 483.844 510.035 483.813 509.996 cv
483.777 509.965 483.75 509.91 483.734 509.84 cv
483.715 509.77 483.707 509.684 483.711 509.582 cv
483.707 509.492 483.711 509.414 483.723 509.344 cv
483.727 509.277 483.742 509.215 483.77 509.16 cv
483.789 509.109 483.82 509.059 483.855 509.004 cv
483.891 508.953 483.938 508.898 483.996 508.836 cv
485.773 507.008 li
486.18 506.59 486.508 506.211 486.758 505.875 cv
487 505.543 487.191 505.238 487.332 504.961 cv
487.465 504.691 487.555 504.441 487.598 504.215 cv
487.637 503.988 487.656 503.777 487.66 503.582 cv
487.656 503.387 487.625 503.203 487.559 503.023 cv
487.492 502.852 487.395 502.695 487.273 502.559 cv
487.145 502.43 486.988 502.324 486.801 502.242 cv
486.609 502.168 486.395 502.129 486.152 502.125 cv
485.863 502.129 485.602 502.168 485.375 502.242 cv
485.141 502.324 484.941 502.41 484.773 502.496 cv
484.598 502.59 484.453 502.672 484.34 502.75 cv
484.223 502.828 484.137 502.867 484.082 502.867 cv
484.047 502.867 484.02 502.859 483.996 502.84 cv
483.969 502.824 483.945 502.793 483.93 502.75 cv
483.91 502.711 483.898 502.656 483.891 502.586 cv
483.883 502.516 483.879 502.434 483.879 502.336 cv
483.879 502.27 483.879 502.211 483.883 502.16 cv
483.887 502.109 483.895 502.066 483.906 502.027 cv
483.918 501.996 483.934 501.961 483.953 501.926 cv
483.969 501.898 484.004 501.859 484.063 501.809 cv
484.113 501.762 484.211 501.695 484.348 501.609 cv
484.48 501.527 484.648 501.445 484.855 501.367 cv
485.055 501.289 485.277 501.223 485.527 501.164 cv
485.77 501.113 486.027 501.086 486.301 501.082 cv
486.727 501.086 487.105 501.148 487.43 501.266 cv
487.75 501.391 488.016 501.555 488.234 501.762 cv
488.445 501.977 488.605 502.223 488.711 502.496 cv
488.816 502.777 488.871 503.074 488.871 503.387 cv
488.871 503.676 488.844 503.957 488.793 504.238 cv
488.742 504.52 488.637 504.824 488.473 505.152 cv
488.309 505.48 488.074 505.844 487.77 506.242 cv
487.465 506.645 487.055 507.105 486.547 507.625 cv
485.141 509.094 li
489.008 509.094 li
489.039 509.098 489.074 509.105 489.113 509.125 cv
489.145 509.148 489.176 509.18 489.203 509.219 cv
489.227 509.262 489.246 509.316 489.258 509.375 cv
489.266 509.437 489.27 509.508 489.273 509.59 cv
cp
f
553.156 509.629 mo
553.152 509.719 553.145 509.793 553.133 509.852 cv
553.117 509.914 553.098 509.965 553.078 509.996 cv
553.055 510.035 553.031 510.059 553 510.074 cv
552.969 510.09 552.938 510.098 552.906 510.098 cv
548.266 510.098 li
548.234 510.098 548.203 510.09 548.176 510.074 cv
548.148 510.059 548.121 510.035 548.098 509.996 cv
548.066 509.965 548.047 509.914 548.039 509.852 cv
548.023 509.793 548.02 509.719 548.02 509.629 cv
548.02 509.551 548.023 509.48 548.039 509.418 cv
548.047 509.359 548.066 509.312 548.09 509.27 cv
548.109 509.234 548.133 509.203 548.164 509.18 cv
548.191 509.16 548.227 509.148 548.266 509.148 cv
550.121 509.148 li
550.121 502.395 li
548.402 503.414 li
548.313 503.465 548.242 503.492 548.191 503.5 cv
548.137 503.508 548.098 503.5 548.066 503.469 cv
548.035 503.441 548.012 503.391 548 503.32 cv
547.988 503.254 547.984 503.168 547.984 503.059 cv
547.984 502.984 547.984 502.918 547.992 502.859 cv
547.996 502.809 548.008 502.762 548.023 502.723 cv
548.035 502.687 548.055 502.656 548.082 502.629 cv
548.105 502.602 548.141 502.574 548.184 502.543 cv
550.23 501.23 li
550.246 501.223 550.27 501.211 550.297 501.199 cv
550.324 501.191 550.359 501.184 550.402 501.172 cv
550.441 501.164 550.488 501.156 550.547 501.152 cv
550.598 501.152 550.668 501.152 550.75 501.148 cv
550.859 501.152 550.949 501.156 551.027 501.164 cv
551.098 501.176 551.156 501.187 551.195 501.203 cv
551.234 501.219 551.262 501.242 551.277 501.266 cv
551.293 501.293 551.301 501.316 551.301 501.344 cv
551.301 509.148 li
552.906 509.148 li
552.941 509.148 552.973 509.16 553.008 509.18 cv
553.039 509.203 553.066 509.234 553.09 509.27 cv
553.105 509.312 553.121 509.359 553.137 509.418 cv
553.145 509.48 553.152 509.551 553.156 509.629 cv
cp
f
560.594 507.57 mo
560.59 507.727 560.566 507.844 560.523 507.93 cv
560.477 508.016 560.414 508.059 560.332 508.059 cv
559.332 508.059 li
559.332 509.926 li
559.332 509.965 559.32 509.996 559.301 510.02 cv
559.281 510.047 559.25 510.066 559.203 510.086 cv
559.156 510.102 559.094 510.113 559.02 510.125 cv
558.941 510.133 558.844 510.137 558.73 510.141 cv
558.613 510.137 558.52 510.133 558.445 510.125 cv
558.367 510.113 558.309 510.102 558.266 510.086 cv
558.219 510.066 558.188 510.047 558.172 510.02 cv
558.156 509.996 558.148 509.965 558.148 509.926 cv
558.148 508.059 li
554.516 508.059 li
554.461 508.059 554.414 508.055 554.379 508.039 cv
554.34 508.027 554.305 508 554.277 507.961 cv
554.246 507.926 554.227 507.875 554.215 507.805 cv
554.203 507.738 554.199 507.648 554.199 507.535 cv
554.199 507.453 554.199 507.375 554.207 507.305 cv
554.207 507.238 554.219 507.176 554.234 507.113 cv
554.246 507.059 554.262 507.004 554.289 506.949 cv
554.309 506.902 554.336 506.844 554.371 506.781 cv
557.539 501.383 li
557.563 501.352 557.594 501.32 557.641 501.289 cv
557.68 501.266 557.738 501.242 557.813 501.219 cv
557.879 501.203 557.965 501.191 558.07 501.184 cv
558.168 501.18 558.289 501.176 558.434 501.172 cv
558.586 501.176 558.719 501.18 558.836 501.187 cv
558.945 501.199 559.039 501.215 559.113 501.23 cv
559.18 501.254 559.234 501.277 559.273 501.305 cv
559.313 501.336 559.332 501.371 559.332 501.41 cv
559.332 507.082 li
560.332 507.082 li
560.406 507.086 560.469 507.125 560.52 507.203 cv
560.566 507.285 560.59 507.41 560.594 507.57 cv
cp
558.148 502.207 mo
558.137 502.207 li
555.277 507.082 li
558.148 507.082 li
cp
f
624.105 509.629 mo
624.102 509.719 624.094 509.793 624.082 509.852 cv
624.066 509.914 624.047 509.965 624.027 509.996 cv
624.004 510.035 623.98 510.059 623.949 510.074 cv
623.918 510.09 623.887 510.098 623.855 510.098 cv
619.215 510.098 li
619.184 510.098 619.152 510.09 619.125 510.074 cv
619.098 510.059 619.07 510.035 619.047 509.996 cv
619.016 509.965 618.996 509.914 618.988 509.852 cv
618.973 509.793 618.969 509.719 618.969 509.629 cv
618.969 509.551 618.973 509.48 618.988 509.418 cv
618.996 509.359 619.016 509.312 619.039 509.27 cv
619.059 509.234 619.082 509.203 619.113 509.18 cv
619.141 509.16 619.176 509.148 619.215 509.148 cv
621.07 509.148 li
621.07 502.395 li
619.352 503.414 li
619.262 503.465 619.191 503.492 619.141 503.5 cv
619.086 503.508 619.047 503.5 619.016 503.469 cv
618.984 503.441 618.961 503.391 618.949 503.32 cv
618.938 503.254 618.934 503.168 618.934 503.059 cv
618.934 502.984 618.934 502.918 618.941 502.859 cv
618.945 502.809 618.957 502.762 618.973 502.723 cv
618.984 502.687 619.004 502.656 619.031 502.629 cv
619.055 502.602 619.09 502.574 619.133 502.543 cv
621.18 501.23 li
621.195 501.223 621.219 501.211 621.246 501.199 cv
621.273 501.191 621.309 501.184 621.352 501.172 cv
621.391 501.164 621.438 501.156 621.496 501.152 cv
621.547 501.152 621.617 501.152 621.699 501.148 cv
621.809 501.152 621.898 501.156 621.977 501.164 cv
622.047 501.176 622.105 501.187 622.145 501.203 cv
622.184 501.219 622.211 501.242 622.227 501.266 cv
622.242 501.293 622.25 501.316 622.25 501.344 cv
622.25 509.148 li
623.855 509.148 li
623.891 509.148 623.922 509.16 623.957 509.18 cv
623.988 509.203 624.016 509.234 624.039 509.27 cv
624.055 509.312 624.07 509.359 624.086 509.418 cv
624.094 509.48 624.102 509.551 624.105 509.629 cv
cp
f
631.391 507.219 mo
631.387 507.613 631.328 507.988 631.211 508.352 cv
631.09 508.715 630.906 509.035 630.664 509.312 cv
630.414 509.59 630.102 509.812 629.723 509.977 cv
629.34 510.145 628.891 510.227 628.379 510.227 cv
628.004 510.227 627.676 510.184 627.395 510.09 cv
627.105 510.004 626.859 509.871 626.652 509.699 cv
626.441 509.531 626.266 509.324 626.129 509.074 cv
625.984 508.828 625.871 508.547 625.789 508.23 cv
625.703 507.918 625.645 507.574 625.609 507.195 cv
625.57 506.82 625.551 506.414 625.555 505.984 cv
625.551 505.605 625.574 505.223 625.617 504.832 cv
625.656 504.445 625.727 504.07 625.836 503.703 cv
625.938 503.344 626.082 503.004 626.266 502.684 cv
626.445 502.371 626.672 502.094 626.945 501.855 cv
627.215 501.621 627.543 501.434 627.926 501.297 cv
628.305 501.16 628.746 501.094 629.25 501.09 cv
629.418 501.094 629.59 501.102 629.766 501.121 cv
629.938 501.141 630.098 501.168 630.246 501.203 cv
630.391 501.238 630.512 501.277 630.613 501.316 cv
630.711 501.359 630.777 501.391 630.813 501.414 cv
630.844 501.441 630.867 501.473 630.887 501.5 cv
630.898 501.531 630.91 501.562 630.922 501.594 cv
630.93 501.633 630.938 501.672 630.945 501.711 cv
630.945 501.758 630.949 501.809 630.953 501.871 cv
630.949 501.957 630.949 502.031 630.949 502.086 cv
630.945 502.148 630.934 502.195 630.922 502.227 cv
630.902 502.266 630.883 502.293 630.859 502.309 cv
630.832 502.332 630.801 502.34 630.762 502.336 cv
630.707 502.34 630.637 502.324 630.555 502.289 cv
630.465 502.262 630.359 502.227 630.238 502.184 cv
630.113 502.148 629.965 502.113 629.789 502.078 cv
629.609 502.047 629.402 502.031 629.176 502.027 cv
628.746 502.031 628.379 502.117 628.074 502.289 cv
627.766 502.465 627.516 502.699 627.324 502.992 cv
627.125 503.285 626.98 503.625 626.891 504.012 cv
626.793 504.398 626.742 504.801 626.73 505.223 cv
626.848 505.152 626.98 505.086 627.129 505.016 cv
627.277 504.953 627.438 504.891 627.617 504.832 cv
627.789 504.781 627.977 504.738 628.176 504.699 cv
628.371 504.668 628.582 504.648 628.809 504.645 cv
629.289 504.648 629.695 504.715 630.023 504.84 cv
630.352 504.973 630.617 505.152 630.824 505.383 cv
631.027 505.617 631.172 505.891 631.262 506.203 cv
631.344 506.52 631.387 506.859 631.391 507.219 cv
cp
630.199 507.332 mo
630.199 507.066 630.172 506.828 630.117 506.609 cv
630.063 506.395 629.973 506.207 629.852 506.055 cv
629.727 505.906 629.563 505.789 629.359 505.703 cv
629.152 505.621 628.898 505.582 628.598 505.578 cv
628.426 505.582 628.258 505.598 628.09 505.625 cv
627.918 505.656 627.754 505.695 627.598 505.75 cv
627.438 505.805 627.285 505.867 627.145 505.934 cv
627 506.008 626.867 506.086 626.75 506.164 cv
626.746 506.758 626.785 507.25 626.863 507.645 cv
626.938 508.047 627.047 508.367 627.191 508.605 cv
627.336 508.848 627.516 509.02 627.73 509.121 cv
627.945 509.227 628.199 509.277 628.488 509.273 cv
628.777 509.277 629.031 509.223 629.25 509.109 cv
629.465 509.004 629.641 508.855 629.785 508.668 cv
629.926 508.48 630.031 508.273 630.098 508.043 cv
630.164 507.812 630.199 507.574 630.199 507.332 cv
cp
f
16.605 354.559 mo
16.703 354.562 16.785 354.566 16.852 354.574 cv
16.926 354.586 16.984 354.605 17.027 354.629 cv
17.078 354.656 17.113 354.687 17.129 354.719 cv
17.152 354.758 17.16 354.793 17.16 354.832 cv
17.16 359.672 li
17.16 359.793 17.121 359.906 17.039 360.012 cv
16.961 360.121 16.82 360.176 16.613 360.172 cv
7.621 360.172 li
7.418 360.176 7.277 360.121 7.195 360.012 cv
7.117 359.906 7.078 359.793 7.074 359.672 cv
7.074 354.887 li
7.078 354.848 7.086 354.809 7.105 354.773 cv
7.129 354.742 7.164 354.715 7.207 354.691 cv
7.258 354.672 7.316 354.656 7.383 354.641 cv
7.457 354.629 7.543 354.621 7.645 354.621 cv
7.738 354.621 7.82 354.629 7.891 354.641 cv
7.961 354.656 8.02 354.672 8.063 354.691 cv
8.109 354.715 8.141 354.742 8.16 354.773 cv
8.184 354.809 8.195 354.848 8.191 354.887 cv
8.191 358.832 li
11.355 358.832 li
11.355 355.449 li
11.359 355.41 11.371 355.371 11.391 355.336 cv
11.418 355.305 11.449 355.277 11.488 355.25 cv
11.531 355.23 11.59 355.215 11.66 355.199 cv
11.734 355.191 11.82 355.184 11.914 355.184 cv
12.012 355.184 12.09 355.191 12.156 355.199 cv
12.227 355.215 12.281 355.23 12.32 355.25 cv
12.363 355.277 12.395 355.305 12.41 355.336 cv
12.43 355.371 12.438 355.41 12.438 355.449 cv
12.438 358.832 li
16.047 358.832 li
16.047 354.832 li
16.047 354.793 16.059 354.758 16.078 354.719 cv
16.102 354.687 16.133 354.656 16.176 354.629 cv
16.223 354.605 16.281 354.586 16.348 354.574 cv
16.418 354.566 16.504 354.562 16.605 354.559 cv
cp
f
16.965 346.492 mo
17.012 346.492 17.047 346.504 17.07 346.523 cv
17.102 346.547 17.125 346.582 17.145 346.625 cv
17.164 346.676 17.176 346.738 17.191 346.82 cv
17.199 346.902 17.207 347.008 17.207 347.129 cv
17.207 347.262 17.199 347.367 17.191 347.449 cv
17.176 347.535 17.164 347.602 17.145 347.645 cv
17.125 347.695 17.102 347.727 17.07 347.746 cv
17.047 347.77 17.012 347.781 16.965 347.777 cv
12.859 347.777 li
12.461 347.781 12.141 347.812 11.895 347.871 cv
11.652 347.937 11.441 348.027 11.262 348.145 cv
11.086 348.262 10.949 348.418 10.855 348.605 cv
10.762 348.801 10.715 349.02 10.715 349.266 cv
10.715 349.59 10.832 349.914 11.059 350.234 cv
11.293 350.559 11.625 350.895 12.063 351.246 cv
16.965 351.246 li
17.012 351.25 17.047 351.262 17.07 351.277 cv
17.102 351.301 17.125 351.332 17.145 351.379 cv
17.164 351.426 17.176 351.492 17.191 351.57 cv
17.199 351.656 17.207 351.762 17.207 351.891 cv
17.207 352.02 17.199 352.125 17.191 352.203 cv
17.176 352.289 17.164 352.355 17.145 352.402 cv
17.125 352.457 17.102 352.488 17.07 352.504 cv
17.047 352.523 17.012 352.535 16.965 352.531 cv
9.953 352.531 li
9.914 352.535 9.879 352.527 9.848 352.508 cv
9.82 352.496 9.797 352.465 9.77 352.414 cv
9.75 352.371 9.734 352.309 9.723 352.234 cv
9.719 352.164 9.715 352.07 9.711 351.945 cv
9.715 351.836 9.719 351.738 9.723 351.66 cv
9.734 351.586 9.75 351.527 9.77 351.484 cv
9.797 351.445 9.82 351.418 9.848 351.398 cv
9.879 351.383 9.914 351.375 9.953 351.371 cv
10.879 351.371 li
10.438 350.98 10.117 350.586 9.91 350.191 cv
9.707 349.801 9.602 349.402 9.602 349 cv
9.602 348.531 9.684 348.141 9.84 347.82 cv
10.004 347.504 10.215 347.242 10.477 347.043 cv
10.742 346.848 11.051 346.707 11.406 346.621 cv
11.762 346.535 12.191 346.492 12.688 346.492 cv
cp
f
13.156 338.168 mo
13.359 338.172 13.5 338.223 13.586 338.32 cv
13.672 338.426 13.715 338.543 13.715 338.668 cv
13.715 343.285 li
14.105 343.289 14.457 343.25 14.77 343.168 cv
15.082 343.094 15.352 342.961 15.57 342.777 cv
15.797 342.598 15.969 342.363 16.086 342.066 cv
16.211 341.777 16.27 341.418 16.266 340.992 cv
16.27 340.66 16.242 340.363 16.184 340.102 cv
16.133 339.84 16.07 339.613 16 339.422 cv
15.934 339.234 15.875 339.078 15.816 338.953 cv
15.766 338.832 15.738 338.738 15.734 338.676 cv
15.738 338.641 15.746 338.609 15.762 338.578 cv
15.781 338.551 15.809 338.527 15.844 338.508 cv
15.883 338.496 15.934 338.484 15.996 338.473 cv
16.063 338.469 16.141 338.465 16.234 338.461 cv
16.305 338.465 16.363 338.469 16.41 338.469 cv
16.457 338.477 16.5 338.48 16.539 338.488 cv
16.578 338.496 16.613 338.512 16.645 338.527 cv
16.676 338.551 16.707 338.574 16.734 338.598 cv
16.766 338.629 16.813 338.711 16.875 338.852 cv
16.941 338.992 17.004 339.176 17.066 339.398 cv
17.129 339.625 17.184 339.883 17.234 340.176 cv
17.281 340.469 17.305 340.781 17.309 341.113 cv
17.305 341.691 17.227 342.199 17.066 342.629 cv
16.906 343.066 16.668 343.43 16.352 343.723 cv
16.035 344.023 15.641 344.246 15.16 344.395 cv
14.684 344.543 14.125 344.617 13.488 344.617 cv
12.891 344.617 12.352 344.543 11.867 344.387 cv
11.391 344.234 10.98 344.008 10.645 343.711 cv
10.309 343.418 10.051 343.062 9.871 342.648 cv
9.691 342.234 9.602 341.77 9.602 341.254 cv
9.602 340.703 9.691 340.234 9.867 339.848 cv
10.047 339.461 10.285 339.145 10.582 338.891 cv
10.883 338.645 11.234 338.461 11.633 338.344 cv
12.039 338.23 12.469 338.172 12.922 338.168 cv
cp
12.773 339.461 mo
12.098 339.445 11.566 339.598 11.184 339.914 cv
10.801 340.23 10.609 340.699 10.605 341.316 cv
10.609 341.641 10.668 341.922 10.785 342.16 cv
10.906 342.402 11.066 342.602 11.262 342.762 cv
11.461 342.926 11.691 343.051 11.953 343.137 cv
12.215 343.227 12.488 343.277 12.773 343.285 cv
cp
f
10.41 332.102 mo
10.527 332.105 10.625 332.105 10.699 332.109 cv
10.781 332.117 10.844 332.129 10.883 332.141 cv
10.93 332.16 10.961 332.18 10.984 332.199 cv
11.008 332.227 11.02 332.258 11.02 332.297 cv
11.02 332.34 11.008 332.391 10.984 332.449 cv
10.961 332.512 10.938 332.582 10.914 332.652 cv
10.891 332.73 10.871 332.812 10.848 332.906 cv
10.832 333 10.82 333.102 10.816 333.211 cv
10.82 333.344 10.848 333.473 10.895 333.594 cv
10.949 333.719 11.035 333.848 11.152 333.984 cv
11.277 334.125 11.434 334.27 11.629 334.418 cv
11.824 334.57 12.066 334.738 12.352 334.918 cv
16.965 334.918 li
17.012 334.922 17.047 334.934 17.07 334.949 cv
17.102 334.973 17.125 335.004 17.145 335.051 cv
17.164 335.098 17.176 335.164 17.191 335.242 cv
17.199 335.328 17.207 335.434 17.207 335.562 cv
17.207 335.691 17.199 335.797 17.191 335.875 cv
17.176 335.961 17.164 336.027 17.145 336.074 cv
17.125 336.129 17.102 336.16 17.07 336.176 cv
17.047 336.195 17.012 336.207 16.965 336.203 cv
9.953 336.203 li
9.914 336.207 9.879 336.199 9.848 336.18 cv
9.82 336.168 9.797 336.137 9.77 336.086 cv
9.75 336.043 9.734 335.98 9.723 335.906 cv
9.719 335.836 9.715 335.742 9.711 335.617 cv
9.715 335.508 9.719 335.41 9.723 335.332 cv
9.734 335.258 9.75 335.199 9.77 335.156 cv
9.797 335.117 9.82 335.09 9.848 335.07 cv
9.879 335.055 9.914 335.047 9.953 335.043 cv
10.973 335.043 li
10.691 334.855 10.465 334.672 10.289 334.5 cv
10.113 334.332 9.973 334.172 9.871 334.02 cv
9.77 333.871 9.699 333.723 9.66 333.574 cv
9.621 333.426 9.602 333.277 9.602 333.125 cv
9.602 333.059 9.605 332.98 9.613 332.895 cv
9.621 332.809 9.637 332.719 9.656 332.625 cv
9.68 332.531 9.703 332.449 9.727 332.371 cv
9.754 332.301 9.781 332.246 9.805 332.211 cv
9.836 332.184 9.859 332.164 9.879 332.148 cv
9.906 332.141 9.938 332.129 9.969 332.121 cv
10.008 332.113 10.059 332.109 10.129 332.105 cv
10.199 332.105 10.293 332.105 10.41 332.102 cv
cp
f
10.27 325.062 mo
10.453 325.066 10.586 325.09 10.664 325.137 cv
10.746 325.187 10.785 325.25 10.785 325.324 cv
10.785 326.332 li
10.973 326.152 11.18 326.023 11.406 325.949 cv
11.633 325.879 11.867 325.844 12.109 325.84 cv
12.516 325.844 12.875 325.91 13.188 326.035 cv
13.5 326.168 13.766 326.352 13.977 326.594 cv
14.195 326.836 14.359 327.125 14.473 327.453 cv
14.59 327.789 14.648 328.156 14.645 328.559 cv
14.648 328.848 14.609 329.121 14.531 329.375 cv
14.457 329.637 14.363 329.832 14.246 329.969 cv
14.344 330.062 14.449 330.141 14.566 330.199 cv
14.688 330.262 14.824 330.293 14.977 330.289 cv
15.16 330.293 15.313 330.207 15.43 330.035 cv
15.555 329.867 15.617 329.645 15.625 329.363 cv
15.703 327.531 li
15.715 327.184 15.762 326.867 15.848 326.574 cv
15.934 326.285 16.059 326.031 16.215 325.816 cv
16.375 325.605 16.566 325.437 16.797 325.316 cv
17.031 325.199 17.301 325.141 17.605 325.137 cv
17.926 325.141 18.23 325.207 18.523 325.34 cv
18.813 325.477 19.066 325.684 19.289 325.961 cv
19.508 326.242 19.684 326.598 19.813 327.027 cv
19.938 327.457 20 327.965 20.004 328.551 cv
20 329.121 19.953 329.605 19.859 330 cv
19.762 330.398 19.629 330.723 19.465 330.977 cv
19.297 331.23 19.102 331.414 18.871 331.527 cv
18.637 331.645 18.383 331.703 18.117 331.699 cv
17.945 331.703 17.781 331.684 17.621 331.637 cv
17.457 331.598 17.305 331.535 17.16 331.449 cv
17.016 331.367 16.879 331.258 16.742 331.129 cv
16.613 331.004 16.48 330.859 16.352 330.687 cv
16.223 330.945 16.059 331.133 15.859 331.254 cv
15.664 331.375 15.453 331.434 15.219 331.434 cv
14.906 331.434 14.621 331.371 14.371 331.242 cv
14.121 331.113 13.898 330.953 13.699 330.758 cv
13.508 330.922 13.293 331.047 13.051 331.141 cv
12.813 331.234 12.52 331.281 12.172 331.281 cv
11.777 331.281 11.418 331.215 11.098 331.078 cv
10.781 330.945 10.516 330.758 10.297 330.516 cv
10.082 330.277 9.914 329.992 9.793 329.656 cv
9.68 329.324 9.621 328.957 9.617 328.559 cv
9.621 328.348 9.633 328.148 9.652 327.965 cv
9.68 327.781 9.711 327.609 9.75 327.445 cv
9.75 325.324 li
9.754 325.238 9.797 325.172 9.879 325.129 cv
9.969 325.086 10.098 325.066 10.27 325.062 cv
cp
12.117 327.07 mo
11.645 327.074 11.273 327.207 11 327.465 cv
10.734 327.73 10.598 328.102 10.598 328.582 cv
10.598 328.836 10.641 329.055 10.723 329.234 cv
10.809 329.422 10.922 329.574 11.066 329.695 cv
11.215 329.816 11.383 329.906 11.57 329.965 cv
11.758 330.027 11.957 330.059 12.164 330.055 cv
12.629 330.059 12.992 329.926 13.258 329.664 cv
13.523 329.402 13.656 329.035 13.652 328.559 cv
13.656 328.309 13.617 328.09 13.531 327.898 cv
13.453 327.715 13.34 327.559 13.199 327.434 cv
13.059 327.312 12.895 327.223 12.703 327.16 cv
12.52 327.105 12.324 327.074 12.117 327.07 cv
cp
17.676 326.426 mo
17.371 326.43 17.141 326.555 16.977 326.797 cv
16.816 327.047 16.727 327.379 16.715 327.797 cv
16.652 329.613 li
16.785 329.781 16.91 329.918 17.023 330.02 cv
17.141 330.129 17.25 330.211 17.359 330.273 cv
17.465 330.336 17.57 330.379 17.676 330.402 cv
17.777 330.426 17.883 330.437 17.992 330.437 cv
18.328 330.437 18.582 330.27 18.762 329.926 cv
18.934 329.586 19.023 329.105 19.023 328.488 cv
19.023 328.102 18.984 327.777 18.91 327.512 cv
18.832 327.254 18.73 327.043 18.609 326.879 cv
18.48 326.723 18.34 326.605 18.18 326.531 cv
18.02 326.465 17.852 326.43 17.676 326.426 cv
cp
f
17.16 320.207 mo
19.738 321.141 li
19.82 321.176 19.883 321.254 19.93 321.379 cv
19.973 321.508 19.996 321.703 19.996 321.961 cv
19.996 322.102 19.988 322.211 19.977 322.289 cv
19.961 322.375 19.938 322.437 19.91 322.477 cv
19.875 322.523 19.836 322.547 19.785 322.551 cv
19.73 322.559 19.668 322.547 19.598 322.512 cv
17.16 321.547 li
17.141 321.594 17.109 321.641 17.059 321.68 cv
17.016 321.727 16.965 321.754 16.91 321.766 cv
10.207 324.266 li
10.102 324.309 10.016 324.332 9.953 324.328 cv
9.891 324.332 9.844 324.309 9.805 324.266 cv
9.773 324.227 9.746 324.16 9.73 324.062 cv
9.719 323.973 9.715 323.848 9.711 323.691 cv
9.715 323.535 9.719 323.414 9.723 323.324 cv
9.734 323.238 9.746 323.168 9.766 323.113 cv
9.789 323.062 9.82 323.023 9.855 323 cv
9.898 322.977 9.953 322.953 10.016 322.926 cv
15.641 320.922 li
15.641 320.898 li
9.984 318.969 li
9.887 318.937 9.824 318.902 9.793 318.855 cv
9.77 318.816 9.746 318.75 9.73 318.656 cv
9.719 318.57 9.715 318.441 9.711 318.273 cv
9.715 318.129 9.719 318.008 9.73 317.914 cv
9.746 317.82 9.773 317.754 9.805 317.707 cv
9.844 317.668 9.891 317.645 9.953 317.641 cv
10.016 317.645 10.094 317.66 10.184 317.687 cv
cp
f
15.734 305.57 mo
15.82 305.57 15.891 305.574 15.953 305.578 cv
16.016 305.586 16.07 305.594 16.117 305.605 cv
16.164 305.621 16.207 305.641 16.242 305.656 cv
16.281 305.68 16.324 305.715 16.375 305.766 cv
16.426 305.82 16.504 305.93 16.609 306.094 cv
16.719 306.262 16.824 306.469 16.922 306.715 cv
17.027 306.961 17.109 307.242 17.18 307.562 cv
17.246 307.883 17.281 308.234 17.285 308.609 cv
17.281 309.27 17.176 309.859 16.957 310.387 cv
16.742 310.914 16.422 311.363 15.992 311.734 cv
15.57 312.105 15.043 312.391 14.414 312.59 cv
13.789 312.789 13.066 312.891 12.25 312.887 cv
11.414 312.891 10.672 312.781 10.016 312.566 cv
9.363 312.352 8.809 312.051 8.352 311.66 cv
7.898 311.273 7.551 310.809 7.313 310.262 cv
7.074 309.723 6.953 309.117 6.953 308.453 cv
6.953 308.164 6.98 307.883 7.035 307.605 cv
7.09 307.332 7.16 307.078 7.238 306.844 cv
7.324 306.613 7.418 306.406 7.527 306.219 cv
7.637 306.039 7.727 305.91 7.797 305.84 cv
7.867 305.77 7.922 305.727 7.957 305.703 cv
7.996 305.687 8.039 305.668 8.086 305.652 cv
8.137 305.641 8.195 305.633 8.262 305.621 cv
8.332 305.617 8.414 305.613 8.504 305.609 cv
8.609 305.613 8.695 305.617 8.766 305.625 cv
8.84 305.637 8.902 305.652 8.949 305.672 cv
9.004 305.695 9.039 305.719 9.059 305.746 cv
9.086 305.777 9.098 305.812 9.094 305.852 cv
9.098 305.926 9.047 306.031 8.941 306.16 cv
8.844 306.293 8.734 306.461 8.609 306.664 cv
8.492 306.875 8.379 307.125 8.273 307.418 cv
8.176 307.715 8.125 308.066 8.121 308.477 cv
8.125 308.93 8.215 309.34 8.391 309.707 cv
8.57 310.074 8.832 310.391 9.18 310.648 cv
9.531 310.914 9.957 311.113 10.457 311.254 cv
10.957 311.398 11.531 311.473 12.172 311.469 cv
12.816 311.473 13.383 311.402 13.871 311.262 cv
14.363 311.125 14.773 310.926 15.102 310.668 cv
15.434 310.41 15.68 310.094 15.848 309.719 cv
16.02 309.344 16.105 308.918 16.102 308.437 cv
16.105 308.039 16.055 307.687 15.953 307.387 cv
15.855 307.086 15.746 306.832 15.621 306.617 cv
15.5 306.41 15.391 306.234 15.289 306.098 cv
15.195 305.961 15.145 305.855 15.141 305.773 cv
15.145 305.742 15.152 305.711 15.164 305.68 cv
15.184 305.656 15.215 305.633 15.254 305.617 cv
15.301 305.602 15.359 305.59 15.438 305.582 cv
15.516 305.574 15.617 305.57 15.734 305.57 cv
cp
f
13.379 297.426 mo
13.957 297.43 14.484 297.504 14.961 297.652 cv
15.445 297.805 15.859 298.031 16.203 298.328 cv
16.555 298.629 16.824 299.004 17.016 299.449 cv
17.211 299.902 17.305 300.422 17.309 301.012 cv
17.305 301.59 17.223 302.094 17.051 302.52 cv
16.883 302.949 16.633 303.305 16.305 303.59 cv
15.977 303.879 15.582 304.094 15.113 304.23 cv
14.648 304.371 14.117 304.437 13.52 304.437 cv
12.953 304.437 12.426 304.367 11.945 304.219 cv
11.465 304.074 11.051 303.848 10.699 303.547 cv
10.352 303.25 10.082 302.879 9.891 302.43 cv
9.699 301.984 9.602 301.461 9.602 300.863 cv
9.602 300.285 9.688 299.785 9.859 299.355 cv
10.031 298.93 10.281 298.57 10.609 298.285 cv
10.938 298 11.336 297.785 11.801 297.641 cv
12.27 297.5 12.797 297.43 13.379 297.426 cv
cp
13.465 298.758 mo
13.09 298.762 12.73 298.797 12.391 298.863 cv
12.055 298.937 11.762 299.055 11.504 299.215 cv
11.254 299.379 11.051 299.598 10.898 299.875 cv
10.754 300.156 10.68 300.504 10.676 300.914 cv
10.68 301.301 10.746 301.629 10.879 301.902 cv
11.016 302.18 11.207 302.406 11.453 302.582 cv
11.699 302.762 11.992 302.895 12.328 302.977 cv
12.668 303.066 13.035 303.109 13.434 303.105 cv
13.82 303.109 14.184 303.074 14.52 303 cv
14.859 302.934 15.152 302.816 15.402 302.648 cv
15.656 302.484 15.859 302.262 16.004 301.984 cv
16.156 301.707 16.23 301.359 16.227 300.945 cv
16.23 300.57 16.16 300.242 16.023 299.961 cv
15.891 299.684 15.703 299.457 15.453 299.277 cv
15.211 299.102 14.918 298.973 14.582 298.887 cv
14.246 298.805 13.875 298.762 13.465 298.758 cv
cp
f
16.965 289.496 mo
17.012 289.496 17.047 289.508 17.07 289.527 cv
17.102 289.551 17.125 289.586 17.145 289.629 cv
17.164 289.68 17.176 289.742 17.191 289.824 cv
17.199 289.906 17.207 290.012 17.207 290.133 cv
17.207 290.266 17.199 290.371 17.191 290.453 cv
17.176 290.539 17.164 290.605 17.145 290.648 cv
17.125 290.699 17.102 290.73 17.07 290.75 cv
17.047 290.773 17.012 290.785 16.965 290.781 cv
12.859 290.781 li
12.461 290.785 12.141 290.816 11.895 290.875 cv
11.652 290.941 11.441 291.031 11.262 291.148 cv
11.086 291.266 10.949 291.422 10.855 291.609 cv
10.762 291.805 10.715 292.023 10.715 292.27 cv
10.715 292.594 10.832 292.918 11.059 293.238 cv
11.293 293.562 11.625 293.898 12.063 294.25 cv
16.965 294.25 li
17.012 294.254 17.047 294.266 17.07 294.281 cv
17.102 294.305 17.125 294.336 17.145 294.383 cv
17.164 294.43 17.176 294.496 17.191 294.574 cv
17.199 294.66 17.207 294.766 17.207 294.895 cv
17.207 295.023 17.199 295.129 17.191 295.207 cv
17.176 295.293 17.164 295.359 17.145 295.406 cv
17.125 295.461 17.102 295.492 17.07 295.508 cv
17.047 295.527 17.012 295.539 16.965 295.535 cv
9.953 295.535 li
9.914 295.539 9.879 295.531 9.848 295.512 cv
9.82 295.5 9.797 295.469 9.77 295.418 cv
9.75 295.375 9.734 295.312 9.723 295.238 cv
9.719 295.168 9.715 295.074 9.711 294.949 cv
9.715 294.84 9.719 294.742 9.723 294.664 cv
9.734 294.59 9.75 294.531 9.77 294.488 cv
9.797 294.449 9.82 294.422 9.848 294.402 cv
9.879 294.387 9.914 294.379 9.953 294.375 cv
10.879 294.375 li
10.438 293.984 10.117 293.59 9.91 293.195 cv
9.707 292.805 9.602 292.406 9.602 292.004 cv
9.602 291.535 9.684 291.145 9.84 290.824 cv
10.004 290.508 10.215 290.246 10.477 290.047 cv
10.742 289.852 11.051 289.711 11.406 289.625 cv
11.762 289.539 12.191 289.496 12.688 289.496 cv
cp
f
15.055 282.754 mo
15.418 282.758 15.738 282.824 16.016 282.953 cv
16.297 283.086 16.531 283.273 16.723 283.516 cv
16.918 283.762 17.063 284.055 17.16 284.391 cv
17.258 284.73 17.305 285.102 17.309 285.504 cv
17.305 285.758 17.285 285.996 17.25 286.219 cv
17.207 286.445 17.16 286.645 17.102 286.824 cv
17.043 287.004 16.98 287.156 16.914 287.281 cv
16.852 287.406 16.793 287.5 16.738 287.555 cv
16.688 287.613 16.617 287.652 16.52 287.676 cv
16.43 287.703 16.301 287.715 16.141 287.715 cv
16.043 287.715 15.961 287.711 15.891 287.699 cv
15.824 287.691 15.77 287.68 15.727 287.66 cv
15.688 287.648 15.656 287.625 15.637 287.598 cv
15.621 287.57 15.613 287.539 15.609 287.5 cv
15.613 287.445 15.648 287.359 15.715 287.246 cv
15.789 287.137 15.867 287 15.945 286.832 cv
16.031 286.672 16.105 286.48 16.176 286.254 cv
16.246 286.035 16.281 285.777 16.281 285.48 cv
16.281 285.266 16.258 285.066 16.211 284.887 cv
16.164 284.711 16.098 284.559 16.004 284.43 cv
15.918 284.301 15.801 284.199 15.656 284.129 cv
15.52 284.059 15.352 284.023 15.156 284.023 cv
14.961 284.023 14.797 284.074 14.66 284.176 cv
14.527 284.277 14.406 284.414 14.301 284.578 cv
14.199 284.746 14.109 284.93 14.023 285.137 cv
13.945 285.348 13.859 285.562 13.77 285.781 cv
13.684 286 13.582 286.215 13.469 286.426 cv
13.359 286.637 13.227 286.828 13.063 286.992 cv
12.906 287.164 12.711 287.297 12.484 287.395 cv
12.262 287.5 11.996 287.551 11.684 287.547 cv
11.41 287.551 11.145 287.496 10.891 287.387 cv
10.641 287.281 10.422 287.121 10.23 286.906 cv
10.043 286.695 9.891 286.43 9.773 286.109 cv
9.66 285.789 9.602 285.418 9.602 284.988 cv
9.602 284.805 9.617 284.617 9.648 284.43 cv
9.68 284.246 9.719 284.078 9.766 283.922 cv
9.813 283.773 9.863 283.645 9.918 283.535 cv
9.973 283.434 10.023 283.352 10.063 283.293 cv
10.109 283.242 10.145 283.207 10.172 283.184 cv
10.203 283.168 10.238 283.152 10.273 283.145 cv
10.316 283.137 10.363 283.129 10.418 283.121 cv
10.477 283.113 10.547 283.109 10.629 283.109 cv
10.719 283.109 10.797 283.113 10.859 283.121 cv
10.93 283.129 10.98 283.145 11.02 283.16 cv
11.063 283.184 11.094 283.203 11.109 283.227 cv
11.129 283.254 11.137 283.285 11.137 283.312 cv
11.137 283.363 11.109 283.43 11.051 283.516 cv
10.996 283.605 10.934 283.719 10.867 283.859 cv
10.805 284 10.746 284.168 10.684 284.355 cv
10.629 284.547 10.598 284.762 10.598 285.004 cv
10.598 285.227 10.625 285.418 10.672 285.582 cv
10.727 285.75 10.797 285.887 10.883 285.992 cv
10.977 286.098 11.082 286.18 11.207 286.23 cv
11.332 286.289 11.469 286.316 11.613 286.312 cv
11.816 286.316 11.984 286.266 12.121 286.16 cv
12.262 286.059 12.383 285.922 12.484 285.754 cv
12.59 285.59 12.684 285.398 12.766 285.184 cv
12.852 284.973 12.938 284.758 13.023 284.535 cv
13.113 284.316 13.215 284.098 13.32 283.879 cv
13.43 283.664 13.559 283.473 13.715 283.305 cv
13.871 283.141 14.059 283.008 14.277 282.906 cv
14.496 282.809 14.758 282.758 15.055 282.754 cv
cp
f
16.965 274.91 mo
17.012 274.914 17.047 274.922 17.07 274.937 cv
17.102 274.957 17.125 274.992 17.145 275.035 cv
17.164 275.082 17.176 275.141 17.191 275.215 cv
17.199 275.293 17.207 275.387 17.207 275.492 cv
17.207 275.617 17.199 275.715 17.191 275.785 cv
17.176 275.863 17.164 275.922 17.145 275.965 cv
17.125 276.012 17.102 276.043 17.07 276.055 cv
17.047 276.074 17.012 276.082 16.965 276.078 cv
16.039 276.078 li
16.484 276.48 16.805 276.875 17.004 277.262 cv
17.207 277.656 17.305 278.051 17.309 278.445 cv
17.305 278.918 17.23 279.312 17.074 279.629 cv
16.922 279.949 16.711 280.207 16.441 280.402 cv
16.176 280.605 15.863 280.746 15.504 280.828 cv
15.148 280.918 14.715 280.961 14.207 280.957 cv
9.953 280.957 li
9.914 280.961 9.879 280.953 9.848 280.93 cv
9.82 280.914 9.797 280.879 9.77 280.824 cv
9.75 280.777 9.734 280.707 9.723 280.621 cv
9.719 280.539 9.715 280.437 9.711 280.309 cv
9.715 280.187 9.719 280.082 9.723 279.996 cv
9.734 279.914 9.75 279.848 9.77 279.801 cv
9.797 279.754 9.82 279.719 9.848 279.695 cv
9.879 279.676 9.914 279.668 9.953 279.664 cv
14.035 279.664 li
14.449 279.668 14.777 279.637 15.023 279.574 cv
15.27 279.516 15.48 279.426 15.652 279.301 cv
15.832 279.184 15.965 279.027 16.059 278.836 cv
16.156 278.652 16.207 278.434 16.203 278.184 cv
16.207 277.863 16.09 277.543 15.859 277.219 cv
15.633 276.902 15.297 276.562 14.852 276.203 cv
9.953 276.203 li
9.914 276.203 9.879 276.195 9.848 276.176 cv
9.82 276.16 9.797 276.125 9.77 276.07 cv
9.75 276.02 9.734 275.953 9.723 275.871 cv
9.719 275.793 9.715 275.687 9.711 275.555 cv
9.715 275.434 9.719 275.328 9.723 275.242 cv
9.734 275.16 9.75 275.098 9.77 275.051 cv
9.797 275.008 9.82 274.973 9.848 274.945 cv
9.879 274.926 9.914 274.914 9.953 274.91 cv
cp
f
16.965 262.133 mo
17.012 262.137 17.047 262.145 17.07 262.164 cv
17.102 262.187 17.125 262.223 17.145 262.266 cv
17.164 262.316 17.176 262.383 17.191 262.461 cv
17.199 262.547 17.207 262.648 17.207 262.773 cv
17.207 262.906 17.199 263.016 17.191 263.094 cv
17.176 263.18 17.164 263.246 17.145 263.293 cv
17.125 263.348 17.102 263.383 17.07 263.398 cv
17.047 263.422 17.012 263.43 16.965 263.43 cv
12.703 263.43 li
12.41 263.43 12.141 263.457 11.895 263.508 cv
11.652 263.562 11.441 263.645 11.262 263.758 cv
11.086 263.871 10.949 264.016 10.855 264.191 cv
10.762 264.371 10.715 264.582 10.715 264.816 cv
10.715 265.113 10.832 265.41 11.059 265.707 cv
11.293 266.012 11.625 266.34 12.063 266.695 cv
16.965 266.695 li
17.012 266.699 17.047 266.711 17.07 266.727 cv
17.102 266.75 17.125 266.781 17.145 266.828 cv
17.164 266.879 17.176 266.945 17.191 267.027 cv
17.199 267.113 17.207 267.219 17.207 267.34 cv
17.207 267.461 17.199 267.562 17.191 267.648 cv
17.176 267.734 17.164 267.805 17.145 267.852 cv
17.125 267.906 17.102 267.937 17.07 267.953 cv
17.047 267.973 17.012 267.984 16.965 267.98 cv
12.703 267.98 li
12.41 267.984 12.141 268.012 11.895 268.066 cv
11.652 268.125 11.441 268.211 11.262 268.324 cv
11.086 268.437 10.949 268.582 10.855 268.754 cv
10.762 268.934 10.715 269.141 10.715 269.375 cv
10.715 269.676 10.832 269.973 11.059 270.273 cv
11.293 270.574 11.625 270.902 12.063 271.254 cv
16.965 271.254 li
17.012 271.258 17.047 271.27 17.07 271.285 cv
17.102 271.309 17.125 271.34 17.145 271.387 cv
17.164 271.434 17.176 271.5 17.191 271.578 cv
17.199 271.664 17.207 271.77 17.207 271.898 cv
17.207 272.027 17.199 272.133 17.191 272.211 cv
17.176 272.297 17.164 272.363 17.145 272.41 cv
17.125 272.465 17.102 272.496 17.07 272.512 cv
17.047 272.531 17.012 272.543 16.965 272.539 cv
9.953 272.539 li
9.914 272.543 9.879 272.535 9.848 272.516 cv
9.82 272.504 9.797 272.473 9.77 272.422 cv
9.75 272.379 9.734 272.316 9.723 272.242 cv
9.719 272.172 9.715 272.078 9.711 271.953 cv
9.715 271.844 9.719 271.746 9.723 271.668 cv
9.734 271.594 9.75 271.535 9.77 271.492 cv
9.797 271.453 9.82 271.426 9.848 271.406 cv
9.879 271.391 9.914 271.383 9.953 271.379 cv
10.879 271.379 li
10.438 270.988 10.117 270.605 9.91 270.23 cv
9.707 269.863 9.602 269.484 9.602 269.102 cv
9.602 268.812 9.637 268.555 9.703 268.32 cv
9.773 268.094 9.867 267.887 9.988 267.707 cv
10.109 267.531 10.254 267.383 10.422 267.254 cv
10.594 267.133 10.785 267.027 10.988 266.941 cv
10.738 266.711 10.523 266.488 10.344 266.277 cv
10.172 266.066 10.027 265.863 9.914 265.668 cv
9.809 265.473 9.73 265.285 9.676 265.102 cv
9.629 264.918 9.602 264.73 9.602 264.543 cv
9.602 264.09 9.684 263.711 9.84 263.406 cv
10.004 263.102 10.215 262.855 10.477 262.66 cv
10.742 262.473 11.051 262.336 11.406 262.254 cv
11.762 262.176 12.137 262.137 12.531 262.133 cv
cp
f
13.348 253.332 mo
13.965 253.336 14.516 253.402 15.004 253.531 cv
15.492 253.668 15.906 253.863 16.246 254.117 cv
16.586 254.375 16.848 254.691 17.031 255.07 cv
17.215 255.449 17.305 255.883 17.309 256.371 cv
17.305 256.582 17.285 256.777 17.246 256.949 cv
17.203 257.129 17.141 257.301 17.051 257.465 cv
16.965 257.637 16.852 257.805 16.715 257.969 cv
16.582 258.141 16.426 258.316 16.242 258.5 cv
19.746 258.5 li
19.785 258.504 19.824 258.516 19.855 258.531 cv
19.887 258.555 19.91 258.586 19.934 258.633 cv
19.949 258.68 19.965 258.746 19.98 258.824 cv
19.988 258.91 19.996 259.016 19.996 259.145 cv
19.996 259.273 19.988 259.379 19.98 259.457 cv
19.965 259.543 19.949 259.609 19.934 259.656 cv
19.91 259.711 19.887 259.742 19.855 259.758 cv
19.824 259.777 19.785 259.789 19.746 259.785 cv
9.953 259.785 li
9.906 259.789 9.871 259.781 9.84 259.762 cv
9.816 259.75 9.789 259.719 9.766 259.668 cv
9.746 259.625 9.734 259.562 9.723 259.488 cv
9.719 259.418 9.715 259.332 9.711 259.223 cv
9.715 259.117 9.719 259.027 9.723 258.953 cv
9.734 258.887 9.746 258.828 9.766 258.777 cv
9.789 258.734 9.816 258.699 9.84 258.68 cv
9.871 258.664 9.906 258.656 9.953 258.652 cv
10.895 258.652 li
10.68 258.445 10.488 258.242 10.328 258.039 cv
10.168 257.844 10.035 257.645 9.926 257.441 cv
9.82 257.246 9.738 257.039 9.684 256.828 cv
9.629 256.617 9.602 256.395 9.602 256.16 cv
9.602 255.652 9.703 255.219 9.898 254.859 cv
10.098 254.5 10.367 254.211 10.707 253.984 cv
11.055 253.762 11.453 253.594 11.906 253.488 cv
12.363 253.387 12.844 253.336 13.348 253.332 cv
cp
13.496 254.664 mo
13.145 254.668 12.797 254.695 12.457 254.746 cv
12.125 254.805 11.828 254.898 11.566 255.031 cv
11.309 255.168 11.102 255.348 10.941 255.566 cv
10.789 255.793 10.711 256.07 10.707 256.406 cv
10.711 256.574 10.734 256.738 10.781 256.898 cv
10.832 257.062 10.91 257.23 11.016 257.395 cv
11.125 257.566 11.266 257.738 11.438 257.918 cv
11.613 258.102 11.828 258.297 12.078 258.5 cv
14.867 258.5 li
15.305 258.145 15.633 257.809 15.859 257.488 cv
16.09 257.172 16.207 256.836 16.203 256.484 cv
16.207 256.16 16.129 255.883 15.969 255.648 cv
15.816 255.422 15.605 255.234 15.344 255.086 cv
15.086 254.945 14.797 254.836 14.473 254.766 cv
14.152 254.699 13.828 254.668 13.496 254.664 cv
cp
f
16.449 247.84 mo
16.605 247.84 16.723 247.852 16.809 247.871 cv
16.898 247.895 16.965 247.926 17.004 247.965 cv
17.047 248.008 17.086 248.07 17.121 248.152 cv
17.156 248.238 17.184 248.332 17.211 248.437 cv
17.23 248.547 17.25 248.66 17.27 248.777 cv
17.281 248.895 17.289 249.016 17.293 249.133 cv
17.289 249.5 17.242 249.812 17.148 250.07 cv
17.055 250.332 16.91 250.543 16.711 250.707 cv
16.52 250.875 16.273 250.996 15.973 251.07 cv
15.676 251.148 15.324 251.187 14.914 251.184 cv
10.816 251.184 li
10.816 252.164 li
10.82 252.242 10.777 252.305 10.691 252.352 cv
10.609 252.398 10.477 252.422 10.285 252.422 cv
10.191 252.422 10.109 252.418 10.039 252.402 cv
9.977 252.395 9.918 252.375 9.871 252.352 cv
9.828 252.332 9.797 252.305 9.777 252.27 cv
9.762 252.238 9.754 252.203 9.75 252.156 cv
9.75 251.184 li
8.082 251.184 li
8.051 251.187 8.016 251.176 7.98 251.156 cv
7.953 251.141 7.926 251.109 7.898 251.055 cv
7.879 251.008 7.863 250.941 7.848 250.855 cv
7.84 250.777 7.832 250.672 7.832 250.543 cv
7.832 250.414 7.84 250.309 7.848 250.227 cv
7.863 250.145 7.879 250.078 7.898 250.031 cv
7.926 249.984 7.953 249.953 7.98 249.93 cv
8.016 249.914 8.051 249.902 8.082 249.898 cv
9.75 249.898 li
9.75 248.098 li
9.754 248.059 9.762 248.023 9.777 247.988 cv
9.797 247.961 9.828 247.934 9.871 247.906 cv
9.918 247.887 9.977 247.871 10.039 247.855 cv
10.109 247.848 10.191 247.84 10.285 247.84 cv
10.477 247.84 10.609 247.863 10.691 247.91 cv
10.777 247.957 10.82 248.02 10.816 248.098 cv
10.816 249.898 li
14.73 249.898 li
15.215 249.902 15.578 249.832 15.824 249.684 cv
16.074 249.543 16.199 249.285 16.195 248.914 cv
16.199 248.801 16.188 248.695 16.16 248.598 cv
16.141 248.508 16.117 248.426 16.086 248.348 cv
16.063 248.277 16.035 248.215 16.012 248.16 cv
15.988 248.113 15.977 248.066 15.977 248.02 cv
15.977 247.996 15.984 247.969 15.996 247.945 cv
16.012 247.922 16.035 247.906 16.07 247.891 cv
16.109 247.883 16.16 247.871 16.219 247.855 cv
16.285 247.848 16.363 247.84 16.449 247.84 cv
cp
f
16.965 244.824 mo
17.012 244.828 17.047 244.84 17.07 244.855 cv
17.102 244.879 17.125 244.91 17.145 244.957 cv
17.164 245.004 17.176 245.07 17.191 245.148 cv
17.199 245.234 17.207 245.34 17.207 245.469 cv
17.207 245.598 17.199 245.703 17.191 245.781 cv
17.176 245.867 17.164 245.934 17.145 245.98 cv
17.125 246.035 17.102 246.066 17.07 246.082 cv
17.047 246.102 17.012 246.113 16.965 246.109 cv
9.953 246.109 li
9.918 246.113 9.887 246.102 9.852 246.082 cv
9.824 246.066 9.797 246.035 9.773 245.98 cv
9.754 245.934 9.738 245.867 9.727 245.781 cv
9.719 245.703 9.715 245.598 9.711 245.469 cv
9.715 245.34 9.719 245.234 9.727 245.148 cv
9.738 245.07 9.754 245.004 9.773 244.957 cv
9.797 244.91 9.824 244.879 9.852 244.855 cv
9.887 244.84 9.918 244.828 9.953 244.824 cv
cp
7.582 244.676 mo
7.887 244.676 8.094 244.734 8.199 244.848 cv
8.313 244.961 8.367 245.172 8.363 245.477 cv
8.367 245.781 8.313 245.988 8.203 246.098 cv
8.098 246.215 7.895 246.27 7.598 246.266 cv
7.297 246.27 7.094 246.211 6.984 246.094 cv
6.879 245.98 6.824 245.77 6.82 245.461 cv
6.824 245.16 6.879 244.957 6.98 244.844 cv
7.09 244.734 7.289 244.676 7.582 244.676 cv
cp
f
13.379 235.883 mo
13.957 235.887 14.484 235.961 14.961 236.109 cv
15.445 236.262 15.859 236.488 16.203 236.785 cv
16.555 237.086 16.824 237.461 17.016 237.906 cv
17.211 238.359 17.305 238.879 17.309 239.469 cv
17.305 240.047 17.223 240.551 17.051 240.977 cv
16.883 241.406 16.633 241.762 16.305 242.047 cv
15.977 242.336 15.582 242.551 15.113 242.687 cv
14.648 242.828 14.117 242.895 13.52 242.895 cv
12.953 242.895 12.426 242.824 11.945 242.676 cv
11.465 242.531 11.051 242.305 10.699 242.004 cv
10.352 241.707 10.082 241.336 9.891 240.887 cv
9.699 240.441 9.602 239.918 9.602 239.32 cv
9.602 238.742 9.688 238.242 9.859 237.812 cv
10.031 237.387 10.281 237.027 10.609 236.742 cv
10.938 236.457 11.336 236.242 11.801 236.098 cv
12.27 235.957 12.797 235.887 13.379 235.883 cv
cp
13.465 237.215 mo
13.09 237.219 12.73 237.254 12.391 237.32 cv
12.055 237.395 11.762 237.512 11.504 237.672 cv
11.254 237.836 11.051 238.055 10.898 238.332 cv
10.754 238.613 10.68 238.961 10.676 239.371 cv
10.68 239.758 10.746 240.086 10.879 240.359 cv
11.016 240.637 11.207 240.863 11.453 241.039 cv
11.699 241.219 11.992 241.352 12.328 241.434 cv
12.668 241.523 13.035 241.566 13.434 241.562 cv
13.82 241.566 14.184 241.531 14.52 241.457 cv
14.859 241.391 15.152 241.273 15.402 241.105 cv
15.656 240.941 15.859 240.719 16.004 240.441 cv
16.156 240.164 16.23 239.816 16.227 239.402 cv
16.23 239.027 16.16 238.699 16.023 238.418 cv
15.891 238.141 15.703 237.914 15.453 237.734 cv
15.211 237.559 14.918 237.43 14.582 237.344 cv
14.246 237.262 13.875 237.219 13.465 237.215 cv
cp
f
16.965 227.957 mo
17.012 227.957 17.047 227.969 17.07 227.988 cv
17.102 228.012 17.125 228.047 17.145 228.09 cv
17.164 228.141 17.176 228.203 17.191 228.285 cv
17.199 228.367 17.207 228.473 17.207 228.594 cv
17.207 228.727 17.199 228.832 17.191 228.914 cv
17.176 229 17.164 229.066 17.145 229.109 cv
17.125 229.16 17.102 229.191 17.07 229.211 cv
17.047 229.234 17.012 229.246 16.965 229.242 cv
12.859 229.242 li
12.461 229.246 12.141 229.277 11.895 229.336 cv
11.652 229.402 11.441 229.492 11.262 229.609 cv
11.086 229.727 10.949 229.883 10.855 230.07 cv
10.762 230.266 10.715 230.484 10.715 230.73 cv
10.715 231.055 10.832 231.379 11.059 231.699 cv
11.293 232.023 11.625 232.359 12.063 232.711 cv
16.965 232.711 li
17.012 232.715 17.047 232.727 17.07 232.742 cv
17.102 232.766 17.125 232.797 17.145 232.844 cv
17.164 232.891 17.176 232.957 17.191 233.035 cv
17.199 233.121 17.207 233.227 17.207 233.355 cv
17.207 233.484 17.199 233.59 17.191 233.668 cv
17.176 233.754 17.164 233.82 17.145 233.867 cv
17.125 233.922 17.102 233.953 17.07 233.969 cv
17.047 233.988 17.012 234 16.965 233.996 cv
9.953 233.996 li
9.914 234 9.879 233.992 9.848 233.973 cv
9.82 233.961 9.797 233.93 9.77 233.879 cv
9.75 233.836 9.734 233.773 9.723 233.699 cv
9.719 233.629 9.715 233.535 9.711 233.41 cv
9.715 233.301 9.719 233.203 9.723 233.125 cv
9.734 233.051 9.75 232.992 9.77 232.949 cv
9.797 232.91 9.82 232.883 9.848 232.863 cv
9.879 232.848 9.914 232.84 9.953 232.836 cv
10.879 232.836 li
10.438 232.445 10.117 232.051 9.91 231.656 cv
9.707 231.266 9.602 230.867 9.602 230.465 cv
9.602 229.996 9.684 229.605 9.84 229.285 cv
10.004 228.969 10.215 228.707 10.477 228.508 cv
10.742 228.312 11.051 228.172 11.406 228.086 cv
11.762 228 12.191 227.957 12.688 227.957 cv
cp
f
6.422 219.117 mo
7.469 219.613 8.539 219.98 9.637 220.223 cv
10.738 220.465 11.844 220.586 12.953 220.586 cv
14.07 220.586 15.18 220.465 16.273 220.215 cv
17.371 219.973 18.441 219.609 19.496 219.133 cv
19.555 219.109 19.609 219.098 19.656 219.09 cv
19.699 219.09 19.734 219.105 19.766 219.141 cv
19.793 219.18 19.813 219.234 19.828 219.309 cv
19.836 219.387 19.844 219.492 19.848 219.617 cv
19.844 219.715 19.84 219.793 19.84 219.859 cv
19.832 219.93 19.824 219.988 19.809 220.035 cv
19.793 220.086 19.773 220.129 19.754 220.156 cv
19.73 220.191 19.707 220.215 19.684 220.227 cv
19.152 220.508 18.617 220.754 18.074 220.965 cv
17.531 221.184 16.98 221.363 16.422 221.504 cv
15.859 221.652 15.293 221.762 14.719 221.832 cv
14.145 221.91 13.563 221.945 12.977 221.941 cv
12.391 221.945 11.813 221.906 11.238 221.82 cv
10.668 221.742 10.102 221.625 9.535 221.477 cv
8.973 221.328 8.418 221.148 7.871 220.937 cv
7.328 220.727 6.785 220.488 6.25 220.219 cv
6.23 220.215 6.215 220.199 6.195 220.176 cv
6.184 220.152 6.168 220.121 6.148 220.078 cv
6.137 220.039 6.125 219.98 6.113 219.906 cv
6.109 219.836 6.105 219.742 6.102 219.625 cv
6.105 219.508 6.113 219.414 6.125 219.336 cv
6.145 219.266 6.164 219.207 6.188 219.164 cv
6.215 219.125 6.25 219.102 6.289 219.094 cv
6.336 219.09 6.379 219.098 6.422 219.117 cv
cp
f
16.941 210.223 mo
16.988 210.227 17.023 210.234 17.055 210.25 cv
17.09 210.27 17.117 210.305 17.137 210.355 cv
17.156 210.41 17.172 210.48 17.188 210.566 cv
17.199 210.656 17.207 210.77 17.207 210.91 cv
17.207 211.09 17.199 211.238 17.184 211.352 cv
17.168 211.469 17.141 211.555 17.098 211.609 cv
17.059 211.668 17.012 211.715 16.957 211.75 cv
11.914 215.461 li
16.957 215.461 li
16.996 215.465 17.031 215.473 17.063 215.492 cv
17.098 215.516 17.125 215.555 17.141 215.602 cv
17.16 215.656 17.172 215.723 17.188 215.809 cv
17.199 215.895 17.207 216.004 17.207 216.129 cv
17.207 216.258 17.199 216.363 17.188 216.449 cv
17.172 216.539 17.16 216.609 17.141 216.66 cv
17.125 216.715 17.098 216.75 17.063 216.77 cv
17.031 216.793 16.996 216.805 16.957 216.801 cv
7.277 216.801 li
7.238 216.805 7.203 216.793 7.168 216.77 cv
7.141 216.75 7.113 216.715 7.094 216.66 cv
7.078 216.609 7.063 216.539 7.047 216.449 cv
7.035 216.363 7.031 216.258 7.027 216.129 cv
7.031 216.004 7.035 215.895 7.047 215.809 cv
7.063 215.723 7.078 215.656 7.094 215.602 cv
7.113 215.555 7.141 215.516 7.168 215.492 cv
7.203 215.473 7.238 215.465 7.277 215.461 cv
11.758 215.461 li
7.277 211.891 li
7.234 211.863 7.195 211.828 7.16 211.781 cv
7.133 211.742 7.109 211.691 7.086 211.629 cv
7.07 211.574 7.055 211.5 7.043 211.41 cv
7.035 211.328 7.031 211.219 7.027 211.082 cv
7.031 210.949 7.035 210.84 7.047 210.754 cv
7.063 210.672 7.082 210.605 7.098 210.555 cv
7.121 210.508 7.145 210.473 7.176 210.453 cv
7.207 210.437 7.242 210.43 7.277 210.426 cv
7.348 210.43 7.414 210.445 7.48 210.477 cv
7.551 210.512 7.645 210.578 7.762 210.668 cv
11.758 214.012 li
16.543 210.41 li
16.684 210.324 16.773 210.27 16.82 210.25 cv
16.871 210.234 16.914 210.227 16.941 210.223 cv
cp
f
16.965 207.414 mo
17.012 207.418 17.047 207.43 17.07 207.445 cv
17.102 207.469 17.125 207.5 17.145 207.547 cv
17.164 207.594 17.176 207.66 17.191 207.738 cv
17.199 207.824 17.207 207.93 17.207 208.059 cv
17.207 208.187 17.199 208.293 17.191 208.371 cv
17.176 208.457 17.164 208.523 17.145 208.57 cv
17.125 208.625 17.102 208.656 17.07 208.672 cv
17.047 208.691 17.012 208.703 16.965 208.699 cv
9.953 208.699 li
9.918 208.703 9.887 208.691 9.852 208.672 cv
9.824 208.656 9.797 208.625 9.773 208.57 cv
9.754 208.523 9.738 208.457 9.727 208.371 cv
9.719 208.293 9.715 208.187 9.711 208.059 cv
9.715 207.93 9.719 207.824 9.727 207.738 cv
9.738 207.66 9.754 207.594 9.773 207.547 cv
9.797 207.5 9.824 207.469 9.852 207.445 cv
9.887 207.43 9.918 207.418 9.953 207.414 cv
cp
7.582 207.266 mo
7.887 207.266 8.094 207.324 8.199 207.437 cv
8.313 207.551 8.367 207.762 8.363 208.066 cv
8.367 208.371 8.313 208.578 8.203 208.687 cv
8.098 208.805 7.895 208.859 7.598 208.855 cv
7.297 208.859 7.094 208.801 6.984 208.684 cv
6.879 208.57 6.824 208.359 6.82 208.051 cv
6.824 207.75 6.879 207.547 6.98 207.434 cv
7.09 207.324 7.289 207.266 7.582 207.266 cv
cp
f
16.965 203.711 mo
17.012 203.715 17.047 203.727 17.07 203.742 cv
17.102 203.766 17.125 203.797 17.145 203.844 cv
17.164 203.891 17.176 203.957 17.191 204.035 cv
17.199 204.121 17.207 204.227 17.207 204.355 cv
17.207 204.484 17.199 204.59 17.191 204.668 cv
17.176 204.754 17.164 204.82 17.145 204.867 cv
17.125 204.922 17.102 204.953 17.07 204.969 cv
17.047 204.988 17.012 205 16.965 204.996 cv
6.555 204.996 li
6.516 205 6.48 204.988 6.445 204.969 cv
6.418 204.953 6.391 204.922 6.367 204.867 cv
6.348 204.82 6.332 204.754 6.32 204.668 cv
6.313 204.59 6.309 204.484 6.305 204.355 cv
6.309 204.227 6.313 204.121 6.32 204.035 cv
6.332 203.957 6.348 203.891 6.367 203.844 cv
6.391 203.797 6.418 203.766 6.445 203.742 cv
6.48 203.727 6.516 203.715 6.555 203.711 cv
cp
f
13.379 194.77 mo
13.957 194.773 14.484 194.848 14.961 194.996 cv
15.445 195.148 15.859 195.375 16.203 195.672 cv
16.555 195.973 16.824 196.348 17.016 196.793 cv
17.211 197.246 17.305 197.766 17.309 198.355 cv
17.305 198.934 17.223 199.437 17.051 199.863 cv
16.883 200.293 16.633 200.648 16.305 200.934 cv
15.977 201.223 15.582 201.437 15.113 201.574 cv
14.648 201.715 14.117 201.781 13.52 201.781 cv
12.953 201.781 12.426 201.711 11.945 201.562 cv
11.465 201.418 11.051 201.191 10.699 200.891 cv
10.352 200.594 10.082 200.223 9.891 199.773 cv
9.699 199.328 9.602 198.805 9.602 198.207 cv
9.602 197.629 9.688 197.129 9.859 196.699 cv
10.031 196.273 10.281 195.914 10.609 195.629 cv
10.938 195.344 11.336 195.129 11.801 194.984 cv
12.27 194.844 12.797 194.773 13.379 194.77 cv
cp
13.465 196.102 mo
13.09 196.105 12.73 196.141 12.391 196.207 cv
12.055 196.281 11.762 196.398 11.504 196.559 cv
11.254 196.723 11.051 196.941 10.898 197.219 cv
10.754 197.5 10.68 197.848 10.676 198.258 cv
10.68 198.645 10.746 198.973 10.879 199.246 cv
11.016 199.523 11.207 199.75 11.453 199.926 cv
11.699 200.105 11.992 200.238 12.328 200.32 cv
12.668 200.41 13.035 200.453 13.434 200.449 cv
13.82 200.453 14.184 200.418 14.52 200.344 cv
14.859 200.277 15.152 200.16 15.402 199.992 cv
15.656 199.828 15.859 199.605 16.004 199.328 cv
16.156 199.051 16.23 198.703 16.227 198.289 cv
16.23 197.914 16.16 197.586 16.023 197.305 cv
15.891 197.027 15.703 196.801 15.453 196.621 cv
15.211 196.445 14.918 196.316 14.582 196.23 cv
14.246 196.148 13.875 196.105 13.465 196.102 cv
cp
f
16.863 179.469 mo
16.938 179.492 16.996 179.523 17.039 179.562 cv
17.086 179.605 17.121 179.664 17.141 179.734 cv
17.164 179.812 17.176 179.902 17.191 180.004 cv
17.199 180.113 17.207 180.242 17.207 180.395 cv
17.207 180.559 17.199 180.695 17.191 180.805 cv
17.176 180.918 17.164 181.012 17.141 181.082 cv
17.121 181.16 17.086 181.215 17.039 181.246 cv
16.996 181.285 16.938 181.312 16.863 181.332 cv
9.25 183.445 li
9.25 183.457 li
16.863 185.406 li
16.938 185.426 16.996 185.449 17.039 185.484 cv
17.086 185.523 17.121 185.578 17.141 185.641 cv
17.164 185.711 17.176 185.797 17.191 185.902 cv
17.199 186.012 17.207 186.148 17.207 186.312 cv
17.207 186.484 17.199 186.625 17.191 186.738 cv
17.176 186.855 17.164 186.949 17.141 187.02 cv
17.121 187.094 17.086 187.152 17.039 187.187 cv
16.996 187.23 16.938 187.258 16.863 187.27 cv
7.551 189.934 li
7.434 189.969 7.34 189.984 7.27 189.984 cv
7.203 189.988 7.152 189.969 7.113 189.922 cv
7.078 189.879 7.055 189.809 7.043 189.711 cv
7.035 189.613 7.031 189.48 7.027 189.312 cv
7.031 189.152 7.035 189.023 7.039 188.93 cv
7.051 188.836 7.063 188.766 7.082 188.715 cv
7.105 188.668 7.137 188.633 7.168 188.613 cv
7.207 188.598 7.254 188.586 7.309 188.57 cv
15.758 186.305 li
15.758 186.297 li
7.324 184.145 li
7.27 184.133 7.223 184.113 7.18 184.086 cv
7.145 184.066 7.113 184.027 7.09 183.973 cv
7.07 183.922 7.055 183.848 7.043 183.75 cv
7.035 183.656 7.031 183.531 7.027 183.375 cv
7.031 183.23 7.035 183.117 7.043 183.027 cv
7.055 182.945 7.07 182.875 7.09 182.82 cv
7.113 182.77 7.145 182.73 7.18 182.707 cv
7.223 182.684 7.27 182.664 7.324 182.648 cv
15.758 180.332 li
15.758 180.32 li
7.316 178.098 li
7.266 178.086 7.223 178.07 7.18 178.051 cv
7.145 178.039 7.113 178.008 7.09 177.953 cv
7.07 177.906 7.055 177.836 7.043 177.742 cv
7.035 177.656 7.031 177.535 7.027 177.379 cv
7.031 177.23 7.035 177.105 7.047 177.012 cv
7.063 176.922 7.09 176.855 7.121 176.812 cv
7.16 176.773 7.211 176.754 7.277 176.754 cv
7.348 176.758 7.441 176.773 7.559 176.797 cv
cp
f
16.973 170.441 mo
17.035 170.445 17.082 170.465 17.113 170.504 cv
17.145 170.547 17.168 170.605 17.184 170.676 cv
17.199 170.754 17.207 170.859 17.207 170.996 cv
17.207 171.133 17.199 171.242 17.184 171.32 cv
17.168 171.406 17.145 171.465 17.113 171.496 cv
17.082 171.535 17.035 171.551 16.973 171.547 cv
16.273 171.547 li
16.602 171.855 16.855 172.199 17.035 172.574 cv
17.219 172.953 17.305 173.352 17.309 173.77 cv
17.305 174.145 17.258 174.477 17.164 174.773 cv
17.066 175.07 16.93 175.324 16.746 175.535 cv
16.566 175.746 16.344 175.91 16.078 176.027 cv
15.816 176.145 15.516 176.203 15.172 176.199 cv
14.781 176.203 14.438 176.125 14.145 175.961 cv
13.855 175.805 13.613 175.57 13.422 175.266 cv
13.23 174.965 13.086 174.598 12.988 174.16 cv
12.895 173.727 12.848 173.234 12.844 172.687 cv
12.844 171.719 li
12.297 171.719 li
12.027 171.723 11.789 171.75 11.582 171.805 cv
11.375 171.863 11.203 171.957 11.063 172.082 cv
10.926 172.215 10.82 172.379 10.75 172.578 cv
10.68 172.785 10.645 173.035 10.645 173.324 cv
10.645 173.645 10.684 173.93 10.758 174.18 cv
10.836 174.437 10.918 174.656 11.008 174.844 cv
11.102 175.031 11.188 175.191 11.258 175.316 cv
11.336 175.449 11.371 175.543 11.371 175.602 cv
11.371 175.645 11.363 175.68 11.34 175.711 cv
11.324 175.742 11.293 175.77 11.246 175.793 cv
11.207 175.816 11.152 175.836 11.086 175.844 cv
11.023 175.859 10.953 175.863 10.871 175.859 cv
10.746 175.863 10.641 175.855 10.563 175.832 cv
10.488 175.816 10.418 175.77 10.348 175.699 cv
10.281 175.629 10.203 175.508 10.113 175.336 cv
10.023 175.164 9.941 174.969 9.863 174.746 cv
9.793 174.523 9.73 174.277 9.676 174.012 cv
9.629 173.746 9.602 173.48 9.602 173.207 cv
9.602 172.707 9.66 172.277 9.773 171.926 cv
9.891 171.574 10.059 171.289 10.277 171.066 cv
10.5 170.852 10.773 170.691 11.098 170.59 cv
11.43 170.492 11.813 170.445 12.242 170.441 cv
cp
13.77 171.719 mo
13.77 172.82 li
13.773 173.176 13.805 173.48 13.859 173.738 cv
13.922 174 14.008 174.215 14.125 174.387 cv
14.242 174.559 14.383 174.684 14.547 174.762 cv
14.711 174.844 14.898 174.887 15.109 174.883 cv
15.477 174.887 15.77 174.77 15.98 174.539 cv
16.199 174.309 16.305 173.984 16.305 173.566 cv
16.305 173.23 16.219 172.918 16.047 172.629 cv
15.875 172.34 15.613 172.039 15.258 171.719 cv
cp
f
16.449 164.512 mo
16.605 164.512 16.723 164.523 16.809 164.543 cv
16.898 164.566 16.965 164.598 17.004 164.637 cv
17.047 164.68 17.086 164.742 17.121 164.824 cv
17.156 164.91 17.184 165.004 17.211 165.109 cv
17.23 165.219 17.25 165.332 17.27 165.449 cv
17.281 165.566 17.289 165.687 17.293 165.805 cv
17.289 166.172 17.242 166.484 17.148 166.742 cv
17.055 167.004 16.91 167.215 16.711 167.379 cv
16.52 167.547 16.273 167.668 15.973 167.742 cv
15.676 167.82 15.324 167.859 14.914 167.855 cv
10.816 167.855 li
10.816 168.836 li
10.82 168.914 10.777 168.977 10.691 169.023 cv
10.609 169.07 10.477 169.094 10.285 169.094 cv
10.191 169.094 10.109 169.09 10.039 169.074 cv
9.977 169.066 9.918 169.047 9.871 169.023 cv
9.828 169.004 9.797 168.977 9.777 168.941 cv
9.762 168.91 9.754 168.875 9.75 168.828 cv
9.75 167.855 li
8.082 167.855 li
8.051 167.859 8.016 167.848 7.98 167.828 cv
7.953 167.812 7.926 167.781 7.898 167.727 cv
7.879 167.68 7.863 167.613 7.848 167.527 cv
7.84 167.449 7.832 167.344 7.832 167.215 cv
7.832 167.086 7.84 166.98 7.848 166.898 cv
7.863 166.816 7.879 166.75 7.898 166.703 cv
7.926 166.656 7.953 166.625 7.98 166.602 cv
8.016 166.586 8.051 166.574 8.082 166.57 cv
9.75 166.57 li
9.75 164.77 li
9.754 164.73 9.762 164.695 9.777 164.66 cv
9.797 164.633 9.828 164.605 9.871 164.578 cv
9.918 164.559 9.977 164.543 10.039 164.527 cv
10.109 164.52 10.191 164.512 10.285 164.512 cv
10.477 164.512 10.609 164.535 10.691 164.582 cv
10.777 164.629 10.82 164.691 10.816 164.77 cv
10.816 166.57 li
14.73 166.57 li
15.215 166.574 15.578 166.504 15.824 166.355 cv
16.074 166.215 16.199 165.957 16.195 165.586 cv
16.199 165.473 16.188 165.367 16.16 165.27 cv
16.141 165.18 16.117 165.098 16.086 165.02 cv
16.063 164.949 16.035 164.887 16.012 164.832 cv
15.988 164.785 15.977 164.738 15.977 164.691 cv
15.977 164.668 15.984 164.641 15.996 164.617 cv
16.012 164.594 16.035 164.578 16.07 164.562 cv
16.109 164.555 16.16 164.543 16.219 164.527 cv
16.285 164.52 16.363 164.512 16.449 164.512 cv
cp
f
16.449 159.355 mo
16.605 159.355 16.723 159.367 16.809 159.387 cv
16.898 159.41 16.965 159.441 17.004 159.48 cv
17.047 159.523 17.086 159.586 17.121 159.668 cv
17.156 159.754 17.184 159.848 17.211 159.953 cv
17.23 160.062 17.25 160.176 17.27 160.293 cv
17.281 160.41 17.289 160.531 17.293 160.648 cv
17.289 161.016 17.242 161.328 17.148 161.586 cv
17.055 161.848 16.91 162.059 16.711 162.223 cv
16.52 162.391 16.273 162.512 15.973 162.586 cv
15.676 162.664 15.324 162.703 14.914 162.699 cv
10.816 162.699 li
10.816 163.68 li
10.82 163.758 10.777 163.82 10.691 163.867 cv
10.609 163.914 10.477 163.937 10.285 163.937 cv
10.191 163.937 10.109 163.934 10.039 163.918 cv
9.977 163.91 9.918 163.891 9.871 163.867 cv
9.828 163.848 9.797 163.82 9.777 163.785 cv
9.762 163.754 9.754 163.719 9.75 163.672 cv
9.75 162.699 li
8.082 162.699 li
8.051 162.703 8.016 162.691 7.98 162.672 cv
7.953 162.656 7.926 162.625 7.898 162.57 cv
7.879 162.523 7.863 162.457 7.848 162.371 cv
7.84 162.293 7.832 162.187 7.832 162.059 cv
7.832 161.93 7.84 161.824 7.848 161.742 cv
7.863 161.66 7.879 161.594 7.898 161.547 cv
7.926 161.5 7.953 161.469 7.98 161.445 cv
8.016 161.43 8.051 161.418 8.082 161.414 cv
9.75 161.414 li
9.75 159.613 li
9.754 159.574 9.762 159.539 9.777 159.504 cv
9.797 159.477 9.828 159.449 9.871 159.422 cv
9.918 159.402 9.977 159.387 10.039 159.371 cv
10.109 159.363 10.191 159.355 10.285 159.355 cv
10.477 159.355 10.609 159.379 10.691 159.426 cv
10.777 159.473 10.82 159.535 10.816 159.613 cv
10.816 161.414 li
14.73 161.414 li
15.215 161.418 15.578 161.348 15.824 161.199 cv
16.074 161.059 16.199 160.801 16.195 160.43 cv
16.199 160.316 16.188 160.211 16.16 160.113 cv
16.141 160.023 16.117 159.941 16.086 159.863 cv
16.063 159.793 16.035 159.73 16.012 159.676 cv
15.988 159.629 15.977 159.582 15.977 159.535 cv
15.977 159.512 15.984 159.484 15.996 159.461 cv
16.012 159.437 16.035 159.422 16.07 159.406 cv
16.109 159.398 16.16 159.387 16.219 159.371 cv
16.285 159.363 16.363 159.355 16.449 159.355 cv
cp
f
15.055 153.223 mo
15.418 153.227 15.738 153.293 16.016 153.422 cv
16.297 153.555 16.531 153.742 16.723 153.984 cv
16.918 154.23 17.063 154.523 17.16 154.859 cv
17.258 155.199 17.305 155.57 17.309 155.973 cv
17.305 156.227 17.285 156.465 17.25 156.687 cv
17.207 156.914 17.16 157.113 17.102 157.293 cv
17.043 157.473 16.98 157.625 16.914 157.75 cv
16.852 157.875 16.793 157.969 16.738 158.023 cv
16.688 158.082 16.617 158.121 16.52 158.145 cv
16.43 158.172 16.301 158.184 16.141 158.184 cv
16.043 158.184 15.961 158.18 15.891 158.168 cv
15.824 158.16 15.77 158.148 15.727 158.129 cv
15.688 158.117 15.656 158.094 15.637 158.066 cv
15.621 158.039 15.613 158.008 15.609 157.969 cv
15.613 157.914 15.648 157.828 15.715 157.715 cv
15.789 157.605 15.867 157.469 15.945 157.301 cv
16.031 157.141 16.105 156.949 16.176 156.723 cv
16.246 156.504 16.281 156.246 16.281 155.949 cv
16.281 155.734 16.258 155.535 16.211 155.355 cv
16.164 155.18 16.098 155.027 16.004 154.898 cv
15.918 154.77 15.801 154.668 15.656 154.598 cv
15.52 154.527 15.352 154.492 15.156 154.492 cv
14.961 154.492 14.797 154.543 14.66 154.645 cv
14.527 154.746 14.406 154.883 14.301 155.047 cv
14.199 155.215 14.109 155.398 14.023 155.605 cv
13.945 155.816 13.859 156.031 13.77 156.25 cv
13.684 156.469 13.582 156.684 13.469 156.895 cv
13.359 157.105 13.227 157.297 13.063 157.461 cv
12.906 157.633 12.711 157.766 12.484 157.863 cv
12.262 157.969 11.996 158.02 11.684 158.016 cv
11.41 158.02 11.145 157.965 10.891 157.855 cv
10.641 157.75 10.422 157.59 10.23 157.375 cv
10.043 157.164 9.891 156.898 9.773 156.578 cv
9.66 156.258 9.602 155.887 9.602 155.457 cv
9.602 155.273 9.617 155.086 9.648 154.898 cv
9.68 154.715 9.719 154.547 9.766 154.391 cv
9.813 154.242 9.863 154.113 9.918 154.004 cv
9.973 153.902 10.023 153.82 10.063 153.762 cv
10.109 153.711 10.145 153.676 10.172 153.652 cv
10.203 153.637 10.238 153.621 10.273 153.613 cv
10.316 153.605 10.363 153.598 10.418 153.59 cv
10.477 153.582 10.547 153.578 10.629 153.578 cv
10.719 153.578 10.797 153.582 10.859 153.59 cv
10.93 153.598 10.98 153.613 11.02 153.629 cv
11.063 153.652 11.094 153.672 11.109 153.695 cv
11.129 153.723 11.137 153.754 11.137 153.781 cv
11.137 153.832 11.109 153.898 11.051 153.984 cv
10.996 154.074 10.934 154.187 10.867 154.328 cv
10.805 154.469 10.746 154.637 10.684 154.824 cv
10.629 155.016 10.598 155.23 10.598 155.473 cv
10.598 155.695 10.625 155.887 10.672 156.051 cv
10.727 156.219 10.797 156.355 10.883 156.461 cv
10.977 156.566 11.082 156.648 11.207 156.699 cv
11.332 156.758 11.469 156.785 11.613 156.781 cv
11.816 156.785 11.984 156.734 12.121 156.629 cv
12.262 156.527 12.383 156.391 12.484 156.223 cv
12.59 156.059 12.684 155.867 12.766 155.652 cv
12.852 155.441 12.938 155.227 13.023 155.004 cv
13.113 154.785 13.215 154.566 13.32 154.348 cv
13.43 154.133 13.559 153.941 13.715 153.773 cv
13.871 153.609 14.059 153.477 14.277 153.375 cv
14.496 153.277 14.758 153.227 15.055 153.223 cv
cp
f
12.977 148.781 mo
13.563 148.781 14.145 148.82 14.719 148.891 cv
15.293 148.969 15.859 149.078 16.422 149.219 cv
16.98 149.367 17.531 149.543 18.074 149.754 cv
18.617 149.965 19.152 150.211 19.684 150.488 cv
19.707 150.508 19.73 150.531 19.754 150.559 cv
19.773 150.594 19.793 150.633 19.809 150.68 cv
19.824 150.73 19.832 150.789 19.84 150.855 cv
19.84 150.926 19.844 151.008 19.848 151.098 cv
19.844 151.234 19.836 151.34 19.828 151.414 cv
19.813 151.492 19.793 151.547 19.766 151.578 cv
19.734 151.613 19.699 151.629 19.656 151.625 cv
19.609 151.625 19.555 151.609 19.496 151.582 cv
18.445 151.105 17.375 150.746 16.277 150.5 cv
15.18 150.258 14.07 150.137 12.953 150.133 cv
11.844 150.137 10.738 150.258 9.637 150.5 cv
8.539 150.746 7.469 151.113 6.422 151.598 cv
6.379 151.621 6.336 151.629 6.289 151.621 cv
6.25 151.621 6.215 151.598 6.188 151.551 cv
6.164 151.512 6.145 151.453 6.125 151.379 cv
6.113 151.309 6.105 151.211 6.102 151.09 cv
6.105 150.98 6.109 150.891 6.113 150.816 cv
6.125 150.746 6.137 150.687 6.148 150.641 cv
6.168 150.598 6.184 150.566 6.195 150.543 cv
6.215 150.527 6.23 150.512 6.25 150.496 cv
7.316 149.965 8.414 149.543 9.535 149.238 cv
10.664 148.934 11.809 148.781 12.977 148.781 cv
cp
f
258.152 524.254 mo
258.148 524.359 258.133 524.449 258.098 524.52 cv
258.063 524.598 258.016 524.656 257.961 524.699 cv
257.902 524.75 257.84 524.785 257.773 524.801 cv
257.699 524.824 257.629 524.832 257.566 524.832 cv
257.121 524.832 li
256.98 524.832 256.859 524.82 256.754 524.789 cv
256.648 524.766 256.551 524.711 256.457 524.633 cv
256.363 524.559 256.27 524.457 256.176 524.324 cv
256.082 524.195 255.98 524.031 255.875 523.828 cv
252.801 518.09 li
252.637 517.797 252.473 517.488 252.313 517.16 cv
252.145 516.84 251.992 516.523 251.855 516.215 cv
251.84 516.215 li
251.848 516.59 251.855 516.973 251.863 517.359 cv
251.867 517.75 251.867 518.137 251.871 518.52 cv
251.871 524.605 li
251.867 524.645 251.855 524.68 251.836 524.711 cv
251.813 524.746 251.777 524.773 251.727 524.789 cv
251.672 524.809 251.602 524.82 251.52 524.836 cv
251.434 524.848 251.328 524.855 251.199 524.855 cv
251.063 524.855 250.953 524.848 250.871 524.836 cv
250.785 524.82 250.719 524.809 250.672 524.789 cv
250.621 524.773 250.586 524.746 250.563 524.711 cv
250.539 524.68 250.527 524.645 250.531 524.605 cv
250.531 515.301 li
250.527 515.094 250.586 514.945 250.707 514.855 cv
250.824 514.77 250.953 514.727 251.094 514.723 cv
251.754 514.723 li
251.906 514.727 252.039 514.738 252.145 514.762 cv
252.246 514.789 252.34 514.832 252.426 514.891 cv
252.508 514.953 252.586 515.035 252.668 515.141 cv
252.742 515.25 252.824 515.387 252.91 515.543 cv
255.277 519.969 li
255.422 520.242 255.563 520.508 255.699 520.762 cv
255.832 521.02 255.961 521.273 256.09 521.52 cv
256.211 521.773 256.336 522.02 256.461 522.258 cv
256.582 522.5 256.703 522.742 256.828 522.984 cv
256.836 522.984 li
256.824 522.578 256.816 522.148 256.816 521.703 cv
256.809 521.258 256.809 520.832 256.813 520.422 cv
256.813 514.949 li
256.809 514.914 256.82 514.879 256.844 514.848 cv
256.867 514.816 256.902 514.789 256.957 514.766 cv
257.004 514.742 257.074 514.727 257.16 514.715 cv
257.246 514.707 257.355 514.703 257.496 514.699 cv
257.613 514.703 257.719 514.707 257.809 514.715 cv
257.895 514.727 257.961 514.742 258.012 514.766 cv
258.059 514.789 258.094 514.816 258.117 514.848 cv
258.137 514.879 258.148 514.914 258.152 514.949 cv
cp
f
266.699 524.613 mo
266.695 524.66 266.688 524.695 266.672 524.719 cv
266.652 524.75 266.617 524.773 266.574 524.793 cv
266.527 524.812 266.469 524.824 266.395 524.84 cv
266.316 524.848 266.223 524.855 266.117 524.855 cv
265.992 524.855 265.895 524.848 265.824 524.84 cv
265.746 524.824 265.688 524.812 265.645 524.793 cv
265.598 524.773 265.566 524.75 265.555 524.719 cv
265.535 524.695 265.527 524.66 265.531 524.613 cv
265.531 523.687 li
265.129 524.133 264.734 524.453 264.348 524.652 cv
263.953 524.855 263.559 524.953 263.164 524.957 cv
262.691 524.953 262.297 524.879 261.98 524.723 cv
261.66 524.57 261.402 524.359 261.207 524.09 cv
261.004 523.824 260.863 523.512 260.781 523.152 cv
260.691 522.797 260.648 522.363 260.652 521.855 cv
260.652 517.602 li
260.648 517.562 260.656 517.527 260.68 517.496 cv
260.695 517.469 260.73 517.445 260.785 517.418 cv
260.832 517.398 260.902 517.383 260.988 517.371 cv
261.07 517.367 261.172 517.363 261.301 517.359 cv
261.422 517.363 261.527 517.367 261.613 517.371 cv
261.695 517.383 261.762 517.398 261.809 517.418 cv
261.855 517.445 261.891 517.469 261.914 517.496 cv
261.934 517.527 261.941 517.562 261.945 517.602 cv
261.945 521.684 li
261.941 522.098 261.973 522.426 262.035 522.672 cv
262.094 522.918 262.184 523.129 262.309 523.301 cv
262.426 523.48 262.582 523.613 262.773 523.707 cv
262.957 523.805 263.176 523.855 263.426 523.852 cv
263.746 523.855 264.066 523.738 264.391 523.508 cv
264.707 523.281 265.047 522.945 265.406 522.5 cv
265.406 517.602 li
265.406 517.562 265.414 517.527 265.434 517.496 cv
265.449 517.469 265.484 517.445 265.539 517.418 cv
265.59 517.398 265.656 517.383 265.738 517.371 cv
265.816 517.367 265.922 517.363 266.055 517.359 cv
266.176 517.363 266.281 517.367 266.367 517.371 cv
266.449 517.383 266.512 517.398 266.559 517.418 cv
266.602 517.445 266.637 517.469 266.664 517.496 cv
266.684 517.527 266.695 517.562 266.699 517.602 cv
cp
f
279.477 524.613 mo
279.473 524.66 279.465 524.695 279.445 524.719 cv
279.422 524.75 279.387 524.773 279.344 524.793 cv
279.293 524.812 279.227 524.824 279.148 524.84 cv
279.063 524.848 278.961 524.855 278.836 524.855 cv
278.703 524.855 278.594 524.848 278.516 524.84 cv
278.43 524.824 278.363 524.812 278.316 524.793 cv
278.262 524.773 278.227 524.75 278.211 524.719 cv
278.188 524.695 278.18 524.66 278.18 524.613 cv
278.18 520.352 li
278.18 520.059 278.152 519.789 278.102 519.543 cv
278.047 519.301 277.965 519.09 277.852 518.91 cv
277.738 518.734 277.594 518.598 277.418 518.504 cv
277.238 518.41 277.027 518.363 276.793 518.363 cv
276.496 518.363 276.199 518.48 275.902 518.707 cv
275.598 518.941 275.27 519.273 274.914 519.711 cv
274.914 524.613 li
274.91 524.66 274.898 524.695 274.883 524.719 cv
274.859 524.75 274.828 524.773 274.781 524.793 cv
274.73 524.812 274.664 524.824 274.582 524.84 cv
274.496 524.848 274.391 524.855 274.27 524.855 cv
274.148 524.855 274.047 524.848 273.961 524.84 cv
273.875 524.824 273.805 524.812 273.758 524.793 cv
273.703 524.773 273.672 524.75 273.656 524.719 cv
273.637 524.695 273.625 524.66 273.629 524.613 cv
273.629 520.352 li
273.625 520.059 273.598 519.789 273.543 519.543 cv
273.484 519.301 273.398 519.09 273.285 518.91 cv
273.172 518.734 273.027 518.598 272.855 518.504 cv
272.676 518.41 272.469 518.363 272.234 518.363 cv
271.934 518.363 271.637 518.48 271.336 518.707 cv
271.035 518.941 270.707 519.273 270.355 519.711 cv
270.355 524.613 li
270.352 524.66 270.34 524.695 270.324 524.719 cv
270.301 524.75 270.27 524.773 270.223 524.793 cv
270.176 524.812 270.109 524.824 270.031 524.84 cv
269.945 524.848 269.84 524.855 269.711 524.855 cv
269.582 524.855 269.477 524.848 269.398 524.84 cv
269.313 524.824 269.246 524.812 269.199 524.793 cv
269.145 524.773 269.113 524.75 269.098 524.719 cv
269.078 524.695 269.066 524.66 269.07 524.613 cv
269.07 517.602 li
269.066 517.562 269.074 517.527 269.094 517.496 cv
269.105 517.469 269.137 517.445 269.188 517.418 cv
269.23 517.398 269.293 517.383 269.367 517.371 cv
269.438 517.367 269.531 517.363 269.656 517.359 cv
269.766 517.363 269.863 517.367 269.941 517.371 cv
270.016 517.383 270.074 517.398 270.117 517.418 cv
270.156 517.445 270.184 517.469 270.203 517.496 cv
270.219 517.527 270.227 517.562 270.23 517.602 cv
270.23 518.527 li
270.621 518.086 271.004 517.766 271.379 517.559 cv
271.746 517.355 272.125 517.25 272.508 517.25 cv
272.797 517.25 273.055 517.285 273.289 517.352 cv
273.516 517.422 273.723 517.516 273.902 517.637 cv
274.078 517.758 274.227 517.902 274.355 518.07 cv
274.477 518.242 274.582 518.434 274.668 518.637 cv
274.898 518.387 275.121 518.172 275.332 517.992 cv
275.543 517.82 275.746 517.676 275.941 517.562 cv
276.137 517.457 276.324 517.379 276.508 517.324 cv
276.691 517.277 276.879 517.25 277.066 517.25 cv
277.52 517.25 277.898 517.332 278.203 517.488 cv
278.508 517.652 278.754 517.863 278.949 518.125 cv
279.137 518.391 279.273 518.699 279.355 519.055 cv
279.434 519.41 279.473 519.785 279.477 520.18 cv
cp
f
288.277 521.012 mo
288.273 521.621 288.207 522.172 288.078 522.656 cv
287.941 523.145 287.746 523.559 287.492 523.898 cv
287.234 524.242 286.918 524.504 286.547 524.684 cv
286.172 524.867 285.746 524.953 285.262 524.957 cv
285.035 524.953 284.828 524.934 284.641 524.891 cv
284.453 524.844 284.266 524.773 284.086 524.676 cv
283.898 524.578 283.719 524.453 283.539 524.301 cv
283.355 524.152 283.164 523.973 282.965 523.758 cv
282.965 524.613 li
282.965 524.66 282.953 524.695 282.934 524.723 cv
282.91 524.758 282.875 524.781 282.832 524.797 cv
282.781 524.812 282.723 524.824 282.656 524.84 cv
282.582 524.848 282.492 524.855 282.387 524.855 cv
282.277 524.855 282.191 524.848 282.121 524.84 cv
282.047 524.824 281.984 524.812 281.941 524.797 cv
281.891 524.781 281.859 524.758 281.848 524.723 cv
281.828 524.695 281.82 524.66 281.824 524.613 cv
281.824 514.203 li
281.82 514.164 281.832 514.129 281.852 514.094 cv
281.867 514.066 281.898 514.039 281.953 514.016 cv
282 513.996 282.066 513.98 282.152 513.969 cv
282.23 513.961 282.336 513.957 282.465 513.953 cv
282.594 513.957 282.699 513.961 282.785 513.969 cv
282.863 513.98 282.93 513.996 282.977 514.016 cv
283.023 514.039 283.055 514.066 283.078 514.094 cv
283.094 514.129 283.105 514.164 283.109 514.203 cv
283.109 518.402 li
283.316 518.191 283.52 518.012 283.715 517.867 cv
283.91 517.723 284.098 517.605 284.285 517.512 cv
284.469 517.426 284.656 517.359 284.848 517.312 cv
285.031 517.273 285.23 517.25 285.441 517.25 cv
285.945 517.25 286.379 517.352 286.746 517.555 cv
287.105 517.758 287.398 518.031 287.625 518.367 cv
287.848 518.711 288.016 519.109 288.121 519.566 cv
288.223 520.023 288.273 520.504 288.277 521.012 cv
cp
286.945 521.16 mo
286.941 520.805 286.914 520.457 286.863 520.117 cv
286.805 519.781 286.711 519.484 286.574 519.223 cv
286.438 518.965 286.258 518.754 286.035 518.594 cv
285.809 518.437 285.527 518.359 285.195 518.355 cv
285.027 518.359 284.863 518.383 284.703 518.426 cv
284.539 518.477 284.375 518.555 284.207 518.66 cv
284.039 518.773 283.863 518.914 283.688 519.082 cv
283.504 519.258 283.313 519.473 283.109 519.727 cv
283.109 522.523 li
283.465 522.957 283.805 523.289 284.129 523.512 cv
284.453 523.742 284.789 523.855 285.141 523.852 cv
285.461 523.855 285.738 523.777 285.973 523.617 cv
286.199 523.465 286.387 523.258 286.531 522.996 cv
286.676 522.742 286.781 522.453 286.848 522.133 cv
286.91 521.816 286.941 521.492 286.945 521.16 cv
cp
f
296.188 520.805 mo
296.184 521.008 296.133 521.148 296.035 521.234 cv
295.93 521.32 295.813 521.363 295.688 521.363 cv
291.07 521.363 li
291.066 521.754 291.105 522.105 291.188 522.418 cv
291.262 522.73 291.395 523 291.578 523.219 cv
291.758 523.445 291.992 523.617 292.289 523.734 cv
292.578 523.859 292.938 523.918 293.363 523.914 cv
293.695 523.918 293.992 523.891 294.254 523.832 cv
294.516 523.781 294.742 523.719 294.934 523.648 cv
295.121 523.582 295.277 523.523 295.402 523.465 cv
295.523 523.414 295.617 523.387 295.68 523.383 cv
295.715 523.387 295.746 523.395 295.777 523.41 cv
295.805 523.43 295.828 523.457 295.848 523.492 cv
295.859 523.531 295.871 523.582 295.883 523.645 cv
295.887 523.711 295.891 523.789 295.895 523.883 cv
295.891 523.953 295.887 524.012 295.887 524.059 cv
295.879 524.105 295.875 524.148 295.867 524.187 cv
295.859 524.227 295.844 524.262 295.828 524.293 cv
295.805 524.324 295.781 524.355 295.758 524.383 cv
295.727 524.414 295.645 524.461 295.504 524.523 cv
295.363 524.59 295.18 524.652 294.957 524.715 cv
294.73 524.777 294.473 524.832 294.18 524.883 cv
293.887 524.93 293.574 524.953 293.242 524.957 cv
292.664 524.953 292.156 524.875 291.727 524.715 cv
291.289 524.555 290.926 524.316 290.633 524 cv
290.332 523.684 290.109 523.289 289.961 522.809 cv
289.813 522.332 289.738 521.773 289.738 521.137 cv
289.738 520.539 289.813 520 289.969 519.516 cv
290.121 519.039 290.348 518.629 290.645 518.293 cv
290.938 517.957 291.293 517.699 291.707 517.52 cv
292.121 517.34 292.586 517.25 293.102 517.25 cv
293.652 517.25 294.121 517.34 294.508 517.516 cv
294.895 517.695 295.211 517.934 295.465 518.23 cv
295.711 518.531 295.895 518.883 296.012 519.281 cv
296.125 519.687 296.184 520.117 296.188 520.57 cv
cp
294.895 520.422 mo
294.91 519.746 294.758 519.215 294.441 518.832 cv
294.125 518.449 293.656 518.258 293.039 518.254 cv
292.715 518.258 292.434 518.316 292.195 518.434 cv
291.953 518.555 291.754 518.715 291.594 518.91 cv
291.43 519.109 291.305 519.34 291.219 519.602 cv
291.129 519.863 291.078 520.137 291.07 520.422 cv
cp
f
302.25 518.059 mo
302.246 518.176 302.246 518.273 302.242 518.348 cv
302.234 518.43 302.223 518.492 302.211 518.531 cv
302.191 518.578 302.172 518.609 302.152 518.633 cv
302.125 518.656 302.094 518.668 302.055 518.668 cv
302.012 518.668 301.961 518.656 301.902 518.633 cv
301.84 518.609 301.77 518.586 301.699 518.562 cv
301.621 518.539 301.539 518.52 301.445 518.496 cv
301.352 518.48 301.25 518.469 301.141 518.465 cv
301.008 518.469 300.879 518.496 300.758 518.543 cv
300.633 518.598 300.504 518.684 300.367 518.801 cv
300.227 518.926 300.082 519.082 299.934 519.277 cv
299.781 519.473 299.613 519.715 299.434 520 cv
299.434 524.613 li
299.43 524.66 299.418 524.695 299.402 524.719 cv
299.379 524.75 299.348 524.773 299.301 524.793 cv
299.254 524.812 299.188 524.824 299.109 524.84 cv
299.023 524.848 298.918 524.855 298.789 524.855 cv
298.66 524.855 298.555 524.848 298.477 524.84 cv
298.391 524.824 298.324 524.812 298.277 524.793 cv
298.223 524.773 298.191 524.75 298.176 524.719 cv
298.156 524.695 298.145 524.66 298.148 524.613 cv
298.148 517.602 li
298.145 517.562 298.152 517.527 298.172 517.496 cv
298.184 517.469 298.215 517.445 298.266 517.418 cv
298.309 517.398 298.371 517.383 298.445 517.371 cv
298.516 517.367 298.609 517.363 298.734 517.359 cv
298.844 517.363 298.941 517.367 299.02 517.371 cv
299.094 517.383 299.152 517.398 299.195 517.418 cv
299.234 517.445 299.262 517.469 299.281 517.496 cv
299.297 517.527 299.305 517.562 299.309 517.602 cv
299.309 518.621 li
299.496 518.34 299.68 518.113 299.852 517.937 cv
300.02 517.762 300.18 517.621 300.332 517.52 cv
300.48 517.418 300.629 517.348 300.777 517.309 cv
300.926 517.27 301.074 517.25 301.227 517.25 cv
301.293 517.25 301.371 517.254 301.457 517.262 cv
301.543 517.27 301.633 517.285 301.727 517.305 cv
301.82 517.328 301.902 517.352 301.98 517.375 cv
302.051 517.402 302.105 517.43 302.141 517.453 cv
302.168 517.484 302.188 517.508 302.203 517.527 cv
302.211 517.555 302.223 517.586 302.23 517.617 cv
302.238 517.656 302.242 517.707 302.246 517.777 cv
302.246 517.848 302.246 517.941 302.25 518.059 cv
cp
f
314.008 521.027 mo
314.004 521.605 313.93 522.133 313.781 522.609 cv
313.629 523.094 313.402 523.508 313.105 523.852 cv
312.805 524.203 312.43 524.473 311.984 524.664 cv
311.531 524.859 311.012 524.953 310.422 524.957 cv
309.844 524.953 309.34 524.871 308.914 524.699 cv
308.484 524.531 308.129 524.281 307.844 523.953 cv
307.555 523.625 307.34 523.23 307.203 522.762 cv
307.063 522.297 306.996 521.766 306.996 521.168 cv
306.996 520.602 307.066 520.074 307.215 519.594 cv
307.359 519.113 307.586 518.699 307.887 518.348 cv
308.184 518 308.555 517.73 309.004 517.539 cv
309.449 517.348 309.973 517.25 310.57 517.25 cv
311.148 517.25 311.648 517.336 312.078 517.508 cv
312.504 517.68 312.863 517.93 313.148 518.258 cv
313.434 518.586 313.648 518.984 313.793 519.449 cv
313.934 519.918 314.004 520.445 314.008 521.027 cv
cp
312.676 521.113 mo
312.672 520.738 312.637 520.379 312.57 520.039 cv
312.496 519.703 312.379 519.41 312.219 519.152 cv
312.055 518.902 311.836 518.699 311.559 518.547 cv
311.277 518.402 310.93 518.328 310.52 518.324 cv
310.133 518.328 309.805 518.395 309.531 518.527 cv
309.254 518.664 309.027 518.855 308.852 519.102 cv
308.672 519.348 308.539 519.641 308.457 519.977 cv
308.367 520.316 308.324 520.684 308.328 521.082 cv
308.324 521.469 308.359 521.832 308.434 522.168 cv
308.5 522.508 308.617 522.801 308.785 523.051 cv
308.949 523.305 309.172 523.508 309.449 523.652 cv
309.727 523.805 310.074 523.879 310.488 523.875 cv
310.863 523.879 311.191 523.809 311.473 523.672 cv
311.75 523.539 311.977 523.352 312.156 523.102 cv
312.332 522.859 312.461 522.566 312.547 522.23 cv
312.629 521.895 312.672 521.523 312.676 521.113 cv
cp
f
319.742 514.715 mo
319.738 514.816 319.734 514.895 319.727 514.953 cv
319.715 515.016 319.703 515.066 319.691 515.098 cv
319.676 515.137 319.66 515.16 319.641 515.172 cv
319.617 515.187 319.59 515.195 319.563 515.191 cv
319.523 515.195 319.477 515.184 319.426 515.156 cv
319.367 515.137 319.301 515.109 319.227 515.078 cv
319.145 515.051 319.055 515.023 318.949 515 cv
318.84 514.977 318.715 514.965 318.582 514.965 cv
318.387 514.965 318.223 514.996 318.09 515.059 cv
317.949 515.121 317.84 515.219 317.762 515.352 cv
317.676 515.484 317.617 515.656 317.582 515.867 cv
317.543 516.078 317.523 516.336 317.527 516.633 cv
317.527 517.398 li
319.094 517.398 li
319.133 517.402 319.168 517.41 319.199 517.426 cv
319.227 517.445 319.254 517.477 319.277 517.52 cv
319.301 517.566 319.316 517.625 319.332 517.687 cv
319.34 517.758 319.348 517.84 319.352 517.934 cv
319.348 518.125 319.324 518.258 319.281 518.34 cv
319.23 518.426 319.168 518.469 319.094 518.465 cv
317.527 518.465 li
317.527 524.613 li
317.523 524.66 317.516 524.695 317.496 524.719 cv
317.473 524.75 317.438 524.773 317.391 524.793 cv
317.34 524.812 317.273 524.824 317.191 524.84 cv
317.105 524.848 317 524.855 316.883 524.855 cv
316.754 524.855 316.652 524.848 316.57 524.84 cv
316.484 524.824 316.418 524.812 316.371 524.793 cv
316.32 524.773 316.285 524.75 316.266 524.719 cv
316.242 524.695 316.23 524.66 316.234 524.613 cv
316.234 518.465 li
315.246 518.465 li
315.16 518.469 315.098 518.426 315.059 518.34 cv
315.016 518.258 314.992 518.125 314.996 517.934 cv
314.992 517.84 315 517.758 315.012 517.687 cv
315.02 517.625 315.035 517.566 315.059 517.52 cv
315.078 517.477 315.102 517.445 315.137 517.426 cv
315.164 517.41 315.203 517.402 315.246 517.398 cv
316.234 517.398 li
316.234 516.672 li
316.23 516.187 316.277 515.77 316.371 515.414 cv
316.461 515.066 316.598 514.777 316.785 514.555 cv
316.969 514.332 317.203 514.168 317.492 514.059 cv
317.773 513.953 318.109 513.898 318.496 513.898 cv
318.672 513.898 318.848 513.918 319.023 513.949 cv
319.191 513.988 319.324 514.023 319.422 514.059 cv
319.512 514.102 319.574 514.137 319.609 514.164 cv
319.637 514.199 319.664 514.238 319.688 514.285 cv
319.707 514.336 319.719 514.398 319.73 514.465 cv
319.734 514.539 319.738 514.621 319.742 514.715 cv
cp
f
329.938 521.98 mo
329.934 522.453 329.848 522.875 329.676 523.242 cv
329.5 523.617 329.258 523.93 328.949 524.184 cv
328.641 524.441 328.277 524.633 327.859 524.762 cv
327.438 524.891 326.988 524.953 326.508 524.957 cv
326.168 524.953 325.852 524.926 325.566 524.871 cv
325.277 524.812 325.023 524.746 324.797 524.66 cv
324.57 524.582 324.379 524.496 324.227 524.402 cv
324.07 524.316 323.965 524.238 323.906 524.176 cv
323.848 524.113 323.805 524.035 323.777 523.941 cv
323.746 523.848 323.73 523.719 323.734 523.555 cv
323.73 523.441 323.734 523.348 323.75 523.27 cv
323.758 523.195 323.773 523.133 323.797 523.086 cv
323.813 523.039 323.84 523.008 323.875 522.988 cv
323.902 522.973 323.938 522.965 323.98 522.961 cv
324.051 522.965 324.152 523.008 324.289 523.094 cv
324.418 523.184 324.59 523.281 324.801 523.383 cv
325.008 523.492 325.258 523.59 325.551 523.676 cv
325.844 523.77 326.184 523.812 326.57 523.812 cv
326.859 523.812 327.125 523.773 327.367 523.695 cv
327.605 523.617 327.813 523.508 327.992 523.363 cv
328.164 523.223 328.301 523.047 328.395 522.836 cv
328.488 522.629 328.535 522.395 328.535 522.129 cv
328.535 521.848 328.469 521.602 328.34 521.395 cv
328.207 521.195 328.035 521.02 327.824 520.863 cv
327.609 520.715 327.367 520.574 327.094 520.441 cv
326.82 520.316 326.539 520.184 326.258 520.051 cv
325.969 519.918 325.691 519.773 325.422 519.609 cv
325.152 519.453 324.91 519.262 324.699 519.043 cv
324.48 518.824 324.309 518.57 324.18 518.273 cv
324.043 517.984 323.977 517.633 323.98 517.219 cv
323.977 516.801 324.055 516.426 324.211 516.094 cv
324.363 515.766 324.574 515.488 324.852 515.262 cv
325.121 515.043 325.445 514.871 325.824 514.754 cv
326.199 514.637 326.609 514.578 327.047 514.578 cv
327.266 514.578 327.488 514.598 327.719 514.637 cv
327.941 514.676 328.152 514.727 328.355 514.789 cv
328.551 514.855 328.73 514.93 328.891 515.008 cv
329.043 515.09 329.145 515.156 329.199 515.203 cv
329.246 515.258 329.281 515.297 329.297 515.32 cv
329.313 515.352 329.324 515.387 329.336 515.43 cv
329.344 515.477 329.352 515.531 329.359 515.59 cv
329.363 515.656 329.367 515.734 329.367 515.832 cv
329.367 515.926 329.363 516.012 329.355 516.082 cv
329.348 516.16 329.336 516.219 329.32 516.266 cv
329.305 516.312 329.281 516.348 329.254 516.371 cv
329.223 516.395 329.191 516.406 329.156 516.406 cv
329.098 516.406 329.008 516.371 328.887 516.301 cv
328.762 516.23 328.609 516.148 328.438 516.055 cv
328.258 515.965 328.051 515.883 327.813 515.805 cv
327.566 515.73 327.297 515.691 327 515.691 cv
326.719 515.691 326.473 515.73 326.266 515.805 cv
326.055 515.883 325.883 515.984 325.75 516.105 cv
325.613 516.23 325.512 516.375 325.445 516.547 cv
325.379 516.719 325.348 516.902 325.348 517.094 cv
325.348 517.379 325.41 517.621 325.539 517.82 cv
325.668 518.023 325.84 518.203 326.059 518.355 cv
326.27 518.516 326.516 518.656 326.793 518.785 cv
327.066 518.918 327.348 519.051 327.637 519.18 cv
327.922 519.312 328.203 519.457 328.477 519.613 cv
328.75 519.773 328.996 519.961 329.215 520.176 cv
329.43 520.395 329.602 520.648 329.738 520.941 cv
329.867 521.234 329.934 521.582 329.938 521.98 cv
cp
f
337.707 524.613 mo
337.703 524.66 337.695 524.695 337.68 524.719 cv
337.66 524.75 337.625 524.773 337.582 524.793 cv
337.535 524.812 337.477 524.824 337.402 524.84 cv
337.324 524.848 337.23 524.855 337.125 524.855 cv
337 524.855 336.902 524.848 336.832 524.84 cv
336.754 524.824 336.695 524.812 336.652 524.793 cv
336.605 524.773 336.574 524.75 336.563 524.719 cv
336.543 524.695 336.535 524.66 336.539 524.613 cv
336.539 523.687 li
336.137 524.133 335.742 524.453 335.355 524.652 cv
334.961 524.855 334.566 524.953 334.172 524.957 cv
333.699 524.953 333.305 524.879 332.988 524.723 cv
332.668 524.57 332.41 524.359 332.215 524.09 cv
332.012 523.824 331.871 523.512 331.789 523.152 cv
331.699 522.797 331.656 522.363 331.66 521.855 cv
331.66 517.602 li
331.656 517.562 331.664 517.527 331.688 517.496 cv
331.703 517.469 331.738 517.445 331.793 517.418 cv
331.84 517.398 331.91 517.383 331.996 517.371 cv
332.078 517.367 332.18 517.363 332.309 517.359 cv
332.43 517.363 332.535 517.367 332.621 517.371 cv
332.703 517.383 332.77 517.398 332.816 517.418 cv
332.863 517.445 332.898 517.469 332.922 517.496 cv
332.941 517.527 332.949 517.562 332.953 517.602 cv
332.953 521.684 li
332.949 522.098 332.98 522.426 333.043 522.672 cv
333.102 522.918 333.191 523.129 333.316 523.301 cv
333.434 523.48 333.59 523.613 333.781 523.707 cv
333.965 523.805 334.184 523.855 334.434 523.852 cv
334.754 523.855 335.074 523.738 335.398 523.508 cv
335.715 523.281 336.055 522.945 336.414 522.5 cv
336.414 517.602 li
336.414 517.562 336.422 517.527 336.441 517.496 cv
336.457 517.469 336.492 517.445 336.547 517.418 cv
336.598 517.398 336.664 517.383 336.746 517.371 cv
336.824 517.367 336.93 517.363 337.063 517.359 cv
337.184 517.363 337.289 517.367 337.375 517.371 cv
337.457 517.383 337.52 517.398 337.566 517.418 cv
337.609 517.445 337.645 517.469 337.672 517.496 cv
337.691 517.527 337.703 517.562 337.707 517.602 cv
cp
f
346.563 521.012 mo
346.559 521.621 346.492 522.172 346.363 522.656 cv
346.227 523.145 346.031 523.559 345.777 523.898 cv
345.52 524.242 345.203 524.504 344.832 524.684 cv
344.457 524.867 344.031 524.953 343.547 524.957 cv
343.32 524.953 343.113 524.934 342.926 524.891 cv
342.738 524.844 342.551 524.773 342.371 524.676 cv
342.184 524.578 342.004 524.453 341.824 524.301 cv
341.641 524.152 341.449 523.973 341.25 523.758 cv
341.25 524.613 li
341.25 524.66 341.238 524.695 341.219 524.723 cv
341.195 524.758 341.16 524.781 341.117 524.797 cv
341.066 524.812 341.008 524.824 340.941 524.84 cv
340.867 524.848 340.777 524.855 340.672 524.855 cv
340.563 524.855 340.477 524.848 340.406 524.84 cv
340.332 524.824 340.27 524.812 340.227 524.797 cv
340.176 524.781 340.145 524.758 340.133 524.723 cv
340.113 524.695 340.105 524.66 340.109 524.613 cv
340.109 514.203 li
340.105 514.164 340.117 514.129 340.137 514.094 cv
340.152 514.066 340.184 514.039 340.238 514.016 cv
340.285 513.996 340.352 513.98 340.438 513.969 cv
340.516 513.961 340.621 513.957 340.75 513.953 cv
340.879 513.957 340.984 513.961 341.07 513.969 cv
341.148 513.98 341.215 513.996 341.262 514.016 cv
341.309 514.039 341.34 514.066 341.363 514.094 cv
341.379 514.129 341.391 514.164 341.395 514.203 cv
341.395 518.402 li
341.602 518.191 341.805 518.012 342 517.867 cv
342.195 517.723 342.383 517.605 342.57 517.512 cv
342.754 517.426 342.941 517.359 343.133 517.312 cv
343.316 517.273 343.516 517.25 343.727 517.25 cv
344.23 517.25 344.664 517.352 345.031 517.555 cv
345.391 517.758 345.684 518.031 345.91 518.367 cv
346.133 518.711 346.301 519.109 346.406 519.566 cv
346.508 520.023 346.559 520.504 346.563 521.012 cv
cp
345.23 521.16 mo
345.227 520.805 345.199 520.457 345.148 520.117 cv
345.09 519.781 344.996 519.484 344.859 519.223 cv
344.723 518.965 344.543 518.754 344.32 518.594 cv
344.094 518.437 343.813 518.359 343.48 518.355 cv
343.313 518.359 343.148 518.383 342.988 518.426 cv
342.824 518.477 342.66 518.555 342.492 518.66 cv
342.324 518.773 342.148 518.914 341.973 519.082 cv
341.789 519.258 341.598 519.473 341.395 519.727 cv
341.395 522.523 li
341.75 522.957 342.09 523.289 342.414 523.512 cv
342.738 523.742 343.074 523.855 343.426 523.852 cv
343.746 523.855 344.023 523.777 344.258 523.617 cv
344.484 523.465 344.672 523.258 344.816 522.996 cv
344.961 522.742 345.066 522.453 345.133 522.133 cv
345.195 521.816 345.227 521.492 345.23 521.16 cv
cp
f
351.727 520.875 mo
351.727 521.078 351.703 521.215 351.656 521.293 cv
351.609 521.371 351.539 521.41 351.453 521.41 cv
348.195 521.41 li
348.102 521.41 348.035 521.371 347.988 521.289 cv
347.941 521.211 347.918 521.074 347.918 520.875 cv
347.918 520.68 347.941 520.539 347.988 520.461 cv
348.035 520.383 348.102 520.344 348.195 520.344 cv
351.453 520.344 li
351.492 520.344 351.531 520.352 351.566 520.367 cv
351.598 520.383 351.625 520.414 351.652 520.457 cv
351.672 520.504 351.691 520.559 351.707 520.625 cv
351.719 520.695 351.727 520.781 351.727 520.875 cv
cp
f
354.98 524.605 mo
354.977 524.648 354.969 524.684 354.949 524.715 cv
354.926 524.746 354.887 524.773 354.84 524.789 cv
354.785 524.809 354.719 524.82 354.633 524.836 cv
354.547 524.848 354.438 524.855 354.313 524.855 cv
354.184 524.855 354.078 524.848 353.992 524.836 cv
353.902 524.82 353.832 524.809 353.781 524.789 cv
353.727 524.773 353.691 524.746 353.672 524.715 cv
353.648 524.684 353.637 524.648 353.641 524.605 cv
353.641 514.926 li
353.637 514.887 353.648 514.852 353.676 514.816 cv
353.695 514.789 353.734 514.762 353.793 514.742 cv
353.844 514.727 353.914 514.711 354.004 514.695 cv
354.086 514.684 354.188 514.68 354.313 514.676 cv
354.438 514.68 354.547 514.684 354.633 514.695 cv
354.719 514.711 354.785 514.727 354.84 514.742 cv
354.887 514.762 354.926 514.789 354.949 514.816 cv
354.969 514.852 354.977 514.887 354.98 514.926 cv
cp
f
367.969 524.613 mo
367.965 524.66 367.957 524.695 367.938 524.719 cv
367.914 524.75 367.879 524.773 367.836 524.793 cv
367.785 524.812 367.719 524.824 367.641 524.84 cv
367.555 524.848 367.453 524.855 367.328 524.855 cv
367.195 524.855 367.086 524.848 367.008 524.84 cv
366.922 524.824 366.855 524.812 366.809 524.793 cv
366.754 524.773 366.719 524.75 366.703 524.719 cv
366.68 524.695 366.672 524.66 366.672 524.613 cv
366.672 520.352 li
366.672 520.059 366.645 519.789 366.594 519.543 cv
366.539 519.301 366.457 519.09 366.344 518.91 cv
366.23 518.734 366.086 518.598 365.91 518.504 cv
365.73 518.41 365.52 518.363 365.285 518.363 cv
364.988 518.363 364.691 518.48 364.395 518.707 cv
364.09 518.941 363.762 519.273 363.406 519.711 cv
363.406 524.613 li
363.402 524.66 363.391 524.695 363.375 524.719 cv
363.352 524.75 363.32 524.773 363.273 524.793 cv
363.223 524.812 363.156 524.824 363.074 524.84 cv
362.988 524.848 362.883 524.855 362.762 524.855 cv
362.641 524.855 362.539 524.848 362.453 524.84 cv
362.367 524.824 362.297 524.812 362.25 524.793 cv
362.195 524.773 362.164 524.75 362.148 524.719 cv
362.129 524.695 362.117 524.66 362.121 524.613 cv
362.121 520.352 li
362.117 520.059 362.09 519.789 362.035 519.543 cv
361.977 519.301 361.891 519.09 361.777 518.91 cv
361.664 518.734 361.52 518.598 361.348 518.504 cv
361.168 518.41 360.961 518.363 360.727 518.363 cv
360.426 518.363 360.129 518.48 359.828 518.707 cv
359.527 518.941 359.199 519.273 358.848 519.711 cv
358.848 524.613 li
358.844 524.66 358.832 524.695 358.816 524.719 cv
358.793 524.75 358.762 524.773 358.715 524.793 cv
358.668 524.812 358.602 524.824 358.523 524.84 cv
358.438 524.848 358.332 524.855 358.203 524.855 cv
358.074 524.855 357.969 524.848 357.891 524.84 cv
357.805 524.824 357.738 524.812 357.691 524.793 cv
357.637 524.773 357.605 524.75 357.59 524.719 cv
357.57 524.695 357.559 524.66 357.563 524.613 cv
357.563 517.602 li
357.559 517.562 357.566 517.527 357.586 517.496 cv
357.598 517.469 357.629 517.445 357.68 517.418 cv
357.723 517.398 357.785 517.383 357.859 517.371 cv
357.93 517.367 358.023 517.363 358.148 517.359 cv
358.258 517.363 358.355 517.367 358.434 517.371 cv
358.508 517.383 358.566 517.398 358.609 517.418 cv
358.648 517.445 358.676 517.469 358.695 517.496 cv
358.711 517.527 358.719 517.562 358.723 517.602 cv
358.723 518.527 li
359.113 518.086 359.496 517.766 359.871 517.559 cv
360.238 517.355 360.617 517.25 361 517.25 cv
361.289 517.25 361.547 517.285 361.781 517.352 cv
362.008 517.422 362.215 517.516 362.395 517.637 cv
362.57 517.758 362.719 517.902 362.848 518.07 cv
362.969 518.242 363.074 518.434 363.16 518.637 cv
363.391 518.387 363.613 518.172 363.824 517.992 cv
364.035 517.82 364.238 517.676 364.434 517.562 cv
364.629 517.457 364.816 517.379 365 517.324 cv
365.184 517.277 365.371 517.25 365.559 517.25 cv
366.012 517.25 366.391 517.332 366.695 517.488 cv
367 517.652 367.246 517.863 367.441 518.125 cv
367.629 518.391 367.766 518.699 367.848 519.055 cv
367.926 519.41 367.965 519.785 367.969 520.18 cv
cp
f
375.598 524.621 mo
375.594 524.684 375.574 524.73 375.535 524.762 cv
375.492 524.793 375.434 524.816 375.363 524.832 cv
375.285 524.848 375.18 524.855 375.043 524.855 cv
374.906 524.855 374.797 524.848 374.719 524.832 cv
374.633 524.816 374.574 524.793 374.543 524.762 cv
374.504 524.73 374.488 524.684 374.492 524.621 cv
374.492 523.922 li
374.184 524.25 373.84 524.504 373.465 524.684 cv
373.086 524.867 372.688 524.953 372.27 524.957 cv
371.895 524.953 371.563 524.906 371.266 524.812 cv
370.969 524.715 370.715 524.578 370.504 524.395 cv
370.293 524.215 370.129 523.992 370.012 523.727 cv
369.895 523.465 369.836 523.164 369.84 522.82 cv
369.836 522.43 369.914 522.086 370.078 521.793 cv
370.234 521.504 370.469 521.262 370.773 521.07 cv
371.074 520.879 371.441 520.734 371.879 520.637 cv
372.313 520.543 372.805 520.496 373.352 520.492 cv
374.32 520.492 li
374.32 519.945 li
374.316 519.676 374.289 519.437 374.234 519.23 cv
374.176 519.023 374.082 518.852 373.957 518.711 cv
373.824 518.574 373.66 518.469 373.461 518.398 cv
373.254 518.328 373.004 518.293 372.715 518.293 cv
372.395 518.293 372.109 518.332 371.859 518.406 cv
371.602 518.484 371.383 518.566 371.195 518.656 cv
371.008 518.75 370.848 518.836 370.723 518.906 cv
370.59 518.984 370.496 519.02 370.438 519.02 cv
370.395 519.02 370.359 519.012 370.328 518.988 cv
370.297 518.973 370.27 518.941 370.246 518.895 cv
370.223 518.855 370.203 518.801 370.195 518.734 cv
370.18 518.672 370.176 518.602 370.18 518.52 cv
370.176 518.395 370.184 518.289 370.207 518.211 cv
370.223 518.137 370.27 518.066 370.34 517.996 cv
370.41 517.93 370.531 517.852 370.703 517.762 cv
370.875 517.672 371.07 517.59 371.293 517.512 cv
371.516 517.441 371.762 517.379 372.027 517.324 cv
372.293 517.277 372.559 517.25 372.832 517.25 cv
373.332 517.25 373.762 517.309 374.113 517.422 cv
374.465 517.539 374.75 517.707 374.973 517.926 cv
375.188 518.148 375.348 518.422 375.449 518.746 cv
375.547 519.078 375.594 519.461 375.598 519.891 cv
cp
374.32 521.418 mo
373.219 521.418 li
372.863 521.422 372.559 521.453 372.301 521.508 cv
372.039 521.57 371.824 521.656 371.652 521.773 cv
371.48 521.891 371.355 522.031 371.277 522.195 cv
371.195 522.359 371.152 522.547 371.156 522.758 cv
371.152 523.125 371.27 523.418 371.5 523.629 cv
371.73 523.848 372.055 523.953 372.473 523.953 cv
372.809 523.953 373.121 523.867 373.41 523.695 cv
373.699 523.523 374 523.262 374.32 522.906 cv
cp
f
383.816 517.918 mo
383.813 518.102 383.789 518.234 383.742 518.312 cv
383.691 518.395 383.629 518.434 383.555 518.434 cv
382.547 518.434 li
382.727 518.621 382.855 518.828 382.93 519.055 cv
383 519.281 383.035 519.516 383.039 519.758 cv
383.035 520.164 382.969 520.523 382.844 520.836 cv
382.711 521.148 382.527 521.414 382.285 521.625 cv
382.043 521.844 381.754 522.008 381.426 522.121 cv
381.09 522.238 380.723 522.297 380.32 522.293 cv
380.031 522.297 379.758 522.258 379.504 522.18 cv
379.242 522.105 379.047 522.012 378.91 521.895 cv
378.816 521.992 378.738 522.098 378.68 522.215 cv
378.617 522.336 378.586 522.473 378.59 522.625 cv
378.586 522.809 378.672 522.961 378.844 523.078 cv
379.012 523.203 379.234 523.266 379.516 523.273 cv
381.348 523.352 li
381.695 523.363 382.012 523.41 382.305 523.496 cv
382.594 523.582 382.848 523.707 383.063 523.863 cv
383.273 524.023 383.441 524.215 383.563 524.445 cv
383.68 524.68 383.738 524.949 383.742 525.254 cv
383.738 525.574 383.672 525.879 383.539 526.172 cv
383.402 526.461 383.195 526.715 382.918 526.937 cv
382.637 527.156 382.281 527.332 381.852 527.461 cv
381.422 527.586 380.914 527.648 380.328 527.652 cv
379.758 527.648 379.273 527.602 378.879 527.508 cv
378.48 527.41 378.156 527.277 377.902 527.113 cv
377.648 526.945 377.465 526.75 377.352 526.52 cv
377.234 526.285 377.176 526.031 377.18 525.766 cv
377.176 525.594 377.195 525.43 377.242 525.27 cv
377.281 525.105 377.344 524.953 377.43 524.809 cv
377.512 524.664 377.621 524.527 377.75 524.391 cv
377.875 524.262 378.02 524.129 378.191 524 cv
377.934 523.871 377.746 523.707 377.625 523.508 cv
377.504 523.312 377.445 523.102 377.445 522.867 cv
377.445 522.555 377.508 522.27 377.637 522.02 cv
377.766 521.77 377.926 521.547 378.121 521.348 cv
377.957 521.156 377.832 520.941 377.738 520.699 cv
377.645 520.461 377.598 520.168 377.598 519.82 cv
377.598 519.426 377.664 519.066 377.801 518.746 cv
377.934 518.43 378.121 518.164 378.363 517.945 cv
378.602 517.73 378.887 517.562 379.223 517.441 cv
379.555 517.328 379.922 517.27 380.32 517.266 cv
380.531 517.27 380.73 517.281 380.914 517.301 cv
381.098 517.328 381.27 517.359 381.434 517.398 cv
383.555 517.398 li
383.641 517.402 383.707 517.445 383.75 517.527 cv
383.793 517.617 383.813 517.746 383.816 517.918 cv
cp
381.809 519.766 mo
381.805 519.293 381.672 518.922 381.414 518.648 cv
381.148 518.383 380.777 518.246 380.297 518.246 cv
380.043 518.246 379.824 518.289 379.645 518.371 cv
379.457 518.457 379.305 518.57 379.184 518.715 cv
379.063 518.863 378.973 519.031 378.914 519.219 cv
378.852 519.406 378.82 519.605 378.824 519.812 cv
378.82 520.277 378.953 520.641 379.215 520.906 cv
379.477 521.172 379.844 521.305 380.32 521.301 cv
380.57 521.305 380.789 521.266 380.98 521.18 cv
381.164 521.102 381.32 520.988 381.445 520.848 cv
381.566 520.707 381.656 520.543 381.719 520.352 cv
381.773 520.168 381.805 519.973 381.809 519.766 cv
cp
382.453 525.324 mo
382.449 525.02 382.324 524.789 382.082 524.625 cv
381.832 524.465 381.5 524.375 381.082 524.363 cv
379.266 524.301 li
379.098 524.434 378.961 524.559 378.859 524.672 cv
378.75 524.789 378.668 524.898 378.605 525.008 cv
378.543 525.113 378.5 525.219 378.477 525.324 cv
378.453 525.426 378.441 525.531 378.441 525.641 cv
378.441 525.977 378.609 526.23 378.953 526.41 cv
379.293 526.582 379.773 526.672 380.391 526.672 cv
380.777 526.672 381.102 526.633 381.367 526.559 cv
381.625 526.48 381.836 526.379 382 526.258 cv
382.156 526.129 382.273 525.988 382.348 525.828 cv
382.414 525.668 382.449 525.5 382.453 525.324 cv
cp
f
391.379 520.805 mo
391.375 521.008 391.324 521.148 391.227 521.234 cv
391.121 521.32 391.004 521.363 390.879 521.363 cv
386.262 521.363 li
386.258 521.754 386.297 522.105 386.379 522.418 cv
386.453 522.73 386.586 523 386.77 523.219 cv
386.949 523.445 387.184 523.617 387.48 523.734 cv
387.77 523.859 388.129 523.918 388.555 523.914 cv
388.887 523.918 389.184 523.891 389.445 523.832 cv
389.707 523.781 389.934 523.719 390.125 523.648 cv
390.313 523.582 390.469 523.523 390.594 523.465 cv
390.715 523.414 390.809 523.387 390.871 523.383 cv
390.906 523.387 390.938 523.395 390.969 523.41 cv
390.996 523.43 391.02 523.457 391.039 523.492 cv
391.051 523.531 391.063 523.582 391.074 523.645 cv
391.078 523.711 391.082 523.789 391.086 523.883 cv
391.082 523.953 391.078 524.012 391.078 524.059 cv
391.07 524.105 391.066 524.148 391.059 524.187 cv
391.051 524.227 391.035 524.262 391.02 524.293 cv
390.996 524.324 390.973 524.355 390.949 524.383 cv
390.918 524.414 390.836 524.461 390.695 524.523 cv
390.555 524.59 390.371 524.652 390.148 524.715 cv
389.922 524.777 389.664 524.832 389.371 524.883 cv
389.078 524.93 388.766 524.953 388.434 524.957 cv
387.855 524.953 387.348 524.875 386.918 524.715 cv
386.48 524.555 386.117 524.316 385.824 524 cv
385.523 523.684 385.301 523.289 385.152 522.809 cv
385.004 522.332 384.93 521.773 384.93 521.137 cv
384.93 520.539 385.004 520 385.16 519.516 cv
385.313 519.039 385.539 518.629 385.836 518.293 cv
386.129 517.957 386.484 517.699 386.898 517.52 cv
387.313 517.34 387.777 517.25 388.293 517.25 cv
388.844 517.25 389.313 517.34 389.699 517.516 cv
390.086 517.695 390.402 517.934 390.656 518.23 cv
390.902 518.531 391.086 518.883 391.203 519.281 cv
391.316 519.687 391.375 520.117 391.379 520.57 cv
cp
390.086 520.422 mo
390.102 519.746 389.949 519.215 389.633 518.832 cv
389.316 518.449 388.848 518.258 388.23 518.254 cv
387.906 518.258 387.625 518.316 387.387 518.434 cv
387.145 518.555 386.945 518.715 386.785 518.91 cv
386.621 519.109 386.496 519.34 386.41 519.602 cv
386.32 519.863 386.27 520.137 386.262 520.422 cv
cp
f
397.746 522.703 mo
397.742 523.066 397.676 523.387 397.547 523.664 cv
397.414 523.945 397.227 524.18 396.984 524.371 cv
396.738 524.566 396.445 524.711 396.109 524.809 cv
395.77 524.906 395.398 524.953 394.996 524.957 cv
394.742 524.953 394.504 524.934 394.281 524.898 cv
394.055 524.855 393.855 524.809 393.676 524.75 cv
393.496 524.691 393.344 524.629 393.219 524.562 cv
393.094 524.5 393 524.441 392.945 524.387 cv
392.887 524.336 392.848 524.266 392.824 524.168 cv
392.797 524.078 392.785 523.949 392.785 523.789 cv
392.785 523.691 392.789 523.609 392.801 523.539 cv
392.809 523.473 392.82 523.418 392.84 523.375 cv
392.852 523.336 392.875 523.305 392.902 523.285 cv
392.93 523.27 392.961 523.262 393 523.258 cv
393.055 523.262 393.141 523.297 393.254 523.363 cv
393.363 523.437 393.5 523.516 393.668 523.594 cv
393.828 523.68 394.02 523.754 394.246 523.824 cv
394.465 523.895 394.723 523.93 395.02 523.93 cv
395.234 523.93 395.434 523.906 395.613 523.859 cv
395.789 523.812 395.941 523.746 396.07 523.652 cv
396.199 523.566 396.301 523.449 396.371 523.305 cv
396.441 523.168 396.477 523 396.477 522.805 cv
396.477 522.609 396.426 522.445 396.324 522.309 cv
396.223 522.176 396.086 522.055 395.922 521.949 cv
395.754 521.848 395.57 521.758 395.363 521.672 cv
395.152 521.594 394.938 521.508 394.719 521.418 cv
394.5 521.332 394.285 521.23 394.074 521.117 cv
393.863 521.008 393.672 520.875 393.508 520.711 cv
393.336 520.555 393.203 520.359 393.105 520.133 cv
393 519.91 392.949 519.645 392.953 519.332 cv
392.949 519.059 393.004 518.793 393.113 518.539 cv
393.219 518.289 393.379 518.07 393.594 517.879 cv
393.805 517.691 394.07 517.539 394.391 517.422 cv
394.711 517.309 395.082 517.25 395.512 517.25 cv
395.695 517.25 395.883 517.266 396.07 517.297 cv
396.254 517.328 396.422 517.367 396.578 517.414 cv
396.727 517.461 396.855 517.512 396.965 517.566 cv
397.066 517.621 397.148 517.672 397.207 517.711 cv
397.258 517.758 397.293 517.793 397.316 517.82 cv
397.332 517.852 397.348 517.887 397.355 517.922 cv
397.363 517.965 397.371 518.012 397.379 518.066 cv
397.387 518.125 397.391 518.195 397.391 518.277 cv
397.391 518.367 397.387 518.445 397.379 518.508 cv
397.371 518.578 397.355 518.629 397.34 518.668 cv
397.316 518.711 397.297 518.742 397.273 518.758 cv
397.246 518.777 397.215 518.785 397.188 518.785 cv
397.137 518.785 397.07 518.758 396.984 518.699 cv
396.895 518.645 396.781 518.582 396.641 518.516 cv
396.5 518.453 396.332 518.395 396.145 518.332 cv
395.953 518.277 395.738 518.246 395.496 518.246 cv
395.273 518.246 395.082 518.273 394.918 518.32 cv
394.75 518.375 394.613 518.445 394.508 518.531 cv
394.402 518.625 394.32 518.73 394.27 518.855 cv
394.211 518.98 394.184 519.117 394.188 519.262 cv
394.184 519.465 394.234 519.633 394.34 519.77 cv
394.441 519.91 394.578 520.031 394.746 520.133 cv
394.91 520.238 395.102 520.332 395.316 520.414 cv
395.527 520.5 395.742 520.586 395.965 520.672 cv
396.184 520.762 396.402 520.863 396.621 520.969 cv
396.836 521.078 397.027 521.207 397.195 521.363 cv
397.359 521.52 397.492 521.707 397.594 521.926 cv
397.691 522.145 397.742 522.406 397.746 522.703 cv
cp
f
151.266 15.93 mo
151.262 16.082 151.258 16.207 151.246 16.305 cv
151.23 16.41 151.211 16.492 151.188 16.551 cv
151.164 16.617 151.133 16.664 151.094 16.687 cv
151.055 16.719 151.012 16.73 150.965 16.73 cv
145.898 16.73 li
145.723 16.73 145.578 16.68 145.465 16.578 cv
145.344 16.477 145.285 16.312 145.289 16.082 cv
145.289 7.29303 li
145.285 7.06598 145.344 6.90198 145.465 6.797 cv
145.578 6.69897 145.723 6.64801 145.898 6.64502 cv
150.934 6.64502 li
150.977 6.64801 151.02 6.65997 151.059 6.68402 cv
151.094 6.711 151.125 6.758 151.152 6.82001 cv
151.176 6.89099 151.191 6.97302 151.207 7.07001 cv
151.215 7.17603 151.223 7.30499 151.227 7.45697 cv
151.223 7.60498 151.215 7.72998 151.207 7.828 cv
151.191 7.93402 151.176 8.01599 151.152 8.07397 cv
151.125 8.13702 151.094 8.17999 151.059 8.20697 cv
151.02 8.23798 150.977 8.25403 150.934 8.25 cv
147.332 8.25 li
147.332 10.715 li
150.379 10.715 li
150.426 10.719 150.469 10.734 150.508 10.758 cv
150.547 10.789 150.578 10.832 150.605 10.891 cv
150.629 10.953 150.648 11.035 150.664 11.133 cv
150.676 11.234 150.684 11.355 150.684 11.5 cv
150.684 11.652 150.676 11.777 150.664 11.875 cv
150.648 11.977 150.629 12.055 150.605 12.113 cv
150.578 12.176 150.547 12.219 150.508 12.242 cv
150.469 12.27 150.426 12.285 150.379 12.281 cv
147.332 12.281 li
147.332 15.125 li
150.965 15.125 li
151.012 15.125 151.055 15.141 151.094 15.168 cv
151.133 15.199 151.164 15.246 151.188 15.305 cv
151.211 15.371 151.23 15.453 151.246 15.551 cv
151.258 15.656 151.262 15.781 151.266 15.93 cv
cp
f
159.598 16.465 mo
159.594 16.52 159.578 16.562 159.551 16.602 cv
159.516 16.641 159.465 16.676 159.395 16.699 cv
159.32 16.727 159.219 16.742 159.094 16.758 cv
158.965 16.77 158.809 16.777 158.625 16.777 cv
158.43 16.777 158.27 16.77 158.145 16.758 cv
158.016 16.742 157.914 16.727 157.844 16.699 cv
157.766 16.676 157.715 16.641 157.688 16.602 cv
157.652 16.562 157.637 16.52 157.641 16.465 cv
157.641 12.5 li
157.637 12.164 157.613 11.898 157.566 11.703 cv
157.516 11.512 157.441 11.348 157.352 11.211 cv
157.258 11.074 157.141 10.969 156.992 10.891 cv
156.844 10.816 156.668 10.777 156.473 10.777 cv
156.219 10.777 155.969 10.871 155.715 11.051 cv
155.461 11.234 155.195 11.496 154.922 11.844 cv
154.922 16.465 li
154.918 16.52 154.902 16.562 154.875 16.602 cv
154.84 16.641 154.785 16.676 154.715 16.699 cv
154.637 16.727 154.539 16.742 154.414 16.758 cv
154.289 16.77 154.129 16.777 153.941 16.777 cv
153.746 16.777 153.59 16.77 153.465 16.758 cv
153.34 16.742 153.238 16.727 153.164 16.699 cv
153.086 16.676 153.031 16.641 153.004 16.602 cv
152.969 16.562 152.953 16.52 152.957 16.465 cv
152.957 9.51599 li
152.953 9.46899 152.969 9.422 152.996 9.37903 cv
153.02 9.34399 153.066 9.31201 153.137 9.28101 cv
153.203 9.258 153.289 9.23798 153.398 9.22302 cv
153.504 9.21503 153.637 9.20697 153.801 9.203 cv
153.965 9.20697 154.102 9.21503 154.211 9.22302 cv
154.316 9.23798 154.402 9.258 154.465 9.28101 cv
154.523 9.31201 154.566 9.34399 154.594 9.37903 cv
154.617 9.422 154.629 9.46899 154.633 9.51599 cv
154.633 10.316 li
155.016 9.90601 155.406 9.59399 155.805 9.383 cv
156.199 9.17603 156.617 9.07397 157.051 9.07001 cv
157.52 9.07397 157.918 9.15198 158.246 9.30499 cv
158.57 9.46503 158.832 9.67603 159.031 9.94098 cv
159.23 10.211 159.375 10.523 159.465 10.879 cv
159.551 11.238 159.594 11.668 159.598 12.172 cv
cp
f
167.953 12.789 mo
167.949 13.027 167.898 13.203 167.793 13.316 cv
167.684 13.434 167.535 13.492 167.355 13.488 cv
163.121 13.488 li
163.117 13.789 163.152 14.059 163.227 14.297 cv
163.293 14.539 163.406 14.742 163.563 14.91 cv
163.715 15.082 163.91 15.211 164.152 15.297 cv
164.391 15.387 164.68 15.43 165.023 15.43 cv
165.363 15.43 165.664 15.406 165.926 15.355 cv
166.184 15.309 166.41 15.254 166.602 15.191 cv
166.789 15.133 166.945 15.078 167.074 15.027 cv
167.195 14.98 167.297 14.957 167.379 14.953 cv
167.422 14.957 167.461 14.965 167.496 14.98 cv
167.523 15 167.551 15.031 167.57 15.078 cv
167.59 15.125 167.602 15.191 167.613 15.277 cv
167.617 15.363 167.621 15.473 167.625 15.602 cv
167.621 15.719 167.621 15.816 167.617 15.895 cv
167.609 15.977 167.602 16.043 167.594 16.098 cv
167.582 16.156 167.566 16.207 167.547 16.242 cv
167.527 16.285 167.5 16.32 167.469 16.355 cv
167.434 16.395 167.34 16.445 167.191 16.504 cv
167.035 16.57 166.844 16.633 166.613 16.687 cv
166.375 16.75 166.105 16.797 165.809 16.844 cv
165.504 16.883 165.184 16.906 164.844 16.91 cv
164.223 16.906 163.68 16.832 163.219 16.676 cv
162.75 16.523 162.363 16.285 162.055 15.969 cv
161.738 15.652 161.504 15.254 161.355 14.77 cv
161.199 14.289 161.125 13.723 161.129 13.066 cv
161.125 12.453 161.203 11.895 161.367 11.398 cv
161.523 10.902 161.758 10.484 162.07 10.137 cv
162.375 9.79303 162.75 9.52698 163.188 9.34399 cv
163.625 9.164 164.117 9.07397 164.672 9.07001 cv
165.25 9.07397 165.75 9.15997 166.164 9.328 cv
166.578 9.50403 166.914 9.742 167.18 10.043 cv
167.441 10.348 167.637 10.707 167.766 11.121 cv
167.887 11.539 167.949 11.988 167.953 12.477 cv
cp
166.051 12.227 mo
166.063 11.676 165.953 11.242 165.719 10.93 cv
165.484 10.617 165.117 10.461 164.625 10.457 cv
164.375 10.461 164.16 10.508 163.977 10.598 cv
163.789 10.695 163.637 10.82 163.516 10.977 cv
163.391 11.137 163.297 11.324 163.234 11.539 cv
163.168 11.754 163.129 11.984 163.121 12.227 cv
cp
f
174.027 10.16 mo
174.027 10.352 174.02 10.504 174.012 10.621 cv
173.996 10.742 173.98 10.836 173.965 10.902 cv
173.941 10.973 173.914 11.02 173.883 11.043 cv
173.844 11.07 173.801 11.082 173.754 11.082 cv
173.707 11.082 173.66 11.074 173.613 11.055 cv
173.559 11.039 173.5 11.02 173.438 10.996 cv
173.367 10.977 173.297 10.957 173.223 10.937 cv
173.141 10.922 173.055 10.914 172.965 10.91 cv
172.852 10.914 172.742 10.934 172.637 10.977 cv
172.527 11.023 172.414 11.094 172.301 11.184 cv
172.18 11.277 172.059 11.402 171.934 11.555 cv
171.805 11.715 171.668 11.906 171.523 12.133 cv
171.523 16.465 li
171.52 16.52 171.504 16.562 171.477 16.602 cv
171.441 16.641 171.387 16.676 171.316 16.699 cv
171.238 16.727 171.141 16.742 171.016 16.758 cv
170.891 16.77 170.73 16.777 170.543 16.777 cv
170.348 16.777 170.191 16.77 170.066 16.758 cv
169.941 16.742 169.84 16.727 169.766 16.699 cv
169.688 16.676 169.633 16.641 169.605 16.602 cv
169.57 16.562 169.555 16.52 169.559 16.465 cv
169.559 9.51599 li
169.555 9.46899 169.57 9.422 169.598 9.37903 cv
169.621 9.34399 169.668 9.31201 169.738 9.28101 cv
169.805 9.258 169.891 9.23798 170 9.22302 cv
170.105 9.21503 170.238 9.20697 170.402 9.203 cv
170.566 9.20697 170.703 9.21503 170.813 9.22302 cv
170.918 9.23798 171.004 9.258 171.066 9.28101 cv
171.125 9.31201 171.168 9.34399 171.195 9.37903 cv
171.219 9.422 171.23 9.46899 171.234 9.51599 cv
171.234 10.379 li
171.414 10.121 171.586 9.90997 171.75 9.73798 cv
171.906 9.57397 172.063 9.43701 172.211 9.336 cv
172.355 9.23798 172.5 9.172 172.645 9.12903 cv
172.789 9.09399 172.934 9.07397 173.082 9.07001 cv
173.148 9.07397 173.223 9.078 173.301 9.08197 cv
173.379 9.09399 173.457 9.10498 173.543 9.12097 cv
173.621 9.14099 173.695 9.15997 173.762 9.18402 cv
173.82 9.20697 173.867 9.23401 173.898 9.258 cv
173.926 9.289 173.945 9.31598 173.961 9.34399 cv
173.973 9.37903 173.984 9.422 173.996 9.47302 cv
174.004 9.53101 174.012 9.61298 174.02 9.71899 cv
174.023 9.828 174.027 9.97699 174.027 10.16 cv
cp
f
181.203 9.99597 mo
181.199 10.25 181.172 10.434 181.117 10.551 cv
181.059 10.672 180.988 10.73 180.91 10.73 cv
180.09 10.73 li
180.203 10.855 180.285 11 180.336 11.156 cv
180.383 11.316 180.406 11.48 180.41 11.648 cv
180.406 12.059 180.34 12.418 180.207 12.73 cv
180.07 13.047 179.875 13.312 179.625 13.523 cv
179.371 13.742 179.07 13.906 178.715 14.016 cv
178.355 14.133 177.957 14.187 177.527 14.184 cv
177.301 14.187 177.09 14.16 176.887 14.102 cv
176.684 14.051 176.527 13.988 176.418 13.91 cv
176.355 13.98 176.297 14.059 176.25 14.152 cv
176.199 14.246 176.176 14.352 176.18 14.461 cv
176.176 14.617 176.242 14.738 176.375 14.832 cv
176.504 14.93 176.691 14.984 176.934 14.992 cv
178.625 15.055 li
179.02 15.07 179.371 15.129 179.68 15.223 cv
179.988 15.324 180.25 15.457 180.461 15.629 cv
180.672 15.805 180.832 16.016 180.941 16.258 cv
181.051 16.504 181.105 16.777 181.109 17.09 cv
181.105 17.426 181.031 17.75 180.883 18.059 cv
180.734 18.359 180.508 18.621 180.207 18.848 cv
179.902 19.066 179.523 19.246 179.07 19.379 cv
178.613 19.508 178.082 19.57 177.48 19.574 cv
176.883 19.57 176.379 19.523 175.961 19.434 cv
175.543 19.336 175.199 19.207 174.934 19.043 cv
174.664 18.875 174.469 18.676 174.352 18.449 cv
174.227 18.215 174.168 17.961 174.168 17.687 cv
174.168 17.516 174.188 17.355 174.234 17.199 cv
174.273 17.043 174.34 16.891 174.43 16.75 cv
174.512 16.605 174.617 16.473 174.742 16.34 cv
174.867 16.211 175.008 16.086 175.172 15.965 cv
174.945 15.852 174.773 15.691 174.652 15.48 cv
174.531 15.277 174.473 15.051 174.473 14.805 cv
174.473 14.504 174.539 14.227 174.68 13.969 cv
174.816 13.719 175 13.488 175.227 13.285 cv
175.043 13.105 174.898 12.891 174.789 12.633 cv
174.68 12.383 174.625 12.062 174.629 11.68 cv
174.625 11.277 174.695 10.918 174.84 10.594 cv
174.98 10.277 175.18 10.008 175.438 9.78497 cv
175.691 9.56598 175.996 9.39502 176.348 9.27698 cv
176.699 9.15997 177.09 9.10199 177.52 9.10199 cv
177.738 9.10199 177.945 9.117 178.145 9.14099 cv
178.344 9.172 178.531 9.20697 178.703 9.25 cv
180.91 9.25 li
180.992 9.25403 181.063 9.31201 181.121 9.422 cv
181.172 9.539 181.199 9.72998 181.203 9.99597 cv
cp
178.688 11.641 mo
178.684 11.27 178.582 10.98 178.375 10.77 cv
178.164 10.566 177.871 10.461 177.496 10.457 cv
177.301 10.461 177.129 10.492 176.988 10.555 cv
176.84 10.621 176.719 10.711 176.625 10.82 cv
176.523 10.934 176.453 11.062 176.41 11.211 cv
176.359 11.359 176.336 11.516 176.34 11.672 cv
176.336 12.031 176.441 12.309 176.652 12.512 cv
176.859 12.719 177.148 12.824 177.52 12.82 cv
177.715 12.824 177.883 12.793 178.031 12.727 cv
178.172 12.668 178.293 12.582 178.395 12.469 cv
178.488 12.363 178.563 12.234 178.613 12.09 cv
178.66 11.949 178.684 11.801 178.688 11.641 cv
cp
179.148 17.191 mo
179.148 16.953 179.055 16.777 178.867 16.652 cv
178.68 16.531 178.422 16.461 178.094 16.449 cv
176.699 16.41 li
176.563 16.512 176.453 16.605 176.375 16.695 cv
176.293 16.785 176.23 16.871 176.184 16.957 cv
176.133 17.039 176.098 17.121 176.086 17.199 cv
176.066 17.277 176.059 17.355 176.063 17.441 cv
176.059 17.695 176.191 17.895 176.453 18.031 cv
176.715 18.164 177.086 18.23 177.566 18.234 cv
177.859 18.23 178.105 18.199 178.313 18.145 cv
178.512 18.082 178.676 18.004 178.805 17.906 cv
178.926 17.805 179.016 17.695 179.07 17.574 cv
179.121 17.453 179.148 17.324 179.148 17.191 cv
cp
f
186.531 16.73 mo
185.688 19.191 li
185.637 19.32 185.512 19.414 185.305 19.473 cv
185.098 19.527 184.793 19.555 184.395 19.559 cv
184.184 19.555 184.016 19.547 183.895 19.531 cv
183.77 19.512 183.68 19.48 183.617 19.441 cv
183.555 19.398 183.52 19.348 183.516 19.285 cv
183.508 19.223 183.523 19.148 183.563 19.062 cv
184.488 16.73 li
184.418 16.699 184.355 16.652 184.305 16.586 cv
184.246 16.523 184.207 16.453 184.184 16.379 cv
181.793 9.98798 li
181.723 9.80902 181.688 9.672 181.691 9.57397 cv
181.688 9.47998 181.719 9.40198 181.785 9.34802 cv
181.844 9.29303 181.949 9.258 182.098 9.23401 cv
182.242 9.21899 182.438 9.20697 182.688 9.203 cv
182.906 9.20697 183.086 9.211 183.219 9.21503 cv
183.348 9.22699 183.449 9.24597 183.523 9.27301 cv
183.594 9.30902 183.648 9.35498 183.688 9.41803 cv
183.723 9.48401 183.758 9.578 183.797 9.69501 cv
185.43 14.348 li
185.453 14.348 li
186.953 9.60199 li
186.977 9.46899 187.016 9.37903 187.07 9.33197 cv
187.117 9.289 187.199 9.258 187.316 9.23401 cv
187.426 9.21899 187.629 9.20697 187.918 9.203 cv
188.141 9.20697 188.324 9.21899 188.473 9.23401 cv
188.617 9.258 188.727 9.297 188.801 9.35199 cv
188.867 9.414 188.902 9.48798 188.906 9.58197 cv
188.902 9.67603 188.883 9.789 188.844 9.91803 cv
cp
f
200.973 15.203 mo
200.973 15.336 200.969 15.445 200.961 15.535 cv
200.953 15.629 200.941 15.707 200.926 15.77 cv
200.91 15.836 200.887 15.895 200.863 15.937 cv
200.832 15.984 200.793 16.035 200.738 16.094 cv
200.68 16.156 200.566 16.234 200.406 16.324 cv
200.238 16.422 200.039 16.512 199.805 16.594 cv
199.566 16.684 199.297 16.75 198.996 16.809 cv
198.688 16.863 198.359 16.895 198.012 16.895 cv
197.316 16.895 196.691 16.789 196.137 16.574 cv
195.578 16.363 195.105 16.047 194.719 15.621 cv
194.328 15.199 194.031 14.668 193.824 14.035 cv
193.617 13.402 193.512 12.664 193.516 11.82 cv
193.512 10.965 193.625 10.207 193.855 9.539 cv
194.082 8.875 194.402 8.31598 194.813 7.86298 cv
195.223 7.414 195.715 7.07001 196.289 6.836 cv
196.863 6.60498 197.496 6.48798 198.191 6.48401 cv
198.465 6.48798 198.734 6.51202 199 6.55499 cv
199.258 6.60199 199.5 6.65997 199.719 6.73401 cv
199.938 6.81201 200.137 6.90198 200.316 6.99597 cv
200.492 7.09802 200.613 7.17999 200.688 7.25 cv
200.754 7.32001 200.805 7.37903 200.832 7.42603 cv
200.855 7.47302 200.875 7.53497 200.895 7.60498 cv
200.906 7.68402 200.918 7.77002 200.93 7.86298 cv
200.934 7.96503 200.938 8.086 200.941 8.22699 cv
200.938 8.38702 200.934 8.52002 200.926 8.625 cv
200.914 8.73798 200.895 8.82397 200.871 8.89099 cv
200.844 8.961 200.813 9.01202 200.777 9.039 cv
200.738 9.07397 200.695 9.09003 200.652 9.086 cv
200.57 9.09003 200.473 9.04303 200.355 8.94897 cv
200.234 8.85901 200.078 8.758 199.891 8.64502 cv
199.699 8.53497 199.477 8.43402 199.215 8.34003 cv
198.949 8.25 198.637 8.20697 198.277 8.203 cv
197.875 8.20697 197.516 8.289 197.203 8.44897 cv
196.887 8.617 196.621 8.85199 196.402 9.15198 cv
196.18 9.461 196.012 9.828 195.898 10.258 cv
195.781 10.691 195.723 11.176 195.727 11.711 cv
195.723 12.309 195.785 12.824 195.91 13.254 cv
196.031 13.691 196.203 14.047 196.434 14.324 cv
196.656 14.605 196.93 14.812 197.25 14.949 cv
197.566 15.09 197.926 15.16 198.332 15.156 cv
198.691 15.16 199.008 15.117 199.273 15.027 cv
199.539 14.945 199.766 14.852 199.953 14.742 cv
200.141 14.641 200.297 14.547 200.422 14.465 cv
200.543 14.383 200.637 14.34 200.707 14.34 cv
200.758 14.34 200.801 14.352 200.832 14.371 cv
200.863 14.391 200.887 14.43 200.91 14.492 cv
200.926 14.555 200.941 14.645 200.957 14.754 cv
200.965 14.871 200.973 15.02 200.973 15.203 cv
cp
f
209.355 12.918 mo
209.352 13.516 209.273 14.059 209.121 14.543 cv
208.961 15.035 208.727 15.453 208.41 15.805 cv
208.094 16.156 207.695 16.43 207.219 16.621 cv
206.738 16.812 206.18 16.906 205.543 16.91 cv
204.922 16.906 204.383 16.824 203.93 16.652 cv
203.469 16.484 203.09 16.234 202.793 15.906 cv
202.488 15.582 202.266 15.18 202.121 14.699 cv
201.977 14.223 201.906 13.676 201.906 13.059 cv
201.906 12.469 201.984 11.93 202.141 11.437 cv
202.297 10.949 202.535 10.527 202.855 10.176 cv
203.172 9.828 203.566 9.55499 204.043 9.35901 cv
204.516 9.16803 205.074 9.07397 205.715 9.07001 cv
206.34 9.07397 206.879 9.15601 207.336 9.32397 cv
207.793 9.49597 208.172 9.74597 208.469 10.07 cv
208.766 10.398 208.988 10.801 209.137 11.277 cv
209.281 11.758 209.352 12.305 209.355 12.918 cv
cp
207.336 12.996 mo
207.332 12.66 207.305 12.344 207.254 12.051 cv
207.195 11.766 207.102 11.516 206.977 11.301 cv
206.844 11.09 206.672 10.922 206.461 10.801 cv
206.242 10.684 205.973 10.625 205.645 10.621 cv
205.355 10.625 205.102 10.68 204.883 10.781 cv
204.664 10.891 204.484 11.047 204.344 11.25 cv
204.203 11.457 204.098 11.703 204.027 11.988 cv
203.957 12.281 203.922 12.609 203.922 12.973 cv
203.922 13.32 203.949 13.637 204.008 13.922 cv
204.063 14.215 204.156 14.465 204.285 14.676 cv
204.41 14.891 204.582 15.055 204.805 15.168 cv
205.02 15.289 205.289 15.348 205.613 15.344 cv
205.906 15.348 206.164 15.293 206.387 15.184 cv
206.602 15.078 206.781 14.926 206.922 14.719 cv
207.063 14.52 207.164 14.273 207.234 13.984 cv
207.297 13.699 207.332 13.371 207.336 12.996 cv
cp
f
217.551 16.465 mo
217.547 16.52 217.531 16.562 217.504 16.602 cv
217.469 16.641 217.418 16.676 217.348 16.699 cv
217.273 16.727 217.172 16.742 217.047 16.758 cv
216.918 16.77 216.762 16.777 216.578 16.777 cv
216.383 16.777 216.223 16.77 216.098 16.758 cv
215.969 16.742 215.867 16.727 215.797 16.699 cv
215.719 16.676 215.668 16.641 215.641 16.602 cv
215.605 16.562 215.59 16.52 215.594 16.465 cv
215.594 12.5 li
215.59 12.164 215.566 11.898 215.52 11.703 cv
215.469 11.512 215.395 11.348 215.305 11.211 cv
215.211 11.074 215.094 10.969 214.945 10.891 cv
214.797 10.816 214.621 10.777 214.426 10.777 cv
214.172 10.777 213.922 10.871 213.668 11.051 cv
213.414 11.234 213.148 11.496 212.875 11.844 cv
212.875 16.465 li
212.871 16.52 212.855 16.562 212.828 16.602 cv
212.793 16.641 212.738 16.676 212.668 16.699 cv
212.59 16.727 212.492 16.742 212.367 16.758 cv
212.242 16.77 212.082 16.777 211.895 16.777 cv
211.699 16.777 211.543 16.77 211.418 16.758 cv
211.293 16.742 211.191 16.727 211.117 16.699 cv
211.039 16.676 210.984 16.641 210.957 16.602 cv
210.922 16.562 210.906 16.52 210.91 16.465 cv
210.91 9.51599 li
210.906 9.46899 210.922 9.422 210.949 9.37903 cv
210.973 9.34399 211.02 9.31201 211.09 9.28101 cv
211.156 9.258 211.242 9.23798 211.352 9.22302 cv
211.457 9.21503 211.59 9.20697 211.754 9.203 cv
211.918 9.20697 212.055 9.21503 212.164 9.22302 cv
212.27 9.23798 212.355 9.258 212.418 9.28101 cv
212.477 9.31201 212.52 9.34399 212.547 9.37903 cv
212.57 9.422 212.582 9.46899 212.586 9.51599 cv
212.586 10.316 li
212.969 9.90601 213.359 9.59399 213.758 9.383 cv
214.152 9.17603 214.57 9.07397 215.004 9.07001 cv
215.473 9.07397 215.871 9.15198 216.199 9.30499 cv
216.523 9.46503 216.785 9.67603 216.984 9.94098 cv
217.184 10.211 217.328 10.523 217.418 10.879 cv
217.504 11.238 217.547 11.668 217.551 12.172 cv
cp
f
224.375 14.5 mo
224.371 14.898 224.297 15.246 224.152 15.547 cv
224.004 15.848 223.797 16.102 223.527 16.301 cv
223.254 16.508 222.934 16.656 222.566 16.758 cv
222.199 16.855 221.797 16.906 221.367 16.91 cv
221.102 16.906 220.855 16.887 220.621 16.852 cv
220.387 16.809 220.176 16.762 219.988 16.703 cv
219.801 16.645 219.645 16.582 219.52 16.52 cv
219.395 16.457 219.301 16.398 219.246 16.344 cv
219.188 16.289 219.145 16.207 219.117 16.09 cv
219.082 15.977 219.066 15.801 219.07 15.57 cv
219.066 15.422 219.074 15.301 219.086 15.207 cv
219.094 15.117 219.109 15.047 219.133 14.988 cv
219.152 14.937 219.176 14.898 219.211 14.879 cv
219.238 14.863 219.277 14.855 219.324 14.852 cv
219.379 14.855 219.465 14.887 219.578 14.949 cv
219.688 15.016 219.824 15.09 219.996 15.164 cv
220.16 15.246 220.355 15.316 220.574 15.383 cv
220.793 15.453 221.043 15.488 221.328 15.484 cv
221.504 15.488 221.66 15.469 221.801 15.43 cv
221.934 15.395 222.055 15.344 222.16 15.273 cv
222.258 15.207 222.332 15.121 222.387 15.016 cv
222.434 14.914 222.461 14.793 222.465 14.656 cv
222.461 14.5 222.414 14.367 222.32 14.258 cv
222.227 14.148 222.098 14.051 221.941 13.965 cv
221.777 13.883 221.598 13.805 221.402 13.73 cv
221.199 13.66 220.996 13.582 220.785 13.488 cv
220.574 13.402 220.367 13.301 220.172 13.184 cv
219.969 13.074 219.789 12.934 219.633 12.766 cv
219.469 12.602 219.344 12.402 219.25 12.164 cv
219.156 11.934 219.109 11.652 219.109 11.32 cv
219.109 10.992 219.172 10.687 219.301 10.406 cv
219.43 10.133 219.617 9.89502 219.863 9.69501 cv
220.105 9.5 220.402 9.34802 220.754 9.23401 cv
221.102 9.12903 221.496 9.07397 221.938 9.07001 cv
222.152 9.07397 222.363 9.09003 222.57 9.117 cv
222.773 9.15198 222.961 9.19098 223.129 9.23401 cv
223.293 9.28497 223.434 9.336 223.551 9.38702 cv
223.664 9.44501 223.746 9.492 223.797 9.52698 cv
223.844 9.57001 223.879 9.60901 223.902 9.64502 cv
223.922 9.68701 223.934 9.73401 223.945 9.78497 cv
223.953 9.84003 223.965 9.90601 223.973 9.98401 cv
223.98 10.07 223.984 10.168 223.984 10.285 cv
223.984 10.426 223.98 10.543 223.973 10.629 cv
223.965 10.723 223.949 10.793 223.934 10.84 cv
223.914 10.895 223.891 10.93 223.863 10.945 cv
223.828 10.969 223.793 10.977 223.754 10.973 cv
223.703 10.977 223.629 10.949 223.535 10.891 cv
223.434 10.84 223.313 10.781 223.164 10.715 cv
223.016 10.656 222.844 10.598 222.648 10.539 cv
222.453 10.488 222.23 10.461 221.984 10.457 cv
221.805 10.461 221.652 10.48 221.523 10.512 cv
221.391 10.551 221.281 10.602 221.203 10.668 cv
221.117 10.738 221.055 10.816 221.016 10.906 cv
220.969 11 220.949 11.098 220.953 11.199 cv
220.949 11.359 221 11.496 221.102 11.602 cv
221.199 11.715 221.328 11.809 221.492 11.891 cv
221.652 11.977 221.836 12.055 222.043 12.125 cv
222.246 12.199 222.453 12.281 222.664 12.363 cv
222.871 12.453 223.078 12.551 223.289 12.664 cv
223.492 12.777 223.676 12.918 223.836 13.082 cv
223.996 13.25 224.125 13.449 224.227 13.68 cv
224.32 13.914 224.371 14.187 224.375 14.5 cv
cp
f
232.441 16.465 mo
232.438 16.52 232.426 16.562 232.402 16.602 cv
232.375 16.641 232.328 16.676 232.266 16.699 cv
232.199 16.727 232.113 16.742 232.008 16.758 cv
231.902 16.77 231.77 16.777 231.609 16.777 cv
231.434 16.777 231.293 16.77 231.191 16.758 cv
231.082 16.742 231 16.727 230.938 16.699 cv
230.875 16.676 230.828 16.641 230.805 16.602 cv
230.773 16.562 230.762 16.52 230.766 16.465 cv
230.766 15.664 li
230.379 16.078 229.988 16.391 229.594 16.598 cv
229.191 16.805 228.781 16.906 228.359 16.91 cv
227.879 16.906 227.477 16.832 227.152 16.676 cv
226.828 16.523 226.566 16.309 226.367 16.039 cv
226.164 15.77 226.02 15.457 225.938 15.098 cv
225.848 14.742 225.805 14.301 225.809 13.77 cv
225.809 9.51599 li
225.805 9.46899 225.82 9.422 225.852 9.37903 cv
225.879 9.34399 225.93 9.31201 226.008 9.28101 cv
226.082 9.258 226.184 9.23798 226.313 9.22302 cv
226.438 9.21503 226.594 9.20697 226.785 9.203 cv
226.973 9.20697 227.133 9.21503 227.258 9.22302 cv
227.383 9.23798 227.48 9.258 227.559 9.28101 cv
227.629 9.31201 227.684 9.34399 227.719 9.37903 cv
227.746 9.422 227.762 9.46899 227.766 9.51599 cv
227.766 13.441 li
227.762 13.809 227.785 14.086 227.836 14.277 cv
227.879 14.469 227.949 14.633 228.051 14.77 cv
228.145 14.91 228.27 15.016 228.418 15.09 cv
228.566 15.168 228.738 15.207 228.934 15.203 cv
229.184 15.207 229.434 15.117 229.688 14.93 cv
229.938 14.75 230.207 14.484 230.492 14.137 cv
230.492 9.51599 li
230.492 9.46899 230.504 9.422 230.535 9.37903 cv
230.559 9.34399 230.613 9.31201 230.691 9.28101 cv
230.766 9.258 230.863 9.23798 230.992 9.22302 cv
231.113 9.21503 231.273 9.20697 231.469 9.203 cv
231.66 9.20697 231.816 9.21503 231.941 9.22302 cv
232.063 9.23798 232.164 9.258 232.238 9.28101 cv
232.309 9.31201 232.359 9.34399 232.395 9.37903 cv
232.422 9.422 232.438 9.46899 232.441 9.51599 cv
cp
f
245.383 16.465 mo
245.379 16.52 245.363 16.562 245.336 16.602 cv
245.301 16.641 245.25 16.676 245.18 16.699 cv
245.105 16.727 245.004 16.742 244.883 16.758 cv
244.758 16.77 244.602 16.777 244.41 16.777 cv
244.211 16.777 244.051 16.77 243.926 16.758 cv
243.801 16.742 243.699 16.727 243.625 16.699 cv
243.547 16.676 243.496 16.641 243.469 16.602 cv
243.441 16.562 243.426 16.52 243.43 16.465 cv
243.43 12.344 li
243.426 12.113 243.406 11.898 243.363 11.703 cv
243.316 11.512 243.246 11.348 243.16 11.211 cv
243.066 11.074 242.953 10.969 242.816 10.891 cv
242.676 10.816 242.512 10.777 242.32 10.777 cv
242.086 10.777 241.848 10.871 241.609 11.051 cv
241.371 11.234 241.113 11.496 240.832 11.844 cv
240.832 16.465 li
240.832 16.52 240.816 16.562 240.785 16.602 cv
240.754 16.641 240.699 16.676 240.625 16.699 cv
240.547 16.727 240.445 16.742 240.324 16.758 cv
240.199 16.77 240.047 16.777 239.859 16.777 cv
239.664 16.777 239.504 16.77 239.383 16.758 cv
239.254 16.742 239.152 16.727 239.082 16.699 cv
239.004 16.676 238.953 16.641 238.922 16.602 cv
238.891 16.562 238.875 16.52 238.875 16.465 cv
238.875 12.344 li
238.875 12.113 238.852 11.898 238.809 11.703 cv
238.766 11.512 238.699 11.348 238.613 11.211 cv
238.52 11.074 238.406 10.969 238.27 10.891 cv
238.125 10.816 237.961 10.777 237.777 10.777 cv
237.535 10.777 237.297 10.871 237.059 11.051 cv
236.82 11.234 236.563 11.496 236.289 11.844 cv
236.289 16.465 li
236.285 16.52 236.27 16.562 236.242 16.602 cv
236.207 16.641 236.152 16.676 236.082 16.699 cv
236.004 16.727 235.906 16.742 235.781 16.758 cv
235.656 16.77 235.496 16.777 235.309 16.777 cv
235.113 16.777 234.957 16.77 234.832 16.758 cv
234.707 16.742 234.605 16.727 234.531 16.699 cv
234.453 16.676 234.398 16.641 234.371 16.602 cv
234.336 16.562 234.32 16.52 234.324 16.465 cv
234.324 9.51599 li
234.32 9.46899 234.336 9.422 234.363 9.37903 cv
234.387 9.34399 234.434 9.31201 234.504 9.28101 cv
234.57 9.258 234.656 9.23798 234.766 9.22302 cv
234.871 9.21503 235.004 9.20697 235.168 9.203 cv
235.332 9.20697 235.469 9.21503 235.578 9.22302 cv
235.684 9.23798 235.77 9.258 235.832 9.28101 cv
235.891 9.31201 235.934 9.34399 235.961 9.37903 cv
235.984 9.422 235.996 9.46899 236 9.51599 cv
236 10.316 li
236.383 9.90601 236.766 9.59399 237.148 9.383 cv
237.527 9.17603 237.93 9.07397 238.348 9.07001 cv
238.633 9.07397 238.887 9.10199 239.117 9.15997 cv
239.344 9.22302 239.551 9.30902 239.73 9.41803 cv
239.91 9.53101 240.063 9.66803 240.191 9.82001 cv
240.32 9.97699 240.43 10.148 240.52 10.34 cv
240.727 10.117 240.93 9.92603 241.133 9.76599 cv
241.328 9.60498 241.527 9.47302 241.723 9.37097 cv
241.918 9.27002 242.113 9.19501 242.309 9.14502 cv
242.504 9.09802 242.703 9.07397 242.906 9.07001 cv
243.367 9.07397 243.754 9.15198 244.074 9.30499 cv
244.387 9.46503 244.645 9.67603 244.84 9.94098 cv
245.035 10.211 245.172 10.523 245.258 10.879 cv
245.336 11.238 245.379 11.617 245.383 12.016 cv
cp
f
254.297 12.887 mo
254.297 13.508 254.23 14.066 254.098 14.562 cv
253.965 15.059 253.77 15.48 253.516 15.828 cv
253.262 16.176 252.945 16.445 252.566 16.629 cv
252.184 16.816 251.75 16.906 251.266 16.91 cv
251.059 16.906 250.871 16.887 250.707 16.852 cv
250.535 16.809 250.371 16.75 250.215 16.672 cv
250.055 16.594 249.898 16.496 249.746 16.371 cv
249.586 16.254 249.426 16.113 249.262 15.949 cv
249.262 19.223 li
249.258 19.27 249.242 19.316 249.215 19.363 cv
249.18 19.402 249.125 19.437 249.055 19.469 cv
248.977 19.492 248.879 19.516 248.754 19.535 cv
248.629 19.547 248.469 19.555 248.281 19.559 cv
248.086 19.555 247.93 19.547 247.805 19.535 cv
247.68 19.516 247.578 19.492 247.504 19.469 cv
247.426 19.437 247.371 19.402 247.344 19.363 cv
247.309 19.316 247.293 19.27 247.297 19.223 cv
247.297 9.51599 li
247.293 9.46899 247.309 9.422 247.336 9.37903 cv
247.359 9.34399 247.402 9.31201 247.473 9.28101 cv
247.535 9.258 247.621 9.23798 247.73 9.22302 cv
247.832 9.21503 247.969 9.20697 248.133 9.203 cv
248.289 9.20697 248.418 9.21503 248.523 9.22302 cv
248.629 9.23798 248.715 9.258 248.781 9.28101 cv
248.844 9.31201 248.891 9.34399 248.918 9.37903 cv
248.941 9.422 248.953 9.46899 248.957 9.51599 cv
248.957 10.332 li
249.156 10.125 249.355 9.94501 249.555 9.78497 cv
249.746 9.62903 249.945 9.49597 250.148 9.38702 cv
250.352 9.28497 250.559 9.203 250.777 9.14801 cv
250.988 9.09802 251.219 9.07397 251.469 9.07001 cv
251.973 9.07397 252.406 9.172 252.77 9.37097 cv
253.125 9.57397 253.418 9.85199 253.645 10.195 cv
253.867 10.547 254.031 10.949 254.141 11.41 cv
254.242 11.871 254.297 12.363 254.297 12.887 cv
cp
252.254 13.027 mo
252.25 12.734 252.23 12.453 252.188 12.176 cv
252.141 11.906 252.063 11.664 251.961 11.449 cv
251.852 11.238 251.711 11.066 251.539 10.937 cv
251.363 10.812 251.148 10.75 250.891 10.746 cv
250.758 10.75 250.629 10.77 250.504 10.805 cv
250.375 10.848 250.246 10.91 250.113 10.996 cv
249.98 11.086 249.844 11.199 249.707 11.34 cv
249.563 11.48 249.414 11.656 249.262 11.859 cv
249.262 14.152 li
249.535 14.5 249.797 14.77 250.047 14.957 cv
250.293 15.148 250.555 15.242 250.828 15.242 cv
251.082 15.242 251.297 15.18 251.48 15.047 cv
251.656 14.922 251.805 14.75 251.918 14.539 cv
252.031 14.328 252.113 14.09 252.172 13.824 cv
252.223 13.559 252.25 13.293 252.254 13.027 cv
cp
f
259.793 15.781 mo
259.793 16.008 259.777 16.184 259.75 16.305 cv
259.719 16.43 259.68 16.516 259.637 16.562 cv
259.586 16.613 259.52 16.656 259.43 16.695 cv
259.336 16.734 259.227 16.766 259.109 16.797 cv
258.984 16.82 258.852 16.844 258.711 16.863 cv
258.566 16.875 258.426 16.883 258.281 16.887 cv
257.891 16.883 257.551 16.832 257.266 16.738 cv
256.98 16.637 256.746 16.488 256.559 16.281 cv
256.371 16.078 256.23 15.82 256.145 15.508 cv
256.051 15.199 256.008 14.828 256.012 14.398 cv
256.012 10.84 li
255.18 10.84 li
255.078 10.844 255.004 10.781 254.953 10.656 cv
254.898 10.535 254.871 10.332 254.875 10.043 cv
254.871 9.89502 254.879 9.76599 254.895 9.664 cv
254.906 9.56201 254.926 9.47998 254.953 9.41803 cv
254.977 9.35901 255.008 9.31598 255.051 9.289 cv
255.086 9.26599 255.133 9.25403 255.188 9.25 cv
256.012 9.25 li
256.012 7.69897 li
256.008 7.65198 256.023 7.60498 256.055 7.55902 cv
256.082 7.52002 256.133 7.48401 256.211 7.453 cv
256.285 7.42999 256.387 7.40601 256.516 7.39099 cv
256.641 7.37903 256.797 7.375 256.988 7.37097 cv
257.176 7.375 257.336 7.37903 257.465 7.39099 cv
257.59 7.40601 257.691 7.42999 257.766 7.453 cv
257.836 7.48401 257.887 7.52002 257.922 7.55902 cv
257.949 7.60498 257.965 7.65198 257.969 7.69897 cv
257.969 9.25 li
259.48 9.25 li
259.531 9.25403 259.578 9.26599 259.617 9.289 cv
259.656 9.31598 259.688 9.35901 259.715 9.41803 cv
259.738 9.47998 259.758 9.56201 259.773 9.664 cv
259.785 9.76599 259.793 9.89502 259.793 10.043 cv
259.793 10.332 259.766 10.535 259.715 10.656 cv
259.66 10.781 259.586 10.844 259.488 10.84 cv
257.969 10.84 li
257.969 14.105 li
257.965 14.484 258.023 14.77 258.148 14.957 cv
258.266 15.148 258.48 15.242 258.785 15.242 cv
258.887 15.242 258.98 15.234 259.066 15.215 cv
259.148 15.199 259.223 15.18 259.289 15.152 cv
259.352 15.133 259.406 15.109 259.453 15.09 cv
259.496 15.074 259.535 15.066 259.574 15.062 cv
259.602 15.066 259.633 15.074 259.664 15.09 cv
259.691 15.109 259.711 15.148 259.73 15.199 cv
259.742 15.258 259.758 15.332 259.773 15.422 cv
259.785 15.52 259.793 15.637 259.793 15.781 cv
cp
f
263.18 16.465 mo
263.176 16.52 263.16 16.562 263.133 16.602 cv
263.098 16.641 263.043 16.676 262.973 16.699 cv
262.895 16.727 262.797 16.742 262.672 16.758 cv
262.547 16.77 262.387 16.777 262.199 16.777 cv
262.004 16.777 261.848 16.77 261.723 16.758 cv
261.598 16.742 261.496 16.727 261.422 16.699 cv
261.344 16.676 261.289 16.641 261.262 16.602 cv
261.227 16.562 261.211 16.52 261.215 16.465 cv
261.215 9.53101 li
261.211 9.47998 261.227 9.43402 261.262 9.39502 cv
261.289 9.35498 261.344 9.32397 261.422 9.29303 cv
261.496 9.27002 261.598 9.24597 261.723 9.22699 cv
261.848 9.21503 262.004 9.20697 262.199 9.203 cv
262.387 9.20697 262.547 9.21503 262.672 9.22699 cv
262.797 9.24597 262.895 9.27002 262.973 9.29303 cv
263.043 9.32397 263.098 9.35498 263.133 9.39502 cv
263.16 9.43402 263.176 9.47998 263.18 9.53101 cv
cp
263.328 7.15997 mo
263.328 7.55902 263.246 7.83197 263.086 7.97998 cv
262.922 8.133 262.625 8.20697 262.191 8.203 cv
261.746 8.20697 261.445 8.133 261.297 7.98798 cv
261.141 7.84399 261.066 7.58197 261.066 7.19897 cv
261.066 6.80499 261.145 6.53101 261.305 6.37903 cv
261.461 6.22699 261.762 6.14801 262.207 6.14801 cv
262.641 6.14801 262.938 6.22302 263.094 6.37097 cv
263.25 6.52002 263.328 6.78497 263.328 7.15997 cv
cp
f
272.172 12.918 mo
272.168 13.516 272.09 14.059 271.938 14.543 cv
271.777 15.035 271.543 15.453 271.227 15.805 cv
270.91 16.156 270.512 16.43 270.035 16.621 cv
269.555 16.812 268.996 16.906 268.359 16.91 cv
267.738 16.906 267.199 16.824 266.746 16.652 cv
266.285 16.484 265.906 16.234 265.609 15.906 cv
265.305 15.582 265.082 15.18 264.938 14.699 cv
264.793 14.223 264.723 13.676 264.723 13.059 cv
264.723 12.469 264.801 11.93 264.957 11.437 cv
265.113 10.949 265.352 10.527 265.672 10.176 cv
265.988 9.828 266.383 9.55499 266.859 9.35901 cv
267.332 9.16803 267.891 9.07397 268.531 9.07001 cv
269.156 9.07397 269.695 9.15601 270.152 9.32397 cv
270.609 9.49597 270.988 9.74597 271.285 10.07 cv
271.582 10.398 271.805 10.801 271.953 11.277 cv
272.098 11.758 272.168 12.305 272.172 12.918 cv
cp
270.152 12.996 mo
270.148 12.66 270.121 12.344 270.07 12.051 cv
270.012 11.766 269.918 11.516 269.793 11.301 cv
269.66 11.09 269.488 10.922 269.277 10.801 cv
269.059 10.684 268.789 10.625 268.461 10.621 cv
268.172 10.625 267.918 10.68 267.699 10.781 cv
267.48 10.891 267.301 11.047 267.16 11.25 cv
267.02 11.457 266.914 11.703 266.844 11.988 cv
266.773 12.281 266.738 12.609 266.738 12.973 cv
266.738 13.32 266.766 13.637 266.824 13.922 cv
266.879 14.215 266.973 14.465 267.102 14.676 cv
267.227 14.891 267.398 15.055 267.621 15.168 cv
267.836 15.289 268.105 15.348 268.43 15.344 cv
268.723 15.348 268.98 15.293 269.203 15.184 cv
269.418 15.078 269.598 14.926 269.738 14.719 cv
269.879 14.52 269.98 14.273 270.051 13.984 cv
270.113 13.699 270.148 13.371 270.152 12.996 cv
cp
f
280.418 16.465 mo
280.414 16.52 280.398 16.562 280.371 16.602 cv
280.336 16.641 280.285 16.676 280.215 16.699 cv
280.141 16.727 280.039 16.742 279.914 16.758 cv
279.785 16.77 279.629 16.777 279.445 16.777 cv
279.25 16.777 279.09 16.77 278.965 16.758 cv
278.836 16.742 278.734 16.727 278.664 16.699 cv
278.586 16.676 278.535 16.641 278.508 16.602 cv
278.473 16.562 278.457 16.52 278.461 16.465 cv
278.461 12.5 li
278.457 12.164 278.434 11.898 278.387 11.703 cv
278.336 11.512 278.262 11.348 278.172 11.211 cv
278.078 11.074 277.961 10.969 277.813 10.891 cv
277.664 10.816 277.488 10.777 277.293 10.777 cv
277.039 10.777 276.789 10.871 276.535 11.051 cv
276.281 11.234 276.016 11.496 275.742 11.844 cv
275.742 16.465 li
275.738 16.52 275.723 16.562 275.695 16.602 cv
275.66 16.641 275.605 16.676 275.535 16.699 cv
275.457 16.727 275.359 16.742 275.234 16.758 cv
275.109 16.77 274.949 16.777 274.762 16.777 cv
274.566 16.777 274.41 16.77 274.285 16.758 cv
274.16 16.742 274.059 16.727 273.984 16.699 cv
273.906 16.676 273.852 16.641 273.824 16.602 cv
273.789 16.562 273.773 16.52 273.777 16.465 cv
273.777 9.51599 li
273.773 9.46899 273.789 9.422 273.816 9.37903 cv
273.84 9.34399 273.887 9.31201 273.957 9.28101 cv
274.023 9.258 274.109 9.23798 274.219 9.22302 cv
274.324 9.21503 274.457 9.20697 274.621 9.203 cv
274.785 9.20697 274.922 9.21503 275.031 9.22302 cv
275.137 9.23798 275.223 9.258 275.285 9.28101 cv
275.344 9.31201 275.387 9.34399 275.414 9.37903 cv
275.438 9.422 275.449 9.46899 275.453 9.51599 cv
275.453 10.316 li
275.836 9.90601 276.227 9.59399 276.625 9.383 cv
277.02 9.17603 277.438 9.07397 277.871 9.07001 cv
278.34 9.07397 278.738 9.15198 279.066 9.30499 cv
279.391 9.46503 279.652 9.67603 279.852 9.94098 cv
280.051 10.211 280.195 10.523 280.285 10.879 cv
280.371 11.238 280.414 11.668 280.418 12.172 cv
cp
f
296.883 9.5 mo
296.879 9.55902 296.871 9.62903 296.859 9.711 cv
296.84 9.79303 296.813 9.914 296.773 10.066 cv
294.918 16.355 li
294.891 16.445 294.855 16.52 294.816 16.57 cv
294.773 16.629 294.711 16.672 294.625 16.699 cv
294.539 16.73 294.414 16.746 294.258 16.762 cv
294.094 16.77 293.891 16.777 293.641 16.777 cv
293.383 16.777 293.172 16.77 293.016 16.758 cv
292.852 16.742 292.727 16.723 292.637 16.691 cv
292.543 16.664 292.477 16.621 292.438 16.562 cv
292.395 16.512 292.363 16.441 292.344 16.355 cv
291.176 12.133 li
291.16 12.062 li
291.145 12.133 li
290.07 16.355 li
290.047 16.445 290.016 16.52 289.98 16.57 cv
289.938 16.629 289.871 16.672 289.781 16.699 cv
289.684 16.73 289.559 16.746 289.398 16.762 cv
289.238 16.77 289.031 16.777 288.777 16.777 cv
288.516 16.777 288.305 16.77 288.148 16.758 cv
287.988 16.742 287.863 16.723 287.773 16.691 cv
287.68 16.664 287.613 16.621 287.574 16.562 cv
287.531 16.512 287.5 16.441 287.484 16.355 cv
285.645 10.066 li
285.594 9.91803 285.566 9.80103 285.555 9.71503 cv
285.539 9.633 285.531 9.55902 285.535 9.5 cv
285.531 9.44897 285.547 9.40601 285.578 9.36298 cv
285.605 9.328 285.656 9.297 285.734 9.27002 cv
285.809 9.25 285.91 9.22998 286.035 9.21899 cv
286.16 9.211 286.32 9.20697 286.516 9.203 cv
286.723 9.20697 286.891 9.211 287.023 9.21899 cv
287.152 9.22998 287.254 9.25 287.328 9.27301 cv
287.398 9.30103 287.449 9.336 287.48 9.37903 cv
287.508 9.42603 287.531 9.47998 287.547 9.539 cv
288.926 14.641 li
288.941 14.734 li
288.957 14.641 li
290.25 9.539 li
290.262 9.47998 290.289 9.42603 290.324 9.37903 cv
290.355 9.336 290.406 9.30103 290.477 9.27301 cv
290.543 9.25 290.637 9.22998 290.758 9.21899 cv
290.879 9.211 291.035 9.20697 291.23 9.203 cv
291.422 9.20697 291.578 9.21503 291.699 9.22302 cv
291.816 9.23798 291.91 9.25403 291.984 9.27698 cv
292.051 9.30103 292.102 9.33197 292.133 9.37097 cv
292.16 9.40997 292.184 9.45697 292.199 9.508 cv
293.586 14.648 li
293.609 14.734 li
293.625 14.641 li
294.949 9.539 li
294.957 9.47998 294.98 9.42603 295.012 9.37903 cv
295.043 9.336 295.094 9.30103 295.168 9.27301 cv
295.238 9.25 295.336 9.22998 295.461 9.21899 cv
295.582 9.211 295.742 9.20697 295.938 9.203 cv
296.129 9.20697 296.285 9.211 296.41 9.21899 cv
296.531 9.22998 296.629 9.25 296.699 9.27002 cv
296.77 9.297 296.816 9.328 296.844 9.36298 cv
296.867 9.40601 296.879 9.44897 296.883 9.5 cv
cp
f
300.098 16.465 mo
300.094 16.52 300.078 16.562 300.051 16.602 cv
300.016 16.641 299.961 16.676 299.891 16.699 cv
299.813 16.727 299.715 16.742 299.59 16.758 cv
299.465 16.77 299.305 16.777 299.117 16.777 cv
298.922 16.777 298.766 16.77 298.641 16.758 cv
298.516 16.742 298.414 16.727 298.34 16.699 cv
298.262 16.676 298.207 16.641 298.18 16.602 cv
298.145 16.562 298.129 16.52 298.133 16.465 cv
298.133 9.53101 li
298.129 9.47998 298.145 9.43402 298.18 9.39502 cv
298.207 9.35498 298.262 9.32397 298.34 9.29303 cv
298.414 9.27002 298.516 9.24597 298.641 9.22699 cv
298.766 9.21503 298.922 9.20697 299.117 9.203 cv
299.305 9.20697 299.465 9.21503 299.59 9.22699 cv
299.715 9.24597 299.813 9.27002 299.891 9.29303 cv
299.961 9.32397 300.016 9.35498 300.051 9.39502 cv
300.078 9.43402 300.094 9.47998 300.098 9.53101 cv
cp
300.246 7.15997 mo
300.246 7.55902 300.164 7.83197 300.004 7.97998 cv
299.84 8.133 299.543 8.20697 299.109 8.203 cv
298.664 8.20697 298.363 8.133 298.215 7.98798 cv
298.059 7.84399 297.984 7.58197 297.984 7.19897 cv
297.984 6.80499 298.063 6.53101 298.223 6.37903 cv
298.379 6.22699 298.68 6.14801 299.125 6.14801 cv
299.559 6.14801 299.855 6.22302 300.012 6.37097 cv
300.168 6.52002 300.246 6.78497 300.246 7.15997 cv
cp
f
306.176 15.781 mo
306.176 16.008 306.16 16.184 306.133 16.305 cv
306.102 16.43 306.063 16.516 306.02 16.562 cv
305.969 16.613 305.902 16.656 305.813 16.695 cv
305.719 16.734 305.609 16.766 305.492 16.797 cv
305.367 16.82 305.234 16.844 305.094 16.863 cv
304.949 16.875 304.809 16.883 304.664 16.887 cv
304.273 16.883 303.934 16.832 303.648 16.738 cv
303.363 16.637 303.129 16.488 302.941 16.281 cv
302.754 16.078 302.613 15.82 302.527 15.508 cv
302.434 15.199 302.391 14.828 302.395 14.398 cv
302.395 10.84 li
301.563 10.84 li
301.461 10.844 301.387 10.781 301.336 10.656 cv
301.281 10.535 301.254 10.332 301.258 10.043 cv
301.254 9.89502 301.262 9.76599 301.277 9.664 cv
301.289 9.56201 301.309 9.47998 301.336 9.41803 cv
301.359 9.35901 301.391 9.31598 301.434 9.289 cv
301.469 9.26599 301.516 9.25403 301.57 9.25 cv
302.395 9.25 li
302.395 7.69897 li
302.391 7.65198 302.406 7.60498 302.438 7.55902 cv
302.465 7.52002 302.516 7.48401 302.594 7.453 cv
302.668 7.42999 302.77 7.40601 302.898 7.39099 cv
303.023 7.37903 303.18 7.375 303.371 7.37097 cv
303.559 7.375 303.719 7.37903 303.848 7.39099 cv
303.973 7.40601 304.074 7.42999 304.148 7.453 cv
304.219 7.48401 304.27 7.52002 304.305 7.55902 cv
304.332 7.60498 304.348 7.65198 304.352 7.69897 cv
304.352 9.25 li
305.863 9.25 li
305.914 9.25403 305.961 9.26599 306 9.289 cv
306.039 9.31598 306.07 9.35901 306.098 9.41803 cv
306.121 9.47998 306.141 9.56201 306.156 9.664 cv
306.168 9.76599 306.176 9.89502 306.176 10.043 cv
306.176 10.332 306.148 10.535 306.098 10.656 cv
306.043 10.781 305.969 10.844 305.871 10.84 cv
304.352 10.84 li
304.352 14.105 li
304.348 14.484 304.406 14.77 304.531 14.957 cv
304.648 15.148 304.863 15.242 305.168 15.242 cv
305.27 15.242 305.363 15.234 305.449 15.215 cv
305.531 15.199 305.605 15.18 305.672 15.152 cv
305.734 15.133 305.789 15.109 305.836 15.09 cv
305.879 15.074 305.918 15.066 305.957 15.062 cv
305.984 15.066 306.016 15.074 306.047 15.09 cv
306.074 15.109 306.094 15.148 306.113 15.199 cv
306.125 15.258 306.141 15.332 306.156 15.422 cv
306.168 15.52 306.176 15.637 306.176 15.781 cv
cp
f
314.234 16.465 mo
314.23 16.52 314.215 16.562 314.188 16.602 cv
314.152 16.641 314.102 16.676 314.031 16.699 cv
313.957 16.727 313.855 16.742 313.73 16.758 cv
313.602 16.77 313.445 16.777 313.262 16.777 cv
313.066 16.777 312.906 16.77 312.781 16.758 cv
312.652 16.742 312.551 16.727 312.48 16.699 cv
312.402 16.676 312.352 16.641 312.324 16.602 cv
312.289 16.562 312.273 16.52 312.277 16.465 cv
312.277 12.5 li
312.273 12.164 312.25 11.898 312.203 11.703 cv
312.152 11.512 312.078 11.348 311.988 11.211 cv
311.895 11.074 311.777 10.969 311.629 10.891 cv
311.48 10.816 311.305 10.777 311.109 10.777 cv
310.855 10.777 310.605 10.871 310.352 11.051 cv
310.098 11.234 309.832 11.496 309.559 11.844 cv
309.559 16.465 li
309.555 16.52 309.539 16.562 309.512 16.602 cv
309.477 16.641 309.422 16.676 309.352 16.699 cv
309.273 16.727 309.176 16.742 309.051 16.758 cv
308.926 16.77 308.766 16.777 308.578 16.777 cv
308.383 16.777 308.227 16.77 308.102 16.758 cv
307.977 16.742 307.875 16.727 307.801 16.699 cv
307.723 16.676 307.668 16.641 307.641 16.602 cv
307.605 16.562 307.59 16.52 307.594 16.465 cv
307.594 6.21899 li
307.59 6.16803 307.605 6.12097 307.641 6.078 cv
307.668 6.039 307.723 6.00403 307.801 5.97302 cv
307.875 5.94501 307.977 5.92603 308.102 5.90601 cv
308.227 5.89502 308.383 5.88702 308.578 5.883 cv
308.766 5.88702 308.926 5.89502 309.051 5.90601 cv
309.176 5.92603 309.273 5.94501 309.352 5.97302 cv
309.422 6.00403 309.477 6.039 309.512 6.078 cv
309.539 6.12097 309.555 6.16803 309.559 6.21899 cv
309.559 10.059 li
309.895 9.72998 310.238 9.48401 310.59 9.31598 cv
310.938 9.15601 311.305 9.07397 311.688 9.07001 cv
312.156 9.07397 312.555 9.15198 312.883 9.30499 cv
313.207 9.46503 313.469 9.67603 313.668 9.94501 cv
313.867 10.215 314.012 10.531 314.102 10.891 cv
314.188 11.254 314.23 11.691 314.234 12.203 cv
cp
f
325.914 15.93 mo
325.91 16.082 325.906 16.207 325.895 16.305 cv
325.879 16.41 325.859 16.492 325.836 16.551 cv
325.813 16.617 325.781 16.664 325.742 16.687 cv
325.703 16.719 325.66 16.73 325.613 16.73 cv
320.547 16.73 li
320.371 16.73 320.227 16.68 320.113 16.578 cv
319.992 16.477 319.934 16.312 319.938 16.082 cv
319.938 7.29303 li
319.934 7.06598 319.992 6.90198 320.113 6.797 cv
320.227 6.69897 320.371 6.64801 320.547 6.64502 cv
325.582 6.64502 li
325.625 6.64801 325.668 6.65997 325.707 6.68402 cv
325.742 6.711 325.773 6.758 325.801 6.82001 cv
325.824 6.89099 325.84 6.97302 325.855 7.07001 cv
325.863 7.17603 325.871 7.30499 325.875 7.45697 cv
325.871 7.60498 325.863 7.72998 325.855 7.828 cv
325.84 7.93402 325.824 8.01599 325.801 8.07397 cv
325.773 8.13702 325.742 8.17999 325.707 8.20697 cv
325.668 8.23798 325.625 8.25403 325.582 8.25 cv
321.98 8.25 li
321.98 10.715 li
325.027 10.715 li
325.074 10.719 325.117 10.734 325.156 10.758 cv
325.195 10.789 325.227 10.832 325.254 10.891 cv
325.277 10.953 325.297 11.035 325.313 11.133 cv
325.324 11.234 325.332 11.355 325.332 11.5 cv
325.332 11.652 325.324 11.777 325.313 11.875 cv
325.297 11.977 325.277 12.055 325.254 12.113 cv
325.227 12.176 325.195 12.219 325.156 12.242 cv
325.117 12.27 325.074 12.285 325.027 12.281 cv
321.98 12.281 li
321.98 15.125 li
325.613 15.125 li
325.66 15.125 325.703 15.141 325.742 15.168 cv
325.781 15.199 325.813 15.246 325.836 15.305 cv
325.859 15.371 325.879 15.453 325.895 15.551 cv
325.906 15.656 325.91 15.781 325.914 15.93 cv
cp
f
329.574 16.465 mo
329.57 16.52 329.555 16.562 329.527 16.602 cv
329.492 16.641 329.438 16.676 329.367 16.699 cv
329.289 16.727 329.191 16.742 329.066 16.758 cv
328.941 16.77 328.781 16.777 328.594 16.777 cv
328.398 16.777 328.242 16.77 328.117 16.758 cv
327.992 16.742 327.891 16.727 327.816 16.699 cv
327.738 16.676 327.684 16.641 327.656 16.602 cv
327.621 16.562 327.605 16.52 327.609 16.465 cv
327.609 9.53101 li
327.605 9.47998 327.621 9.43402 327.656 9.39502 cv
327.684 9.35498 327.738 9.32397 327.816 9.29303 cv
327.891 9.27002 327.992 9.24597 328.117 9.22699 cv
328.242 9.21503 328.398 9.20697 328.594 9.203 cv
328.781 9.20697 328.941 9.21503 329.066 9.22699 cv
329.191 9.24597 329.289 9.27002 329.367 9.29303 cv
329.438 9.32397 329.492 9.35498 329.527 9.39502 cv
329.555 9.43402 329.57 9.47998 329.574 9.53101 cv
cp
329.723 7.15997 mo
329.723 7.55902 329.641 7.83197 329.48 7.97998 cv
329.316 8.133 329.02 8.20697 328.586 8.203 cv
328.141 8.20697 327.84 8.133 327.691 7.98798 cv
327.535 7.84399 327.461 7.58197 327.461 7.19897 cv
327.461 6.80499 327.539 6.53101 327.699 6.37903 cv
327.855 6.22699 328.156 6.14801 328.602 6.14801 cv
329.035 6.14801 329.332 6.22302 329.488 6.37097 cv
329.645 6.52002 329.723 6.78497 329.723 7.15997 cv
cp
f
337.801 9.99597 mo
337.797 10.25 337.77 10.434 337.715 10.551 cv
337.656 10.672 337.586 10.73 337.508 10.73 cv
336.688 10.73 li
336.801 10.855 336.883 11 336.934 11.156 cv
336.98 11.316 337.004 11.48 337.008 11.648 cv
337.004 12.059 336.938 12.418 336.805 12.73 cv
336.668 13.047 336.473 13.312 336.223 13.523 cv
335.969 13.742 335.668 13.906 335.313 14.016 cv
334.953 14.133 334.555 14.187 334.125 14.184 cv
333.898 14.187 333.688 14.16 333.484 14.102 cv
333.281 14.051 333.125 13.988 333.016 13.91 cv
332.953 13.98 332.895 14.059 332.848 14.152 cv
332.797 14.246 332.773 14.352 332.777 14.461 cv
332.773 14.617 332.84 14.738 332.973 14.832 cv
333.102 14.93 333.289 14.984 333.531 14.992 cv
335.223 15.055 li
335.617 15.07 335.969 15.129 336.277 15.223 cv
336.586 15.324 336.848 15.457 337.059 15.629 cv
337.27 15.805 337.43 16.016 337.539 16.258 cv
337.648 16.504 337.703 16.777 337.707 17.09 cv
337.703 17.426 337.629 17.75 337.48 18.059 cv
337.332 18.359 337.105 18.621 336.805 18.848 cv
336.5 19.066 336.121 19.246 335.668 19.379 cv
335.211 19.508 334.68 19.57 334.078 19.574 cv
333.48 19.57 332.977 19.523 332.559 19.434 cv
332.141 19.336 331.797 19.207 331.531 19.043 cv
331.262 18.875 331.066 18.676 330.949 18.449 cv
330.824 18.215 330.766 17.961 330.766 17.687 cv
330.766 17.516 330.785 17.355 330.832 17.199 cv
330.871 17.043 330.938 16.891 331.027 16.75 cv
331.109 16.605 331.215 16.473 331.34 16.34 cv
331.465 16.211 331.605 16.086 331.77 15.965 cv
331.543 15.852 331.371 15.691 331.25 15.48 cv
331.129 15.277 331.07 15.051 331.07 14.805 cv
331.07 14.504 331.137 14.227 331.277 13.969 cv
331.414 13.719 331.598 13.488 331.824 13.285 cv
331.641 13.105 331.496 12.891 331.387 12.633 cv
331.277 12.383 331.223 12.062 331.227 11.68 cv
331.223 11.277 331.293 10.918 331.438 10.594 cv
331.578 10.277 331.777 10.008 332.035 9.78497 cv
332.289 9.56598 332.594 9.39502 332.945 9.27698 cv
333.297 9.15997 333.688 9.10199 334.117 9.10199 cv
334.336 9.10199 334.543 9.117 334.742 9.14099 cv
334.941 9.172 335.129 9.20697 335.301 9.25 cv
337.508 9.25 li
337.59 9.25403 337.66 9.31201 337.719 9.422 cv
337.77 9.539 337.797 9.72998 337.801 9.99597 cv
cp
335.285 11.641 mo
335.281 11.27 335.18 10.98 334.973 10.77 cv
334.762 10.566 334.469 10.461 334.094 10.457 cv
333.898 10.461 333.727 10.492 333.586 10.555 cv
333.438 10.621 333.316 10.711 333.223 10.82 cv
333.121 10.934 333.051 11.062 333.008 11.211 cv
332.957 11.359 332.934 11.516 332.938 11.672 cv
332.934 12.031 333.039 12.309 333.25 12.512 cv
333.457 12.719 333.746 12.824 334.117 12.82 cv
334.313 12.824 334.48 12.793 334.629 12.727 cv
334.77 12.668 334.891 12.582 334.992 12.469 cv
335.086 12.363 335.16 12.234 335.211 12.09 cv
335.258 11.949 335.281 11.801 335.285 11.641 cv
cp
335.746 17.191 mo
335.746 16.953 335.652 16.777 335.465 16.652 cv
335.277 16.531 335.02 16.461 334.691 16.449 cv
333.297 16.41 li
333.16 16.512 333.051 16.605 332.973 16.695 cv
332.891 16.785 332.828 16.871 332.781 16.957 cv
332.73 17.039 332.695 17.121 332.684 17.199 cv
332.664 17.277 332.656 17.355 332.66 17.441 cv
332.656 17.695 332.789 17.895 333.051 18.031 cv
333.313 18.164 333.684 18.23 334.164 18.234 cv
334.457 18.23 334.703 18.199 334.91 18.145 cv
335.109 18.082 335.273 18.004 335.402 17.906 cv
335.523 17.805 335.613 17.695 335.668 17.574 cv
335.719 17.453 335.746 17.324 335.746 17.191 cv
cp
f
345.742 16.465 mo
345.738 16.52 345.723 16.562 345.695 16.602 cv
345.66 16.641 345.609 16.676 345.539 16.699 cv
345.465 16.727 345.363 16.742 345.238 16.758 cv
345.109 16.77 344.953 16.777 344.77 16.777 cv
344.574 16.777 344.414 16.77 344.289 16.758 cv
344.16 16.742 344.059 16.727 343.988 16.699 cv
343.91 16.676 343.859 16.641 343.832 16.602 cv
343.797 16.562 343.781 16.52 343.785 16.465 cv
343.785 12.5 li
343.781 12.164 343.758 11.898 343.711 11.703 cv
343.66 11.512 343.586 11.348 343.496 11.211 cv
343.402 11.074 343.285 10.969 343.137 10.891 cv
342.988 10.816 342.813 10.777 342.617 10.777 cv
342.363 10.777 342.113 10.871 341.859 11.051 cv
341.605 11.234 341.34 11.496 341.066 11.844 cv
341.066 16.465 li
341.063 16.52 341.047 16.562 341.02 16.602 cv
340.984 16.641 340.93 16.676 340.859 16.699 cv
340.781 16.727 340.684 16.742 340.559 16.758 cv
340.434 16.77 340.273 16.777 340.086 16.777 cv
339.891 16.777 339.734 16.77 339.609 16.758 cv
339.484 16.742 339.383 16.727 339.309 16.699 cv
339.23 16.676 339.176 16.641 339.148 16.602 cv
339.113 16.562 339.098 16.52 339.102 16.465 cv
339.102 6.21899 li
339.098 6.16803 339.113 6.12097 339.148 6.078 cv
339.176 6.039 339.23 6.00403 339.309 5.97302 cv
339.383 5.94501 339.484 5.92603 339.609 5.90601 cv
339.734 5.89502 339.891 5.88702 340.086 5.883 cv
340.273 5.88702 340.434 5.89502 340.559 5.90601 cv
340.684 5.92603 340.781 5.94501 340.859 5.97302 cv
340.93 6.00403 340.984 6.039 341.02 6.078 cv
341.047 6.12097 341.063 6.16803 341.066 6.21899 cv
341.066 10.059 li
341.402 9.72998 341.746 9.48401 342.098 9.31598 cv
342.445 9.15601 342.813 9.07397 343.195 9.07001 cv
343.664 9.07397 344.063 9.15198 344.391 9.30499 cv
344.715 9.46503 344.977 9.67603 345.176 9.94501 cv
345.375 10.215 345.52 10.531 345.609 10.891 cv
345.695 11.254 345.738 11.691 345.742 12.203 cv
cp
f
351.66 15.781 mo
351.66 16.008 351.645 16.184 351.617 16.305 cv
351.586 16.43 351.547 16.516 351.504 16.562 cv
351.453 16.613 351.387 16.656 351.297 16.695 cv
351.203 16.734 351.094 16.766 350.977 16.797 cv
350.852 16.82 350.719 16.844 350.578 16.863 cv
350.434 16.875 350.293 16.883 350.148 16.887 cv
349.758 16.883 349.418 16.832 349.133 16.738 cv
348.848 16.637 348.613 16.488 348.426 16.281 cv
348.238 16.078 348.098 15.82 348.012 15.508 cv
347.918 15.199 347.875 14.828 347.879 14.398 cv
347.879 10.84 li
347.047 10.84 li
346.945 10.844 346.871 10.781 346.82 10.656 cv
346.766 10.535 346.738 10.332 346.742 10.043 cv
346.738 9.89502 346.746 9.76599 346.762 9.664 cv
346.773 9.56201 346.793 9.47998 346.82 9.41803 cv
346.844 9.35901 346.875 9.31598 346.918 9.289 cv
346.953 9.26599 347 9.25403 347.055 9.25 cv
347.879 9.25 li
347.879 7.69897 li
347.875 7.65198 347.891 7.60498 347.922 7.55902 cv
347.949 7.52002 348 7.48401 348.078 7.453 cv
348.152 7.42999 348.254 7.40601 348.383 7.39099 cv
348.508 7.37903 348.664 7.375 348.855 7.37097 cv
349.043 7.375 349.203 7.37903 349.332 7.39099 cv
349.457 7.40601 349.559 7.42999 349.633 7.453 cv
349.703 7.48401 349.754 7.52002 349.789 7.55902 cv
349.816 7.60498 349.832 7.65198 349.836 7.69897 cv
349.836 9.25 li
351.348 9.25 li
351.398 9.25403 351.445 9.26599 351.484 9.289 cv
351.523 9.31598 351.555 9.35901 351.582 9.41803 cv
351.605 9.47998 351.625 9.56201 351.641 9.664 cv
351.652 9.76599 351.66 9.89502 351.66 10.043 cv
351.66 10.332 351.633 10.535 351.582 10.656 cv
351.527 10.781 351.453 10.844 351.355 10.84 cv
349.836 10.84 li
349.836 14.105 li
349.832 14.484 349.891 14.77 350.016 14.957 cv
350.133 15.148 350.348 15.242 350.652 15.242 cv
350.754 15.242 350.848 15.234 350.934 15.215 cv
351.016 15.199 351.09 15.18 351.156 15.152 cv
351.219 15.133 351.273 15.109 351.32 15.09 cv
351.363 15.074 351.402 15.066 351.441 15.062 cv
351.469 15.066 351.5 15.074 351.531 15.09 cv
351.559 15.109 351.578 15.148 351.598 15.199 cv
351.609 15.258 351.625 15.332 351.641 15.422 cv
351.652 15.52 351.66 15.637 351.66 15.781 cv
cp
f
363.598 7.48798 mo
363.594 7.64502 363.586 7.77301 363.578 7.875 cv
363.563 7.98401 363.543 8.07001 363.52 8.133 cv
363.488 8.19897 363.457 8.24597 363.422 8.27301 cv
363.379 8.30902 363.336 8.32397 363.293 8.32001 cv
360.77 8.32001 li
360.77 16.449 li
360.77 16.504 360.75 16.551 360.719 16.59 cv
360.68 16.633 360.625 16.668 360.551 16.691 cv
360.469 16.719 360.363 16.738 360.234 16.754 cv
360.098 16.77 359.934 16.777 359.738 16.777 cv
359.543 16.777 359.379 16.77 359.246 16.754 cv
359.113 16.738 359.008 16.719 358.93 16.691 cv
358.852 16.668 358.793 16.633 358.762 16.59 cv
358.723 16.551 358.707 16.504 358.711 16.449 cv
358.711 8.32001 li
356.188 8.32001 li
356.133 8.32397 356.086 8.30902 356.055 8.27301 cv
356.016 8.24597 355.984 8.19897 355.961 8.133 cv
355.93 8.07001 355.91 7.98401 355.902 7.875 cv
355.887 7.77301 355.883 7.64502 355.883 7.48798 cv
355.883 7.336 355.887 7.203 355.902 7.09003 cv
355.91 6.98401 355.93 6.89502 355.961 6.828 cv
355.984 6.76599 356.016 6.71899 356.055 6.68701 cv
356.086 6.65997 356.133 6.64801 356.188 6.64502 cv
363.293 6.64502 li
363.336 6.64801 363.379 6.65997 363.422 6.68701 cv
363.457 6.71899 363.488 6.76599 363.52 6.828 cv
363.543 6.89502 363.563 6.98401 363.578 7.09003 cv
363.586 7.203 363.594 7.336 363.598 7.48798 cv
cp
f
371.309 16.465 mo
371.305 16.52 371.289 16.562 371.262 16.602 cv
371.227 16.641 371.176 16.676 371.105 16.699 cv
371.031 16.727 370.93 16.742 370.805 16.758 cv
370.676 16.77 370.52 16.777 370.336 16.777 cv
370.141 16.777 369.98 16.77 369.855 16.758 cv
369.727 16.742 369.625 16.727 369.555 16.699 cv
369.477 16.676 369.426 16.641 369.398 16.602 cv
369.363 16.562 369.348 16.52 369.352 16.465 cv
369.352 12.5 li
369.348 12.164 369.324 11.898 369.277 11.703 cv
369.227 11.512 369.152 11.348 369.063 11.211 cv
368.969 11.074 368.852 10.969 368.703 10.891 cv
368.555 10.816 368.379 10.777 368.184 10.777 cv
367.93 10.777 367.68 10.871 367.426 11.051 cv
367.172 11.234 366.906 11.496 366.633 11.844 cv
366.633 16.465 li
366.629 16.52 366.613 16.562 366.586 16.602 cv
366.551 16.641 366.496 16.676 366.426 16.699 cv
366.348 16.727 366.25 16.742 366.125 16.758 cv
366 16.77 365.84 16.777 365.652 16.777 cv
365.457 16.777 365.301 16.77 365.176 16.758 cv
365.051 16.742 364.949 16.727 364.875 16.699 cv
364.797 16.676 364.742 16.641 364.715 16.602 cv
364.68 16.562 364.664 16.52 364.668 16.465 cv
364.668 6.21899 li
364.664 6.16803 364.68 6.12097 364.715 6.078 cv
364.742 6.039 364.797 6.00403 364.875 5.97302 cv
364.949 5.94501 365.051 5.92603 365.176 5.90601 cv
365.301 5.89502 365.457 5.88702 365.652 5.883 cv
365.84 5.88702 366 5.89502 366.125 5.90601 cv
366.25 5.92603 366.348 5.94501 366.426 5.97302 cv
366.496 6.00403 366.551 6.039 366.586 6.078 cv
366.613 6.12097 366.629 6.16803 366.633 6.21899 cv
366.633 10.059 li
366.969 9.72998 367.313 9.48401 367.664 9.31598 cv
368.012 9.15601 368.379 9.07397 368.762 9.07001 cv
369.23 9.07397 369.629 9.15198 369.957 9.30499 cv
370.281 9.46503 370.543 9.67603 370.742 9.94501 cv
370.941 10.215 371.086 10.531 371.176 10.891 cv
371.262 11.254 371.305 11.691 371.309 12.203 cv
cp
f
377.707 10.16 mo
377.707 10.352 377.699 10.504 377.691 10.621 cv
377.676 10.742 377.66 10.836 377.645 10.902 cv
377.621 10.973 377.594 11.02 377.563 11.043 cv
377.523 11.07 377.48 11.082 377.434 11.082 cv
377.387 11.082 377.34 11.074 377.293 11.055 cv
377.238 11.039 377.18 11.02 377.117 10.996 cv
377.047 10.977 376.977 10.957 376.902 10.937 cv
376.82 10.922 376.734 10.914 376.645 10.91 cv
376.531 10.914 376.422 10.934 376.316 10.977 cv
376.207 11.023 376.094 11.094 375.98 11.184 cv
375.859 11.277 375.738 11.402 375.613 11.555 cv
375.484 11.715 375.348 11.906 375.203 12.133 cv
375.203 16.465 li
375.199 16.52 375.184 16.562 375.156 16.602 cv
375.121 16.641 375.066 16.676 374.996 16.699 cv
374.918 16.727 374.82 16.742 374.695 16.758 cv
374.57 16.77 374.41 16.777 374.223 16.777 cv
374.027 16.777 373.871 16.77 373.746 16.758 cv
373.621 16.742 373.52 16.727 373.445 16.699 cv
373.367 16.676 373.313 16.641 373.285 16.602 cv
373.25 16.562 373.234 16.52 373.238 16.465 cv
373.238 9.51599 li
373.234 9.46899 373.25 9.422 373.277 9.37903 cv
373.301 9.34399 373.348 9.31201 373.418 9.28101 cv
373.484 9.258 373.57 9.23798 373.68 9.22302 cv
373.785 9.21503 373.918 9.20697 374.082 9.203 cv
374.246 9.20697 374.383 9.21503 374.492 9.22302 cv
374.598 9.23798 374.684 9.258 374.746 9.28101 cv
374.805 9.31201 374.848 9.34399 374.875 9.37903 cv
374.898 9.422 374.91 9.46899 374.914 9.51599 cv
374.914 10.379 li
375.094 10.121 375.266 9.90997 375.43 9.73798 cv
375.586 9.57397 375.742 9.43701 375.891 9.336 cv
376.035 9.23798 376.18 9.172 376.324 9.12903 cv
376.469 9.09399 376.613 9.07397 376.762 9.07001 cv
376.828 9.07397 376.902 9.078 376.98 9.08197 cv
377.059 9.09399 377.137 9.10498 377.223 9.12097 cv
377.301 9.14099 377.375 9.15997 377.441 9.18402 cv
377.5 9.20697 377.547 9.23401 377.578 9.258 cv
377.605 9.289 377.625 9.31598 377.641 9.34399 cv
377.652 9.37903 377.664 9.422 377.676 9.47302 cv
377.684 9.53101 377.691 9.61298 377.699 9.71899 cv
377.703 9.828 377.707 9.97699 377.707 10.16 cv
cp
f
385.152 12.789 mo
385.148 13.027 385.098 13.203 384.992 13.316 cv
384.883 13.434 384.734 13.492 384.555 13.488 cv
380.32 13.488 li
380.316 13.789 380.352 14.059 380.426 14.297 cv
380.492 14.539 380.605 14.742 380.762 14.91 cv
380.914 15.082 381.109 15.211 381.352 15.297 cv
381.59 15.387 381.879 15.43 382.223 15.43 cv
382.563 15.43 382.863 15.406 383.125 15.355 cv
383.383 15.309 383.609 15.254 383.801 15.191 cv
383.988 15.133 384.145 15.078 384.273 15.027 cv
384.395 14.98 384.496 14.957 384.578 14.953 cv
384.621 14.957 384.66 14.965 384.695 14.98 cv
384.723 15 384.75 15.031 384.77 15.078 cv
384.789 15.125 384.801 15.191 384.813 15.277 cv
384.816 15.363 384.82 15.473 384.824 15.602 cv
384.82 15.719 384.82 15.816 384.816 15.895 cv
384.809 15.977 384.801 16.043 384.793 16.098 cv
384.781 16.156 384.766 16.207 384.746 16.242 cv
384.727 16.285 384.699 16.32 384.668 16.355 cv
384.633 16.395 384.539 16.445 384.391 16.504 cv
384.234 16.57 384.043 16.633 383.813 16.687 cv
383.574 16.75 383.305 16.797 383.008 16.844 cv
382.703 16.883 382.383 16.906 382.043 16.91 cv
381.422 16.906 380.879 16.832 380.418 16.676 cv
379.949 16.523 379.563 16.285 379.254 15.969 cv
378.938 15.652 378.703 15.254 378.555 14.77 cv
378.398 14.289 378.324 13.723 378.328 13.066 cv
378.324 12.453 378.402 11.895 378.566 11.398 cv
378.723 10.902 378.957 10.484 379.27 10.137 cv
379.574 9.79303 379.949 9.52698 380.387 9.34399 cv
380.824 9.164 381.316 9.07397 381.871 9.07001 cv
382.449 9.07397 382.949 9.15997 383.363 9.328 cv
383.777 9.50403 384.113 9.742 384.379 10.043 cv
384.641 10.348 384.836 10.707 384.965 11.121 cv
385.086 11.539 385.148 11.988 385.152 12.477 cv
cp
383.25 12.227 mo
383.262 11.676 383.152 11.242 382.918 10.93 cv
382.684 10.617 382.316 10.461 381.824 10.457 cv
381.574 10.461 381.359 10.508 381.176 10.598 cv
380.988 10.695 380.836 10.82 380.715 10.977 cv
380.59 11.137 380.496 11.324 380.434 11.539 cv
380.367 11.754 380.328 11.984 380.32 12.227 cv
cp
f
392.684 16.488 mo
392.68 16.566 392.652 16.621 392.605 16.66 cv
392.551 16.703 392.469 16.73 392.359 16.75 cv
392.242 16.766 392.078 16.777 391.863 16.777 cv
391.625 16.777 391.453 16.766 391.352 16.75 cv
391.242 16.73 391.168 16.703 391.129 16.66 cv
391.082 16.621 391.063 16.566 391.063 16.488 cv
391.063 15.937 li
390.773 16.246 390.445 16.484 390.082 16.652 cv
389.715 16.824 389.309 16.906 388.863 16.91 cv
388.492 16.906 388.152 16.859 387.844 16.766 cv
387.535 16.672 387.27 16.531 387.043 16.336 cv
386.816 16.148 386.641 15.914 386.516 15.633 cv
386.391 15.355 386.328 15.027 386.332 14.648 cv
386.328 14.25 386.406 13.898 386.566 13.594 cv
386.723 13.297 386.961 13.051 387.277 12.855 cv
387.59 12.664 387.98 12.52 388.449 12.422 cv
388.918 12.332 389.461 12.285 390.078 12.281 cv
390.758 12.281 li
390.758 11.859 li
390.758 11.645 390.734 11.453 390.691 11.289 cv
390.645 11.129 390.57 10.992 390.473 10.879 cv
390.367 10.773 390.234 10.691 390.066 10.637 cv
389.895 10.586 389.684 10.562 389.441 10.559 cv
389.109 10.562 388.816 10.598 388.563 10.668 cv
388.301 10.742 388.074 10.824 387.879 10.91 cv
387.68 11.004 387.516 11.082 387.387 11.152 cv
387.25 11.227 387.141 11.266 387.063 11.262 cv
387 11.266 386.949 11.246 386.91 11.207 cv
386.863 11.172 386.828 11.121 386.801 11.051 cv
386.77 10.988 386.746 10.902 386.734 10.801 cv
386.715 10.703 386.707 10.594 386.711 10.473 cv
386.707 10.312 386.723 10.187 386.75 10.09 cv
386.773 10 386.82 9.914 386.898 9.836 cv
386.969 9.76202 387.098 9.67999 387.281 9.59003 cv
387.461 9.5 387.672 9.414 387.918 9.336 cv
388.16 9.258 388.43 9.19501 388.719 9.14502 cv
389.008 9.09802 389.305 9.07397 389.613 9.07001 cv
390.156 9.07397 390.621 9.125 391.008 9.22998 cv
391.395 9.34003 391.715 9.50403 391.965 9.72302 cv
392.215 9.94098 392.395 10.227 392.512 10.574 cv
392.621 10.926 392.68 11.34 392.684 11.812 cv
cp
390.758 13.512 mo
390.008 13.512 li
389.691 13.516 389.422 13.539 389.199 13.582 cv
388.973 13.633 388.789 13.703 388.652 13.793 cv
388.508 13.891 388.406 14.004 388.344 14.133 cv
388.277 14.27 388.242 14.418 388.246 14.586 cv
388.242 14.879 388.336 15.109 388.523 15.273 cv
388.707 15.441 388.965 15.523 389.293 15.523 cv
389.566 15.523 389.816 15.453 390.051 15.312 cv
390.277 15.172 390.516 14.969 390.758 14.695 cv
cp
f
401.266 16.465 mo
401.262 16.527 401.25 16.574 401.227 16.609 cv
401.199 16.652 401.152 16.684 401.094 16.707 cv
401.027 16.73 400.945 16.746 400.84 16.762 cv
400.734 16.77 400.602 16.777 400.449 16.777 cv
400.277 16.777 400.145 16.77 400.043 16.762 cv
399.938 16.746 399.852 16.73 399.789 16.707 cv
399.723 16.684 399.676 16.652 399.648 16.609 cv
399.617 16.574 399.602 16.527 399.605 16.465 cv
399.605 15.695 li
399.246 16.082 398.871 16.379 398.48 16.59 cv
398.082 16.801 397.648 16.906 397.176 16.91 cv
396.641 16.906 396.191 16.805 395.828 16.602 cv
395.461 16.398 395.164 16.125 394.934 15.773 cv
394.699 15.43 394.531 15.023 394.43 14.555 cv
394.328 14.094 394.277 13.602 394.277 13.082 cv
394.277 12.469 394.34 11.914 394.473 11.418 cv
394.602 10.926 394.797 10.504 395.055 10.156 cv
395.309 9.80902 395.625 9.54303 396.004 9.35199 cv
396.383 9.16803 396.82 9.07397 397.316 9.07001 cv
397.703 9.07397 398.055 9.15198 398.375 9.30902 cv
398.688 9.46899 399.004 9.69897 399.316 10.004 cv
399.316 6.242 li
399.316 6.19098 399.328 6.14502 399.359 6.10199 cv
399.383 6.06201 399.438 6.02698 399.516 5.99597 cv
399.59 5.96899 399.688 5.94897 399.816 5.92999 cv
399.938 5.91803 400.098 5.90997 400.293 5.90601 cv
400.484 5.90997 400.641 5.91803 400.766 5.92999 cv
400.887 5.94897 400.988 5.96899 401.063 5.99597 cv
401.133 6.02698 401.184 6.06201 401.219 6.10199 cv
401.246 6.14502 401.262 6.19098 401.266 6.242 cv
cp
399.316 11.82 mo
399.035 11.469 398.766 11.199 398.512 11.012 cv
398.25 10.824 397.98 10.73 397.703 10.73 cv
397.449 10.73 397.23 10.797 397.047 10.922 cv
396.859 11.055 396.711 11.223 396.602 11.434 cv
396.488 11.645 396.406 11.883 396.352 12.145 cv
396.297 12.41 396.27 12.68 396.27 12.949 cv
396.27 13.246 396.293 13.527 396.34 13.801 cv
396.387 14.078 396.461 14.324 396.57 14.539 cv
396.672 14.754 396.816 14.926 396.996 15.055 cv
397.172 15.187 397.395 15.254 397.664 15.25 cv
397.797 15.254 397.926 15.234 398.059 15.191 cv
398.184 15.156 398.316 15.094 398.449 15 cv
398.582 14.914 398.719 14.797 398.859 14.652 cv
399 14.512 399.152 14.336 399.316 14.129 cv
cp
f
408.09 14.5 mo
408.086 14.898 408.012 15.246 407.867 15.547 cv
407.719 15.848 407.512 16.102 407.242 16.301 cv
406.969 16.508 406.648 16.656 406.281 16.758 cv
405.914 16.855 405.512 16.906 405.082 16.91 cv
404.816 16.906 404.57 16.887 404.336 16.852 cv
404.102 16.809 403.891 16.762 403.703 16.703 cv
403.516 16.645 403.359 16.582 403.234 16.52 cv
403.109 16.457 403.016 16.398 402.961 16.344 cv
402.902 16.289 402.859 16.207 402.832 16.09 cv
402.797 15.977 402.781 15.801 402.785 15.57 cv
402.781 15.422 402.789 15.301 402.801 15.207 cv
402.809 15.117 402.824 15.047 402.848 14.988 cv
402.867 14.937 402.891 14.898 402.926 14.879 cv
402.953 14.863 402.992 14.855 403.039 14.852 cv
403.094 14.855 403.18 14.887 403.293 14.949 cv
403.402 15.016 403.539 15.09 403.711 15.164 cv
403.875 15.246 404.07 15.316 404.289 15.383 cv
404.508 15.453 404.758 15.488 405.043 15.484 cv
405.219 15.488 405.375 15.469 405.516 15.43 cv
405.648 15.395 405.77 15.344 405.875 15.273 cv
405.973 15.207 406.047 15.121 406.102 15.016 cv
406.148 14.914 406.176 14.793 406.18 14.656 cv
406.176 14.5 406.129 14.367 406.035 14.258 cv
405.941 14.148 405.813 14.051 405.656 13.965 cv
405.492 13.883 405.313 13.805 405.117 13.73 cv
404.914 13.66 404.711 13.582 404.5 13.488 cv
404.289 13.402 404.082 13.301 403.887 13.184 cv
403.684 13.074 403.504 12.934 403.348 12.766 cv
403.184 12.602 403.059 12.402 402.965 12.164 cv
402.871 11.934 402.824 11.652 402.824 11.32 cv
402.824 10.992 402.887 10.687 403.016 10.406 cv
403.145 10.133 403.332 9.89502 403.578 9.69501 cv
403.82 9.5 404.117 9.34802 404.469 9.23401 cv
404.816 9.12903 405.211 9.07397 405.652 9.07001 cv
405.867 9.07397 406.078 9.09003 406.285 9.117 cv
406.488 9.15198 406.676 9.19098 406.844 9.23401 cv
407.008 9.28497 407.148 9.336 407.266 9.38702 cv
407.379 9.44501 407.461 9.492 407.512 9.52698 cv
407.559 9.57001 407.594 9.60901 407.617 9.64502 cv
407.637 9.68701 407.648 9.73401 407.66 9.78497 cv
407.668 9.84003 407.68 9.90601 407.688 9.98401 cv
407.695 10.07 407.699 10.168 407.699 10.285 cv
407.699 10.426 407.695 10.543 407.688 10.629 cv
407.68 10.723 407.664 10.793 407.648 10.84 cv
407.629 10.895 407.605 10.93 407.578 10.945 cv
407.543 10.969 407.508 10.977 407.469 10.973 cv
407.418 10.977 407.344 10.949 407.25 10.891 cv
407.148 10.84 407.027 10.781 406.879 10.715 cv
406.73 10.656 406.559 10.598 406.363 10.539 cv
406.168 10.488 405.945 10.461 405.699 10.457 cv
405.52 10.461 405.367 10.48 405.238 10.512 cv
405.105 10.551 404.996 10.602 404.918 10.668 cv
404.832 10.738 404.77 10.816 404.73 10.906 cv
404.684 11 404.664 11.098 404.668 11.199 cv
404.664 11.359 404.715 11.496 404.816 11.602 cv
404.914 11.715 405.043 11.809 405.207 11.891 cv
405.367 11.977 405.551 12.055 405.758 12.125 cv
405.961 12.199 406.168 12.281 406.379 12.363 cv
406.586 12.453 406.793 12.551 407.004 12.664 cv
407.207 12.777 407.391 12.918 407.551 13.082 cv
407.711 13.25 407.84 13.449 407.941 13.68 cv
408.035 13.914 408.086 14.187 408.09 14.5 cv
cp
f
416.848 12.812 mo
416.844 13.113 416.816 13.324 416.762 13.441 cv
416.703 13.566 416.613 13.625 416.488 13.621 cv
413.246 13.621 li
413.117 13.625 413.023 13.562 412.969 13.437 cv
412.906 13.316 412.879 13.109 412.883 12.812 cv
412.879 12.523 412.906 12.316 412.969 12.195 cv
413.023 12.078 413.117 12.02 413.246 12.016 cv
416.488 12.016 li
416.551 12.02 416.602 12.031 416.648 12.055 cv
416.688 12.082 416.727 12.129 416.762 12.187 cv
416.789 12.254 416.813 12.336 416.828 12.437 cv
416.84 12.543 416.844 12.668 416.848 12.812 cv
cp
f
429.52 16.465 mo
429.52 16.527 429.508 16.574 429.488 16.609 cv
429.469 16.652 429.422 16.684 429.344 16.707 cv
429.266 16.73 429.148 16.746 429 16.762 cv
428.844 16.77 428.641 16.777 428.383 16.777 cv
428.164 16.777 427.988 16.77 427.859 16.762 cv
427.73 16.746 427.629 16.73 427.555 16.703 cv
427.477 16.676 427.422 16.641 427.395 16.594 cv
427.359 16.555 427.336 16.5 427.316 16.434 cv
426.41 14.184 li
426.301 13.93 426.195 13.703 426.094 13.504 cv
425.984 13.309 425.871 13.145 425.746 13.012 cv
425.617 12.883 425.469 12.781 425.305 12.711 cv
425.137 12.645 424.945 12.613 424.73 12.609 cv
424.09 12.609 li
424.09 16.449 li
424.086 16.504 424.07 16.551 424.039 16.59 cv
424.004 16.633 423.949 16.668 423.871 16.691 cv
423.793 16.719 423.688 16.738 423.559 16.754 cv
423.426 16.77 423.262 16.777 423.063 16.777 cv
422.863 16.777 422.695 16.77 422.566 16.754 cv
422.43 16.738 422.324 16.719 422.25 16.691 cv
422.168 16.668 422.113 16.633 422.086 16.59 cv
422.051 16.551 422.035 16.504 422.039 16.449 cv
422.039 7.29303 li
422.035 7.06598 422.094 6.90198 422.215 6.797 cv
422.328 6.69897 422.473 6.64801 422.648 6.64502 cv
425.258 6.64502 li
425.52 6.64801 425.738 6.65198 425.914 6.65997 cv
426.082 6.672 426.238 6.68402 426.383 6.69897 cv
426.785 6.758 427.148 6.85901 427.473 6.99597 cv
427.797 7.14099 428.074 7.32397 428.301 7.547 cv
428.527 7.77698 428.699 8.04303 428.82 8.35199 cv
428.938 8.65997 428.996 9.01599 429 9.414 cv
428.996 9.75403 428.953 10.062 428.871 10.336 cv
428.781 10.617 428.656 10.863 428.492 11.082 cv
428.324 11.301 428.117 11.492 427.875 11.648 cv
427.629 11.812 427.352 11.941 427.043 12.039 cv
427.191 12.113 427.336 12.203 427.469 12.305 cv
427.602 12.414 427.723 12.539 427.84 12.684 cv
427.953 12.832 428.066 13 428.172 13.187 cv
428.273 13.379 428.375 13.594 428.477 13.832 cv
429.328 15.82 li
429.402 16.02 429.453 16.16 429.48 16.25 cv
429.504 16.344 429.52 16.418 429.52 16.465 cv
cp
426.879 9.625 mo
426.875 9.29303 426.801 9.01202 426.652 8.78101 cv
426.5 8.55499 426.254 8.39502 425.914 8.297 cv
425.809 8.27301 425.691 8.25 425.559 8.23401 cv
425.426 8.21899 425.242 8.211 425.008 8.211 cv
424.09 8.211 li
424.09 11.074 li
425.133 11.074 li
425.422 11.078 425.68 11.043 425.898 10.969 cv
426.117 10.902 426.297 10.801 426.441 10.672 cv
426.586 10.547 426.695 10.395 426.77 10.215 cv
426.84 10.039 426.875 9.84399 426.879 9.625 cv
cp
f
437.105 12.789 mo
437.102 13.027 437.051 13.203 436.945 13.316 cv
436.836 13.434 436.688 13.492 436.508 13.488 cv
432.273 13.488 li
432.27 13.789 432.305 14.059 432.379 14.297 cv
432.445 14.539 432.559 14.742 432.715 14.91 cv
432.867 15.082 433.063 15.211 433.305 15.297 cv
433.543 15.387 433.832 15.43 434.176 15.43 cv
434.516 15.43 434.816 15.406 435.078 15.355 cv
435.336 15.309 435.563 15.254 435.754 15.191 cv
435.941 15.133 436.098 15.078 436.227 15.027 cv
436.348 14.98 436.449 14.957 436.531 14.953 cv
436.574 14.957 436.613 14.965 436.648 14.98 cv
436.676 15 436.703 15.031 436.723 15.078 cv
436.742 15.125 436.754 15.191 436.766 15.277 cv
436.77 15.363 436.773 15.473 436.777 15.602 cv
436.773 15.719 436.773 15.816 436.77 15.895 cv
436.762 15.977 436.754 16.043 436.746 16.098 cv
436.734 16.156 436.719 16.207 436.699 16.242 cv
436.68 16.285 436.652 16.32 436.621 16.355 cv
436.586 16.395 436.492 16.445 436.344 16.504 cv
436.188 16.57 435.996 16.633 435.766 16.687 cv
435.527 16.75 435.258 16.797 434.961 16.844 cv
434.656 16.883 434.336 16.906 433.996 16.91 cv
433.375 16.906 432.832 16.832 432.371 16.676 cv
431.902 16.523 431.516 16.285 431.207 15.969 cv
430.891 15.652 430.656 15.254 430.508 14.77 cv
430.352 14.289 430.277 13.723 430.281 13.066 cv
430.277 12.453 430.355 11.895 430.52 11.398 cv
430.676 10.902 430.91 10.484 431.223 10.137 cv
431.527 9.79303 431.902 9.52698 432.34 9.34399 cv
432.777 9.164 433.27 9.07397 433.824 9.07001 cv
434.402 9.07397 434.902 9.15997 435.316 9.328 cv
435.73 9.50403 436.066 9.742 436.332 10.043 cv
436.594 10.348 436.789 10.707 436.918 11.121 cv
437.039 11.539 437.102 11.988 437.105 12.477 cv
cp
435.203 12.227 mo
435.215 11.676 435.105 11.242 434.871 10.93 cv
434.637 10.617 434.27 10.461 433.777 10.457 cv
433.527 10.461 433.313 10.508 433.129 10.598 cv
432.941 10.695 432.789 10.82 432.668 10.977 cv
432.543 11.137 432.449 11.324 432.387 11.539 cv
432.32 11.754 432.281 11.984 432.273 12.227 cv
cp
f
449.77 16.465 mo
449.766 16.52 449.75 16.562 449.723 16.602 cv
449.688 16.641 449.637 16.676 449.566 16.699 cv
449.492 16.727 449.391 16.742 449.27 16.758 cv
449.145 16.77 448.988 16.777 448.797 16.777 cv
448.598 16.777 448.438 16.77 448.313 16.758 cv
448.188 16.742 448.086 16.727 448.012 16.699 cv
447.934 16.676 447.883 16.641 447.855 16.602 cv
447.828 16.562 447.813 16.52 447.816 16.465 cv
447.816 12.344 li
447.813 12.113 447.793 11.898 447.75 11.703 cv
447.703 11.512 447.633 11.348 447.547 11.211 cv
447.453 11.074 447.34 10.969 447.203 10.891 cv
447.063 10.816 446.898 10.777 446.707 10.777 cv
446.473 10.777 446.234 10.871 445.996 11.051 cv
445.758 11.234 445.5 11.496 445.219 11.844 cv
445.219 16.465 li
445.219 16.52 445.203 16.562 445.172 16.602 cv
445.141 16.641 445.086 16.676 445.012 16.699 cv
444.934 16.727 444.832 16.742 444.711 16.758 cv
444.586 16.77 444.434 16.777 444.246 16.777 cv
444.051 16.777 443.891 16.77 443.77 16.758 cv
443.641 16.742 443.539 16.727 443.469 16.699 cv
443.391 16.676 443.34 16.641 443.309 16.602 cv
443.277 16.562 443.262 16.52 443.262 16.465 cv
443.262 12.344 li
443.262 12.113 443.238 11.898 443.195 11.703 cv
443.152 11.512 443.086 11.348 443 11.211 cv
442.906 11.074 442.793 10.969 442.656 10.891 cv
442.512 10.816 442.348 10.777 442.164 10.777 cv
441.922 10.777 441.684 10.871 441.445 11.051 cv
441.207 11.234 440.949 11.496 440.676 11.844 cv
440.676 16.465 li
440.672 16.52 440.656 16.562 440.629 16.602 cv
440.594 16.641 440.539 16.676 440.469 16.699 cv
440.391 16.727 440.293 16.742 440.168 16.758 cv
440.043 16.77 439.883 16.777 439.695 16.777 cv
439.5 16.777 439.344 16.77 439.219 16.758 cv
439.094 16.742 438.992 16.727 438.918 16.699 cv
438.84 16.676 438.785 16.641 438.758 16.602 cv
438.723 16.562 438.707 16.52 438.711 16.465 cv
438.711 9.51599 li
438.707 9.46899 438.723 9.422 438.75 9.37903 cv
438.773 9.34399 438.82 9.31201 438.891 9.28101 cv
438.957 9.258 439.043 9.23798 439.152 9.22302 cv
439.258 9.21503 439.391 9.20697 439.555 9.203 cv
439.719 9.20697 439.855 9.21503 439.965 9.22302 cv
440.07 9.23798 440.156 9.258 440.219 9.28101 cv
440.277 9.31201 440.32 9.34399 440.348 9.37903 cv
440.371 9.422 440.383 9.46899 440.387 9.51599 cv
440.387 10.316 li
440.77 9.90601 441.152 9.59399 441.535 9.383 cv
441.914 9.17603 442.316 9.07397 442.734 9.07001 cv
443.02 9.07397 443.273 9.10199 443.504 9.15997 cv
443.73 9.22302 443.938 9.30902 444.117 9.41803 cv
444.297 9.53101 444.449 9.66803 444.578 9.82001 cv
444.707 9.97699 444.816 10.148 444.906 10.34 cv
445.113 10.117 445.316 9.92603 445.52 9.76599 cv
445.715 9.60498 445.914 9.47302 446.109 9.37097 cv
446.305 9.27002 446.5 9.19501 446.695 9.14502 cv
446.891 9.09802 447.09 9.07397 447.293 9.07001 cv
447.754 9.07397 448.141 9.15198 448.461 9.30499 cv
448.773 9.46503 449.031 9.67603 449.227 9.94098 cv
449.422 10.211 449.559 10.523 449.645 10.879 cv
449.723 11.238 449.766 11.617 449.77 12.016 cv
cp
f
458.719 12.918 mo
458.715 13.516 458.637 14.059 458.484 14.543 cv
458.324 15.035 458.09 15.453 457.773 15.805 cv
457.457 16.156 457.059 16.43 456.582 16.621 cv
456.102 16.812 455.543 16.906 454.906 16.91 cv
454.285 16.906 453.746 16.824 453.293 16.652 cv
452.832 16.484 452.453 16.234 452.156 15.906 cv
451.852 15.582 451.629 15.18 451.484 14.699 cv
451.34 14.223 451.27 13.676 451.27 13.059 cv
451.27 12.469 451.348 11.93 451.504 11.437 cv
451.66 10.949 451.898 10.527 452.219 10.176 cv
452.535 9.828 452.93 9.55499 453.406 9.35901 cv
453.879 9.16803 454.438 9.07397 455.078 9.07001 cv
455.703 9.07397 456.242 9.15601 456.699 9.32397 cv
457.156 9.49597 457.535 9.74597 457.832 10.07 cv
458.129 10.398 458.352 10.801 458.5 11.277 cv
458.645 11.758 458.715 12.305 458.719 12.918 cv
cp
456.699 12.996 mo
456.695 12.66 456.668 12.344 456.617 12.051 cv
456.559 11.766 456.465 11.516 456.34 11.301 cv
456.207 11.09 456.035 10.922 455.824 10.801 cv
455.605 10.684 455.336 10.625 455.008 10.621 cv
454.719 10.625 454.465 10.68 454.246 10.781 cv
454.027 10.891 453.848 11.047 453.707 11.25 cv
453.566 11.457 453.461 11.703 453.391 11.988 cv
453.32 12.281 453.285 12.609 453.285 12.973 cv
453.285 13.32 453.313 13.637 453.371 13.922 cv
453.426 14.215 453.52 14.465 453.648 14.676 cv
453.773 14.891 453.945 15.055 454.168 15.168 cv
454.383 15.289 454.652 15.348 454.977 15.344 cv
455.27 15.348 455.527 15.293 455.75 15.184 cv
455.965 15.078 456.145 14.926 456.285 14.719 cv
456.426 14.52 456.527 14.273 456.598 13.984 cv
456.66 13.699 456.695 13.371 456.699 12.996 cv
cp
f
464.422 15.781 mo
464.422 16.008 464.406 16.184 464.379 16.305 cv
464.348 16.43 464.309 16.516 464.266 16.562 cv
464.215 16.613 464.148 16.656 464.059 16.695 cv
463.965 16.734 463.855 16.766 463.738 16.797 cv
463.613 16.82 463.48 16.844 463.34 16.863 cv
463.195 16.875 463.055 16.883 462.91 16.887 cv
462.52 16.883 462.18 16.832 461.895 16.738 cv
461.609 16.637 461.375 16.488 461.188 16.281 cv
461 16.078 460.859 15.82 460.773 15.508 cv
460.68 15.199 460.637 14.828 460.641 14.398 cv
460.641 10.84 li
459.809 10.84 li
459.707 10.844 459.633 10.781 459.582 10.656 cv
459.527 10.535 459.5 10.332 459.504 10.043 cv
459.5 9.89502 459.508 9.76599 459.523 9.664 cv
459.535 9.56201 459.555 9.47998 459.582 9.41803 cv
459.605 9.35901 459.637 9.31598 459.68 9.289 cv
459.715 9.26599 459.762 9.25403 459.816 9.25 cv
460.641 9.25 li
460.641 7.69897 li
460.637 7.65198 460.652 7.60498 460.684 7.55902 cv
460.711 7.52002 460.762 7.48401 460.84 7.453 cv
460.914 7.42999 461.016 7.40601 461.145 7.39099 cv
461.27 7.37903 461.426 7.375 461.617 7.37097 cv
461.805 7.375 461.965 7.37903 462.094 7.39099 cv
462.219 7.40601 462.32 7.42999 462.395 7.453 cv
462.465 7.48401 462.516 7.52002 462.551 7.55902 cv
462.578 7.60498 462.594 7.65198 462.598 7.69897 cv
462.598 9.25 li
464.109 9.25 li
464.16 9.25403 464.207 9.26599 464.246 9.289 cv
464.285 9.31598 464.316 9.35901 464.344 9.41803 cv
464.367 9.47998 464.387 9.56201 464.402 9.664 cv
464.414 9.76599 464.422 9.89502 464.422 10.043 cv
464.422 10.332 464.395 10.535 464.344 10.656 cv
464.289 10.781 464.215 10.844 464.117 10.84 cv
462.598 10.84 li
462.598 14.105 li
462.594 14.484 462.652 14.77 462.777 14.957 cv
462.895 15.148 463.109 15.242 463.414 15.242 cv
463.516 15.242 463.609 15.234 463.695 15.215 cv
463.777 15.199 463.852 15.18 463.918 15.152 cv
463.98 15.133 464.035 15.109 464.082 15.09 cv
464.125 15.074 464.164 15.066 464.203 15.062 cv
464.23 15.066 464.262 15.074 464.293 15.09 cv
464.32 15.109 464.34 15.148 464.359 15.199 cv
464.371 15.258 464.387 15.332 464.402 15.422 cv
464.414 15.52 464.422 15.637 464.422 15.781 cv
cp
f
472.008 12.789 mo
472.004 13.027 471.953 13.203 471.848 13.316 cv
471.738 13.434 471.59 13.492 471.41 13.488 cv
467.176 13.488 li
467.172 13.789 467.207 14.059 467.281 14.297 cv
467.348 14.539 467.461 14.742 467.617 14.91 cv
467.77 15.082 467.965 15.211 468.207 15.297 cv
468.445 15.387 468.734 15.43 469.078 15.43 cv
469.418 15.43 469.719 15.406 469.98 15.355 cv
470.238 15.309 470.465 15.254 470.656 15.191 cv
470.844 15.133 471 15.078 471.129 15.027 cv
471.25 14.98 471.352 14.957 471.434 14.953 cv
471.477 14.957 471.516 14.965 471.551 14.98 cv
471.578 15 471.605 15.031 471.625 15.078 cv
471.645 15.125 471.656 15.191 471.668 15.277 cv
471.672 15.363 471.676 15.473 471.68 15.602 cv
471.676 15.719 471.676 15.816 471.672 15.895 cv
471.664 15.977 471.656 16.043 471.648 16.098 cv
471.637 16.156 471.621 16.207 471.602 16.242 cv
471.582 16.285 471.555 16.32 471.523 16.355 cv
471.488 16.395 471.395 16.445 471.246 16.504 cv
471.09 16.57 470.898 16.633 470.668 16.687 cv
470.43 16.75 470.16 16.797 469.863 16.844 cv
469.559 16.883 469.238 16.906 468.898 16.91 cv
468.277 16.906 467.734 16.832 467.273 16.676 cv
466.805 16.523 466.418 16.285 466.109 15.969 cv
465.793 15.652 465.559 15.254 465.41 14.77 cv
465.254 14.289 465.18 13.723 465.184 13.066 cv
465.18 12.453 465.258 11.895 465.422 11.398 cv
465.578 10.902 465.813 10.484 466.125 10.137 cv
466.43 9.79303 466.805 9.52698 467.242 9.34399 cv
467.68 9.164 468.172 9.07397 468.727 9.07001 cv
469.305 9.07397 469.805 9.15997 470.219 9.328 cv
470.633 9.50403 470.969 9.742 471.234 10.043 cv
471.496 10.348 471.691 10.707 471.82 11.121 cv
471.941 11.539 472.004 11.988 472.008 12.477 cv
cp
470.105 12.227 mo
470.117 11.676 470.008 11.242 469.773 10.93 cv
469.539 10.617 469.172 10.461 468.68 10.457 cv
468.43 10.461 468.215 10.508 468.031 10.598 cv
467.844 10.695 467.691 10.82 467.57 10.977 cv
467.445 11.137 467.352 11.324 467.289 11.539 cv
467.223 11.754 467.184 11.984 467.176 12.227 cv
cp
f
489.203 16.449 mo
489.199 16.504 489.188 16.551 489.16 16.59 cv
489.129 16.633 489.074 16.668 489.004 16.691 cv
488.926 16.719 488.828 16.738 488.703 16.754 cv
488.578 16.77 488.418 16.777 488.227 16.777 cv
488.039 16.777 487.883 16.77 487.762 16.754 cv
487.633 16.738 487.535 16.719 487.465 16.691 cv
487.391 16.668 487.34 16.633 487.309 16.59 cv
487.277 16.551 487.262 16.504 487.262 16.449 cv
487.262 8.242 li
487.246 8.242 li
484.324 16.441 li
484.301 16.512 484.266 16.566 484.223 16.609 cv
484.172 16.656 484.109 16.691 484.031 16.715 cv
483.949 16.742 483.848 16.758 483.723 16.766 cv
483.598 16.773 483.445 16.777 483.273 16.777 cv
483.094 16.777 482.945 16.77 482.82 16.758 cv
482.695 16.742 482.59 16.723 482.512 16.695 cv
482.426 16.668 482.363 16.633 482.32 16.59 cv
482.27 16.551 482.238 16.504 482.227 16.441 cv
479.406 8.242 li
479.391 8.242 li
479.391 16.449 li
479.387 16.504 479.371 16.551 479.348 16.59 cv
479.316 16.633 479.266 16.668 479.188 16.691 cv
479.109 16.719 479.008 16.738 478.887 16.754 cv
478.762 16.77 478.605 16.777 478.418 16.777 cv
478.227 16.777 478.07 16.77 477.949 16.754 cv
477.82 16.738 477.719 16.719 477.648 16.691 cv
477.57 16.668 477.52 16.633 477.492 16.59 cv
477.461 16.551 477.445 16.504 477.449 16.449 cv
477.449 7.46503 li
477.445 7.203 477.516 7 477.66 6.85498 cv
477.797 6.71899 477.984 6.64801 478.223 6.64502 cv
479.563 6.64502 li
479.801 6.64801 480.004 6.66803 480.176 6.703 cv
480.344 6.74597 480.492 6.80902 480.621 6.89801 cv
480.742 6.992 480.848 7.11298 480.934 7.258 cv
481.016 7.40997 481.086 7.59399 481.152 7.80902 cv
483.336 13.816 li
483.367 13.816 li
485.625 7.82397 li
485.691 7.60498 485.766 7.422 485.848 7.27002 cv
485.926 7.12097 486.02 7 486.129 6.90198 cv
486.234 6.81201 486.359 6.74597 486.504 6.703 cv
486.648 6.66803 486.816 6.64801 487.012 6.64502 cv
488.391 6.64502 li
488.527 6.64801 488.648 6.664 488.754 6.69897 cv
488.852 6.73798 488.934 6.79303 489.004 6.85901 cv
489.066 6.93402 489.117 7.02002 489.152 7.117 cv
489.184 7.22302 489.199 7.34003 489.203 7.46503 cv
cp
f
498.313 12.918 mo
498.309 13.516 498.23 14.059 498.078 14.543 cv
497.918 15.035 497.684 15.453 497.367 15.805 cv
497.051 16.156 496.652 16.43 496.176 16.621 cv
495.695 16.812 495.137 16.906 494.5 16.91 cv
493.879 16.906 493.34 16.824 492.887 16.652 cv
492.426 16.484 492.047 16.234 491.75 15.906 cv
491.445 15.582 491.223 15.18 491.078 14.699 cv
490.934 14.223 490.863 13.676 490.863 13.059 cv
490.863 12.469 490.941 11.93 491.098 11.437 cv
491.254 10.949 491.492 10.527 491.813 10.176 cv
492.129 9.828 492.523 9.55499 493 9.35901 cv
493.473 9.16803 494.031 9.07397 494.672 9.07001 cv
495.297 9.07397 495.836 9.15601 496.293 9.32397 cv
496.75 9.49597 497.129 9.74597 497.426 10.07 cv
497.723 10.398 497.945 10.801 498.094 11.277 cv
498.238 11.758 498.309 12.305 498.313 12.918 cv
cp
496.293 12.996 mo
496.289 12.66 496.262 12.344 496.211 12.051 cv
496.152 11.766 496.059 11.516 495.934 11.301 cv
495.801 11.09 495.629 10.922 495.418 10.801 cv
495.199 10.684 494.93 10.625 494.602 10.621 cv
494.313 10.625 494.059 10.68 493.84 10.781 cv
493.621 10.891 493.441 11.047 493.301 11.25 cv
493.16 11.457 493.055 11.703 492.984 11.988 cv
492.914 12.281 492.879 12.609 492.879 12.973 cv
492.879 13.32 492.906 13.637 492.965 13.922 cv
493.02 14.215 493.113 14.465 493.242 14.676 cv
493.367 14.891 493.539 15.055 493.762 15.168 cv
493.977 15.289 494.246 15.348 494.57 15.344 cv
494.863 15.348 495.121 15.293 495.344 15.184 cv
495.559 15.078 495.738 14.926 495.879 14.719 cv
496.02 14.52 496.121 14.273 496.191 13.984 cv
496.254 13.699 496.289 13.371 496.293 12.996 cv
cp
f
506.461 16.465 mo
506.457 16.527 506.445 16.574 506.422 16.609 cv
506.395 16.652 506.348 16.684 506.289 16.707 cv
506.223 16.73 506.141 16.746 506.035 16.762 cv
505.93 16.77 505.797 16.777 505.645 16.777 cv
505.473 16.777 505.34 16.77 505.238 16.762 cv
505.133 16.746 505.047 16.73 504.984 16.707 cv
504.918 16.684 504.871 16.652 504.844 16.609 cv
504.813 16.574 504.797 16.527 504.801 16.465 cv
504.801 15.695 li
504.441 16.082 504.066 16.379 503.676 16.59 cv
503.277 16.801 502.844 16.906 502.371 16.91 cv
501.836 16.906 501.387 16.805 501.023 16.602 cv
500.656 16.398 500.359 16.125 500.129 15.773 cv
499.895 15.43 499.727 15.023 499.625 14.555 cv
499.523 14.094 499.473 13.602 499.473 13.082 cv
499.473 12.469 499.535 11.914 499.668 11.418 cv
499.797 10.926 499.992 10.504 500.25 10.156 cv
500.504 9.80902 500.82 9.54303 501.199 9.35199 cv
501.578 9.16803 502.016 9.07397 502.512 9.07001 cv
502.898 9.07397 503.25 9.15198 503.57 9.30902 cv
503.883 9.46899 504.199 9.69897 504.512 10.004 cv
504.512 6.242 li
504.512 6.19098 504.523 6.14502 504.555 6.10199 cv
504.578 6.06201 504.633 6.02698 504.711 5.99597 cv
504.785 5.96899 504.883 5.94897 505.012 5.92999 cv
505.133 5.91803 505.293 5.90997 505.488 5.90601 cv
505.68 5.90997 505.836 5.91803 505.961 5.92999 cv
506.082 5.94897 506.184 5.96899 506.258 5.99597 cv
506.328 6.02698 506.379 6.06201 506.414 6.10199 cv
506.441 6.14502 506.457 6.19098 506.461 6.242 cv
cp
504.512 11.82 mo
504.23 11.469 503.961 11.199 503.707 11.012 cv
503.445 10.824 503.176 10.73 502.898 10.73 cv
502.645 10.73 502.426 10.797 502.242 10.922 cv
502.055 11.055 501.906 11.223 501.797 11.434 cv
501.684 11.645 501.602 11.883 501.547 12.145 cv
501.492 12.41 501.465 12.68 501.465 12.949 cv
501.465 13.246 501.488 13.527 501.535 13.801 cv
501.582 14.078 501.656 14.324 501.766 14.539 cv
501.867 14.754 502.012 14.926 502.191 15.055 cv
502.367 15.187 502.59 15.254 502.859 15.25 cv
502.992 15.254 503.121 15.234 503.254 15.191 cv
503.379 15.156 503.512 15.094 503.645 15 cv
503.777 14.914 503.914 14.797 504.055 14.652 cv
504.195 14.512 504.348 14.336 504.512 14.129 cv
cp
f
514.863 12.789 mo
514.859 13.027 514.809 13.203 514.703 13.316 cv
514.594 13.434 514.445 13.492 514.266 13.488 cv
510.031 13.488 li
510.027 13.789 510.063 14.059 510.137 14.297 cv
510.203 14.539 510.316 14.742 510.473 14.91 cv
510.625 15.082 510.82 15.211 511.063 15.297 cv
511.301 15.387 511.59 15.43 511.934 15.43 cv
512.273 15.43 512.574 15.406 512.836 15.355 cv
513.094 15.309 513.32 15.254 513.512 15.191 cv
513.699 15.133 513.855 15.078 513.984 15.027 cv
514.105 14.98 514.207 14.957 514.289 14.953 cv
514.332 14.957 514.371 14.965 514.406 14.98 cv
514.434 15 514.461 15.031 514.48 15.078 cv
514.5 15.125 514.512 15.191 514.523 15.277 cv
514.527 15.363 514.531 15.473 514.535 15.602 cv
514.531 15.719 514.531 15.816 514.527 15.895 cv
514.52 15.977 514.512 16.043 514.504 16.098 cv
514.492 16.156 514.477 16.207 514.457 16.242 cv
514.438 16.285 514.41 16.32 514.379 16.355 cv
514.344 16.395 514.25 16.445 514.102 16.504 cv
513.945 16.57 513.754 16.633 513.523 16.687 cv
513.285 16.75 513.016 16.797 512.719 16.844 cv
512.414 16.883 512.094 16.906 511.754 16.91 cv
511.133 16.906 510.59 16.832 510.129 16.676 cv
509.66 16.523 509.273 16.285 508.965 15.969 cv
508.648 15.652 508.414 15.254 508.266 14.77 cv
508.109 14.289 508.035 13.723 508.039 13.066 cv
508.035 12.453 508.113 11.895 508.277 11.398 cv
508.434 10.902 508.668 10.484 508.98 10.137 cv
509.285 9.79303 509.66 9.52698 510.098 9.34399 cv
510.535 9.164 511.027 9.07397 511.582 9.07001 cv
512.16 9.07397 512.66 9.15997 513.074 9.328 cv
513.488 9.50403 513.824 9.742 514.09 10.043 cv
514.352 10.348 514.547 10.707 514.676 11.121 cv
514.797 11.539 514.859 11.988 514.863 12.477 cv
cp
512.961 12.227 mo
512.973 11.676 512.863 11.242 512.629 10.93 cv
512.395 10.617 512.027 10.461 511.535 10.457 cv
511.285 10.461 511.07 10.508 510.887 10.598 cv
510.699 10.695 510.547 10.82 510.426 10.977 cv
510.301 11.137 510.207 11.324 510.145 11.539 cv
510.078 11.754 510.039 11.984 510.031 12.227 cv
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
