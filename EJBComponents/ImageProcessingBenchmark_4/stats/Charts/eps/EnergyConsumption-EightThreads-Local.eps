%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-EightThreads-Local.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 9/12/2018, 2:27:26 p.m.
%%BoundingBox: 0 0 641 523
%%HiResBoundingBox: 0 0 640.4401 522.8400
%%CropBox: 0 0 640.4401 522.8400
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -522.84 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 522.84 li
640.44 522.84 li
640.44 0 li
cp
clp
0 -6.10352e-5 mo
640.441 -6.10352e-5 li
640.441 522.84 li
0 522.84 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
60.359 465.121 mo
624.719 465.121 li
60.359 439.801 mo
624.719 439.801 li
60.359 414.602 mo
624.719 414.602 li
60.359 389.398 mo
624.719 389.398 li
60.359 364.199 mo
624.719 364.199 li
60.359 339 mo
624.719 339 li
60.359 313.801 mo
624.719 313.801 li
60.359 288.602 mo
624.719 288.602 li
60.359 263.398 mo
624.719 263.398 li
60.359 238.078 mo
624.719 238.078 li
60.359 212.879 mo
624.719 212.879 li
60.359 187.68 mo
624.719 187.68 li
60.359 162.481 mo
624.719 162.481 li
60.359 137.281 mo
624.719 137.281 li
60.359 112.078 mo
624.719 112.078 li
60.359 86.879 mo
624.719 86.879 li
60.359 61.68 mo
624.719 61.68 li
60.359 36.481 mo
624.719 36.481 li
.135805 .104005 .108583 0 cmyk
@
60.359 452.398 mo
624.719 452.398 li
60.359 427.199 mo
624.719 427.199 li
60.359 402 mo
624.719 402 li
60.359 376.801 mo
624.719 376.801 li
60.359 351.602 mo
624.719 351.602 li
60.359 326.398 mo
624.719 326.398 li
60.359 301.199 mo
624.719 301.199 li
60.359 276 mo
624.719 276 li
60.359 250.801 mo
624.719 250.801 li
60.359 225.481 mo
624.719 225.481 li
60.359 200.281 mo
624.719 200.281 li
60.359 175.078 mo
624.719 175.078 li
60.359 149.879 mo
624.719 149.879 li
60.359 124.68 mo
624.719 124.68 li
60.359 99.481 mo
624.719 99.481 li
60.359 74.281 mo
624.719 74.281 li
60.359 49.078 mo
624.719 49.078 li
60.359 23.762 mo
624.719 23.762 li
.326574 .281529 .277562 0 cmyk
@
95.641 23.762 mo
95.641 477.719 li
166.078 23.762 mo
166.078 477.719 li
236.641 23.762 mo
236.641 477.719 li
307.199 23.762 mo
307.199 477.719 li
377.762 23.762 mo
377.762 477.719 li
448.32 23.762 mo
448.32 477.719 li
518.879 23.762 mo
518.879 477.719 li
589.441 23.762 mo
589.441 477.719 li
.175235 .144778 .143648 0 cmyk
@
60.359 23.762 mo
60.359 477.719 li
130.922 23.762 mo
130.922 477.719 li
201.359 23.762 mo
201.359 477.719 li
271.922 23.762 mo
271.922 477.719 li
342.48 23.762 mo
342.48 477.719 li
413.039 23.762 mo
413.039 477.719 li
483.602 23.762 mo
483.602 477.719 li
554.16 23.762 mo
554.16 477.719 li
624.719 23.762 mo
624.719 477.719 li
.326574 .281529 .277562 0 cmyk
@
40.199 468.359 mo
47.281 468.359 li
47.281 485.398 li
40.199 485.398 li
cp
0 0 0 0 cmyk
ef
40.199 443.16 mo
47.281 443.16 li
47.281 460.199 li
40.199 460.199 li
cp
ef
40.199 417.961 mo
47.281 417.961 li
47.281 435 li
40.199 435 li
cp
ef
40.199 392.762 mo
47.281 392.762 li
47.281 409.801 li
40.199 409.801 li
cp
ef
40.199 367.441 mo
47.281 367.441 li
47.281 384.601 li
40.199 384.601 li
cp
ef
33.121 342.238 mo
47.281 342.238 li
47.281 359.398 li
33.121 359.398 li
cp
ef
33.121 317.039 mo
47.281 317.039 li
47.281 334.199 li
33.121 334.199 li
cp
ef
33.121 291.84 mo
47.281 291.84 li
47.281 309 li
33.121 309 li
cp
ef
33.121 266.641 mo
47.281 266.641 li
47.281 283.68 li
33.121 283.68 li
cp
ef
33.121 241.441 mo
47.281 241.441 li
47.281 258.48 li
33.121 258.48 li
cp
ef
33.121 216.238 mo
47.281 216.238 li
47.281 233.281 li
33.121 233.281 li
cp
ef
33.121 191.039 mo
47.281 191.039 li
47.281 208.078 li
33.121 208.078 li
cp
ef
33.121 165.84 mo
47.281 165.84 li
47.281 182.879 li
33.121 182.879 li
cp
ef
33.121 140.52 mo
47.281 140.52 li
47.281 157.68 li
33.121 157.68 li
cp
ef
33.121 115.32 mo
47.281 115.32 li
47.281 132.48 li
33.121 132.48 li
cp
ef
33.121 90.121 mo
47.281 90.121 li
47.281 107.281 li
33.121 107.281 li
cp
ef
33.121 64.922 mo
47.281 64.922 li
47.281 81.961 li
33.121 81.961 li
cp
ef
33.121 39.719 mo
47.281 39.719 li
47.281 56.762 li
33.121 56.762 li
cp
ef
33.121 14.52 mo
47.281 14.52 li
47.281 31.559 li
33.121 31.559 li
cp
ef
.96 lw
60.359 477.719 mo
624.719 477.719 li
.369879 .299321 .304356 .000976577 cmyk
@
60.359 477.719 mo
60.359 482.16 li
130.922 477.719 mo
130.922 482.16 li
201.359 477.719 mo
201.359 482.16 li
271.922 477.719 mo
271.922 482.16 li
342.48 477.719 mo
342.48 482.16 li
413.039 477.719 mo
413.039 482.16 li
483.602 477.719 mo
483.602 482.16 li
554.16 477.719 mo
554.16 482.16 li
624.719 477.719 mo
624.719 482.16 li
@
gsave
60.238 23.762 mo
625.441 23.762 li
625.441 478.321 li
60.238 478.321 li
cp
clp
1 lc
60.359 465.359 mo
130.922 469.441 li
201.359 472.32 li
271.922 471.359 li
342.48 471.359 li
413.039 469.801 li
554.16 469.801 li
624.719 470.16 li
.62829 .284672 0 0 cmyk
@
grestore
1 lw
65.23 470.359 mo
55.148 460.281 li
55.148 470.359 mo
65.23 460.281 li
.62829 .284672 0 0 cmyk
@
135.789 474.441 mo
125.711 464.359 li
125.711 474.441 mo
135.789 464.359 li
@
206.352 477.32 mo
196.27 467.238 li
196.27 477.32 mo
206.352 467.238 li
@
276.91 476.359 mo
266.828 466.281 li
266.828 476.359 mo
276.91 466.281 li
@
347.469 476.359 mo
337.391 466.281 li
337.391 476.359 mo
347.469 466.281 li
@
418.031 474.801 mo
407.949 464.719 li
407.949 474.801 mo
418.031 464.719 li
@
488.59 474.801 mo
478.512 464.719 li
478.512 474.801 mo
488.59 464.719 li
@
559.148 474.801 mo
549.07 464.719 li
549.07 474.801 mo
559.148 464.719 li
@
629.711 475.16 mo
619.629 465.078 li
619.629 475.16 mo
629.711 465.078 li
@
gsave
60.238 23.762 mo
625.441 23.762 li
625.441 478.321 li
60.238 478.321 li
cp
clp
.96 lw
1 lc
60.359 444.121 mo
130.922 456.48 li
201.359 462.48 li
271.922 462.48 li
342.48 461.16 li
413.039 457.199 li
483.602 459.719 li
554.16 454.559 li
624.719 461.762 li
.467353 0 .87747 0 cmyk
@
grestore
65.23 449 mo
55.148 438.922 li
55.148 449 mo
65.23 438.922 li
.467353 0 .87747 0 cmyk
@
135.789 461.359 mo
125.711 451.281 li
125.711 461.359 mo
135.789 451.281 li
@
206.352 467.359 mo
196.27 457.281 li
196.27 467.359 mo
206.352 457.281 li
@
276.91 467.359 mo
266.828 457.281 li
266.828 467.359 mo
276.91 457.281 li
@
347.469 466.16 mo
337.391 456.078 li
337.391 466.16 mo
347.469 456.078 li
@
418.031 462.199 mo
407.949 452.121 li
407.949 462.199 mo
418.031 452.121 li
@
488.59 464.602 mo
478.512 454.52 li
478.512 464.602 mo
488.59 454.52 li
@
559.148 459.441 mo
549.07 449.359 li
549.07 459.441 mo
559.148 449.359 li
@
629.711 466.641 mo
619.629 456.559 li
619.629 466.641 mo
629.711 456.559 li
@
gsave
60.238 23.762 mo
625.441 23.762 li
625.441 478.321 li
60.238 478.321 li
cp
clp
.96 lw
1 lc
60.359 362.398 mo
130.922 405.48 li
201.359 422.039 li
271.922 422.039 li
342.48 415.922 li
413.039 413.398 li
483.602 403.559 li
554.16 411 li
624.719 411.48 li
0 .993988 1 0 cmyk
@
grestore
65.23 367.398 mo
55.148 357.32 li
55.148 367.398 mo
65.23 357.32 li
0 .993988 1 0 cmyk
@
135.789 410.481 mo
125.711 400.398 li
125.711 410.481 mo
135.789 400.398 li
@
206.352 427.039 mo
196.27 416.961 li
196.27 427.039 mo
206.352 416.961 li
@
276.91 427.039 mo
266.828 416.961 li
266.828 427.039 mo
276.91 416.961 li
@
347.469 420.801 mo
337.391 410.719 li
337.391 420.801 mo
347.469 410.719 li
@
418.031 418.281 mo
407.949 408.199 li
407.949 418.281 mo
418.031 408.199 li
@
488.59 408.441 mo
478.512 398.359 li
478.512 408.441 mo
488.59 398.359 li
@
559.148 415.879 mo
549.07 405.801 li
549.07 415.879 mo
559.148 405.801 li
@
629.711 416.481 mo
619.629 406.398 li
619.629 416.481 mo
629.711 406.398 li
@
gsave
60.238 23.762 mo
625.441 23.762 li
625.441 478.321 li
60.238 478.321 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
60.359 402.961 mo
130.922 430.078 li
201.359 441.719 li
271.922 437.398 li
342.48 443.281 li
413.039 437.879 li
483.602 435.359 li
554.16 428.398 li
624.719 426.84 li
@
grestore
65.23 407.84 mo
55.148 397.762 li
55.148 407.84 mo
65.23 397.762 li
@
135.789 435.078 mo
125.711 425 li
125.711 435.078 mo
135.789 425 li
@
206.352 446.602 mo
196.27 436.52 li
196.27 446.602 mo
206.352 436.52 li
@
276.91 442.398 mo
266.828 432.32 li
266.828 442.398 mo
276.91 432.32 li
@
347.469 448.16 mo
337.391 438.078 li
337.391 448.16 mo
347.469 438.078 li
@
418.031 442.762 mo
407.949 432.68 li
407.949 442.762 mo
418.031 432.68 li
@
488.59 440.238 mo
478.512 430.16 li
478.512 440.238 mo
488.59 430.16 li
@
559.148 433.398 mo
549.07 423.32 li
549.07 433.398 mo
559.148 423.32 li
@
629.711 431.84 mo
619.629 421.762 li
619.629 431.84 mo
629.711 421.762 li
@
gsave
60.238 23.762 mo
625.441 23.762 li
625.441 478.321 li
60.238 478.321 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
60.359 273.602 mo
130.922 349.68 li
201.359 379.68 li
271.922 376.559 li
342.48 379.68 li
413.039 367.078 li
483.602 340.922 li
554.16 369.719 li
624.719 339.84 li
.62829 .284672 0 0 cmyk
@
grestore
64.75 278 mo
55.629 268.879 li
55.629 278 mo
64.75 268.879 li
.62829 .284672 0 0 cmyk
@
135.309 354.199 mo
126.191 345.078 li
126.191 354.199 mo
135.309 345.078 li
@
205.871 384.199 mo
196.75 375.078 li
196.75 384.199 mo
205.871 375.078 li
@
276.43 380.961 mo
267.309 371.84 li
267.309 380.961 mo
276.43 371.84 li
@
346.988 384.199 mo
337.871 375.078 li
337.871 384.199 mo
346.988 375.078 li
@
417.551 371.481 mo
408.43 362.359 li
408.43 371.481 mo
417.551 362.359 li
@
488.109 345.441 mo
478.988 336.32 li
478.988 345.441 mo
488.109 336.32 li
@
558.672 374.238 mo
549.551 365.121 li
549.551 374.238 mo
558.672 365.121 li
@
629.23 344.359 mo
620.109 335.238 li
620.109 344.359 mo
629.23 335.238 li
@
gsave
60.238 23.762 mo
625.441 23.762 li
625.441 478.321 li
60.238 478.321 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
60.359 300.121 mo
130.922 377.52 li
201.359 400.922 li
271.922 399.84 li
342.48 400.922 li
413.039 387.602 li
483.602 382.32 li
554.16 380.762 li
624.719 373.559 li
.467353 0 .87747 0 cmyk
@
grestore
65.23 305 mo
55.148 294.922 li
55.148 305 mo
65.23 294.922 li
.467353 0 .87747 0 cmyk
@
135.789 382.398 mo
125.711 372.32 li
125.711 382.398 mo
135.789 372.32 li
@
206.352 405.801 mo
196.27 395.719 li
196.27 405.801 mo
206.352 395.719 li
@
276.91 404.719 mo
266.828 394.641 li
266.828 404.719 mo
276.91 394.641 li
@
347.469 405.801 mo
337.391 395.719 li
337.391 405.801 mo
347.469 395.719 li
@
418.031 392.602 mo
407.949 382.52 li
407.949 392.602 mo
418.031 382.52 li
@
488.59 387.32 mo
478.512 377.238 li
478.512 387.32 mo
488.59 377.238 li
@
559.148 385.641 mo
549.07 375.559 li
549.07 385.641 mo
559.148 375.559 li
@
629.711 378.441 mo
619.629 368.359 li
619.629 378.441 mo
629.711 368.359 li
@
40.172 468.316 mo
47.266 468.316 li
47.266 485.406 li
40.172 485.406 li
cp
0 0 0 0 cmyk
ef
46.828 477.27 mo
46.824 477.953 46.773 478.574 46.668 479.137 cv
46.559 479.699 46.379 480.184 46.133 480.586 cv
45.879 480.992 45.551 481.305 45.152 481.523 cv
44.746 481.746 44.254 481.855 43.668 481.855 cv
43.109 481.855 42.637 481.758 42.258 481.559 cv
41.875 481.363 41.57 481.07 41.336 480.684 cv
41.102 480.297 40.934 479.824 40.84 479.258 cv
40.738 478.695 40.691 478.047 40.691 477.312 cv
40.691 476.641 40.746 476.02 40.855 475.453 cv
40.965 474.891 41.141 474.406 41.391 474 cv
41.633 473.598 41.957 473.285 42.363 473.059 cv
42.762 472.84 43.258 472.727 43.848 472.727 cv
44.406 472.727 44.879 472.828 45.262 473.023 cv
45.645 473.227 45.949 473.52 46.184 473.902 cv
46.414 474.293 46.582 474.766 46.68 475.328 cv
46.777 475.891 46.824 476.539 46.828 477.27 cv
cp
45.621 477.352 mo
45.617 476.91 45.602 476.512 45.574 476.16 cv
45.539 475.809 45.492 475.5 45.434 475.23 cv
45.367 474.961 45.289 474.73 45.191 474.535 cv
45.094 474.344 44.977 474.184 44.84 474.055 cv
44.699 473.93 44.539 473.836 44.367 473.777 cv
44.188 473.723 43.992 473.695 43.777 473.691 cv
43.387 473.695 43.07 473.785 42.832 473.969 cv
42.586 474.152 42.395 474.406 42.258 474.723 cv
42.117 475.043 42.023 475.414 41.973 475.844 cv
41.922 476.273 41.898 476.738 41.898 477.23 cv
41.898 477.895 41.93 478.457 42 478.918 cv
42.066 479.387 42.176 479.766 42.328 480.055 cv
42.473 480.352 42.664 480.562 42.895 480.691 cv
43.125 480.828 43.406 480.895 43.738 480.891 cv
43.992 480.895 44.215 480.855 44.41 480.77 cv
44.602 480.691 44.77 480.57 44.91 480.414 cv
45.051 480.262 45.164 480.078 45.258 479.863 cv
45.344 479.648 45.418 479.41 45.477 479.148 cv
45.527 478.891 45.566 478.609 45.59 478.305 cv
45.609 478 45.617 477.684 45.621 477.352 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
40.172 443.102 mo
47.266 443.102 li
47.266 460.192 li
40.172 460.192 li
cp
0 0 0 0 cmyk
ef
46.535 455.996 mo
46.531 456.082 46.527 456.156 46.516 456.219 cv
46.504 456.285 46.488 456.34 46.469 456.379 cv
46.445 456.426 46.418 456.457 46.387 456.473 cv
46.352 456.496 46.313 456.504 46.273 456.504 cv
41.371 456.504 li
41.309 456.504 41.25 456.496 41.203 456.48 cv
41.152 456.465 41.113 456.441 41.078 456.402 cv
41.043 456.371 41.016 456.316 41.004 456.246 cv
40.984 456.176 40.977 456.09 40.98 455.988 cv
40.977 455.898 40.98 455.82 40.988 455.75 cv
40.992 455.684 41.008 455.625 41.035 455.57 cv
41.059 455.52 41.09 455.465 41.125 455.41 cv
41.16 455.359 41.203 455.305 41.262 455.242 cv
43.035 453.418 li
43.445 453 43.773 452.625 44.023 452.289 cv
44.27 451.961 44.461 451.656 44.594 451.379 cv
44.727 451.105 44.813 450.855 44.859 450.629 cv
44.898 450.406 44.922 450.195 44.922 450 cv
44.922 449.805 44.887 449.621 44.82 449.441 cv
44.754 449.27 44.66 449.113 44.535 448.977 cv
44.41 448.848 44.254 448.742 44.066 448.66 cv
43.879 448.586 43.66 448.547 43.414 448.543 cv
43.125 448.547 42.867 448.586 42.641 448.66 cv
42.41 448.742 42.211 448.828 42.039 448.914 cv
41.867 449.008 41.723 449.09 41.605 449.168 cv
41.488 449.246 41.402 449.285 41.352 449.285 cv
41.316 449.285 41.285 449.277 41.262 449.258 cv
41.23 449.242 41.211 449.211 41.195 449.168 cv
41.18 449.129 41.164 449.074 41.156 449.004 cv
41.145 448.937 41.141 448.855 41.145 448.758 cv
41.141 448.691 41.145 448.633 41.152 448.582 cv
41.156 448.531 41.164 448.488 41.176 448.449 cv
41.184 448.414 41.199 448.379 41.219 448.348 cv
41.238 448.316 41.273 448.277 41.332 448.227 cv
41.383 448.18 41.477 448.113 41.613 448.031 cv
41.746 447.949 41.918 447.871 42.121 447.789 cv
42.324 447.711 42.547 447.641 42.793 447.586 cv
43.035 447.531 43.293 447.504 43.566 447.504 cv
43.992 447.504 44.367 447.566 44.691 447.687 cv
45.012 447.809 45.277 447.973 45.492 448.184 cv
45.703 448.395 45.863 448.641 45.969 448.914 cv
46.074 449.195 46.129 449.492 46.129 449.805 cv
46.129 450.094 46.102 450.375 46.051 450.652 cv
46 450.937 45.895 451.242 45.734 451.566 cv
45.57 451.895 45.336 452.258 45.031 452.656 cv
44.723 453.059 44.316 453.52 43.813 454.035 cv
42.406 455.504 li
46.266 455.504 li
46.297 455.508 46.332 455.52 46.371 455.535 cv
46.402 455.559 46.434 455.59 46.461 455.629 cv
46.484 455.672 46.504 455.723 46.516 455.781 cv
46.527 455.848 46.531 455.918 46.535 455.996 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
40.172 417.891 mo
47.266 417.891 li
47.266 434.981 li
40.172 434.981 li
cp
0 0 0 0 cmyk
ef
46.91 428.758 mo
46.906 428.91 46.883 429.031 46.84 429.117 cv
46.793 429.207 46.73 429.25 46.648 429.246 cv
45.648 429.246 li
45.648 431.109 li
45.648 431.148 45.637 431.18 45.621 431.203 cv
45.598 431.23 45.566 431.25 45.523 431.27 cv
45.473 431.285 45.41 431.297 45.34 431.309 cv
45.262 431.316 45.168 431.32 45.051 431.324 cv
44.934 431.32 44.836 431.316 44.766 431.309 cv
44.688 431.297 44.629 431.285 44.586 431.27 cv
44.539 431.25 44.508 431.23 44.492 431.203 cv
44.473 431.18 44.465 431.148 44.469 431.109 cv
44.469 429.246 li
40.84 429.246 li
40.781 429.25 40.738 429.242 40.703 429.227 cv
40.668 429.215 40.633 429.187 40.605 429.148 cv
40.574 429.113 40.555 429.062 40.543 428.992 cv
40.531 428.926 40.527 428.836 40.527 428.723 cv
40.527 428.641 40.527 428.562 40.535 428.492 cv
40.535 428.422 40.547 428.359 40.563 428.305 cv
40.574 428.25 40.59 428.195 40.617 428.141 cv
40.637 428.086 40.664 428.031 40.699 427.969 cv
43.859 422.582 li
43.879 422.547 43.914 422.516 43.961 422.488 cv
44.004 422.461 44.059 422.437 44.133 422.418 cv
44.199 422.402 44.285 422.391 44.391 422.379 cv
44.492 422.375 44.613 422.371 44.754 422.367 cv
44.902 422.371 45.039 422.375 45.156 422.387 cv
45.27 422.398 45.359 422.414 45.434 422.43 cv
45.5 422.449 45.555 422.473 45.594 422.504 cv
45.629 422.535 45.648 422.57 45.648 422.609 cv
45.648 428.273 li
46.648 428.273 li
46.723 428.277 46.785 428.316 46.836 428.395 cv
46.883 428.477 46.906 428.598 46.91 428.758 cv
cp
44.469 423.406 mo
44.457 423.406 li
41.605 428.273 li
44.469 428.273 li
cp
.629236 .549432 .540154 .282963 cmyk
f
40.172 392.672 mo
47.266 392.672 li
47.266 409.762 li
40.172 409.762 li
cp
0 0 0 0 cmyk
ef
46.762 403.207 mo
46.762 403.598 46.699 403.977 46.582 404.336 cv
46.457 404.703 46.273 405.02 46.031 405.293 cv
45.781 405.57 45.469 405.793 45.094 405.957 cv
44.711 406.125 44.266 406.207 43.75 406.207 cv
43.379 406.207 43.051 406.164 42.77 406.07 cv
42.484 405.984 42.238 405.852 42.027 405.68 cv
41.816 405.512 41.641 405.305 41.504 405.059 cv
41.363 404.812 41.25 404.531 41.168 404.215 cv
41.082 403.902 41.023 403.559 40.988 403.18 cv
40.949 402.809 40.93 402.406 40.934 401.973 cv
40.93 401.594 40.949 401.211 40.992 400.82 cv
41.031 400.437 41.105 400.062 41.211 399.695 cv
41.316 399.336 41.461 398.996 41.641 398.68 cv
41.82 398.363 42.047 398.086 42.32 397.852 cv
42.594 397.617 42.918 397.43 43.297 397.289 cv
43.676 397.152 44.117 397.086 44.621 397.082 cv
44.789 397.086 44.961 397.094 45.133 397.113 cv
45.305 397.137 45.465 397.168 45.613 397.199 cv
45.762 397.238 45.883 397.273 45.984 397.312 cv
46.082 397.352 46.148 397.387 46.184 397.41 cv
46.211 397.437 46.234 397.465 46.254 397.492 cv
46.27 397.523 46.285 397.555 46.293 397.59 cv
46.301 397.625 46.305 397.664 46.313 397.707 cv
46.313 397.75 46.316 397.805 46.32 397.867 cv
46.316 397.953 46.316 398.023 46.316 398.078 cv
46.313 398.141 46.301 398.187 46.289 398.223 cv
46.27 398.262 46.25 398.289 46.227 398.305 cv
46.199 398.324 46.168 398.332 46.129 398.332 cv
46.078 398.332 46.008 398.316 45.922 398.285 cv
45.832 398.254 45.727 398.219 45.605 398.176 cv
45.48 398.141 45.332 398.105 45.156 398.07 cv
44.98 398.043 44.777 398.027 44.547 398.023 cv
44.117 398.027 43.75 398.113 43.445 398.285 cv
43.141 398.457 42.891 398.691 42.695 398.984 cv
42.5 399.277 42.355 399.617 42.266 400 cv
42.168 400.391 42.113 400.793 42.105 401.211 cv
42.223 401.145 42.359 401.078 42.508 401.008 cv
42.656 400.941 42.816 400.879 42.992 400.82 cv
43.168 400.77 43.355 400.723 43.551 400.687 cv
43.746 400.656 43.957 400.641 44.184 400.637 cv
44.66 400.641 45.063 400.707 45.395 400.832 cv
45.723 400.965 45.988 401.145 46.195 401.375 cv
46.395 401.605 46.539 401.875 46.629 402.187 cv
46.715 402.5 46.762 402.84 46.762 403.207 cv
cp
45.566 403.316 mo
45.566 403.055 45.539 402.812 45.488 402.594 cv
45.434 402.379 45.344 402.195 45.223 402.039 cv
45.098 401.891 44.934 401.773 44.73 401.691 cv
44.52 401.609 44.266 401.566 43.969 401.566 cv
43.797 401.566 43.629 401.582 43.461 401.613 cv
43.289 401.645 43.125 401.687 42.969 401.734 cv
42.809 401.789 42.66 401.852 42.52 401.922 cv
42.375 401.996 42.242 402.07 42.125 402.148 cv
42.121 402.742 42.16 403.238 42.238 403.633 cv
42.313 404.031 42.422 404.348 42.566 404.586 cv
42.711 404.828 42.891 405 43.105 405.102 cv
43.32 405.207 43.57 405.258 43.859 405.254 cv
44.148 405.258 44.402 405.203 44.617 405.09 cv
44.832 404.984 45.008 404.836 45.152 404.648 cv
45.293 404.465 45.398 404.258 45.465 404.027 cv
45.531 403.797 45.566 403.562 45.566 403.316 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
40.172 367.461 mo
47.266 367.461 li
47.266 384.551 li
40.172 384.551 li
cp
0 0 0 0 cmyk
ef
46.738 378.582 mo
46.738 378.969 46.668 379.312 46.531 379.609 cv
46.395 379.914 46.199 380.164 45.941 380.367 cv
45.684 380.574 45.363 380.73 44.984 380.832 cv
44.602 380.937 44.168 380.988 43.684 380.988 cv
43.223 380.988 42.813 380.941 42.453 380.848 cv
42.09 380.754 41.785 380.613 41.535 380.422 cv
41.285 380.238 41.094 380.008 40.961 379.73 cv
40.828 379.457 40.762 379.145 40.762 378.789 cv
40.762 378.516 40.805 378.258 40.898 378.023 cv
40.984 377.789 41.117 377.574 41.293 377.379 cv
41.461 377.184 41.672 377 41.926 376.824 cv
42.176 376.656 42.461 376.492 42.777 376.336 cv
42.504 376.195 42.262 376.047 42.051 375.887 cv
41.84 375.73 41.66 375.559 41.516 375.371 cv
41.367 375.187 41.258 374.992 41.184 374.781 cv
41.105 374.574 41.066 374.344 41.07 374.094 cv
41.066 373.785 41.121 373.492 41.238 373.219 cv
41.348 372.949 41.52 372.715 41.746 372.512 cv
41.973 372.312 42.258 372.152 42.609 372.035 cv
42.953 371.918 43.363 371.859 43.832 371.859 cv
44.277 371.859 44.664 371.914 44.992 372.02 cv
45.32 372.129 45.59 372.273 45.801 372.457 cv
46.012 372.645 46.168 372.863 46.273 373.113 cv
46.371 373.363 46.422 373.633 46.426 373.922 cv
46.422 374.156 46.383 374.383 46.313 374.594 cv
46.234 374.812 46.125 375.016 45.977 375.203 cv
45.828 375.398 45.648 375.578 45.438 375.742 cv
45.227 375.914 44.984 376.07 44.711 376.211 cv
45.031 376.375 45.316 376.539 45.574 376.707 cv
45.824 376.875 46.039 377.055 46.215 377.25 cv
46.383 377.445 46.512 377.652 46.605 377.867 cv
46.691 378.086 46.738 378.324 46.738 378.582 cv
cp
45.258 374.031 mo
45.254 373.844 45.223 373.668 45.156 373.512 cv
45.09 373.355 44.992 373.223 44.867 373.113 cv
44.738 373.004 44.578 372.922 44.391 372.863 cv
44.195 372.809 43.98 372.781 43.742 372.777 cv
43.246 372.781 42.871 372.891 42.621 373.113 cv
42.363 373.34 42.238 373.648 42.242 374.031 cv
42.238 374.211 42.27 374.375 42.332 374.527 cv
42.395 374.684 42.488 374.828 42.621 374.965 cv
42.746 375.102 42.91 375.234 43.113 375.363 cv
43.309 375.496 43.547 375.633 43.824 375.773 cv
44.285 375.539 44.641 375.277 44.887 374.984 cv
45.133 374.699 45.254 374.383 45.258 374.031 cv
cp
45.547 378.707 mo
45.543 378.5 45.504 378.309 45.43 378.137 cv
45.348 377.969 45.23 377.809 45.074 377.656 cv
44.918 377.508 44.719 377.363 44.484 377.223 cv
44.246 377.086 43.977 376.941 43.668 376.789 cv
43.379 376.934 43.125 377.074 42.91 377.215 cv
42.691 377.355 42.512 377.504 42.375 377.652 cv
42.234 377.809 42.129 377.965 42.059 378.129 cv
41.984 378.297 41.949 378.48 41.953 378.68 cv
41.949 379.125 42.102 379.469 42.41 379.707 cv
42.711 379.953 43.164 380.074 43.77 380.07 cv
44.352 380.074 44.797 379.953 45.098 379.703 cv
45.395 379.461 45.543 379.129 45.547 378.707 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
33.078 342.238 mo
47.269 342.238 li
47.269 359.328 li
33.078 359.328 li
cp
0 0 0 0 cmyk
ef
39.457 355.164 mo
39.453 355.254 39.445 355.324 39.434 355.383 cv
39.418 355.445 39.398 355.496 39.379 355.527 cv
39.355 355.566 39.332 355.59 39.301 355.605 cv
39.27 355.621 39.238 355.629 39.211 355.629 cv
34.574 355.629 li
34.539 355.629 34.512 355.621 34.484 355.605 cv
34.457 355.59 34.43 355.566 34.406 355.527 cv
34.379 355.496 34.359 355.445 34.348 355.383 cv
34.332 355.324 34.324 355.254 34.328 355.164 cv
34.324 355.086 34.332 355.012 34.348 354.949 cv
34.359 354.891 34.375 354.844 34.398 354.805 cv
34.414 354.77 34.441 354.738 34.473 354.715 cv
34.504 354.695 34.535 354.687 34.574 354.684 cv
36.426 354.684 li
36.426 347.937 li
34.711 348.957 li
34.621 349.008 34.551 349.035 34.504 349.043 cv
34.449 349.051 34.406 349.043 34.375 349.012 cv
34.34 348.984 34.32 348.934 34.309 348.863 cv
34.297 348.797 34.289 348.711 34.293 348.602 cv
34.289 348.527 34.293 348.461 34.305 348.402 cv
34.309 348.352 34.32 348.305 34.336 348.266 cv
34.348 348.23 34.367 348.199 34.391 348.172 cv
34.414 348.145 34.445 348.117 34.492 348.09 cv
36.535 346.777 li
36.551 346.766 36.57 346.754 36.602 346.746 cv
36.625 346.738 36.66 346.73 36.707 346.719 cv
36.746 346.711 36.797 346.703 36.852 346.699 cv
36.906 346.699 36.973 346.699 37.059 346.695 cv
37.164 346.699 37.258 346.703 37.332 346.711 cv
37.402 346.719 37.457 346.734 37.504 346.75 cv
37.543 346.77 37.57 346.789 37.586 346.812 cv
37.594 346.84 37.602 346.863 37.605 346.887 cv
37.605 354.684 li
39.211 354.684 li
39.246 354.687 39.281 354.695 39.313 354.715 cv
39.344 354.738 39.367 354.77 39.391 354.805 cv
39.406 354.844 39.422 354.891 39.438 354.949 cv
39.445 355.012 39.453 355.086 39.457 355.164 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.809 351.172 mo
46.805 351.855 46.754 352.477 46.648 353.039 cv
46.539 353.602 46.359 354.086 46.113 354.488 cv
45.859 354.895 45.531 355.207 45.133 355.426 cv
44.727 355.648 44.234 355.758 43.648 355.758 cv
43.09 355.758 42.617 355.66 42.238 355.461 cv
41.855 355.266 41.551 354.973 41.316 354.586 cv
41.082 354.199 40.914 353.727 40.82 353.16 cv
40.719 352.598 40.672 351.949 40.672 351.215 cv
40.672 350.543 40.727 349.922 40.836 349.355 cv
40.945 348.793 41.121 348.309 41.371 347.902 cv
41.613 347.5 41.938 347.187 42.344 346.961 cv
42.742 346.742 43.238 346.629 43.828 346.629 cv
44.387 346.629 44.859 346.73 45.242 346.926 cv
45.625 347.129 45.93 347.422 46.164 347.805 cv
46.395 348.195 46.563 348.668 46.66 349.23 cv
46.758 349.793 46.805 350.441 46.809 351.172 cv
cp
45.602 351.254 mo
45.598 350.812 45.582 350.414 45.555 350.062 cv
45.52 349.711 45.473 349.402 45.414 349.133 cv
45.348 348.863 45.27 348.633 45.172 348.437 cv
45.074 348.246 44.957 348.086 44.82 347.957 cv
44.68 347.832 44.52 347.738 44.348 347.68 cv
44.168 347.625 43.973 347.598 43.758 347.594 cv
43.367 347.598 43.051 347.687 42.813 347.871 cv
42.566 348.055 42.375 348.309 42.238 348.625 cv
42.098 348.945 42.004 349.316 41.953 349.746 cv
41.902 350.176 41.879 350.641 41.879 351.133 cv
41.879 351.797 41.91 352.359 41.98 352.82 cv
42.047 353.289 42.156 353.668 42.309 353.957 cv
42.453 354.254 42.645 354.465 42.875 354.594 cv
43.105 354.73 43.387 354.797 43.719 354.793 cv
43.973 354.797 44.195 354.758 44.391 354.672 cv
44.582 354.594 44.75 354.473 44.891 354.316 cv
45.031 354.164 45.145 353.98 45.238 353.766 cv
45.324 353.551 45.398 353.312 45.457 353.051 cv
45.508 352.793 45.547 352.512 45.57 352.207 cv
45.59 351.902 45.598 351.586 45.602 351.254 cv
cp
f
33.078 317.031 mo
47.269 317.031 li
47.269 334.121 li
33.078 334.121 li
cp
0 0 0 0 cmyk
ef
39.457 329.945 mo
39.453 330.035 39.445 330.105 39.434 330.164 cv
39.418 330.227 39.398 330.277 39.379 330.309 cv
39.355 330.348 39.332 330.371 39.301 330.387 cv
39.27 330.402 39.238 330.41 39.211 330.41 cv
34.574 330.41 li
34.539 330.41 34.512 330.402 34.484 330.387 cv
34.457 330.371 34.43 330.348 34.406 330.309 cv
34.379 330.277 34.359 330.227 34.348 330.164 cv
34.332 330.105 34.324 330.035 34.328 329.945 cv
34.324 329.867 34.332 329.793 34.348 329.73 cv
34.359 329.672 34.375 329.625 34.398 329.586 cv
34.414 329.551 34.441 329.52 34.473 329.496 cv
34.504 329.477 34.535 329.469 34.574 329.465 cv
36.426 329.465 li
36.426 322.719 li
34.711 323.738 li
34.621 323.789 34.551 323.816 34.504 323.824 cv
34.449 323.832 34.406 323.824 34.375 323.793 cv
34.34 323.766 34.32 323.715 34.309 323.645 cv
34.297 323.578 34.289 323.492 34.293 323.383 cv
34.289 323.309 34.293 323.242 34.305 323.184 cv
34.309 323.133 34.32 323.086 34.336 323.047 cv
34.348 323.012 34.367 322.98 34.391 322.953 cv
34.414 322.926 34.445 322.898 34.492 322.871 cv
36.535 321.559 li
36.551 321.547 36.57 321.535 36.602 321.527 cv
36.625 321.52 36.66 321.512 36.707 321.5 cv
36.746 321.492 36.797 321.484 36.852 321.48 cv
36.906 321.48 36.973 321.48 37.059 321.477 cv
37.164 321.48 37.258 321.484 37.332 321.492 cv
37.402 321.5 37.457 321.516 37.504 321.531 cv
37.543 321.551 37.57 321.57 37.586 321.594 cv
37.594 321.621 37.602 321.645 37.605 321.668 cv
37.605 329.465 li
39.211 329.465 li
39.246 329.469 39.281 329.477 39.313 329.496 cv
39.344 329.52 39.367 329.551 39.391 329.586 cv
39.406 329.625 39.422 329.672 39.438 329.73 cv
39.445 329.793 39.453 329.867 39.457 329.945 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.516 329.902 mo
46.512 329.988 46.508 330.062 46.496 330.125 cv
46.484 330.191 46.469 330.246 46.449 330.285 cv
46.426 330.332 46.398 330.363 46.367 330.379 cv
46.332 330.402 46.293 330.41 46.254 330.41 cv
41.352 330.41 li
41.289 330.41 41.23 330.402 41.184 330.387 cv
41.133 330.371 41.094 330.348 41.059 330.309 cv
41.023 330.277 40.996 330.223 40.984 330.152 cv
40.965 330.082 40.957 329.996 40.961 329.895 cv
40.957 329.805 40.961 329.727 40.969 329.656 cv
40.973 329.59 40.988 329.531 41.016 329.477 cv
41.039 329.426 41.07 329.371 41.105 329.316 cv
41.141 329.266 41.184 329.211 41.242 329.148 cv
43.016 327.324 li
43.426 326.906 43.754 326.531 44.004 326.195 cv
44.25 325.867 44.441 325.562 44.574 325.285 cv
44.707 325.012 44.793 324.762 44.84 324.535 cv
44.879 324.312 44.902 324.102 44.902 323.906 cv
44.902 323.711 44.867 323.527 44.801 323.348 cv
44.734 323.176 44.641 323.02 44.516 322.883 cv
44.391 322.754 44.234 322.648 44.047 322.566 cv
43.859 322.492 43.641 322.453 43.395 322.449 cv
43.105 322.453 42.848 322.492 42.621 322.566 cv
42.391 322.648 42.191 322.734 42.02 322.82 cv
41.848 322.914 41.703 322.996 41.586 323.074 cv
41.469 323.152 41.383 323.191 41.332 323.191 cv
41.297 323.191 41.266 323.184 41.242 323.164 cv
41.211 323.148 41.191 323.117 41.176 323.074 cv
41.16 323.035 41.145 322.98 41.137 322.91 cv
41.125 322.844 41.121 322.762 41.125 322.664 cv
41.121 322.598 41.125 322.539 41.133 322.488 cv
41.137 322.437 41.145 322.395 41.156 322.355 cv
41.164 322.32 41.18 322.285 41.199 322.254 cv
41.219 322.223 41.254 322.184 41.313 322.133 cv
41.363 322.086 41.457 322.02 41.594 321.937 cv
41.727 321.855 41.898 321.777 42.102 321.695 cv
42.305 321.617 42.527 321.547 42.773 321.492 cv
43.016 321.437 43.273 321.41 43.547 321.41 cv
43.973 321.41 44.348 321.473 44.672 321.594 cv
44.992 321.715 45.258 321.879 45.473 322.09 cv
45.684 322.301 45.844 322.547 45.949 322.82 cv
46.055 323.102 46.109 323.398 46.109 323.711 cv
46.109 324 46.082 324.281 46.031 324.559 cv
45.98 324.844 45.875 325.148 45.715 325.473 cv
45.551 325.801 45.316 326.164 45.012 326.562 cv
44.703 326.965 44.297 327.426 43.793 327.941 cv
42.387 329.41 li
46.246 329.41 li
46.277 329.414 46.313 329.426 46.352 329.441 cv
46.383 329.465 46.414 329.496 46.441 329.535 cv
46.465 329.578 46.484 329.629 46.496 329.687 cv
46.508 329.754 46.512 329.824 46.516 329.902 cv
cp
f
33.078 291.82 mo
47.269 291.82 li
47.269 308.91 li
33.078 308.91 li
cp
0 0 0 0 cmyk
ef
39.469 304.742 mo
39.465 304.832 39.457 304.906 39.445 304.965 cv
39.43 305.027 39.41 305.078 39.391 305.109 cv
39.367 305.148 39.344 305.172 39.313 305.187 cv
39.281 305.203 39.25 305.211 39.219 305.211 cv
34.578 305.211 li
34.547 305.211 34.516 305.203 34.488 305.187 cv
34.461 305.172 34.434 305.148 34.41 305.109 cv
34.379 305.078 34.359 305.027 34.352 304.965 cv
34.336 304.906 34.332 304.832 34.332 304.742 cv
34.332 304.664 34.336 304.594 34.352 304.531 cv
34.359 304.473 34.379 304.426 34.402 304.383 cv
34.422 304.348 34.445 304.316 34.477 304.293 cv
34.504 304.273 34.539 304.262 34.578 304.262 cv
36.434 304.262 li
36.434 297.508 li
34.715 298.527 li
34.625 298.578 34.555 298.605 34.504 298.613 cv
34.449 298.621 34.41 298.613 34.379 298.582 cv
34.348 298.555 34.324 298.504 34.313 298.434 cv
34.301 298.367 34.297 298.281 34.297 298.172 cv
34.297 298.098 34.297 298.031 34.305 297.973 cv
34.309 297.922 34.32 297.875 34.336 297.836 cv
34.348 297.801 34.367 297.77 34.395 297.742 cv
34.418 297.715 34.453 297.687 34.496 297.656 cv
36.543 296.344 li
36.559 296.336 36.582 296.324 36.609 296.312 cv
36.637 296.305 36.672 296.297 36.715 296.285 cv
36.754 296.277 36.801 296.27 36.859 296.266 cv
36.91 296.266 36.98 296.266 37.063 296.262 cv
37.172 296.266 37.262 296.27 37.34 296.277 cv
37.41 296.289 37.469 296.301 37.508 296.316 cv
37.547 296.332 37.574 296.355 37.59 296.379 cv
37.605 296.406 37.613 296.43 37.613 296.457 cv
37.613 304.262 li
39.219 304.262 li
39.254 304.262 39.285 304.273 39.32 304.293 cv
39.352 304.316 39.379 304.348 39.402 304.383 cv
39.418 304.426 39.434 304.473 39.449 304.531 cv
39.457 304.594 39.465 304.664 39.469 304.742 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.902 302.684 mo
46.898 302.84 46.875 302.957 46.832 303.043 cv
46.785 303.129 46.723 303.172 46.641 303.172 cv
45.641 303.172 li
45.641 305.039 li
45.641 305.078 45.629 305.109 45.609 305.133 cv
45.59 305.16 45.559 305.18 45.512 305.199 cv
45.465 305.215 45.402 305.227 45.328 305.238 cv
45.25 305.246 45.152 305.25 45.039 305.254 cv
44.922 305.25 44.828 305.246 44.754 305.238 cv
44.676 305.227 44.617 305.215 44.574 305.199 cv
44.527 305.18 44.496 305.16 44.48 305.133 cv
44.465 305.109 44.457 305.078 44.457 305.039 cv
44.457 303.172 li
40.824 303.172 li
40.77 303.172 40.723 303.168 40.688 303.152 cv
40.648 303.141 40.613 303.113 40.586 303.074 cv
40.555 303.039 40.535 302.988 40.523 302.918 cv
40.512 302.852 40.508 302.762 40.508 302.648 cv
40.508 302.566 40.508 302.488 40.516 302.418 cv
40.516 302.352 40.527 302.289 40.543 302.227 cv
40.555 302.172 40.57 302.117 40.598 302.062 cv
40.617 302.016 40.645 301.957 40.68 301.895 cv
43.848 296.496 li
43.871 296.465 43.902 296.434 43.949 296.402 cv
43.988 296.379 44.047 296.355 44.121 296.332 cv
44.188 296.316 44.273 296.305 44.379 296.297 cv
44.477 296.293 44.598 296.289 44.742 296.285 cv
44.895 296.289 45.027 296.293 45.145 296.301 cv
45.254 296.312 45.348 296.328 45.422 296.344 cv
45.488 296.367 45.543 296.391 45.582 296.418 cv
45.621 296.449 45.641 296.484 45.641 296.523 cv
45.641 302.195 li
46.641 302.195 li
46.715 302.199 46.777 302.238 46.828 302.316 cv
46.875 302.398 46.898 302.523 46.902 302.684 cv
cp
44.457 297.32 mo
44.445 297.32 li
41.586 302.195 li
44.457 302.195 li
cp
f
33.078 266.602 mo
47.269 266.602 li
47.269 283.692 li
33.078 283.692 li
cp
0 0 0 0 cmyk
ef
39.457 279.516 mo
39.453 279.605 39.445 279.676 39.434 279.734 cv
39.418 279.797 39.398 279.848 39.379 279.879 cv
39.355 279.918 39.332 279.941 39.301 279.957 cv
39.27 279.973 39.238 279.98 39.211 279.98 cv
34.574 279.98 li
34.539 279.98 34.512 279.973 34.484 279.957 cv
34.457 279.941 34.43 279.918 34.406 279.879 cv
34.379 279.848 34.359 279.797 34.348 279.734 cv
34.332 279.676 34.324 279.605 34.328 279.516 cv
34.324 279.437 34.332 279.363 34.348 279.301 cv
34.359 279.242 34.375 279.195 34.398 279.156 cv
34.414 279.121 34.441 279.09 34.473 279.066 cv
34.504 279.047 34.535 279.039 34.574 279.035 cv
36.426 279.035 li
36.426 272.289 li
34.711 273.309 li
34.621 273.359 34.551 273.387 34.504 273.395 cv
34.449 273.402 34.406 273.395 34.375 273.363 cv
34.34 273.336 34.32 273.285 34.309 273.215 cv
34.297 273.148 34.289 273.062 34.293 272.953 cv
34.289 272.879 34.293 272.812 34.305 272.754 cv
34.309 272.703 34.32 272.656 34.336 272.617 cv
34.348 272.582 34.367 272.551 34.391 272.523 cv
34.414 272.496 34.445 272.469 34.492 272.441 cv
36.535 271.129 li
36.551 271.117 36.57 271.105 36.602 271.098 cv
36.625 271.09 36.66 271.082 36.707 271.07 cv
36.746 271.062 36.797 271.055 36.852 271.051 cv
36.906 271.051 36.973 271.051 37.059 271.047 cv
37.164 271.051 37.258 271.055 37.332 271.062 cv
37.402 271.07 37.457 271.086 37.504 271.102 cv
37.543 271.121 37.57 271.141 37.586 271.164 cv
37.594 271.191 37.602 271.215 37.605 271.238 cv
37.605 279.035 li
39.211 279.035 li
39.246 279.039 39.281 279.047 39.313 279.066 cv
39.344 279.09 39.367 279.121 39.391 279.156 cv
39.406 279.195 39.422 279.242 39.438 279.301 cv
39.445 279.363 39.453 279.437 39.457 279.516 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.742 277.109 mo
46.742 277.5 46.68 277.879 46.563 278.238 cv
46.438 278.605 46.254 278.922 46.012 279.195 cv
45.762 279.473 45.449 279.695 45.074 279.859 cv
44.691 280.027 44.246 280.109 43.73 280.109 cv
43.359 280.109 43.031 280.066 42.75 279.973 cv
42.465 279.887 42.219 279.754 42.008 279.582 cv
41.797 279.414 41.621 279.207 41.484 278.961 cv
41.344 278.715 41.23 278.434 41.148 278.117 cv
41.063 277.805 41.004 277.461 40.969 277.082 cv
40.93 276.711 40.91 276.309 40.914 275.875 cv
40.91 275.496 40.93 275.113 40.973 274.723 cv
41.012 274.34 41.086 273.965 41.191 273.598 cv
41.297 273.238 41.441 272.898 41.621 272.582 cv
41.801 272.266 42.027 271.988 42.301 271.754 cv
42.574 271.52 42.898 271.332 43.277 271.191 cv
43.656 271.055 44.098 270.988 44.602 270.984 cv
44.77 270.988 44.941 270.996 45.113 271.016 cv
45.285 271.039 45.445 271.07 45.594 271.102 cv
45.742 271.141 45.863 271.176 45.965 271.215 cv
46.063 271.254 46.129 271.289 46.164 271.312 cv
46.191 271.34 46.215 271.367 46.234 271.395 cv
46.25 271.426 46.266 271.457 46.273 271.492 cv
46.281 271.527 46.285 271.566 46.293 271.609 cv
46.293 271.652 46.297 271.707 46.301 271.77 cv
46.297 271.855 46.297 271.926 46.297 271.98 cv
46.293 272.043 46.281 272.09 46.27 272.125 cv
46.25 272.164 46.23 272.191 46.207 272.207 cv
46.18 272.227 46.148 272.234 46.109 272.234 cv
46.059 272.234 45.988 272.219 45.902 272.187 cv
45.813 272.156 45.707 272.121 45.586 272.078 cv
45.461 272.043 45.313 272.008 45.137 271.973 cv
44.961 271.945 44.758 271.93 44.527 271.926 cv
44.098 271.93 43.73 272.016 43.426 272.187 cv
43.121 272.359 42.871 272.594 42.676 272.887 cv
42.48 273.18 42.336 273.52 42.246 273.902 cv
42.148 274.293 42.094 274.695 42.086 275.113 cv
42.203 275.047 42.34 274.98 42.488 274.91 cv
42.637 274.844 42.797 274.781 42.973 274.723 cv
43.148 274.672 43.336 274.625 43.531 274.59 cv
43.727 274.559 43.938 274.543 44.164 274.539 cv
44.641 274.543 45.043 274.609 45.375 274.734 cv
45.703 274.867 45.969 275.047 46.176 275.277 cv
46.375 275.508 46.52 275.777 46.609 276.09 cv
46.695 276.402 46.742 276.742 46.742 277.109 cv
cp
45.547 277.219 mo
45.547 276.957 45.52 276.715 45.469 276.496 cv
45.414 276.281 45.324 276.098 45.203 275.941 cv
45.078 275.793 44.914 275.676 44.711 275.594 cv
44.5 275.512 44.246 275.469 43.949 275.469 cv
43.777 275.469 43.609 275.484 43.441 275.516 cv
43.27 275.547 43.105 275.59 42.949 275.637 cv
42.789 275.691 42.641 275.754 42.5 275.824 cv
42.355 275.898 42.223 275.973 42.105 276.051 cv
42.102 276.645 42.141 277.141 42.219 277.535 cv
42.293 277.934 42.402 278.25 42.547 278.488 cv
42.691 278.73 42.871 278.902 43.086 279.004 cv
43.301 279.109 43.551 279.16 43.84 279.156 cv
44.129 279.16 44.383 279.105 44.598 278.992 cv
44.813 278.887 44.988 278.738 45.133 278.551 cv
45.273 278.367 45.379 278.16 45.445 277.93 cv
45.512 277.699 45.547 277.465 45.547 277.219 cv
cp
f
33.078 241.391 mo
47.269 241.391 li
47.269 258.481 li
33.078 258.481 li
cp
0 0 0 0 cmyk
ef
39.457 254.297 mo
39.453 254.387 39.445 254.457 39.434 254.516 cv
39.418 254.578 39.398 254.629 39.379 254.66 cv
39.355 254.699 39.332 254.723 39.301 254.738 cv
39.27 254.754 39.238 254.762 39.211 254.762 cv
34.574 254.762 li
34.539 254.762 34.512 254.754 34.484 254.738 cv
34.457 254.723 34.43 254.699 34.406 254.66 cv
34.379 254.629 34.359 254.578 34.348 254.516 cv
34.332 254.457 34.324 254.387 34.328 254.297 cv
34.324 254.219 34.332 254.145 34.348 254.082 cv
34.359 254.023 34.375 253.977 34.398 253.937 cv
34.414 253.902 34.441 253.871 34.473 253.848 cv
34.504 253.828 34.535 253.82 34.574 253.816 cv
36.426 253.816 li
36.426 247.07 li
34.711 248.09 li
34.621 248.141 34.551 248.168 34.504 248.176 cv
34.449 248.184 34.406 248.176 34.375 248.145 cv
34.34 248.117 34.32 248.066 34.309 247.996 cv
34.297 247.93 34.289 247.844 34.293 247.734 cv
34.289 247.66 34.293 247.594 34.305 247.535 cv
34.309 247.484 34.32 247.437 34.336 247.398 cv
34.348 247.363 34.367 247.332 34.391 247.305 cv
34.414 247.277 34.445 247.25 34.492 247.223 cv
36.535 245.91 li
36.551 245.898 36.57 245.887 36.602 245.879 cv
36.625 245.871 36.66 245.863 36.707 245.852 cv
36.746 245.844 36.797 245.836 36.852 245.832 cv
36.906 245.832 36.973 245.832 37.059 245.828 cv
37.164 245.832 37.258 245.836 37.332 245.844 cv
37.402 245.852 37.457 245.867 37.504 245.883 cv
37.543 245.902 37.57 245.922 37.586 245.945 cv
37.594 245.973 37.602 245.996 37.605 246.02 cv
37.605 253.816 li
39.211 253.816 li
39.246 253.82 39.281 253.828 39.313 253.848 cv
39.344 253.871 39.367 253.902 39.391 253.937 cv
39.406 253.977 39.422 254.023 39.438 254.082 cv
39.445 254.145 39.453 254.219 39.457 254.297 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.719 252.484 mo
46.719 252.871 46.648 253.215 46.512 253.512 cv
46.375 253.816 46.18 254.066 45.922 254.27 cv
45.664 254.477 45.344 254.633 44.965 254.734 cv
44.582 254.84 44.148 254.891 43.664 254.891 cv
43.203 254.891 42.793 254.844 42.434 254.75 cv
42.07 254.656 41.766 254.516 41.516 254.324 cv
41.266 254.141 41.074 253.91 40.941 253.633 cv
40.809 253.359 40.742 253.047 40.742 252.691 cv
40.742 252.418 40.785 252.16 40.879 251.926 cv
40.965 251.691 41.098 251.477 41.273 251.281 cv
41.441 251.086 41.652 250.902 41.906 250.727 cv
42.156 250.559 42.441 250.395 42.758 250.238 cv
42.484 250.098 42.242 249.949 42.031 249.789 cv
41.82 249.633 41.641 249.461 41.496 249.273 cv
41.348 249.09 41.238 248.895 41.164 248.684 cv
41.086 248.477 41.047 248.246 41.051 247.996 cv
41.047 247.687 41.102 247.395 41.219 247.121 cv
41.328 246.852 41.5 246.617 41.727 246.414 cv
41.953 246.215 42.238 246.055 42.59 245.937 cv
42.934 245.82 43.344 245.762 43.813 245.762 cv
44.258 245.762 44.645 245.816 44.973 245.922 cv
45.301 246.031 45.57 246.176 45.781 246.359 cv
45.992 246.547 46.148 246.766 46.254 247.016 cv
46.352 247.266 46.402 247.535 46.406 247.824 cv
46.402 248.059 46.363 248.285 46.293 248.496 cv
46.215 248.715 46.105 248.918 45.957 249.105 cv
45.809 249.301 45.629 249.48 45.418 249.645 cv
45.207 249.816 44.965 249.973 44.691 250.113 cv
45.012 250.277 45.297 250.441 45.555 250.609 cv
45.805 250.777 46.02 250.957 46.195 251.152 cv
46.363 251.348 46.492 251.555 46.586 251.77 cv
46.672 251.988 46.719 252.227 46.719 252.484 cv
cp
45.238 247.934 mo
45.234 247.746 45.203 247.57 45.137 247.414 cv
45.07 247.258 44.973 247.125 44.848 247.016 cv
44.719 246.906 44.559 246.824 44.371 246.766 cv
44.176 246.711 43.961 246.684 43.723 246.68 cv
43.227 246.684 42.852 246.793 42.602 247.016 cv
42.344 247.242 42.219 247.551 42.223 247.934 cv
42.219 248.113 42.25 248.277 42.313 248.43 cv
42.375 248.586 42.469 248.73 42.602 248.867 cv
42.727 249.004 42.891 249.137 43.094 249.266 cv
43.289 249.398 43.527 249.535 43.805 249.676 cv
44.266 249.441 44.621 249.18 44.867 248.887 cv
45.113 248.602 45.234 248.285 45.238 247.934 cv
cp
45.527 252.609 mo
45.523 252.402 45.484 252.211 45.41 252.039 cv
45.328 251.871 45.211 251.711 45.055 251.559 cv
44.898 251.41 44.699 251.266 44.465 251.125 cv
44.227 250.988 43.957 250.844 43.648 250.691 cv
43.359 250.836 43.105 250.977 42.891 251.117 cv
42.672 251.258 42.492 251.406 42.355 251.555 cv
42.215 251.711 42.109 251.867 42.039 252.031 cv
41.965 252.199 41.93 252.383 41.934 252.582 cv
41.93 253.027 42.082 253.371 42.391 253.609 cv
42.691 253.855 43.145 253.977 43.75 253.973 cv
44.332 253.977 44.777 253.855 45.078 253.605 cv
45.375 253.363 45.523 253.031 45.527 252.609 cv
cp
f
33.078 216.172 mo
47.269 216.172 li
47.269 233.262 li
33.078 233.262 li
cp
0 0 0 0 cmyk
ef
39.438 229.031 mo
39.434 229.117 39.43 229.191 39.418 229.254 cv
39.406 229.32 39.391 229.375 39.371 229.414 cv
39.348 229.461 39.32 229.492 39.289 229.508 cv
39.254 229.531 39.215 229.539 39.176 229.539 cv
34.273 229.539 li
34.211 229.539 34.152 229.531 34.105 229.516 cv
34.055 229.5 34.016 229.477 33.98 229.437 cv
33.945 229.406 33.918 229.352 33.906 229.281 cv
33.887 229.211 33.879 229.125 33.883 229.023 cv
33.879 228.934 33.883 228.855 33.891 228.785 cv
33.895 228.719 33.91 228.66 33.938 228.605 cv
33.961 228.555 33.992 228.5 34.027 228.445 cv
34.063 228.395 34.105 228.34 34.164 228.277 cv
35.938 226.453 li
36.348 226.035 36.676 225.66 36.926 225.324 cv
37.172 224.996 37.363 224.691 37.496 224.414 cv
37.629 224.141 37.715 223.891 37.762 223.664 cv
37.801 223.441 37.824 223.23 37.824 223.035 cv
37.824 222.84 37.789 222.656 37.723 222.477 cv
37.656 222.305 37.563 222.148 37.438 222.012 cv
37.313 221.883 37.156 221.777 36.969 221.695 cv
36.781 221.621 36.563 221.582 36.316 221.578 cv
36.027 221.582 35.77 221.621 35.543 221.695 cv
35.313 221.777 35.113 221.863 34.941 221.949 cv
34.77 222.043 34.625 222.125 34.508 222.203 cv
34.391 222.281 34.305 222.32 34.254 222.32 cv
34.219 222.32 34.188 222.312 34.164 222.293 cv
34.133 222.277 34.113 222.246 34.098 222.203 cv
34.082 222.164 34.066 222.109 34.059 222.039 cv
34.047 221.973 34.043 221.891 34.047 221.793 cv
34.043 221.727 34.047 221.668 34.055 221.617 cv
34.059 221.566 34.066 221.523 34.078 221.484 cv
34.086 221.449 34.102 221.414 34.121 221.383 cv
34.141 221.352 34.176 221.312 34.234 221.262 cv
34.285 221.215 34.379 221.148 34.516 221.066 cv
34.648 220.984 34.82 220.906 35.023 220.824 cv
35.227 220.746 35.449 220.676 35.695 220.621 cv
35.938 220.566 36.195 220.539 36.469 220.539 cv
36.895 220.539 37.27 220.602 37.594 220.723 cv
37.914 220.844 38.18 221.008 38.395 221.219 cv
38.605 221.43 38.766 221.676 38.871 221.949 cv
38.977 222.23 39.031 222.527 39.031 222.84 cv
39.031 223.129 39.004 223.41 38.953 223.687 cv
38.902 223.973 38.797 224.277 38.637 224.602 cv
38.473 224.93 38.238 225.293 37.934 225.691 cv
37.625 226.094 37.219 226.555 36.715 227.07 cv
35.309 228.539 li
39.168 228.539 li
39.199 228.543 39.234 228.555 39.273 228.57 cv
39.305 228.594 39.336 228.625 39.363 228.664 cv
39.387 228.707 39.406 228.758 39.418 228.816 cv
39.43 228.883 39.434 228.953 39.438 229.031 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.809 225.082 mo
46.805 225.766 46.754 226.387 46.648 226.949 cv
46.539 227.512 46.359 227.996 46.113 228.398 cv
45.859 228.805 45.531 229.117 45.133 229.336 cv
44.727 229.559 44.234 229.668 43.648 229.668 cv
43.09 229.668 42.617 229.57 42.238 229.371 cv
41.855 229.176 41.551 228.883 41.316 228.496 cv
41.082 228.109 40.914 227.637 40.82 227.07 cv
40.719 226.508 40.672 225.859 40.672 225.125 cv
40.672 224.453 40.727 223.832 40.836 223.266 cv
40.945 222.703 41.121 222.219 41.371 221.812 cv
41.613 221.41 41.938 221.098 42.344 220.871 cv
42.742 220.652 43.238 220.539 43.828 220.539 cv
44.387 220.539 44.859 220.641 45.242 220.836 cv
45.625 221.039 45.93 221.332 46.164 221.715 cv
46.395 222.105 46.563 222.578 46.66 223.141 cv
46.758 223.703 46.805 224.352 46.809 225.082 cv
cp
45.602 225.164 mo
45.598 224.723 45.582 224.324 45.555 223.973 cv
45.52 223.621 45.473 223.312 45.414 223.043 cv
45.348 222.773 45.27 222.543 45.172 222.348 cv
45.074 222.156 44.957 221.996 44.82 221.867 cv
44.68 221.742 44.52 221.648 44.348 221.59 cv
44.168 221.535 43.973 221.508 43.758 221.504 cv
43.367 221.508 43.051 221.598 42.813 221.781 cv
42.566 221.965 42.375 222.219 42.238 222.535 cv
42.098 222.855 42.004 223.227 41.953 223.656 cv
41.902 224.086 41.879 224.551 41.879 225.043 cv
41.879 225.707 41.91 226.27 41.98 226.73 cv
42.047 227.199 42.156 227.578 42.309 227.867 cv
42.453 228.164 42.645 228.375 42.875 228.504 cv
43.105 228.641 43.387 228.707 43.719 228.703 cv
43.973 228.707 44.195 228.668 44.391 228.582 cv
44.582 228.504 44.75 228.383 44.891 228.227 cv
45.031 228.074 45.145 227.891 45.238 227.676 cv
45.324 227.461 45.398 227.223 45.457 226.961 cv
45.508 226.703 45.547 226.422 45.57 226.117 cv
45.59 225.812 45.598 225.496 45.602 225.164 cv
cp
f
33.078 190.961 mo
47.269 190.961 li
47.269 208.051 li
33.078 208.051 li
cp
0 0 0 0 cmyk
ef
39.438 203.801 mo
39.434 203.887 39.43 203.961 39.418 204.023 cv
39.406 204.09 39.391 204.145 39.371 204.184 cv
39.348 204.23 39.32 204.262 39.289 204.277 cv
39.254 204.301 39.215 204.309 39.176 204.309 cv
34.273 204.309 li
34.211 204.309 34.152 204.301 34.105 204.285 cv
34.055 204.27 34.016 204.246 33.98 204.207 cv
33.945 204.176 33.918 204.121 33.906 204.051 cv
33.887 203.98 33.879 203.895 33.883 203.793 cv
33.879 203.703 33.883 203.625 33.891 203.555 cv
33.895 203.488 33.91 203.43 33.938 203.375 cv
33.961 203.324 33.992 203.27 34.027 203.215 cv
34.063 203.164 34.105 203.109 34.164 203.047 cv
35.938 201.223 li
36.348 200.805 36.676 200.43 36.926 200.094 cv
37.172 199.766 37.363 199.461 37.496 199.184 cv
37.629 198.91 37.715 198.66 37.762 198.434 cv
37.801 198.211 37.824 198 37.824 197.805 cv
37.824 197.609 37.789 197.426 37.723 197.246 cv
37.656 197.074 37.563 196.918 37.438 196.781 cv
37.313 196.652 37.156 196.547 36.969 196.465 cv
36.781 196.391 36.563 196.352 36.316 196.348 cv
36.027 196.352 35.77 196.391 35.543 196.465 cv
35.313 196.547 35.113 196.633 34.941 196.719 cv
34.77 196.812 34.625 196.895 34.508 196.973 cv
34.391 197.051 34.305 197.09 34.254 197.09 cv
34.219 197.09 34.188 197.082 34.164 197.062 cv
34.133 197.047 34.113 197.016 34.098 196.973 cv
34.082 196.934 34.066 196.879 34.059 196.809 cv
34.047 196.742 34.043 196.66 34.047 196.562 cv
34.043 196.496 34.047 196.437 34.055 196.387 cv
34.059 196.336 34.066 196.293 34.078 196.254 cv
34.086 196.219 34.102 196.184 34.121 196.152 cv
34.141 196.121 34.176 196.082 34.234 196.031 cv
34.285 195.984 34.379 195.918 34.516 195.836 cv
34.648 195.754 34.82 195.676 35.023 195.594 cv
35.227 195.516 35.449 195.445 35.695 195.391 cv
35.938 195.336 36.195 195.309 36.469 195.309 cv
36.895 195.309 37.27 195.371 37.594 195.492 cv
37.914 195.613 38.18 195.777 38.395 195.988 cv
38.605 196.199 38.766 196.445 38.871 196.719 cv
38.977 197 39.031 197.297 39.031 197.609 cv
39.031 197.898 39.004 198.18 38.953 198.457 cv
38.902 198.742 38.797 199.047 38.637 199.371 cv
38.473 199.699 38.238 200.062 37.934 200.461 cv
37.625 200.863 37.219 201.324 36.715 201.84 cv
35.309 203.309 li
39.168 203.309 li
39.199 203.312 39.234 203.324 39.273 203.34 cv
39.305 203.363 39.336 203.395 39.363 203.434 cv
39.387 203.477 39.406 203.527 39.418 203.586 cv
39.43 203.652 39.434 203.723 39.438 203.801 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.516 203.801 mo
46.512 203.887 46.508 203.961 46.496 204.023 cv
46.484 204.09 46.469 204.145 46.449 204.184 cv
46.426 204.23 46.398 204.262 46.367 204.277 cv
46.332 204.301 46.293 204.309 46.254 204.309 cv
41.352 204.309 li
41.289 204.309 41.23 204.301 41.184 204.285 cv
41.133 204.27 41.094 204.246 41.059 204.207 cv
41.023 204.176 40.996 204.121 40.984 204.051 cv
40.965 203.98 40.957 203.895 40.961 203.793 cv
40.957 203.703 40.961 203.625 40.969 203.555 cv
40.973 203.488 40.988 203.43 41.016 203.375 cv
41.039 203.324 41.07 203.27 41.105 203.215 cv
41.141 203.164 41.184 203.109 41.242 203.047 cv
43.016 201.223 li
43.426 200.805 43.754 200.43 44.004 200.094 cv
44.25 199.766 44.441 199.461 44.574 199.184 cv
44.707 198.91 44.793 198.66 44.84 198.434 cv
44.879 198.211 44.902 198 44.902 197.805 cv
44.902 197.609 44.867 197.426 44.801 197.246 cv
44.734 197.074 44.641 196.918 44.516 196.781 cv
44.391 196.652 44.234 196.547 44.047 196.465 cv
43.859 196.391 43.641 196.352 43.395 196.348 cv
43.105 196.352 42.848 196.391 42.621 196.465 cv
42.391 196.547 42.191 196.633 42.02 196.719 cv
41.848 196.812 41.703 196.895 41.586 196.973 cv
41.469 197.051 41.383 197.09 41.332 197.09 cv
41.297 197.09 41.266 197.082 41.242 197.062 cv
41.211 197.047 41.191 197.016 41.176 196.973 cv
41.16 196.934 41.145 196.879 41.137 196.809 cv
41.125 196.742 41.121 196.66 41.125 196.562 cv
41.121 196.496 41.125 196.437 41.133 196.387 cv
41.137 196.336 41.145 196.293 41.156 196.254 cv
41.164 196.219 41.18 196.184 41.199 196.152 cv
41.219 196.121 41.254 196.082 41.313 196.031 cv
41.363 195.984 41.457 195.918 41.594 195.836 cv
41.727 195.754 41.898 195.676 42.102 195.594 cv
42.305 195.516 42.527 195.445 42.773 195.391 cv
43.016 195.336 43.273 195.309 43.547 195.309 cv
43.973 195.309 44.348 195.371 44.672 195.492 cv
44.992 195.613 45.258 195.777 45.473 195.988 cv
45.684 196.199 45.844 196.445 45.949 196.719 cv
46.055 197 46.109 197.297 46.109 197.609 cv
46.109 197.898 46.082 198.18 46.031 198.457 cv
45.98 198.742 45.875 199.047 45.715 199.371 cv
45.551 199.699 45.316 200.062 45.012 200.461 cv
44.703 200.863 44.297 201.324 43.793 201.84 cv
42.387 203.309 li
46.246 203.309 li
46.277 203.312 46.313 203.324 46.352 203.34 cv
46.383 203.363 46.414 203.395 46.441 203.434 cv
46.465 203.477 46.484 203.527 46.496 203.586 cv
46.508 203.652 46.512 203.723 46.516 203.801 cv
cp
f
33.078 165.738 mo
47.269 165.738 li
47.269 182.828 li
33.078 182.828 li
cp
0 0 0 0 cmyk
ef
39.438 178.602 mo
39.434 178.687 39.43 178.762 39.418 178.824 cv
39.406 178.891 39.391 178.945 39.371 178.984 cv
39.348 179.031 39.32 179.062 39.289 179.078 cv
39.254 179.102 39.215 179.109 39.176 179.109 cv
34.273 179.109 li
34.211 179.109 34.152 179.102 34.105 179.086 cv
34.055 179.07 34.016 179.047 33.98 179.008 cv
33.945 178.977 33.918 178.922 33.906 178.852 cv
33.887 178.781 33.879 178.695 33.883 178.594 cv
33.879 178.504 33.883 178.426 33.891 178.355 cv
33.895 178.289 33.91 178.23 33.938 178.176 cv
33.961 178.125 33.992 178.07 34.027 178.016 cv
34.063 177.965 34.105 177.91 34.164 177.848 cv
35.938 176.023 li
36.348 175.605 36.676 175.23 36.926 174.895 cv
37.172 174.566 37.363 174.262 37.496 173.984 cv
37.629 173.711 37.715 173.461 37.762 173.234 cv
37.801 173.012 37.824 172.801 37.824 172.605 cv
37.824 172.41 37.789 172.227 37.723 172.047 cv
37.656 171.875 37.563 171.719 37.438 171.582 cv
37.313 171.453 37.156 171.348 36.969 171.266 cv
36.781 171.191 36.563 171.152 36.316 171.148 cv
36.027 171.152 35.77 171.191 35.543 171.266 cv
35.313 171.348 35.113 171.434 34.941 171.52 cv
34.77 171.613 34.625 171.695 34.508 171.773 cv
34.391 171.852 34.305 171.891 34.254 171.891 cv
34.219 171.891 34.188 171.883 34.164 171.863 cv
34.133 171.848 34.113 171.816 34.098 171.773 cv
34.082 171.734 34.066 171.68 34.059 171.609 cv
34.047 171.543 34.043 171.461 34.047 171.363 cv
34.043 171.297 34.047 171.238 34.055 171.187 cv
34.059 171.137 34.066 171.094 34.078 171.055 cv
34.086 171.02 34.102 170.984 34.121 170.953 cv
34.141 170.922 34.176 170.883 34.234 170.832 cv
34.285 170.785 34.379 170.719 34.516 170.637 cv
34.648 170.555 34.82 170.477 35.023 170.395 cv
35.227 170.316 35.449 170.246 35.695 170.191 cv
35.938 170.137 36.195 170.109 36.469 170.109 cv
36.895 170.109 37.27 170.172 37.594 170.293 cv
37.914 170.414 38.18 170.578 38.395 170.789 cv
38.605 171 38.766 171.246 38.871 171.52 cv
38.977 171.801 39.031 172.098 39.031 172.41 cv
39.031 172.699 39.004 172.98 38.953 173.258 cv
38.902 173.543 38.797 173.848 38.637 174.172 cv
38.473 174.5 38.238 174.863 37.934 175.262 cv
37.625 175.664 37.219 176.125 36.715 176.641 cv
35.309 178.109 li
39.168 178.109 li
39.199 178.113 39.234 178.125 39.273 178.141 cv
39.305 178.164 39.336 178.195 39.363 178.234 cv
39.387 178.277 39.406 178.328 39.418 178.387 cv
39.43 178.453 39.434 178.523 39.438 178.602 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.891 176.586 mo
46.887 176.738 46.863 176.859 46.82 176.945 cv
46.773 177.035 46.711 177.078 46.629 177.074 cv
45.629 177.074 li
45.629 178.937 li
45.629 178.977 45.617 179.008 45.602 179.031 cv
45.578 179.059 45.547 179.078 45.504 179.098 cv
45.453 179.113 45.391 179.125 45.32 179.137 cv
45.242 179.145 45.148 179.148 45.031 179.152 cv
44.914 179.148 44.816 179.145 44.746 179.137 cv
44.668 179.125 44.609 179.113 44.566 179.098 cv
44.52 179.078 44.488 179.059 44.473 179.031 cv
44.453 179.008 44.445 178.977 44.449 178.937 cv
44.449 177.074 li
40.82 177.074 li
40.762 177.078 40.719 177.07 40.684 177.055 cv
40.648 177.043 40.613 177.016 40.586 176.977 cv
40.555 176.941 40.535 176.891 40.523 176.82 cv
40.512 176.754 40.508 176.664 40.508 176.551 cv
40.508 176.469 40.508 176.391 40.516 176.32 cv
40.516 176.25 40.527 176.187 40.543 176.133 cv
40.555 176.078 40.57 176.023 40.598 175.969 cv
40.617 175.914 40.645 175.859 40.68 175.797 cv
43.84 170.41 li
43.859 170.375 43.895 170.344 43.941 170.316 cv
43.984 170.289 44.039 170.266 44.113 170.246 cv
44.18 170.23 44.266 170.219 44.371 170.207 cv
44.473 170.203 44.594 170.199 44.734 170.195 cv
44.883 170.199 45.02 170.203 45.137 170.215 cv
45.25 170.227 45.34 170.242 45.414 170.258 cv
45.48 170.277 45.535 170.301 45.574 170.332 cv
45.609 170.363 45.629 170.398 45.629 170.437 cv
45.629 176.102 li
46.629 176.102 li
46.703 176.105 46.766 176.145 46.816 176.223 cv
46.863 176.305 46.887 176.426 46.891 176.586 cv
cp
44.449 171.234 mo
44.438 171.234 li
41.586 176.102 li
44.449 176.102 li
cp
f
33.078 140.531 mo
47.269 140.531 li
47.269 157.621 li
33.078 157.621 li
cp
0 0 0 0 cmyk
ef
39.438 153.383 mo
39.434 153.469 39.43 153.543 39.418 153.605 cv
39.406 153.672 39.391 153.727 39.371 153.766 cv
39.348 153.812 39.32 153.844 39.289 153.859 cv
39.254 153.883 39.215 153.891 39.176 153.891 cv
34.273 153.891 li
34.211 153.891 34.152 153.883 34.105 153.867 cv
34.055 153.852 34.016 153.828 33.98 153.789 cv
33.945 153.758 33.918 153.703 33.906 153.633 cv
33.887 153.562 33.879 153.477 33.883 153.375 cv
33.879 153.285 33.883 153.207 33.891 153.137 cv
33.895 153.07 33.91 153.012 33.938 152.957 cv
33.961 152.906 33.992 152.852 34.027 152.797 cv
34.063 152.746 34.105 152.691 34.164 152.629 cv
35.938 150.805 li
36.348 150.387 36.676 150.012 36.926 149.676 cv
37.172 149.348 37.363 149.043 37.496 148.766 cv
37.629 148.492 37.715 148.242 37.762 148.016 cv
37.801 147.793 37.824 147.582 37.824 147.387 cv
37.824 147.191 37.789 147.008 37.723 146.828 cv
37.656 146.656 37.563 146.5 37.438 146.363 cv
37.313 146.234 37.156 146.129 36.969 146.047 cv
36.781 145.973 36.563 145.934 36.316 145.93 cv
36.027 145.934 35.77 145.973 35.543 146.047 cv
35.313 146.129 35.113 146.215 34.941 146.301 cv
34.77 146.395 34.625 146.477 34.508 146.555 cv
34.391 146.633 34.305 146.672 34.254 146.672 cv
34.219 146.672 34.188 146.664 34.164 146.645 cv
34.133 146.629 34.113 146.598 34.098 146.555 cv
34.082 146.516 34.066 146.461 34.059 146.391 cv
34.047 146.324 34.043 146.242 34.047 146.145 cv
34.043 146.078 34.047 146.02 34.055 145.969 cv
34.059 145.918 34.066 145.875 34.078 145.836 cv
34.086 145.801 34.102 145.766 34.121 145.734 cv
34.141 145.703 34.176 145.664 34.234 145.613 cv
34.285 145.566 34.379 145.5 34.516 145.418 cv
34.648 145.336 34.82 145.258 35.023 145.176 cv
35.227 145.098 35.449 145.027 35.695 144.973 cv
35.938 144.918 36.195 144.891 36.469 144.891 cv
36.895 144.891 37.27 144.953 37.594 145.074 cv
37.914 145.195 38.18 145.359 38.395 145.57 cv
38.605 145.781 38.766 146.027 38.871 146.301 cv
38.977 146.582 39.031 146.879 39.031 147.191 cv
39.031 147.48 39.004 147.762 38.953 148.039 cv
38.902 148.324 38.797 148.629 38.637 148.953 cv
38.473 149.281 38.238 149.645 37.934 150.043 cv
37.625 150.445 37.219 150.906 36.715 151.422 cv
35.309 152.891 li
39.168 152.891 li
39.199 152.895 39.234 152.906 39.273 152.922 cv
39.305 152.945 39.336 152.977 39.363 153.016 cv
39.387 153.059 39.406 153.109 39.418 153.168 cv
39.43 153.234 39.434 153.305 39.438 153.383 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.742 151.02 mo
46.742 151.41 46.68 151.789 46.563 152.148 cv
46.438 152.516 46.254 152.832 46.012 153.105 cv
45.762 153.383 45.449 153.605 45.074 153.77 cv
44.691 153.937 44.246 154.02 43.73 154.02 cv
43.359 154.02 43.031 153.977 42.75 153.883 cv
42.465 153.797 42.219 153.664 42.008 153.492 cv
41.797 153.324 41.621 153.117 41.484 152.871 cv
41.344 152.625 41.23 152.344 41.148 152.027 cv
41.063 151.715 41.004 151.371 40.969 150.992 cv
40.93 150.621 40.91 150.219 40.914 149.785 cv
40.91 149.406 40.93 149.023 40.973 148.633 cv
41.012 148.25 41.086 147.875 41.191 147.508 cv
41.297 147.148 41.441 146.809 41.621 146.492 cv
41.801 146.176 42.027 145.898 42.301 145.664 cv
42.574 145.43 42.898 145.242 43.277 145.102 cv
43.656 144.965 44.098 144.898 44.602 144.895 cv
44.77 144.898 44.941 144.906 45.113 144.926 cv
45.285 144.949 45.445 144.98 45.594 145.012 cv
45.742 145.051 45.863 145.086 45.965 145.125 cv
46.063 145.164 46.129 145.199 46.164 145.223 cv
46.191 145.25 46.215 145.277 46.234 145.305 cv
46.25 145.336 46.266 145.367 46.273 145.402 cv
46.281 145.437 46.285 145.477 46.293 145.52 cv
46.293 145.562 46.297 145.617 46.301 145.68 cv
46.297 145.766 46.297 145.836 46.297 145.891 cv
46.293 145.953 46.281 146 46.27 146.035 cv
46.25 146.074 46.23 146.102 46.207 146.117 cv
46.18 146.137 46.148 146.145 46.109 146.145 cv
46.059 146.145 45.988 146.129 45.902 146.098 cv
45.813 146.066 45.707 146.031 45.586 145.988 cv
45.461 145.953 45.313 145.918 45.137 145.883 cv
44.961 145.855 44.758 145.84 44.527 145.836 cv
44.098 145.84 43.73 145.926 43.426 146.098 cv
43.121 146.27 42.871 146.504 42.676 146.797 cv
42.48 147.09 42.336 147.43 42.246 147.812 cv
42.148 148.203 42.094 148.605 42.086 149.023 cv
42.203 148.957 42.34 148.891 42.488 148.82 cv
42.637 148.754 42.797 148.691 42.973 148.633 cv
43.148 148.582 43.336 148.535 43.531 148.5 cv
43.727 148.469 43.938 148.453 44.164 148.449 cv
44.641 148.453 45.043 148.52 45.375 148.645 cv
45.703 148.777 45.969 148.957 46.176 149.187 cv
46.375 149.418 46.52 149.687 46.609 150 cv
46.695 150.312 46.742 150.652 46.742 151.02 cv
cp
45.547 151.129 mo
45.547 150.867 45.52 150.625 45.469 150.406 cv
45.414 150.191 45.324 150.008 45.203 149.852 cv
45.078 149.703 44.914 149.586 44.711 149.504 cv
44.5 149.422 44.246 149.379 43.949 149.379 cv
43.777 149.379 43.609 149.395 43.441 149.426 cv
43.27 149.457 43.105 149.5 42.949 149.547 cv
42.789 149.602 42.641 149.664 42.5 149.734 cv
42.355 149.809 42.223 149.883 42.105 149.961 cv
42.102 150.555 42.141 151.051 42.219 151.445 cv
42.293 151.844 42.402 152.16 42.547 152.398 cv
42.691 152.641 42.871 152.812 43.086 152.914 cv
43.301 153.02 43.551 153.07 43.84 153.066 cv
44.129 153.07 44.383 153.016 44.598 152.902 cv
44.813 152.797 44.988 152.648 45.133 152.461 cv
45.273 152.277 45.379 152.07 45.445 151.84 cv
45.512 151.609 45.547 151.375 45.547 151.129 cv
cp
f
33.078 115.309 mo
47.269 115.309 li
47.269 132.399 li
33.078 132.399 li
cp
0 0 0 0 cmyk
ef
39.438 128.152 mo
39.434 128.238 39.43 128.312 39.418 128.375 cv
39.406 128.441 39.391 128.496 39.371 128.535 cv
39.348 128.582 39.32 128.613 39.289 128.629 cv
39.254 128.652 39.215 128.66 39.176 128.66 cv
34.273 128.66 li
34.211 128.66 34.152 128.652 34.105 128.637 cv
34.055 128.621 34.016 128.598 33.98 128.559 cv
33.945 128.527 33.918 128.473 33.906 128.402 cv
33.887 128.332 33.879 128.246 33.883 128.145 cv
33.879 128.055 33.883 127.977 33.891 127.906 cv
33.895 127.84 33.91 127.781 33.938 127.727 cv
33.961 127.676 33.992 127.621 34.027 127.566 cv
34.063 127.516 34.105 127.461 34.164 127.398 cv
35.938 125.574 li
36.348 125.156 36.676 124.781 36.926 124.445 cv
37.172 124.117 37.363 123.812 37.496 123.535 cv
37.629 123.262 37.715 123.012 37.762 122.785 cv
37.801 122.562 37.824 122.352 37.824 122.156 cv
37.824 121.961 37.789 121.777 37.723 121.598 cv
37.656 121.426 37.563 121.27 37.438 121.133 cv
37.313 121.004 37.156 120.898 36.969 120.816 cv
36.781 120.742 36.563 120.703 36.316 120.699 cv
36.027 120.703 35.77 120.742 35.543 120.816 cv
35.313 120.898 35.113 120.984 34.941 121.07 cv
34.77 121.164 34.625 121.246 34.508 121.324 cv
34.391 121.402 34.305 121.441 34.254 121.441 cv
34.219 121.441 34.188 121.434 34.164 121.414 cv
34.133 121.398 34.113 121.367 34.098 121.324 cv
34.082 121.285 34.066 121.23 34.059 121.16 cv
34.047 121.094 34.043 121.012 34.047 120.914 cv
34.043 120.848 34.047 120.789 34.055 120.738 cv
34.059 120.687 34.066 120.645 34.078 120.605 cv
34.086 120.57 34.102 120.535 34.121 120.504 cv
34.141 120.473 34.176 120.434 34.234 120.383 cv
34.285 120.336 34.379 120.27 34.516 120.187 cv
34.648 120.105 34.82 120.027 35.023 119.945 cv
35.227 119.867 35.449 119.797 35.695 119.742 cv
35.938 119.687 36.195 119.66 36.469 119.66 cv
36.895 119.66 37.27 119.723 37.594 119.844 cv
37.914 119.965 38.18 120.129 38.395 120.34 cv
38.605 120.551 38.766 120.797 38.871 121.07 cv
38.977 121.352 39.031 121.648 39.031 121.961 cv
39.031 122.25 39.004 122.531 38.953 122.809 cv
38.902 123.094 38.797 123.398 38.637 123.723 cv
38.473 124.051 38.238 124.414 37.934 124.812 cv
37.625 125.215 37.219 125.676 36.715 126.191 cv
35.309 127.66 li
39.168 127.66 li
39.199 127.664 39.234 127.676 39.273 127.691 cv
39.305 127.715 39.336 127.746 39.363 127.785 cv
39.387 127.828 39.406 127.879 39.418 127.937 cv
39.43 128.004 39.434 128.074 39.438 128.152 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.719 126.383 mo
46.719 126.77 46.648 127.113 46.512 127.41 cv
46.375 127.715 46.18 127.965 45.922 128.168 cv
45.664 128.375 45.344 128.531 44.965 128.633 cv
44.582 128.738 44.148 128.789 43.664 128.789 cv
43.203 128.789 42.793 128.742 42.434 128.648 cv
42.07 128.555 41.766 128.414 41.516 128.223 cv
41.266 128.039 41.074 127.809 40.941 127.531 cv
40.809 127.258 40.742 126.945 40.742 126.59 cv
40.742 126.316 40.785 126.059 40.879 125.824 cv
40.965 125.59 41.098 125.375 41.273 125.18 cv
41.441 124.984 41.652 124.801 41.906 124.625 cv
42.156 124.457 42.441 124.293 42.758 124.137 cv
42.484 123.996 42.242 123.848 42.031 123.687 cv
41.82 123.531 41.641 123.359 41.496 123.172 cv
41.348 122.988 41.238 122.793 41.164 122.582 cv
41.086 122.375 41.047 122.145 41.051 121.895 cv
41.047 121.586 41.102 121.293 41.219 121.02 cv
41.328 120.75 41.5 120.516 41.727 120.312 cv
41.953 120.113 42.238 119.953 42.59 119.836 cv
42.934 119.719 43.344 119.66 43.813 119.66 cv
44.258 119.66 44.645 119.715 44.973 119.82 cv
45.301 119.93 45.57 120.074 45.781 120.258 cv
45.992 120.445 46.148 120.664 46.254 120.914 cv
46.352 121.164 46.402 121.434 46.406 121.723 cv
46.402 121.957 46.363 122.184 46.293 122.395 cv
46.215 122.613 46.105 122.816 45.957 123.004 cv
45.809 123.199 45.629 123.379 45.418 123.543 cv
45.207 123.715 44.965 123.871 44.691 124.012 cv
45.012 124.176 45.297 124.34 45.555 124.508 cv
45.805 124.676 46.02 124.855 46.195 125.051 cv
46.363 125.246 46.492 125.453 46.586 125.668 cv
46.672 125.887 46.719 126.125 46.719 126.383 cv
cp
45.238 121.832 mo
45.234 121.645 45.203 121.469 45.137 121.312 cv
45.07 121.156 44.973 121.023 44.848 120.914 cv
44.719 120.805 44.559 120.723 44.371 120.664 cv
44.176 120.609 43.961 120.582 43.723 120.578 cv
43.227 120.582 42.852 120.691 42.602 120.914 cv
42.344 121.141 42.219 121.449 42.223 121.832 cv
42.219 122.012 42.25 122.176 42.313 122.328 cv
42.375 122.484 42.469 122.629 42.602 122.766 cv
42.727 122.902 42.891 123.035 43.094 123.164 cv
43.289 123.297 43.527 123.434 43.805 123.574 cv
44.266 123.34 44.621 123.078 44.867 122.785 cv
45.113 122.5 45.234 122.184 45.238 121.832 cv
cp
45.527 126.508 mo
45.523 126.301 45.484 126.109 45.41 125.937 cv
45.328 125.77 45.211 125.609 45.055 125.457 cv
44.898 125.309 44.699 125.164 44.465 125.023 cv
44.227 124.887 43.957 124.742 43.648 124.59 cv
43.359 124.734 43.105 124.875 42.891 125.016 cv
42.672 125.156 42.492 125.305 42.355 125.453 cv
42.215 125.609 42.109 125.766 42.039 125.93 cv
41.965 126.098 41.93 126.281 41.934 126.48 cv
41.93 126.926 42.082 127.27 42.391 127.508 cv
42.691 127.754 43.145 127.875 43.75 127.871 cv
44.332 127.875 44.777 127.754 45.078 127.504 cv
45.375 127.262 45.523 126.93 45.527 126.508 cv
cp
f
33.078 90.102 mo
47.269 90.102 li
47.269 107.192 li
33.078 107.192 li
cp
0 0 0 0 cmyk
ef
39.367 100.906 mo
39.363 101.316 39.293 101.684 39.152 102.008 cv
39.008 102.336 38.805 102.617 38.543 102.848 cv
38.277 103.082 37.949 103.258 37.563 103.383 cv
37.172 103.508 36.734 103.57 36.25 103.57 cv
35.945 103.57 35.668 103.543 35.414 103.496 cv
35.152 103.449 34.922 103.398 34.727 103.328 cv
34.523 103.266 34.359 103.195 34.227 103.125 cv
34.094 103.055 34.008 103.004 33.977 102.969 cv
33.938 102.941 33.914 102.91 33.898 102.875 cv
33.879 102.844 33.859 102.805 33.848 102.758 cv
33.832 102.715 33.824 102.66 33.816 102.59 cv
33.809 102.527 33.805 102.445 33.809 102.344 cv
33.805 102.184 33.82 102.07 33.855 102.004 cv
33.887 101.941 33.934 101.906 33.996 101.906 cv
34.039 101.906 34.121 101.945 34.246 102.016 cv
34.367 102.094 34.527 102.172 34.723 102.254 cv
34.914 102.34 35.141 102.418 35.406 102.488 cv
35.664 102.562 35.957 102.598 36.277 102.598 cv
36.586 102.598 36.855 102.559 37.094 102.48 cv
37.324 102.402 37.523 102.293 37.684 102.152 cv
37.84 102.012 37.957 101.844 38.039 101.648 cv
38.117 101.453 38.156 101.242 38.16 101.016 cv
38.156 100.766 38.105 100.539 38.008 100.336 cv
37.902 100.137 37.754 99.965 37.563 99.816 cv
37.363 99.672 37.125 99.559 36.84 99.48 cv
36.555 99.402 36.23 99.363 35.867 99.363 cv
34.996 99.363 li
34.953 99.363 34.918 99.355 34.883 99.34 cv
34.848 99.324 34.816 99.297 34.793 99.258 cv
34.766 99.223 34.746 99.176 34.73 99.117 cv
34.715 99.059 34.707 98.98 34.707 98.883 cv
34.707 98.797 34.711 98.727 34.727 98.668 cv
34.734 98.613 34.754 98.566 34.785 98.531 cv
34.809 98.496 34.84 98.473 34.871 98.453 cv
34.902 98.441 34.938 98.434 34.98 98.43 cv
35.754 98.43 li
36.055 98.434 36.324 98.395 36.566 98.312 cv
36.801 98.238 37.004 98.125 37.176 97.977 cv
37.34 97.832 37.469 97.656 37.559 97.453 cv
37.648 97.25 37.695 97.023 37.695 96.77 cv
37.695 96.59 37.664 96.414 37.605 96.246 cv
37.543 96.082 37.453 95.937 37.336 95.812 cv
37.215 95.687 37.063 95.59 36.883 95.52 cv
36.695 95.449 36.484 95.414 36.242 95.414 cv
35.977 95.414 35.73 95.457 35.512 95.535 cv
35.285 95.617 35.09 95.703 34.918 95.793 cv
34.742 95.887 34.598 95.973 34.484 96.051 cv
34.371 96.133 34.289 96.172 34.246 96.168 cv
34.211 96.172 34.184 96.164 34.16 96.152 cv
34.133 96.141 34.113 96.117 34.098 96.082 cv
34.082 96.051 34.07 96.004 34.063 95.937 cv
34.055 95.879 34.051 95.797 34.055 95.695 cv
34.051 95.629 34.051 95.57 34.059 95.516 cv
34.059 95.465 34.07 95.418 34.086 95.375 cv
34.102 95.34 34.117 95.305 34.137 95.27 cv
34.152 95.242 34.184 95.203 34.227 95.156 cv
34.27 95.113 34.355 95.051 34.492 94.969 cv
34.621 94.887 34.785 94.809 34.98 94.727 cv
35.172 94.648 35.395 94.578 35.652 94.523 cv
35.902 94.469 36.176 94.441 36.473 94.441 cv
36.879 94.441 37.242 94.496 37.555 94.598 cv
37.867 94.707 38.125 94.855 38.336 95.043 cv
38.539 95.238 38.695 95.469 38.801 95.734 cv
38.902 96.004 38.953 96.297 38.957 96.621 cv
38.953 96.902 38.918 97.164 38.848 97.398 cv
38.773 97.641 38.664 97.852 38.523 98.035 cv
38.379 98.223 38.207 98.379 38.004 98.508 cv
37.797 98.641 37.559 98.734 37.289 98.781 cv
37.289 98.793 li
37.594 98.828 37.875 98.902 38.129 99.023 cv
38.383 99.145 38.602 99.297 38.785 99.48 cv
38.965 99.664 39.105 99.879 39.211 100.121 cv
39.313 100.367 39.363 100.629 39.367 100.906 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.809 98.984 mo
46.805 99.668 46.754 100.289 46.648 100.852 cv
46.539 101.414 46.359 101.898 46.113 102.301 cv
45.859 102.707 45.531 103.02 45.133 103.238 cv
44.727 103.461 44.234 103.57 43.648 103.57 cv
43.09 103.57 42.617 103.473 42.238 103.273 cv
41.855 103.078 41.551 102.785 41.316 102.398 cv
41.082 102.012 40.914 101.539 40.82 100.973 cv
40.719 100.41 40.672 99.762 40.672 99.027 cv
40.672 98.355 40.727 97.734 40.836 97.168 cv
40.945 96.605 41.121 96.121 41.371 95.715 cv
41.613 95.312 41.938 95 42.344 94.773 cv
42.742 94.555 43.238 94.441 43.828 94.441 cv
44.387 94.441 44.859 94.543 45.242 94.738 cv
45.625 94.941 45.93 95.234 46.164 95.617 cv
46.395 96.008 46.563 96.48 46.66 97.043 cv
46.758 97.605 46.805 98.254 46.809 98.984 cv
cp
45.602 99.066 mo
45.598 98.625 45.582 98.227 45.555 97.875 cv
45.52 97.523 45.473 97.215 45.414 96.945 cv
45.348 96.676 45.27 96.445 45.172 96.25 cv
45.074 96.059 44.957 95.898 44.82 95.77 cv
44.68 95.645 44.52 95.551 44.348 95.492 cv
44.168 95.437 43.973 95.41 43.758 95.406 cv
43.367 95.41 43.051 95.5 42.813 95.684 cv
42.566 95.867 42.375 96.121 42.238 96.437 cv
42.098 96.758 42.004 97.129 41.953 97.559 cv
41.902 97.988 41.879 98.453 41.879 98.945 cv
41.879 99.609 41.91 100.172 41.98 100.633 cv
42.047 101.102 42.156 101.48 42.309 101.77 cv
42.453 102.066 42.645 102.277 42.875 102.406 cv
43.105 102.543 43.387 102.609 43.719 102.605 cv
43.973 102.609 44.195 102.57 44.391 102.484 cv
44.582 102.406 44.75 102.285 44.891 102.129 cv
45.031 101.977 45.145 101.793 45.238 101.578 cv
45.324 101.363 45.398 101.125 45.457 100.863 cv
45.508 100.605 45.547 100.324 45.57 100.02 cv
45.59 99.715 45.598 99.398 45.602 99.066 cv
cp
f
33.078 64.891 mo
47.269 64.891 li
47.269 81.981 li
33.078 81.981 li
cp
0 0 0 0 cmyk
ef
39.367 75.684 mo
39.363 76.094 39.293 76.461 39.152 76.785 cv
39.008 77.113 38.805 77.395 38.543 77.625 cv
38.277 77.859 37.949 78.035 37.563 78.16 cv
37.172 78.285 36.734 78.348 36.25 78.348 cv
35.945 78.348 35.668 78.32 35.414 78.273 cv
35.152 78.227 34.922 78.176 34.727 78.105 cv
34.523 78.043 34.359 77.973 34.227 77.902 cv
34.094 77.832 34.008 77.781 33.977 77.746 cv
33.938 77.719 33.914 77.687 33.898 77.652 cv
33.879 77.621 33.859 77.582 33.848 77.535 cv
33.832 77.492 33.824 77.437 33.816 77.367 cv
33.809 77.305 33.805 77.223 33.809 77.121 cv
33.805 76.961 33.82 76.848 33.855 76.781 cv
33.887 76.719 33.934 76.684 33.996 76.684 cv
34.039 76.684 34.121 76.723 34.246 76.793 cv
34.367 76.871 34.527 76.949 34.723 77.031 cv
34.914 77.117 35.141 77.195 35.406 77.266 cv
35.664 77.34 35.957 77.375 36.277 77.375 cv
36.586 77.375 36.855 77.336 37.094 77.258 cv
37.324 77.18 37.523 77.07 37.684 76.93 cv
37.84 76.789 37.957 76.621 38.039 76.426 cv
38.117 76.23 38.156 76.02 38.16 75.793 cv
38.156 75.543 38.105 75.316 38.008 75.113 cv
37.902 74.914 37.754 74.742 37.563 74.594 cv
37.363 74.449 37.125 74.336 36.84 74.258 cv
36.555 74.18 36.23 74.141 35.867 74.141 cv
34.996 74.141 li
34.953 74.141 34.918 74.133 34.883 74.117 cv
34.848 74.102 34.816 74.074 34.793 74.035 cv
34.766 74 34.746 73.953 34.73 73.895 cv
34.715 73.836 34.707 73.758 34.707 73.66 cv
34.707 73.574 34.711 73.504 34.727 73.445 cv
34.734 73.391 34.754 73.344 34.785 73.309 cv
34.809 73.273 34.84 73.25 34.871 73.23 cv
34.902 73.219 34.938 73.211 34.98 73.207 cv
35.754 73.207 li
36.055 73.211 36.324 73.172 36.566 73.09 cv
36.801 73.016 37.004 72.902 37.176 72.754 cv
37.34 72.609 37.469 72.434 37.559 72.23 cv
37.648 72.027 37.695 71.801 37.695 71.547 cv
37.695 71.367 37.664 71.191 37.605 71.023 cv
37.543 70.859 37.453 70.715 37.336 70.59 cv
37.215 70.465 37.063 70.367 36.883 70.297 cv
36.695 70.227 36.484 70.191 36.242 70.191 cv
35.977 70.191 35.73 70.234 35.512 70.312 cv
35.285 70.395 35.09 70.48 34.918 70.57 cv
34.742 70.664 34.598 70.75 34.484 70.828 cv
34.371 70.91 34.289 70.949 34.246 70.945 cv
34.211 70.949 34.184 70.941 34.16 70.93 cv
34.133 70.918 34.113 70.895 34.098 70.859 cv
34.082 70.828 34.07 70.781 34.063 70.715 cv
34.055 70.656 34.051 70.574 34.055 70.473 cv
34.051 70.406 34.051 70.348 34.059 70.293 cv
34.059 70.242 34.07 70.195 34.086 70.152 cv
34.102 70.117 34.117 70.082 34.137 70.047 cv
34.152 70.02 34.184 69.98 34.227 69.934 cv
34.27 69.891 34.355 69.828 34.492 69.746 cv
34.621 69.664 34.785 69.586 34.98 69.504 cv
35.172 69.426 35.395 69.355 35.652 69.301 cv
35.902 69.246 36.176 69.219 36.473 69.219 cv
36.879 69.219 37.242 69.273 37.555 69.375 cv
37.867 69.484 38.125 69.633 38.336 69.82 cv
38.539 70.016 38.695 70.246 38.801 70.512 cv
38.902 70.781 38.953 71.074 38.957 71.398 cv
38.953 71.68 38.918 71.941 38.848 72.176 cv
38.773 72.418 38.664 72.629 38.523 72.812 cv
38.379 73 38.207 73.156 38.004 73.285 cv
37.797 73.418 37.559 73.512 37.289 73.559 cv
37.289 73.57 li
37.594 73.605 37.875 73.68 38.129 73.801 cv
38.383 73.922 38.602 74.074 38.785 74.258 cv
38.965 74.441 39.105 74.656 39.211 74.898 cv
39.313 75.145 39.363 75.406 39.367 75.684 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.516 77.711 mo
46.512 77.797 46.508 77.871 46.496 77.934 cv
46.484 78 46.469 78.055 46.449 78.094 cv
46.426 78.141 46.398 78.172 46.367 78.187 cv
46.332 78.211 46.293 78.219 46.254 78.219 cv
41.352 78.219 li
41.289 78.219 41.23 78.211 41.184 78.195 cv
41.133 78.18 41.094 78.156 41.059 78.117 cv
41.023 78.086 40.996 78.031 40.984 77.961 cv
40.965 77.891 40.957 77.805 40.961 77.703 cv
40.957 77.613 40.961 77.535 40.969 77.465 cv
40.973 77.398 40.988 77.34 41.016 77.285 cv
41.039 77.234 41.07 77.18 41.105 77.125 cv
41.141 77.074 41.184 77.02 41.242 76.957 cv
43.016 75.133 li
43.426 74.715 43.754 74.34 44.004 74.004 cv
44.25 73.676 44.441 73.371 44.574 73.094 cv
44.707 72.82 44.793 72.57 44.84 72.344 cv
44.879 72.121 44.902 71.91 44.902 71.715 cv
44.902 71.52 44.867 71.336 44.801 71.156 cv
44.734 70.984 44.641 70.828 44.516 70.691 cv
44.391 70.562 44.234 70.457 44.047 70.375 cv
43.859 70.301 43.641 70.262 43.395 70.258 cv
43.105 70.262 42.848 70.301 42.621 70.375 cv
42.391 70.457 42.191 70.543 42.02 70.629 cv
41.848 70.723 41.703 70.805 41.586 70.883 cv
41.469 70.961 41.383 71 41.332 71 cv
41.297 71 41.266 70.992 41.242 70.973 cv
41.211 70.957 41.191 70.926 41.176 70.883 cv
41.16 70.844 41.145 70.789 41.137 70.719 cv
41.125 70.652 41.121 70.57 41.125 70.473 cv
41.121 70.406 41.125 70.348 41.133 70.297 cv
41.137 70.246 41.145 70.203 41.156 70.164 cv
41.164 70.129 41.18 70.094 41.199 70.062 cv
41.219 70.031 41.254 69.992 41.313 69.941 cv
41.363 69.895 41.457 69.828 41.594 69.746 cv
41.727 69.664 41.898 69.586 42.102 69.504 cv
42.305 69.426 42.527 69.355 42.773 69.301 cv
43.016 69.246 43.273 69.219 43.547 69.219 cv
43.973 69.219 44.348 69.281 44.672 69.402 cv
44.992 69.523 45.258 69.687 45.473 69.898 cv
45.684 70.109 45.844 70.355 45.949 70.629 cv
46.055 70.91 46.109 71.207 46.109 71.52 cv
46.109 71.809 46.082 72.09 46.031 72.367 cv
45.98 72.652 45.875 72.957 45.715 73.281 cv
45.551 73.609 45.316 73.973 45.012 74.371 cv
44.703 74.773 44.297 75.234 43.793 75.75 cv
42.387 77.219 li
46.246 77.219 li
46.277 77.223 46.313 77.234 46.352 77.25 cv
46.383 77.273 46.414 77.305 46.441 77.344 cv
46.465 77.387 46.484 77.437 46.496 77.496 cv
46.508 77.562 46.512 77.633 46.516 77.711 cv
cp
f
33.078 39.672 mo
47.269 39.672 li
47.269 56.762 li
33.078 56.762 li
cp
0 0 0 0 cmyk
ef
39.367 50.484 mo
39.363 50.895 39.293 51.262 39.152 51.586 cv
39.008 51.914 38.805 52.195 38.543 52.426 cv
38.277 52.66 37.949 52.836 37.563 52.961 cv
37.172 53.086 36.734 53.148 36.25 53.148 cv
35.945 53.148 35.668 53.121 35.414 53.074 cv
35.152 53.027 34.922 52.977 34.727 52.906 cv
34.523 52.844 34.359 52.773 34.227 52.703 cv
34.094 52.633 34.008 52.582 33.977 52.547 cv
33.938 52.52 33.914 52.488 33.898 52.453 cv
33.879 52.422 33.859 52.383 33.848 52.336 cv
33.832 52.293 33.824 52.238 33.816 52.168 cv
33.809 52.105 33.805 52.023 33.809 51.922 cv
33.805 51.762 33.82 51.648 33.855 51.582 cv
33.887 51.52 33.934 51.484 33.996 51.484 cv
34.039 51.484 34.121 51.523 34.246 51.594 cv
34.367 51.672 34.527 51.75 34.723 51.832 cv
34.914 51.918 35.141 51.996 35.406 52.066 cv
35.664 52.141 35.957 52.176 36.277 52.176 cv
36.586 52.176 36.855 52.137 37.094 52.059 cv
37.324 51.98 37.523 51.871 37.684 51.73 cv
37.84 51.59 37.957 51.422 38.039 51.227 cv
38.117 51.031 38.156 50.82 38.16 50.594 cv
38.156 50.344 38.105 50.117 38.008 49.914 cv
37.902 49.715 37.754 49.543 37.563 49.395 cv
37.363 49.25 37.125 49.137 36.84 49.059 cv
36.555 48.98 36.23 48.941 35.867 48.941 cv
34.996 48.941 li
34.953 48.941 34.918 48.934 34.883 48.918 cv
34.848 48.902 34.816 48.875 34.793 48.836 cv
34.766 48.801 34.746 48.754 34.73 48.695 cv
34.715 48.637 34.707 48.559 34.707 48.461 cv
34.707 48.375 34.711 48.305 34.727 48.246 cv
34.734 48.191 34.754 48.145 34.785 48.109 cv
34.809 48.074 34.84 48.051 34.871 48.031 cv
34.902 48.02 34.938 48.012 34.98 48.008 cv
35.754 48.008 li
36.055 48.012 36.324 47.973 36.566 47.891 cv
36.801 47.816 37.004 47.703 37.176 47.555 cv
37.34 47.41 37.469 47.234 37.559 47.031 cv
37.648 46.828 37.695 46.602 37.695 46.348 cv
37.695 46.168 37.664 45.992 37.605 45.824 cv
37.543 45.66 37.453 45.516 37.336 45.391 cv
37.215 45.266 37.063 45.168 36.883 45.098 cv
36.695 45.027 36.484 44.992 36.242 44.992 cv
35.977 44.992 35.73 45.035 35.512 45.113 cv
35.285 45.195 35.09 45.281 34.918 45.371 cv
34.742 45.465 34.598 45.551 34.484 45.629 cv
34.371 45.711 34.289 45.75 34.246 45.746 cv
34.211 45.75 34.184 45.742 34.16 45.73 cv
34.133 45.719 34.113 45.695 34.098 45.66 cv
34.082 45.629 34.07 45.582 34.063 45.516 cv
34.055 45.457 34.051 45.375 34.055 45.273 cv
34.051 45.207 34.051 45.148 34.059 45.094 cv
34.059 45.043 34.07 44.996 34.086 44.953 cv
34.102 44.918 34.117 44.883 34.137 44.848 cv
34.152 44.82 34.184 44.781 34.227 44.734 cv
34.27 44.691 34.355 44.629 34.492 44.547 cv
34.621 44.465 34.785 44.387 34.98 44.305 cv
35.172 44.227 35.395 44.156 35.652 44.102 cv
35.902 44.047 36.176 44.02 36.473 44.02 cv
36.879 44.02 37.242 44.074 37.555 44.176 cv
37.867 44.285 38.125 44.434 38.336 44.621 cv
38.539 44.816 38.695 45.047 38.801 45.312 cv
38.902 45.582 38.953 45.875 38.957 46.199 cv
38.953 46.48 38.918 46.742 38.848 46.977 cv
38.773 47.219 38.664 47.43 38.523 47.613 cv
38.379 47.801 38.207 47.957 38.004 48.086 cv
37.797 48.219 37.559 48.312 37.289 48.359 cv
37.289 48.371 li
37.594 48.406 37.875 48.48 38.129 48.602 cv
38.383 48.723 38.602 48.875 38.785 49.059 cv
38.965 49.242 39.105 49.457 39.211 49.699 cv
39.313 49.945 39.363 50.207 39.367 50.484 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.891 50.496 mo
46.887 50.648 46.863 50.77 46.82 50.855 cv
46.773 50.945 46.711 50.988 46.629 50.984 cv
45.629 50.984 li
45.629 52.848 li
45.629 52.887 45.617 52.918 45.602 52.941 cv
45.578 52.969 45.547 52.988 45.504 53.008 cv
45.453 53.023 45.391 53.035 45.32 53.047 cv
45.242 53.055 45.148 53.059 45.031 53.062 cv
44.914 53.059 44.816 53.055 44.746 53.047 cv
44.668 53.035 44.609 53.023 44.566 53.008 cv
44.52 52.988 44.488 52.969 44.473 52.941 cv
44.453 52.918 44.445 52.887 44.449 52.848 cv
44.449 50.984 li
40.82 50.984 li
40.762 50.988 40.719 50.98 40.684 50.965 cv
40.648 50.953 40.613 50.926 40.586 50.887 cv
40.555 50.852 40.535 50.801 40.523 50.73 cv
40.512 50.664 40.508 50.574 40.508 50.461 cv
40.508 50.379 40.508 50.301 40.516 50.23 cv
40.516 50.16 40.527 50.098 40.543 50.043 cv
40.555 49.988 40.57 49.934 40.598 49.879 cv
40.617 49.824 40.645 49.77 40.68 49.707 cv
43.84 44.32 li
43.859 44.285 43.895 44.254 43.941 44.227 cv
43.984 44.199 44.039 44.176 44.113 44.156 cv
44.18 44.141 44.266 44.129 44.371 44.117 cv
44.473 44.113 44.594 44.109 44.734 44.105 cv
44.883 44.109 45.02 44.113 45.137 44.125 cv
45.25 44.137 45.34 44.152 45.414 44.168 cv
45.48 44.187 45.535 44.211 45.574 44.242 cv
45.609 44.273 45.629 44.309 45.629 44.348 cv
45.629 50.012 li
46.629 50.012 li
46.703 50.016 46.766 50.055 46.816 50.133 cv
46.863 50.215 46.887 50.336 46.891 50.496 cv
cp
44.449 45.145 mo
44.438 45.145 li
41.586 50.012 li
44.449 50.012 li
cp
f
33.078 14.461 mo
47.269 14.461 li
47.269 31.551 li
33.078 31.551 li
cp
0 0 0 0 cmyk
ef
39.367 25.254 mo
39.363 25.664 39.293 26.031 39.152 26.355 cv
39.008 26.684 38.805 26.965 38.543 27.195 cv
38.277 27.43 37.949 27.605 37.563 27.73 cv
37.172 27.855 36.734 27.918 36.25 27.918 cv
35.945 27.918 35.668 27.891 35.414 27.844 cv
35.152 27.797 34.922 27.746 34.727 27.676 cv
34.523 27.613 34.359 27.543 34.227 27.473 cv
34.094 27.402 34.008 27.352 33.977 27.316 cv
33.938 27.289 33.914 27.258 33.898 27.223 cv
33.879 27.191 33.859 27.152 33.848 27.105 cv
33.832 27.062 33.824 27.008 33.816 26.937 cv
33.809 26.875 33.805 26.793 33.809 26.691 cv
33.805 26.531 33.82 26.418 33.855 26.352 cv
33.887 26.289 33.934 26.254 33.996 26.254 cv
34.039 26.254 34.121 26.293 34.246 26.363 cv
34.367 26.441 34.527 26.52 34.723 26.602 cv
34.914 26.687 35.141 26.766 35.406 26.836 cv
35.664 26.91 35.957 26.945 36.277 26.945 cv
36.586 26.945 36.855 26.906 37.094 26.828 cv
37.324 26.75 37.523 26.641 37.684 26.5 cv
37.84 26.359 37.957 26.191 38.039 25.996 cv
38.117 25.801 38.156 25.59 38.16 25.363 cv
38.156 25.113 38.105 24.887 38.008 24.684 cv
37.902 24.484 37.754 24.312 37.563 24.164 cv
37.363 24.02 37.125 23.906 36.84 23.828 cv
36.555 23.75 36.23 23.711 35.867 23.711 cv
34.996 23.711 li
34.953 23.711 34.918 23.703 34.883 23.687 cv
34.848 23.672 34.816 23.645 34.793 23.605 cv
34.766 23.57 34.746 23.523 34.73 23.465 cv
34.715 23.406 34.707 23.328 34.707 23.23 cv
34.707 23.145 34.711 23.074 34.727 23.016 cv
34.734 22.961 34.754 22.914 34.785 22.879 cv
34.809 22.844 34.84 22.82 34.871 22.801 cv
34.902 22.789 34.938 22.781 34.98 22.777 cv
35.754 22.777 li
36.055 22.781 36.324 22.742 36.566 22.66 cv
36.801 22.586 37.004 22.473 37.176 22.324 cv
37.34 22.18 37.469 22.004 37.559 21.801 cv
37.648 21.598 37.695 21.371 37.695 21.117 cv
37.695 20.937 37.664 20.762 37.605 20.594 cv
37.543 20.43 37.453 20.285 37.336 20.16 cv
37.215 20.035 37.063 19.937 36.883 19.867 cv
36.695 19.797 36.484 19.762 36.242 19.762 cv
35.977 19.762 35.73 19.805 35.512 19.883 cv
35.285 19.965 35.09 20.051 34.918 20.141 cv
34.742 20.234 34.598 20.32 34.484 20.398 cv
34.371 20.48 34.289 20.52 34.246 20.516 cv
34.211 20.52 34.184 20.512 34.16 20.5 cv
34.133 20.488 34.113 20.465 34.098 20.43 cv
34.082 20.398 34.07 20.352 34.063 20.285 cv
34.055 20.227 34.051 20.145 34.055 20.043 cv
34.051 19.977 34.051 19.918 34.059 19.863 cv
34.059 19.812 34.07 19.766 34.086 19.723 cv
34.102 19.687 34.117 19.652 34.137 19.617 cv
34.152 19.59 34.184 19.551 34.227 19.504 cv
34.27 19.461 34.355 19.398 34.492 19.316 cv
34.621 19.234 34.785 19.156 34.98 19.074 cv
35.172 18.996 35.395 18.926 35.652 18.871 cv
35.902 18.816 36.176 18.789 36.473 18.789 cv
36.879 18.789 37.242 18.844 37.555 18.945 cv
37.867 19.055 38.125 19.203 38.336 19.391 cv
38.539 19.586 38.695 19.816 38.801 20.082 cv
38.902 20.352 38.953 20.645 38.957 20.969 cv
38.953 21.25 38.918 21.512 38.848 21.746 cv
38.773 21.988 38.664 22.199 38.523 22.383 cv
38.379 22.57 38.207 22.727 38.004 22.855 cv
37.797 22.988 37.559 23.082 37.289 23.129 cv
37.289 23.141 li
37.594 23.176 37.875 23.25 38.129 23.371 cv
38.383 23.492 38.602 23.645 38.785 23.828 cv
38.965 24.012 39.105 24.227 39.211 24.469 cv
39.313 24.715 39.363 24.977 39.367 25.254 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.742 24.918 mo
46.742 25.309 46.68 25.687 46.563 26.047 cv
46.438 26.414 46.254 26.73 46.012 27.004 cv
45.762 27.281 45.449 27.504 45.074 27.668 cv
44.691 27.836 44.246 27.918 43.73 27.918 cv
43.359 27.918 43.031 27.875 42.75 27.781 cv
42.465 27.695 42.219 27.562 42.008 27.391 cv
41.797 27.223 41.621 27.016 41.484 26.77 cv
41.344 26.523 41.23 26.242 41.148 25.926 cv
41.063 25.613 41.004 25.27 40.969 24.891 cv
40.93 24.52 40.91 24.117 40.914 23.684 cv
40.91 23.305 40.93 22.922 40.973 22.531 cv
41.012 22.148 41.086 21.773 41.191 21.406 cv
41.297 21.047 41.441 20.707 41.621 20.391 cv
41.801 20.074 42.027 19.797 42.301 19.562 cv
42.574 19.328 42.898 19.141 43.277 19 cv
43.656 18.863 44.098 18.797 44.602 18.793 cv
44.77 18.797 44.941 18.805 45.113 18.824 cv
45.285 18.848 45.445 18.879 45.594 18.91 cv
45.742 18.949 45.863 18.984 45.965 19.023 cv
46.063 19.062 46.129 19.098 46.164 19.121 cv
46.191 19.148 46.215 19.176 46.234 19.203 cv
46.25 19.234 46.266 19.266 46.273 19.301 cv
46.281 19.336 46.285 19.375 46.293 19.418 cv
46.293 19.461 46.297 19.516 46.301 19.578 cv
46.297 19.664 46.297 19.734 46.297 19.789 cv
46.293 19.852 46.281 19.898 46.27 19.934 cv
46.25 19.973 46.23 20 46.207 20.016 cv
46.18 20.035 46.148 20.043 46.109 20.043 cv
46.059 20.043 45.988 20.027 45.902 19.996 cv
45.813 19.965 45.707 19.93 45.586 19.887 cv
45.461 19.852 45.313 19.816 45.137 19.781 cv
44.961 19.754 44.758 19.738 44.527 19.734 cv
44.098 19.738 43.73 19.824 43.426 19.996 cv
43.121 20.168 42.871 20.402 42.676 20.695 cv
42.48 20.988 42.336 21.328 42.246 21.711 cv
42.148 22.102 42.094 22.504 42.086 22.922 cv
42.203 22.855 42.34 22.789 42.488 22.719 cv
42.637 22.652 42.797 22.59 42.973 22.531 cv
43.148 22.48 43.336 22.434 43.531 22.398 cv
43.727 22.367 43.938 22.352 44.164 22.348 cv
44.641 22.352 45.043 22.418 45.375 22.543 cv
45.703 22.676 45.969 22.855 46.176 23.086 cv
46.375 23.316 46.52 23.586 46.609 23.898 cv
46.695 24.211 46.742 24.551 46.742 24.918 cv
cp
45.547 25.027 mo
45.547 24.766 45.52 24.523 45.469 24.305 cv
45.414 24.09 45.324 23.906 45.203 23.75 cv
45.078 23.602 44.914 23.484 44.711 23.402 cv
44.5 23.32 44.246 23.277 43.949 23.277 cv
43.777 23.277 43.609 23.293 43.441 23.324 cv
43.27 23.355 43.105 23.398 42.949 23.445 cv
42.789 23.5 42.641 23.562 42.5 23.633 cv
42.355 23.707 42.223 23.781 42.105 23.859 cv
42.102 24.453 42.141 24.949 42.219 25.344 cv
42.293 25.742 42.402 26.059 42.547 26.297 cv
42.691 26.539 42.871 26.711 43.086 26.812 cv
43.301 26.918 43.551 26.969 43.84 26.965 cv
44.129 26.969 44.383 26.914 44.598 26.801 cv
44.813 26.695 44.988 26.547 45.133 26.359 cv
45.273 26.176 45.379 25.969 45.445 25.738 cv
45.512 25.508 45.547 25.273 45.547 25.027 cv
cp
f
63.094 499.48 mo
63.09 499.57 63.082 499.641 63.07 499.699 cv
63.055 499.762 63.035 499.812 63.016 499.844 cv
62.992 499.883 62.969 499.906 62.938 499.922 cv
62.906 499.937 62.875 499.945 62.848 499.945 cv
58.211 499.945 li
58.176 499.945 58.148 499.937 58.121 499.922 cv
58.094 499.906 58.066 499.883 58.043 499.844 cv
58.016 499.812 57.996 499.762 57.984 499.699 cv
57.969 499.641 57.961 499.57 57.965 499.48 cv
57.961 499.402 57.969 499.328 57.984 499.266 cv
57.996 499.207 58.012 499.16 58.035 499.121 cv
58.051 499.086 58.078 499.055 58.109 499.031 cv
58.141 499.012 58.172 499.004 58.211 499 cv
60.063 499 li
60.063 492.254 li
58.348 493.273 li
58.258 493.324 58.188 493.352 58.141 493.359 cv
58.086 493.367 58.043 493.359 58.012 493.328 cv
57.977 493.301 57.957 493.25 57.945 493.18 cv
57.934 493.113 57.926 493.027 57.93 492.918 cv
57.926 492.844 57.93 492.777 57.941 492.719 cv
57.945 492.668 57.957 492.621 57.973 492.582 cv
57.984 492.547 58.004 492.516 58.027 492.488 cv
58.051 492.461 58.082 492.434 58.129 492.406 cv
60.172 491.094 li
60.188 491.082 60.207 491.07 60.238 491.062 cv
60.262 491.055 60.297 491.047 60.344 491.035 cv
60.383 491.027 60.434 491.02 60.488 491.016 cv
60.543 491.016 60.609 491.016 60.695 491.012 cv
60.801 491.016 60.895 491.02 60.969 491.027 cv
61.039 491.035 61.094 491.051 61.141 491.066 cv
61.18 491.086 61.207 491.105 61.223 491.129 cv
61.23 491.156 61.238 491.18 61.242 491.203 cv
61.242 499 li
62.848 499 li
62.883 499.004 62.918 499.012 62.949 499.031 cv
62.98 499.055 63.004 499.086 63.027 499.121 cv
63.043 499.16 63.059 499.207 63.074 499.266 cv
63.082 499.328 63.09 499.402 63.094 499.48 cv
cp
f
133.637 499.437 mo
133.633 499.523 133.629 499.598 133.617 499.66 cv
133.605 499.727 133.59 499.781 133.57 499.82 cv
133.547 499.867 133.52 499.898 133.488 499.914 cv
133.453 499.937 133.414 499.945 133.375 499.945 cv
128.473 499.945 li
128.41 499.945 128.352 499.937 128.305 499.922 cv
128.254 499.906 128.215 499.883 128.18 499.844 cv
128.145 499.812 128.117 499.758 128.105 499.687 cv
128.086 499.617 128.078 499.531 128.082 499.43 cv
128.078 499.34 128.082 499.262 128.09 499.191 cv
128.094 499.125 128.109 499.066 128.137 499.012 cv
128.16 498.961 128.191 498.906 128.227 498.852 cv
128.262 498.801 128.305 498.746 128.363 498.684 cv
130.137 496.859 li
130.547 496.441 130.875 496.066 131.125 495.73 cv
131.371 495.402 131.563 495.098 131.695 494.82 cv
131.828 494.547 131.914 494.297 131.961 494.07 cv
132 493.848 132.023 493.637 132.023 493.441 cv
132.023 493.246 131.988 493.062 131.922 492.883 cv
131.855 492.711 131.762 492.555 131.637 492.418 cv
131.512 492.289 131.355 492.184 131.168 492.102 cv
130.98 492.027 130.762 491.988 130.516 491.984 cv
130.227 491.988 129.969 492.027 129.742 492.102 cv
129.512 492.184 129.313 492.27 129.141 492.355 cv
128.969 492.449 128.824 492.531 128.707 492.609 cv
128.59 492.687 128.504 492.727 128.453 492.727 cv
128.418 492.727 128.387 492.719 128.363 492.699 cv
128.332 492.684 128.313 492.652 128.297 492.609 cv
128.281 492.57 128.266 492.516 128.258 492.445 cv
128.246 492.379 128.242 492.297 128.246 492.199 cv
128.242 492.133 128.246 492.074 128.254 492.023 cv
128.258 491.973 128.266 491.93 128.277 491.891 cv
128.285 491.855 128.301 491.82 128.32 491.789 cv
128.34 491.758 128.375 491.719 128.434 491.668 cv
128.484 491.621 128.578 491.555 128.715 491.473 cv
128.848 491.391 129.02 491.312 129.223 491.23 cv
129.426 491.152 129.648 491.082 129.895 491.027 cv
130.137 490.973 130.395 490.945 130.668 490.945 cv
131.094 490.945 131.469 491.008 131.793 491.129 cv
132.113 491.25 132.379 491.414 132.594 491.625 cv
132.805 491.836 132.965 492.082 133.07 492.355 cv
133.176 492.637 133.23 492.934 133.23 493.246 cv
133.23 493.535 133.203 493.816 133.152 494.094 cv
133.102 494.379 132.996 494.684 132.836 495.008 cv
132.672 495.336 132.438 495.699 132.133 496.098 cv
131.824 496.5 131.418 496.961 130.914 497.477 cv
129.508 498.945 li
133.367 498.945 li
133.398 498.949 133.434 498.961 133.473 498.977 cv
133.504 499 133.535 499.031 133.563 499.07 cv
133.586 499.113 133.605 499.164 133.617 499.223 cv
133.629 499.289 133.633 499.359 133.637 499.437 cv
cp
f
204.57 497.422 mo
204.566 497.574 204.543 497.695 204.5 497.781 cv
204.453 497.871 204.391 497.914 204.309 497.91 cv
203.309 497.91 li
203.309 499.773 li
203.309 499.812 203.297 499.844 203.281 499.867 cv
203.258 499.895 203.227 499.914 203.184 499.934 cv
203.133 499.949 203.07 499.961 203 499.973 cv
202.922 499.98 202.828 499.984 202.711 499.988 cv
202.594 499.984 202.496 499.98 202.426 499.973 cv
202.348 499.961 202.289 499.949 202.246 499.934 cv
202.199 499.914 202.168 499.895 202.152 499.867 cv
202.133 499.844 202.125 499.812 202.129 499.773 cv
202.129 497.91 li
198.5 497.91 li
198.441 497.914 198.398 497.906 198.363 497.891 cv
198.328 497.879 198.293 497.852 198.266 497.812 cv
198.234 497.777 198.215 497.727 198.203 497.656 cv
198.191 497.59 198.188 497.5 198.188 497.387 cv
198.188 497.305 198.188 497.227 198.195 497.156 cv
198.195 497.086 198.207 497.023 198.223 496.969 cv
198.234 496.914 198.25 496.859 198.277 496.805 cv
198.297 496.75 198.324 496.695 198.359 496.633 cv
201.52 491.246 li
201.539 491.211 201.574 491.18 201.621 491.152 cv
201.664 491.125 201.719 491.102 201.793 491.082 cv
201.859 491.066 201.945 491.055 202.051 491.043 cv
202.152 491.039 202.273 491.035 202.414 491.031 cv
202.563 491.035 202.699 491.039 202.816 491.051 cv
202.93 491.062 203.02 491.078 203.094 491.094 cv
203.16 491.113 203.215 491.137 203.254 491.168 cv
203.289 491.199 203.309 491.234 203.309 491.273 cv
203.309 496.937 li
204.309 496.937 li
204.383 496.941 204.445 496.98 204.496 497.059 cv
204.543 497.141 204.566 497.262 204.57 497.422 cv
cp
202.129 492.07 mo
202.117 492.07 li
199.266 496.937 li
202.129 496.937 li
cp
f
274.984 497.074 mo
274.984 497.465 274.922 497.844 274.805 498.203 cv
274.68 498.57 274.496 498.887 274.254 499.16 cv
274.004 499.437 273.691 499.66 273.316 499.824 cv
272.934 499.992 272.488 500.074 271.973 500.074 cv
271.602 500.074 271.273 500.031 270.992 499.937 cv
270.707 499.852 270.461 499.719 270.25 499.547 cv
270.039 499.379 269.863 499.172 269.727 498.926 cv
269.586 498.68 269.473 498.398 269.391 498.082 cv
269.305 497.77 269.246 497.426 269.211 497.047 cv
269.172 496.676 269.152 496.273 269.156 495.84 cv
269.152 495.461 269.172 495.078 269.215 494.687 cv
269.254 494.305 269.328 493.93 269.434 493.562 cv
269.539 493.203 269.684 492.863 269.863 492.547 cv
270.043 492.23 270.27 491.953 270.543 491.719 cv
270.816 491.484 271.141 491.297 271.52 491.156 cv
271.898 491.02 272.34 490.953 272.844 490.949 cv
273.012 490.953 273.184 490.961 273.355 490.98 cv
273.527 491.004 273.688 491.035 273.836 491.066 cv
273.984 491.105 274.105 491.141 274.207 491.18 cv
274.305 491.219 274.371 491.254 274.406 491.277 cv
274.434 491.305 274.457 491.332 274.477 491.359 cv
274.492 491.391 274.508 491.422 274.516 491.457 cv
274.523 491.492 274.527 491.531 274.535 491.574 cv
274.535 491.617 274.539 491.672 274.543 491.734 cv
274.539 491.82 274.539 491.891 274.539 491.945 cv
274.535 492.008 274.523 492.055 274.512 492.09 cv
274.492 492.129 274.473 492.156 274.449 492.172 cv
274.422 492.191 274.391 492.199 274.352 492.199 cv
274.301 492.199 274.23 492.184 274.145 492.152 cv
274.055 492.121 273.949 492.086 273.828 492.043 cv
273.703 492.008 273.555 491.973 273.379 491.937 cv
273.203 491.91 273 491.895 272.77 491.891 cv
272.34 491.895 271.973 491.98 271.668 492.152 cv
271.363 492.324 271.113 492.559 270.918 492.852 cv
270.723 493.145 270.578 493.484 270.488 493.867 cv
270.391 494.258 270.336 494.66 270.328 495.078 cv
270.445 495.012 270.582 494.945 270.73 494.875 cv
270.879 494.809 271.039 494.746 271.215 494.687 cv
271.391 494.637 271.578 494.59 271.773 494.555 cv
271.969 494.523 272.18 494.508 272.406 494.504 cv
272.883 494.508 273.285 494.574 273.617 494.699 cv
273.945 494.832 274.211 495.012 274.418 495.242 cv
274.617 495.473 274.762 495.742 274.852 496.055 cv
274.938 496.367 274.984 496.707 274.984 497.074 cv
cp
273.789 497.184 mo
273.789 496.922 273.762 496.68 273.711 496.461 cv
273.656 496.246 273.566 496.062 273.445 495.906 cv
273.32 495.758 273.156 495.641 272.953 495.559 cv
272.742 495.477 272.488 495.434 272.191 495.434 cv
272.02 495.434 271.852 495.449 271.684 495.48 cv
271.512 495.512 271.348 495.555 271.191 495.602 cv
271.031 495.656 270.883 495.719 270.742 495.789 cv
270.598 495.863 270.465 495.937 270.348 496.016 cv
270.344 496.609 270.383 497.105 270.461 497.5 cv
270.535 497.898 270.645 498.215 270.789 498.453 cv
270.934 498.695 271.113 498.867 271.328 498.969 cv
271.543 499.074 271.793 499.125 272.082 499.121 cv
272.371 499.125 272.625 499.07 272.84 498.957 cv
273.055 498.852 273.23 498.703 273.375 498.516 cv
273.516 498.332 273.621 498.125 273.688 497.895 cv
273.754 497.664 273.789 497.43 273.789 497.184 cv
cp
f
345.52 497.668 mo
345.52 498.055 345.449 498.398 345.313 498.695 cv
345.176 499 344.98 499.25 344.723 499.453 cv
344.465 499.66 344.145 499.816 343.766 499.918 cv
343.383 500.023 342.949 500.074 342.465 500.074 cv
342.004 500.074 341.594 500.027 341.234 499.934 cv
340.871 499.84 340.566 499.699 340.316 499.508 cv
340.066 499.324 339.875 499.094 339.742 498.816 cv
339.609 498.543 339.543 498.23 339.543 497.875 cv
339.543 497.602 339.586 497.344 339.68 497.109 cv
339.766 496.875 339.898 496.66 340.074 496.465 cv
340.242 496.27 340.453 496.086 340.707 495.91 cv
340.957 495.742 341.242 495.578 341.559 495.422 cv
341.285 495.281 341.043 495.133 340.832 494.973 cv
340.621 494.816 340.441 494.645 340.297 494.457 cv
340.148 494.273 340.039 494.078 339.965 493.867 cv
339.887 493.66 339.848 493.43 339.852 493.18 cv
339.848 492.871 339.902 492.578 340.02 492.305 cv
340.129 492.035 340.301 491.801 340.527 491.598 cv
340.754 491.398 341.039 491.238 341.391 491.121 cv
341.734 491.004 342.145 490.945 342.613 490.945 cv
343.059 490.945 343.445 491 343.773 491.105 cv
344.102 491.215 344.371 491.359 344.582 491.543 cv
344.793 491.73 344.949 491.949 345.055 492.199 cv
345.152 492.449 345.203 492.719 345.207 493.008 cv
345.203 493.242 345.164 493.469 345.094 493.68 cv
345.016 493.898 344.906 494.102 344.758 494.289 cv
344.609 494.484 344.43 494.664 344.219 494.828 cv
344.008 495 343.766 495.156 343.492 495.297 cv
343.813 495.461 344.098 495.625 344.355 495.793 cv
344.605 495.961 344.82 496.141 344.996 496.336 cv
345.164 496.531 345.293 496.738 345.387 496.953 cv
345.473 497.172 345.52 497.41 345.52 497.668 cv
cp
344.039 493.117 mo
344.035 492.93 344.004 492.754 343.938 492.598 cv
343.871 492.441 343.773 492.309 343.648 492.199 cv
343.52 492.09 343.359 492.008 343.172 491.949 cv
342.977 491.895 342.762 491.867 342.523 491.863 cv
342.027 491.867 341.652 491.977 341.402 492.199 cv
341.145 492.426 341.02 492.734 341.023 493.117 cv
341.02 493.297 341.051 493.461 341.113 493.613 cv
341.176 493.77 341.27 493.914 341.402 494.051 cv
341.527 494.187 341.691 494.32 341.895 494.449 cv
342.09 494.582 342.328 494.719 342.605 494.859 cv
343.066 494.625 343.422 494.363 343.668 494.07 cv
343.914 493.785 344.035 493.469 344.039 493.117 cv
cp
344.328 497.793 mo
344.324 497.586 344.285 497.395 344.211 497.223 cv
344.129 497.055 344.012 496.895 343.855 496.742 cv
343.699 496.594 343.5 496.449 343.266 496.309 cv
343.027 496.172 342.758 496.027 342.449 495.875 cv
342.16 496.02 341.906 496.16 341.691 496.301 cv
341.473 496.441 341.293 496.59 341.156 496.738 cv
341.016 496.895 340.91 497.051 340.84 497.215 cv
340.766 497.383 340.73 497.566 340.734 497.766 cv
340.73 498.211 340.883 498.555 341.191 498.793 cv
341.492 499.039 341.945 499.16 342.551 499.156 cv
343.133 499.16 343.578 499.039 343.879 498.789 cv
344.176 498.547 344.324 498.215 344.328 497.793 cv
cp
f
412.367 499.48 mo
412.363 499.57 412.355 499.641 412.344 499.699 cv
412.328 499.762 412.309 499.812 412.289 499.844 cv
412.266 499.883 412.242 499.906 412.211 499.922 cv
412.18 499.937 412.148 499.945 412.121 499.945 cv
407.484 499.945 li
407.449 499.945 407.422 499.937 407.395 499.922 cv
407.367 499.906 407.34 499.883 407.316 499.844 cv
407.289 499.812 407.27 499.762 407.258 499.699 cv
407.242 499.641 407.234 499.57 407.238 499.48 cv
407.234 499.402 407.242 499.328 407.258 499.266 cv
407.27 499.207 407.285 499.16 407.309 499.121 cv
407.324 499.086 407.352 499.055 407.383 499.031 cv
407.414 499.012 407.445 499.004 407.484 499 cv
409.336 499 li
409.336 492.254 li
407.621 493.273 li
407.531 493.324 407.461 493.352 407.414 493.359 cv
407.359 493.367 407.316 493.359 407.285 493.328 cv
407.25 493.301 407.23 493.25 407.219 493.18 cv
407.207 493.113 407.199 493.027 407.203 492.918 cv
407.199 492.844 407.203 492.777 407.215 492.719 cv
407.219 492.668 407.23 492.621 407.246 492.582 cv
407.258 492.547 407.277 492.516 407.301 492.488 cv
407.324 492.461 407.355 492.434 407.402 492.406 cv
409.445 491.094 li
409.461 491.082 409.48 491.07 409.512 491.062 cv
409.535 491.055 409.57 491.047 409.617 491.035 cv
409.656 491.027 409.707 491.02 409.762 491.016 cv
409.816 491.016 409.883 491.016 409.969 491.012 cv
410.074 491.016 410.168 491.02 410.242 491.027 cv
410.313 491.035 410.367 491.051 410.414 491.066 cv
410.453 491.086 410.48 491.105 410.496 491.129 cv
410.504 491.156 410.512 491.18 410.516 491.203 cv
410.516 499 li
412.121 499 li
412.156 499.004 412.191 499.012 412.223 499.031 cv
412.254 499.055 412.277 499.086 412.301 499.121 cv
412.316 499.16 412.332 499.207 412.348 499.266 cv
412.355 499.328 412.363 499.402 412.367 499.48 cv
cp
f
419.719 495.488 mo
419.715 496.172 419.664 496.793 419.559 497.355 cv
419.449 497.918 419.27 498.402 419.023 498.805 cv
418.77 499.211 418.441 499.523 418.043 499.742 cv
417.637 499.965 417.145 500.074 416.559 500.074 cv
416 500.074 415.527 499.977 415.148 499.777 cv
414.766 499.582 414.461 499.289 414.227 498.902 cv
413.992 498.516 413.824 498.043 413.73 497.477 cv
413.629 496.914 413.582 496.266 413.582 495.531 cv
413.582 494.859 413.637 494.238 413.746 493.672 cv
413.855 493.109 414.031 492.625 414.281 492.219 cv
414.523 491.816 414.848 491.504 415.254 491.277 cv
415.652 491.059 416.148 490.945 416.738 490.945 cv
417.297 490.945 417.77 491.047 418.152 491.242 cv
418.535 491.445 418.84 491.738 419.074 492.121 cv
419.305 492.512 419.473 492.984 419.57 493.547 cv
419.668 494.109 419.715 494.758 419.719 495.488 cv
cp
418.512 495.57 mo
418.508 495.129 418.492 494.73 418.465 494.379 cv
418.43 494.027 418.383 493.719 418.324 493.449 cv
418.258 493.18 418.18 492.949 418.082 492.754 cv
417.984 492.562 417.867 492.402 417.73 492.273 cv
417.59 492.148 417.43 492.055 417.258 491.996 cv
417.078 491.941 416.883 491.914 416.668 491.91 cv
416.277 491.914 415.961 492.004 415.723 492.187 cv
415.477 492.371 415.285 492.625 415.148 492.941 cv
415.008 493.262 414.914 493.633 414.863 494.062 cv
414.813 494.492 414.789 494.957 414.789 495.449 cv
414.789 496.113 414.82 496.676 414.891 497.137 cv
414.957 497.605 415.066 497.984 415.219 498.273 cv
415.363 498.57 415.555 498.781 415.785 498.91 cv
416.016 499.047 416.297 499.113 416.629 499.109 cv
416.883 499.113 417.105 499.074 417.301 498.988 cv
417.492 498.91 417.66 498.789 417.801 498.633 cv
417.941 498.48 418.055 498.297 418.148 498.082 cv
418.234 497.867 418.309 497.629 418.367 497.367 cv
418.418 497.109 418.457 496.828 418.48 496.523 cv
418.5 496.219 418.508 495.902 418.512 495.57 cv
cp
f
482.926 499.48 mo
482.922 499.57 482.914 499.641 482.902 499.699 cv
482.887 499.762 482.867 499.812 482.848 499.844 cv
482.824 499.883 482.801 499.906 482.77 499.922 cv
482.738 499.937 482.707 499.945 482.68 499.945 cv
478.043 499.945 li
478.008 499.945 477.98 499.937 477.953 499.922 cv
477.926 499.906 477.898 499.883 477.875 499.844 cv
477.848 499.812 477.828 499.762 477.816 499.699 cv
477.801 499.641 477.793 499.57 477.797 499.48 cv
477.793 499.402 477.801 499.328 477.816 499.266 cv
477.828 499.207 477.844 499.16 477.867 499.121 cv
477.883 499.086 477.91 499.055 477.941 499.031 cv
477.973 499.012 478.004 499.004 478.043 499 cv
479.895 499 li
479.895 492.254 li
478.18 493.273 li
478.09 493.324 478.02 493.352 477.973 493.359 cv
477.918 493.367 477.875 493.359 477.844 493.328 cv
477.809 493.301 477.789 493.25 477.777 493.18 cv
477.766 493.113 477.758 493.027 477.762 492.918 cv
477.758 492.844 477.762 492.777 477.773 492.719 cv
477.777 492.668 477.789 492.621 477.805 492.582 cv
477.816 492.547 477.836 492.516 477.859 492.488 cv
477.883 492.461 477.914 492.434 477.961 492.406 cv
480.004 491.094 li
480.02 491.082 480.039 491.07 480.07 491.062 cv
480.094 491.055 480.129 491.047 480.176 491.035 cv
480.215 491.027 480.266 491.02 480.32 491.016 cv
480.375 491.016 480.441 491.016 480.527 491.012 cv
480.633 491.016 480.727 491.02 480.801 491.027 cv
480.871 491.035 480.926 491.051 480.973 491.066 cv
481.012 491.086 481.039 491.105 481.055 491.129 cv
481.063 491.156 481.07 491.18 481.074 491.203 cv
481.074 499 li
482.68 499 li
482.715 499.004 482.75 499.012 482.781 499.031 cv
482.813 499.055 482.836 499.086 482.859 499.121 cv
482.875 499.16 482.891 499.207 482.906 499.266 cv
482.914 499.328 482.922 499.402 482.926 499.48 cv
cp
f
489.984 499.437 mo
489.98 499.523 489.977 499.598 489.965 499.66 cv
489.953 499.727 489.938 499.781 489.918 499.82 cv
489.895 499.867 489.867 499.898 489.836 499.914 cv
489.801 499.937 489.762 499.945 489.723 499.945 cv
484.82 499.945 li
484.758 499.945 484.699 499.937 484.652 499.922 cv
484.602 499.906 484.563 499.883 484.527 499.844 cv
484.492 499.812 484.465 499.758 484.453 499.687 cv
484.434 499.617 484.426 499.531 484.43 499.43 cv
484.426 499.34 484.43 499.262 484.438 499.191 cv
484.441 499.125 484.457 499.066 484.484 499.012 cv
484.508 498.961 484.539 498.906 484.574 498.852 cv
484.609 498.801 484.652 498.746 484.711 498.684 cv
486.484 496.859 li
486.895 496.441 487.223 496.066 487.473 495.73 cv
487.719 495.402 487.91 495.098 488.043 494.82 cv
488.176 494.547 488.262 494.297 488.309 494.07 cv
488.348 493.848 488.371 493.637 488.371 493.441 cv
488.371 493.246 488.336 493.062 488.27 492.883 cv
488.203 492.711 488.109 492.555 487.984 492.418 cv
487.859 492.289 487.703 492.184 487.516 492.102 cv
487.328 492.027 487.109 491.988 486.863 491.984 cv
486.574 491.988 486.316 492.027 486.09 492.102 cv
485.859 492.184 485.66 492.27 485.488 492.355 cv
485.316 492.449 485.172 492.531 485.055 492.609 cv
484.938 492.687 484.852 492.727 484.801 492.727 cv
484.766 492.727 484.734 492.719 484.711 492.699 cv
484.68 492.684 484.66 492.652 484.645 492.609 cv
484.629 492.57 484.613 492.516 484.605 492.445 cv
484.594 492.379 484.59 492.297 484.594 492.199 cv
484.59 492.133 484.594 492.074 484.602 492.023 cv
484.605 491.973 484.613 491.93 484.625 491.891 cv
484.633 491.855 484.648 491.82 484.668 491.789 cv
484.688 491.758 484.723 491.719 484.781 491.668 cv
484.832 491.621 484.926 491.555 485.063 491.473 cv
485.195 491.391 485.367 491.312 485.57 491.23 cv
485.773 491.152 485.996 491.082 486.242 491.027 cv
486.484 490.973 486.742 490.945 487.016 490.945 cv
487.441 490.945 487.816 491.008 488.141 491.129 cv
488.461 491.25 488.727 491.414 488.941 491.625 cv
489.152 491.836 489.313 492.082 489.418 492.355 cv
489.523 492.637 489.578 492.934 489.578 493.246 cv
489.578 493.535 489.551 493.816 489.5 494.094 cv
489.449 494.379 489.344 494.684 489.184 495.008 cv
489.02 495.336 488.785 495.699 488.48 496.098 cv
488.172 496.5 487.766 496.961 487.262 497.477 cv
485.855 498.945 li
489.715 498.945 li
489.746 498.949 489.781 498.961 489.82 498.977 cv
489.852 499 489.883 499.031 489.91 499.07 cv
489.934 499.113 489.953 499.164 489.965 499.223 cv
489.977 499.289 489.98 499.359 489.984 499.437 cv
cp
f
553.484 499.48 mo
553.48 499.57 553.473 499.641 553.461 499.699 cv
553.445 499.762 553.426 499.812 553.406 499.844 cv
553.383 499.883 553.359 499.906 553.328 499.922 cv
553.297 499.937 553.266 499.945 553.238 499.945 cv
548.602 499.945 li
548.566 499.945 548.539 499.937 548.512 499.922 cv
548.484 499.906 548.457 499.883 548.434 499.844 cv
548.406 499.812 548.387 499.762 548.375 499.699 cv
548.359 499.641 548.352 499.57 548.355 499.48 cv
548.352 499.402 548.359 499.328 548.375 499.266 cv
548.387 499.207 548.402 499.16 548.426 499.121 cv
548.441 499.086 548.469 499.055 548.5 499.031 cv
548.531 499.012 548.563 499.004 548.602 499 cv
550.453 499 li
550.453 492.254 li
548.738 493.273 li
548.648 493.324 548.578 493.352 548.531 493.359 cv
548.477 493.367 548.434 493.359 548.402 493.328 cv
548.367 493.301 548.348 493.25 548.336 493.18 cv
548.324 493.113 548.316 493.027 548.32 492.918 cv
548.316 492.844 548.32 492.777 548.332 492.719 cv
548.336 492.668 548.348 492.621 548.363 492.582 cv
548.375 492.547 548.395 492.516 548.418 492.488 cv
548.441 492.461 548.473 492.434 548.52 492.406 cv
550.563 491.094 li
550.578 491.082 550.598 491.07 550.629 491.062 cv
550.652 491.055 550.688 491.047 550.734 491.035 cv
550.773 491.027 550.824 491.02 550.879 491.016 cv
550.934 491.016 551 491.016 551.086 491.012 cv
551.191 491.016 551.285 491.02 551.359 491.027 cv
551.43 491.035 551.484 491.051 551.531 491.066 cv
551.57 491.086 551.598 491.105 551.613 491.129 cv
551.621 491.156 551.629 491.18 551.633 491.203 cv
551.633 499 li
553.238 499 li
553.273 499.004 553.309 499.012 553.34 499.031 cv
553.371 499.055 553.395 499.086 553.418 499.121 cv
553.434 499.16 553.449 499.207 553.465 499.266 cv
553.473 499.328 553.48 499.402 553.484 499.48 cv
cp
f
560.922 497.422 mo
560.918 497.574 560.895 497.695 560.852 497.781 cv
560.805 497.871 560.742 497.914 560.66 497.91 cv
559.66 497.91 li
559.66 499.773 li
559.66 499.812 559.648 499.844 559.633 499.867 cv
559.609 499.895 559.578 499.914 559.535 499.934 cv
559.484 499.949 559.422 499.961 559.352 499.973 cv
559.273 499.98 559.18 499.984 559.063 499.988 cv
558.945 499.984 558.848 499.98 558.777 499.973 cv
558.699 499.961 558.641 499.949 558.598 499.934 cv
558.551 499.914 558.52 499.895 558.504 499.867 cv
558.484 499.844 558.477 499.812 558.48 499.773 cv
558.48 497.91 li
554.852 497.91 li
554.793 497.914 554.75 497.906 554.715 497.891 cv
554.68 497.879 554.645 497.852 554.617 497.812 cv
554.586 497.777 554.566 497.727 554.555 497.656 cv
554.543 497.59 554.539 497.5 554.539 497.387 cv
554.539 497.305 554.539 497.227 554.547 497.156 cv
554.547 497.086 554.559 497.023 554.574 496.969 cv
554.586 496.914 554.602 496.859 554.629 496.805 cv
554.648 496.75 554.676 496.695 554.711 496.633 cv
557.871 491.246 li
557.891 491.211 557.926 491.18 557.973 491.152 cv
558.016 491.125 558.07 491.102 558.145 491.082 cv
558.211 491.066 558.297 491.055 558.402 491.043 cv
558.504 491.039 558.625 491.035 558.766 491.031 cv
558.914 491.035 559.051 491.039 559.168 491.051 cv
559.281 491.062 559.371 491.078 559.445 491.094 cv
559.512 491.113 559.566 491.137 559.605 491.168 cv
559.641 491.199 559.66 491.234 559.66 491.273 cv
559.66 496.937 li
560.66 496.937 li
560.734 496.941 560.797 496.98 560.848 497.059 cv
560.895 497.141 560.918 497.262 560.922 497.422 cv
cp
558.48 492.07 mo
558.469 492.07 li
555.617 496.937 li
558.48 496.937 li
cp
f
624.047 499.48 mo
624.043 499.57 624.035 499.641 624.023 499.699 cv
624.008 499.762 623.988 499.812 623.969 499.844 cv
623.945 499.883 623.922 499.906 623.891 499.922 cv
623.859 499.937 623.828 499.945 623.801 499.945 cv
619.164 499.945 li
619.129 499.945 619.102 499.937 619.074 499.922 cv
619.047 499.906 619.02 499.883 618.996 499.844 cv
618.969 499.812 618.949 499.762 618.938 499.699 cv
618.922 499.641 618.914 499.57 618.918 499.48 cv
618.914 499.402 618.922 499.328 618.938 499.266 cv
618.949 499.207 618.965 499.16 618.988 499.121 cv
619.004 499.086 619.031 499.055 619.063 499.031 cv
619.094 499.012 619.125 499.004 619.164 499 cv
621.016 499 li
621.016 492.254 li
619.301 493.273 li
619.211 493.324 619.141 493.352 619.094 493.359 cv
619.039 493.367 618.996 493.359 618.965 493.328 cv
618.93 493.301 618.91 493.25 618.898 493.18 cv
618.887 493.113 618.879 493.027 618.883 492.918 cv
618.879 492.844 618.883 492.777 618.895 492.719 cv
618.898 492.668 618.91 492.621 618.926 492.582 cv
618.938 492.547 618.957 492.516 618.98 492.488 cv
619.004 492.461 619.035 492.434 619.082 492.406 cv
621.125 491.094 li
621.141 491.082 621.16 491.07 621.191 491.062 cv
621.215 491.055 621.25 491.047 621.297 491.035 cv
621.336 491.027 621.387 491.02 621.441 491.016 cv
621.496 491.016 621.563 491.016 621.648 491.012 cv
621.754 491.016 621.848 491.02 621.922 491.027 cv
621.992 491.035 622.047 491.051 622.094 491.066 cv
622.133 491.086 622.16 491.105 622.176 491.129 cv
622.184 491.156 622.191 491.18 622.195 491.203 cv
622.195 499 li
623.801 499 li
623.836 499.004 623.871 499.012 623.902 499.031 cv
623.934 499.055 623.957 499.086 623.98 499.121 cv
623.996 499.16 624.012 499.207 624.027 499.266 cv
624.035 499.328 624.043 499.402 624.047 499.48 cv
cp
f
631.332 497.074 mo
631.332 497.465 631.27 497.844 631.152 498.203 cv
631.027 498.57 630.844 498.887 630.602 499.16 cv
630.352 499.437 630.039 499.66 629.664 499.824 cv
629.281 499.992 628.836 500.074 628.32 500.074 cv
627.949 500.074 627.621 500.031 627.34 499.937 cv
627.055 499.852 626.809 499.719 626.598 499.547 cv
626.387 499.379 626.211 499.172 626.074 498.926 cv
625.934 498.68 625.82 498.398 625.738 498.082 cv
625.652 497.77 625.594 497.426 625.559 497.047 cv
625.52 496.676 625.5 496.273 625.504 495.84 cv
625.5 495.461 625.52 495.078 625.563 494.687 cv
625.602 494.305 625.676 493.93 625.781 493.562 cv
625.887 493.203 626.031 492.863 626.211 492.547 cv
626.391 492.23 626.617 491.953 626.891 491.719 cv
627.164 491.484 627.488 491.297 627.867 491.156 cv
628.246 491.02 628.688 490.953 629.191 490.949 cv
629.359 490.953 629.531 490.961 629.703 490.98 cv
629.875 491.004 630.035 491.035 630.184 491.066 cv
630.332 491.105 630.453 491.141 630.555 491.18 cv
630.652 491.219 630.719 491.254 630.754 491.277 cv
630.781 491.305 630.805 491.332 630.824 491.359 cv
630.84 491.391 630.855 491.422 630.863 491.457 cv
630.871 491.492 630.875 491.531 630.883 491.574 cv
630.883 491.617 630.887 491.672 630.891 491.734 cv
630.887 491.82 630.887 491.891 630.887 491.945 cv
630.883 492.008 630.871 492.055 630.859 492.09 cv
630.84 492.129 630.82 492.156 630.797 492.172 cv
630.77 492.191 630.738 492.199 630.699 492.199 cv
630.648 492.199 630.578 492.184 630.492 492.152 cv
630.402 492.121 630.297 492.086 630.176 492.043 cv
630.051 492.008 629.902 491.973 629.727 491.937 cv
629.551 491.91 629.348 491.895 629.117 491.891 cv
628.688 491.895 628.32 491.98 628.016 492.152 cv
627.711 492.324 627.461 492.559 627.266 492.852 cv
627.07 493.145 626.926 493.484 626.836 493.867 cv
626.738 494.258 626.684 494.66 626.676 495.078 cv
626.793 495.012 626.93 494.945 627.078 494.875 cv
627.227 494.809 627.387 494.746 627.563 494.687 cv
627.738 494.637 627.926 494.59 628.121 494.555 cv
628.316 494.523 628.527 494.508 628.754 494.504 cv
629.23 494.508 629.633 494.574 629.965 494.699 cv
630.293 494.832 630.559 495.012 630.766 495.242 cv
630.965 495.473 631.109 495.742 631.199 496.055 cv
631.285 496.367 631.332 496.707 631.332 497.074 cv
cp
630.137 497.184 mo
630.137 496.922 630.109 496.68 630.059 496.461 cv
630.004 496.246 629.914 496.062 629.793 495.906 cv
629.668 495.758 629.504 495.641 629.301 495.559 cv
629.09 495.477 628.836 495.434 628.539 495.434 cv
628.367 495.434 628.199 495.449 628.031 495.48 cv
627.859 495.512 627.695 495.555 627.539 495.602 cv
627.379 495.656 627.23 495.719 627.09 495.789 cv
626.945 495.863 626.813 495.937 626.695 496.016 cv
626.691 496.609 626.73 497.105 626.809 497.5 cv
626.883 497.898 626.992 498.215 627.137 498.453 cv
627.281 498.695 627.461 498.867 627.676 498.969 cv
627.891 499.074 628.141 499.125 628.43 499.121 cv
628.719 499.125 628.973 499.07 629.188 498.957 cv
629.402 498.852 629.578 498.703 629.723 498.516 cv
629.863 498.332 629.969 498.125 630.035 497.895 cv
630.102 497.664 630.137 497.43 630.137 497.184 cv
cp
f
16.555 353.527 mo
16.652 353.531 16.734 353.535 16.801 353.543 cv
16.875 353.555 16.934 353.574 16.977 353.598 cv
17.027 353.625 17.063 353.656 17.078 353.687 cv
17.102 353.727 17.109 353.762 17.109 353.801 cv
17.109 358.641 li
17.109 358.762 17.07 358.875 16.988 358.98 cv
16.91 359.09 16.77 359.145 16.563 359.141 cv
7.57 359.141 li
7.367 359.145 7.227 359.09 7.145 358.98 cv
7.066 358.875 7.027 358.762 7.023 358.641 cv
7.023 353.855 li
7.027 353.816 7.035 353.777 7.055 353.742 cv
7.078 353.711 7.113 353.684 7.156 353.66 cv
7.207 353.641 7.266 353.625 7.332 353.609 cv
7.406 353.598 7.492 353.59 7.594 353.59 cv
7.688 353.59 7.77 353.598 7.84 353.609 cv
7.91 353.625 7.969 353.641 8.012 353.66 cv
8.059 353.684 8.09 353.711 8.109 353.742 cv
8.133 353.777 8.145 353.816 8.141 353.855 cv
8.141 357.801 li
11.305 357.801 li
11.305 354.418 li
11.309 354.379 11.32 354.34 11.34 354.305 cv
11.367 354.273 11.398 354.246 11.438 354.219 cv
11.48 354.199 11.539 354.184 11.609 354.168 cv
11.684 354.16 11.77 354.152 11.863 354.152 cv
11.961 354.152 12.039 354.16 12.105 354.168 cv
12.176 354.184 12.23 354.199 12.27 354.219 cv
12.313 354.246 12.344 354.273 12.359 354.305 cv
12.379 354.34 12.387 354.379 12.387 354.418 cv
12.387 357.801 li
15.996 357.801 li
15.996 353.801 li
15.996 353.762 16.008 353.727 16.027 353.687 cv
16.051 353.656 16.082 353.625 16.125 353.598 cv
16.172 353.574 16.23 353.555 16.297 353.543 cv
16.367 353.535 16.453 353.531 16.555 353.527 cv
cp
f
16.914 345.461 mo
16.961 345.461 16.996 345.473 17.02 345.492 cv
17.051 345.516 17.074 345.551 17.094 345.594 cv
17.113 345.645 17.125 345.707 17.141 345.789 cv
17.148 345.871 17.156 345.977 17.156 346.098 cv
17.156 346.23 17.148 346.336 17.141 346.418 cv
17.125 346.504 17.113 346.57 17.094 346.613 cv
17.074 346.664 17.051 346.695 17.02 346.715 cv
16.996 346.738 16.961 346.75 16.914 346.746 cv
12.809 346.746 li
12.41 346.75 12.09 346.781 11.844 346.84 cv
11.602 346.906 11.391 346.996 11.211 347.113 cv
11.035 347.23 10.898 347.387 10.805 347.574 cv
10.711 347.77 10.664 347.988 10.664 348.234 cv
10.664 348.559 10.781 348.883 11.008 349.203 cv
11.242 349.527 11.574 349.863 12.012 350.215 cv
16.914 350.215 li
16.961 350.219 16.996 350.23 17.02 350.246 cv
17.051 350.27 17.074 350.301 17.094 350.348 cv
17.113 350.395 17.125 350.461 17.141 350.539 cv
17.148 350.625 17.156 350.73 17.156 350.859 cv
17.156 350.988 17.148 351.094 17.141 351.172 cv
17.125 351.258 17.113 351.324 17.094 351.371 cv
17.074 351.426 17.051 351.457 17.02 351.473 cv
16.996 351.492 16.961 351.504 16.914 351.5 cv
9.902 351.5 li
9.863 351.504 9.828 351.496 9.797 351.477 cv
9.77 351.465 9.746 351.434 9.719 351.383 cv
9.699 351.34 9.684 351.277 9.672 351.203 cv
9.668 351.133 9.664 351.039 9.66 350.914 cv
9.664 350.805 9.668 350.707 9.672 350.629 cv
9.684 350.555 9.699 350.496 9.719 350.453 cv
9.746 350.414 9.77 350.387 9.797 350.367 cv
9.828 350.352 9.863 350.344 9.902 350.34 cv
10.828 350.34 li
10.387 349.949 10.066 349.555 9.859 349.16 cv
9.656 348.77 9.551 348.371 9.551 347.969 cv
9.551 347.5 9.633 347.109 9.789 346.789 cv
9.953 346.473 10.164 346.211 10.426 346.012 cv
10.691 345.816 11 345.676 11.355 345.59 cv
11.711 345.504 12.141 345.461 12.637 345.461 cv
cp
f
13.105 337.09 mo
13.309 337.094 13.449 337.145 13.535 337.242 cv
13.621 337.348 13.664 337.465 13.664 337.59 cv
13.664 342.207 li
14.055 342.211 14.406 342.172 14.719 342.09 cv
15.031 342.016 15.301 341.883 15.52 341.699 cv
15.746 341.52 15.918 341.285 16.035 340.988 cv
16.16 340.699 16.219 340.34 16.215 339.914 cv
16.219 339.582 16.191 339.285 16.133 339.023 cv
16.082 338.762 16.02 338.535 15.949 338.344 cv
15.883 338.156 15.824 338 15.766 337.875 cv
15.715 337.754 15.688 337.66 15.684 337.598 cv
15.688 337.562 15.695 337.531 15.711 337.5 cv
15.73 337.473 15.758 337.449 15.793 337.43 cv
15.832 337.418 15.883 337.406 15.945 337.395 cv
16.012 337.391 16.09 337.387 16.184 337.383 cv
16.254 337.387 16.313 337.391 16.359 337.391 cv
16.406 337.398 16.449 337.402 16.488 337.41 cv
16.527 337.418 16.563 337.434 16.594 337.449 cv
16.625 337.473 16.656 337.496 16.684 337.52 cv
16.715 337.551 16.762 337.633 16.824 337.773 cv
16.891 337.914 16.953 338.098 17.016 338.32 cv
17.078 338.547 17.133 338.805 17.184 339.098 cv
17.23 339.391 17.254 339.703 17.258 340.035 cv
17.254 340.613 17.176 341.121 17.016 341.551 cv
16.855 341.988 16.617 342.352 16.301 342.645 cv
15.984 342.945 15.59 343.168 15.109 343.316 cv
14.633 343.465 14.074 343.539 13.438 343.539 cv
12.84 343.539 12.301 343.465 11.816 343.309 cv
11.34 343.156 10.93 342.93 10.594 342.633 cv
10.258 342.34 10 341.984 9.82 341.57 cv
9.641 341.156 9.551 340.691 9.551 340.176 cv
9.551 339.625 9.641 339.156 9.816 338.77 cv
9.996 338.383 10.234 338.066 10.531 337.812 cv
10.832 337.566 11.184 337.383 11.582 337.266 cv
11.988 337.152 12.418 337.094 12.871 337.09 cv
cp
12.723 338.383 mo
12.047 338.367 11.516 338.52 11.133 338.836 cv
10.75 339.152 10.559 339.621 10.555 340.238 cv
10.559 340.562 10.617 340.844 10.734 341.082 cv
10.855 341.324 11.016 341.523 11.211 341.684 cv
11.41 341.848 11.641 341.973 11.902 342.059 cv
12.164 342.148 12.438 342.199 12.723 342.207 cv
cp
f
10.359 331.023 mo
10.477 331.027 10.574 331.027 10.648 331.031 cv
10.73 331.039 10.793 331.051 10.832 331.062 cv
10.879 331.082 10.91 331.102 10.934 331.121 cv
10.957 331.148 10.969 331.18 10.969 331.219 cv
10.969 331.262 10.957 331.312 10.934 331.371 cv
10.91 331.434 10.887 331.504 10.863 331.574 cv
10.84 331.652 10.82 331.734 10.797 331.828 cv
10.781 331.922 10.77 332.023 10.766 332.133 cv
10.77 332.266 10.797 332.395 10.844 332.516 cv
10.898 332.641 10.984 332.77 11.102 332.906 cv
11.227 333.047 11.383 333.191 11.578 333.34 cv
11.773 333.492 12.016 333.66 12.301 333.84 cv
16.914 333.84 li
16.961 333.844 16.996 333.855 17.02 333.871 cv
17.051 333.895 17.074 333.926 17.094 333.973 cv
17.113 334.02 17.125 334.086 17.141 334.164 cv
17.148 334.25 17.156 334.355 17.156 334.484 cv
17.156 334.613 17.148 334.719 17.141 334.797 cv
17.125 334.883 17.113 334.949 17.094 334.996 cv
17.074 335.051 17.051 335.082 17.02 335.098 cv
16.996 335.117 16.961 335.129 16.914 335.125 cv
9.902 335.125 li
9.863 335.129 9.828 335.121 9.797 335.102 cv
9.77 335.09 9.746 335.059 9.719 335.008 cv
9.699 334.965 9.684 334.902 9.672 334.828 cv
9.668 334.758 9.664 334.664 9.66 334.539 cv
9.664 334.43 9.668 334.332 9.672 334.254 cv
9.684 334.18 9.699 334.121 9.719 334.078 cv
9.746 334.039 9.77 334.012 9.797 333.992 cv
9.828 333.977 9.863 333.969 9.902 333.965 cv
10.922 333.965 li
10.641 333.777 10.414 333.594 10.238 333.422 cv
10.063 333.254 9.922 333.094 9.82 332.941 cv
9.719 332.793 9.648 332.645 9.609 332.496 cv
9.57 332.348 9.551 332.199 9.551 332.047 cv
9.551 331.98 9.555 331.902 9.563 331.816 cv
9.57 331.73 9.586 331.641 9.605 331.547 cv
9.629 331.453 9.652 331.371 9.676 331.293 cv
9.703 331.223 9.73 331.168 9.754 331.133 cv
9.785 331.105 9.809 331.086 9.828 331.07 cv
9.855 331.062 9.887 331.051 9.918 331.043 cv
9.957 331.035 10.008 331.031 10.078 331.027 cv
10.148 331.027 10.242 331.027 10.359 331.023 cv
cp
f
10.219 324.016 mo
10.402 324.02 10.535 324.043 10.613 324.09 cv
10.695 324.141 10.734 324.203 10.734 324.277 cv
10.734 325.285 li
10.922 325.105 11.129 324.977 11.355 324.902 cv
11.582 324.832 11.816 324.797 12.059 324.793 cv
12.465 324.797 12.824 324.863 13.137 324.988 cv
13.449 325.121 13.715 325.305 13.926 325.547 cv
14.145 325.789 14.309 326.078 14.422 326.406 cv
14.539 326.742 14.598 327.109 14.594 327.512 cv
14.598 327.801 14.559 328.074 14.48 328.328 cv
14.406 328.59 14.313 328.785 14.195 328.922 cv
14.293 329.016 14.398 329.094 14.516 329.152 cv
14.637 329.215 14.773 329.246 14.926 329.242 cv
15.109 329.246 15.262 329.16 15.379 328.988 cv
15.504 328.82 15.566 328.598 15.574 328.316 cv
15.652 326.484 li
15.664 326.137 15.711 325.82 15.797 325.527 cv
15.883 325.238 16.008 324.984 16.164 324.77 cv
16.324 324.559 16.516 324.391 16.746 324.27 cv
16.98 324.152 17.25 324.094 17.555 324.09 cv
17.875 324.094 18.18 324.16 18.473 324.293 cv
18.762 324.43 19.016 324.637 19.238 324.914 cv
19.457 325.195 19.633 325.551 19.762 325.98 cv
19.887 326.41 19.949 326.918 19.953 327.504 cv
19.949 328.074 19.902 328.559 19.809 328.953 cv
19.711 329.352 19.578 329.676 19.414 329.93 cv
19.246 330.184 19.051 330.367 18.82 330.48 cv
18.586 330.598 18.332 330.656 18.066 330.652 cv
17.895 330.656 17.73 330.637 17.57 330.59 cv
17.406 330.551 17.254 330.488 17.109 330.402 cv
16.965 330.32 16.828 330.211 16.691 330.082 cv
16.563 329.957 16.43 329.812 16.301 329.641 cv
16.172 329.898 16.008 330.086 15.809 330.207 cv
15.613 330.328 15.402 330.387 15.168 330.387 cv
14.855 330.387 14.57 330.324 14.32 330.195 cv
14.07 330.066 13.848 329.906 13.648 329.711 cv
13.457 329.875 13.242 330 13 330.094 cv
12.762 330.187 12.469 330.234 12.121 330.234 cv
11.727 330.234 11.367 330.168 11.047 330.031 cv
10.73 329.898 10.465 329.711 10.246 329.469 cv
10.031 329.23 9.863 328.945 9.742 328.609 cv
9.629 328.277 9.57 327.91 9.566 327.512 cv
9.57 327.301 9.582 327.102 9.602 326.918 cv
9.629 326.734 9.66 326.562 9.699 326.398 cv
9.699 324.277 li
9.703 324.191 9.746 324.125 9.828 324.082 cv
9.918 324.039 10.047 324.02 10.219 324.016 cv
cp
12.066 326.023 mo
11.594 326.027 11.223 326.16 10.949 326.418 cv
10.684 326.684 10.547 327.055 10.547 327.535 cv
10.547 327.789 10.59 328.008 10.672 328.187 cv
10.758 328.375 10.871 328.527 11.016 328.648 cv
11.164 328.77 11.332 328.859 11.52 328.918 cv
11.707 328.98 11.906 329.012 12.113 329.008 cv
12.578 329.012 12.941 328.879 13.207 328.617 cv
13.473 328.355 13.605 327.988 13.602 327.512 cv
13.605 327.262 13.566 327.043 13.48 326.852 cv
13.402 326.668 13.289 326.512 13.148 326.387 cv
13.008 326.266 12.844 326.176 12.652 326.113 cv
12.469 326.059 12.273 326.027 12.066 326.023 cv
cp
17.625 325.379 mo
17.32 325.383 17.09 325.508 16.926 325.75 cv
16.766 326 16.676 326.332 16.664 326.75 cv
16.602 328.566 li
16.734 328.734 16.859 328.871 16.973 328.973 cv
17.09 329.082 17.199 329.164 17.309 329.227 cv
17.414 329.289 17.52 329.332 17.625 329.355 cv
17.727 329.379 17.832 329.391 17.941 329.391 cv
18.277 329.391 18.531 329.223 18.711 328.879 cv
18.883 328.539 18.973 328.059 18.973 327.441 cv
18.973 327.055 18.934 326.73 18.859 326.465 cv
18.781 326.207 18.68 325.996 18.559 325.832 cv
18.43 325.676 18.289 325.559 18.129 325.484 cv
17.969 325.418 17.801 325.383 17.625 325.379 cv
cp
f
17.109 319.16 mo
19.688 320.094 li
19.77 320.129 19.832 320.207 19.879 320.332 cv
19.922 320.461 19.945 320.656 19.945 320.914 cv
19.945 321.055 19.938 321.164 19.926 321.242 cv
19.91 321.328 19.887 321.391 19.859 321.43 cv
19.824 321.477 19.785 321.5 19.734 321.504 cv
19.68 321.512 19.617 321.5 19.547 321.465 cv
17.109 320.5 li
17.09 320.547 17.059 320.594 17.008 320.633 cv
16.965 320.68 16.914 320.707 16.859 320.719 cv
10.156 323.219 li
10.051 323.262 9.965 323.285 9.902 323.281 cv
9.84 323.285 9.793 323.262 9.754 323.219 cv
9.723 323.18 9.695 323.113 9.68 323.016 cv
9.668 322.926 9.664 322.801 9.66 322.645 cv
9.664 322.488 9.668 322.367 9.672 322.277 cv
9.684 322.191 9.695 322.121 9.715 322.066 cv
9.738 322.016 9.77 321.977 9.805 321.953 cv
9.848 321.93 9.902 321.906 9.965 321.879 cv
15.59 319.875 li
15.59 319.852 li
9.934 317.922 li
9.836 317.891 9.773 317.855 9.742 317.809 cv
9.719 317.77 9.695 317.703 9.68 317.609 cv
9.668 317.523 9.664 317.395 9.66 317.227 cv
9.664 317.082 9.668 316.961 9.68 316.867 cv
9.695 316.773 9.723 316.707 9.754 316.66 cv
9.793 316.621 9.84 316.598 9.902 316.594 cv
9.965 316.598 10.043 316.613 10.133 316.641 cv
cp
f
15.684 304.527 mo
15.77 304.527 15.84 304.531 15.902 304.535 cv
15.965 304.543 16.02 304.551 16.066 304.562 cv
16.113 304.578 16.156 304.598 16.191 304.613 cv
16.23 304.637 16.273 304.672 16.324 304.723 cv
16.375 304.777 16.453 304.887 16.559 305.051 cv
16.668 305.219 16.773 305.426 16.871 305.672 cv
16.977 305.918 17.059 306.199 17.129 306.52 cv
17.195 306.84 17.23 307.191 17.234 307.566 cv
17.23 308.227 17.125 308.816 16.906 309.344 cv
16.691 309.871 16.371 310.32 15.941 310.691 cv
15.52 311.062 14.992 311.348 14.363 311.547 cv
13.738 311.746 13.016 311.848 12.199 311.844 cv
11.363 311.848 10.621 311.738 9.965 311.523 cv
9.313 311.309 8.758 311.008 8.301 310.617 cv
7.848 310.23 7.5 309.766 7.262 309.219 cv
7.023 308.68 6.902 308.074 6.902 307.41 cv
6.902 307.121 6.93 306.84 6.984 306.562 cv
7.039 306.289 7.109 306.035 7.188 305.801 cv
7.273 305.57 7.367 305.363 7.477 305.176 cv
7.586 304.996 7.676 304.867 7.746 304.797 cv
7.816 304.727 7.871 304.684 7.906 304.66 cv
7.945 304.645 7.988 304.625 8.035 304.609 cv
8.086 304.598 8.145 304.59 8.211 304.578 cv
8.281 304.574 8.363 304.57 8.453 304.566 cv
8.559 304.57 8.645 304.574 8.715 304.582 cv
8.789 304.594 8.852 304.609 8.898 304.629 cv
8.953 304.652 8.988 304.676 9.008 304.703 cv
9.035 304.734 9.047 304.77 9.043 304.809 cv
9.047 304.883 8.996 304.988 8.891 305.117 cv
8.793 305.25 8.684 305.418 8.559 305.621 cv
8.441 305.832 8.328 306.082 8.223 306.375 cv
8.125 306.672 8.074 307.023 8.07 307.434 cv
8.074 307.887 8.164 308.297 8.34 308.664 cv
8.52 309.031 8.781 309.348 9.129 309.605 cv
9.48 309.871 9.906 310.07 10.406 310.211 cv
10.906 310.355 11.48 310.43 12.121 310.426 cv
12.766 310.43 13.332 310.359 13.82 310.219 cv
14.313 310.082 14.723 309.883 15.051 309.625 cv
15.383 309.367 15.629 309.051 15.797 308.676 cv
15.969 308.301 16.055 307.875 16.051 307.395 cv
16.055 306.996 16.004 306.645 15.902 306.344 cv
15.805 306.043 15.695 305.789 15.57 305.574 cv
15.449 305.367 15.34 305.191 15.238 305.055 cv
15.145 304.918 15.094 304.812 15.09 304.73 cv
15.094 304.699 15.102 304.668 15.113 304.637 cv
15.133 304.613 15.164 304.59 15.203 304.574 cv
15.25 304.559 15.309 304.547 15.387 304.539 cv
15.465 304.531 15.566 304.527 15.684 304.527 cv
cp
f
13.328 296.379 mo
13.906 296.383 14.434 296.457 14.91 296.605 cv
15.395 296.758 15.809 296.984 16.152 297.281 cv
16.504 297.582 16.773 297.957 16.965 298.402 cv
17.16 298.855 17.254 299.375 17.258 299.965 cv
17.254 300.543 17.172 301.047 17 301.473 cv
16.832 301.902 16.582 302.258 16.254 302.543 cv
15.926 302.832 15.531 303.047 15.063 303.184 cv
14.598 303.324 14.066 303.391 13.469 303.391 cv
12.902 303.391 12.375 303.32 11.895 303.172 cv
11.414 303.027 11 302.801 10.648 302.5 cv
10.301 302.203 10.031 301.832 9.84 301.383 cv
9.648 300.937 9.551 300.414 9.551 299.816 cv
9.551 299.238 9.637 298.738 9.809 298.309 cv
9.98 297.883 10.23 297.523 10.559 297.238 cv
10.887 296.953 11.285 296.738 11.75 296.594 cv
12.219 296.453 12.746 296.383 13.328 296.379 cv
cp
13.414 297.711 mo
13.039 297.715 12.68 297.75 12.34 297.816 cv
12.004 297.891 11.711 298.008 11.453 298.168 cv
11.203 298.332 11 298.551 10.848 298.828 cv
10.703 299.109 10.629 299.457 10.625 299.867 cv
10.629 300.254 10.695 300.582 10.828 300.855 cv
10.965 301.133 11.156 301.359 11.402 301.535 cv
11.648 301.715 11.941 301.848 12.277 301.93 cv
12.617 302.02 12.984 302.062 13.383 302.059 cv
13.77 302.062 14.133 302.027 14.469 301.953 cv
14.809 301.887 15.102 301.77 15.352 301.602 cv
15.605 301.437 15.809 301.215 15.953 300.937 cv
16.105 300.66 16.18 300.312 16.176 299.898 cv
16.18 299.523 16.109 299.195 15.973 298.914 cv
15.84 298.637 15.652 298.41 15.402 298.23 cv
15.16 298.055 14.867 297.926 14.531 297.84 cv
14.195 297.758 13.824 297.715 13.414 297.711 cv
cp
f
16.914 288.422 mo
16.961 288.422 16.996 288.434 17.02 288.453 cv
17.051 288.477 17.074 288.512 17.094 288.555 cv
17.113 288.605 17.125 288.668 17.141 288.75 cv
17.148 288.832 17.156 288.937 17.156 289.059 cv
17.156 289.191 17.148 289.297 17.141 289.379 cv
17.125 289.465 17.113 289.531 17.094 289.574 cv
17.074 289.625 17.051 289.656 17.02 289.676 cv
16.996 289.699 16.961 289.711 16.914 289.707 cv
12.809 289.707 li
12.41 289.711 12.09 289.742 11.844 289.801 cv
11.602 289.867 11.391 289.957 11.211 290.074 cv
11.035 290.191 10.898 290.348 10.805 290.535 cv
10.711 290.73 10.664 290.949 10.664 291.195 cv
10.664 291.52 10.781 291.844 11.008 292.164 cv
11.242 292.488 11.574 292.824 12.012 293.176 cv
16.914 293.176 li
16.961 293.18 16.996 293.191 17.02 293.207 cv
17.051 293.23 17.074 293.262 17.094 293.309 cv
17.113 293.355 17.125 293.422 17.141 293.5 cv
17.148 293.586 17.156 293.691 17.156 293.82 cv
17.156 293.949 17.148 294.055 17.141 294.133 cv
17.125 294.219 17.113 294.285 17.094 294.332 cv
17.074 294.387 17.051 294.418 17.02 294.434 cv
16.996 294.453 16.961 294.465 16.914 294.461 cv
9.902 294.461 li
9.863 294.465 9.828 294.457 9.797 294.437 cv
9.77 294.426 9.746 294.395 9.719 294.344 cv
9.699 294.301 9.684 294.238 9.672 294.164 cv
9.668 294.094 9.664 294 9.66 293.875 cv
9.664 293.766 9.668 293.668 9.672 293.59 cv
9.684 293.516 9.699 293.457 9.719 293.414 cv
9.746 293.375 9.77 293.348 9.797 293.328 cv
9.828 293.312 9.863 293.305 9.902 293.301 cv
10.828 293.301 li
10.387 292.91 10.066 292.516 9.859 292.121 cv
9.656 291.73 9.551 291.332 9.551 290.93 cv
9.551 290.461 9.633 290.07 9.789 289.75 cv
9.953 289.434 10.164 289.172 10.426 288.973 cv
10.691 288.777 11 288.637 11.355 288.551 cv
11.711 288.465 12.141 288.422 12.637 288.422 cv
cp
f
15.004 281.676 mo
15.367 281.68 15.688 281.746 15.965 281.875 cv
16.246 282.008 16.48 282.195 16.672 282.437 cv
16.867 282.684 17.012 282.977 17.109 283.312 cv
17.207 283.652 17.254 284.023 17.258 284.426 cv
17.254 284.68 17.234 284.918 17.199 285.141 cv
17.156 285.367 17.109 285.566 17.051 285.746 cv
16.992 285.926 16.93 286.078 16.863 286.203 cv
16.801 286.328 16.742 286.422 16.688 286.477 cv
16.637 286.535 16.566 286.574 16.469 286.598 cv
16.379 286.625 16.25 286.637 16.09 286.637 cv
15.992 286.637 15.91 286.633 15.84 286.621 cv
15.773 286.613 15.719 286.602 15.676 286.582 cv
15.637 286.57 15.605 286.547 15.586 286.52 cv
15.57 286.492 15.563 286.461 15.559 286.422 cv
15.563 286.367 15.598 286.281 15.664 286.168 cv
15.738 286.059 15.816 285.922 15.895 285.754 cv
15.98 285.594 16.055 285.402 16.125 285.176 cv
16.195 284.957 16.23 284.699 16.23 284.402 cv
16.23 284.187 16.207 283.988 16.16 283.809 cv
16.113 283.633 16.047 283.48 15.953 283.352 cv
15.867 283.223 15.75 283.121 15.605 283.051 cv
15.469 282.98 15.301 282.945 15.105 282.945 cv
14.91 282.945 14.746 282.996 14.609 283.098 cv
14.477 283.199 14.355 283.336 14.25 283.5 cv
14.148 283.668 14.059 283.852 13.973 284.059 cv
13.895 284.27 13.809 284.484 13.719 284.703 cv
13.633 284.922 13.531 285.137 13.418 285.348 cv
13.309 285.559 13.176 285.75 13.012 285.914 cv
12.855 286.086 12.66 286.219 12.434 286.316 cv
12.211 286.422 11.945 286.473 11.633 286.469 cv
11.359 286.473 11.094 286.418 10.84 286.309 cv
10.59 286.203 10.371 286.043 10.18 285.828 cv
9.992 285.617 9.84 285.352 9.723 285.031 cv
9.609 284.711 9.551 284.34 9.551 283.91 cv
9.551 283.727 9.566 283.539 9.598 283.352 cv
9.629 283.168 9.668 283 9.715 282.844 cv
9.762 282.695 9.813 282.566 9.867 282.457 cv
9.922 282.355 9.973 282.273 10.012 282.215 cv
10.059 282.164 10.094 282.129 10.121 282.105 cv
10.152 282.09 10.188 282.074 10.223 282.066 cv
10.266 282.059 10.313 282.051 10.367 282.043 cv
10.426 282.035 10.496 282.031 10.578 282.031 cv
10.668 282.031 10.746 282.035 10.809 282.043 cv
10.879 282.051 10.93 282.066 10.969 282.082 cv
11.012 282.105 11.043 282.125 11.059 282.148 cv
11.078 282.176 11.086 282.207 11.086 282.234 cv
11.086 282.285 11.059 282.352 11 282.437 cv
10.945 282.527 10.883 282.641 10.816 282.781 cv
10.754 282.922 10.695 283.09 10.633 283.277 cv
10.578 283.469 10.547 283.684 10.547 283.926 cv
10.547 284.148 10.574 284.34 10.621 284.504 cv
10.676 284.672 10.746 284.809 10.832 284.914 cv
10.926 285.02 11.031 285.102 11.156 285.152 cv
11.281 285.211 11.418 285.238 11.563 285.234 cv
11.766 285.238 11.934 285.187 12.07 285.082 cv
12.211 284.98 12.332 284.844 12.434 284.676 cv
12.539 284.512 12.633 284.32 12.715 284.105 cv
12.801 283.895 12.887 283.68 12.973 283.457 cv
13.063 283.238 13.164 283.02 13.27 282.801 cv
13.379 282.586 13.508 282.395 13.664 282.227 cv
13.82 282.062 14.008 281.93 14.227 281.828 cv
14.445 281.73 14.707 281.68 15.004 281.676 cv
cp
f
16.914 273.832 mo
16.961 273.836 16.996 273.844 17.02 273.859 cv
17.051 273.879 17.074 273.914 17.094 273.957 cv
17.113 274.004 17.125 274.062 17.141 274.137 cv
17.148 274.215 17.156 274.309 17.156 274.414 cv
17.156 274.539 17.148 274.637 17.141 274.707 cv
17.125 274.785 17.113 274.844 17.094 274.887 cv
17.074 274.934 17.051 274.965 17.02 274.977 cv
16.996 274.996 16.961 275.004 16.914 275 cv
15.988 275 li
16.434 275.402 16.754 275.797 16.953 276.184 cv
17.156 276.578 17.254 276.973 17.258 277.367 cv
17.254 277.84 17.18 278.234 17.023 278.551 cv
16.871 278.871 16.66 279.129 16.391 279.324 cv
16.125 279.527 15.813 279.668 15.453 279.75 cv
15.098 279.84 14.664 279.883 14.156 279.879 cv
9.902 279.879 li
9.863 279.883 9.828 279.875 9.797 279.852 cv
9.77 279.836 9.746 279.801 9.719 279.746 cv
9.699 279.699 9.684 279.629 9.672 279.543 cv
9.668 279.461 9.664 279.359 9.66 279.23 cv
9.664 279.109 9.668 279.004 9.672 278.918 cv
9.684 278.836 9.699 278.77 9.719 278.723 cv
9.746 278.676 9.77 278.641 9.797 278.617 cv
9.828 278.598 9.863 278.59 9.902 278.586 cv
13.984 278.586 li
14.398 278.59 14.727 278.559 14.973 278.496 cv
15.219 278.437 15.43 278.348 15.602 278.223 cv
15.781 278.105 15.914 277.949 16.008 277.758 cv
16.105 277.574 16.156 277.355 16.152 277.105 cv
16.156 276.785 16.039 276.465 15.809 276.141 cv
15.582 275.824 15.246 275.484 14.801 275.125 cv
9.902 275.125 li
9.863 275.125 9.828 275.117 9.797 275.098 cv
9.77 275.082 9.746 275.047 9.719 274.992 cv
9.699 274.941 9.684 274.875 9.672 274.793 cv
9.668 274.715 9.664 274.609 9.66 274.477 cv
9.664 274.355 9.668 274.25 9.672 274.164 cv
9.684 274.082 9.699 274.02 9.719 273.973 cv
9.746 273.93 9.77 273.895 9.797 273.867 cv
9.828 273.848 9.863 273.836 9.902 273.832 cv
cp
f
16.914 260.977 mo
16.961 260.98 16.996 260.988 17.02 261.008 cv
17.051 261.031 17.074 261.066 17.094 261.109 cv
17.113 261.16 17.125 261.227 17.141 261.305 cv
17.148 261.391 17.156 261.492 17.156 261.617 cv
17.156 261.75 17.148 261.859 17.141 261.937 cv
17.125 262.023 17.113 262.09 17.094 262.137 cv
17.074 262.191 17.051 262.227 17.02 262.242 cv
16.996 262.266 16.961 262.273 16.914 262.273 cv
12.652 262.273 li
12.359 262.273 12.09 262.301 11.844 262.352 cv
11.602 262.406 11.391 262.488 11.211 262.602 cv
11.035 262.715 10.898 262.859 10.805 263.035 cv
10.711 263.215 10.664 263.426 10.664 263.66 cv
10.664 263.957 10.781 264.254 11.008 264.551 cv
11.242 264.855 11.574 265.184 12.012 265.539 cv
16.914 265.539 li
16.961 265.543 16.996 265.555 17.02 265.57 cv
17.051 265.594 17.074 265.625 17.094 265.672 cv
17.113 265.723 17.125 265.789 17.141 265.871 cv
17.148 265.957 17.156 266.062 17.156 266.184 cv
17.156 266.305 17.148 266.406 17.141 266.492 cv
17.125 266.578 17.113 266.648 17.094 266.695 cv
17.074 266.75 17.051 266.781 17.02 266.797 cv
16.996 266.816 16.961 266.828 16.914 266.824 cv
12.652 266.824 li
12.359 266.828 12.09 266.855 11.844 266.91 cv
11.602 266.969 11.391 267.055 11.211 267.168 cv
11.035 267.281 10.898 267.426 10.805 267.598 cv
10.711 267.777 10.664 267.984 10.664 268.219 cv
10.664 268.52 10.781 268.816 11.008 269.117 cv
11.242 269.418 11.574 269.746 12.012 270.098 cv
16.914 270.098 li
16.961 270.102 16.996 270.113 17.02 270.129 cv
17.051 270.152 17.074 270.184 17.094 270.23 cv
17.113 270.277 17.125 270.344 17.141 270.422 cv
17.148 270.508 17.156 270.613 17.156 270.742 cv
17.156 270.871 17.148 270.977 17.141 271.055 cv
17.125 271.141 17.113 271.207 17.094 271.254 cv
17.074 271.309 17.051 271.34 17.02 271.355 cv
16.996 271.375 16.961 271.387 16.914 271.383 cv
9.902 271.383 li
9.863 271.387 9.828 271.379 9.797 271.359 cv
9.77 271.348 9.746 271.316 9.719 271.266 cv
9.699 271.223 9.684 271.16 9.672 271.086 cv
9.668 271.016 9.664 270.922 9.66 270.797 cv
9.664 270.687 9.668 270.59 9.672 270.512 cv
9.684 270.437 9.699 270.379 9.719 270.336 cv
9.746 270.297 9.77 270.27 9.797 270.25 cv
9.828 270.234 9.863 270.227 9.902 270.223 cv
10.828 270.223 li
10.387 269.832 10.066 269.449 9.859 269.074 cv
9.656 268.707 9.551 268.328 9.551 267.945 cv
9.551 267.656 9.586 267.398 9.652 267.164 cv
9.723 266.937 9.816 266.73 9.938 266.551 cv
10.059 266.375 10.203 266.227 10.371 266.098 cv
10.543 265.977 10.734 265.871 10.938 265.785 cv
10.688 265.555 10.473 265.332 10.293 265.121 cv
10.121 264.91 9.977 264.707 9.863 264.512 cv
9.758 264.316 9.68 264.129 9.625 263.945 cv
9.578 263.762 9.551 263.574 9.551 263.387 cv
9.551 262.934 9.633 262.555 9.789 262.25 cv
9.953 261.945 10.164 261.699 10.426 261.504 cv
10.691 261.316 11 261.18 11.355 261.098 cv
11.711 261.02 12.086 260.98 12.48 260.977 cv
cp
f
13.297 252.176 mo
13.914 252.18 14.465 252.246 14.953 252.375 cv
15.441 252.512 15.855 252.707 16.195 252.961 cv
16.535 253.219 16.797 253.535 16.98 253.914 cv
17.164 254.293 17.254 254.727 17.258 255.215 cv
17.254 255.426 17.234 255.621 17.195 255.793 cv
17.152 255.973 17.09 256.145 17 256.309 cv
16.914 256.48 16.801 256.648 16.664 256.812 cv
16.531 256.984 16.375 257.16 16.191 257.344 cv
19.695 257.344 li
19.734 257.348 19.773 257.359 19.805 257.375 cv
19.836 257.398 19.859 257.43 19.883 257.477 cv
19.898 257.523 19.914 257.59 19.93 257.668 cv
19.938 257.754 19.945 257.859 19.945 257.988 cv
19.945 258.117 19.938 258.223 19.93 258.301 cv
19.914 258.387 19.898 258.453 19.883 258.5 cv
19.859 258.555 19.836 258.586 19.805 258.602 cv
19.773 258.621 19.734 258.633 19.695 258.629 cv
9.902 258.629 li
9.855 258.633 9.82 258.625 9.789 258.605 cv
9.766 258.594 9.738 258.562 9.715 258.512 cv
9.695 258.469 9.684 258.406 9.672 258.332 cv
9.668 258.262 9.664 258.176 9.66 258.066 cv
9.664 257.961 9.668 257.871 9.672 257.797 cv
9.684 257.73 9.695 257.672 9.715 257.621 cv
9.738 257.578 9.766 257.543 9.789 257.523 cv
9.82 257.508 9.855 257.5 9.902 257.496 cv
10.844 257.496 li
10.629 257.289 10.438 257.086 10.277 256.883 cv
10.117 256.687 9.984 256.488 9.875 256.285 cv
9.77 256.09 9.688 255.883 9.633 255.672 cv
9.578 255.461 9.551 255.238 9.551 255.004 cv
9.551 254.496 9.652 254.062 9.848 253.703 cv
10.047 253.344 10.316 253.055 10.656 252.828 cv
11.004 252.605 11.402 252.437 11.855 252.332 cv
12.313 252.23 12.793 252.18 13.297 252.176 cv
cp
13.445 253.508 mo
13.094 253.512 12.746 253.539 12.406 253.59 cv
12.074 253.648 11.777 253.742 11.516 253.875 cv
11.258 254.012 11.051 254.191 10.891 254.41 cv
10.738 254.637 10.66 254.914 10.656 255.25 cv
10.66 255.418 10.684 255.582 10.73 255.742 cv
10.781 255.906 10.859 256.074 10.965 256.238 cv
11.074 256.41 11.215 256.582 11.387 256.762 cv
11.563 256.945 11.777 257.141 12.027 257.344 cv
14.816 257.344 li
15.254 256.988 15.582 256.652 15.809 256.332 cv
16.039 256.016 16.156 255.68 16.152 255.328 cv
16.156 255.004 16.078 254.727 15.918 254.492 cv
15.766 254.266 15.555 254.078 15.293 253.93 cv
15.035 253.789 14.746 253.68 14.422 253.609 cv
14.102 253.543 13.777 253.512 13.445 253.508 cv
cp
f
16.398 246.715 mo
16.555 246.715 16.672 246.727 16.758 246.746 cv
16.848 246.77 16.914 246.801 16.953 246.84 cv
16.996 246.883 17.035 246.945 17.07 247.027 cv
17.105 247.113 17.133 247.207 17.16 247.312 cv
17.18 247.422 17.199 247.535 17.219 247.652 cv
17.23 247.77 17.238 247.891 17.242 248.008 cv
17.238 248.375 17.191 248.687 17.098 248.945 cv
17.004 249.207 16.859 249.418 16.66 249.582 cv
16.469 249.75 16.223 249.871 15.922 249.945 cv
15.625 250.023 15.273 250.062 14.863 250.059 cv
10.766 250.059 li
10.766 251.039 li
10.77 251.117 10.727 251.18 10.641 251.227 cv
10.559 251.273 10.426 251.297 10.234 251.297 cv
10.141 251.297 10.059 251.293 9.988 251.277 cv
9.926 251.27 9.867 251.25 9.82 251.227 cv
9.777 251.207 9.746 251.18 9.727 251.145 cv
9.711 251.113 9.703 251.078 9.699 251.031 cv
9.699 250.059 li
8.031 250.059 li
8 250.062 7.965 250.051 7.93 250.031 cv
7.902 250.016 7.875 249.984 7.848 249.93 cv
7.828 249.883 7.813 249.816 7.797 249.73 cv
7.789 249.652 7.781 249.547 7.781 249.418 cv
7.781 249.289 7.789 249.184 7.797 249.102 cv
7.813 249.02 7.828 248.953 7.848 248.906 cv
7.875 248.859 7.902 248.828 7.93 248.805 cv
7.965 248.789 8 248.777 8.031 248.773 cv
9.699 248.773 li
9.699 246.973 li
9.703 246.934 9.711 246.898 9.727 246.863 cv
9.746 246.836 9.777 246.809 9.82 246.781 cv
9.867 246.762 9.926 246.746 9.988 246.73 cv
10.059 246.723 10.141 246.715 10.234 246.715 cv
10.426 246.715 10.559 246.738 10.641 246.785 cv
10.727 246.832 10.77 246.895 10.766 246.973 cv
10.766 248.773 li
14.68 248.773 li
15.164 248.777 15.527 248.707 15.773 248.559 cv
16.023 248.418 16.148 248.16 16.145 247.789 cv
16.148 247.676 16.137 247.57 16.109 247.473 cv
16.09 247.383 16.066 247.301 16.035 247.223 cv
16.012 247.152 15.984 247.09 15.961 247.035 cv
15.938 246.988 15.926 246.941 15.926 246.895 cv
15.926 246.871 15.934 246.844 15.945 246.82 cv
15.961 246.797 15.984 246.781 16.02 246.766 cv
16.059 246.758 16.109 246.746 16.168 246.73 cv
16.234 246.723 16.313 246.715 16.398 246.715 cv
cp
f
16.914 243.699 mo
16.961 243.703 16.996 243.715 17.02 243.73 cv
17.051 243.754 17.074 243.785 17.094 243.832 cv
17.113 243.879 17.125 243.945 17.141 244.023 cv
17.148 244.109 17.156 244.215 17.156 244.344 cv
17.156 244.473 17.148 244.578 17.141 244.656 cv
17.125 244.742 17.113 244.809 17.094 244.855 cv
17.074 244.91 17.051 244.941 17.02 244.957 cv
16.996 244.977 16.961 244.988 16.914 244.984 cv
9.902 244.984 li
9.867 244.988 9.836 244.977 9.801 244.957 cv
9.773 244.941 9.746 244.91 9.723 244.855 cv
9.703 244.809 9.688 244.742 9.676 244.656 cv
9.668 244.578 9.664 244.473 9.66 244.344 cv
9.664 244.215 9.668 244.109 9.676 244.023 cv
9.688 243.945 9.703 243.879 9.723 243.832 cv
9.746 243.785 9.773 243.754 9.801 243.73 cv
9.836 243.715 9.867 243.703 9.902 243.699 cv
cp
7.531 243.551 mo
7.836 243.551 8.043 243.609 8.148 243.723 cv
8.262 243.836 8.316 244.047 8.313 244.352 cv
8.316 244.656 8.262 244.863 8.152 244.973 cv
8.047 245.09 7.844 245.145 7.547 245.141 cv
7.246 245.145 7.043 245.086 6.934 244.969 cv
6.828 244.855 6.773 244.645 6.77 244.336 cv
6.773 244.035 6.828 243.832 6.93 243.719 cv
7.039 243.609 7.238 243.551 7.531 243.551 cv
cp
f
13.328 234.758 mo
13.906 234.762 14.434 234.836 14.91 234.984 cv
15.395 235.137 15.809 235.363 16.152 235.66 cv
16.504 235.961 16.773 236.336 16.965 236.781 cv
17.16 237.234 17.254 237.754 17.258 238.344 cv
17.254 238.922 17.172 239.426 17 239.852 cv
16.832 240.281 16.582 240.637 16.254 240.922 cv
15.926 241.211 15.531 241.426 15.063 241.562 cv
14.598 241.703 14.066 241.77 13.469 241.77 cv
12.902 241.77 12.375 241.699 11.895 241.551 cv
11.414 241.406 11 241.18 10.648 240.879 cv
10.301 240.582 10.031 240.211 9.84 239.762 cv
9.648 239.316 9.551 238.793 9.551 238.195 cv
9.551 237.617 9.637 237.117 9.809 236.687 cv
9.98 236.262 10.23 235.902 10.559 235.617 cv
10.887 235.332 11.285 235.117 11.75 234.973 cv
12.219 234.832 12.746 234.762 13.328 234.758 cv
cp
13.414 236.09 mo
13.039 236.094 12.68 236.129 12.34 236.195 cv
12.004 236.27 11.711 236.387 11.453 236.547 cv
11.203 236.711 11 236.93 10.848 237.207 cv
10.703 237.488 10.629 237.836 10.625 238.246 cv
10.629 238.633 10.695 238.961 10.828 239.234 cv
10.965 239.512 11.156 239.738 11.402 239.914 cv
11.648 240.094 11.941 240.227 12.277 240.309 cv
12.617 240.398 12.984 240.441 13.383 240.437 cv
13.77 240.441 14.133 240.406 14.469 240.332 cv
14.809 240.266 15.102 240.148 15.352 239.98 cv
15.605 239.816 15.809 239.594 15.953 239.316 cv
16.105 239.039 16.18 238.691 16.176 238.277 cv
16.18 237.902 16.109 237.574 15.973 237.293 cv
15.84 237.016 15.652 236.789 15.402 236.609 cv
15.16 236.434 14.867 236.305 14.531 236.219 cv
14.195 236.137 13.824 236.094 13.414 236.09 cv
cp
f
16.914 226.832 mo
16.961 226.832 16.996 226.844 17.02 226.863 cv
17.051 226.887 17.074 226.922 17.094 226.965 cv
17.113 227.016 17.125 227.078 17.141 227.16 cv
17.148 227.242 17.156 227.348 17.156 227.469 cv
17.156 227.602 17.148 227.707 17.141 227.789 cv
17.125 227.875 17.113 227.941 17.094 227.984 cv
17.074 228.035 17.051 228.066 17.02 228.086 cv
16.996 228.109 16.961 228.121 16.914 228.117 cv
12.809 228.117 li
12.41 228.121 12.09 228.152 11.844 228.211 cv
11.602 228.277 11.391 228.367 11.211 228.484 cv
11.035 228.602 10.898 228.758 10.805 228.945 cv
10.711 229.141 10.664 229.359 10.664 229.605 cv
10.664 229.93 10.781 230.254 11.008 230.574 cv
11.242 230.898 11.574 231.234 12.012 231.586 cv
16.914 231.586 li
16.961 231.59 16.996 231.602 17.02 231.617 cv
17.051 231.641 17.074 231.672 17.094 231.719 cv
17.113 231.766 17.125 231.832 17.141 231.91 cv
17.148 231.996 17.156 232.102 17.156 232.23 cv
17.156 232.359 17.148 232.465 17.141 232.543 cv
17.125 232.629 17.113 232.695 17.094 232.742 cv
17.074 232.797 17.051 232.828 17.02 232.844 cv
16.996 232.863 16.961 232.875 16.914 232.871 cv
9.902 232.871 li
9.863 232.875 9.828 232.867 9.797 232.848 cv
9.77 232.836 9.746 232.805 9.719 232.754 cv
9.699 232.711 9.684 232.648 9.672 232.574 cv
9.668 232.504 9.664 232.41 9.66 232.285 cv
9.664 232.176 9.668 232.078 9.672 232 cv
9.684 231.926 9.699 231.867 9.719 231.824 cv
9.746 231.785 9.77 231.758 9.797 231.738 cv
9.828 231.723 9.863 231.715 9.902 231.711 cv
10.828 231.711 li
10.387 231.32 10.066 230.926 9.859 230.531 cv
9.656 230.141 9.551 229.742 9.551 229.34 cv
9.551 228.871 9.633 228.48 9.789 228.16 cv
9.953 227.844 10.164 227.582 10.426 227.383 cv
10.691 227.187 11 227.047 11.355 226.961 cv
11.711 226.875 12.141 226.832 12.637 226.832 cv
cp
f
6.371 217.945 mo
7.418 218.441 8.488 218.809 9.586 219.051 cv
10.688 219.293 11.793 219.414 12.902 219.414 cv
14.02 219.414 15.129 219.293 16.223 219.043 cv
17.32 218.801 18.391 218.437 19.445 217.961 cv
19.504 217.937 19.559 217.926 19.605 217.918 cv
19.648 217.918 19.684 217.934 19.715 217.969 cv
19.742 218.008 19.762 218.062 19.777 218.137 cv
19.785 218.215 19.793 218.32 19.797 218.445 cv
19.793 218.543 19.789 218.621 19.789 218.687 cv
19.781 218.758 19.773 218.816 19.758 218.863 cv
19.742 218.914 19.723 218.957 19.703 218.984 cv
19.68 219.02 19.656 219.043 19.633 219.055 cv
19.102 219.336 18.566 219.582 18.023 219.793 cv
17.48 220.012 16.93 220.191 16.371 220.332 cv
15.809 220.48 15.242 220.59 14.668 220.66 cv
14.094 220.738 13.512 220.773 12.926 220.77 cv
12.34 220.773 11.762 220.734 11.188 220.648 cv
10.617 220.57 10.051 220.453 9.484 220.305 cv
8.922 220.156 8.367 219.977 7.82 219.766 cv
7.277 219.555 6.734 219.316 6.199 219.047 cv
6.18 219.043 6.164 219.027 6.145 219.004 cv
6.133 218.98 6.117 218.949 6.098 218.906 cv
6.086 218.867 6.074 218.809 6.063 218.734 cv
6.059 218.664 6.055 218.57 6.051 218.453 cv
6.055 218.336 6.063 218.242 6.074 218.164 cv
6.094 218.094 6.113 218.035 6.137 217.992 cv
6.164 217.953 6.199 217.93 6.238 217.922 cv
6.285 217.918 6.328 217.926 6.371 217.945 cv
cp
f
16.891 209.051 mo
16.938 209.055 16.973 209.062 17.004 209.078 cv
17.039 209.098 17.066 209.133 17.086 209.184 cv
17.105 209.238 17.121 209.309 17.137 209.395 cv
17.148 209.484 17.156 209.598 17.156 209.738 cv
17.156 209.918 17.148 210.066 17.133 210.18 cv
17.117 210.297 17.09 210.383 17.047 210.437 cv
17.008 210.496 16.961 210.543 16.906 210.578 cv
11.863 214.289 li
16.906 214.289 li
16.945 214.293 16.98 214.301 17.012 214.32 cv
17.047 214.344 17.074 214.383 17.09 214.43 cv
17.109 214.484 17.121 214.551 17.137 214.637 cv
17.148 214.723 17.156 214.832 17.156 214.957 cv
17.156 215.086 17.148 215.191 17.137 215.277 cv
17.121 215.367 17.109 215.437 17.09 215.488 cv
17.074 215.543 17.047 215.578 17.012 215.598 cv
16.98 215.621 16.945 215.633 16.906 215.629 cv
7.227 215.629 li
7.188 215.633 7.152 215.621 7.117 215.598 cv
7.09 215.578 7.063 215.543 7.043 215.488 cv
7.027 215.437 7.012 215.367 6.996 215.277 cv
6.984 215.191 6.98 215.086 6.977 214.957 cv
6.98 214.832 6.984 214.723 6.996 214.637 cv
7.012 214.551 7.027 214.484 7.043 214.43 cv
7.063 214.383 7.09 214.344 7.117 214.32 cv
7.152 214.301 7.188 214.293 7.227 214.289 cv
11.707 214.289 li
7.227 210.719 li
7.184 210.691 7.145 210.656 7.109 210.609 cv
7.082 210.57 7.059 210.52 7.035 210.457 cv
7.02 210.402 7.004 210.328 6.992 210.238 cv
6.984 210.156 6.98 210.047 6.977 209.91 cv
6.98 209.777 6.984 209.668 6.996 209.582 cv
7.012 209.5 7.031 209.434 7.047 209.383 cv
7.07 209.336 7.094 209.301 7.125 209.281 cv
7.156 209.266 7.191 209.258 7.227 209.254 cv
7.297 209.258 7.363 209.273 7.43 209.305 cv
7.5 209.34 7.594 209.406 7.711 209.496 cv
11.707 212.84 li
16.492 209.238 li
16.633 209.152 16.723 209.098 16.77 209.078 cv
16.82 209.062 16.863 209.055 16.891 209.051 cv
cp
f
16.914 206.238 mo
16.961 206.242 16.996 206.254 17.02 206.27 cv
17.051 206.293 17.074 206.324 17.094 206.371 cv
17.113 206.418 17.125 206.484 17.141 206.562 cv
17.148 206.648 17.156 206.754 17.156 206.883 cv
17.156 207.012 17.148 207.117 17.141 207.195 cv
17.125 207.281 17.113 207.348 17.094 207.395 cv
17.074 207.449 17.051 207.48 17.02 207.496 cv
16.996 207.516 16.961 207.527 16.914 207.523 cv
9.902 207.523 li
9.867 207.527 9.836 207.516 9.801 207.496 cv
9.773 207.48 9.746 207.449 9.723 207.395 cv
9.703 207.348 9.688 207.281 9.676 207.195 cv
9.668 207.117 9.664 207.012 9.66 206.883 cv
9.664 206.754 9.668 206.648 9.676 206.562 cv
9.688 206.484 9.703 206.418 9.723 206.371 cv
9.746 206.324 9.773 206.293 9.801 206.27 cv
9.836 206.254 9.867 206.242 9.902 206.238 cv
cp
7.531 206.09 mo
7.836 206.09 8.043 206.148 8.148 206.262 cv
8.262 206.375 8.316 206.586 8.313 206.891 cv
8.316 207.195 8.262 207.402 8.152 207.512 cv
8.047 207.629 7.844 207.684 7.547 207.68 cv
7.246 207.684 7.043 207.625 6.934 207.508 cv
6.828 207.395 6.773 207.184 6.77 206.875 cv
6.773 206.574 6.828 206.371 6.93 206.258 cv
7.039 206.148 7.238 206.09 7.531 206.09 cv
cp
f
16.914 202.535 mo
16.961 202.539 16.996 202.551 17.02 202.566 cv
17.051 202.59 17.074 202.621 17.094 202.668 cv
17.113 202.715 17.125 202.781 17.141 202.859 cv
17.148 202.945 17.156 203.051 17.156 203.18 cv
17.156 203.309 17.148 203.414 17.141 203.492 cv
17.125 203.578 17.113 203.645 17.094 203.691 cv
17.074 203.746 17.051 203.777 17.02 203.793 cv
16.996 203.812 16.961 203.824 16.914 203.82 cv
6.504 203.82 li
6.465 203.824 6.43 203.812 6.395 203.793 cv
6.367 203.777 6.34 203.746 6.316 203.691 cv
6.297 203.645 6.281 203.578 6.27 203.492 cv
6.262 203.414 6.258 203.309 6.254 203.18 cv
6.258 203.051 6.262 202.945 6.27 202.859 cv
6.281 202.781 6.297 202.715 6.316 202.668 cv
6.34 202.621 6.367 202.59 6.395 202.566 cv
6.43 202.551 6.465 202.539 6.504 202.535 cv
cp
f
13.328 193.598 mo
13.906 193.602 14.434 193.676 14.91 193.824 cv
15.395 193.977 15.809 194.203 16.152 194.5 cv
16.504 194.801 16.773 195.176 16.965 195.621 cv
17.16 196.074 17.254 196.594 17.258 197.184 cv
17.254 197.762 17.172 198.266 17 198.691 cv
16.832 199.121 16.582 199.477 16.254 199.762 cv
15.926 200.051 15.531 200.266 15.063 200.402 cv
14.598 200.543 14.066 200.609 13.469 200.609 cv
12.902 200.609 12.375 200.539 11.895 200.391 cv
11.414 200.246 11 200.02 10.648 199.719 cv
10.301 199.422 10.031 199.051 9.84 198.602 cv
9.648 198.156 9.551 197.633 9.551 197.035 cv
9.551 196.457 9.637 195.957 9.809 195.527 cv
9.98 195.102 10.23 194.742 10.559 194.457 cv
10.887 194.172 11.285 193.957 11.75 193.812 cv
12.219 193.672 12.746 193.602 13.328 193.598 cv
cp
13.414 194.93 mo
13.039 194.934 12.68 194.969 12.34 195.035 cv
12.004 195.109 11.711 195.227 11.453 195.387 cv
11.203 195.551 11 195.77 10.848 196.047 cv
10.703 196.328 10.629 196.676 10.625 197.086 cv
10.629 197.473 10.695 197.801 10.828 198.074 cv
10.965 198.352 11.156 198.578 11.402 198.754 cv
11.648 198.934 11.941 199.066 12.277 199.148 cv
12.617 199.238 12.984 199.281 13.383 199.277 cv
13.77 199.281 14.133 199.246 14.469 199.172 cv
14.809 199.105 15.102 198.988 15.352 198.82 cv
15.605 198.656 15.809 198.434 15.953 198.156 cv
16.105 197.879 16.18 197.531 16.176 197.117 cv
16.18 196.742 16.109 196.414 15.973 196.133 cv
15.84 195.855 15.652 195.629 15.402 195.449 cv
15.16 195.273 14.867 195.145 14.531 195.059 cv
14.195 194.977 13.824 194.934 13.414 194.93 cv
cp
f
16.813 178.297 mo
16.887 178.32 16.945 178.352 16.988 178.391 cv
17.035 178.434 17.07 178.492 17.09 178.562 cv
17.113 178.641 17.125 178.73 17.141 178.832 cv
17.148 178.941 17.156 179.07 17.156 179.223 cv
17.156 179.387 17.148 179.523 17.141 179.633 cv
17.125 179.746 17.113 179.84 17.09 179.91 cv
17.07 179.988 17.035 180.043 16.988 180.074 cv
16.945 180.113 16.887 180.141 16.813 180.16 cv
9.199 182.273 li
9.199 182.285 li
16.813 184.234 li
16.887 184.254 16.945 184.277 16.988 184.312 cv
17.035 184.352 17.07 184.406 17.09 184.469 cv
17.113 184.539 17.125 184.625 17.141 184.73 cv
17.148 184.84 17.156 184.977 17.156 185.141 cv
17.156 185.312 17.148 185.453 17.141 185.566 cv
17.125 185.684 17.113 185.777 17.09 185.848 cv
17.07 185.922 17.035 185.98 16.988 186.016 cv
16.945 186.059 16.887 186.086 16.813 186.098 cv
7.5 188.762 li
7.383 188.797 7.289 188.812 7.219 188.812 cv
7.152 188.816 7.102 188.797 7.063 188.75 cv
7.027 188.707 7.004 188.637 6.992 188.539 cv
6.984 188.441 6.98 188.309 6.977 188.141 cv
6.98 187.98 6.984 187.852 6.988 187.758 cv
7 187.664 7.012 187.594 7.031 187.543 cv
7.055 187.496 7.086 187.461 7.117 187.441 cv
7.156 187.426 7.203 187.414 7.258 187.398 cv
15.707 185.133 li
15.707 185.125 li
7.273 182.973 li
7.219 182.961 7.172 182.941 7.129 182.914 cv
7.094 182.895 7.063 182.855 7.039 182.801 cv
7.02 182.75 7.004 182.676 6.992 182.578 cv
6.984 182.484 6.98 182.359 6.977 182.203 cv
6.98 182.059 6.984 181.945 6.992 181.855 cv
7.004 181.773 7.02 181.703 7.039 181.648 cv
7.063 181.598 7.094 181.559 7.129 181.535 cv
7.172 181.512 7.219 181.492 7.273 181.477 cv
15.707 179.16 li
15.707 179.148 li
7.266 176.926 li
7.215 176.914 7.172 176.898 7.129 176.879 cv
7.094 176.867 7.063 176.836 7.039 176.781 cv
7.02 176.734 7.004 176.664 6.992 176.57 cv
6.984 176.484 6.98 176.363 6.977 176.207 cv
6.98 176.059 6.984 175.934 6.996 175.84 cv
7.012 175.75 7.039 175.684 7.07 175.641 cv
7.109 175.602 7.16 175.582 7.227 175.582 cv
7.297 175.586 7.391 175.602 7.508 175.625 cv
cp
f
16.922 169.219 mo
16.984 169.223 17.031 169.242 17.063 169.281 cv
17.094 169.324 17.117 169.383 17.133 169.453 cv
17.148 169.531 17.156 169.637 17.156 169.773 cv
17.156 169.91 17.148 170.02 17.133 170.098 cv
17.117 170.184 17.094 170.242 17.063 170.273 cv
17.031 170.312 16.984 170.328 16.922 170.324 cv
16.223 170.324 li
16.551 170.633 16.805 170.977 16.984 171.352 cv
17.168 171.73 17.254 172.129 17.258 172.547 cv
17.254 172.922 17.207 173.254 17.113 173.551 cv
17.016 173.848 16.879 174.102 16.695 174.312 cv
16.516 174.523 16.293 174.687 16.027 174.805 cv
15.766 174.922 15.465 174.98 15.121 174.977 cv
14.73 174.98 14.387 174.902 14.094 174.738 cv
13.805 174.582 13.563 174.348 13.371 174.043 cv
13.18 173.742 13.035 173.375 12.938 172.937 cv
12.844 172.504 12.797 172.012 12.793 171.465 cv
12.793 170.496 li
12.246 170.496 li
11.977 170.5 11.738 170.527 11.531 170.582 cv
11.324 170.641 11.152 170.734 11.012 170.859 cv
10.875 170.992 10.77 171.156 10.699 171.355 cv
10.629 171.562 10.594 171.812 10.594 172.102 cv
10.594 172.422 10.633 172.707 10.707 172.957 cv
10.785 173.215 10.867 173.434 10.957 173.621 cv
11.051 173.809 11.137 173.969 11.207 174.094 cv
11.285 174.227 11.32 174.32 11.32 174.379 cv
11.32 174.422 11.313 174.457 11.289 174.488 cv
11.273 174.52 11.242 174.547 11.195 174.57 cv
11.156 174.594 11.102 174.613 11.035 174.621 cv
10.973 174.637 10.902 174.641 10.82 174.637 cv
10.695 174.641 10.59 174.633 10.512 174.609 cv
10.438 174.594 10.367 174.547 10.297 174.477 cv
10.23 174.406 10.152 174.285 10.063 174.113 cv
9.973 173.941 9.891 173.746 9.813 173.523 cv
9.742 173.301 9.68 173.055 9.625 172.789 cv
9.578 172.523 9.551 172.258 9.551 171.984 cv
9.551 171.484 9.609 171.055 9.723 170.703 cv
9.84 170.352 10.008 170.066 10.227 169.844 cv
10.449 169.629 10.723 169.469 11.047 169.367 cv
11.379 169.27 11.762 169.223 12.191 169.219 cv
cp
13.719 170.496 mo
13.719 171.598 li
13.723 171.953 13.754 172.258 13.809 172.516 cv
13.871 172.777 13.957 172.992 14.074 173.164 cv
14.191 173.336 14.332 173.461 14.496 173.539 cv
14.66 173.621 14.848 173.664 15.059 173.66 cv
15.426 173.664 15.719 173.547 15.93 173.316 cv
16.148 173.086 16.254 172.762 16.254 172.344 cv
16.254 172.008 16.168 171.695 15.996 171.406 cv
15.824 171.117 15.563 170.816 15.207 170.496 cv
cp
f
16.398 163.289 mo
16.555 163.289 16.672 163.301 16.758 163.32 cv
16.848 163.344 16.914 163.375 16.953 163.414 cv
16.996 163.457 17.035 163.52 17.07 163.602 cv
17.105 163.687 17.133 163.781 17.16 163.887 cv
17.18 163.996 17.199 164.109 17.219 164.227 cv
17.23 164.344 17.238 164.465 17.242 164.582 cv
17.238 164.949 17.191 165.262 17.098 165.52 cv
17.004 165.781 16.859 165.992 16.66 166.156 cv
16.469 166.324 16.223 166.445 15.922 166.52 cv
15.625 166.598 15.273 166.637 14.863 166.633 cv
10.766 166.633 li
10.766 167.613 li
10.77 167.691 10.727 167.754 10.641 167.801 cv
10.559 167.848 10.426 167.871 10.234 167.871 cv
10.141 167.871 10.059 167.867 9.988 167.852 cv
9.926 167.844 9.867 167.824 9.82 167.801 cv
9.777 167.781 9.746 167.754 9.727 167.719 cv
9.711 167.687 9.703 167.652 9.699 167.605 cv
9.699 166.633 li
8.031 166.633 li
8 166.637 7.965 166.625 7.93 166.605 cv
7.902 166.59 7.875 166.559 7.848 166.504 cv
7.828 166.457 7.813 166.391 7.797 166.305 cv
7.789 166.227 7.781 166.121 7.781 165.992 cv
7.781 165.863 7.789 165.758 7.797 165.676 cv
7.813 165.594 7.828 165.527 7.848 165.48 cv
7.875 165.434 7.902 165.402 7.93 165.379 cv
7.965 165.363 8 165.352 8.031 165.348 cv
9.699 165.348 li
9.699 163.547 li
9.703 163.508 9.711 163.473 9.727 163.437 cv
9.746 163.41 9.777 163.383 9.82 163.355 cv
9.867 163.336 9.926 163.32 9.988 163.305 cv
10.059 163.297 10.141 163.289 10.234 163.289 cv
10.426 163.289 10.559 163.312 10.641 163.359 cv
10.727 163.406 10.77 163.469 10.766 163.547 cv
10.766 165.348 li
14.68 165.348 li
15.164 165.352 15.527 165.281 15.773 165.133 cv
16.023 164.992 16.148 164.734 16.145 164.363 cv
16.148 164.25 16.137 164.145 16.109 164.047 cv
16.09 163.957 16.066 163.875 16.035 163.797 cv
16.012 163.727 15.984 163.664 15.961 163.609 cv
15.938 163.562 15.926 163.516 15.926 163.469 cv
15.926 163.445 15.934 163.418 15.945 163.395 cv
15.961 163.371 15.984 163.355 16.02 163.34 cv
16.059 163.332 16.109 163.32 16.168 163.305 cv
16.234 163.297 16.313 163.289 16.398 163.289 cv
cp
f
16.398 158.137 mo
16.555 158.137 16.672 158.148 16.758 158.168 cv
16.848 158.191 16.914 158.223 16.953 158.262 cv
16.996 158.305 17.035 158.367 17.07 158.449 cv
17.105 158.535 17.133 158.629 17.16 158.734 cv
17.18 158.844 17.199 158.957 17.219 159.074 cv
17.23 159.191 17.238 159.312 17.242 159.43 cv
17.238 159.797 17.191 160.109 17.098 160.367 cv
17.004 160.629 16.859 160.84 16.66 161.004 cv
16.469 161.172 16.223 161.293 15.922 161.367 cv
15.625 161.445 15.273 161.484 14.863 161.48 cv
10.766 161.48 li
10.766 162.461 li
10.77 162.539 10.727 162.602 10.641 162.648 cv
10.559 162.695 10.426 162.719 10.234 162.719 cv
10.141 162.719 10.059 162.715 9.988 162.699 cv
9.926 162.691 9.867 162.672 9.82 162.648 cv
9.777 162.629 9.746 162.602 9.727 162.566 cv
9.711 162.535 9.703 162.5 9.699 162.453 cv
9.699 161.48 li
8.031 161.48 li
8 161.484 7.965 161.473 7.93 161.453 cv
7.902 161.437 7.875 161.406 7.848 161.352 cv
7.828 161.305 7.813 161.238 7.797 161.152 cv
7.789 161.074 7.781 160.969 7.781 160.84 cv
7.781 160.711 7.789 160.605 7.797 160.523 cv
7.813 160.441 7.828 160.375 7.848 160.328 cv
7.875 160.281 7.902 160.25 7.93 160.227 cv
7.965 160.211 8 160.199 8.031 160.195 cv
9.699 160.195 li
9.699 158.395 li
9.703 158.355 9.711 158.32 9.727 158.285 cv
9.746 158.258 9.777 158.23 9.82 158.203 cv
9.867 158.184 9.926 158.168 9.988 158.152 cv
10.059 158.145 10.141 158.137 10.234 158.137 cv
10.426 158.137 10.559 158.16 10.641 158.207 cv
10.727 158.254 10.77 158.316 10.766 158.395 cv
10.766 160.195 li
14.68 160.195 li
15.164 160.199 15.527 160.129 15.773 159.98 cv
16.023 159.84 16.148 159.582 16.145 159.211 cv
16.148 159.098 16.137 158.992 16.109 158.895 cv
16.09 158.805 16.066 158.723 16.035 158.645 cv
16.012 158.574 15.984 158.512 15.961 158.457 cv
15.938 158.41 15.926 158.363 15.926 158.316 cv
15.926 158.293 15.934 158.266 15.945 158.242 cv
15.961 158.219 15.984 158.203 16.02 158.187 cv
16.059 158.18 16.109 158.168 16.168 158.152 cv
16.234 158.145 16.313 158.137 16.398 158.137 cv
cp
f
15.004 152.004 mo
15.367 152.008 15.688 152.074 15.965 152.203 cv
16.246 152.336 16.48 152.523 16.672 152.766 cv
16.867 153.012 17.012 153.305 17.109 153.641 cv
17.207 153.98 17.254 154.352 17.258 154.754 cv
17.254 155.008 17.234 155.246 17.199 155.469 cv
17.156 155.695 17.109 155.895 17.051 156.074 cv
16.992 156.254 16.93 156.406 16.863 156.531 cv
16.801 156.656 16.742 156.75 16.688 156.805 cv
16.637 156.863 16.566 156.902 16.469 156.926 cv
16.379 156.953 16.25 156.965 16.09 156.965 cv
15.992 156.965 15.91 156.961 15.84 156.949 cv
15.773 156.941 15.719 156.93 15.676 156.91 cv
15.637 156.898 15.605 156.875 15.586 156.848 cv
15.57 156.82 15.563 156.789 15.559 156.75 cv
15.563 156.695 15.598 156.609 15.664 156.496 cv
15.738 156.387 15.816 156.25 15.895 156.082 cv
15.98 155.922 16.055 155.73 16.125 155.504 cv
16.195 155.285 16.23 155.027 16.23 154.73 cv
16.23 154.516 16.207 154.316 16.16 154.137 cv
16.113 153.961 16.047 153.809 15.953 153.68 cv
15.867 153.551 15.75 153.449 15.605 153.379 cv
15.469 153.309 15.301 153.273 15.105 153.273 cv
14.91 153.273 14.746 153.324 14.609 153.426 cv
14.477 153.527 14.355 153.664 14.25 153.828 cv
14.148 153.996 14.059 154.18 13.973 154.387 cv
13.895 154.598 13.809 154.812 13.719 155.031 cv
13.633 155.25 13.531 155.465 13.418 155.676 cv
13.309 155.887 13.176 156.078 13.012 156.242 cv
12.855 156.414 12.66 156.547 12.434 156.645 cv
12.211 156.75 11.945 156.801 11.633 156.797 cv
11.359 156.801 11.094 156.746 10.84 156.637 cv
10.59 156.531 10.371 156.371 10.18 156.156 cv
9.992 155.945 9.84 155.68 9.723 155.359 cv
9.609 155.039 9.551 154.668 9.551 154.238 cv
9.551 154.055 9.566 153.867 9.598 153.68 cv
9.629 153.496 9.668 153.328 9.715 153.172 cv
9.762 153.023 9.813 152.895 9.867 152.785 cv
9.922 152.684 9.973 152.602 10.012 152.543 cv
10.059 152.492 10.094 152.457 10.121 152.434 cv
10.152 152.418 10.188 152.402 10.223 152.395 cv
10.266 152.387 10.313 152.379 10.367 152.371 cv
10.426 152.363 10.496 152.359 10.578 152.359 cv
10.668 152.359 10.746 152.363 10.809 152.371 cv
10.879 152.379 10.93 152.395 10.969 152.41 cv
11.012 152.434 11.043 152.453 11.059 152.477 cv
11.078 152.504 11.086 152.535 11.086 152.562 cv
11.086 152.613 11.059 152.68 11 152.766 cv
10.945 152.855 10.883 152.969 10.816 153.109 cv
10.754 153.25 10.695 153.418 10.633 153.605 cv
10.578 153.797 10.547 154.012 10.547 154.254 cv
10.547 154.477 10.574 154.668 10.621 154.832 cv
10.676 155 10.746 155.137 10.832 155.242 cv
10.926 155.348 11.031 155.43 11.156 155.48 cv
11.281 155.539 11.418 155.566 11.563 155.562 cv
11.766 155.566 11.934 155.516 12.07 155.41 cv
12.211 155.309 12.332 155.172 12.434 155.004 cv
12.539 154.84 12.633 154.648 12.715 154.434 cv
12.801 154.223 12.887 154.008 12.973 153.785 cv
13.063 153.566 13.164 153.348 13.27 153.129 cv
13.379 152.914 13.508 152.723 13.664 152.555 cv
13.82 152.391 14.008 152.258 14.227 152.156 cv
14.445 152.059 14.707 152.008 15.004 152.004 cv
cp
f
12.926 147.559 mo
13.512 147.559 14.094 147.598 14.668 147.668 cv
15.242 147.746 15.809 147.855 16.371 147.996 cv
16.93 148.145 17.48 148.32 18.023 148.531 cv
18.566 148.742 19.102 148.988 19.633 149.266 cv
19.656 149.285 19.68 149.309 19.703 149.336 cv
19.723 149.371 19.742 149.41 19.758 149.457 cv
19.773 149.508 19.781 149.566 19.789 149.633 cv
19.789 149.703 19.793 149.785 19.797 149.875 cv
19.793 150.012 19.785 150.117 19.777 150.191 cv
19.762 150.27 19.742 150.324 19.715 150.355 cv
19.684 150.391 19.648 150.406 19.605 150.402 cv
19.559 150.402 19.504 150.387 19.445 150.359 cv
18.395 149.883 17.324 149.523 16.227 149.277 cv
15.129 149.035 14.02 148.914 12.902 148.91 cv
11.793 148.914 10.688 149.035 9.586 149.277 cv
8.488 149.523 7.418 149.891 6.371 150.375 cv
6.328 150.398 6.285 150.406 6.238 150.398 cv
6.199 150.398 6.164 150.375 6.137 150.328 cv
6.113 150.289 6.094 150.23 6.074 150.156 cv
6.063 150.086 6.055 149.988 6.051 149.867 cv
6.055 149.758 6.059 149.668 6.063 149.594 cv
6.074 149.523 6.086 149.465 6.098 149.418 cv
6.117 149.375 6.133 149.344 6.145 149.32 cv
6.164 149.305 6.18 149.289 6.199 149.273 cv
7.266 148.742 8.363 148.32 9.484 148.016 cv
10.613 147.711 11.758 147.559 12.926 147.559 cv
cp
f
267.102 516.621 mo
267.098 516.727 267.082 516.816 267.047 516.887 cv
267.012 516.965 266.965 517.023 266.91 517.066 cv
266.852 517.117 266.789 517.152 266.723 517.168 cv
266.648 517.191 266.578 517.199 266.516 517.199 cv
266.07 517.199 li
265.93 517.199 265.809 517.187 265.703 517.156 cv
265.598 517.133 265.5 517.078 265.406 517 cv
265.313 516.926 265.219 516.824 265.125 516.691 cv
265.031 516.562 264.93 516.398 264.824 516.195 cv
261.75 510.457 li
261.586 510.164 261.422 509.855 261.262 509.527 cv
261.094 509.207 260.941 508.891 260.805 508.582 cv
260.789 508.582 li
260.797 508.957 260.805 509.34 260.813 509.727 cv
260.816 510.117 260.816 510.504 260.82 510.887 cv
260.82 516.973 li
260.816 517.012 260.805 517.047 260.785 517.078 cv
260.762 517.113 260.727 517.141 260.676 517.156 cv
260.621 517.176 260.551 517.187 260.469 517.203 cv
260.383 517.215 260.277 517.223 260.148 517.223 cv
260.012 517.223 259.902 517.215 259.82 517.203 cv
259.734 517.187 259.668 517.176 259.621 517.156 cv
259.57 517.141 259.535 517.113 259.512 517.078 cv
259.488 517.047 259.477 517.012 259.48 516.973 cv
259.48 507.668 li
259.477 507.461 259.535 507.312 259.656 507.223 cv
259.773 507.137 259.902 507.094 260.043 507.09 cv
260.703 507.09 li
260.855 507.094 260.988 507.105 261.094 507.129 cv
261.195 507.156 261.289 507.199 261.375 507.258 cv
261.457 507.32 261.535 507.402 261.617 507.508 cv
261.691 507.617 261.773 507.754 261.859 507.91 cv
264.227 512.336 li
264.371 512.609 264.512 512.875 264.648 513.129 cv
264.781 513.387 264.91 513.641 265.039 513.887 cv
265.16 514.141 265.285 514.387 265.41 514.625 cv
265.531 514.867 265.652 515.109 265.777 515.352 cv
265.785 515.352 li
265.773 514.945 265.766 514.516 265.766 514.07 cv
265.758 513.625 265.758 513.199 265.762 512.789 cv
265.762 507.316 li
265.758 507.281 265.77 507.246 265.793 507.215 cv
265.816 507.184 265.852 507.156 265.906 507.133 cv
265.953 507.109 266.023 507.094 266.109 507.082 cv
266.195 507.074 266.305 507.07 266.445 507.066 cv
266.563 507.07 266.668 507.074 266.758 507.082 cv
266.844 507.094 266.91 507.109 266.961 507.133 cv
267.008 507.156 267.043 507.184 267.066 507.215 cv
267.086 507.246 267.098 507.281 267.102 507.316 cv
cp
f
275.648 516.98 mo
275.645 517.027 275.637 517.062 275.621 517.086 cv
275.602 517.117 275.566 517.141 275.523 517.16 cv
275.477 517.18 275.418 517.191 275.344 517.207 cv
275.266 517.215 275.172 517.223 275.066 517.223 cv
274.941 517.223 274.844 517.215 274.773 517.207 cv
274.695 517.191 274.637 517.18 274.594 517.16 cv
274.547 517.141 274.516 517.117 274.504 517.086 cv
274.484 517.062 274.477 517.027 274.48 516.98 cv
274.48 516.055 li
274.078 516.5 273.684 516.82 273.297 517.02 cv
272.902 517.223 272.508 517.32 272.113 517.324 cv
271.641 517.32 271.246 517.246 270.93 517.09 cv
270.609 516.937 270.352 516.727 270.156 516.457 cv
269.953 516.191 269.813 515.879 269.73 515.52 cv
269.641 515.164 269.598 514.73 269.602 514.223 cv
269.602 509.969 li
269.598 509.93 269.605 509.895 269.629 509.863 cv
269.645 509.836 269.68 509.812 269.734 509.785 cv
269.781 509.766 269.852 509.75 269.938 509.738 cv
270.02 509.734 270.121 509.73 270.25 509.727 cv
270.371 509.73 270.477 509.734 270.563 509.738 cv
270.645 509.75 270.711 509.766 270.758 509.785 cv
270.805 509.812 270.84 509.836 270.863 509.863 cv
270.883 509.895 270.891 509.93 270.895 509.969 cv
270.895 514.051 li
270.891 514.465 270.922 514.793 270.984 515.039 cv
271.043 515.285 271.133 515.496 271.258 515.668 cv
271.375 515.848 271.531 515.98 271.723 516.074 cv
271.906 516.172 272.125 516.223 272.375 516.219 cv
272.695 516.223 273.016 516.105 273.34 515.875 cv
273.656 515.648 273.996 515.312 274.355 514.867 cv
274.355 509.969 li
274.355 509.93 274.363 509.895 274.383 509.863 cv
274.398 509.836 274.434 509.812 274.488 509.785 cv
274.539 509.766 274.605 509.75 274.688 509.738 cv
274.766 509.734 274.871 509.73 275.004 509.727 cv
275.125 509.73 275.23 509.734 275.316 509.738 cv
275.398 509.75 275.461 509.766 275.508 509.785 cv
275.551 509.812 275.586 509.836 275.613 509.863 cv
275.633 509.895 275.645 509.93 275.648 509.969 cv
cp
f
288.426 516.98 mo
288.422 517.027 288.414 517.062 288.395 517.086 cv
288.371 517.117 288.336 517.141 288.293 517.16 cv
288.242 517.18 288.176 517.191 288.098 517.207 cv
288.012 517.215 287.91 517.223 287.785 517.223 cv
287.652 517.223 287.543 517.215 287.465 517.207 cv
287.379 517.191 287.313 517.18 287.266 517.16 cv
287.211 517.141 287.176 517.117 287.16 517.086 cv
287.137 517.062 287.129 517.027 287.129 516.98 cv
287.129 512.719 li
287.129 512.426 287.102 512.156 287.051 511.91 cv
286.996 511.668 286.914 511.457 286.801 511.277 cv
286.688 511.102 286.543 510.965 286.367 510.871 cv
286.188 510.777 285.977 510.73 285.742 510.73 cv
285.445 510.73 285.148 510.848 284.852 511.074 cv
284.547 511.309 284.219 511.641 283.863 512.078 cv
283.863 516.98 li
283.859 517.027 283.848 517.062 283.832 517.086 cv
283.809 517.117 283.777 517.141 283.73 517.16 cv
283.68 517.18 283.613 517.191 283.531 517.207 cv
283.445 517.215 283.34 517.223 283.219 517.223 cv
283.098 517.223 282.996 517.215 282.91 517.207 cv
282.824 517.191 282.754 517.18 282.707 517.16 cv
282.652 517.141 282.621 517.117 282.605 517.086 cv
282.586 517.062 282.574 517.027 282.578 516.98 cv
282.578 512.719 li
282.574 512.426 282.547 512.156 282.492 511.91 cv
282.434 511.668 282.348 511.457 282.234 511.277 cv
282.121 511.102 281.977 510.965 281.805 510.871 cv
281.625 510.777 281.418 510.73 281.184 510.73 cv
280.883 510.73 280.586 510.848 280.285 511.074 cv
279.984 511.309 279.656 511.641 279.305 512.078 cv
279.305 516.98 li
279.301 517.027 279.289 517.062 279.273 517.086 cv
279.25 517.117 279.219 517.141 279.172 517.16 cv
279.125 517.18 279.059 517.191 278.98 517.207 cv
278.895 517.215 278.789 517.223 278.66 517.223 cv
278.531 517.223 278.426 517.215 278.348 517.207 cv
278.262 517.191 278.195 517.18 278.148 517.16 cv
278.094 517.141 278.063 517.117 278.047 517.086 cv
278.027 517.062 278.016 517.027 278.02 516.98 cv
278.02 509.969 li
278.016 509.93 278.023 509.895 278.043 509.863 cv
278.055 509.836 278.086 509.812 278.137 509.785 cv
278.18 509.766 278.242 509.75 278.316 509.738 cv
278.387 509.734 278.48 509.73 278.605 509.727 cv
278.715 509.73 278.813 509.734 278.891 509.738 cv
278.965 509.75 279.023 509.766 279.066 509.785 cv
279.105 509.812 279.133 509.836 279.152 509.863 cv
279.168 509.895 279.176 509.93 279.18 509.969 cv
279.18 510.895 li
279.57 510.453 279.953 510.133 280.328 509.926 cv
280.695 509.723 281.074 509.617 281.457 509.617 cv
281.746 509.617 282.004 509.652 282.238 509.719 cv
282.465 509.789 282.672 509.883 282.852 510.004 cv
283.027 510.125 283.176 510.27 283.305 510.437 cv
283.426 510.609 283.531 510.801 283.617 511.004 cv
283.848 510.754 284.07 510.539 284.281 510.359 cv
284.492 510.187 284.695 510.043 284.891 509.93 cv
285.086 509.824 285.273 509.746 285.457 509.691 cv
285.641 509.645 285.828 509.617 286.016 509.617 cv
286.469 509.617 286.848 509.699 287.152 509.855 cv
287.457 510.02 287.703 510.23 287.898 510.492 cv
288.086 510.758 288.223 511.066 288.305 511.422 cv
288.383 511.777 288.422 512.152 288.426 512.547 cv
cp
f
297.227 513.379 mo
297.223 513.988 297.156 514.539 297.027 515.023 cv
296.891 515.512 296.695 515.926 296.441 516.266 cv
296.184 516.609 295.867 516.871 295.496 517.051 cv
295.121 517.234 294.695 517.32 294.211 517.324 cv
293.984 517.32 293.777 517.301 293.59 517.258 cv
293.402 517.211 293.215 517.141 293.035 517.043 cv
292.848 516.945 292.668 516.82 292.488 516.668 cv
292.305 516.52 292.113 516.34 291.914 516.125 cv
291.914 516.98 li
291.914 517.027 291.902 517.062 291.883 517.09 cv
291.859 517.125 291.824 517.148 291.781 517.164 cv
291.73 517.18 291.672 517.191 291.605 517.207 cv
291.531 517.215 291.441 517.223 291.336 517.223 cv
291.227 517.223 291.141 517.215 291.07 517.207 cv
290.996 517.191 290.934 517.18 290.891 517.164 cv
290.84 517.148 290.809 517.125 290.797 517.09 cv
290.777 517.062 290.77 517.027 290.773 516.98 cv
290.773 506.57 li
290.77 506.531 290.781 506.496 290.801 506.461 cv
290.816 506.434 290.848 506.406 290.902 506.383 cv
290.949 506.363 291.016 506.348 291.102 506.336 cv
291.18 506.328 291.285 506.324 291.414 506.32 cv
291.543 506.324 291.648 506.328 291.734 506.336 cv
291.813 506.348 291.879 506.363 291.926 506.383 cv
291.973 506.406 292.004 506.434 292.027 506.461 cv
292.043 506.496 292.055 506.531 292.059 506.57 cv
292.059 510.77 li
292.266 510.559 292.469 510.379 292.664 510.234 cv
292.859 510.09 293.047 509.973 293.234 509.879 cv
293.418 509.793 293.605 509.727 293.797 509.68 cv
293.98 509.641 294.18 509.617 294.391 509.617 cv
294.895 509.617 295.328 509.719 295.695 509.922 cv
296.055 510.125 296.348 510.398 296.574 510.734 cv
296.797 511.078 296.965 511.477 297.07 511.934 cv
297.172 512.391 297.223 512.871 297.227 513.379 cv
cp
295.895 513.527 mo
295.891 513.172 295.863 512.824 295.813 512.484 cv
295.754 512.148 295.66 511.852 295.523 511.59 cv
295.387 511.332 295.207 511.121 294.984 510.961 cv
294.758 510.805 294.477 510.727 294.145 510.723 cv
293.977 510.727 293.813 510.75 293.652 510.793 cv
293.488 510.844 293.324 510.922 293.156 511.027 cv
292.988 511.141 292.813 511.281 292.637 511.449 cv
292.453 511.625 292.262 511.84 292.059 512.094 cv
292.059 514.891 li
292.414 515.324 292.754 515.656 293.078 515.879 cv
293.402 516.109 293.738 516.223 294.09 516.219 cv
294.41 516.223 294.688 516.145 294.922 515.984 cv
295.148 515.832 295.336 515.625 295.48 515.363 cv
295.625 515.109 295.73 514.82 295.797 514.5 cv
295.859 514.184 295.891 513.859 295.895 513.527 cv
cp
f
305.137 513.172 mo
305.133 513.375 305.082 513.516 304.984 513.602 cv
304.879 513.687 304.762 513.73 304.637 513.73 cv
300.02 513.73 li
300.016 514.121 300.055 514.473 300.137 514.785 cv
300.211 515.098 300.344 515.367 300.527 515.586 cv
300.707 515.812 300.941 515.984 301.238 516.102 cv
301.527 516.227 301.887 516.285 302.313 516.281 cv
302.645 516.285 302.941 516.258 303.203 516.199 cv
303.465 516.148 303.691 516.086 303.883 516.016 cv
304.07 515.949 304.227 515.891 304.352 515.832 cv
304.473 515.781 304.566 515.754 304.629 515.75 cv
304.664 515.754 304.695 515.762 304.727 515.777 cv
304.754 515.797 304.777 515.824 304.797 515.859 cv
304.809 515.898 304.82 515.949 304.832 516.012 cv
304.836 516.078 304.84 516.156 304.844 516.25 cv
304.84 516.32 304.836 516.379 304.836 516.426 cv
304.828 516.473 304.824 516.516 304.816 516.555 cv
304.809 516.594 304.793 516.629 304.777 516.66 cv
304.754 516.691 304.73 516.723 304.707 516.75 cv
304.676 516.781 304.594 516.828 304.453 516.891 cv
304.313 516.957 304.129 517.02 303.906 517.082 cv
303.68 517.145 303.422 517.199 303.129 517.25 cv
302.836 517.297 302.523 517.32 302.191 517.324 cv
301.613 517.32 301.105 517.242 300.676 517.082 cv
300.238 516.922 299.875 516.684 299.582 516.367 cv
299.281 516.051 299.059 515.656 298.91 515.176 cv
298.762 514.699 298.688 514.141 298.688 513.504 cv
298.688 512.906 298.762 512.367 298.918 511.883 cv
299.07 511.406 299.297 510.996 299.594 510.66 cv
299.887 510.324 300.242 510.066 300.656 509.887 cv
301.07 509.707 301.535 509.617 302.051 509.617 cv
302.602 509.617 303.07 509.707 303.457 509.883 cv
303.844 510.062 304.16 510.301 304.414 510.598 cv
304.66 510.898 304.844 511.25 304.961 511.648 cv
305.074 512.055 305.133 512.484 305.137 512.937 cv
cp
303.844 512.789 mo
303.859 512.113 303.707 511.582 303.391 511.199 cv
303.074 510.816 302.605 510.625 301.988 510.621 cv
301.664 510.625 301.383 510.684 301.145 510.801 cv
300.902 510.922 300.703 511.082 300.543 511.277 cv
300.379 511.477 300.254 511.707 300.168 511.969 cv
300.078 512.23 300.027 512.504 300.02 512.789 cv
cp
f
311.203 510.426 mo
311.199 510.543 311.199 510.641 311.195 510.715 cv
311.188 510.797 311.176 510.859 311.164 510.898 cv
311.145 510.945 311.125 510.977 311.105 511 cv
311.078 511.023 311.047 511.035 311.008 511.035 cv
310.965 511.035 310.914 511.023 310.855 511 cv
310.793 510.977 310.723 510.953 310.652 510.93 cv
310.574 510.906 310.492 510.887 310.398 510.863 cv
310.305 510.848 310.203 510.836 310.094 510.832 cv
309.961 510.836 309.832 510.863 309.711 510.91 cv
309.586 510.965 309.457 511.051 309.32 511.168 cv
309.18 511.293 309.035 511.449 308.887 511.645 cv
308.734 511.84 308.566 512.082 308.387 512.367 cv
308.387 516.98 li
308.383 517.027 308.371 517.062 308.355 517.086 cv
308.332 517.117 308.301 517.141 308.254 517.16 cv
308.207 517.18 308.141 517.191 308.063 517.207 cv
307.977 517.215 307.871 517.223 307.742 517.223 cv
307.613 517.223 307.508 517.215 307.43 517.207 cv
307.344 517.191 307.277 517.18 307.23 517.16 cv
307.176 517.141 307.145 517.117 307.129 517.086 cv
307.109 517.062 307.098 517.027 307.102 516.98 cv
307.102 509.969 li
307.098 509.93 307.105 509.895 307.125 509.863 cv
307.137 509.836 307.168 509.812 307.219 509.785 cv
307.262 509.766 307.324 509.75 307.398 509.738 cv
307.469 509.734 307.563 509.73 307.688 509.727 cv
307.797 509.73 307.895 509.734 307.973 509.738 cv
308.047 509.75 308.105 509.766 308.148 509.785 cv
308.188 509.812 308.215 509.836 308.234 509.863 cv
308.25 509.895 308.258 509.93 308.262 509.969 cv
308.262 510.988 li
308.449 510.707 308.633 510.48 308.805 510.305 cv
308.973 510.129 309.133 509.988 309.285 509.887 cv
309.434 509.785 309.582 509.715 309.73 509.676 cv
309.879 509.637 310.027 509.617 310.18 509.617 cv
310.246 509.617 310.324 509.621 310.41 509.629 cv
310.496 509.637 310.586 509.652 310.68 509.672 cv
310.773 509.695 310.855 509.719 310.934 509.742 cv
311.004 509.77 311.059 509.797 311.094 509.82 cv
311.121 509.852 311.141 509.875 311.156 509.895 cv
311.164 509.922 311.176 509.953 311.184 509.984 cv
311.191 510.023 311.195 510.074 311.199 510.145 cv
311.199 510.215 311.199 510.309 311.203 510.426 cv
cp
f
322.961 513.395 mo
322.957 513.973 322.883 514.5 322.734 514.977 cv
322.582 515.461 322.355 515.875 322.059 516.219 cv
321.758 516.57 321.383 516.84 320.938 517.031 cv
320.484 517.227 319.965 517.32 319.375 517.324 cv
318.797 517.32 318.293 517.238 317.867 517.066 cv
317.438 516.898 317.082 516.648 316.797 516.32 cv
316.508 515.992 316.293 515.598 316.156 515.129 cv
316.016 514.664 315.949 514.133 315.949 513.535 cv
315.949 512.969 316.02 512.441 316.168 511.961 cv
316.313 511.48 316.539 511.066 316.84 510.715 cv
317.137 510.367 317.508 510.098 317.957 509.906 cv
318.402 509.715 318.926 509.617 319.523 509.617 cv
320.102 509.617 320.602 509.703 321.031 509.875 cv
321.457 510.047 321.816 510.297 322.102 510.625 cv
322.387 510.953 322.602 511.352 322.746 511.816 cv
322.887 512.285 322.957 512.812 322.961 513.395 cv
cp
321.629 513.48 mo
321.625 513.105 321.59 512.746 321.523 512.406 cv
321.449 512.07 321.332 511.777 321.172 511.52 cv
321.008 511.27 320.789 511.066 320.512 510.914 cv
320.23 510.77 319.883 510.695 319.473 510.691 cv
319.086 510.695 318.758 510.762 318.484 510.895 cv
318.207 511.031 317.98 511.223 317.805 511.469 cv
317.625 511.715 317.492 512.008 317.41 512.344 cv
317.32 512.684 317.277 513.051 317.281 513.449 cv
317.277 513.836 317.313 514.199 317.387 514.535 cv
317.453 514.875 317.57 515.168 317.738 515.418 cv
317.902 515.672 318.125 515.875 318.402 516.02 cv
318.68 516.172 319.027 516.246 319.441 516.242 cv
319.816 516.246 320.145 516.176 320.426 516.039 cv
320.703 515.906 320.93 515.719 321.109 515.469 cv
321.285 515.227 321.414 514.934 321.5 514.598 cv
321.582 514.262 321.625 513.891 321.629 513.48 cv
cp
f
328.691 507.082 mo
328.688 507.184 328.684 507.262 328.676 507.32 cv
328.664 507.383 328.652 507.434 328.641 507.465 cv
328.625 507.504 328.609 507.527 328.59 507.539 cv
328.566 507.555 328.539 507.562 328.512 507.559 cv
328.473 507.562 328.426 507.551 328.375 507.523 cv
328.316 507.504 328.25 507.477 328.176 507.445 cv
328.094 507.418 328.004 507.391 327.898 507.367 cv
327.789 507.344 327.664 507.332 327.531 507.332 cv
327.336 507.332 327.172 507.363 327.039 507.426 cv
326.898 507.488 326.789 507.586 326.711 507.719 cv
326.625 507.852 326.566 508.023 326.531 508.234 cv
326.492 508.445 326.473 508.703 326.477 509 cv
326.477 509.766 li
328.043 509.766 li
328.082 509.77 328.117 509.777 328.148 509.793 cv
328.176 509.812 328.203 509.844 328.227 509.887 cv
328.25 509.934 328.266 509.992 328.281 510.055 cv
328.289 510.125 328.297 510.207 328.301 510.301 cv
328.297 510.492 328.273 510.625 328.23 510.707 cv
328.18 510.793 328.117 510.836 328.043 510.832 cv
326.477 510.832 li
326.477 516.98 li
326.473 517.027 326.465 517.062 326.445 517.086 cv
326.422 517.117 326.387 517.141 326.34 517.16 cv
326.289 517.18 326.223 517.191 326.141 517.207 cv
326.055 517.215 325.949 517.223 325.832 517.223 cv
325.703 517.223 325.602 517.215 325.52 517.207 cv
325.434 517.191 325.367 517.18 325.32 517.16 cv
325.27 517.141 325.234 517.117 325.215 517.086 cv
325.191 517.062 325.18 517.027 325.184 516.98 cv
325.184 510.832 li
324.195 510.832 li
324.109 510.836 324.047 510.793 324.008 510.707 cv
323.965 510.625 323.941 510.492 323.945 510.301 cv
323.941 510.207 323.949 510.125 323.961 510.055 cv
323.969 509.992 323.984 509.934 324.008 509.887 cv
324.027 509.844 324.051 509.812 324.086 509.793 cv
324.113 509.777 324.152 509.77 324.195 509.766 cv
325.184 509.766 li
325.184 509.039 li
325.18 508.555 325.227 508.137 325.32 507.781 cv
325.41 507.434 325.547 507.145 325.734 506.922 cv
325.918 506.699 326.152 506.535 326.441 506.426 cv
326.723 506.32 327.059 506.266 327.445 506.266 cv
327.621 506.266 327.797 506.285 327.973 506.316 cv
328.141 506.355 328.273 506.391 328.371 506.426 cv
328.461 506.469 328.523 506.504 328.559 506.531 cv
328.586 506.566 328.613 506.605 328.637 506.652 cv
328.656 506.703 328.668 506.766 328.68 506.832 cv
328.684 506.906 328.688 506.988 328.691 507.082 cv
cp
f
338.887 514.348 mo
338.883 514.82 338.797 515.242 338.625 515.609 cv
338.449 515.984 338.207 516.297 337.898 516.551 cv
337.59 516.809 337.227 517 336.809 517.129 cv
336.387 517.258 335.938 517.32 335.457 517.324 cv
335.117 517.32 334.801 517.293 334.516 517.238 cv
334.227 517.18 333.973 517.113 333.746 517.027 cv
333.52 516.949 333.328 516.863 333.176 516.77 cv
333.02 516.684 332.914 516.605 332.855 516.543 cv
332.797 516.48 332.754 516.402 332.727 516.309 cv
332.695 516.215 332.68 516.086 332.684 515.922 cv
332.68 515.809 332.684 515.715 332.699 515.637 cv
332.707 515.562 332.723 515.5 332.746 515.453 cv
332.762 515.406 332.789 515.375 332.824 515.355 cv
332.852 515.34 332.887 515.332 332.93 515.328 cv
333 515.332 333.102 515.375 333.238 515.461 cv
333.367 515.551 333.539 515.648 333.75 515.75 cv
333.957 515.859 334.207 515.957 334.5 516.043 cv
334.793 516.137 335.133 516.18 335.52 516.18 cv
335.809 516.18 336.074 516.141 336.316 516.062 cv
336.555 515.984 336.762 515.875 336.941 515.73 cv
337.113 515.59 337.25 515.414 337.344 515.203 cv
337.438 514.996 337.484 514.762 337.484 514.496 cv
337.484 514.215 337.418 513.969 337.289 513.762 cv
337.156 513.562 336.984 513.387 336.773 513.23 cv
336.559 513.082 336.316 512.941 336.043 512.809 cv
335.77 512.684 335.488 512.551 335.207 512.418 cv
334.918 512.285 334.641 512.141 334.371 511.977 cv
334.102 511.82 333.859 511.629 333.648 511.41 cv
333.43 511.191 333.258 510.937 333.129 510.641 cv
332.992 510.352 332.926 510 332.93 509.586 cv
332.926 509.168 333.004 508.793 333.16 508.461 cv
333.313 508.133 333.523 507.855 333.801 507.629 cv
334.07 507.41 334.395 507.238 334.773 507.121 cv
335.148 507.004 335.559 506.945 335.996 506.945 cv
336.215 506.945 336.438 506.965 336.668 507.004 cv
336.891 507.043 337.102 507.094 337.305 507.156 cv
337.5 507.223 337.68 507.297 337.84 507.375 cv
337.992 507.457 338.094 507.523 338.148 507.57 cv
338.195 507.625 338.23 507.664 338.246 507.687 cv
338.262 507.719 338.273 507.754 338.285 507.797 cv
338.293 507.844 338.301 507.898 338.309 507.957 cv
338.313 508.023 338.316 508.102 338.316 508.199 cv
338.316 508.293 338.313 508.379 338.305 508.449 cv
338.297 508.527 338.285 508.586 338.27 508.633 cv
338.254 508.68 338.23 508.715 338.203 508.738 cv
338.172 508.762 338.141 508.773 338.105 508.773 cv
338.047 508.773 337.957 508.738 337.836 508.668 cv
337.711 508.598 337.559 508.516 337.387 508.422 cv
337.207 508.332 337 508.25 336.762 508.172 cv
336.516 508.098 336.246 508.059 335.949 508.059 cv
335.668 508.059 335.422 508.098 335.215 508.172 cv
335.004 508.25 334.832 508.352 334.699 508.473 cv
334.563 508.598 334.461 508.742 334.395 508.914 cv
334.328 509.086 334.297 509.27 334.297 509.461 cv
334.297 509.746 334.359 509.988 334.488 510.187 cv
334.617 510.391 334.789 510.57 335.008 510.723 cv
335.219 510.883 335.465 511.023 335.742 511.152 cv
336.016 511.285 336.297 511.418 336.586 511.547 cv
336.871 511.68 337.152 511.824 337.426 511.98 cv
337.699 512.141 337.945 512.328 338.164 512.543 cv
338.379 512.762 338.551 513.016 338.688 513.309 cv
338.816 513.602 338.883 513.949 338.887 514.348 cv
cp
f
346.656 516.98 mo
346.652 517.027 346.645 517.062 346.629 517.086 cv
346.609 517.117 346.574 517.141 346.531 517.16 cv
346.484 517.18 346.426 517.191 346.352 517.207 cv
346.273 517.215 346.18 517.223 346.074 517.223 cv
345.949 517.223 345.852 517.215 345.781 517.207 cv
345.703 517.191 345.645 517.18 345.602 517.16 cv
345.555 517.141 345.523 517.117 345.512 517.086 cv
345.492 517.062 345.484 517.027 345.488 516.98 cv
345.488 516.055 li
345.086 516.5 344.691 516.82 344.305 517.02 cv
343.91 517.223 343.516 517.32 343.121 517.324 cv
342.648 517.32 342.254 517.246 341.938 517.09 cv
341.617 516.937 341.359 516.727 341.164 516.457 cv
340.961 516.191 340.82 515.879 340.738 515.52 cv
340.648 515.164 340.605 514.73 340.609 514.223 cv
340.609 509.969 li
340.605 509.93 340.613 509.895 340.637 509.863 cv
340.652 509.836 340.688 509.812 340.742 509.785 cv
340.789 509.766 340.859 509.75 340.945 509.738 cv
341.027 509.734 341.129 509.73 341.258 509.727 cv
341.379 509.73 341.484 509.734 341.57 509.738 cv
341.652 509.75 341.719 509.766 341.766 509.785 cv
341.813 509.812 341.848 509.836 341.871 509.863 cv
341.891 509.895 341.898 509.93 341.902 509.969 cv
341.902 514.051 li
341.898 514.465 341.93 514.793 341.992 515.039 cv
342.051 515.285 342.141 515.496 342.266 515.668 cv
342.383 515.848 342.539 515.98 342.73 516.074 cv
342.914 516.172 343.133 516.223 343.383 516.219 cv
343.703 516.223 344.023 516.105 344.348 515.875 cv
344.664 515.648 345.004 515.312 345.363 514.867 cv
345.363 509.969 li
345.363 509.93 345.371 509.895 345.391 509.863 cv
345.406 509.836 345.441 509.812 345.496 509.785 cv
345.547 509.766 345.613 509.75 345.695 509.738 cv
345.773 509.734 345.879 509.73 346.012 509.727 cv
346.133 509.73 346.238 509.734 346.324 509.738 cv
346.406 509.75 346.469 509.766 346.516 509.785 cv
346.559 509.812 346.594 509.836 346.621 509.863 cv
346.641 509.895 346.652 509.93 346.656 509.969 cv
cp
f
355.512 513.379 mo
355.508 513.988 355.441 514.539 355.313 515.023 cv
355.176 515.512 354.98 515.926 354.727 516.266 cv
354.469 516.609 354.152 516.871 353.781 517.051 cv
353.406 517.234 352.98 517.32 352.496 517.324 cv
352.27 517.32 352.063 517.301 351.875 517.258 cv
351.688 517.211 351.5 517.141 351.32 517.043 cv
351.133 516.945 350.953 516.82 350.773 516.668 cv
350.59 516.52 350.398 516.34 350.199 516.125 cv
350.199 516.98 li
350.199 517.027 350.188 517.062 350.168 517.09 cv
350.145 517.125 350.109 517.148 350.066 517.164 cv
350.016 517.18 349.957 517.191 349.891 517.207 cv
349.816 517.215 349.727 517.223 349.621 517.223 cv
349.512 517.223 349.426 517.215 349.355 517.207 cv
349.281 517.191 349.219 517.18 349.176 517.164 cv
349.125 517.148 349.094 517.125 349.082 517.09 cv
349.063 517.062 349.055 517.027 349.059 516.98 cv
349.059 506.57 li
349.055 506.531 349.066 506.496 349.086 506.461 cv
349.102 506.434 349.133 506.406 349.188 506.383 cv
349.234 506.363 349.301 506.348 349.387 506.336 cv
349.465 506.328 349.57 506.324 349.699 506.32 cv
349.828 506.324 349.934 506.328 350.02 506.336 cv
350.098 506.348 350.164 506.363 350.211 506.383 cv
350.258 506.406 350.289 506.434 350.313 506.461 cv
350.328 506.496 350.34 506.531 350.344 506.57 cv
350.344 510.77 li
350.551 510.559 350.754 510.379 350.949 510.234 cv
351.145 510.09 351.332 509.973 351.52 509.879 cv
351.703 509.793 351.891 509.727 352.082 509.68 cv
352.266 509.641 352.465 509.617 352.676 509.617 cv
353.18 509.617 353.613 509.719 353.98 509.922 cv
354.34 510.125 354.633 510.398 354.859 510.734 cv
355.082 511.078 355.25 511.477 355.355 511.934 cv
355.457 512.391 355.508 512.871 355.512 513.379 cv
cp
354.18 513.527 mo
354.176 513.172 354.148 512.824 354.098 512.484 cv
354.039 512.148 353.945 511.852 353.809 511.59 cv
353.672 511.332 353.492 511.121 353.27 510.961 cv
353.043 510.805 352.762 510.727 352.43 510.723 cv
352.262 510.727 352.098 510.75 351.938 510.793 cv
351.773 510.844 351.609 510.922 351.441 511.027 cv
351.273 511.141 351.098 511.281 350.922 511.449 cv
350.738 511.625 350.547 511.84 350.344 512.094 cv
350.344 514.891 li
350.699 515.324 351.039 515.656 351.363 515.879 cv
351.688 516.109 352.023 516.223 352.375 516.219 cv
352.695 516.223 352.973 516.145 353.207 515.984 cv
353.434 515.832 353.621 515.625 353.766 515.363 cv
353.91 515.109 354.016 514.82 354.082 514.5 cv
354.145 514.184 354.176 513.859 354.18 513.527 cv
cp
f
360.676 513.242 mo
360.676 513.445 360.652 513.582 360.605 513.66 cv
360.559 513.738 360.488 513.777 360.402 513.777 cv
357.145 513.777 li
357.051 513.777 356.984 513.738 356.938 513.656 cv
356.891 513.578 356.867 513.441 356.867 513.242 cv
356.867 513.047 356.891 512.906 356.938 512.828 cv
356.984 512.75 357.051 512.711 357.145 512.711 cv
360.402 512.711 li
360.441 512.711 360.48 512.719 360.516 512.734 cv
360.547 512.75 360.574 512.781 360.602 512.824 cv
360.621 512.871 360.641 512.926 360.656 512.992 cv
360.668 513.062 360.676 513.148 360.676 513.242 cv
cp
f
363.93 516.973 mo
363.926 517.016 363.918 517.051 363.898 517.082 cv
363.875 517.113 363.836 517.141 363.789 517.156 cv
363.734 517.176 363.668 517.187 363.582 517.203 cv
363.496 517.215 363.387 517.223 363.262 517.223 cv
363.133 517.223 363.027 517.215 362.941 517.203 cv
362.852 517.187 362.781 517.176 362.73 517.156 cv
362.676 517.141 362.641 517.113 362.621 517.082 cv
362.598 517.051 362.586 517.016 362.59 516.973 cv
362.59 507.293 li
362.586 507.254 362.598 507.219 362.625 507.184 cv
362.645 507.156 362.684 507.129 362.742 507.109 cv
362.793 507.094 362.863 507.078 362.953 507.062 cv
363.035 507.051 363.137 507.047 363.262 507.043 cv
363.387 507.047 363.496 507.051 363.582 507.062 cv
363.668 507.078 363.734 507.094 363.789 507.109 cv
363.836 507.129 363.875 507.156 363.898 507.184 cv
363.918 507.219 363.926 507.254 363.93 507.293 cv
cp
f
376.918 516.98 mo
376.914 517.027 376.906 517.062 376.887 517.086 cv
376.863 517.117 376.828 517.141 376.785 517.16 cv
376.734 517.18 376.668 517.191 376.59 517.207 cv
376.504 517.215 376.402 517.223 376.277 517.223 cv
376.145 517.223 376.035 517.215 375.957 517.207 cv
375.871 517.191 375.805 517.18 375.758 517.16 cv
375.703 517.141 375.668 517.117 375.652 517.086 cv
375.629 517.062 375.621 517.027 375.621 516.98 cv
375.621 512.719 li
375.621 512.426 375.594 512.156 375.543 511.91 cv
375.488 511.668 375.406 511.457 375.293 511.277 cv
375.18 511.102 375.035 510.965 374.859 510.871 cv
374.68 510.777 374.469 510.73 374.234 510.73 cv
373.938 510.73 373.641 510.848 373.344 511.074 cv
373.039 511.309 372.711 511.641 372.355 512.078 cv
372.355 516.98 li
372.352 517.027 372.34 517.062 372.324 517.086 cv
372.301 517.117 372.27 517.141 372.223 517.16 cv
372.172 517.18 372.105 517.191 372.023 517.207 cv
371.938 517.215 371.832 517.223 371.711 517.223 cv
371.59 517.223 371.488 517.215 371.402 517.207 cv
371.316 517.191 371.246 517.18 371.199 517.16 cv
371.145 517.141 371.113 517.117 371.098 517.086 cv
371.078 517.062 371.066 517.027 371.07 516.98 cv
371.07 512.719 li
371.066 512.426 371.039 512.156 370.984 511.91 cv
370.926 511.668 370.84 511.457 370.727 511.277 cv
370.613 511.102 370.469 510.965 370.297 510.871 cv
370.117 510.777 369.91 510.73 369.676 510.73 cv
369.375 510.73 369.078 510.848 368.777 511.074 cv
368.477 511.309 368.148 511.641 367.797 512.078 cv
367.797 516.98 li
367.793 517.027 367.781 517.062 367.766 517.086 cv
367.742 517.117 367.711 517.141 367.664 517.16 cv
367.617 517.18 367.551 517.191 367.473 517.207 cv
367.387 517.215 367.281 517.223 367.152 517.223 cv
367.023 517.223 366.918 517.215 366.84 517.207 cv
366.754 517.191 366.688 517.18 366.641 517.16 cv
366.586 517.141 366.555 517.117 366.539 517.086 cv
366.52 517.062 366.508 517.027 366.512 516.98 cv
366.512 509.969 li
366.508 509.93 366.516 509.895 366.535 509.863 cv
366.547 509.836 366.578 509.812 366.629 509.785 cv
366.672 509.766 366.734 509.75 366.809 509.738 cv
366.879 509.734 366.973 509.73 367.098 509.727 cv
367.207 509.73 367.305 509.734 367.383 509.738 cv
367.457 509.75 367.516 509.766 367.559 509.785 cv
367.598 509.812 367.625 509.836 367.645 509.863 cv
367.66 509.895 367.668 509.93 367.672 509.969 cv
367.672 510.895 li
368.063 510.453 368.445 510.133 368.82 509.926 cv
369.188 509.723 369.566 509.617 369.949 509.617 cv
370.238 509.617 370.496 509.652 370.73 509.719 cv
370.957 509.789 371.164 509.883 371.344 510.004 cv
371.52 510.125 371.668 510.27 371.797 510.437 cv
371.918 510.609 372.023 510.801 372.109 511.004 cv
372.34 510.754 372.563 510.539 372.773 510.359 cv
372.984 510.187 373.188 510.043 373.383 509.93 cv
373.578 509.824 373.766 509.746 373.949 509.691 cv
374.133 509.645 374.32 509.617 374.508 509.617 cv
374.961 509.617 375.34 509.699 375.645 509.855 cv
375.949 510.02 376.195 510.23 376.391 510.492 cv
376.578 510.758 376.715 511.066 376.797 511.422 cv
376.875 511.777 376.914 512.152 376.918 512.547 cv
cp
f
384.547 516.988 mo
384.543 517.051 384.523 517.098 384.484 517.129 cv
384.441 517.16 384.383 517.184 384.313 517.199 cv
384.234 517.215 384.129 517.223 383.992 517.223 cv
383.855 517.223 383.746 517.215 383.668 517.199 cv
383.582 517.184 383.523 517.16 383.492 517.129 cv
383.453 517.098 383.438 517.051 383.441 516.988 cv
383.441 516.289 li
383.133 516.617 382.789 516.871 382.414 517.051 cv
382.035 517.234 381.637 517.32 381.219 517.324 cv
380.844 517.32 380.512 517.273 380.215 517.18 cv
379.918 517.082 379.664 516.945 379.453 516.762 cv
379.242 516.582 379.078 516.359 378.961 516.094 cv
378.844 515.832 378.785 515.531 378.789 515.187 cv
378.785 514.797 378.863 514.453 379.027 514.16 cv
379.184 513.871 379.418 513.629 379.723 513.437 cv
380.023 513.246 380.391 513.102 380.828 513.004 cv
381.262 512.91 381.754 512.863 382.301 512.859 cv
383.27 512.859 li
383.27 512.312 li
383.266 512.043 383.238 511.805 383.184 511.598 cv
383.125 511.391 383.031 511.219 382.906 511.078 cv
382.773 510.941 382.609 510.836 382.41 510.766 cv
382.203 510.695 381.953 510.66 381.664 510.66 cv
381.344 510.66 381.059 510.699 380.809 510.773 cv
380.551 510.852 380.332 510.934 380.145 511.023 cv
379.957 511.117 379.797 511.203 379.672 511.273 cv
379.539 511.352 379.445 511.387 379.387 511.387 cv
379.344 511.387 379.309 511.379 379.277 511.355 cv
379.246 511.34 379.219 511.309 379.195 511.262 cv
379.172 511.223 379.152 511.168 379.145 511.102 cv
379.129 511.039 379.125 510.969 379.129 510.887 cv
379.125 510.762 379.133 510.656 379.156 510.578 cv
379.172 510.504 379.219 510.434 379.289 510.363 cv
379.359 510.297 379.48 510.219 379.652 510.129 cv
379.824 510.039 380.02 509.957 380.242 509.879 cv
380.465 509.809 380.711 509.746 380.977 509.691 cv
381.242 509.645 381.508 509.617 381.781 509.617 cv
382.281 509.617 382.711 509.676 383.063 509.789 cv
383.414 509.906 383.699 510.074 383.922 510.293 cv
384.137 510.516 384.297 510.789 384.398 511.113 cv
384.496 511.445 384.543 511.828 384.547 512.258 cv
cp
383.27 513.785 mo
382.168 513.785 li
381.813 513.789 381.508 513.82 381.25 513.875 cv
380.988 513.937 380.773 514.023 380.602 514.141 cv
380.43 514.258 380.305 514.398 380.227 514.562 cv
380.145 514.727 380.102 514.914 380.105 515.125 cv
380.102 515.492 380.219 515.785 380.449 515.996 cv
380.68 516.215 381.004 516.32 381.422 516.32 cv
381.758 516.32 382.07 516.234 382.359 516.062 cv
382.648 515.891 382.949 515.629 383.27 515.273 cv
cp
f
392.766 510.285 mo
392.762 510.469 392.738 510.602 392.691 510.68 cv
392.641 510.762 392.578 510.801 392.504 510.801 cv
391.496 510.801 li
391.676 510.988 391.805 511.195 391.879 511.422 cv
391.949 511.648 391.984 511.883 391.988 512.125 cv
391.984 512.531 391.918 512.891 391.793 513.203 cv
391.66 513.516 391.477 513.781 391.234 513.992 cv
390.992 514.211 390.703 514.375 390.375 514.488 cv
390.039 514.605 389.672 514.664 389.27 514.66 cv
388.98 514.664 388.707 514.625 388.453 514.547 cv
388.191 514.473 387.996 514.379 387.859 514.262 cv
387.766 514.359 387.688 514.465 387.629 514.582 cv
387.566 514.703 387.535 514.84 387.539 514.992 cv
387.535 515.176 387.621 515.328 387.793 515.445 cv
387.961 515.57 388.184 515.633 388.465 515.641 cv
390.297 515.719 li
390.645 515.73 390.961 515.777 391.254 515.863 cv
391.543 515.949 391.797 516.074 392.012 516.23 cv
392.223 516.391 392.391 516.582 392.512 516.812 cv
392.629 517.047 392.688 517.316 392.691 517.621 cv
392.688 517.941 392.621 518.246 392.488 518.539 cv
392.352 518.828 392.145 519.082 391.867 519.305 cv
391.586 519.523 391.23 519.699 390.801 519.828 cv
390.371 519.953 389.863 520.016 389.277 520.02 cv
388.707 520.016 388.223 519.969 387.828 519.875 cv
387.43 519.777 387.105 519.645 386.852 519.48 cv
386.598 519.312 386.414 519.117 386.301 518.887 cv
386.184 518.652 386.125 518.398 386.129 518.133 cv
386.125 517.961 386.145 517.797 386.191 517.637 cv
386.23 517.473 386.293 517.32 386.379 517.176 cv
386.461 517.031 386.57 516.895 386.699 516.758 cv
386.824 516.629 386.969 516.496 387.141 516.367 cv
386.883 516.238 386.695 516.074 386.574 515.875 cv
386.453 515.68 386.395 515.469 386.395 515.234 cv
386.395 514.922 386.457 514.637 386.586 514.387 cv
386.715 514.137 386.875 513.914 387.07 513.715 cv
386.906 513.523 386.781 513.309 386.688 513.066 cv
386.594 512.828 386.547 512.535 386.547 512.187 cv
386.547 511.793 386.613 511.434 386.75 511.113 cv
386.883 510.797 387.07 510.531 387.313 510.312 cv
387.551 510.098 387.836 509.93 388.172 509.809 cv
388.504 509.695 388.871 509.637 389.27 509.633 cv
389.48 509.637 389.68 509.648 389.863 509.668 cv
390.047 509.695 390.219 509.727 390.383 509.766 cv
392.504 509.766 li
392.59 509.77 392.656 509.812 392.699 509.895 cv
392.742 509.984 392.762 510.113 392.766 510.285 cv
cp
390.758 512.133 mo
390.754 511.66 390.621 511.289 390.363 511.016 cv
390.098 510.75 389.727 510.613 389.246 510.613 cv
388.992 510.613 388.773 510.656 388.594 510.738 cv
388.406 510.824 388.254 510.937 388.133 511.082 cv
388.012 511.23 387.922 511.398 387.863 511.586 cv
387.801 511.773 387.77 511.973 387.773 512.18 cv
387.77 512.645 387.902 513.008 388.164 513.273 cv
388.426 513.539 388.793 513.672 389.27 513.668 cv
389.52 513.672 389.738 513.633 389.93 513.547 cv
390.113 513.469 390.27 513.355 390.395 513.215 cv
390.516 513.074 390.605 512.91 390.668 512.719 cv
390.723 512.535 390.754 512.34 390.758 512.133 cv
cp
391.402 517.691 mo
391.398 517.387 391.273 517.156 391.031 516.992 cv
390.781 516.832 390.449 516.742 390.031 516.73 cv
388.215 516.668 li
388.047 516.801 387.91 516.926 387.809 517.039 cv
387.699 517.156 387.617 517.266 387.555 517.375 cv
387.492 517.48 387.449 517.586 387.426 517.691 cv
387.402 517.793 387.391 517.898 387.391 518.008 cv
387.391 518.344 387.559 518.598 387.902 518.777 cv
388.242 518.949 388.723 519.039 389.34 519.039 cv
389.727 519.039 390.051 519 390.316 518.926 cv
390.574 518.848 390.785 518.746 390.949 518.625 cv
391.105 518.496 391.223 518.355 391.297 518.195 cv
391.363 518.035 391.398 517.867 391.402 517.691 cv
cp
f
400.328 513.172 mo
400.324 513.375 400.273 513.516 400.176 513.602 cv
400.07 513.687 399.953 513.73 399.828 513.73 cv
395.211 513.73 li
395.207 514.121 395.246 514.473 395.328 514.785 cv
395.402 515.098 395.535 515.367 395.719 515.586 cv
395.898 515.812 396.133 515.984 396.43 516.102 cv
396.719 516.227 397.078 516.285 397.504 516.281 cv
397.836 516.285 398.133 516.258 398.395 516.199 cv
398.656 516.148 398.883 516.086 399.074 516.016 cv
399.262 515.949 399.418 515.891 399.543 515.832 cv
399.664 515.781 399.758 515.754 399.82 515.75 cv
399.855 515.754 399.887 515.762 399.918 515.777 cv
399.945 515.797 399.969 515.824 399.988 515.859 cv
400 515.898 400.012 515.949 400.023 516.012 cv
400.027 516.078 400.031 516.156 400.035 516.25 cv
400.031 516.32 400.027 516.379 400.027 516.426 cv
400.02 516.473 400.016 516.516 400.008 516.555 cv
400 516.594 399.984 516.629 399.969 516.66 cv
399.945 516.691 399.922 516.723 399.898 516.75 cv
399.867 516.781 399.785 516.828 399.645 516.891 cv
399.504 516.957 399.32 517.02 399.098 517.082 cv
398.871 517.145 398.613 517.199 398.32 517.25 cv
398.027 517.297 397.715 517.32 397.383 517.324 cv
396.805 517.32 396.297 517.242 395.867 517.082 cv
395.43 516.922 395.066 516.684 394.773 516.367 cv
394.473 516.051 394.25 515.656 394.102 515.176 cv
393.953 514.699 393.879 514.141 393.879 513.504 cv
393.879 512.906 393.953 512.367 394.109 511.883 cv
394.262 511.406 394.488 510.996 394.785 510.66 cv
395.078 510.324 395.434 510.066 395.848 509.887 cv
396.262 509.707 396.727 509.617 397.242 509.617 cv
397.793 509.617 398.262 509.707 398.648 509.883 cv
399.035 510.062 399.352 510.301 399.605 510.598 cv
399.852 510.898 400.035 511.25 400.152 511.648 cv
400.266 512.055 400.324 512.484 400.328 512.937 cv
cp
399.035 512.789 mo
399.051 512.113 398.898 511.582 398.582 511.199 cv
398.266 510.816 397.797 510.625 397.18 510.621 cv
396.855 510.625 396.574 510.684 396.336 510.801 cv
396.094 510.922 395.895 511.082 395.734 511.277 cv
395.57 511.477 395.445 511.707 395.359 511.969 cv
395.27 512.23 395.219 512.504 395.211 512.789 cv
cp
f
406.695 515.07 mo
406.691 515.434 406.625 515.754 406.496 516.031 cv
406.363 516.312 406.176 516.547 405.934 516.738 cv
405.688 516.934 405.395 517.078 405.059 517.176 cv
404.719 517.273 404.348 517.32 403.945 517.324 cv
403.691 517.32 403.453 517.301 403.23 517.266 cv
403.004 517.223 402.805 517.176 402.625 517.117 cv
402.445 517.059 402.293 516.996 402.168 516.93 cv
402.043 516.867 401.949 516.809 401.895 516.754 cv
401.836 516.703 401.797 516.633 401.773 516.535 cv
401.746 516.445 401.734 516.316 401.734 516.156 cv
401.734 516.059 401.738 515.977 401.75 515.906 cv
401.758 515.84 401.77 515.785 401.789 515.742 cv
401.801 515.703 401.824 515.672 401.852 515.652 cv
401.879 515.637 401.91 515.629 401.949 515.625 cv
402.004 515.629 402.09 515.664 402.203 515.73 cv
402.313 515.805 402.449 515.883 402.617 515.961 cv
402.777 516.047 402.969 516.121 403.195 516.191 cv
403.414 516.262 403.672 516.297 403.969 516.297 cv
404.184 516.297 404.383 516.273 404.563 516.227 cv
404.738 516.18 404.891 516.113 405.02 516.02 cv
405.148 515.934 405.25 515.816 405.32 515.672 cv
405.391 515.535 405.426 515.367 405.426 515.172 cv
405.426 514.977 405.375 514.812 405.273 514.676 cv
405.172 514.543 405.035 514.422 404.871 514.316 cv
404.703 514.215 404.52 514.125 404.313 514.039 cv
404.102 513.961 403.887 513.875 403.668 513.785 cv
403.449 513.699 403.234 513.598 403.023 513.484 cv
402.813 513.375 402.621 513.242 402.457 513.078 cv
402.285 512.922 402.152 512.727 402.055 512.5 cv
401.949 512.277 401.898 512.012 401.902 511.699 cv
401.898 511.426 401.953 511.16 402.063 510.906 cv
402.168 510.656 402.328 510.437 402.543 510.246 cv
402.754 510.059 403.02 509.906 403.34 509.789 cv
403.66 509.676 404.031 509.617 404.461 509.617 cv
404.645 509.617 404.832 509.633 405.02 509.664 cv
405.203 509.695 405.371 509.734 405.527 509.781 cv
405.676 509.828 405.805 509.879 405.914 509.934 cv
406.016 509.988 406.098 510.039 406.156 510.078 cv
406.207 510.125 406.242 510.16 406.266 510.187 cv
406.281 510.219 406.297 510.254 406.305 510.289 cv
406.313 510.332 406.32 510.379 406.328 510.434 cv
406.336 510.492 406.34 510.562 406.34 510.645 cv
406.34 510.734 406.336 510.812 406.328 510.875 cv
406.32 510.945 406.305 510.996 406.289 511.035 cv
406.266 511.078 406.246 511.109 406.223 511.125 cv
406.195 511.145 406.164 511.152 406.137 511.152 cv
406.086 511.152 406.02 511.125 405.934 511.066 cv
405.844 511.012 405.73 510.949 405.59 510.883 cv
405.449 510.82 405.281 510.762 405.094 510.699 cv
404.902 510.645 404.688 510.613 404.445 510.613 cv
404.223 510.613 404.031 510.641 403.867 510.687 cv
403.699 510.742 403.563 510.812 403.457 510.898 cv
403.352 510.992 403.27 511.098 403.219 511.223 cv
403.16 511.348 403.133 511.484 403.137 511.629 cv
403.133 511.832 403.184 512 403.289 512.137 cv
403.391 512.277 403.527 512.398 403.695 512.5 cv
403.859 512.605 404.051 512.699 404.266 512.781 cv
404.477 512.867 404.691 512.953 404.914 513.039 cv
405.133 513.129 405.352 513.23 405.57 513.336 cv
405.785 513.445 405.977 513.574 406.145 513.73 cv
406.309 513.887 406.441 514.074 406.543 514.293 cv
406.641 514.512 406.691 514.773 406.695 515.07 cv
cp
f
154.004 15.898 mo
154 16.051 153.996 16.176 153.984 16.273 cv
153.969 16.379 153.949 16.461 153.926 16.52 cv
153.902 16.586 153.871 16.633 153.832 16.656 cv
153.793 16.687 153.75 16.699 153.703 16.699 cv
148.637 16.699 li
148.461 16.699 148.316 16.648 148.203 16.547 cv
148.082 16.445 148.023 16.281 148.027 16.051 cv
148.027 7.26202 li
148.023 7.03497 148.082 6.87097 148.203 6.76599 cv
148.316 6.66803 148.461 6.617 148.637 6.61298 cv
153.672 6.61298 li
153.715 6.617 153.758 6.62903 153.797 6.65198 cv
153.832 6.67999 153.863 6.72699 153.891 6.789 cv
153.914 6.85901 153.93 6.94098 153.945 7.039 cv
153.953 7.14502 153.961 7.27301 153.965 7.42603 cv
153.961 7.57397 153.953 7.69897 153.945 7.797 cv
153.93 7.90198 153.914 7.98401 153.891 8.04303 cv
153.863 8.10498 153.832 8.14801 153.797 8.17603 cv
153.758 8.20697 153.715 8.22302 153.672 8.21899 cv
150.07 8.21899 li
150.07 10.684 li
153.117 10.684 li
153.164 10.687 153.207 10.703 153.246 10.727 cv
153.285 10.758 153.316 10.801 153.344 10.859 cv
153.367 10.922 153.387 11.004 153.402 11.102 cv
153.414 11.203 153.422 11.324 153.422 11.469 cv
153.422 11.621 153.414 11.746 153.402 11.844 cv
153.387 11.945 153.367 12.023 153.344 12.082 cv
153.316 12.145 153.285 12.187 153.246 12.211 cv
153.207 12.238 153.164 12.254 153.117 12.25 cv
150.07 12.25 li
150.07 15.094 li
153.703 15.094 li
153.75 15.094 153.793 15.109 153.832 15.137 cv
153.871 15.168 153.902 15.215 153.926 15.273 cv
153.949 15.34 153.969 15.422 153.984 15.52 cv
153.996 15.625 154 15.75 154.004 15.898 cv
cp
f
162.34 16.434 mo
162.336 16.488 162.32 16.531 162.293 16.57 cv
162.258 16.609 162.207 16.645 162.137 16.668 cv
162.063 16.695 161.961 16.711 161.836 16.727 cv
161.707 16.738 161.551 16.746 161.367 16.746 cv
161.172 16.746 161.012 16.738 160.887 16.727 cv
160.758 16.711 160.656 16.695 160.586 16.668 cv
160.508 16.645 160.457 16.609 160.43 16.57 cv
160.395 16.531 160.379 16.488 160.383 16.434 cv
160.383 12.469 li
160.379 12.133 160.355 11.867 160.309 11.672 cv
160.258 11.48 160.184 11.316 160.094 11.18 cv
160 11.043 159.883 10.937 159.734 10.859 cv
159.586 10.785 159.41 10.746 159.215 10.746 cv
158.961 10.746 158.711 10.84 158.457 11.02 cv
158.203 11.203 157.938 11.465 157.664 11.812 cv
157.664 16.434 li
157.66 16.488 157.645 16.531 157.617 16.57 cv
157.582 16.609 157.527 16.645 157.457 16.668 cv
157.379 16.695 157.281 16.711 157.156 16.727 cv
157.031 16.738 156.871 16.746 156.684 16.746 cv
156.488 16.746 156.332 16.738 156.207 16.727 cv
156.082 16.711 155.98 16.695 155.906 16.668 cv
155.828 16.645 155.773 16.609 155.746 16.57 cv
155.711 16.531 155.695 16.488 155.699 16.434 cv
155.699 9.48401 li
155.695 9.43701 155.711 9.39099 155.738 9.34802 cv
155.762 9.31201 155.809 9.28101 155.879 9.25 cv
155.945 9.22699 156.031 9.20697 156.141 9.19098 cv
156.246 9.18402 156.379 9.17603 156.543 9.172 cv
156.707 9.17603 156.844 9.18402 156.953 9.19098 cv
157.059 9.20697 157.145 9.22699 157.207 9.25 cv
157.266 9.28101 157.309 9.31201 157.336 9.34802 cv
157.359 9.39099 157.371 9.43701 157.375 9.48401 cv
157.375 10.285 li
157.758 9.875 158.148 9.56201 158.547 9.35199 cv
158.941 9.14502 159.359 9.04303 159.793 9.039 cv
160.262 9.04303 160.66 9.12097 160.988 9.27301 cv
161.313 9.43402 161.574 9.64502 161.773 9.90997 cv
161.973 10.18 162.117 10.492 162.207 10.848 cv
162.293 11.207 162.336 11.637 162.34 12.141 cv
cp
f
170.691 12.758 mo
170.688 12.996 170.637 13.172 170.531 13.285 cv
170.422 13.402 170.273 13.461 170.094 13.457 cv
165.859 13.457 li
165.855 13.758 165.891 14.027 165.965 14.266 cv
166.031 14.508 166.145 14.711 166.301 14.879 cv
166.453 15.051 166.648 15.18 166.891 15.266 cv
167.129 15.355 167.418 15.398 167.762 15.398 cv
168.102 15.398 168.402 15.375 168.664 15.324 cv
168.922 15.277 169.148 15.223 169.34 15.16 cv
169.527 15.102 169.684 15.047 169.813 14.996 cv
169.934 14.949 170.035 14.926 170.117 14.922 cv
170.16 14.926 170.199 14.934 170.234 14.949 cv
170.262 14.969 170.289 15 170.309 15.047 cv
170.328 15.094 170.34 15.16 170.352 15.246 cv
170.355 15.332 170.359 15.441 170.363 15.57 cv
170.359 15.687 170.359 15.785 170.355 15.863 cv
170.348 15.945 170.34 16.012 170.332 16.066 cv
170.32 16.125 170.305 16.176 170.285 16.211 cv
170.266 16.254 170.238 16.289 170.207 16.324 cv
170.172 16.363 170.078 16.414 169.93 16.473 cv
169.773 16.539 169.582 16.602 169.352 16.656 cv
169.113 16.719 168.844 16.766 168.547 16.812 cv
168.242 16.852 167.922 16.875 167.582 16.879 cv
166.961 16.875 166.418 16.801 165.957 16.645 cv
165.488 16.492 165.102 16.254 164.793 15.937 cv
164.477 15.621 164.242 15.223 164.094 14.738 cv
163.938 14.258 163.863 13.691 163.867 13.035 cv
163.863 12.422 163.941 11.863 164.105 11.367 cv
164.262 10.871 164.496 10.453 164.809 10.105 cv
165.113 9.76202 165.488 9.49597 165.926 9.31201 cv
166.363 9.133 166.855 9.04303 167.41 9.039 cv
167.988 9.04303 168.488 9.12903 168.902 9.297 cv
169.316 9.47302 169.652 9.711 169.918 10.012 cv
170.18 10.316 170.375 10.676 170.504 11.09 cv
170.625 11.508 170.688 11.957 170.691 12.445 cv
cp
168.789 12.195 mo
168.801 11.645 168.691 11.211 168.457 10.898 cv
168.223 10.586 167.855 10.43 167.363 10.426 cv
167.113 10.43 166.898 10.477 166.715 10.566 cv
166.527 10.664 166.375 10.789 166.254 10.945 cv
166.129 11.105 166.035 11.293 165.973 11.508 cv
165.906 11.723 165.867 11.953 165.859 12.195 cv
cp
f
176.766 10.129 mo
176.766 10.32 176.758 10.473 176.75 10.59 cv
176.734 10.711 176.719 10.805 176.703 10.871 cv
176.68 10.941 176.652 10.988 176.621 11.012 cv
176.582 11.039 176.539 11.051 176.492 11.051 cv
176.445 11.051 176.398 11.043 176.352 11.023 cv
176.297 11.008 176.238 10.988 176.176 10.965 cv
176.105 10.945 176.035 10.926 175.961 10.906 cv
175.879 10.891 175.793 10.883 175.703 10.879 cv
175.59 10.883 175.48 10.902 175.375 10.945 cv
175.266 10.992 175.152 11.062 175.039 11.152 cv
174.918 11.246 174.797 11.371 174.672 11.523 cv
174.543 11.684 174.406 11.875 174.262 12.102 cv
174.262 16.434 li
174.258 16.488 174.242 16.531 174.215 16.57 cv
174.18 16.609 174.125 16.645 174.055 16.668 cv
173.977 16.695 173.879 16.711 173.754 16.727 cv
173.629 16.738 173.469 16.746 173.281 16.746 cv
173.086 16.746 172.93 16.738 172.805 16.727 cv
172.68 16.711 172.578 16.695 172.504 16.668 cv
172.426 16.645 172.371 16.609 172.344 16.57 cv
172.309 16.531 172.293 16.488 172.297 16.434 cv
172.297 9.48401 li
172.293 9.43701 172.309 9.39099 172.336 9.34802 cv
172.359 9.31201 172.406 9.28101 172.477 9.25 cv
172.543 9.22699 172.629 9.20697 172.738 9.19098 cv
172.844 9.18402 172.977 9.17603 173.141 9.172 cv
173.305 9.17603 173.441 9.18402 173.551 9.19098 cv
173.656 9.20697 173.742 9.22699 173.805 9.25 cv
173.863 9.28101 173.906 9.31201 173.934 9.34802 cv
173.957 9.39099 173.969 9.43701 173.973 9.48401 cv
173.973 10.348 li
174.152 10.09 174.324 9.87903 174.488 9.70697 cv
174.645 9.54303 174.801 9.40601 174.949 9.30499 cv
175.094 9.20697 175.238 9.14099 175.383 9.09802 cv
175.527 9.06201 175.672 9.04303 175.82 9.039 cv
175.887 9.04303 175.961 9.047 176.039 9.05103 cv
176.117 9.06201 176.195 9.07397 176.281 9.09003 cv
176.359 9.10901 176.434 9.12903 176.5 9.15198 cv
176.559 9.17603 176.605 9.203 176.637 9.22699 cv
176.664 9.258 176.684 9.28497 176.699 9.31201 cv
176.711 9.34802 176.723 9.39099 176.734 9.44098 cv
176.742 9.5 176.75 9.58197 176.758 9.68701 cv
176.762 9.797 176.766 9.94501 176.766 10.129 cv
cp
f
183.941 9.96503 mo
183.938 10.219 183.91 10.402 183.855 10.52 cv
183.797 10.641 183.727 10.699 183.648 10.699 cv
182.828 10.699 li
182.941 10.824 183.023 10.969 183.074 11.125 cv
183.121 11.285 183.145 11.449 183.148 11.617 cv
183.145 12.027 183.078 12.387 182.945 12.699 cv
182.809 13.016 182.613 13.281 182.363 13.492 cv
182.109 13.711 181.809 13.875 181.453 13.984 cv
181.094 14.102 180.695 14.156 180.266 14.152 cv
180.039 14.156 179.828 14.129 179.625 14.07 cv
179.422 14.02 179.266 13.957 179.156 13.879 cv
179.094 13.949 179.035 14.027 178.988 14.121 cv
178.938 14.215 178.914 14.32 178.918 14.43 cv
178.914 14.586 178.98 14.707 179.113 14.801 cv
179.242 14.898 179.43 14.953 179.672 14.961 cv
181.363 15.023 li
181.758 15.039 182.109 15.098 182.418 15.191 cv
182.727 15.293 182.988 15.426 183.199 15.598 cv
183.41 15.773 183.57 15.984 183.68 16.227 cv
183.789 16.473 183.844 16.746 183.848 17.059 cv
183.844 17.395 183.77 17.719 183.621 18.027 cv
183.473 18.328 183.246 18.59 182.945 18.816 cv
182.641 19.035 182.262 19.215 181.809 19.348 cv
181.352 19.477 180.82 19.539 180.219 19.543 cv
179.621 19.539 179.117 19.492 178.699 19.402 cv
178.281 19.305 177.938 19.176 177.672 19.012 cv
177.402 18.844 177.207 18.645 177.09 18.418 cv
176.965 18.184 176.906 17.93 176.906 17.656 cv
176.906 17.484 176.926 17.324 176.973 17.168 cv
177.012 17.012 177.078 16.859 177.168 16.719 cv
177.25 16.574 177.355 16.441 177.48 16.309 cv
177.605 16.18 177.746 16.055 177.91 15.934 cv
177.684 15.82 177.512 15.66 177.391 15.449 cv
177.27 15.246 177.211 15.02 177.211 14.773 cv
177.211 14.473 177.277 14.195 177.418 13.937 cv
177.555 13.687 177.738 13.457 177.965 13.254 cv
177.781 13.074 177.637 12.859 177.527 12.602 cv
177.418 12.352 177.363 12.031 177.367 11.648 cv
177.363 11.246 177.434 10.887 177.578 10.562 cv
177.719 10.246 177.918 9.97699 178.176 9.75403 cv
178.43 9.53497 178.734 9.36298 179.086 9.24597 cv
179.438 9.12903 179.828 9.07001 180.258 9.07001 cv
180.477 9.07001 180.684 9.086 180.883 9.10901 cv
181.082 9.14099 181.27 9.17603 181.441 9.21899 cv
183.648 9.21899 li
183.73 9.22302 183.801 9.28101 183.859 9.39099 cv
183.91 9.508 183.938 9.69897 183.941 9.96503 cv
cp
181.426 11.609 mo
181.422 11.238 181.32 10.949 181.113 10.738 cv
180.902 10.535 180.609 10.43 180.234 10.426 cv
180.039 10.43 179.867 10.461 179.727 10.523 cv
179.578 10.59 179.457 10.68 179.363 10.789 cv
179.262 10.902 179.191 11.031 179.148 11.18 cv
179.098 11.328 179.074 11.484 179.078 11.641 cv
179.074 12 179.18 12.277 179.391 12.48 cv
179.598 12.687 179.887 12.793 180.258 12.789 cv
180.453 12.793 180.621 12.762 180.77 12.695 cv
180.91 12.637 181.031 12.551 181.133 12.437 cv
181.227 12.332 181.301 12.203 181.352 12.059 cv
181.398 11.918 181.422 11.77 181.426 11.609 cv
cp
181.887 17.16 mo
181.887 16.922 181.793 16.746 181.605 16.621 cv
181.418 16.5 181.16 16.43 180.832 16.418 cv
179.438 16.379 li
179.301 16.48 179.191 16.574 179.113 16.664 cv
179.031 16.754 178.969 16.84 178.922 16.926 cv
178.871 17.008 178.836 17.09 178.824 17.168 cv
178.805 17.246 178.797 17.324 178.801 17.41 cv
178.797 17.664 178.93 17.863 179.191 18 cv
179.453 18.133 179.824 18.199 180.305 18.203 cv
180.598 18.199 180.844 18.168 181.051 18.113 cv
181.25 18.051 181.414 17.973 181.543 17.875 cv
181.664 17.773 181.754 17.664 181.809 17.543 cv
181.859 17.422 181.887 17.293 181.887 17.16 cv
cp
f
189.273 16.699 mo
188.43 19.16 li
188.379 19.289 188.254 19.383 188.047 19.441 cv
187.84 19.496 187.535 19.523 187.137 19.527 cv
186.926 19.523 186.758 19.516 186.637 19.5 cv
186.512 19.48 186.422 19.449 186.359 19.41 cv
186.297 19.367 186.262 19.316 186.258 19.254 cv
186.25 19.191 186.266 19.117 186.305 19.031 cv
187.23 16.699 li
187.16 16.668 187.098 16.621 187.047 16.555 cv
186.988 16.492 186.949 16.422 186.926 16.348 cv
184.535 9.95697 li
184.465 9.77698 184.43 9.64099 184.434 9.54303 cv
184.43 9.44897 184.461 9.37097 184.527 9.31598 cv
184.586 9.26202 184.691 9.22699 184.84 9.203 cv
184.984 9.18701 185.18 9.17603 185.43 9.172 cv
185.648 9.17603 185.828 9.17999 185.961 9.18402 cv
186.09 9.19501 186.191 9.21503 186.266 9.242 cv
186.336 9.27698 186.391 9.32397 186.43 9.38702 cv
186.465 9.453 186.5 9.547 186.539 9.664 cv
188.172 14.316 li
188.195 14.316 li
189.695 9.57001 li
189.719 9.43701 189.758 9.34802 189.813 9.30103 cv
189.859 9.258 189.941 9.22699 190.059 9.203 cv
190.168 9.18701 190.371 9.17603 190.66 9.172 cv
190.883 9.17603 191.066 9.18701 191.215 9.203 cv
191.359 9.22699 191.469 9.26599 191.543 9.32001 cv
191.609 9.383 191.645 9.45697 191.648 9.55103 cv
191.645 9.64502 191.625 9.758 191.586 9.88702 cv
cp
f
203.715 15.172 mo
203.715 15.305 203.711 15.414 203.703 15.504 cv
203.695 15.598 203.684 15.676 203.668 15.738 cv
203.652 15.805 203.629 15.863 203.605 15.906 cv
203.574 15.953 203.535 16.004 203.48 16.062 cv
203.422 16.125 203.309 16.203 203.148 16.293 cv
202.98 16.391 202.781 16.48 202.547 16.562 cv
202.309 16.652 202.039 16.719 201.738 16.777 cv
201.43 16.832 201.102 16.863 200.754 16.863 cv
200.059 16.863 199.434 16.758 198.879 16.543 cv
198.32 16.332 197.848 16.016 197.461 15.59 cv
197.07 15.168 196.773 14.637 196.566 14.004 cv
196.359 13.371 196.254 12.633 196.258 11.789 cv
196.254 10.934 196.367 10.176 196.598 9.508 cv
196.824 8.84399 197.145 8.28497 197.555 7.83197 cv
197.965 7.383 198.457 7.039 199.031 6.80499 cv
199.605 6.57397 200.238 6.45697 200.934 6.453 cv
201.207 6.45697 201.477 6.47998 201.742 6.52301 cv
202 6.57001 202.242 6.62903 202.461 6.703 cv
202.68 6.78101 202.879 6.87097 203.059 6.96503 cv
203.234 7.06598 203.355 7.14801 203.43 7.21899 cv
203.496 7.289 203.547 7.34802 203.574 7.39502 cv
203.598 7.44098 203.617 7.50403 203.637 7.57397 cv
203.648 7.65198 203.66 7.73798 203.672 7.83197 cv
203.676 7.93402 203.68 8.05499 203.684 8.19501 cv
203.68 8.35498 203.676 8.48798 203.668 8.59399 cv
203.656 8.70697 203.637 8.79303 203.613 8.85901 cv
203.586 8.92999 203.555 8.97998 203.52 9.008 cv
203.48 9.04303 203.438 9.05902 203.395 9.05499 cv
203.313 9.05902 203.215 9.01202 203.098 8.91803 cv
202.977 8.828 202.82 8.72699 202.633 8.61298 cv
202.441 8.50403 202.219 8.40198 201.957 8.30902 cv
201.691 8.21899 201.379 8.17603 201.02 8.172 cv
200.617 8.17603 200.258 8.258 199.945 8.41803 cv
199.629 8.586 199.363 8.82001 199.145 9.12097 cv
198.922 9.42999 198.754 9.797 198.641 10.227 cv
198.523 10.66 198.465 11.145 198.469 11.68 cv
198.465 12.277 198.527 12.793 198.652 13.223 cv
198.773 13.66 198.945 14.016 199.176 14.293 cv
199.398 14.574 199.672 14.781 199.992 14.918 cv
200.309 15.059 200.668 15.129 201.074 15.125 cv
201.434 15.129 201.75 15.086 202.016 14.996 cv
202.281 14.914 202.508 14.82 202.695 14.711 cv
202.883 14.609 203.039 14.516 203.164 14.434 cv
203.285 14.352 203.379 14.309 203.449 14.309 cv
203.5 14.309 203.543 14.32 203.574 14.34 cv
203.605 14.359 203.629 14.398 203.652 14.461 cv
203.668 14.523 203.684 14.613 203.699 14.723 cv
203.707 14.84 203.715 14.988 203.715 15.172 cv
cp
f
212.094 12.887 mo
212.09 13.484 212.012 14.027 211.859 14.512 cv
211.699 15.004 211.465 15.422 211.148 15.773 cv
210.832 16.125 210.434 16.398 209.957 16.59 cv
209.477 16.781 208.918 16.875 208.281 16.879 cv
207.66 16.875 207.121 16.793 206.668 16.621 cv
206.207 16.453 205.828 16.203 205.531 15.875 cv
205.227 15.551 205.004 15.148 204.859 14.668 cv
204.715 14.191 204.645 13.645 204.645 13.027 cv
204.645 12.437 204.723 11.898 204.879 11.406 cv
205.035 10.918 205.273 10.496 205.594 10.145 cv
205.91 9.797 206.305 9.52301 206.781 9.328 cv
207.254 9.13702 207.813 9.04303 208.453 9.039 cv
209.078 9.04303 209.617 9.125 210.074 9.29303 cv
210.531 9.46503 210.91 9.71503 211.207 10.039 cv
211.504 10.367 211.727 10.77 211.875 11.246 cv
212.02 11.727 212.09 12.273 212.094 12.887 cv
cp
210.074 12.965 mo
210.07 12.629 210.043 12.312 209.992 12.02 cv
209.934 11.734 209.84 11.484 209.715 11.27 cv
209.582 11.059 209.41 10.891 209.199 10.77 cv
208.98 10.652 208.711 10.594 208.383 10.59 cv
208.094 10.594 207.84 10.648 207.621 10.75 cv
207.402 10.859 207.223 11.016 207.082 11.219 cv
206.941 11.426 206.836 11.672 206.766 11.957 cv
206.695 12.25 206.66 12.578 206.66 12.941 cv
206.66 13.289 206.688 13.605 206.746 13.891 cv
206.801 14.184 206.895 14.434 207.023 14.645 cv
207.148 14.859 207.32 15.023 207.543 15.137 cv
207.758 15.258 208.027 15.316 208.352 15.312 cv
208.645 15.316 208.902 15.262 209.125 15.152 cv
209.34 15.047 209.52 14.895 209.66 14.687 cv
209.801 14.488 209.902 14.242 209.973 13.953 cv
210.035 13.668 210.07 13.34 210.074 12.965 cv
cp
f
220.289 16.434 mo
220.285 16.488 220.27 16.531 220.242 16.57 cv
220.207 16.609 220.156 16.645 220.086 16.668 cv
220.012 16.695 219.91 16.711 219.785 16.727 cv
219.656 16.738 219.5 16.746 219.316 16.746 cv
219.121 16.746 218.961 16.738 218.836 16.727 cv
218.707 16.711 218.605 16.695 218.535 16.668 cv
218.457 16.645 218.406 16.609 218.379 16.57 cv
218.344 16.531 218.328 16.488 218.332 16.434 cv
218.332 12.469 li
218.328 12.133 218.305 11.867 218.258 11.672 cv
218.207 11.48 218.133 11.316 218.043 11.18 cv
217.949 11.043 217.832 10.937 217.684 10.859 cv
217.535 10.785 217.359 10.746 217.164 10.746 cv
216.91 10.746 216.66 10.84 216.406 11.02 cv
216.152 11.203 215.887 11.465 215.613 11.812 cv
215.613 16.434 li
215.609 16.488 215.594 16.531 215.566 16.57 cv
215.531 16.609 215.477 16.645 215.406 16.668 cv
215.328 16.695 215.23 16.711 215.105 16.727 cv
214.98 16.738 214.82 16.746 214.633 16.746 cv
214.438 16.746 214.281 16.738 214.156 16.727 cv
214.031 16.711 213.93 16.695 213.855 16.668 cv
213.777 16.645 213.723 16.609 213.695 16.57 cv
213.66 16.531 213.645 16.488 213.648 16.434 cv
213.648 9.48401 li
213.645 9.43701 213.66 9.39099 213.688 9.34802 cv
213.711 9.31201 213.758 9.28101 213.828 9.25 cv
213.895 9.22699 213.98 9.20697 214.09 9.19098 cv
214.195 9.18402 214.328 9.17603 214.492 9.172 cv
214.656 9.17603 214.793 9.18402 214.902 9.19098 cv
215.008 9.20697 215.094 9.22699 215.156 9.25 cv
215.215 9.28101 215.258 9.31201 215.285 9.34802 cv
215.309 9.39099 215.32 9.43701 215.324 9.48401 cv
215.324 10.285 li
215.707 9.875 216.098 9.56201 216.496 9.35199 cv
216.891 9.14502 217.309 9.04303 217.742 9.039 cv
218.211 9.04303 218.609 9.12097 218.938 9.27301 cv
219.262 9.43402 219.523 9.64502 219.723 9.90997 cv
219.922 10.18 220.066 10.492 220.156 10.848 cv
220.242 11.207 220.285 11.637 220.289 12.141 cv
cp
f
227.113 14.469 mo
227.109 14.867 227.035 15.215 226.891 15.516 cv
226.742 15.816 226.535 16.07 226.266 16.27 cv
225.992 16.477 225.672 16.625 225.305 16.727 cv
224.938 16.824 224.535 16.875 224.105 16.879 cv
223.84 16.875 223.594 16.855 223.359 16.82 cv
223.125 16.777 222.914 16.73 222.727 16.672 cv
222.539 16.613 222.383 16.551 222.258 16.488 cv
222.133 16.426 222.039 16.367 221.984 16.312 cv
221.926 16.258 221.883 16.176 221.855 16.059 cv
221.82 15.945 221.805 15.77 221.809 15.539 cv
221.805 15.391 221.813 15.27 221.824 15.176 cv
221.832 15.086 221.848 15.016 221.871 14.957 cv
221.891 14.906 221.914 14.867 221.949 14.848 cv
221.977 14.832 222.016 14.824 222.063 14.82 cv
222.117 14.824 222.203 14.855 222.316 14.918 cv
222.426 14.984 222.563 15.059 222.734 15.133 cv
222.898 15.215 223.094 15.285 223.313 15.352 cv
223.531 15.422 223.781 15.457 224.066 15.453 cv
224.242 15.457 224.398 15.437 224.539 15.398 cv
224.672 15.363 224.793 15.312 224.898 15.242 cv
224.996 15.176 225.07 15.09 225.125 14.984 cv
225.172 14.883 225.199 14.762 225.203 14.625 cv
225.199 14.469 225.152 14.336 225.059 14.227 cv
224.965 14.117 224.836 14.02 224.68 13.934 cv
224.516 13.852 224.336 13.773 224.141 13.699 cv
223.938 13.629 223.734 13.551 223.523 13.457 cv
223.313 13.371 223.105 13.27 222.91 13.152 cv
222.707 13.043 222.527 12.902 222.371 12.734 cv
222.207 12.57 222.082 12.371 221.988 12.133 cv
221.895 11.902 221.848 11.621 221.848 11.289 cv
221.848 10.961 221.91 10.656 222.039 10.375 cv
222.168 10.102 222.355 9.86298 222.602 9.664 cv
222.844 9.46899 223.141 9.31598 223.492 9.203 cv
223.84 9.09802 224.234 9.04303 224.676 9.039 cv
224.891 9.04303 225.102 9.05902 225.309 9.086 cv
225.512 9.12097 225.699 9.15997 225.867 9.203 cv
226.031 9.25403 226.172 9.30499 226.289 9.35498 cv
226.402 9.414 226.484 9.461 226.535 9.49597 cv
226.582 9.539 226.617 9.578 226.641 9.61298 cv
226.66 9.65601 226.672 9.703 226.684 9.75403 cv
226.691 9.80902 226.703 9.875 226.711 9.953 cv
226.719 10.039 226.723 10.137 226.723 10.254 cv
226.723 10.395 226.719 10.512 226.711 10.598 cv
226.703 10.691 226.688 10.762 226.672 10.809 cv
226.652 10.863 226.629 10.898 226.602 10.914 cv
226.566 10.937 226.531 10.945 226.492 10.941 cv
226.441 10.945 226.367 10.918 226.273 10.859 cv
226.172 10.809 226.051 10.75 225.902 10.684 cv
225.754 10.625 225.582 10.566 225.387 10.508 cv
225.191 10.457 224.969 10.43 224.723 10.426 cv
224.543 10.43 224.391 10.449 224.262 10.48 cv
224.129 10.52 224.02 10.57 223.941 10.637 cv
223.855 10.707 223.793 10.785 223.754 10.875 cv
223.707 10.969 223.688 11.066 223.691 11.168 cv
223.688 11.328 223.738 11.465 223.84 11.57 cv
223.938 11.684 224.066 11.777 224.23 11.859 cv
224.391 11.945 224.574 12.023 224.781 12.094 cv
224.984 12.168 225.191 12.25 225.402 12.332 cv
225.609 12.422 225.816 12.52 226.027 12.633 cv
226.23 12.746 226.414 12.887 226.574 13.051 cv
226.734 13.219 226.863 13.418 226.965 13.648 cv
227.059 13.883 227.109 14.156 227.113 14.469 cv
cp
f
235.184 16.434 mo
235.18 16.488 235.168 16.531 235.145 16.57 cv
235.117 16.609 235.07 16.645 235.008 16.668 cv
234.941 16.695 234.855 16.711 234.75 16.727 cv
234.645 16.738 234.512 16.746 234.352 16.746 cv
234.176 16.746 234.035 16.738 233.934 16.727 cv
233.824 16.711 233.742 16.695 233.68 16.668 cv
233.617 16.645 233.57 16.609 233.547 16.57 cv
233.516 16.531 233.504 16.488 233.508 16.434 cv
233.508 15.633 li
233.121 16.047 232.73 16.359 232.336 16.566 cv
231.934 16.773 231.523 16.875 231.102 16.879 cv
230.621 16.875 230.219 16.801 229.895 16.645 cv
229.57 16.492 229.309 16.277 229.109 16.008 cv
228.906 15.738 228.762 15.426 228.68 15.066 cv
228.59 14.711 228.547 14.27 228.551 13.738 cv
228.551 9.48401 li
228.547 9.43701 228.563 9.39099 228.594 9.34802 cv
228.621 9.31201 228.672 9.28101 228.75 9.25 cv
228.824 9.22699 228.926 9.20697 229.055 9.19098 cv
229.18 9.18402 229.336 9.17603 229.527 9.172 cv
229.715 9.17603 229.875 9.18402 230 9.19098 cv
230.125 9.20697 230.223 9.22699 230.301 9.25 cv
230.371 9.28101 230.426 9.31201 230.461 9.34802 cv
230.488 9.39099 230.504 9.43701 230.508 9.48401 cv
230.508 13.41 li
230.504 13.777 230.527 14.055 230.578 14.246 cv
230.621 14.437 230.691 14.602 230.793 14.738 cv
230.887 14.879 231.012 14.984 231.16 15.059 cv
231.309 15.137 231.48 15.176 231.676 15.172 cv
231.926 15.176 232.176 15.086 232.43 14.898 cv
232.68 14.719 232.949 14.453 233.234 14.105 cv
233.234 9.48401 li
233.234 9.43701 233.246 9.39099 233.277 9.34802 cv
233.301 9.31201 233.355 9.28101 233.434 9.25 cv
233.508 9.22699 233.605 9.20697 233.734 9.19098 cv
233.855 9.18402 234.016 9.17603 234.211 9.172 cv
234.402 9.17603 234.559 9.18402 234.684 9.19098 cv
234.805 9.20697 234.906 9.22699 234.98 9.25 cv
235.051 9.28101 235.102 9.31201 235.137 9.34802 cv
235.164 9.39099 235.18 9.43701 235.184 9.48401 cv
cp
f
248.121 16.434 mo
248.117 16.488 248.102 16.531 248.074 16.57 cv
248.039 16.609 247.988 16.645 247.918 16.668 cv
247.844 16.695 247.742 16.711 247.621 16.727 cv
247.496 16.738 247.34 16.746 247.148 16.746 cv
246.949 16.746 246.789 16.738 246.664 16.727 cv
246.539 16.711 246.438 16.695 246.363 16.668 cv
246.285 16.645 246.234 16.609 246.207 16.57 cv
246.18 16.531 246.164 16.488 246.168 16.434 cv
246.168 12.312 li
246.164 12.082 246.145 11.867 246.102 11.672 cv
246.055 11.48 245.984 11.316 245.898 11.18 cv
245.805 11.043 245.691 10.937 245.555 10.859 cv
245.414 10.785 245.25 10.746 245.059 10.746 cv
244.824 10.746 244.586 10.84 244.348 11.02 cv
244.109 11.203 243.852 11.465 243.57 11.812 cv
243.57 16.434 li
243.57 16.488 243.555 16.531 243.523 16.57 cv
243.492 16.609 243.438 16.645 243.363 16.668 cv
243.285 16.695 243.184 16.711 243.063 16.727 cv
242.938 16.738 242.785 16.746 242.598 16.746 cv
242.402 16.746 242.242 16.738 242.121 16.727 cv
241.992 16.711 241.891 16.695 241.82 16.668 cv
241.742 16.645 241.691 16.609 241.66 16.57 cv
241.629 16.531 241.613 16.488 241.613 16.434 cv
241.613 12.312 li
241.613 12.082 241.59 11.867 241.547 11.672 cv
241.504 11.48 241.438 11.316 241.352 11.18 cv
241.258 11.043 241.145 10.937 241.008 10.859 cv
240.863 10.785 240.699 10.746 240.516 10.746 cv
240.273 10.746 240.035 10.84 239.797 11.02 cv
239.559 11.203 239.301 11.465 239.027 11.812 cv
239.027 16.434 li
239.023 16.488 239.008 16.531 238.98 16.57 cv
238.945 16.609 238.891 16.645 238.82 16.668 cv
238.742 16.695 238.645 16.711 238.52 16.727 cv
238.395 16.738 238.234 16.746 238.047 16.746 cv
237.852 16.746 237.695 16.738 237.57 16.727 cv
237.445 16.711 237.344 16.695 237.27 16.668 cv
237.191 16.645 237.137 16.609 237.109 16.57 cv
237.074 16.531 237.059 16.488 237.063 16.434 cv
237.063 9.48401 li
237.059 9.43701 237.074 9.39099 237.102 9.34802 cv
237.125 9.31201 237.172 9.28101 237.242 9.25 cv
237.309 9.22699 237.395 9.20697 237.504 9.19098 cv
237.609 9.18402 237.742 9.17603 237.906 9.172 cv
238.07 9.17603 238.207 9.18402 238.316 9.19098 cv
238.422 9.20697 238.508 9.22699 238.57 9.25 cv
238.629 9.28101 238.672 9.31201 238.699 9.34802 cv
238.723 9.39099 238.734 9.43701 238.738 9.48401 cv
238.738 10.285 li
239.121 9.875 239.504 9.56201 239.887 9.35199 cv
240.266 9.14502 240.668 9.04303 241.086 9.039 cv
241.371 9.04303 241.625 9.07001 241.855 9.12903 cv
242.082 9.19098 242.289 9.27698 242.469 9.38702 cv
242.648 9.5 242.801 9.63702 242.93 9.789 cv
243.059 9.94501 243.168 10.117 243.258 10.309 cv
243.465 10.086 243.668 9.89502 243.871 9.73401 cv
244.066 9.57397 244.266 9.44098 244.461 9.34003 cv
244.656 9.23798 244.852 9.164 245.047 9.11298 cv
245.242 9.06598 245.441 9.04303 245.645 9.039 cv
246.105 9.04303 246.492 9.12097 246.813 9.27301 cv
247.125 9.43402 247.383 9.64502 247.578 9.90997 cv
247.773 10.18 247.91 10.492 247.996 10.848 cv
248.074 11.207 248.117 11.586 248.121 11.984 cv
cp
f
257.039 12.855 mo
257.039 13.477 256.973 14.035 256.84 14.531 cv
256.707 15.027 256.512 15.449 256.258 15.797 cv
256.004 16.145 255.688 16.414 255.309 16.598 cv
254.926 16.785 254.492 16.875 254.008 16.879 cv
253.801 16.875 253.613 16.855 253.449 16.82 cv
253.277 16.777 253.113 16.719 252.957 16.641 cv
252.797 16.562 252.641 16.465 252.488 16.34 cv
252.328 16.223 252.168 16.082 252.004 15.918 cv
252.004 19.191 li
252 19.238 251.984 19.285 251.957 19.332 cv
251.922 19.371 251.867 19.406 251.797 19.437 cv
251.719 19.461 251.621 19.484 251.496 19.504 cv
251.371 19.516 251.211 19.523 251.023 19.527 cv
250.828 19.523 250.672 19.516 250.547 19.504 cv
250.422 19.484 250.32 19.461 250.246 19.437 cv
250.168 19.406 250.113 19.371 250.086 19.332 cv
250.051 19.285 250.035 19.238 250.039 19.191 cv
250.039 9.48401 li
250.035 9.43701 250.051 9.39099 250.078 9.34802 cv
250.102 9.31201 250.145 9.28101 250.215 9.25 cv
250.277 9.22699 250.363 9.20697 250.473 9.19098 cv
250.574 9.18402 250.711 9.17603 250.875 9.172 cv
251.031 9.17603 251.16 9.18402 251.266 9.19098 cv
251.371 9.20697 251.457 9.22699 251.523 9.25 cv
251.586 9.28101 251.633 9.31201 251.66 9.34802 cv
251.684 9.39099 251.695 9.43701 251.699 9.48401 cv
251.699 10.301 li
251.898 10.094 252.098 9.914 252.297 9.75403 cv
252.488 9.59802 252.688 9.46503 252.891 9.35498 cv
253.094 9.25403 253.301 9.172 253.52 9.117 cv
253.73 9.06598 253.961 9.04303 254.211 9.039 cv
254.715 9.04303 255.148 9.14099 255.512 9.34003 cv
255.867 9.54303 256.16 9.82001 256.387 10.164 cv
256.609 10.516 256.773 10.918 256.883 11.379 cv
256.984 11.84 257.039 12.332 257.039 12.855 cv
cp
254.996 12.996 mo
254.992 12.703 254.973 12.422 254.93 12.145 cv
254.883 11.875 254.805 11.633 254.703 11.418 cv
254.594 11.207 254.453 11.035 254.281 10.906 cv
254.105 10.781 253.891 10.719 253.633 10.715 cv
253.5 10.719 253.371 10.738 253.246 10.773 cv
253.117 10.816 252.988 10.879 252.855 10.965 cv
252.723 11.055 252.586 11.168 252.449 11.309 cv
252.305 11.449 252.156 11.625 252.004 11.828 cv
252.004 14.121 li
252.277 14.469 252.539 14.738 252.789 14.926 cv
253.035 15.117 253.297 15.211 253.57 15.211 cv
253.824 15.211 254.039 15.148 254.223 15.016 cv
254.398 14.891 254.547 14.719 254.66 14.508 cv
254.773 14.297 254.855 14.059 254.914 13.793 cv
254.965 13.527 254.992 13.262 254.996 12.996 cv
cp
f
262.535 15.75 mo
262.535 15.977 262.52 16.152 262.492 16.273 cv
262.461 16.398 262.422 16.484 262.379 16.531 cv
262.328 16.582 262.262 16.625 262.172 16.664 cv
262.078 16.703 261.969 16.734 261.852 16.766 cv
261.727 16.789 261.594 16.812 261.453 16.832 cv
261.309 16.844 261.168 16.852 261.023 16.855 cv
260.633 16.852 260.293 16.801 260.008 16.707 cv
259.723 16.605 259.488 16.457 259.301 16.25 cv
259.113 16.047 258.973 15.789 258.887 15.477 cv
258.793 15.168 258.75 14.797 258.754 14.367 cv
258.754 10.809 li
257.922 10.809 li
257.82 10.812 257.746 10.75 257.695 10.625 cv
257.641 10.504 257.613 10.301 257.617 10.012 cv
257.613 9.86298 257.621 9.73401 257.637 9.633 cv
257.648 9.53101 257.668 9.44897 257.695 9.38702 cv
257.719 9.328 257.75 9.28497 257.793 9.258 cv
257.828 9.23401 257.875 9.22302 257.93 9.21899 cv
258.754 9.21899 li
258.754 7.66803 li
258.75 7.62097 258.766 7.57397 258.797 7.52698 cv
258.824 7.48798 258.875 7.453 258.953 7.422 cv
259.027 7.39801 259.129 7.375 259.258 7.35901 cv
259.383 7.34802 259.539 7.34399 259.73 7.34003 cv
259.918 7.34399 260.078 7.34802 260.207 7.35901 cv
260.332 7.375 260.434 7.39801 260.508 7.422 cv
260.578 7.453 260.629 7.48798 260.664 7.52698 cv
260.691 7.57397 260.707 7.62097 260.711 7.66803 cv
260.711 9.21899 li
262.223 9.21899 li
262.273 9.22302 262.32 9.23401 262.359 9.258 cv
262.398 9.28497 262.43 9.328 262.457 9.38702 cv
262.48 9.44897 262.5 9.53101 262.516 9.633 cv
262.527 9.73401 262.535 9.86298 262.535 10.012 cv
262.535 10.301 262.508 10.504 262.457 10.625 cv
262.402 10.75 262.328 10.812 262.23 10.809 cv
260.711 10.809 li
260.711 14.074 li
260.707 14.453 260.766 14.738 260.891 14.926 cv
261.008 15.117 261.223 15.211 261.527 15.211 cv
261.629 15.211 261.723 15.203 261.809 15.184 cv
261.891 15.168 261.965 15.148 262.031 15.121 cv
262.094 15.102 262.148 15.078 262.195 15.059 cv
262.238 15.043 262.277 15.035 262.316 15.031 cv
262.344 15.035 262.375 15.043 262.406 15.059 cv
262.434 15.078 262.453 15.117 262.473 15.168 cv
262.484 15.227 262.5 15.301 262.516 15.391 cv
262.527 15.488 262.535 15.605 262.535 15.75 cv
cp
f
265.922 16.434 mo
265.918 16.488 265.902 16.531 265.875 16.57 cv
265.84 16.609 265.785 16.645 265.715 16.668 cv
265.637 16.695 265.539 16.711 265.414 16.727 cv
265.289 16.738 265.129 16.746 264.941 16.746 cv
264.746 16.746 264.59 16.738 264.465 16.727 cv
264.34 16.711 264.238 16.695 264.164 16.668 cv
264.086 16.645 264.031 16.609 264.004 16.57 cv
263.969 16.531 263.953 16.488 263.957 16.434 cv
263.957 9.5 li
263.953 9.44897 263.969 9.40198 264.004 9.36298 cv
264.031 9.32397 264.086 9.29303 264.164 9.26202 cv
264.238 9.23798 264.34 9.21503 264.465 9.19501 cv
264.59 9.18402 264.746 9.17603 264.941 9.172 cv
265.129 9.17603 265.289 9.18402 265.414 9.19501 cv
265.539 9.21503 265.637 9.23798 265.715 9.26202 cv
265.785 9.29303 265.84 9.32397 265.875 9.36298 cv
265.902 9.40198 265.918 9.44897 265.922 9.5 cv
cp
266.07 7.12903 mo
266.07 7.52698 265.988 7.80103 265.828 7.94897 cv
265.664 8.10199 265.367 8.17603 264.934 8.172 cv
264.488 8.17603 264.188 8.10199 264.039 7.95697 cv
263.883 7.81201 263.809 7.55103 263.809 7.16803 cv
263.809 6.77301 263.887 6.5 264.047 6.34802 cv
264.203 6.19501 264.504 6.117 264.949 6.117 cv
265.383 6.117 265.68 6.19098 265.836 6.34003 cv
265.992 6.48798 266.07 6.75403 266.07 7.12903 cv
cp
f
274.914 12.887 mo
274.91 13.484 274.832 14.027 274.68 14.512 cv
274.52 15.004 274.285 15.422 273.969 15.773 cv
273.652 16.125 273.254 16.398 272.777 16.59 cv
272.297 16.781 271.738 16.875 271.102 16.879 cv
270.48 16.875 269.941 16.793 269.488 16.621 cv
269.027 16.453 268.648 16.203 268.352 15.875 cv
268.047 15.551 267.824 15.148 267.68 14.668 cv
267.535 14.191 267.465 13.645 267.465 13.027 cv
267.465 12.437 267.543 11.898 267.699 11.406 cv
267.855 10.918 268.094 10.496 268.414 10.145 cv
268.73 9.797 269.125 9.52301 269.602 9.328 cv
270.074 9.13702 270.633 9.04303 271.273 9.039 cv
271.898 9.04303 272.438 9.125 272.895 9.29303 cv
273.352 9.46503 273.73 9.71503 274.027 10.039 cv
274.324 10.367 274.547 10.77 274.695 11.246 cv
274.84 11.727 274.91 12.273 274.914 12.887 cv
cp
272.895 12.965 mo
272.891 12.629 272.863 12.312 272.813 12.02 cv
272.754 11.734 272.66 11.484 272.535 11.27 cv
272.402 11.059 272.23 10.891 272.02 10.77 cv
271.801 10.652 271.531 10.594 271.203 10.59 cv
270.914 10.594 270.66 10.648 270.441 10.75 cv
270.223 10.859 270.043 11.016 269.902 11.219 cv
269.762 11.426 269.656 11.672 269.586 11.957 cv
269.516 12.25 269.48 12.578 269.48 12.941 cv
269.48 13.289 269.508 13.605 269.566 13.891 cv
269.621 14.184 269.715 14.434 269.844 14.645 cv
269.969 14.859 270.141 15.023 270.363 15.137 cv
270.578 15.258 270.848 15.316 271.172 15.312 cv
271.465 15.316 271.723 15.262 271.945 15.152 cv
272.16 15.047 272.34 14.895 272.48 14.687 cv
272.621 14.488 272.723 14.242 272.793 13.953 cv
272.855 13.668 272.891 13.34 272.895 12.965 cv
cp
f
283.156 16.434 mo
283.152 16.488 283.137 16.531 283.109 16.57 cv
283.074 16.609 283.023 16.645 282.953 16.668 cv
282.879 16.695 282.777 16.711 282.652 16.727 cv
282.523 16.738 282.367 16.746 282.184 16.746 cv
281.988 16.746 281.828 16.738 281.703 16.727 cv
281.574 16.711 281.473 16.695 281.402 16.668 cv
281.324 16.645 281.273 16.609 281.246 16.57 cv
281.211 16.531 281.195 16.488 281.199 16.434 cv
281.199 12.469 li
281.195 12.133 281.172 11.867 281.125 11.672 cv
281.074 11.48 281 11.316 280.91 11.18 cv
280.816 11.043 280.699 10.937 280.551 10.859 cv
280.402 10.785 280.227 10.746 280.031 10.746 cv
279.777 10.746 279.527 10.84 279.273 11.02 cv
279.02 11.203 278.754 11.465 278.48 11.812 cv
278.48 16.434 li
278.477 16.488 278.461 16.531 278.434 16.57 cv
278.398 16.609 278.344 16.645 278.273 16.668 cv
278.195 16.695 278.098 16.711 277.973 16.727 cv
277.848 16.738 277.688 16.746 277.5 16.746 cv
277.305 16.746 277.148 16.738 277.023 16.727 cv
276.898 16.711 276.797 16.695 276.723 16.668 cv
276.645 16.645 276.59 16.609 276.563 16.57 cv
276.527 16.531 276.512 16.488 276.516 16.434 cv
276.516 9.48401 li
276.512 9.43701 276.527 9.39099 276.555 9.34802 cv
276.578 9.31201 276.625 9.28101 276.695 9.25 cv
276.762 9.22699 276.848 9.20697 276.957 9.19098 cv
277.063 9.18402 277.195 9.17603 277.359 9.172 cv
277.523 9.17603 277.66 9.18402 277.77 9.19098 cv
277.875 9.20697 277.961 9.22699 278.023 9.25 cv
278.082 9.28101 278.125 9.31201 278.152 9.34802 cv
278.176 9.39099 278.188 9.43701 278.191 9.48401 cv
278.191 10.285 li
278.574 9.875 278.965 9.56201 279.363 9.35199 cv
279.758 9.14502 280.176 9.04303 280.609 9.039 cv
281.078 9.04303 281.477 9.12097 281.805 9.27301 cv
282.129 9.43402 282.391 9.64502 282.59 9.90997 cv
282.789 10.18 282.934 10.492 283.023 10.848 cv
283.109 11.207 283.152 11.637 283.156 12.141 cv
cp
f
299.621 9.46899 mo
299.617 9.52698 299.609 9.59802 299.598 9.67999 cv
299.578 9.76202 299.551 9.883 299.512 10.035 cv
297.656 16.324 li
297.629 16.414 297.594 16.488 297.555 16.539 cv
297.512 16.598 297.449 16.641 297.363 16.668 cv
297.277 16.699 297.152 16.715 296.996 16.73 cv
296.832 16.738 296.629 16.746 296.379 16.746 cv
296.121 16.746 295.91 16.738 295.754 16.727 cv
295.59 16.711 295.465 16.691 295.375 16.66 cv
295.281 16.633 295.215 16.59 295.176 16.531 cv
295.133 16.48 295.102 16.41 295.082 16.324 cv
293.914 12.102 li
293.898 12.031 li
293.883 12.102 li
292.809 16.324 li
292.785 16.414 292.754 16.488 292.719 16.539 cv
292.676 16.598 292.609 16.641 292.52 16.668 cv
292.422 16.699 292.297 16.715 292.137 16.73 cv
291.977 16.738 291.77 16.746 291.516 16.746 cv
291.254 16.746 291.043 16.738 290.887 16.727 cv
290.727 16.711 290.602 16.691 290.512 16.66 cv
290.418 16.633 290.352 16.59 290.313 16.531 cv
290.27 16.48 290.238 16.41 290.223 16.324 cv
288.383 10.035 li
288.332 9.88702 288.305 9.77002 288.293 9.68402 cv
288.277 9.60199 288.27 9.52698 288.273 9.46899 cv
288.27 9.41803 288.285 9.375 288.316 9.33197 cv
288.344 9.297 288.395 9.26599 288.473 9.23798 cv
288.547 9.21899 288.648 9.19897 288.773 9.18701 cv
288.898 9.17999 289.059 9.17603 289.254 9.172 cv
289.461 9.17603 289.629 9.17999 289.762 9.18701 cv
289.891 9.19897 289.992 9.21899 290.066 9.242 cv
290.137 9.27002 290.188 9.30499 290.219 9.34802 cv
290.246 9.39502 290.27 9.44897 290.285 9.508 cv
291.664 14.609 li
291.68 14.703 li
291.695 14.609 li
292.988 9.508 li
293 9.44897 293.027 9.39502 293.063 9.34802 cv
293.094 9.30499 293.145 9.27002 293.215 9.242 cv
293.281 9.21899 293.375 9.19897 293.496 9.18701 cv
293.617 9.17999 293.773 9.17603 293.969 9.172 cv
294.16 9.17603 294.316 9.18402 294.438 9.19098 cv
294.555 9.20697 294.648 9.22302 294.723 9.24597 cv
294.789 9.27002 294.84 9.30103 294.871 9.34003 cv
294.898 9.37903 294.922 9.42603 294.938 9.47699 cv
296.324 14.617 li
296.348 14.703 li
296.363 14.609 li
297.688 9.508 li
297.695 9.44897 297.719 9.39502 297.75 9.34802 cv
297.781 9.30499 297.832 9.27002 297.906 9.242 cv
297.977 9.21899 298.074 9.19897 298.199 9.18701 cv
298.32 9.17999 298.48 9.17603 298.676 9.172 cv
298.867 9.17603 299.023 9.17999 299.148 9.18701 cv
299.27 9.19897 299.367 9.21899 299.438 9.23798 cv
299.508 9.26599 299.555 9.297 299.582 9.33197 cv
299.605 9.375 299.617 9.41803 299.621 9.46899 cv
cp
f
302.836 16.434 mo
302.832 16.488 302.816 16.531 302.789 16.57 cv
302.754 16.609 302.699 16.645 302.629 16.668 cv
302.551 16.695 302.453 16.711 302.328 16.727 cv
302.203 16.738 302.043 16.746 301.855 16.746 cv
301.66 16.746 301.504 16.738 301.379 16.727 cv
301.254 16.711 301.152 16.695 301.078 16.668 cv
301 16.645 300.945 16.609 300.918 16.57 cv
300.883 16.531 300.867 16.488 300.871 16.434 cv
300.871 9.5 li
300.867 9.44897 300.883 9.40198 300.918 9.36298 cv
300.945 9.32397 301 9.29303 301.078 9.26202 cv
301.152 9.23798 301.254 9.21503 301.379 9.19501 cv
301.504 9.18402 301.66 9.17603 301.855 9.172 cv
302.043 9.17603 302.203 9.18402 302.328 9.19501 cv
302.453 9.21503 302.551 9.23798 302.629 9.26202 cv
302.699 9.29303 302.754 9.32397 302.789 9.36298 cv
302.816 9.40198 302.832 9.44897 302.836 9.5 cv
cp
302.984 7.12903 mo
302.984 7.52698 302.902 7.80103 302.742 7.94897 cv
302.578 8.10199 302.281 8.17603 301.848 8.172 cv
301.402 8.17603 301.102 8.10199 300.953 7.95697 cv
300.797 7.81201 300.723 7.55103 300.723 7.16803 cv
300.723 6.77301 300.801 6.5 300.961 6.34802 cv
301.117 6.19501 301.418 6.117 301.863 6.117 cv
302.297 6.117 302.594 6.19098 302.75 6.34003 cv
302.906 6.48798 302.984 6.75403 302.984 7.12903 cv
cp
f
308.914 15.75 mo
308.914 15.977 308.898 16.152 308.871 16.273 cv
308.84 16.398 308.801 16.484 308.758 16.531 cv
308.707 16.582 308.641 16.625 308.551 16.664 cv
308.457 16.703 308.348 16.734 308.23 16.766 cv
308.105 16.789 307.973 16.812 307.832 16.832 cv
307.688 16.844 307.547 16.852 307.402 16.855 cv
307.012 16.852 306.672 16.801 306.387 16.707 cv
306.102 16.605 305.867 16.457 305.68 16.25 cv
305.492 16.047 305.352 15.789 305.266 15.477 cv
305.172 15.168 305.129 14.797 305.133 14.367 cv
305.133 10.809 li
304.301 10.809 li
304.199 10.812 304.125 10.75 304.074 10.625 cv
304.02 10.504 303.992 10.301 303.996 10.012 cv
303.992 9.86298 304 9.73401 304.016 9.633 cv
304.027 9.53101 304.047 9.44897 304.074 9.38702 cv
304.098 9.328 304.129 9.28497 304.172 9.258 cv
304.207 9.23401 304.254 9.22302 304.309 9.21899 cv
305.133 9.21899 li
305.133 7.66803 li
305.129 7.62097 305.145 7.57397 305.176 7.52698 cv
305.203 7.48798 305.254 7.453 305.332 7.422 cv
305.406 7.39801 305.508 7.375 305.637 7.35901 cv
305.762 7.34802 305.918 7.34399 306.109 7.34003 cv
306.297 7.34399 306.457 7.34802 306.586 7.35901 cv
306.711 7.375 306.813 7.39801 306.887 7.422 cv
306.957 7.453 307.008 7.48798 307.043 7.52698 cv
307.07 7.57397 307.086 7.62097 307.09 7.66803 cv
307.09 9.21899 li
308.602 9.21899 li
308.652 9.22302 308.699 9.23401 308.738 9.258 cv
308.777 9.28497 308.809 9.328 308.836 9.38702 cv
308.859 9.44897 308.879 9.53101 308.895 9.633 cv
308.906 9.73401 308.914 9.86298 308.914 10.012 cv
308.914 10.301 308.887 10.504 308.836 10.625 cv
308.781 10.75 308.707 10.812 308.609 10.809 cv
307.09 10.809 li
307.09 14.074 li
307.086 14.453 307.145 14.738 307.27 14.926 cv
307.387 15.117 307.602 15.211 307.906 15.211 cv
308.008 15.211 308.102 15.203 308.188 15.184 cv
308.27 15.168 308.344 15.148 308.41 15.121 cv
308.473 15.102 308.527 15.078 308.574 15.059 cv
308.617 15.043 308.656 15.035 308.695 15.031 cv
308.723 15.035 308.754 15.043 308.785 15.059 cv
308.813 15.078 308.832 15.117 308.852 15.168 cv
308.863 15.227 308.879 15.301 308.895 15.391 cv
308.906 15.488 308.914 15.605 308.914 15.75 cv
cp
f
316.977 16.434 mo
316.973 16.488 316.957 16.531 316.93 16.57 cv
316.895 16.609 316.844 16.645 316.773 16.668 cv
316.699 16.695 316.598 16.711 316.473 16.727 cv
316.344 16.738 316.188 16.746 316.004 16.746 cv
315.809 16.746 315.648 16.738 315.523 16.727 cv
315.395 16.711 315.293 16.695 315.223 16.668 cv
315.145 16.645 315.094 16.609 315.066 16.57 cv
315.031 16.531 315.016 16.488 315.02 16.434 cv
315.02 12.469 li
315.016 12.133 314.992 11.867 314.945 11.672 cv
314.895 11.48 314.82 11.316 314.73 11.18 cv
314.637 11.043 314.52 10.937 314.371 10.859 cv
314.223 10.785 314.047 10.746 313.852 10.746 cv
313.598 10.746 313.348 10.84 313.094 11.02 cv
312.84 11.203 312.574 11.465 312.301 11.812 cv
312.301 16.434 li
312.297 16.488 312.281 16.531 312.254 16.57 cv
312.219 16.609 312.164 16.645 312.094 16.668 cv
312.016 16.695 311.918 16.711 311.793 16.727 cv
311.668 16.738 311.508 16.746 311.32 16.746 cv
311.125 16.746 310.969 16.738 310.844 16.727 cv
310.719 16.711 310.617 16.695 310.543 16.668 cv
310.465 16.645 310.41 16.609 310.383 16.57 cv
310.348 16.531 310.332 16.488 310.336 16.434 cv
310.336 6.18701 li
310.332 6.13702 310.348 6.09003 310.383 6.047 cv
310.41 6.008 310.465 5.97302 310.543 5.94098 cv
310.617 5.914 310.719 5.89502 310.844 5.875 cv
310.969 5.86298 311.125 5.85498 311.32 5.85199 cv
311.508 5.85498 311.668 5.86298 311.793 5.875 cv
311.918 5.89502 312.016 5.914 312.094 5.94098 cv
312.164 5.97302 312.219 6.008 312.254 6.047 cv
312.281 6.09003 312.297 6.13702 312.301 6.18701 cv
312.301 10.027 li
312.637 9.69897 312.98 9.453 313.332 9.28497 cv
313.68 9.125 314.047 9.04303 314.43 9.039 cv
314.898 9.04303 315.297 9.12097 315.625 9.27301 cv
315.949 9.43402 316.211 9.64502 316.41 9.914 cv
316.609 10.184 316.754 10.5 316.844 10.859 cv
316.93 11.223 316.973 11.66 316.977 12.172 cv
cp
f
328.656 15.898 mo
328.652 16.051 328.648 16.176 328.637 16.273 cv
328.621 16.379 328.602 16.461 328.578 16.52 cv
328.555 16.586 328.523 16.633 328.484 16.656 cv
328.445 16.687 328.402 16.699 328.355 16.699 cv
323.289 16.699 li
323.113 16.699 322.969 16.648 322.855 16.547 cv
322.734 16.445 322.676 16.281 322.68 16.051 cv
322.68 7.26202 li
322.676 7.03497 322.734 6.87097 322.855 6.76599 cv
322.969 6.66803 323.113 6.617 323.289 6.61298 cv
328.324 6.61298 li
328.367 6.617 328.41 6.62903 328.449 6.65198 cv
328.484 6.67999 328.516 6.72699 328.543 6.789 cv
328.566 6.85901 328.582 6.94098 328.598 7.039 cv
328.605 7.14502 328.613 7.27301 328.617 7.42603 cv
328.613 7.57397 328.605 7.69897 328.598 7.797 cv
328.582 7.90198 328.566 7.98401 328.543 8.04303 cv
328.516 8.10498 328.484 8.14801 328.449 8.17603 cv
328.41 8.20697 328.367 8.22302 328.324 8.21899 cv
324.723 8.21899 li
324.723 10.684 li
327.77 10.684 li
327.816 10.687 327.859 10.703 327.898 10.727 cv
327.938 10.758 327.969 10.801 327.996 10.859 cv
328.02 10.922 328.039 11.004 328.055 11.102 cv
328.066 11.203 328.074 11.324 328.074 11.469 cv
328.074 11.621 328.066 11.746 328.055 11.844 cv
328.039 11.945 328.02 12.023 327.996 12.082 cv
327.969 12.145 327.938 12.187 327.898 12.211 cv
327.859 12.238 327.816 12.254 327.77 12.25 cv
324.723 12.25 li
324.723 15.094 li
328.355 15.094 li
328.402 15.094 328.445 15.109 328.484 15.137 cv
328.523 15.168 328.555 15.215 328.578 15.273 cv
328.602 15.34 328.621 15.422 328.637 15.52 cv
328.648 15.625 328.652 15.75 328.656 15.898 cv
cp
f
332.313 16.434 mo
332.309 16.488 332.293 16.531 332.266 16.57 cv
332.23 16.609 332.176 16.645 332.105 16.668 cv
332.027 16.695 331.93 16.711 331.805 16.727 cv
331.68 16.738 331.52 16.746 331.332 16.746 cv
331.137 16.746 330.98 16.738 330.855 16.727 cv
330.73 16.711 330.629 16.695 330.555 16.668 cv
330.477 16.645 330.422 16.609 330.395 16.57 cv
330.359 16.531 330.344 16.488 330.348 16.434 cv
330.348 9.5 li
330.344 9.44897 330.359 9.40198 330.395 9.36298 cv
330.422 9.32397 330.477 9.29303 330.555 9.26202 cv
330.629 9.23798 330.73 9.21503 330.855 9.19501 cv
330.98 9.18402 331.137 9.17603 331.332 9.172 cv
331.52 9.17603 331.68 9.18402 331.805 9.19501 cv
331.93 9.21503 332.027 9.23798 332.105 9.26202 cv
332.176 9.29303 332.23 9.32397 332.266 9.36298 cv
332.293 9.40198 332.309 9.44897 332.313 9.5 cv
cp
332.461 7.12903 mo
332.461 7.52698 332.379 7.80103 332.219 7.94897 cv
332.055 8.10199 331.758 8.17603 331.324 8.172 cv
330.879 8.17603 330.578 8.10199 330.43 7.95697 cv
330.273 7.81201 330.199 7.55103 330.199 7.16803 cv
330.199 6.77301 330.277 6.5 330.438 6.34802 cv
330.594 6.19501 330.895 6.117 331.34 6.117 cv
331.773 6.117 332.07 6.19098 332.227 6.34003 cv
332.383 6.48798 332.461 6.75403 332.461 7.12903 cv
cp
f
340.539 9.96503 mo
340.535 10.219 340.508 10.402 340.453 10.52 cv
340.395 10.641 340.324 10.699 340.246 10.699 cv
339.426 10.699 li
339.539 10.824 339.621 10.969 339.672 11.125 cv
339.719 11.285 339.742 11.449 339.746 11.617 cv
339.742 12.027 339.676 12.387 339.543 12.699 cv
339.406 13.016 339.211 13.281 338.961 13.492 cv
338.707 13.711 338.406 13.875 338.051 13.984 cv
337.691 14.102 337.293 14.156 336.863 14.152 cv
336.637 14.156 336.426 14.129 336.223 14.07 cv
336.02 14.02 335.863 13.957 335.754 13.879 cv
335.691 13.949 335.633 14.027 335.586 14.121 cv
335.535 14.215 335.512 14.32 335.516 14.43 cv
335.512 14.586 335.578 14.707 335.711 14.801 cv
335.84 14.898 336.027 14.953 336.27 14.961 cv
337.961 15.023 li
338.355 15.039 338.707 15.098 339.016 15.191 cv
339.324 15.293 339.586 15.426 339.797 15.598 cv
340.008 15.773 340.168 15.984 340.277 16.227 cv
340.387 16.473 340.441 16.746 340.445 17.059 cv
340.441 17.395 340.367 17.719 340.219 18.027 cv
340.07 18.328 339.844 18.59 339.543 18.816 cv
339.238 19.035 338.859 19.215 338.406 19.348 cv
337.949 19.477 337.418 19.539 336.816 19.543 cv
336.219 19.539 335.715 19.492 335.297 19.402 cv
334.879 19.305 334.535 19.176 334.27 19.012 cv
334 18.844 333.805 18.645 333.688 18.418 cv
333.563 18.184 333.504 17.93 333.504 17.656 cv
333.504 17.484 333.523 17.324 333.57 17.168 cv
333.609 17.012 333.676 16.859 333.766 16.719 cv
333.848 16.574 333.953 16.441 334.078 16.309 cv
334.203 16.18 334.344 16.055 334.508 15.934 cv
334.281 15.82 334.109 15.66 333.988 15.449 cv
333.867 15.246 333.809 15.02 333.809 14.773 cv
333.809 14.473 333.875 14.195 334.016 13.937 cv
334.152 13.687 334.336 13.457 334.563 13.254 cv
334.379 13.074 334.234 12.859 334.125 12.602 cv
334.016 12.352 333.961 12.031 333.965 11.648 cv
333.961 11.246 334.031 10.887 334.176 10.562 cv
334.316 10.246 334.516 9.97699 334.773 9.75403 cv
335.027 9.53497 335.332 9.36298 335.684 9.24597 cv
336.035 9.12903 336.426 9.07001 336.855 9.07001 cv
337.074 9.07001 337.281 9.086 337.48 9.10901 cv
337.68 9.14099 337.867 9.17603 338.039 9.21899 cv
340.246 9.21899 li
340.328 9.22302 340.398 9.28101 340.457 9.39099 cv
340.508 9.508 340.535 9.69897 340.539 9.96503 cv
cp
338.023 11.609 mo
338.02 11.238 337.918 10.949 337.711 10.738 cv
337.5 10.535 337.207 10.43 336.832 10.426 cv
336.637 10.43 336.465 10.461 336.324 10.523 cv
336.176 10.59 336.055 10.68 335.961 10.789 cv
335.859 10.902 335.789 11.031 335.746 11.18 cv
335.695 11.328 335.672 11.484 335.676 11.641 cv
335.672 12 335.777 12.277 335.988 12.48 cv
336.195 12.687 336.484 12.793 336.855 12.789 cv
337.051 12.793 337.219 12.762 337.367 12.695 cv
337.508 12.637 337.629 12.551 337.73 12.437 cv
337.824 12.332 337.898 12.203 337.949 12.059 cv
337.996 11.918 338.02 11.77 338.023 11.609 cv
cp
338.484 17.16 mo
338.484 16.922 338.391 16.746 338.203 16.621 cv
338.016 16.5 337.758 16.43 337.43 16.418 cv
336.035 16.379 li
335.898 16.48 335.789 16.574 335.711 16.664 cv
335.629 16.754 335.566 16.84 335.52 16.926 cv
335.469 17.008 335.434 17.09 335.422 17.168 cv
335.402 17.246 335.395 17.324 335.398 17.41 cv
335.395 17.664 335.527 17.863 335.789 18 cv
336.051 18.133 336.422 18.199 336.902 18.203 cv
337.195 18.199 337.441 18.168 337.648 18.113 cv
337.848 18.051 338.012 17.973 338.141 17.875 cv
338.262 17.773 338.352 17.664 338.406 17.543 cv
338.457 17.422 338.484 17.293 338.484 17.16 cv
cp
f
348.48 16.434 mo
348.477 16.488 348.461 16.531 348.434 16.57 cv
348.398 16.609 348.348 16.645 348.277 16.668 cv
348.203 16.695 348.102 16.711 347.977 16.727 cv
347.848 16.738 347.691 16.746 347.508 16.746 cv
347.313 16.746 347.152 16.738 347.027 16.727 cv
346.898 16.711 346.797 16.695 346.727 16.668 cv
346.648 16.645 346.598 16.609 346.57 16.57 cv
346.535 16.531 346.52 16.488 346.523 16.434 cv
346.523 12.469 li
346.52 12.133 346.496 11.867 346.449 11.672 cv
346.398 11.48 346.324 11.316 346.234 11.18 cv
346.141 11.043 346.023 10.937 345.875 10.859 cv
345.727 10.785 345.551 10.746 345.355 10.746 cv
345.102 10.746 344.852 10.84 344.598 11.02 cv
344.344 11.203 344.078 11.465 343.805 11.812 cv
343.805 16.434 li
343.801 16.488 343.785 16.531 343.758 16.57 cv
343.723 16.609 343.668 16.645 343.598 16.668 cv
343.52 16.695 343.422 16.711 343.297 16.727 cv
343.172 16.738 343.012 16.746 342.824 16.746 cv
342.629 16.746 342.473 16.738 342.348 16.727 cv
342.223 16.711 342.121 16.695 342.047 16.668 cv
341.969 16.645 341.914 16.609 341.887 16.57 cv
341.852 16.531 341.836 16.488 341.84 16.434 cv
341.84 6.18701 li
341.836 6.13702 341.852 6.09003 341.887 6.047 cv
341.914 6.008 341.969 5.97302 342.047 5.94098 cv
342.121 5.914 342.223 5.89502 342.348 5.875 cv
342.473 5.86298 342.629 5.85498 342.824 5.85199 cv
343.012 5.85498 343.172 5.86298 343.297 5.875 cv
343.422 5.89502 343.52 5.914 343.598 5.94098 cv
343.668 5.97302 343.723 6.008 343.758 6.047 cv
343.785 6.09003 343.801 6.13702 343.805 6.18701 cv
343.805 10.027 li
344.141 9.69897 344.484 9.453 344.836 9.28497 cv
345.184 9.125 345.551 9.04303 345.934 9.039 cv
346.402 9.04303 346.801 9.12097 347.129 9.27301 cv
347.453 9.43402 347.715 9.64502 347.914 9.914 cv
348.113 10.184 348.258 10.5 348.348 10.859 cv
348.434 11.223 348.477 11.66 348.48 12.172 cv
cp
f
354.402 15.75 mo
354.402 15.977 354.387 16.152 354.359 16.273 cv
354.328 16.398 354.289 16.484 354.246 16.531 cv
354.195 16.582 354.129 16.625 354.039 16.664 cv
353.945 16.703 353.836 16.734 353.719 16.766 cv
353.594 16.789 353.461 16.812 353.32 16.832 cv
353.176 16.844 353.035 16.852 352.891 16.855 cv
352.5 16.852 352.16 16.801 351.875 16.707 cv
351.59 16.605 351.355 16.457 351.168 16.25 cv
350.98 16.047 350.84 15.789 350.754 15.477 cv
350.66 15.168 350.617 14.797 350.621 14.367 cv
350.621 10.809 li
349.789 10.809 li
349.688 10.812 349.613 10.75 349.563 10.625 cv
349.508 10.504 349.48 10.301 349.484 10.012 cv
349.48 9.86298 349.488 9.73401 349.504 9.633 cv
349.516 9.53101 349.535 9.44897 349.563 9.38702 cv
349.586 9.328 349.617 9.28497 349.66 9.258 cv
349.695 9.23401 349.742 9.22302 349.797 9.21899 cv
350.621 9.21899 li
350.621 7.66803 li
350.617 7.62097 350.633 7.57397 350.664 7.52698 cv
350.691 7.48798 350.742 7.453 350.82 7.422 cv
350.895 7.39801 350.996 7.375 351.125 7.35901 cv
351.25 7.34802 351.406 7.34399 351.598 7.34003 cv
351.785 7.34399 351.945 7.34802 352.074 7.35901 cv
352.199 7.375 352.301 7.39801 352.375 7.422 cv
352.445 7.453 352.496 7.48798 352.531 7.52698 cv
352.559 7.57397 352.574 7.62097 352.578 7.66803 cv
352.578 9.21899 li
354.09 9.21899 li
354.141 9.22302 354.188 9.23401 354.227 9.258 cv
354.266 9.28497 354.297 9.328 354.324 9.38702 cv
354.348 9.44897 354.367 9.53101 354.383 9.633 cv
354.395 9.73401 354.402 9.86298 354.402 10.012 cv
354.402 10.301 354.375 10.504 354.324 10.625 cv
354.27 10.75 354.195 10.812 354.098 10.809 cv
352.578 10.809 li
352.578 14.074 li
352.574 14.453 352.633 14.738 352.758 14.926 cv
352.875 15.117 353.09 15.211 353.395 15.211 cv
353.496 15.211 353.59 15.203 353.676 15.184 cv
353.758 15.168 353.832 15.148 353.898 15.121 cv
353.961 15.102 354.016 15.078 354.063 15.059 cv
354.105 15.043 354.145 15.035 354.184 15.031 cv
354.211 15.035 354.242 15.043 354.273 15.059 cv
354.301 15.078 354.32 15.117 354.34 15.168 cv
354.352 15.227 354.367 15.301 354.383 15.391 cv
354.395 15.488 354.402 15.605 354.402 15.75 cv
cp
f
366.336 7.45697 mo
366.332 7.61298 366.324 7.742 366.316 7.84399 cv
366.301 7.953 366.281 8.039 366.258 8.10199 cv
366.227 8.16803 366.195 8.21503 366.16 8.242 cv
366.117 8.27698 366.074 8.29303 366.031 8.289 cv
363.508 8.289 li
363.508 16.418 li
363.508 16.473 363.488 16.52 363.457 16.559 cv
363.418 16.602 363.363 16.637 363.289 16.66 cv
363.207 16.687 363.102 16.707 362.973 16.723 cv
362.836 16.738 362.672 16.746 362.477 16.746 cv
362.281 16.746 362.117 16.738 361.984 16.723 cv
361.852 16.707 361.746 16.687 361.668 16.66 cv
361.59 16.637 361.531 16.602 361.5 16.559 cv
361.461 16.52 361.445 16.473 361.449 16.418 cv
361.449 8.289 li
358.926 8.289 li
358.871 8.29303 358.824 8.27698 358.793 8.242 cv
358.754 8.21503 358.723 8.16803 358.699 8.10199 cv
358.668 8.039 358.648 7.953 358.641 7.84399 cv
358.625 7.742 358.621 7.61298 358.621 7.45697 cv
358.621 7.30499 358.625 7.172 358.641 7.05902 cv
358.648 6.953 358.668 6.86298 358.699 6.797 cv
358.723 6.73401 358.754 6.68701 358.793 6.65601 cv
358.824 6.62903 358.871 6.617 358.926 6.61298 cv
366.031 6.61298 li
366.074 6.617 366.117 6.62903 366.16 6.65601 cv
366.195 6.68701 366.227 6.73401 366.258 6.797 cv
366.281 6.86298 366.301 6.953 366.316 7.05902 cv
366.324 7.172 366.332 7.30499 366.336 7.45697 cv
cp
f
374.051 16.434 mo
374.047 16.488 374.031 16.531 374.004 16.57 cv
373.969 16.609 373.918 16.645 373.848 16.668 cv
373.773 16.695 373.672 16.711 373.547 16.727 cv
373.418 16.738 373.262 16.746 373.078 16.746 cv
372.883 16.746 372.723 16.738 372.598 16.727 cv
372.469 16.711 372.367 16.695 372.297 16.668 cv
372.219 16.645 372.168 16.609 372.141 16.57 cv
372.105 16.531 372.09 16.488 372.094 16.434 cv
372.094 12.469 li
372.09 12.133 372.066 11.867 372.02 11.672 cv
371.969 11.48 371.895 11.316 371.805 11.18 cv
371.711 11.043 371.594 10.937 371.445 10.859 cv
371.297 10.785 371.121 10.746 370.926 10.746 cv
370.672 10.746 370.422 10.84 370.168 11.02 cv
369.914 11.203 369.648 11.465 369.375 11.812 cv
369.375 16.434 li
369.371 16.488 369.355 16.531 369.328 16.57 cv
369.293 16.609 369.238 16.645 369.168 16.668 cv
369.09 16.695 368.992 16.711 368.867 16.727 cv
368.742 16.738 368.582 16.746 368.395 16.746 cv
368.199 16.746 368.043 16.738 367.918 16.727 cv
367.793 16.711 367.691 16.695 367.617 16.668 cv
367.539 16.645 367.484 16.609 367.457 16.57 cv
367.422 16.531 367.406 16.488 367.41 16.434 cv
367.41 6.18701 li
367.406 6.13702 367.422 6.09003 367.457 6.047 cv
367.484 6.008 367.539 5.97302 367.617 5.94098 cv
367.691 5.914 367.793 5.89502 367.918 5.875 cv
368.043 5.86298 368.199 5.85498 368.395 5.85199 cv
368.582 5.85498 368.742 5.86298 368.867 5.875 cv
368.992 5.89502 369.09 5.914 369.168 5.94098 cv
369.238 5.97302 369.293 6.008 369.328 6.047 cv
369.355 6.09003 369.371 6.13702 369.375 6.18701 cv
369.375 10.027 li
369.711 9.69897 370.055 9.453 370.406 9.28497 cv
370.754 9.125 371.121 9.04303 371.504 9.039 cv
371.973 9.04303 372.371 9.12097 372.699 9.27301 cv
373.023 9.43402 373.285 9.64502 373.484 9.914 cv
373.684 10.184 373.828 10.5 373.918 10.859 cv
374.004 11.223 374.047 11.66 374.051 12.172 cv
cp
f
380.449 10.129 mo
380.449 10.32 380.441 10.473 380.434 10.59 cv
380.418 10.711 380.402 10.805 380.387 10.871 cv
380.363 10.941 380.336 10.988 380.305 11.012 cv
380.266 11.039 380.223 11.051 380.176 11.051 cv
380.129 11.051 380.082 11.043 380.035 11.023 cv
379.98 11.008 379.922 10.988 379.859 10.965 cv
379.789 10.945 379.719 10.926 379.645 10.906 cv
379.563 10.891 379.477 10.883 379.387 10.879 cv
379.273 10.883 379.164 10.902 379.059 10.945 cv
378.949 10.992 378.836 11.062 378.723 11.152 cv
378.602 11.246 378.48 11.371 378.355 11.523 cv
378.227 11.684 378.09 11.875 377.945 12.102 cv
377.945 16.434 li
377.941 16.488 377.926 16.531 377.898 16.57 cv
377.863 16.609 377.809 16.645 377.738 16.668 cv
377.66 16.695 377.563 16.711 377.438 16.727 cv
377.313 16.738 377.152 16.746 376.965 16.746 cv
376.77 16.746 376.613 16.738 376.488 16.727 cv
376.363 16.711 376.262 16.695 376.188 16.668 cv
376.109 16.645 376.055 16.609 376.027 16.57 cv
375.992 16.531 375.977 16.488 375.98 16.434 cv
375.98 9.48401 li
375.977 9.43701 375.992 9.39099 376.02 9.34802 cv
376.043 9.31201 376.09 9.28101 376.16 9.25 cv
376.227 9.22699 376.313 9.20697 376.422 9.19098 cv
376.527 9.18402 376.66 9.17603 376.824 9.172 cv
376.988 9.17603 377.125 9.18402 377.234 9.19098 cv
377.34 9.20697 377.426 9.22699 377.488 9.25 cv
377.547 9.28101 377.59 9.31201 377.617 9.34802 cv
377.641 9.39099 377.652 9.43701 377.656 9.48401 cv
377.656 10.348 li
377.836 10.09 378.008 9.87903 378.172 9.70697 cv
378.328 9.54303 378.484 9.40601 378.633 9.30499 cv
378.777 9.20697 378.922 9.14099 379.066 9.09802 cv
379.211 9.06201 379.355 9.04303 379.504 9.039 cv
379.57 9.04303 379.645 9.047 379.723 9.05103 cv
379.801 9.06201 379.879 9.07397 379.965 9.09003 cv
380.043 9.10901 380.117 9.12903 380.184 9.15198 cv
380.242 9.17603 380.289 9.203 380.32 9.22699 cv
380.348 9.258 380.367 9.28497 380.383 9.31201 cv
380.395 9.34802 380.406 9.39099 380.418 9.44098 cv
380.426 9.5 380.434 9.58197 380.441 9.68701 cv
380.445 9.797 380.449 9.94501 380.449 10.129 cv
cp
f
387.891 12.758 mo
387.887 12.996 387.836 13.172 387.73 13.285 cv
387.621 13.402 387.473 13.461 387.293 13.457 cv
383.059 13.457 li
383.055 13.758 383.09 14.027 383.164 14.266 cv
383.23 14.508 383.344 14.711 383.5 14.879 cv
383.652 15.051 383.848 15.18 384.09 15.266 cv
384.328 15.355 384.617 15.398 384.961 15.398 cv
385.301 15.398 385.602 15.375 385.863 15.324 cv
386.121 15.277 386.348 15.223 386.539 15.16 cv
386.727 15.102 386.883 15.047 387.012 14.996 cv
387.133 14.949 387.234 14.926 387.316 14.922 cv
387.359 14.926 387.398 14.934 387.434 14.949 cv
387.461 14.969 387.488 15 387.508 15.047 cv
387.527 15.094 387.539 15.16 387.551 15.246 cv
387.555 15.332 387.559 15.441 387.563 15.57 cv
387.559 15.687 387.559 15.785 387.555 15.863 cv
387.547 15.945 387.539 16.012 387.531 16.066 cv
387.52 16.125 387.504 16.176 387.484 16.211 cv
387.465 16.254 387.438 16.289 387.406 16.324 cv
387.371 16.363 387.277 16.414 387.129 16.473 cv
386.973 16.539 386.781 16.602 386.551 16.656 cv
386.313 16.719 386.043 16.766 385.746 16.812 cv
385.441 16.852 385.121 16.875 384.781 16.879 cv
384.16 16.875 383.617 16.801 383.156 16.645 cv
382.688 16.492 382.301 16.254 381.992 15.937 cv
381.676 15.621 381.441 15.223 381.293 14.738 cv
381.137 14.258 381.063 13.691 381.066 13.035 cv
381.063 12.422 381.141 11.863 381.305 11.367 cv
381.461 10.871 381.695 10.453 382.008 10.105 cv
382.313 9.76202 382.688 9.49597 383.125 9.31201 cv
383.563 9.133 384.055 9.04303 384.609 9.039 cv
385.188 9.04303 385.688 9.12903 386.102 9.297 cv
386.516 9.47302 386.852 9.711 387.117 10.012 cv
387.379 10.316 387.574 10.676 387.703 11.09 cv
387.824 11.508 387.887 11.957 387.891 12.445 cv
cp
385.988 12.195 mo
386 11.645 385.891 11.211 385.656 10.898 cv
385.422 10.586 385.055 10.43 384.563 10.426 cv
384.313 10.43 384.098 10.477 383.914 10.566 cv
383.727 10.664 383.574 10.789 383.453 10.945 cv
383.328 11.105 383.234 11.293 383.172 11.508 cv
383.105 11.723 383.066 11.953 383.059 12.195 cv
cp
f
395.422 16.457 mo
395.418 16.535 395.391 16.59 395.344 16.629 cv
395.289 16.672 395.207 16.699 395.098 16.719 cv
394.98 16.734 394.816 16.746 394.602 16.746 cv
394.363 16.746 394.191 16.734 394.09 16.719 cv
393.98 16.699 393.906 16.672 393.867 16.629 cv
393.82 16.59 393.801 16.535 393.801 16.457 cv
393.801 15.906 li
393.512 16.215 393.184 16.453 392.82 16.621 cv
392.453 16.793 392.047 16.875 391.602 16.879 cv
391.23 16.875 390.891 16.828 390.582 16.734 cv
390.273 16.641 390.008 16.5 389.781 16.305 cv
389.555 16.117 389.379 15.883 389.254 15.602 cv
389.129 15.324 389.066 14.996 389.07 14.617 cv
389.066 14.219 389.145 13.867 389.305 13.562 cv
389.461 13.266 389.699 13.02 390.016 12.824 cv
390.328 12.633 390.719 12.488 391.188 12.391 cv
391.656 12.301 392.199 12.254 392.816 12.25 cv
393.496 12.25 li
393.496 11.828 li
393.496 11.613 393.473 11.422 393.43 11.258 cv
393.383 11.098 393.309 10.961 393.211 10.848 cv
393.105 10.742 392.973 10.66 392.805 10.605 cv
392.633 10.555 392.422 10.531 392.18 10.527 cv
391.848 10.531 391.555 10.566 391.301 10.637 cv
391.039 10.711 390.813 10.793 390.617 10.879 cv
390.418 10.973 390.254 11.051 390.125 11.121 cv
389.988 11.195 389.879 11.234 389.801 11.23 cv
389.738 11.234 389.688 11.215 389.648 11.176 cv
389.602 11.141 389.566 11.09 389.539 11.02 cv
389.508 10.957 389.484 10.871 389.473 10.77 cv
389.453 10.672 389.445 10.562 389.449 10.441 cv
389.445 10.281 389.461 10.156 389.488 10.059 cv
389.512 9.96899 389.559 9.883 389.637 9.80499 cv
389.707 9.72998 389.836 9.64801 390.02 9.55902 cv
390.199 9.46899 390.41 9.383 390.656 9.30499 cv
390.898 9.22699 391.168 9.164 391.457 9.11298 cv
391.746 9.06598 392.043 9.04303 392.352 9.039 cv
392.895 9.04303 393.359 9.09399 393.746 9.19897 cv
394.133 9.30902 394.453 9.47302 394.703 9.69098 cv
394.953 9.90997 395.133 10.195 395.25 10.543 cv
395.359 10.895 395.418 11.309 395.422 11.781 cv
cp
393.496 13.48 mo
392.746 13.48 li
392.43 13.484 392.16 13.508 391.938 13.551 cv
391.711 13.602 391.527 13.672 391.391 13.762 cv
391.246 13.859 391.145 13.973 391.082 14.102 cv
391.016 14.238 390.98 14.387 390.984 14.555 cv
390.98 14.848 391.074 15.078 391.262 15.242 cv
391.445 15.41 391.703 15.492 392.031 15.492 cv
392.305 15.492 392.555 15.422 392.789 15.281 cv
393.016 15.141 393.254 14.937 393.496 14.664 cv
cp
f
404.008 16.434 mo
404.004 16.496 403.992 16.543 403.969 16.578 cv
403.941 16.621 403.895 16.652 403.836 16.676 cv
403.77 16.699 403.688 16.715 403.582 16.73 cv
403.477 16.738 403.344 16.746 403.191 16.746 cv
403.02 16.746 402.887 16.738 402.785 16.73 cv
402.68 16.715 402.594 16.699 402.531 16.676 cv
402.465 16.652 402.418 16.621 402.391 16.578 cv
402.359 16.543 402.344 16.496 402.348 16.434 cv
402.348 15.664 li
401.988 16.051 401.613 16.348 401.223 16.559 cv
400.824 16.77 400.391 16.875 399.918 16.879 cv
399.383 16.875 398.934 16.773 398.57 16.57 cv
398.203 16.367 397.906 16.094 397.676 15.742 cv
397.441 15.398 397.273 14.992 397.172 14.523 cv
397.07 14.062 397.02 13.57 397.02 13.051 cv
397.02 12.437 397.082 11.883 397.215 11.387 cv
397.344 10.895 397.539 10.473 397.797 10.125 cv
398.051 9.77698 398.367 9.51202 398.746 9.32001 cv
399.125 9.13702 399.563 9.04303 400.059 9.039 cv
400.445 9.04303 400.797 9.12097 401.117 9.27698 cv
401.43 9.43701 401.746 9.66803 402.059 9.97302 cv
402.059 6.211 li
402.059 6.15997 402.07 6.11298 402.102 6.07001 cv
402.125 6.03101 402.18 5.99597 402.258 5.96503 cv
402.332 5.93701 402.43 5.91803 402.559 5.89801 cv
402.68 5.88702 402.84 5.87903 403.035 5.875 cv
403.227 5.87903 403.383 5.88702 403.508 5.89801 cv
403.629 5.91803 403.73 5.93701 403.805 5.96503 cv
403.875 5.99597 403.926 6.03101 403.961 6.07001 cv
403.988 6.11298 404.004 6.15997 404.008 6.211 cv
cp
402.059 11.789 mo
401.777 11.437 401.508 11.168 401.254 10.98 cv
400.992 10.793 400.723 10.699 400.445 10.699 cv
400.191 10.699 399.973 10.766 399.789 10.891 cv
399.602 11.023 399.453 11.191 399.344 11.402 cv
399.23 11.613 399.148 11.852 399.094 12.113 cv
399.039 12.379 399.012 12.648 399.012 12.918 cv
399.012 13.215 399.035 13.496 399.082 13.77 cv
399.129 14.047 399.203 14.293 399.313 14.508 cv
399.414 14.723 399.559 14.895 399.738 15.023 cv
399.914 15.156 400.137 15.223 400.406 15.219 cv
400.539 15.223 400.668 15.203 400.801 15.16 cv
400.926 15.125 401.059 15.062 401.191 14.969 cv
401.324 14.883 401.461 14.766 401.602 14.621 cv
401.742 14.48 401.895 14.305 402.059 14.098 cv
cp
f
410.832 14.469 mo
410.828 14.867 410.754 15.215 410.609 15.516 cv
410.461 15.816 410.254 16.07 409.984 16.27 cv
409.711 16.477 409.391 16.625 409.023 16.727 cv
408.656 16.824 408.254 16.875 407.824 16.879 cv
407.559 16.875 407.313 16.855 407.078 16.82 cv
406.844 16.777 406.633 16.73 406.445 16.672 cv
406.258 16.613 406.102 16.551 405.977 16.488 cv
405.852 16.426 405.758 16.367 405.703 16.312 cv
405.645 16.258 405.602 16.176 405.574 16.059 cv
405.539 15.945 405.523 15.77 405.527 15.539 cv
405.523 15.391 405.531 15.27 405.543 15.176 cv
405.551 15.086 405.566 15.016 405.59 14.957 cv
405.609 14.906 405.633 14.867 405.668 14.848 cv
405.695 14.832 405.734 14.824 405.781 14.82 cv
405.836 14.824 405.922 14.855 406.035 14.918 cv
406.145 14.984 406.281 15.059 406.453 15.133 cv
406.617 15.215 406.813 15.285 407.031 15.352 cv
407.25 15.422 407.5 15.457 407.785 15.453 cv
407.961 15.457 408.117 15.437 408.258 15.398 cv
408.391 15.363 408.512 15.312 408.617 15.242 cv
408.715 15.176 408.789 15.09 408.844 14.984 cv
408.891 14.883 408.918 14.762 408.922 14.625 cv
408.918 14.469 408.871 14.336 408.777 14.227 cv
408.684 14.117 408.555 14.02 408.398 13.934 cv
408.234 13.852 408.055 13.773 407.859 13.699 cv
407.656 13.629 407.453 13.551 407.242 13.457 cv
407.031 13.371 406.824 13.27 406.629 13.152 cv
406.426 13.043 406.246 12.902 406.09 12.734 cv
405.926 12.57 405.801 12.371 405.707 12.133 cv
405.613 11.902 405.566 11.621 405.566 11.289 cv
405.566 10.961 405.629 10.656 405.758 10.375 cv
405.887 10.102 406.074 9.86298 406.32 9.664 cv
406.563 9.46899 406.859 9.31598 407.211 9.203 cv
407.559 9.09802 407.953 9.04303 408.395 9.039 cv
408.609 9.04303 408.82 9.05902 409.027 9.086 cv
409.23 9.12097 409.418 9.15997 409.586 9.203 cv
409.75 9.25403 409.891 9.30499 410.008 9.35498 cv
410.121 9.414 410.203 9.461 410.254 9.49597 cv
410.301 9.539 410.336 9.578 410.359 9.61298 cv
410.379 9.65601 410.391 9.703 410.402 9.75403 cv
410.41 9.80902 410.422 9.875 410.43 9.953 cv
410.438 10.039 410.441 10.137 410.441 10.254 cv
410.441 10.395 410.438 10.512 410.43 10.598 cv
410.422 10.691 410.406 10.762 410.391 10.809 cv
410.371 10.863 410.348 10.898 410.32 10.914 cv
410.285 10.937 410.25 10.945 410.211 10.941 cv
410.16 10.945 410.086 10.918 409.992 10.859 cv
409.891 10.809 409.77 10.75 409.621 10.684 cv
409.473 10.625 409.301 10.566 409.105 10.508 cv
408.91 10.457 408.688 10.43 408.441 10.426 cv
408.262 10.43 408.109 10.449 407.98 10.48 cv
407.848 10.52 407.738 10.57 407.66 10.637 cv
407.574 10.707 407.512 10.785 407.473 10.875 cv
407.426 10.969 407.406 11.066 407.41 11.168 cv
407.406 11.328 407.457 11.465 407.559 11.57 cv
407.656 11.684 407.785 11.777 407.949 11.859 cv
408.109 11.945 408.293 12.023 408.5 12.094 cv
408.703 12.168 408.91 12.25 409.121 12.332 cv
409.328 12.422 409.535 12.52 409.746 12.633 cv
409.949 12.746 410.133 12.887 410.293 13.051 cv
410.453 13.219 410.582 13.418 410.684 13.648 cv
410.777 13.883 410.828 14.156 410.832 14.469 cv
cp
f
419.605 12.781 mo
419.602 13.082 419.574 13.293 419.52 13.41 cv
419.461 13.535 419.371 13.594 419.246 13.59 cv
416.004 13.59 li
415.875 13.594 415.781 13.531 415.727 13.406 cv
415.664 13.285 415.637 13.078 415.641 12.781 cv
415.637 12.492 415.664 12.285 415.727 12.164 cv
415.781 12.047 415.875 11.988 416.004 11.984 cv
419.246 11.984 li
419.309 11.988 419.359 12 419.406 12.023 cv
419.445 12.051 419.484 12.098 419.52 12.156 cv
419.547 12.223 419.57 12.305 419.586 12.406 cv
419.598 12.512 419.602 12.637 419.605 12.781 cv
cp
f
430.34 15.844 mo
430.336 16 430.332 16.133 430.32 16.234 cv
430.305 16.344 430.285 16.43 430.262 16.5 cv
430.234 16.57 430.199 16.621 430.164 16.652 cv
430.121 16.684 430.078 16.699 430.027 16.699 cv
425.406 16.699 li
425.23 16.699 425.086 16.648 424.973 16.547 cv
424.852 16.445 424.793 16.281 424.797 16.051 cv
424.797 6.89502 li
424.793 6.84802 424.813 6.80103 424.848 6.75403 cv
424.879 6.71503 424.934 6.67999 425.016 6.65198 cv
425.09 6.62903 425.195 6.60901 425.332 6.59003 cv
425.461 6.578 425.625 6.57001 425.828 6.56598 cv
426.023 6.57001 426.191 6.578 426.324 6.59003 cv
426.453 6.60901 426.555 6.62903 426.637 6.65198 cv
426.711 6.67999 426.77 6.71503 426.805 6.75403 cv
426.836 6.80103 426.852 6.84802 426.855 6.89502 cv
426.855 15.008 li
430.027 15.008 li
430.078 15.012 430.121 15.027 430.164 15.051 cv
430.199 15.082 430.234 15.129 430.262 15.191 cv
430.285 15.262 430.305 15.348 430.32 15.449 cv
430.332 15.559 430.336 15.687 430.34 15.844 cv
cp
f
438.461 12.887 mo
438.457 13.484 438.379 14.027 438.227 14.512 cv
438.066 15.004 437.832 15.422 437.516 15.773 cv
437.199 16.125 436.801 16.398 436.324 16.59 cv
435.844 16.781 435.285 16.875 434.648 16.879 cv
434.027 16.875 433.488 16.793 433.035 16.621 cv
432.574 16.453 432.195 16.203 431.898 15.875 cv
431.594 15.551 431.371 15.148 431.227 14.668 cv
431.082 14.191 431.012 13.645 431.012 13.027 cv
431.012 12.437 431.09 11.898 431.246 11.406 cv
431.402 10.918 431.641 10.496 431.961 10.145 cv
432.277 9.797 432.672 9.52301 433.148 9.328 cv
433.621 9.13702 434.18 9.04303 434.82 9.039 cv
435.445 9.04303 435.984 9.125 436.441 9.29303 cv
436.898 9.46503 437.277 9.71503 437.574 10.039 cv
437.871 10.367 438.094 10.77 438.242 11.246 cv
438.387 11.727 438.457 12.273 438.461 12.887 cv
cp
436.441 12.965 mo
436.438 12.629 436.41 12.312 436.359 12.02 cv
436.301 11.734 436.207 11.484 436.082 11.27 cv
435.949 11.059 435.777 10.891 435.566 10.77 cv
435.348 10.652 435.078 10.594 434.75 10.59 cv
434.461 10.594 434.207 10.648 433.988 10.75 cv
433.77 10.859 433.59 11.016 433.449 11.219 cv
433.309 11.426 433.203 11.672 433.133 11.957 cv
433.063 12.25 433.027 12.578 433.027 12.941 cv
433.027 13.289 433.055 13.605 433.113 13.891 cv
433.168 14.184 433.262 14.434 433.391 14.645 cv
433.516 14.859 433.688 15.023 433.91 15.137 cv
434.125 15.258 434.395 15.316 434.719 15.312 cv
435.012 15.316 435.27 15.262 435.492 15.152 cv
435.707 15.047 435.887 14.895 436.027 14.687 cv
436.168 14.488 436.27 14.242 436.34 13.953 cv
436.402 13.668 436.438 13.34 436.441 12.965 cv
cp
f
445.281 15.328 mo
445.277 15.465 445.273 15.578 445.27 15.668 cv
445.258 15.762 445.25 15.84 445.238 15.898 cv
445.223 15.961 445.207 16.012 445.191 16.047 cv
445.172 16.09 445.129 16.137 445.07 16.195 cv
445.004 16.258 444.898 16.332 444.75 16.414 cv
444.598 16.504 444.426 16.582 444.234 16.645 cv
444.043 16.715 443.836 16.766 443.609 16.809 cv
443.383 16.848 443.148 16.867 442.914 16.871 cv
442.375 16.867 441.902 16.789 441.488 16.621 cv
441.074 16.457 440.727 16.211 440.449 15.887 cv
440.164 15.562 439.953 15.168 439.813 14.699 cv
439.672 14.234 439.602 13.695 439.602 13.09 cv
439.602 12.395 439.688 11.797 439.859 11.289 cv
440.031 10.785 440.273 10.363 440.59 10.031 cv
440.898 9.69897 441.266 9.453 441.695 9.289 cv
442.117 9.12903 442.586 9.047 443.098 9.047 cv
443.305 9.047 443.508 9.06598 443.711 9.10199 cv
443.906 9.14099 444.094 9.19098 444.27 9.25 cv
444.441 9.31598 444.598 9.38702 444.738 9.461 cv
444.875 9.54303 444.973 9.60901 445.031 9.664 cv
445.086 9.72302 445.125 9.77002 445.152 9.80499 cv
445.172 9.84802 445.191 9.89801 445.207 9.95697 cv
445.219 10.023 445.23 10.102 445.238 10.187 cv
445.246 10.281 445.25 10.391 445.25 10.52 cv
445.25 10.824 445.223 11.035 445.172 11.156 cv
445.117 11.277 445.051 11.34 444.969 11.336 cv
444.879 11.34 444.785 11.305 444.688 11.23 cv
444.586 11.16 444.469 11.078 444.336 10.988 cv
444.203 10.902 444.043 10.82 443.855 10.746 cv
443.668 10.676 443.441 10.641 443.184 10.637 cv
442.672 10.641 442.285 10.836 442.016 11.227 cv
441.742 11.617 441.605 12.191 441.609 12.949 cv
441.605 13.324 441.641 13.656 441.711 13.941 cv
441.777 14.227 441.875 14.465 442.012 14.656 cv
442.141 14.852 442.309 14.996 442.512 15.09 cv
442.711 15.187 442.941 15.234 443.207 15.234 cv
443.473 15.234 443.707 15.195 443.906 15.113 cv
444.098 15.035 444.266 14.945 444.414 14.844 cv
444.555 14.746 444.68 14.656 444.781 14.574 cv
444.879 14.496 444.961 14.457 445.031 14.453 cv
445.074 14.457 445.113 14.469 445.148 14.492 cv
445.176 14.52 445.199 14.566 445.223 14.637 cv
445.238 14.707 445.254 14.797 445.266 14.906 cv
445.273 15.016 445.277 15.156 445.281 15.328 cv
cp
f
452.566 16.457 mo
452.563 16.535 452.535 16.59 452.488 16.629 cv
452.434 16.672 452.352 16.699 452.242 16.719 cv
452.125 16.734 451.961 16.746 451.746 16.746 cv
451.508 16.746 451.336 16.734 451.234 16.719 cv
451.125 16.699 451.051 16.672 451.012 16.629 cv
450.965 16.59 450.945 16.535 450.945 16.457 cv
450.945 15.906 li
450.656 16.215 450.328 16.453 449.965 16.621 cv
449.598 16.793 449.191 16.875 448.746 16.879 cv
448.375 16.875 448.035 16.828 447.727 16.734 cv
447.418 16.641 447.152 16.5 446.926 16.305 cv
446.699 16.117 446.523 15.883 446.398 15.602 cv
446.273 15.324 446.211 14.996 446.215 14.617 cv
446.211 14.219 446.289 13.867 446.449 13.562 cv
446.605 13.266 446.844 13.02 447.16 12.824 cv
447.473 12.633 447.863 12.488 448.332 12.391 cv
448.801 12.301 449.344 12.254 449.961 12.25 cv
450.641 12.25 li
450.641 11.828 li
450.641 11.613 450.617 11.422 450.574 11.258 cv
450.527 11.098 450.453 10.961 450.355 10.848 cv
450.25 10.742 450.117 10.66 449.949 10.605 cv
449.777 10.555 449.566 10.531 449.324 10.527 cv
448.992 10.531 448.699 10.566 448.445 10.637 cv
448.184 10.711 447.957 10.793 447.762 10.879 cv
447.563 10.973 447.398 11.051 447.27 11.121 cv
447.133 11.195 447.023 11.234 446.945 11.23 cv
446.883 11.234 446.832 11.215 446.793 11.176 cv
446.746 11.141 446.711 11.09 446.684 11.02 cv
446.652 10.957 446.629 10.871 446.617 10.77 cv
446.598 10.672 446.59 10.562 446.594 10.441 cv
446.59 10.281 446.605 10.156 446.633 10.059 cv
446.656 9.96899 446.703 9.883 446.781 9.80499 cv
446.852 9.72998 446.98 9.64801 447.164 9.55902 cv
447.344 9.46899 447.555 9.383 447.801 9.30499 cv
448.043 9.22699 448.313 9.164 448.602 9.11298 cv
448.891 9.06598 449.188 9.04303 449.496 9.039 cv
450.039 9.04303 450.504 9.09399 450.891 9.19897 cv
451.277 9.30902 451.598 9.47302 451.848 9.69098 cv
452.098 9.90997 452.277 10.195 452.395 10.543 cv
452.504 10.895 452.563 11.309 452.566 11.781 cv
cp
450.641 13.48 mo
449.891 13.48 li
449.574 13.484 449.305 13.508 449.082 13.551 cv
448.855 13.602 448.672 13.672 448.535 13.762 cv
448.391 13.859 448.289 13.973 448.227 14.102 cv
448.16 14.238 448.125 14.387 448.129 14.555 cv
448.125 14.848 448.219 15.078 448.406 15.242 cv
448.59 15.41 448.848 15.492 449.176 15.492 cv
449.449 15.492 449.699 15.422 449.934 15.281 cv
450.16 15.141 450.398 14.937 450.641 14.664 cv
cp
f
456.492 16.434 mo
456.488 16.488 456.473 16.531 456.445 16.57 cv
456.41 16.609 456.355 16.645 456.285 16.668 cv
456.207 16.695 456.109 16.711 455.984 16.727 cv
455.859 16.738 455.699 16.746 455.512 16.746 cv
455.316 16.746 455.16 16.738 455.035 16.727 cv
454.91 16.711 454.809 16.695 454.734 16.668 cv
454.656 16.645 454.602 16.609 454.574 16.57 cv
454.539 16.531 454.523 16.488 454.527 16.434 cv
454.527 6.18701 li
454.523 6.13702 454.539 6.09003 454.574 6.047 cv
454.602 6.008 454.656 5.97302 454.734 5.94098 cv
454.809 5.914 454.91 5.89502 455.035 5.875 cv
455.16 5.86298 455.316 5.85498 455.512 5.85199 cv
455.699 5.85498 455.859 5.86298 455.984 5.875 cv
456.109 5.89502 456.207 5.914 456.285 5.94098 cv
456.355 5.97302 456.41 6.008 456.445 6.047 cv
456.473 6.09003 456.488 6.13702 456.492 6.18701 cv
cp
f
473.977 16.418 mo
473.973 16.473 473.961 16.52 473.934 16.559 cv
473.902 16.602 473.848 16.637 473.777 16.66 cv
473.699 16.687 473.602 16.707 473.477 16.723 cv
473.352 16.738 473.191 16.746 473 16.746 cv
472.813 16.746 472.656 16.738 472.535 16.723 cv
472.406 16.707 472.309 16.687 472.238 16.66 cv
472.164 16.637 472.113 16.602 472.082 16.559 cv
472.051 16.52 472.035 16.473 472.035 16.418 cv
472.035 8.211 li
472.02 8.211 li
469.098 16.41 li
469.074 16.48 469.039 16.535 468.996 16.578 cv
468.945 16.625 468.883 16.66 468.805 16.684 cv
468.723 16.711 468.621 16.727 468.496 16.734 cv
468.371 16.742 468.219 16.746 468.047 16.746 cv
467.867 16.746 467.719 16.738 467.594 16.727 cv
467.469 16.711 467.363 16.691 467.285 16.664 cv
467.199 16.637 467.137 16.602 467.094 16.559 cv
467.043 16.52 467.012 16.473 467 16.41 cv
464.18 8.211 li
464.164 8.211 li
464.164 16.418 li
464.16 16.473 464.145 16.52 464.121 16.559 cv
464.09 16.602 464.039 16.637 463.961 16.66 cv
463.883 16.687 463.781 16.707 463.66 16.723 cv
463.535 16.738 463.379 16.746 463.191 16.746 cv
463 16.746 462.844 16.738 462.723 16.723 cv
462.594 16.707 462.492 16.687 462.422 16.66 cv
462.344 16.637 462.293 16.602 462.266 16.559 cv
462.234 16.52 462.219 16.473 462.223 16.418 cv
462.223 7.43402 li
462.219 7.172 462.289 6.96899 462.434 6.82397 cv
462.57 6.68701 462.758 6.617 462.996 6.61298 cv
464.336 6.61298 li
464.574 6.617 464.777 6.63702 464.949 6.672 cv
465.117 6.71503 465.266 6.77698 465.395 6.867 cv
465.516 6.961 465.621 7.08197 465.707 7.22699 cv
465.789 7.37903 465.859 7.56201 465.926 7.77698 cv
468.109 13.785 li
468.141 13.785 li
470.398 7.79303 li
470.465 7.57397 470.539 7.39099 470.621 7.23798 cv
470.699 7.09003 470.793 6.96899 470.902 6.87097 cv
471.008 6.78101 471.133 6.71503 471.277 6.672 cv
471.422 6.63702 471.59 6.617 471.785 6.61298 cv
473.164 6.61298 li
473.301 6.617 473.422 6.633 473.527 6.66803 cv
473.625 6.70697 473.707 6.76202 473.777 6.828 cv
473.84 6.90198 473.891 6.98798 473.926 7.086 cv
473.957 7.19098 473.973 7.30902 473.977 7.43402 cv
cp
f
483.086 12.887 mo
483.082 13.484 483.004 14.027 482.852 14.512 cv
482.691 15.004 482.457 15.422 482.141 15.773 cv
481.824 16.125 481.426 16.398 480.949 16.59 cv
480.469 16.781 479.91 16.875 479.273 16.879 cv
478.652 16.875 478.113 16.793 477.66 16.621 cv
477.199 16.453 476.82 16.203 476.523 15.875 cv
476.219 15.551 475.996 15.148 475.852 14.668 cv
475.707 14.191 475.637 13.645 475.637 13.027 cv
475.637 12.437 475.715 11.898 475.871 11.406 cv
476.027 10.918 476.266 10.496 476.586 10.145 cv
476.902 9.797 477.297 9.52301 477.773 9.328 cv
478.246 9.13702 478.805 9.04303 479.445 9.039 cv
480.07 9.04303 480.609 9.125 481.066 9.29303 cv
481.523 9.46503 481.902 9.71503 482.199 10.039 cv
482.496 10.367 482.719 10.77 482.867 11.246 cv
483.012 11.727 483.082 12.273 483.086 12.887 cv
cp
481.066 12.965 mo
481.063 12.629 481.035 12.312 480.984 12.02 cv
480.926 11.734 480.832 11.484 480.707 11.27 cv
480.574 11.059 480.402 10.891 480.191 10.77 cv
479.973 10.652 479.703 10.594 479.375 10.59 cv
479.086 10.594 478.832 10.648 478.613 10.75 cv
478.395 10.859 478.215 11.016 478.074 11.219 cv
477.934 11.426 477.828 11.672 477.758 11.957 cv
477.688 12.25 477.652 12.578 477.652 12.941 cv
477.652 13.289 477.68 13.605 477.738 13.891 cv
477.793 14.184 477.887 14.434 478.016 14.645 cv
478.141 14.859 478.313 15.023 478.535 15.137 cv
478.75 15.258 479.02 15.316 479.344 15.312 cv
479.637 15.316 479.895 15.262 480.117 15.152 cv
480.332 15.047 480.512 14.895 480.652 14.687 cv
480.793 14.488 480.895 14.242 480.965 13.953 cv
481.027 13.668 481.063 13.34 481.066 12.965 cv
cp
f
491.234 16.434 mo
491.23 16.496 491.219 16.543 491.195 16.578 cv
491.168 16.621 491.121 16.652 491.063 16.676 cv
490.996 16.699 490.914 16.715 490.809 16.73 cv
490.703 16.738 490.57 16.746 490.418 16.746 cv
490.246 16.746 490.113 16.738 490.012 16.73 cv
489.906 16.715 489.82 16.699 489.758 16.676 cv
489.691 16.652 489.645 16.621 489.617 16.578 cv
489.586 16.543 489.57 16.496 489.574 16.434 cv
489.574 15.664 li
489.215 16.051 488.84 16.348 488.449 16.559 cv
488.051 16.77 487.617 16.875 487.145 16.879 cv
486.609 16.875 486.16 16.773 485.797 16.57 cv
485.43 16.367 485.133 16.094 484.902 15.742 cv
484.668 15.398 484.5 14.992 484.398 14.523 cv
484.297 14.062 484.246 13.57 484.246 13.051 cv
484.246 12.437 484.309 11.883 484.441 11.387 cv
484.57 10.895 484.766 10.473 485.023 10.125 cv
485.277 9.77698 485.594 9.51202 485.973 9.32001 cv
486.352 9.13702 486.789 9.04303 487.285 9.039 cv
487.672 9.04303 488.023 9.12097 488.344 9.27698 cv
488.656 9.43701 488.973 9.66803 489.285 9.97302 cv
489.285 6.211 li
489.285 6.15997 489.297 6.11298 489.328 6.07001 cv
489.352 6.03101 489.406 5.99597 489.484 5.96503 cv
489.559 5.93701 489.656 5.91803 489.785 5.89801 cv
489.906 5.88702 490.066 5.87903 490.262 5.875 cv
490.453 5.87903 490.609 5.88702 490.734 5.89801 cv
490.855 5.91803 490.957 5.93701 491.031 5.96503 cv
491.102 5.99597 491.152 6.03101 491.188 6.07001 cv
491.215 6.11298 491.23 6.15997 491.234 6.211 cv
cp
489.285 11.789 mo
489.004 11.437 488.734 11.168 488.48 10.98 cv
488.219 10.793 487.949 10.699 487.672 10.699 cv
487.418 10.699 487.199 10.766 487.016 10.891 cv
486.828 11.023 486.68 11.191 486.57 11.402 cv
486.457 11.613 486.375 11.852 486.32 12.113 cv
486.266 12.379 486.238 12.648 486.238 12.918 cv
486.238 13.215 486.262 13.496 486.309 13.77 cv
486.355 14.047 486.43 14.293 486.539 14.508 cv
486.641 14.723 486.785 14.895 486.965 15.023 cv
487.141 15.156 487.363 15.223 487.633 15.219 cv
487.766 15.223 487.895 15.203 488.027 15.16 cv
488.152 15.125 488.285 15.062 488.418 14.969 cv
488.551 14.883 488.688 14.766 488.828 14.621 cv
488.969 14.48 489.121 14.305 489.285 14.098 cv
cp
f
499.633 12.758 mo
499.629 12.996 499.578 13.172 499.473 13.285 cv
499.363 13.402 499.215 13.461 499.035 13.457 cv
494.801 13.457 li
494.797 13.758 494.832 14.027 494.906 14.266 cv
494.973 14.508 495.086 14.711 495.242 14.879 cv
495.395 15.051 495.59 15.18 495.832 15.266 cv
496.07 15.355 496.359 15.398 496.703 15.398 cv
497.043 15.398 497.344 15.375 497.605 15.324 cv
497.863 15.277 498.09 15.223 498.281 15.16 cv
498.469 15.102 498.625 15.047 498.754 14.996 cv
498.875 14.949 498.977 14.926 499.059 14.922 cv
499.102 14.926 499.141 14.934 499.176 14.949 cv
499.203 14.969 499.23 15 499.25 15.047 cv
499.27 15.094 499.281 15.16 499.293 15.246 cv
499.297 15.332 499.301 15.441 499.305 15.57 cv
499.301 15.687 499.301 15.785 499.297 15.863 cv
499.289 15.945 499.281 16.012 499.273 16.066 cv
499.262 16.125 499.246 16.176 499.227 16.211 cv
499.207 16.254 499.18 16.289 499.148 16.324 cv
499.113 16.363 499.02 16.414 498.871 16.473 cv
498.715 16.539 498.523 16.602 498.293 16.656 cv
498.055 16.719 497.785 16.766 497.488 16.812 cv
497.184 16.852 496.863 16.875 496.523 16.879 cv
495.902 16.875 495.359 16.801 494.898 16.645 cv
494.43 16.492 494.043 16.254 493.734 15.937 cv
493.418 15.621 493.184 15.223 493.035 14.738 cv
492.879 14.258 492.805 13.691 492.809 13.035 cv
492.805 12.422 492.883 11.863 493.047 11.367 cv
493.203 10.871 493.438 10.453 493.75 10.105 cv
494.055 9.76202 494.43 9.49597 494.867 9.31201 cv
495.305 9.133 495.797 9.04303 496.352 9.039 cv
496.93 9.04303 497.43 9.12903 497.844 9.297 cv
498.258 9.47302 498.594 9.711 498.859 10.012 cv
499.121 10.316 499.316 10.676 499.445 11.09 cv
499.566 11.508 499.629 11.957 499.633 12.445 cv
cp
497.73 12.195 mo
497.742 11.645 497.633 11.211 497.398 10.898 cv
497.164 10.586 496.797 10.43 496.305 10.426 cv
496.055 10.43 495.84 10.477 495.656 10.566 cv
495.469 10.664 495.316 10.789 495.195 10.945 cv
495.07 11.105 494.977 11.293 494.914 11.508 cv
494.848 11.723 494.809 11.953 494.801 12.195 cv
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
