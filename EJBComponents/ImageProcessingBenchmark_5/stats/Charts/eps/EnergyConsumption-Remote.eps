%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-Remote.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 13/12/2018, 12:17:24 p.m.
%%BoundingBox: 0 0 708 575
%%HiResBoundingBox: 0 0 707.5201 574.8000
%%CropBox: 0 0 707.5201 574.8000
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -574.8 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 574.8 li
707.52 574.8 li
707.52 0 li
cp
clp
gsave
0 574.8 mo
708 574.8 li
708 -.200012 li
0 -.200012 li
cp
clp
0 0 mo
707.52 0 li
707.52 574.801 li
0 574.801 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.879 509.762 mo
690.238 509.762 li
74.879 474.719 mo
690.238 474.719 li
74.879 439.801 mo
690.238 439.801 li
74.879 404.762 mo
690.238 404.762 li
74.879 369.84 mo
690.238 369.84 li
74.879 334.801 mo
690.238 334.801 li
74.879 299.762 mo
690.238 299.762 li
74.879 264.84 mo
690.238 264.84 li
74.879 229.801 mo
690.238 229.801 li
74.879 194.762 mo
690.238 194.762 li
74.879 159.84 mo
690.238 159.84 li
74.879 124.801 mo
690.238 124.801 li
74.879 89.762 mo
690.238 89.762 li
74.879 54.84 mo
690.238 54.84 li
.135805 .104005 .108583 0 cmyk
@
74.879 492.238 mo
690.238 492.238 li
74.879 457.32 mo
690.238 457.32 li
74.879 422.281 mo
690.238 422.281 li
74.879 387.238 mo
690.238 387.238 li
74.879 352.32 mo
690.238 352.32 li
74.879 317.281 mo
690.238 317.281 li
74.879 282.238 mo
690.238 282.238 li
74.879 247.32 mo
690.238 247.32 li
74.879 212.281 mo
690.238 212.281 li
74.879 177.238 mo
690.238 177.238 li
74.879 142.32 mo
690.238 142.32 li
74.879 107.281 mo
690.238 107.281 li
74.879 72.359 mo
690.238 72.359 li
74.879 37.32 mo
690.238 37.32 li
.326574 .281529 .277562 0 cmyk
@
113.398 37.32 mo
113.398 527.281 li
190.32 37.32 mo
190.32 527.281 li
267.238 37.32 mo
267.238 527.281 li
344.039 37.32 mo
344.039 527.281 li
420.961 37.32 mo
420.961 527.281 li
497.879 37.32 mo
497.879 527.281 li
574.801 37.32 mo
574.801 527.281 li
651.719 37.32 mo
651.719 527.281 li
.175235 .144778 .143648 0 cmyk
@
74.879 37.32 mo
74.879 527.281 li
151.801 37.32 mo
151.801 527.281 li
228.719 37.32 mo
228.719 527.281 li
305.641 37.32 mo
305.641 527.281 li
382.559 37.32 mo
382.559 527.281 li
459.48 37.32 mo
459.48 527.281 li
536.398 37.32 mo
536.398 527.281 li
613.32 37.32 mo
613.32 527.281 li
690.238 37.32 mo
690.238 527.281 li
.326574 .281529 .277562 0 cmyk
@
37.078 517.922 mo
61.922 517.922 li
61.922 535.078 li
37.078 535.078 li
cp
0 0 0 0 cmyk
ef
37.078 483 mo
61.922 483 li
61.922 500.039 li
37.078 500.039 li
cp
ef
37.078 447.961 mo
61.922 447.961 li
61.922 465 li
37.078 465 li
cp
ef
37.078 412.922 mo
61.922 412.922 li
61.922 430.078 li
37.078 430.078 li
cp
ef
37.078 378 mo
61.922 378 li
61.922 395.039 li
37.078 395.039 li
cp
ef
37.078 342.961 mo
61.922 342.961 li
61.922 360 li
37.078 360 li
cp
ef
37.078 307.922 mo
61.922 307.922 li
61.922 325.078 li
37.078 325.078 li
cp
ef
37.078 273 mo
61.922 273 li
61.922 290.039 li
37.078 290.039 li
cp
ef
30 237.961 mo
61.922 237.961 li
61.922 255.121 li
30 255.121 li
cp
ef
30 202.922 mo
61.922 202.922 li
61.922 220.078 li
30 220.078 li
cp
ef
30 168 mo
61.922 168 li
61.922 185.039 li
30 185.039 li
cp
ef
30 132.961 mo
61.922 132.961 li
61.922 150.121 li
30 150.121 li
cp
ef
30 98.039 mo
61.922 98.039 li
61.922 115.078 li
30 115.078 li
cp
ef
30 63 mo
61.922 63 li
61.922 80.039 li
30 80.039 li
cp
ef
30 27.961 mo
61.922 27.961 li
61.922 45.121 li
30 45.121 li
cp
ef
.96 lw
74.879 527.281 mo
690.238 527.281 li
.369879 .299321 .304356 .000976577 cmyk
@
74.879 527.281 mo
74.879 531.719 li
151.801 527.281 mo
151.801 531.719 li
228.719 527.281 mo
228.719 531.719 li
305.641 527.281 mo
305.641 531.719 li
382.559 527.281 mo
382.559 531.719 li
459.48 527.281 mo
459.48 531.719 li
536.398 527.281 mo
536.398 531.719 li
613.32 527.281 mo
613.32 531.719 li
690.238 527.281 mo
690.238 531.719 li
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
1 lc
74.879 166.078 mo
151.801 280.922 li
228.719 350.039 li
305.641 363.48 li
382.559 376.801 li
459.48 382.441 li
536.398 381.719 li
613.32 398.52 li
690.238 386.398 li
.62829 .284672 0 0 cmyk
@
grestore
1 lw
69.828 161.031 mo
79.789 161.031 li
79.789 170.988 li
69.828 170.988 li
cp
.62829 .284672 0 0 cmyk
@
146.75 275.75 mo
156.711 275.75 li
156.711 285.711 li
146.75 285.711 li
cp
@
223.672 344.871 mo
233.629 344.871 li
233.629 354.828 li
223.672 354.828 li
cp
@
300.469 358.43 mo
310.43 358.43 li
310.43 368.391 li
300.469 368.391 li
cp
@
377.391 371.629 mo
387.352 371.629 li
387.352 381.59 li
377.391 381.59 li
cp
@
454.309 377.391 mo
464.27 377.391 li
464.27 387.352 li
454.309 387.352 li
cp
@
531.23 376.551 mo
541.191 376.551 li
541.191 386.512 li
531.23 386.512 li
cp
@
608.148 393.352 mo
618.109 393.352 li
618.109 403.309 li
608.148 403.309 li
cp
@
685.07 381.352 mo
695.031 381.352 li
695.031 391.309 li
685.07 391.309 li
cp
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
.96 lw
1 lc
74.879 155.16 mo
151.801 334.68 li
228.719 411.84 li
305.641 397.922 li
382.559 432 li
459.48 453.602 li
536.398 437.039 li
613.32 405 li
690.238 432.121 li
.0321965 .622736 .922606 .000579843 cmyk
@
grestore
69.828 150.109 mo
79.789 150.109 li
79.789 160.07 li
69.828 160.07 li
cp
.0321965 .622736 .922606 .000579843 cmyk
@
146.75 329.512 mo
156.711 329.512 li
156.711 339.469 li
146.75 339.469 li
cp
@
223.672 406.789 mo
233.629 406.789 li
233.629 416.75 li
223.672 416.75 li
cp
@
300.469 392.871 mo
310.43 392.871 li
310.43 402.828 li
300.469 402.828 li
cp
@
377.391 426.949 mo
387.352 426.949 li
387.352 436.91 li
377.391 436.91 li
cp
@
454.309 448.43 mo
464.27 448.43 li
464.27 458.391 li
454.309 458.391 li
cp
@
531.23 431.871 mo
541.191 431.871 li
541.191 441.828 li
531.23 441.828 li
cp
@
608.148 399.949 mo
618.109 399.949 li
618.109 409.91 li
608.148 409.91 li
cp
@
685.07 426.949 mo
695.031 426.949 li
695.031 436.91 li
685.07 436.91 li
cp
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
.96 lw
1 lc
74.879 154.68 mo
151.801 341.039 li
228.719 411 li
305.641 398.52 li
382.559 420.121 li
459.48 411.48 li
536.398 426.602 li
613.32 419.52 li
690.238 439.801 li
.621118 .109194 .980743 .0040589 cmyk
@
grestore
69.828 149.512 mo
79.789 149.512 li
79.789 159.469 li
69.828 159.469 li
cp
.621118 .109194 .980743 .0040589 cmyk
@
146.75 335.988 mo
156.711 335.988 li
156.711 345.949 li
146.75 345.949 li
cp
@
223.672 405.828 mo
233.629 405.828 li
233.629 415.789 li
223.672 415.789 li
cp
@
300.469 393.352 mo
310.43 393.352 li
310.43 403.309 li
300.469 403.309 li
cp
@
377.391 415.07 mo
387.352 415.07 li
387.352 425.031 li
377.391 425.031 li
cp
@
454.309 406.43 mo
464.27 406.43 li
464.27 416.391 li
454.309 416.391 li
cp
@
531.23 421.43 mo
541.191 421.43 li
541.191 431.391 li
531.23 431.391 li
cp
@
608.148 414.352 mo
618.109 414.352 li
618.109 424.309 li
608.148 424.309 li
cp
@
685.07 434.629 mo
695.031 434.629 li
695.031 444.59 li
685.07 444.59 li
cp
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
.96 lw
1 lc
74.879 154.68 mo
151.801 307.441 li
228.719 352.32 li
305.641 427.199 li
382.559 401.039 li
459.48 424.801 li
536.398 411.48 li
613.32 413.281 li
690.238 432.602 li
0 .993988 1 0 cmyk
@
grestore
69.828 149.512 mo
79.789 149.512 li
79.789 159.469 li
69.828 159.469 li
cp
0 .993988 1 0 cmyk
@
146.75 302.391 mo
156.711 302.391 li
156.711 312.352 li
146.75 312.352 li
cp
@
223.672 347.148 mo
233.629 347.148 li
233.629 357.109 li
223.672 357.109 li
cp
@
300.469 422.031 mo
310.43 422.031 li
310.43 431.988 li
300.469 431.988 li
cp
@
377.391 395.871 mo
387.352 395.871 li
387.352 405.828 li
377.391 405.828 li
cp
@
454.309 419.629 mo
464.27 419.629 li
464.27 429.59 li
454.309 429.59 li
cp
@
531.23 406.309 mo
541.191 406.309 li
541.191 416.27 li
531.23 416.27 li
cp
@
608.148 408.23 mo
618.109 408.23 li
618.109 418.191 li
608.148 418.191 li
cp
@
685.07 427.43 mo
695.031 427.43 li
695.031 437.391 li
685.07 437.391 li
cp
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.879 153.719 mo
151.801 330.48 li
228.719 394.68 li
305.641 425.879 li
382.559 422.398 li
459.48 435.238 li
536.398 437.16 li
613.32 418.922 li
690.238 460.801 li
.62829 .284672 0 0 cmyk
@
grestore
69.828 148.672 mo
79.789 148.672 li
79.789 158.629 li
69.828 158.629 li
cp
.62829 .284672 0 0 cmyk
@
146.75 325.309 mo
156.711 325.309 li
156.711 335.27 li
146.75 335.27 li
cp
@
223.672 389.512 mo
233.629 389.512 li
233.629 399.469 li
223.672 399.469 li
cp
@
300.469 420.711 mo
310.43 420.711 li
310.43 430.672 li
300.469 430.672 li
cp
@
377.391 417.352 mo
387.352 417.352 li
387.352 427.309 li
377.391 427.309 li
cp
@
454.309 430.191 mo
464.27 430.191 li
464.27 440.148 li
454.309 440.148 li
cp
@
531.23 431.988 mo
541.191 431.988 li
541.191 441.949 li
531.23 441.949 li
cp
@
608.148 413.75 mo
618.109 413.75 li
618.109 423.711 li
608.148 423.711 li
cp
@
685.07 455.629 mo
695.031 455.629 li
695.031 465.59 li
685.07 465.59 li
cp
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.879 160.68 mo
151.801 324.719 li
228.719 408.84 li
305.641 402.48 li
382.559 428.281 li
459.48 425.16 li
536.398 418.199 li
613.32 419.398 li
690.238 422.398 li
.0321965 .622736 .922606 .000579843 cmyk
@
grestore
70.309 155.988 mo
79.309 155.988 li
79.309 164.988 li
70.309 164.988 li
cp
.0321965 .622736 .922606 .000579843 cmyk
@
147.23 320.148 mo
156.23 320.148 li
156.23 329.148 li
147.23 329.148 li
cp
@
224.148 404.27 mo
233.148 404.27 li
233.148 413.27 li
224.148 413.27 li
cp
@
300.949 397.91 mo
309.949 397.91 li
309.949 406.91 li
300.949 406.91 li
cp
@
377.871 423.59 mo
386.871 423.59 li
386.871 432.59 li
377.871 432.59 li
cp
@
454.789 420.59 mo
463.789 420.59 li
463.789 429.59 li
454.789 429.59 li
cp
@
531.711 413.512 mo
540.711 413.512 li
540.711 422.512 li
531.711 422.512 li
cp
@
608.629 414.711 mo
617.629 414.711 li
617.629 423.711 li
608.629 423.711 li
cp
@
685.551 417.828 mo
694.551 417.828 li
694.551 426.828 li
685.551 426.828 li
cp
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.879 166.078 mo
151.801 334.68 li
228.719 427.199 li
305.641 418.922 li
382.559 411.84 li
459.48 413.879 li
536.398 412.559 li
613.32 426.961 li
690.238 454.199 li
.621118 .109194 .980743 .0040589 cmyk
@
grestore
69.828 161.031 mo
79.789 161.031 li
79.789 170.988 li
69.828 170.988 li
cp
.621118 .109194 .980743 .0040589 cmyk
@
146.75 329.512 mo
156.711 329.512 li
156.711 339.469 li
146.75 339.469 li
cp
@
223.672 422.031 mo
233.629 422.031 li
233.629 431.988 li
223.672 431.988 li
cp
@
300.469 413.75 mo
310.43 413.75 li
310.43 423.711 li
300.469 423.711 li
cp
@
377.391 406.789 mo
387.352 406.789 li
387.352 416.75 li
377.391 416.75 li
cp
@
454.309 408.711 mo
464.27 408.711 li
464.27 418.672 li
454.309 418.672 li
cp
@
531.23 407.512 mo
541.191 407.512 li
541.191 417.469 li
531.23 417.469 li
cp
@
608.148 421.789 mo
618.109 421.789 li
618.109 431.75 li
608.148 431.75 li
cp
@
685.07 449.031 mo
695.031 449.031 li
695.031 458.988 li
685.07 458.988 li
cp
@
gsave
74.879 37.199 mo
690.961 37.199 li
690.961 528 li
74.879 528 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
74.879 166.078 mo
151.801 338.398 li
228.719 436.559 li
305.641 449.641 li
382.559 423.238 li
459.48 426.602 li
536.398 417.238 li
613.32 434.281 li
690.238 440.039 li
0 .993988 1 0 cmyk
@
grestore
69.828 161.031 mo
79.789 161.031 li
79.789 170.988 li
69.828 170.988 li
cp
0 .993988 1 0 cmyk
@
146.75 333.352 mo
156.711 333.352 li
156.711 343.309 li
146.75 343.309 li
cp
@
223.672 431.391 mo
233.629 431.391 li
233.629 441.352 li
223.672 441.352 li
cp
@
300.469 444.59 mo
310.43 444.59 li
310.43 454.551 li
300.469 454.551 li
cp
@
377.391 418.07 mo
387.352 418.07 li
387.352 428.031 li
377.391 428.031 li
cp
@
454.309 421.43 mo
464.27 421.43 li
464.27 431.391 li
454.309 431.391 li
cp
@
531.23 412.07 mo
541.191 412.07 li
541.191 422.031 li
531.23 422.031 li
cp
@
608.148 429.23 mo
618.109 429.23 li
618.109 439.191 li
608.148 439.191 li
cp
@
685.07 434.988 mo
695.031 434.988 li
695.031 444.949 li
685.07 444.949 li
cp
@
37.07 517.941 mo
61.89 517.941 li
61.89 535.031 li
37.07 535.031 li
cp
0 0 0 0 cmyk
ef
43.707 526.902 mo
43.703 527.586 43.652 528.207 43.547 528.77 cv
43.438 529.332 43.258 529.816 43.012 530.219 cv
42.758 530.625 42.43 530.937 42.031 531.156 cv
41.625 531.379 41.133 531.488 40.547 531.488 cv
39.988 531.488 39.516 531.391 39.137 531.191 cv
38.754 530.996 38.449 530.703 38.215 530.316 cv
37.98 529.93 37.813 529.457 37.719 528.891 cv
37.617 528.328 37.57 527.68 37.57 526.945 cv
37.57 526.273 37.625 525.652 37.734 525.086 cv
37.844 524.523 38.02 524.039 38.27 523.633 cv
38.512 523.23 38.836 522.918 39.242 522.691 cv
39.641 522.473 40.137 522.359 40.727 522.359 cv
41.285 522.359 41.758 522.461 42.141 522.656 cv
42.523 522.859 42.828 523.152 43.063 523.535 cv
43.293 523.926 43.461 524.398 43.559 524.961 cv
43.656 525.523 43.703 526.172 43.707 526.902 cv
cp
42.5 526.984 mo
42.496 526.543 42.48 526.145 42.453 525.793 cv
42.418 525.441 42.371 525.133 42.313 524.863 cv
42.246 524.594 42.168 524.363 42.07 524.168 cv
41.973 523.977 41.855 523.816 41.719 523.687 cv
41.578 523.562 41.418 523.469 41.246 523.41 cv
41.066 523.355 40.871 523.328 40.656 523.324 cv
40.266 523.328 39.949 523.418 39.711 523.602 cv
39.465 523.785 39.273 524.039 39.137 524.355 cv
38.996 524.676 38.902 525.047 38.852 525.477 cv
38.801 525.906 38.777 526.371 38.777 526.863 cv
38.777 527.527 38.809 528.09 38.879 528.551 cv
38.945 529.02 39.055 529.398 39.207 529.687 cv
39.352 529.984 39.543 530.195 39.773 530.324 cv
40.004 530.461 40.285 530.527 40.617 530.523 cv
40.871 530.527 41.094 530.488 41.289 530.402 cv
41.48 530.324 41.648 530.203 41.789 530.047 cv
41.93 529.895 42.043 529.711 42.137 529.496 cv
42.223 529.281 42.297 529.043 42.355 528.781 cv
42.406 528.523 42.445 528.242 42.469 527.937 cv
42.488 527.633 42.496 527.316 42.5 526.984 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.707 530.613 mo
46.707 530.941 46.652 531.156 46.547 531.262 cv
46.438 531.367 46.242 531.418 45.961 531.422 cv
45.684 531.418 45.492 531.367 45.391 531.266 cv
45.281 531.16 45.23 530.949 45.234 530.633 cv
45.23 530.309 45.285 530.094 45.395 529.984 cv
45.5 529.879 45.695 529.824 45.98 529.824 cv
46.254 529.824 46.441 529.879 46.551 529.984 cv
46.652 530.09 46.707 530.301 46.707 530.613 cv
cp
f
54.367 526.902 mo
54.363 527.586 54.313 528.207 54.207 528.77 cv
54.098 529.332 53.918 529.816 53.672 530.219 cv
53.418 530.625 53.09 530.937 52.691 531.156 cv
52.285 531.379 51.793 531.488 51.207 531.488 cv
50.648 531.488 50.176 531.391 49.797 531.191 cv
49.414 530.996 49.109 530.703 48.875 530.316 cv
48.641 529.93 48.473 529.457 48.379 528.891 cv
48.277 528.328 48.23 527.68 48.23 526.945 cv
48.23 526.273 48.285 525.652 48.395 525.086 cv
48.504 524.523 48.68 524.039 48.93 523.633 cv
49.172 523.23 49.496 522.918 49.902 522.691 cv
50.301 522.473 50.797 522.359 51.387 522.359 cv
51.945 522.359 52.418 522.461 52.801 522.656 cv
53.184 522.859 53.488 523.152 53.723 523.535 cv
53.953 523.926 54.121 524.398 54.219 524.961 cv
54.316 525.523 54.363 526.172 54.367 526.902 cv
cp
53.16 526.984 mo
53.156 526.543 53.141 526.145 53.113 525.793 cv
53.078 525.441 53.031 525.133 52.973 524.863 cv
52.906 524.594 52.828 524.363 52.73 524.168 cv
52.633 523.977 52.516 523.816 52.379 523.687 cv
52.238 523.562 52.078 523.469 51.906 523.41 cv
51.727 523.355 51.531 523.328 51.316 523.324 cv
50.926 523.328 50.609 523.418 50.371 523.602 cv
50.125 523.785 49.934 524.039 49.797 524.355 cv
49.656 524.676 49.563 525.047 49.512 525.477 cv
49.461 525.906 49.438 526.371 49.438 526.863 cv
49.438 527.527 49.469 528.09 49.539 528.551 cv
49.605 529.02 49.715 529.398 49.867 529.687 cv
50.012 529.984 50.203 530.195 50.434 530.324 cv
50.664 530.461 50.945 530.527 51.277 530.523 cv
51.531 530.527 51.754 530.488 51.949 530.402 cv
52.141 530.324 52.309 530.203 52.449 530.047 cv
52.59 529.895 52.703 529.711 52.797 529.496 cv
52.883 529.281 52.957 529.043 53.016 528.781 cv
53.066 528.523 53.105 528.242 53.129 527.937 cv
53.148 527.633 53.156 527.316 53.16 526.984 cv
cp
f
61.484 526.902 mo
61.48 527.586 61.43 528.207 61.324 528.77 cv
61.215 529.332 61.035 529.816 60.789 530.219 cv
60.535 530.625 60.207 530.937 59.809 531.156 cv
59.402 531.379 58.91 531.488 58.324 531.488 cv
57.766 531.488 57.293 531.391 56.914 531.191 cv
56.531 530.996 56.227 530.703 55.992 530.316 cv
55.758 529.93 55.59 529.457 55.496 528.891 cv
55.395 528.328 55.348 527.68 55.348 526.945 cv
55.348 526.273 55.402 525.652 55.512 525.086 cv
55.621 524.523 55.797 524.039 56.047 523.633 cv
56.289 523.23 56.613 522.918 57.02 522.691 cv
57.418 522.473 57.914 522.359 58.504 522.359 cv
59.063 522.359 59.535 522.461 59.918 522.656 cv
60.301 522.859 60.605 523.152 60.84 523.535 cv
61.07 523.926 61.238 524.398 61.336 524.961 cv
61.434 525.523 61.48 526.172 61.484 526.902 cv
cp
60.277 526.984 mo
60.273 526.543 60.258 526.145 60.23 525.793 cv
60.195 525.441 60.148 525.133 60.09 524.863 cv
60.023 524.594 59.945 524.363 59.848 524.168 cv
59.75 523.977 59.633 523.816 59.496 523.687 cv
59.355 523.562 59.195 523.469 59.023 523.41 cv
58.844 523.355 58.648 523.328 58.434 523.324 cv
58.043 523.328 57.727 523.418 57.488 523.602 cv
57.242 523.785 57.051 524.039 56.914 524.355 cv
56.773 524.676 56.68 525.047 56.629 525.477 cv
56.578 525.906 56.555 526.371 56.555 526.863 cv
56.555 527.527 56.586 528.09 56.656 528.551 cv
56.723 529.02 56.832 529.398 56.984 529.687 cv
57.129 529.984 57.32 530.195 57.551 530.324 cv
57.781 530.461 58.063 530.527 58.395 530.523 cv
58.648 530.527 58.871 530.488 59.066 530.402 cv
59.258 530.324 59.426 530.203 59.566 530.047 cv
59.707 529.895 59.82 529.711 59.914 529.496 cv
60 529.281 60.074 529.043 60.133 528.781 cv
60.184 528.523 60.223 528.242 60.246 527.937 cv
60.266 527.633 60.273 527.316 60.277 526.984 cv
cp
f
37.07 482.945 mo
61.89 482.945 li
61.89 500.035 li
37.07 500.035 li
cp
0 0 0 0 cmyk
ef
43.434 495.879 mo
43.43 495.969 43.422 496.039 43.41 496.098 cv
43.395 496.16 43.375 496.211 43.355 496.242 cv
43.332 496.281 43.309 496.305 43.277 496.32 cv
43.246 496.336 43.215 496.344 43.188 496.344 cv
38.551 496.344 li
38.516 496.344 38.488 496.336 38.461 496.32 cv
38.434 496.305 38.406 496.281 38.383 496.242 cv
38.355 496.211 38.336 496.16 38.324 496.098 cv
38.309 496.039 38.301 495.969 38.305 495.879 cv
38.301 495.801 38.309 495.727 38.324 495.664 cv
38.336 495.605 38.352 495.559 38.375 495.52 cv
38.391 495.484 38.418 495.453 38.449 495.43 cv
38.48 495.41 38.512 495.402 38.551 495.398 cv
40.402 495.398 li
40.402 488.652 li
38.688 489.672 li
38.598 489.723 38.527 489.75 38.48 489.758 cv
38.426 489.766 38.383 489.758 38.352 489.727 cv
38.316 489.699 38.297 489.648 38.285 489.578 cv
38.273 489.512 38.266 489.426 38.27 489.316 cv
38.266 489.242 38.27 489.176 38.281 489.117 cv
38.285 489.066 38.297 489.02 38.313 488.98 cv
38.324 488.945 38.344 488.914 38.367 488.887 cv
38.391 488.859 38.422 488.832 38.469 488.805 cv
40.512 487.492 li
40.527 487.48 40.547 487.469 40.578 487.461 cv
40.602 487.453 40.637 487.445 40.684 487.434 cv
40.723 487.426 40.773 487.418 40.828 487.414 cv
40.883 487.414 40.949 487.414 41.035 487.41 cv
41.141 487.414 41.234 487.418 41.309 487.426 cv
41.379 487.434 41.434 487.449 41.48 487.465 cv
41.52 487.484 41.547 487.504 41.563 487.527 cv
41.57 487.555 41.578 487.578 41.582 487.602 cv
41.582 495.398 li
43.188 495.398 li
43.223 495.402 43.258 495.41 43.289 495.43 cv
43.32 495.453 43.344 495.484 43.367 495.52 cv
43.383 495.559 43.398 495.605 43.414 495.664 cv
43.422 495.727 43.43 495.801 43.434 495.879 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.707 495.598 mo
46.707 495.926 46.652 496.141 46.547 496.246 cv
46.438 496.352 46.242 496.402 45.961 496.406 cv
45.684 496.402 45.492 496.352 45.391 496.25 cv
45.281 496.145 45.23 495.934 45.234 495.617 cv
45.23 495.293 45.285 495.078 45.395 494.969 cv
45.5 494.863 45.695 494.809 45.98 494.809 cv
46.254 494.809 46.441 494.863 46.551 494.969 cv
46.652 495.074 46.707 495.285 46.707 495.598 cv
cp
f
54.074 495.836 mo
54.07 495.922 54.066 495.996 54.055 496.059 cv
54.043 496.125 54.027 496.18 54.008 496.219 cv
53.984 496.266 53.957 496.297 53.926 496.312 cv
53.891 496.336 53.852 496.344 53.813 496.344 cv
48.91 496.344 li
48.848 496.344 48.789 496.336 48.742 496.32 cv
48.691 496.305 48.652 496.281 48.617 496.242 cv
48.582 496.211 48.555 496.156 48.543 496.086 cv
48.523 496.016 48.516 495.93 48.52 495.828 cv
48.516 495.738 48.52 495.66 48.527 495.59 cv
48.531 495.523 48.547 495.465 48.574 495.41 cv
48.598 495.359 48.629 495.305 48.664 495.25 cv
48.699 495.199 48.742 495.145 48.801 495.082 cv
50.574 493.258 li
50.984 492.84 51.313 492.465 51.563 492.129 cv
51.809 491.801 52 491.496 52.133 491.219 cv
52.266 490.945 52.352 490.695 52.398 490.469 cv
52.438 490.246 52.461 490.035 52.461 489.84 cv
52.461 489.645 52.426 489.461 52.359 489.281 cv
52.293 489.109 52.199 488.953 52.074 488.816 cv
51.949 488.687 51.793 488.582 51.605 488.5 cv
51.418 488.426 51.199 488.387 50.953 488.383 cv
50.664 488.387 50.406 488.426 50.18 488.5 cv
49.949 488.582 49.75 488.668 49.578 488.754 cv
49.406 488.848 49.262 488.93 49.145 489.008 cv
49.027 489.086 48.941 489.125 48.891 489.125 cv
48.855 489.125 48.824 489.117 48.801 489.098 cv
48.77 489.082 48.75 489.051 48.734 489.008 cv
48.719 488.969 48.703 488.914 48.695 488.844 cv
48.684 488.777 48.68 488.695 48.684 488.598 cv
48.68 488.531 48.684 488.473 48.691 488.422 cv
48.695 488.371 48.703 488.328 48.715 488.289 cv
48.723 488.254 48.738 488.219 48.758 488.187 cv
48.777 488.156 48.813 488.117 48.871 488.066 cv
48.922 488.02 49.016 487.953 49.152 487.871 cv
49.285 487.789 49.457 487.711 49.66 487.629 cv
49.863 487.551 50.086 487.48 50.332 487.426 cv
50.574 487.371 50.832 487.344 51.105 487.344 cv
51.531 487.344 51.906 487.406 52.23 487.527 cv
52.551 487.648 52.816 487.812 53.031 488.023 cv
53.242 488.234 53.402 488.48 53.508 488.754 cv
53.613 489.035 53.668 489.332 53.668 489.645 cv
53.668 489.934 53.641 490.215 53.59 490.492 cv
53.539 490.777 53.434 491.082 53.273 491.406 cv
53.109 491.734 52.875 492.098 52.57 492.496 cv
52.262 492.898 51.855 493.359 51.352 493.875 cv
49.945 495.344 li
53.805 495.344 li
53.836 495.348 53.871 495.359 53.91 495.375 cv
53.941 495.398 53.973 495.43 54 495.469 cv
54.023 495.512 54.043 495.562 54.055 495.621 cv
54.066 495.687 54.07 495.758 54.074 495.836 cv
cp
f
61.148 493.492 mo
61.148 493.969 61.066 494.391 60.906 494.762 cv
60.746 495.133 60.52 495.445 60.23 495.699 cv
59.934 495.953 59.586 496.148 59.184 496.277 cv
58.777 496.41 58.328 496.473 57.836 496.473 cv
57.559 496.473 57.297 496.453 57.055 496.414 cv
56.805 496.375 56.586 496.328 56.398 496.273 cv
56.203 496.219 56.047 496.164 55.922 496.105 cv
55.797 496.055 55.719 496.012 55.688 495.977 cv
55.652 495.945 55.629 495.914 55.617 495.887 cv
55.602 495.859 55.586 495.828 55.578 495.785 cv
55.563 495.75 55.555 495.699 55.555 495.637 cv
55.547 495.578 55.547 495.508 55.547 495.426 cv
55.547 495.352 55.551 495.281 55.559 495.219 cv
55.566 495.156 55.578 495.105 55.598 495.066 cv
55.613 495.027 55.633 495 55.66 494.98 cv
55.684 494.965 55.715 494.957 55.746 494.953 cv
55.793 494.957 55.863 494.984 55.957 495.039 cv
56.051 495.098 56.18 495.16 56.344 495.227 cv
56.508 495.293 56.707 495.355 56.949 495.414 cv
57.184 495.473 57.469 495.5 57.805 495.5 cv
58.105 495.5 58.387 495.465 58.645 495.391 cv
58.898 495.32 59.121 495.207 59.309 495.051 cv
59.492 494.898 59.637 494.703 59.742 494.465 cv
59.848 494.23 59.898 493.941 59.902 493.602 cv
59.898 493.32 59.855 493.07 59.766 492.852 cv
59.676 492.633 59.539 492.453 59.355 492.309 cv
59.168 492.168 58.934 492.062 58.652 491.988 cv
58.367 491.918 58.027 491.879 57.641 491.879 cv
57.355 491.879 57.117 491.895 56.918 491.922 cv
56.715 491.953 56.527 491.969 56.355 491.965 cv
56.227 491.969 56.133 491.937 56.082 491.875 cv
56.023 491.816 55.996 491.703 56 491.531 cv
56 487.918 li
55.996 487.77 56.031 487.66 56.105 487.582 cv
56.172 487.512 56.273 487.473 56.41 487.473 cv
60.34 487.473 li
60.375 487.473 60.41 487.484 60.445 487.504 cv
60.477 487.527 60.504 487.559 60.531 487.598 cv
60.551 487.641 60.566 487.691 60.582 487.754 cv
60.59 487.82 60.598 487.898 60.602 487.98 cv
60.598 488.148 60.574 488.273 60.535 488.363 cv
60.488 488.457 60.43 488.504 60.352 488.5 cv
57.18 488.5 li
57.18 490.988 li
57.332 490.969 57.488 490.957 57.652 490.949 cv
57.809 490.945 57.996 490.941 58.211 490.941 cv
58.695 490.941 59.121 491.004 59.488 491.125 cv
59.852 491.246 60.156 491.418 60.406 491.637 cv
60.648 491.863 60.836 492.129 60.961 492.441 cv
61.086 492.758 61.148 493.109 61.148 493.492 cv
cp
f
37.07 447.949 mo
61.89 447.949 li
61.89 465.039 li
37.07 465.039 li
cp
0 0 0 0 cmyk
ef
43.414 460.844 mo
43.41 460.93 43.406 461.004 43.395 461.066 cv
43.383 461.133 43.367 461.187 43.348 461.227 cv
43.324 461.273 43.297 461.305 43.266 461.32 cv
43.23 461.344 43.191 461.352 43.152 461.352 cv
38.25 461.352 li
38.188 461.352 38.129 461.344 38.082 461.328 cv
38.031 461.312 37.992 461.289 37.957 461.25 cv
37.922 461.219 37.895 461.164 37.883 461.094 cv
37.863 461.023 37.855 460.937 37.859 460.836 cv
37.855 460.746 37.859 460.668 37.867 460.598 cv
37.871 460.531 37.887 460.473 37.914 460.418 cv
37.938 460.367 37.969 460.312 38.004 460.258 cv
38.039 460.207 38.082 460.152 38.141 460.09 cv
39.914 458.266 li
40.324 457.848 40.652 457.473 40.902 457.137 cv
41.148 456.809 41.34 456.504 41.473 456.227 cv
41.605 455.953 41.691 455.703 41.738 455.477 cv
41.777 455.254 41.801 455.043 41.801 454.848 cv
41.801 454.652 41.766 454.469 41.699 454.289 cv
41.633 454.117 41.539 453.961 41.414 453.824 cv
41.289 453.695 41.133 453.59 40.945 453.508 cv
40.758 453.434 40.539 453.395 40.293 453.391 cv
40.004 453.395 39.746 453.434 39.52 453.508 cv
39.289 453.59 39.09 453.676 38.918 453.762 cv
38.746 453.855 38.602 453.937 38.484 454.016 cv
38.367 454.094 38.281 454.133 38.23 454.133 cv
38.195 454.133 38.164 454.125 38.141 454.105 cv
38.109 454.09 38.09 454.059 38.074 454.016 cv
38.059 453.977 38.043 453.922 38.035 453.852 cv
38.023 453.785 38.02 453.703 38.023 453.605 cv
38.02 453.539 38.023 453.48 38.031 453.43 cv
38.035 453.379 38.043 453.336 38.055 453.297 cv
38.063 453.262 38.078 453.227 38.098 453.195 cv
38.117 453.164 38.152 453.125 38.211 453.074 cv
38.262 453.027 38.355 452.961 38.492 452.879 cv
38.625 452.797 38.797 452.719 39 452.637 cv
39.203 452.559 39.426 452.488 39.672 452.434 cv
39.914 452.379 40.172 452.352 40.445 452.352 cv
40.871 452.352 41.246 452.414 41.57 452.535 cv
41.891 452.656 42.156 452.82 42.371 453.031 cv
42.582 453.242 42.742 453.488 42.848 453.762 cv
42.953 454.043 43.008 454.34 43.008 454.652 cv
43.008 454.941 42.98 455.223 42.93 455.5 cv
42.879 455.785 42.773 456.09 42.613 456.414 cv
42.449 456.742 42.215 457.105 41.91 457.504 cv
41.602 457.906 41.195 458.367 40.691 458.883 cv
39.285 460.352 li
43.145 460.352 li
43.176 460.355 43.211 460.367 43.25 460.383 cv
43.281 460.406 43.313 460.437 43.34 460.477 cv
43.363 460.52 43.383 460.57 43.395 460.629 cv
43.406 460.695 43.41 460.766 43.414 460.844 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.707 460.605 mo
46.707 460.934 46.652 461.148 46.547 461.254 cv
46.438 461.359 46.242 461.41 45.961 461.414 cv
45.684 461.41 45.492 461.359 45.391 461.258 cv
45.281 461.152 45.23 460.941 45.234 460.625 cv
45.23 460.301 45.285 460.086 45.395 459.977 cv
45.5 459.871 45.695 459.816 45.98 459.816 cv
46.254 459.816 46.441 459.871 46.551 459.977 cv
46.652 460.082 46.707 460.293 46.707 460.605 cv
cp
f
54.031 458.5 mo
54.031 458.977 53.949 459.398 53.789 459.77 cv
53.629 460.141 53.402 460.453 53.113 460.707 cv
52.816 460.961 52.469 461.156 52.066 461.285 cv
51.66 461.418 51.211 461.48 50.719 461.48 cv
50.441 461.48 50.18 461.461 49.938 461.422 cv
49.688 461.383 49.469 461.336 49.281 461.281 cv
49.086 461.227 48.93 461.172 48.805 461.113 cv
48.68 461.062 48.602 461.02 48.57 460.984 cv
48.535 460.953 48.512 460.922 48.5 460.895 cv
48.484 460.867 48.469 460.836 48.461 460.793 cv
48.445 460.758 48.438 460.707 48.438 460.645 cv
48.43 460.586 48.43 460.516 48.43 460.434 cv
48.43 460.359 48.434 460.289 48.441 460.227 cv
48.449 460.164 48.461 460.113 48.48 460.074 cv
48.496 460.035 48.516 460.008 48.543 459.988 cv
48.566 459.973 48.598 459.965 48.629 459.961 cv
48.676 459.965 48.746 459.992 48.84 460.047 cv
48.934 460.105 49.063 460.168 49.227 460.234 cv
49.391 460.301 49.59 460.363 49.832 460.422 cv
50.066 460.48 50.352 460.508 50.688 460.508 cv
50.988 460.508 51.27 460.473 51.527 460.398 cv
51.781 460.328 52.004 460.215 52.191 460.059 cv
52.375 459.906 52.52 459.711 52.625 459.473 cv
52.73 459.238 52.781 458.949 52.785 458.609 cv
52.781 458.328 52.738 458.078 52.648 457.859 cv
52.559 457.641 52.422 457.461 52.238 457.316 cv
52.051 457.176 51.816 457.07 51.535 456.996 cv
51.25 456.926 50.91 456.887 50.523 456.887 cv
50.238 456.887 50 456.902 49.801 456.93 cv
49.598 456.961 49.41 456.977 49.238 456.973 cv
49.109 456.977 49.016 456.945 48.965 456.883 cv
48.906 456.824 48.879 456.711 48.883 456.539 cv
48.883 452.926 li
48.879 452.777 48.914 452.668 48.988 452.59 cv
49.055 452.52 49.156 452.48 49.293 452.48 cv
53.223 452.48 li
53.258 452.48 53.293 452.492 53.328 452.512 cv
53.359 452.535 53.387 452.566 53.414 452.605 cv
53.434 452.648 53.449 452.699 53.465 452.762 cv
53.473 452.828 53.48 452.906 53.484 452.988 cv
53.48 453.156 53.457 453.281 53.418 453.371 cv
53.371 453.465 53.313 453.512 53.234 453.508 cv
50.063 453.508 li
50.063 455.996 li
50.215 455.977 50.371 455.965 50.535 455.957 cv
50.691 455.953 50.879 455.949 51.094 455.949 cv
51.578 455.949 52.004 456.012 52.371 456.133 cv
52.734 456.254 53.039 456.426 53.289 456.645 cv
53.531 456.871 53.719 457.137 53.844 457.449 cv
53.969 457.766 54.031 458.117 54.031 458.5 cv
cp
f
61.484 456.895 mo
61.48 457.578 61.43 458.199 61.324 458.762 cv
61.215 459.324 61.035 459.809 60.789 460.211 cv
60.535 460.617 60.207 460.93 59.809 461.148 cv
59.402 461.371 58.91 461.48 58.324 461.48 cv
57.766 461.48 57.293 461.383 56.914 461.184 cv
56.531 460.988 56.227 460.695 55.992 460.309 cv
55.758 459.922 55.59 459.449 55.496 458.883 cv
55.395 458.32 55.348 457.672 55.348 456.937 cv
55.348 456.266 55.402 455.645 55.512 455.078 cv
55.621 454.516 55.797 454.031 56.047 453.625 cv
56.289 453.223 56.613 452.91 57.02 452.684 cv
57.418 452.465 57.914 452.352 58.504 452.352 cv
59.063 452.352 59.535 452.453 59.918 452.648 cv
60.301 452.852 60.605 453.145 60.84 453.527 cv
61.07 453.918 61.238 454.391 61.336 454.953 cv
61.434 455.516 61.48 456.164 61.484 456.895 cv
cp
60.277 456.977 mo
60.273 456.535 60.258 456.137 60.23 455.785 cv
60.195 455.434 60.148 455.125 60.09 454.855 cv
60.023 454.586 59.945 454.355 59.848 454.16 cv
59.75 453.969 59.633 453.809 59.496 453.68 cv
59.355 453.555 59.195 453.461 59.023 453.402 cv
58.844 453.348 58.648 453.32 58.434 453.316 cv
58.043 453.32 57.727 453.41 57.488 453.594 cv
57.242 453.777 57.051 454.031 56.914 454.348 cv
56.773 454.668 56.68 455.039 56.629 455.469 cv
56.578 455.898 56.555 456.363 56.555 456.855 cv
56.555 457.52 56.586 458.082 56.656 458.543 cv
56.723 459.012 56.832 459.391 56.984 459.68 cv
57.129 459.977 57.32 460.187 57.551 460.316 cv
57.781 460.453 58.063 460.52 58.395 460.516 cv
58.648 460.52 58.871 460.48 59.066 460.395 cv
59.258 460.316 59.426 460.195 59.566 460.039 cv
59.707 459.887 59.82 459.703 59.914 459.488 cv
60 459.273 60.074 459.035 60.133 458.773 cv
60.184 458.516 60.223 458.234 60.246 457.93 cv
60.266 457.625 60.273 457.309 60.277 456.977 cv
cp
f
37.07 412.949 mo
61.89 412.949 li
61.89 430.039 li
37.07 430.039 li
cp
0 0 0 0 cmyk
ef
43.355 423.82 mo
43.352 424.23 43.281 424.598 43.141 424.922 cv
42.996 425.25 42.793 425.527 42.531 425.762 cv
42.262 425.996 41.934 426.176 41.547 426.301 cv
41.156 426.426 40.719 426.488 40.23 426.488 cv
39.934 426.488 39.652 426.461 39.395 426.414 cv
39.133 426.367 38.902 426.316 38.703 426.246 cv
38.5 426.184 38.336 426.113 38.203 426.043 cv
38.07 425.973 37.984 425.922 37.953 425.887 cv
37.914 425.855 37.891 425.824 37.875 425.789 cv
37.855 425.762 37.836 425.723 37.824 425.676 cv
37.809 425.633 37.801 425.578 37.793 425.508 cv
37.785 425.445 37.781 425.363 37.785 425.262 cv
37.781 425.098 37.797 424.98 37.832 424.918 cv
37.863 424.855 37.91 424.824 37.977 424.82 cv
38.016 424.824 38.102 424.859 38.227 424.93 cv
38.352 425.004 38.508 425.086 38.703 425.168 cv
38.895 425.258 39.125 425.336 39.387 425.406 cv
39.645 425.48 39.934 425.516 40.258 425.516 cv
40.566 425.516 40.84 425.477 41.074 425.398 cv
41.309 425.32 41.504 425.211 41.664 425.07 cv
41.824 424.93 41.945 424.762 42.023 424.566 cv
42.102 424.371 42.141 424.16 42.145 423.93 cv
42.141 423.68 42.09 423.453 41.992 423.25 cv
41.887 423.051 41.738 422.875 41.547 422.727 cv
41.348 422.582 41.105 422.473 40.824 422.391 cv
40.535 422.316 40.211 422.277 39.848 422.273 cv
38.977 422.273 li
38.938 422.277 38.898 422.27 38.863 422.25 cv
38.828 422.238 38.797 422.211 38.773 422.172 cv
38.742 422.137 38.723 422.09 38.707 422.027 cv
38.691 421.973 38.684 421.895 38.684 421.793 cv
38.684 421.711 38.688 421.637 38.703 421.578 cv
38.715 421.523 38.734 421.48 38.762 421.441 cv
38.785 421.41 38.816 421.383 38.848 421.363 cv
38.879 421.352 38.914 421.344 38.961 421.34 cv
39.734 421.34 li
40.031 421.344 40.305 421.305 40.547 421.223 cv
40.789 421.148 40.992 421.035 41.16 420.887 cv
41.324 420.742 41.453 420.57 41.543 420.363 cv
41.633 420.16 41.676 419.93 41.68 419.676 cv
41.676 419.496 41.648 419.32 41.59 419.152 cv
41.527 418.988 41.438 418.844 41.32 418.719 cv
41.203 418.594 41.051 418.496 40.863 418.426 cv
40.676 418.355 40.461 418.32 40.223 418.316 cv
39.953 418.32 39.711 418.359 39.492 418.437 cv
39.27 418.52 39.07 418.605 38.898 418.695 cv
38.723 418.789 38.578 418.875 38.465 418.953 cv
38.348 419.035 38.27 419.078 38.227 419.074 cv
38.191 419.078 38.16 419.07 38.137 419.059 cv
38.109 419.047 38.09 419.023 38.078 418.988 cv
38.059 418.957 38.047 418.91 38.043 418.844 cv
38.031 418.785 38.027 418.703 38.031 418.598 cv
38.027 418.531 38.031 418.473 38.039 418.418 cv
38.043 418.371 38.051 418.324 38.066 418.281 cv
38.078 418.246 38.094 418.211 38.113 418.176 cv
38.129 418.145 38.16 418.105 38.207 418.062 cv
38.25 418.02 38.34 417.957 38.473 417.871 cv
38.605 417.789 38.766 417.707 38.961 417.629 cv
39.152 417.551 39.379 417.484 39.633 417.426 cv
39.887 417.375 40.16 417.348 40.457 417.344 cv
40.867 417.348 41.227 417.402 41.539 417.504 cv
41.848 417.613 42.109 417.762 42.32 417.949 cv
42.527 418.145 42.684 418.371 42.785 418.637 cv
42.887 418.906 42.938 419.203 42.941 419.527 cv
42.938 419.809 42.902 420.07 42.832 420.309 cv
42.758 420.551 42.648 420.762 42.508 420.945 cv
42.363 421.133 42.191 421.293 41.988 421.418 cv
41.781 421.551 41.543 421.641 41.273 421.691 cv
41.273 421.703 li
41.578 421.738 41.855 421.816 42.113 421.934 cv
42.363 422.059 42.582 422.211 42.77 422.391 cv
42.949 422.578 43.094 422.789 43.199 423.031 cv
43.301 423.277 43.352 423.543 43.355 423.82 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.664 425.609 mo
46.66 425.937 46.605 426.156 46.504 426.262 cv
46.395 426.367 46.199 426.418 45.918 426.422 cv
45.637 426.418 45.445 426.367 45.344 426.266 cv
45.234 426.16 45.184 425.949 45.188 425.633 cv
45.184 425.309 45.238 425.094 45.348 424.984 cv
45.457 424.879 45.652 424.824 45.938 424.82 cv
46.211 424.824 46.402 424.879 46.508 424.98 cv
46.609 425.09 46.66 425.297 46.664 425.609 cv
cp
f
54.219 417.98 mo
54.215 418.066 54.211 418.145 54.207 418.207 cv
54.199 418.277 54.191 418.34 54.18 418.398 cv
54.168 418.461 54.152 418.52 54.133 418.574 cv
54.109 418.633 54.086 418.695 54.059 418.758 cv
50.859 426.133 li
50.836 426.191 50.805 426.234 50.773 426.266 cv
50.734 426.301 50.691 426.328 50.645 426.348 cv
50.59 426.367 50.523 426.379 50.441 426.391 cv
50.355 426.395 50.254 426.398 50.141 426.402 cv
49.98 426.398 49.859 426.391 49.773 426.379 cv
49.684 426.363 49.621 426.348 49.586 426.316 cv
49.543 426.289 49.527 426.25 49.535 426.207 cv
49.539 426.164 49.555 426.113 49.582 426.051 cv
52.949 418.512 li
48.684 418.512 li
48.594 418.516 48.527 418.469 48.484 418.375 cv
48.441 418.285 48.422 418.156 48.422 417.988 cv
48.422 417.906 48.426 417.832 48.438 417.762 cv
48.449 417.699 48.465 417.645 48.488 417.602 cv
48.508 417.559 48.535 417.527 48.57 417.504 cv
48.602 417.488 48.641 417.477 48.684 417.473 cv
53.859 417.473 li
53.922 417.477 53.977 417.484 54.027 417.496 cv
54.074 417.512 54.109 417.539 54.137 417.578 cv
54.16 417.621 54.18 417.672 54.195 417.734 cv
54.207 417.801 54.215 417.883 54.219 417.98 cv
cp
f
61.121 423.504 mo
61.121 423.984 61.039 424.406 60.879 424.773 cv
60.719 425.145 60.492 425.457 60.199 425.711 cv
59.906 425.965 59.559 426.156 59.152 426.289 cv
58.746 426.422 58.297 426.488 57.805 426.488 cv
57.527 426.488 57.266 426.469 57.02 426.43 cv
56.77 426.391 56.547 426.344 56.359 426.289 cv
56.164 426.234 56.008 426.18 55.887 426.121 cv
55.762 426.066 55.684 426.023 55.648 425.988 cv
55.613 425.961 55.59 425.93 55.578 425.902 cv
55.563 425.875 55.547 425.844 55.539 425.801 cv
55.523 425.766 55.516 425.715 55.516 425.652 cv
55.508 425.594 55.508 425.523 55.512 425.437 cv
55.508 425.367 55.512 425.297 55.52 425.23 cv
55.527 425.172 55.539 425.121 55.559 425.078 cv
55.574 425.043 55.594 425.016 55.621 424.992 cv
55.645 424.977 55.676 424.965 55.711 424.965 cv
55.754 424.965 55.824 424.996 55.922 425.051 cv
56.016 425.113 56.145 425.176 56.309 425.238 cv
56.469 425.309 56.672 425.371 56.914 425.426 cv
57.152 425.488 57.438 425.516 57.77 425.516 cv
58.074 425.516 58.355 425.48 58.613 425.406 cv
58.871 425.336 59.09 425.223 59.277 425.062 cv
59.457 424.91 59.602 424.715 59.711 424.477 cv
59.813 424.242 59.867 423.953 59.871 423.613 cv
59.867 423.332 59.82 423.082 59.734 422.863 cv
59.641 422.648 59.504 422.469 59.324 422.32 cv
59.137 422.18 58.902 422.07 58.621 421.996 cv
58.332 421.93 57.996 421.895 57.605 421.891 cv
57.324 421.895 57.082 421.91 56.883 421.934 cv
56.68 421.965 56.492 421.977 56.32 421.973 cv
56.191 421.977 56.102 421.945 56.047 421.883 cv
55.992 421.824 55.965 421.711 55.965 421.539 cv
55.965 417.918 li
55.965 417.77 56 417.656 56.07 417.582 cv
56.141 417.512 56.242 417.477 56.375 417.473 cv
60.309 417.473 li
60.34 417.477 60.375 417.488 60.414 417.504 cv
60.445 417.527 60.477 417.559 60.5 417.598 cv
60.523 417.645 60.539 417.695 60.551 417.758 cv
60.563 417.82 60.57 417.895 60.57 417.98 cv
60.57 418.148 60.547 418.277 60.504 418.367 cv
60.461 418.461 60.398 418.508 60.32 418.504 cv
57.145 418.504 li
57.145 420.996 li
57.293 420.977 57.453 420.961 57.617 420.957 cv
57.777 420.953 57.961 420.953 58.176 420.949 cv
58.66 420.953 59.09 421.012 59.457 421.133 cv
59.824 421.254 60.129 421.426 60.375 421.645 cv
60.617 421.867 60.801 422.137 60.93 422.453 cv
61.055 422.77 61.121 423.121 61.121 423.504 cv
cp
f
37.07 377.949 mo
61.89 377.949 li
61.89 395.039 li
37.07 395.039 li
cp
0 0 0 0 cmyk
ef
43.371 388.488 mo
43.371 388.965 43.289 389.387 43.129 389.758 cv
42.969 390.129 42.742 390.441 42.453 390.695 cv
42.156 390.949 41.809 391.145 41.406 391.273 cv
41 391.406 40.551 391.469 40.059 391.469 cv
39.781 391.469 39.52 391.449 39.277 391.41 cv
39.027 391.371 38.809 391.324 38.621 391.27 cv
38.426 391.215 38.27 391.16 38.145 391.102 cv
38.02 391.051 37.941 391.008 37.91 390.973 cv
37.875 390.941 37.852 390.91 37.84 390.883 cv
37.824 390.855 37.809 390.824 37.801 390.781 cv
37.785 390.746 37.777 390.695 37.777 390.633 cv
37.77 390.574 37.77 390.504 37.77 390.422 cv
37.77 390.348 37.773 390.277 37.781 390.215 cv
37.789 390.152 37.801 390.102 37.82 390.062 cv
37.836 390.023 37.855 389.996 37.883 389.977 cv
37.906 389.961 37.938 389.953 37.969 389.949 cv
38.016 389.953 38.086 389.98 38.18 390.035 cv
38.273 390.094 38.402 390.156 38.566 390.223 cv
38.73 390.289 38.93 390.352 39.172 390.41 cv
39.406 390.469 39.691 390.496 40.027 390.496 cv
40.328 390.496 40.609 390.461 40.867 390.387 cv
41.121 390.316 41.344 390.203 41.531 390.047 cv
41.715 389.895 41.859 389.699 41.965 389.461 cv
42.07 389.227 42.121 388.937 42.125 388.598 cv
42.121 388.316 42.078 388.066 41.988 387.848 cv
41.898 387.629 41.762 387.449 41.578 387.305 cv
41.391 387.164 41.156 387.059 40.875 386.984 cv
40.59 386.914 40.25 386.875 39.863 386.875 cv
39.578 386.875 39.34 386.891 39.141 386.918 cv
38.938 386.949 38.75 386.965 38.578 386.961 cv
38.449 386.965 38.355 386.934 38.305 386.871 cv
38.246 386.812 38.219 386.699 38.223 386.527 cv
38.223 382.914 li
38.219 382.766 38.254 382.656 38.328 382.578 cv
38.395 382.508 38.496 382.469 38.633 382.469 cv
42.563 382.469 li
42.598 382.469 42.633 382.48 42.668 382.5 cv
42.699 382.523 42.727 382.555 42.754 382.594 cv
42.773 382.637 42.789 382.687 42.805 382.75 cv
42.813 382.816 42.82 382.895 42.824 382.977 cv
42.82 383.145 42.797 383.27 42.758 383.359 cv
42.711 383.453 42.652 383.5 42.574 383.496 cv
39.402 383.496 li
39.402 385.984 li
39.555 385.965 39.711 385.953 39.875 385.945 cv
40.031 385.941 40.219 385.937 40.434 385.937 cv
40.918 385.937 41.344 386 41.711 386.121 cv
42.074 386.242 42.379 386.414 42.629 386.633 cv
42.871 386.859 43.059 387.125 43.184 387.437 cv
43.309 387.754 43.371 388.105 43.371 388.488 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.707 390.594 mo
46.707 390.922 46.652 391.137 46.547 391.242 cv
46.438 391.348 46.242 391.398 45.961 391.402 cv
45.684 391.398 45.492 391.348 45.391 391.246 cv
45.281 391.141 45.23 390.93 45.234 390.613 cv
45.23 390.289 45.285 390.074 45.395 389.965 cv
45.5 389.859 45.695 389.805 45.98 389.805 cv
46.254 389.805 46.441 389.859 46.551 389.965 cv
46.652 390.07 46.707 390.281 46.707 390.594 cv
cp
f
54.367 386.883 mo
54.363 387.566 54.313 388.187 54.207 388.75 cv
54.098 389.312 53.918 389.797 53.672 390.199 cv
53.418 390.605 53.09 390.918 52.691 391.137 cv
52.285 391.359 51.793 391.469 51.207 391.469 cv
50.648 391.469 50.176 391.371 49.797 391.172 cv
49.414 390.977 49.109 390.684 48.875 390.297 cv
48.641 389.91 48.473 389.437 48.379 388.871 cv
48.277 388.309 48.23 387.66 48.23 386.926 cv
48.23 386.254 48.285 385.633 48.395 385.066 cv
48.504 384.504 48.68 384.02 48.93 383.613 cv
49.172 383.211 49.496 382.898 49.902 382.672 cv
50.301 382.453 50.797 382.34 51.387 382.34 cv
51.945 382.34 52.418 382.441 52.801 382.637 cv
53.184 382.84 53.488 383.133 53.723 383.516 cv
53.953 383.906 54.121 384.379 54.219 384.941 cv
54.316 385.504 54.363 386.152 54.367 386.883 cv
cp
53.16 386.965 mo
53.156 386.523 53.141 386.125 53.113 385.773 cv
53.078 385.422 53.031 385.113 52.973 384.844 cv
52.906 384.574 52.828 384.344 52.73 384.148 cv
52.633 383.957 52.516 383.797 52.379 383.668 cv
52.238 383.543 52.078 383.449 51.906 383.391 cv
51.727 383.336 51.531 383.309 51.316 383.305 cv
50.926 383.309 50.609 383.398 50.371 383.582 cv
50.125 383.766 49.934 384.02 49.797 384.336 cv
49.656 384.656 49.563 385.027 49.512 385.457 cv
49.461 385.887 49.438 386.352 49.438 386.844 cv
49.438 387.508 49.469 388.07 49.539 388.531 cv
49.605 389 49.715 389.379 49.867 389.668 cv
50.012 389.965 50.203 390.176 50.434 390.305 cv
50.664 390.441 50.945 390.508 51.277 390.504 cv
51.531 390.508 51.754 390.469 51.949 390.383 cv
52.141 390.305 52.309 390.184 52.449 390.027 cv
52.59 389.875 52.703 389.691 52.797 389.477 cv
52.883 389.262 52.957 389.023 53.016 388.762 cv
53.066 388.504 53.105 388.223 53.129 387.918 cv
53.148 387.613 53.156 387.297 53.16 386.965 cv
cp
f
61.484 386.883 mo
61.48 387.566 61.43 388.187 61.324 388.75 cv
61.215 389.312 61.035 389.797 60.789 390.199 cv
60.535 390.605 60.207 390.918 59.809 391.137 cv
59.402 391.359 58.91 391.469 58.324 391.469 cv
57.766 391.469 57.293 391.371 56.914 391.172 cv
56.531 390.977 56.227 390.684 55.992 390.297 cv
55.758 389.91 55.59 389.437 55.496 388.871 cv
55.395 388.309 55.348 387.66 55.348 386.926 cv
55.348 386.254 55.402 385.633 55.512 385.066 cv
55.621 384.504 55.797 384.02 56.047 383.613 cv
56.289 383.211 56.613 382.898 57.02 382.672 cv
57.418 382.453 57.914 382.34 58.504 382.34 cv
59.063 382.34 59.535 382.441 59.918 382.637 cv
60.301 382.84 60.605 383.133 60.84 383.516 cv
61.07 383.906 61.238 384.379 61.336 384.941 cv
61.434 385.504 61.48 386.152 61.484 386.883 cv
cp
60.277 386.965 mo
60.273 386.523 60.258 386.125 60.23 385.773 cv
60.195 385.422 60.148 385.113 60.09 384.844 cv
60.023 384.574 59.945 384.344 59.848 384.148 cv
59.75 383.957 59.633 383.797 59.496 383.668 cv
59.355 383.543 59.195 383.449 59.023 383.391 cv
58.844 383.336 58.648 383.309 58.434 383.305 cv
58.043 383.309 57.727 383.398 57.488 383.582 cv
57.242 383.766 57.051 384.02 56.914 384.336 cv
56.773 384.656 56.68 385.027 56.629 385.457 cv
56.578 385.887 56.555 386.352 56.555 386.844 cv
56.555 387.508 56.586 388.07 56.656 388.531 cv
56.723 389 56.832 389.379 56.984 389.668 cv
57.129 389.965 57.32 390.176 57.551 390.305 cv
57.781 390.441 58.063 390.508 58.395 390.504 cv
58.648 390.508 58.871 390.469 59.066 390.383 cv
59.258 390.305 59.426 390.184 59.566 390.027 cv
59.707 389.875 59.82 389.691 59.914 389.477 cv
60 389.262 60.074 389.023 60.133 388.762 cv
60.184 388.504 60.223 388.223 60.246 387.918 cv
60.266 387.613 60.273 387.297 60.277 386.965 cv
cp
f
37.07 342.961 mo
61.89 342.961 li
61.89 360.051 li
37.07 360.051 li
cp
0 0 0 0 cmyk
ef
43.648 353.473 mo
43.645 353.867 43.586 354.242 43.469 354.605 cv
43.348 354.969 43.164 355.289 42.922 355.566 cv
42.672 355.844 42.359 356.066 41.98 356.23 cv
41.598 356.398 41.148 356.48 40.637 356.48 cv
40.262 356.48 39.934 356.437 39.652 356.344 cv
39.363 356.258 39.117 356.125 38.91 355.953 cv
38.699 355.785 38.523 355.578 38.387 355.328 cv
38.242 355.082 38.129 354.801 38.047 354.484 cv
37.961 354.172 37.902 353.828 37.867 353.449 cv
37.828 353.074 37.809 352.668 37.813 352.238 cv
37.809 351.859 37.832 351.477 37.875 351.086 cv
37.914 350.699 37.984 350.324 38.094 349.957 cv
38.195 349.598 38.34 349.258 38.523 348.937 cv
38.703 348.625 38.93 348.348 39.203 348.109 cv
39.473 347.875 39.801 347.687 40.184 347.551 cv
40.563 347.414 41.004 347.348 41.508 347.344 cv
41.676 347.348 41.848 347.355 42.023 347.375 cv
42.195 347.395 42.355 347.422 42.504 347.457 cv
42.648 347.492 42.77 347.531 42.871 347.57 cv
42.969 347.613 43.035 347.645 43.07 347.668 cv
43.102 347.695 43.125 347.727 43.145 347.754 cv
43.156 347.785 43.168 347.816 43.18 347.848 cv
43.188 347.887 43.195 347.926 43.203 347.965 cv
43.203 348.012 43.207 348.062 43.211 348.125 cv
43.207 348.211 43.207 348.285 43.207 348.34 cv
43.203 348.402 43.191 348.449 43.18 348.48 cv
43.16 348.52 43.141 348.547 43.117 348.562 cv
43.09 348.586 43.059 348.594 43.02 348.59 cv
42.965 348.594 42.895 348.578 42.813 348.543 cv
42.723 348.516 42.617 348.48 42.496 348.437 cv
42.371 348.402 42.223 348.367 42.047 348.332 cv
41.867 348.301 41.66 348.285 41.434 348.281 cv
41.004 348.285 40.637 348.371 40.332 348.543 cv
40.023 348.719 39.773 348.953 39.582 349.246 cv
39.383 349.539 39.238 349.879 39.148 350.266 cv
39.051 350.652 39 351.055 38.988 351.477 cv
39.105 351.406 39.238 351.34 39.387 351.27 cv
39.535 351.207 39.695 351.145 39.875 351.086 cv
40.047 351.035 40.234 350.992 40.434 350.953 cv
40.629 350.922 40.84 350.902 41.066 350.898 cv
41.547 350.902 41.953 350.969 42.281 351.094 cv
42.609 351.227 42.875 351.406 43.082 351.637 cv
43.285 351.871 43.43 352.145 43.52 352.457 cv
43.602 352.773 43.645 353.113 43.648 353.473 cv
cp
42.457 353.586 mo
42.457 353.32 42.43 353.082 42.375 352.863 cv
42.32 352.648 42.23 352.461 42.109 352.309 cv
41.984 352.16 41.82 352.043 41.617 351.957 cv
41.41 351.875 41.156 351.836 40.855 351.832 cv
40.684 351.836 40.516 351.852 40.348 351.879 cv
40.176 351.91 40.012 351.949 39.855 352.004 cv
39.695 352.059 39.543 352.121 39.402 352.187 cv
39.258 352.262 39.125 352.34 39.008 352.418 cv
39.004 353.012 39.043 353.504 39.121 353.898 cv
39.195 354.301 39.305 354.621 39.449 354.859 cv
39.594 355.102 39.773 355.273 39.988 355.375 cv
40.203 355.48 40.457 355.531 40.746 355.527 cv
41.035 355.531 41.289 355.477 41.508 355.363 cv
41.723 355.258 41.898 355.109 42.043 354.922 cv
42.184 354.734 42.289 354.527 42.355 354.297 cv
42.422 354.066 42.457 353.828 42.457 353.586 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.664 355.602 mo
46.66 355.93 46.605 356.148 46.504 356.254 cv
46.395 356.359 46.199 356.41 45.918 356.414 cv
45.637 356.41 45.445 356.359 45.344 356.258 cv
45.234 356.152 45.184 355.941 45.188 355.625 cv
45.184 355.301 45.238 355.086 45.348 354.977 cv
45.457 354.871 45.652 354.816 45.938 354.812 cv
46.211 354.816 46.402 354.871 46.508 354.973 cv
46.609 355.082 46.66 355.289 46.664 355.602 cv
cp
f
54.086 355.844 mo
54.082 355.93 54.078 356.004 54.07 356.066 cv
54.059 356.133 54.043 356.187 54.023 356.227 cv
54 356.273 53.969 356.305 53.938 356.32 cv
53.898 356.344 53.863 356.352 53.828 356.352 cv
48.918 356.352 li
48.852 356.352 48.793 356.344 48.746 356.328 cv
48.695 356.312 48.656 356.289 48.625 356.25 cv
48.59 356.219 48.563 356.164 48.547 356.094 cv
48.527 356.023 48.52 355.937 48.523 355.836 cv
48.52 355.746 48.523 355.668 48.535 355.598 cv
48.539 355.531 48.555 355.469 48.582 355.414 cv
48.602 355.363 48.633 355.312 48.668 355.258 cv
48.703 355.207 48.75 355.152 48.809 355.09 cv
50.586 353.262 li
50.992 352.844 51.32 352.465 51.57 352.129 cv
51.813 351.797 52.004 351.492 52.145 351.215 cv
52.277 350.945 52.367 350.695 52.41 350.469 cv
52.449 350.242 52.469 350.031 52.473 349.836 cv
52.469 349.641 52.438 349.457 52.371 349.277 cv
52.305 349.105 52.207 348.949 52.086 348.812 cv
51.957 348.684 51.801 348.578 51.613 348.496 cv
51.422 348.422 51.207 348.383 50.965 348.379 cv
50.676 348.383 50.414 348.422 50.188 348.496 cv
49.953 348.578 49.754 348.664 49.586 348.75 cv
49.41 348.844 49.266 348.926 49.152 349.004 cv
49.035 349.082 48.949 349.121 48.895 349.121 cv
48.859 349.121 48.832 349.113 48.809 349.094 cv
48.781 349.078 48.758 349.047 48.742 349.004 cv
48.723 348.965 48.711 348.91 48.703 348.84 cv
48.695 348.77 48.691 348.687 48.691 348.59 cv
48.691 348.523 48.691 348.465 48.695 348.414 cv
48.699 348.363 48.707 348.32 48.719 348.281 cv
48.73 348.25 48.746 348.215 48.766 348.18 cv
48.781 348.152 48.816 348.113 48.875 348.062 cv
48.926 348.016 49.023 347.949 49.16 347.863 cv
49.293 347.781 49.461 347.699 49.668 347.621 cv
49.867 347.543 50.09 347.477 50.34 347.418 cv
50.582 347.367 50.84 347.34 51.113 347.336 cv
51.539 347.34 51.918 347.402 52.242 347.52 cv
52.563 347.645 52.828 347.809 53.047 348.016 cv
53.258 348.23 53.418 348.477 53.523 348.75 cv
53.629 349.031 53.684 349.328 53.684 349.641 cv
53.684 349.93 53.656 350.211 53.605 350.492 cv
53.555 350.773 53.449 351.078 53.285 351.406 cv
53.121 351.734 52.887 352.098 52.582 352.496 cv
52.277 352.898 51.867 353.359 51.359 353.879 cv
49.953 355.348 li
53.82 355.348 li
53.852 355.352 53.887 355.359 53.926 355.379 cv
53.957 355.402 53.988 355.434 54.016 355.473 cv
54.039 355.516 54.059 355.57 54.07 355.629 cv
54.078 355.691 54.082 355.762 54.086 355.844 cv
cp
f
61.121 353.496 mo
61.121 353.977 61.039 354.398 60.879 354.766 cv
60.719 355.137 60.492 355.449 60.199 355.703 cv
59.906 355.957 59.559 356.148 59.152 356.281 cv
58.746 356.414 58.297 356.48 57.805 356.48 cv
57.527 356.48 57.266 356.461 57.02 356.422 cv
56.77 356.383 56.547 356.336 56.359 356.281 cv
56.164 356.227 56.008 356.172 55.887 356.113 cv
55.762 356.059 55.684 356.016 55.648 355.98 cv
55.613 355.953 55.59 355.922 55.578 355.895 cv
55.563 355.867 55.547 355.836 55.539 355.793 cv
55.523 355.758 55.516 355.707 55.516 355.645 cv
55.508 355.586 55.508 355.516 55.512 355.43 cv
55.508 355.359 55.512 355.289 55.52 355.223 cv
55.527 355.164 55.539 355.113 55.559 355.07 cv
55.574 355.035 55.594 355.008 55.621 354.984 cv
55.645 354.969 55.676 354.957 55.711 354.957 cv
55.754 354.957 55.824 354.988 55.922 355.043 cv
56.016 355.105 56.145 355.168 56.309 355.23 cv
56.469 355.301 56.672 355.363 56.914 355.418 cv
57.152 355.48 57.438 355.508 57.77 355.508 cv
58.074 355.508 58.355 355.473 58.613 355.398 cv
58.871 355.328 59.09 355.215 59.277 355.055 cv
59.457 354.902 59.602 354.707 59.711 354.469 cv
59.813 354.234 59.867 353.945 59.871 353.605 cv
59.867 353.324 59.82 353.074 59.734 352.855 cv
59.641 352.641 59.504 352.461 59.324 352.312 cv
59.137 352.172 58.902 352.062 58.621 351.988 cv
58.332 351.922 57.996 351.887 57.605 351.883 cv
57.324 351.887 57.082 351.902 56.883 351.926 cv
56.68 351.957 56.492 351.969 56.32 351.965 cv
56.191 351.969 56.102 351.937 56.047 351.875 cv
55.992 351.816 55.965 351.703 55.965 351.531 cv
55.965 347.91 li
55.965 347.762 56 347.648 56.07 347.574 cv
56.141 347.504 56.242 347.469 56.375 347.465 cv
60.309 347.465 li
60.34 347.469 60.375 347.48 60.414 347.496 cv
60.445 347.52 60.477 347.551 60.5 347.59 cv
60.523 347.637 60.539 347.687 60.551 347.75 cv
60.563 347.812 60.57 347.887 60.57 347.973 cv
60.57 348.141 60.547 348.27 60.504 348.359 cv
60.461 348.453 60.398 348.5 60.32 348.496 cv
57.145 348.496 li
57.145 350.988 li
57.293 350.969 57.453 350.953 57.617 350.949 cv
57.777 350.945 57.961 350.945 58.176 350.941 cv
58.66 350.945 59.09 351.004 59.457 351.125 cv
59.824 351.246 60.129 351.418 60.375 351.637 cv
60.617 351.859 60.801 352.129 60.93 352.445 cv
61.055 352.762 61.121 353.113 61.121 353.496 cv
cp
f
37.07 307.961 mo
61.89 307.961 li
61.89 325.051 li
37.07 325.051 li
cp
0 0 0 0 cmyk
ef
43.543 312.977 mo
43.539 313.062 43.535 313.137 43.531 313.199 cv
43.523 313.27 43.516 313.332 43.504 313.391 cv
43.492 313.457 43.477 313.516 43.457 313.57 cv
43.434 313.629 43.41 313.691 43.387 313.75 cv
40.191 321.113 li
40.164 321.172 40.137 321.215 40.105 321.246 cv
40.07 321.281 40.027 321.309 39.973 321.328 cv
39.918 321.348 39.848 321.359 39.77 321.371 cv
39.684 321.375 39.586 321.379 39.469 321.383 cv
39.313 321.379 39.191 321.371 39.105 321.359 cv
39.02 321.344 38.957 321.328 38.918 321.297 cv
38.879 321.27 38.859 321.23 38.867 321.187 cv
38.867 321.145 38.883 321.094 38.914 321.031 cv
42.273 313.504 li
38.016 313.504 li
37.93 313.508 37.863 313.461 37.82 313.367 cv
37.777 313.277 37.758 313.148 37.758 312.984 cv
37.758 312.898 37.762 312.824 37.773 312.758 cv
37.785 312.695 37.801 312.641 37.824 312.598 cv
37.844 312.555 37.871 312.523 37.906 312.5 cv
37.938 312.48 37.977 312.469 38.016 312.469 cv
43.188 312.469 li
43.246 312.469 43.301 312.477 43.352 312.492 cv
43.398 312.508 43.434 312.535 43.461 312.574 cv
43.484 312.613 43.504 312.668 43.52 312.73 cv
43.531 312.797 43.539 312.879 43.543 312.977 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.707 320.594 mo
46.707 320.922 46.652 321.137 46.547 321.242 cv
46.438 321.348 46.242 321.398 45.961 321.402 cv
45.684 321.398 45.492 321.348 45.391 321.246 cv
45.281 321.141 45.23 320.93 45.234 320.613 cv
45.23 320.289 45.285 320.074 45.395 319.965 cv
45.5 319.859 45.695 319.805 45.98 319.805 cv
46.254 319.805 46.441 319.859 46.551 319.965 cv
46.652 320.07 46.707 320.281 46.707 320.594 cv
cp
f
54.031 318.488 mo
54.031 318.965 53.949 319.387 53.789 319.758 cv
53.629 320.129 53.402 320.441 53.113 320.695 cv
52.816 320.949 52.469 321.145 52.066 321.273 cv
51.66 321.406 51.211 321.469 50.719 321.469 cv
50.441 321.469 50.18 321.449 49.938 321.41 cv
49.688 321.371 49.469 321.324 49.281 321.27 cv
49.086 321.215 48.93 321.16 48.805 321.102 cv
48.68 321.051 48.602 321.008 48.57 320.973 cv
48.535 320.941 48.512 320.91 48.5 320.883 cv
48.484 320.855 48.469 320.824 48.461 320.781 cv
48.445 320.746 48.438 320.695 48.438 320.633 cv
48.43 320.574 48.43 320.504 48.43 320.422 cv
48.43 320.348 48.434 320.277 48.441 320.215 cv
48.449 320.152 48.461 320.102 48.48 320.062 cv
48.496 320.023 48.516 319.996 48.543 319.977 cv
48.566 319.961 48.598 319.953 48.629 319.949 cv
48.676 319.953 48.746 319.98 48.84 320.035 cv
48.934 320.094 49.063 320.156 49.227 320.223 cv
49.391 320.289 49.59 320.352 49.832 320.41 cv
50.066 320.469 50.352 320.496 50.688 320.496 cv
50.988 320.496 51.27 320.461 51.527 320.387 cv
51.781 320.316 52.004 320.203 52.191 320.047 cv
52.375 319.895 52.52 319.699 52.625 319.461 cv
52.73 319.227 52.781 318.937 52.785 318.598 cv
52.781 318.316 52.738 318.066 52.648 317.848 cv
52.559 317.629 52.422 317.449 52.238 317.305 cv
52.051 317.164 51.816 317.059 51.535 316.984 cv
51.25 316.914 50.91 316.875 50.523 316.875 cv
50.238 316.875 50 316.891 49.801 316.918 cv
49.598 316.949 49.41 316.965 49.238 316.961 cv
49.109 316.965 49.016 316.934 48.965 316.871 cv
48.906 316.812 48.879 316.699 48.883 316.527 cv
48.883 312.914 li
48.879 312.766 48.914 312.656 48.988 312.578 cv
49.055 312.508 49.156 312.469 49.293 312.469 cv
53.223 312.469 li
53.258 312.469 53.293 312.48 53.328 312.5 cv
53.359 312.523 53.387 312.555 53.414 312.594 cv
53.434 312.637 53.449 312.687 53.465 312.75 cv
53.473 312.816 53.48 312.895 53.484 312.977 cv
53.48 313.145 53.457 313.27 53.418 313.359 cv
53.371 313.453 53.313 313.5 53.234 313.496 cv
50.063 313.496 li
50.063 315.984 li
50.215 315.965 50.371 315.953 50.535 315.945 cv
50.691 315.941 50.879 315.937 51.094 315.937 cv
51.578 315.937 52.004 316 52.371 316.121 cv
52.734 316.242 53.039 316.414 53.289 316.633 cv
53.531 316.859 53.719 317.125 53.844 317.437 cv
53.969 317.754 54.031 318.105 54.031 318.488 cv
cp
f
61.484 316.883 mo
61.48 317.566 61.43 318.187 61.324 318.75 cv
61.215 319.312 61.035 319.797 60.789 320.199 cv
60.535 320.605 60.207 320.918 59.809 321.137 cv
59.402 321.359 58.91 321.469 58.324 321.469 cv
57.766 321.469 57.293 321.371 56.914 321.172 cv
56.531 320.977 56.227 320.684 55.992 320.297 cv
55.758 319.91 55.59 319.437 55.496 318.871 cv
55.395 318.309 55.348 317.66 55.348 316.926 cv
55.348 316.254 55.402 315.633 55.512 315.066 cv
55.621 314.504 55.797 314.02 56.047 313.613 cv
56.289 313.211 56.613 312.898 57.02 312.672 cv
57.418 312.453 57.914 312.34 58.504 312.34 cv
59.063 312.34 59.535 312.441 59.918 312.637 cv
60.301 312.84 60.605 313.133 60.84 313.516 cv
61.07 313.906 61.238 314.379 61.336 314.941 cv
61.434 315.504 61.48 316.152 61.484 316.883 cv
cp
60.277 316.965 mo
60.273 316.523 60.258 316.125 60.23 315.773 cv
60.195 315.422 60.148 315.113 60.09 314.844 cv
60.023 314.574 59.945 314.344 59.848 314.148 cv
59.75 313.957 59.633 313.797 59.496 313.668 cv
59.355 313.543 59.195 313.449 59.023 313.391 cv
58.844 313.336 58.648 313.309 58.434 313.305 cv
58.043 313.309 57.727 313.398 57.488 313.582 cv
57.242 313.766 57.051 314.02 56.914 314.336 cv
56.773 314.656 56.68 315.027 56.629 315.457 cv
56.578 315.887 56.555 316.352 56.555 316.844 cv
56.555 317.508 56.586 318.07 56.656 318.531 cv
56.723 319 56.832 319.379 56.984 319.668 cv
57.129 319.965 57.32 320.176 57.551 320.305 cv
57.781 320.441 58.063 320.508 58.395 320.504 cv
58.648 320.508 58.871 320.469 59.066 320.383 cv
59.258 320.305 59.426 320.184 59.566 320.027 cv
59.707 319.875 59.82 319.691 59.914 319.477 cv
60 319.262 60.074 319.023 60.133 318.762 cv
60.184 318.504 60.223 318.223 60.246 317.918 cv
60.266 317.613 60.273 317.297 60.277 316.965 cv
cp
f
37.07 272.961 mo
61.89 272.961 li
61.89 290.051 li
37.07 290.051 li
cp
0 0 0 0 cmyk
ef
43.617 284.062 mo
43.617 284.449 43.547 284.793 43.41 285.09 cv
43.273 285.395 43.078 285.645 42.82 285.848 cv
42.563 286.055 42.242 286.211 41.863 286.312 cv
41.48 286.418 41.047 286.469 40.563 286.469 cv
40.102 286.469 39.691 286.422 39.332 286.328 cv
38.969 286.234 38.664 286.094 38.414 285.902 cv
38.164 285.719 37.973 285.488 37.84 285.211 cv
37.707 284.937 37.641 284.625 37.641 284.27 cv
37.641 283.996 37.684 283.738 37.777 283.504 cv
37.863 283.27 37.996 283.055 38.172 282.859 cv
38.34 282.664 38.551 282.48 38.805 282.305 cv
39.055 282.137 39.34 281.973 39.656 281.816 cv
39.383 281.676 39.141 281.527 38.93 281.367 cv
38.719 281.211 38.539 281.039 38.395 280.852 cv
38.246 280.668 38.137 280.473 38.063 280.262 cv
37.984 280.055 37.945 279.824 37.949 279.574 cv
37.945 279.266 38 278.973 38.117 278.699 cv
38.227 278.43 38.398 278.195 38.625 277.992 cv
38.852 277.793 39.137 277.633 39.488 277.516 cv
39.832 277.398 40.242 277.34 40.711 277.34 cv
41.156 277.34 41.543 277.395 41.871 277.5 cv
42.199 277.609 42.469 277.754 42.68 277.937 cv
42.891 278.125 43.047 278.344 43.152 278.594 cv
43.25 278.844 43.301 279.113 43.305 279.402 cv
43.301 279.637 43.262 279.863 43.191 280.074 cv
43.113 280.293 43.004 280.496 42.855 280.684 cv
42.707 280.879 42.527 281.059 42.316 281.223 cv
42.105 281.395 41.863 281.551 41.59 281.691 cv
41.91 281.855 42.195 282.02 42.453 282.187 cv
42.703 282.355 42.918 282.535 43.094 282.73 cv
43.262 282.926 43.391 283.133 43.484 283.348 cv
43.57 283.566 43.617 283.805 43.617 284.062 cv
cp
42.137 279.512 mo
42.133 279.324 42.102 279.148 42.035 278.992 cv
41.969 278.836 41.871 278.703 41.746 278.594 cv
41.617 278.484 41.457 278.402 41.27 278.344 cv
41.074 278.289 40.859 278.262 40.621 278.258 cv
40.125 278.262 39.75 278.371 39.5 278.594 cv
39.242 278.82 39.117 279.129 39.121 279.512 cv
39.117 279.691 39.148 279.855 39.211 280.008 cv
39.273 280.164 39.367 280.309 39.5 280.445 cv
39.625 280.582 39.789 280.715 39.992 280.844 cv
40.188 280.977 40.426 281.113 40.703 281.254 cv
41.164 281.02 41.52 280.758 41.766 280.465 cv
42.012 280.18 42.133 279.863 42.137 279.512 cv
cp
42.426 284.187 mo
42.422 283.98 42.383 283.789 42.309 283.617 cv
42.227 283.449 42.109 283.289 41.953 283.137 cv
41.797 282.988 41.598 282.844 41.363 282.703 cv
41.125 282.566 40.855 282.422 40.547 282.27 cv
40.258 282.414 40.004 282.555 39.789 282.695 cv
39.57 282.836 39.391 282.984 39.254 283.133 cv
39.113 283.289 39.008 283.445 38.938 283.609 cv
38.863 283.777 38.828 283.961 38.832 284.16 cv
38.828 284.605 38.98 284.949 39.289 285.187 cv
39.59 285.434 40.043 285.555 40.648 285.551 cv
41.23 285.555 41.676 285.434 41.977 285.184 cv
42.273 284.941 42.422 284.609 42.426 284.187 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
46.707 285.594 mo
46.707 285.922 46.652 286.137 46.547 286.242 cv
46.438 286.348 46.242 286.398 45.961 286.402 cv
45.684 286.398 45.492 286.348 45.391 286.246 cv
45.281 286.141 45.23 285.93 45.234 285.613 cv
45.23 285.289 45.285 285.074 45.395 284.965 cv
45.5 284.859 45.695 284.805 45.98 284.805 cv
46.254 284.805 46.441 284.859 46.551 284.965 cv
46.652 285.07 46.707 285.281 46.707 285.594 cv
cp
f
54.203 277.977 mo
54.199 278.062 54.195 278.137 54.191 278.199 cv
54.184 278.27 54.176 278.332 54.164 278.391 cv
54.152 278.457 54.137 278.516 54.117 278.57 cv
54.094 278.629 54.07 278.691 54.047 278.75 cv
50.852 286.113 li
50.824 286.172 50.797 286.215 50.766 286.246 cv
50.73 286.281 50.688 286.309 50.633 286.328 cv
50.578 286.348 50.508 286.359 50.43 286.371 cv
50.344 286.375 50.246 286.379 50.129 286.383 cv
49.973 286.379 49.852 286.371 49.766 286.359 cv
49.68 286.344 49.617 286.328 49.578 286.297 cv
49.539 286.27 49.52 286.23 49.527 286.187 cv
49.527 286.145 49.543 286.094 49.574 286.031 cv
52.934 278.504 li
48.676 278.504 li
48.59 278.508 48.523 278.461 48.48 278.367 cv
48.438 278.277 48.418 278.148 48.418 277.984 cv
48.418 277.898 48.422 277.824 48.434 277.758 cv
48.445 277.695 48.461 277.641 48.484 277.598 cv
48.504 277.555 48.531 277.523 48.566 277.5 cv
48.598 277.48 48.637 277.469 48.676 277.469 cv
53.848 277.469 li
53.906 277.469 53.961 277.477 54.012 277.492 cv
54.059 277.508 54.094 277.535 54.121 277.574 cv
54.145 277.613 54.164 277.668 54.18 277.73 cv
54.191 277.797 54.199 277.879 54.203 277.977 cv
cp
f
61.148 283.488 mo
61.148 283.965 61.066 284.387 60.906 284.758 cv
60.746 285.129 60.52 285.441 60.23 285.695 cv
59.934 285.949 59.586 286.145 59.184 286.273 cv
58.777 286.406 58.328 286.469 57.836 286.469 cv
57.559 286.469 57.297 286.449 57.055 286.41 cv
56.805 286.371 56.586 286.324 56.398 286.27 cv
56.203 286.215 56.047 286.16 55.922 286.102 cv
55.797 286.051 55.719 286.008 55.688 285.973 cv
55.652 285.941 55.629 285.91 55.617 285.883 cv
55.602 285.855 55.586 285.824 55.578 285.781 cv
55.563 285.746 55.555 285.695 55.555 285.633 cv
55.547 285.574 55.547 285.504 55.547 285.422 cv
55.547 285.348 55.551 285.277 55.559 285.215 cv
55.566 285.152 55.578 285.102 55.598 285.062 cv
55.613 285.023 55.633 284.996 55.66 284.977 cv
55.684 284.961 55.715 284.953 55.746 284.949 cv
55.793 284.953 55.863 284.98 55.957 285.035 cv
56.051 285.094 56.18 285.156 56.344 285.223 cv
56.508 285.289 56.707 285.352 56.949 285.41 cv
57.184 285.469 57.469 285.496 57.805 285.496 cv
58.105 285.496 58.387 285.461 58.645 285.387 cv
58.898 285.316 59.121 285.203 59.309 285.047 cv
59.492 284.895 59.637 284.699 59.742 284.461 cv
59.848 284.227 59.898 283.937 59.902 283.598 cv
59.898 283.316 59.855 283.066 59.766 282.848 cv
59.676 282.629 59.539 282.449 59.355 282.305 cv
59.168 282.164 58.934 282.059 58.652 281.984 cv
58.367 281.914 58.027 281.875 57.641 281.875 cv
57.355 281.875 57.117 281.891 56.918 281.918 cv
56.715 281.949 56.527 281.965 56.355 281.961 cv
56.227 281.965 56.133 281.934 56.082 281.871 cv
56.023 281.812 55.996 281.699 56 281.527 cv
56 277.914 li
55.996 277.766 56.031 277.656 56.105 277.578 cv
56.172 277.508 56.273 277.469 56.41 277.469 cv
60.34 277.469 li
60.375 277.469 60.41 277.48 60.445 277.5 cv
60.477 277.523 60.504 277.555 60.531 277.594 cv
60.551 277.637 60.566 277.687 60.582 277.75 cv
60.59 277.816 60.598 277.895 60.602 277.977 cv
60.598 278.145 60.574 278.27 60.535 278.359 cv
60.488 278.453 60.43 278.5 60.352 278.496 cv
57.18 278.496 li
57.18 280.984 li
57.332 280.965 57.488 280.953 57.652 280.945 cv
57.809 280.941 57.996 280.937 58.211 280.937 cv
58.695 280.937 59.121 281 59.488 281.121 cv
59.852 281.242 60.156 281.414 60.406 281.633 cv
60.648 281.859 60.836 282.125 60.961 282.437 cv
61.086 282.754 61.148 283.105 61.148 283.488 cv
cp
f
29.969 237.961 mo
61.887 237.961 li
61.887 255.051 li
29.969 255.051 li
cp
0 0 0 0 cmyk
ef
36.332 250.863 mo
36.328 250.953 36.32 251.023 36.309 251.082 cv
36.293 251.145 36.273 251.195 36.254 251.227 cv
36.23 251.266 36.207 251.289 36.176 251.305 cv
36.145 251.32 36.113 251.328 36.086 251.328 cv
31.449 251.328 li
31.414 251.328 31.387 251.32 31.359 251.305 cv
31.332 251.289 31.305 251.266 31.281 251.227 cv
31.254 251.195 31.234 251.145 31.223 251.082 cv
31.207 251.023 31.199 250.953 31.203 250.863 cv
31.199 250.785 31.207 250.711 31.223 250.648 cv
31.234 250.59 31.25 250.543 31.273 250.504 cv
31.289 250.469 31.316 250.437 31.348 250.414 cv
31.379 250.395 31.41 250.387 31.449 250.383 cv
33.301 250.383 li
33.301 243.637 li
31.586 244.656 li
31.496 244.707 31.426 244.734 31.379 244.742 cv
31.324 244.75 31.281 244.742 31.25 244.711 cv
31.215 244.684 31.195 244.633 31.184 244.562 cv
31.172 244.496 31.164 244.41 31.168 244.301 cv
31.164 244.227 31.168 244.16 31.18 244.102 cv
31.184 244.051 31.195 244.004 31.211 243.965 cv
31.223 243.93 31.242 243.898 31.266 243.871 cv
31.289 243.844 31.32 243.816 31.367 243.789 cv
33.41 242.477 li
33.426 242.465 33.445 242.453 33.477 242.445 cv
33.5 242.437 33.535 242.43 33.582 242.418 cv
33.621 242.41 33.672 242.402 33.727 242.398 cv
33.781 242.398 33.848 242.398 33.934 242.395 cv
34.039 242.398 34.133 242.402 34.207 242.41 cv
34.277 242.418 34.332 242.434 34.379 242.449 cv
34.418 242.469 34.445 242.488 34.461 242.512 cv
34.469 242.539 34.477 242.562 34.48 242.586 cv
34.48 250.383 li
36.086 250.383 li
36.121 250.387 36.156 250.395 36.188 250.414 cv
36.219 250.437 36.242 250.469 36.266 250.504 cv
36.281 250.543 36.297 250.59 36.313 250.648 cv
36.32 250.711 36.328 250.785 36.332 250.863 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
43.723 246.871 mo
43.719 247.555 43.668 248.176 43.563 248.738 cv
43.453 249.301 43.273 249.785 43.027 250.187 cv
42.773 250.594 42.445 250.906 42.047 251.125 cv
41.641 251.348 41.148 251.457 40.563 251.457 cv
40.004 251.457 39.531 251.359 39.152 251.16 cv
38.77 250.965 38.465 250.672 38.23 250.285 cv
37.996 249.898 37.828 249.426 37.734 248.859 cv
37.633 248.297 37.586 247.648 37.586 246.914 cv
37.586 246.242 37.641 245.621 37.75 245.055 cv
37.859 244.492 38.035 244.008 38.285 243.602 cv
38.527 243.199 38.852 242.887 39.258 242.66 cv
39.656 242.441 40.152 242.328 40.742 242.328 cv
41.301 242.328 41.773 242.43 42.156 242.625 cv
42.539 242.828 42.844 243.121 43.078 243.504 cv
43.309 243.895 43.477 244.367 43.574 244.93 cv
43.672 245.492 43.719 246.141 43.723 246.871 cv
cp
42.516 246.953 mo
42.512 246.512 42.496 246.113 42.469 245.762 cv
42.434 245.41 42.387 245.102 42.328 244.832 cv
42.262 244.562 42.184 244.332 42.086 244.137 cv
41.988 243.945 41.871 243.785 41.734 243.656 cv
41.594 243.531 41.434 243.437 41.262 243.379 cv
41.082 243.324 40.887 243.297 40.672 243.293 cv
40.281 243.297 39.965 243.387 39.727 243.57 cv
39.48 243.754 39.289 244.008 39.152 244.324 cv
39.012 244.645 38.918 245.016 38.867 245.445 cv
38.816 245.875 38.793 246.34 38.793 246.832 cv
38.793 247.496 38.824 248.059 38.895 248.52 cv
38.961 248.988 39.07 249.367 39.223 249.656 cv
39.367 249.953 39.559 250.164 39.789 250.293 cv
40.02 250.43 40.301 250.496 40.633 250.492 cv
40.887 250.496 41.109 250.457 41.305 250.371 cv
41.496 250.293 41.664 250.172 41.805 250.016 cv
41.945 249.863 42.059 249.68 42.152 249.465 cv
42.238 249.25 42.313 249.012 42.371 248.75 cv
42.422 248.492 42.461 248.211 42.484 247.906 cv
42.504 247.602 42.512 247.285 42.516 246.953 cv
cp
f
46.648 250.582 mo
46.648 250.91 46.594 251.125 46.488 251.23 cv
46.379 251.336 46.184 251.387 45.902 251.391 cv
45.625 251.387 45.434 251.336 45.332 251.234 cv
45.223 251.129 45.172 250.918 45.176 250.602 cv
45.172 250.277 45.227 250.062 45.336 249.953 cv
45.441 249.848 45.637 249.793 45.922 249.793 cv
46.195 249.793 46.383 249.848 46.492 249.953 cv
46.594 250.059 46.648 250.27 46.648 250.582 cv
cp
f
54.352 246.871 mo
54.348 247.555 54.297 248.176 54.191 248.738 cv
54.082 249.301 53.902 249.785 53.656 250.187 cv
53.402 250.594 53.074 250.906 52.676 251.125 cv
52.27 251.348 51.777 251.457 51.191 251.457 cv
50.633 251.457 50.16 251.359 49.781 251.16 cv
49.398 250.965 49.094 250.672 48.859 250.285 cv
48.625 249.898 48.457 249.426 48.363 248.859 cv
48.262 248.297 48.215 247.648 48.215 246.914 cv
48.215 246.242 48.27 245.621 48.379 245.055 cv
48.488 244.492 48.664 244.008 48.914 243.602 cv
49.156 243.199 49.48 242.887 49.887 242.66 cv
50.285 242.441 50.781 242.328 51.371 242.328 cv
51.93 242.328 52.402 242.43 52.785 242.625 cv
53.168 242.828 53.473 243.121 53.707 243.504 cv
53.938 243.895 54.105 244.367 54.203 244.93 cv
54.301 245.492 54.348 246.141 54.352 246.871 cv
cp
53.145 246.953 mo
53.141 246.512 53.125 246.113 53.098 245.762 cv
53.063 245.41 53.016 245.102 52.957 244.832 cv
52.891 244.562 52.813 244.332 52.715 244.137 cv
52.617 243.945 52.5 243.785 52.363 243.656 cv
52.223 243.531 52.063 243.437 51.891 243.379 cv
51.711 243.324 51.516 243.297 51.301 243.293 cv
50.91 243.297 50.594 243.387 50.355 243.57 cv
50.109 243.754 49.918 244.008 49.781 244.324 cv
49.641 244.645 49.547 245.016 49.496 245.445 cv
49.445 245.875 49.422 246.34 49.422 246.832 cv
49.422 247.496 49.453 248.059 49.523 248.52 cv
49.59 248.988 49.699 249.367 49.852 249.656 cv
49.996 249.953 50.188 250.164 50.418 250.293 cv
50.648 250.43 50.93 250.496 51.262 250.492 cv
51.516 250.496 51.738 250.457 51.934 250.371 cv
52.125 250.293 52.293 250.172 52.434 250.016 cv
52.574 249.863 52.688 249.68 52.781 249.465 cv
52.867 249.25 52.941 249.012 53 248.75 cv
53.051 248.492 53.09 248.211 53.113 247.906 cv
53.133 247.602 53.141 247.285 53.145 246.953 cv
cp
f
61.469 246.871 mo
61.465 247.555 61.414 248.176 61.309 248.738 cv
61.199 249.301 61.02 249.785 60.773 250.187 cv
60.52 250.594 60.191 250.906 59.793 251.125 cv
59.387 251.348 58.895 251.457 58.309 251.457 cv
57.75 251.457 57.277 251.359 56.898 251.16 cv
56.516 250.965 56.211 250.672 55.977 250.285 cv
55.742 249.898 55.574 249.426 55.48 248.859 cv
55.379 248.297 55.332 247.648 55.332 246.914 cv
55.332 246.242 55.387 245.621 55.496 245.055 cv
55.605 244.492 55.781 244.008 56.031 243.602 cv
56.273 243.199 56.598 242.887 57.004 242.66 cv
57.402 242.441 57.898 242.328 58.488 242.328 cv
59.047 242.328 59.52 242.43 59.902 242.625 cv
60.285 242.828 60.59 243.121 60.824 243.504 cv
61.055 243.895 61.223 244.367 61.32 244.93 cv
61.418 245.492 61.465 246.141 61.469 246.871 cv
cp
60.262 246.953 mo
60.258 246.512 60.242 246.113 60.215 245.762 cv
60.18 245.41 60.133 245.102 60.074 244.832 cv
60.008 244.562 59.93 244.332 59.832 244.137 cv
59.734 243.945 59.617 243.785 59.48 243.656 cv
59.34 243.531 59.18 243.437 59.008 243.379 cv
58.828 243.324 58.633 243.297 58.418 243.293 cv
58.027 243.297 57.711 243.387 57.473 243.57 cv
57.227 243.754 57.035 244.008 56.898 244.324 cv
56.758 244.645 56.664 245.016 56.613 245.445 cv
56.563 245.875 56.539 246.34 56.539 246.832 cv
56.539 247.496 56.57 248.059 56.641 248.52 cv
56.707 248.988 56.816 249.367 56.969 249.656 cv
57.113 249.953 57.305 250.164 57.535 250.293 cv
57.766 250.43 58.047 250.496 58.379 250.492 cv
58.633 250.496 58.855 250.457 59.051 250.371 cv
59.242 250.293 59.41 250.172 59.551 250.016 cv
59.691 249.863 59.805 249.68 59.898 249.465 cv
59.984 249.25 60.059 249.012 60.117 248.75 cv
60.168 248.492 60.207 248.211 60.23 247.906 cv
60.25 247.602 60.258 247.285 60.262 246.953 cv
cp
f
29.969 202.969 mo
61.887 202.969 li
61.887 220.059 li
29.969 220.059 li
cp
0 0 0 0 cmyk
ef
36.332 215.875 mo
36.328 215.965 36.32 216.035 36.309 216.094 cv
36.293 216.156 36.273 216.207 36.254 216.238 cv
36.23 216.277 36.207 216.301 36.176 216.316 cv
36.145 216.332 36.113 216.34 36.086 216.34 cv
31.449 216.34 li
31.414 216.34 31.387 216.332 31.359 216.316 cv
31.332 216.301 31.305 216.277 31.281 216.238 cv
31.254 216.207 31.234 216.156 31.223 216.094 cv
31.207 216.035 31.199 215.965 31.203 215.875 cv
31.199 215.797 31.207 215.723 31.223 215.66 cv
31.234 215.602 31.25 215.555 31.273 215.516 cv
31.289 215.48 31.316 215.449 31.348 215.426 cv
31.379 215.406 31.41 215.398 31.449 215.395 cv
33.301 215.395 li
33.301 208.648 li
31.586 209.668 li
31.496 209.719 31.426 209.746 31.379 209.754 cv
31.324 209.762 31.281 209.754 31.25 209.723 cv
31.215 209.695 31.195 209.645 31.184 209.574 cv
31.172 209.508 31.164 209.422 31.168 209.312 cv
31.164 209.238 31.168 209.172 31.18 209.113 cv
31.184 209.062 31.195 209.016 31.211 208.977 cv
31.223 208.941 31.242 208.91 31.266 208.883 cv
31.289 208.855 31.32 208.828 31.367 208.801 cv
33.41 207.488 li
33.426 207.477 33.445 207.465 33.477 207.457 cv
33.5 207.449 33.535 207.441 33.582 207.43 cv
33.621 207.422 33.672 207.414 33.727 207.41 cv
33.781 207.41 33.848 207.41 33.934 207.406 cv
34.039 207.41 34.133 207.414 34.207 207.422 cv
34.277 207.43 34.332 207.445 34.379 207.461 cv
34.418 207.48 34.445 207.5 34.461 207.523 cv
34.469 207.551 34.477 207.574 34.48 207.598 cv
34.48 215.395 li
36.086 215.395 li
36.121 215.398 36.156 215.406 36.188 215.426 cv
36.219 215.449 36.242 215.48 36.266 215.516 cv
36.281 215.555 36.297 215.602 36.313 215.66 cv
36.32 215.723 36.328 215.797 36.332 215.875 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
43.449 215.875 mo
43.445 215.965 43.438 216.035 43.426 216.094 cv
43.41 216.156 43.391 216.207 43.371 216.238 cv
43.348 216.277 43.324 216.301 43.293 216.316 cv
43.262 216.332 43.23 216.34 43.203 216.34 cv
38.566 216.34 li
38.531 216.34 38.504 216.332 38.477 216.316 cv
38.449 216.301 38.422 216.277 38.398 216.238 cv
38.371 216.207 38.352 216.156 38.34 216.094 cv
38.324 216.035 38.316 215.965 38.32 215.875 cv
38.316 215.797 38.324 215.723 38.34 215.66 cv
38.352 215.602 38.367 215.555 38.391 215.516 cv
38.406 215.48 38.434 215.449 38.465 215.426 cv
38.496 215.406 38.527 215.398 38.566 215.395 cv
40.418 215.395 li
40.418 208.648 li
38.703 209.668 li
38.613 209.719 38.543 209.746 38.496 209.754 cv
38.441 209.762 38.398 209.754 38.367 209.723 cv
38.332 209.695 38.313 209.645 38.301 209.574 cv
38.289 209.508 38.281 209.422 38.285 209.312 cv
38.281 209.238 38.285 209.172 38.297 209.113 cv
38.301 209.062 38.313 209.016 38.328 208.977 cv
38.34 208.941 38.359 208.91 38.383 208.883 cv
38.406 208.855 38.438 208.828 38.484 208.801 cv
40.527 207.488 li
40.543 207.477 40.563 207.465 40.594 207.457 cv
40.617 207.449 40.652 207.441 40.699 207.43 cv
40.738 207.422 40.789 207.414 40.844 207.41 cv
40.898 207.41 40.965 207.41 41.051 207.406 cv
41.156 207.41 41.25 207.414 41.324 207.422 cv
41.395 207.43 41.449 207.445 41.496 207.461 cv
41.535 207.48 41.563 207.5 41.578 207.523 cv
41.586 207.551 41.594 207.574 41.598 207.598 cv
41.598 215.395 li
43.203 215.395 li
43.238 215.398 43.273 215.406 43.305 215.426 cv
43.336 215.449 43.359 215.48 43.383 215.516 cv
43.398 215.555 43.414 215.602 43.43 215.66 cv
43.438 215.723 43.445 215.797 43.449 215.875 cv
cp
f
46.648 215.594 mo
46.648 215.922 46.594 216.137 46.488 216.242 cv
46.379 216.348 46.184 216.398 45.902 216.402 cv
45.625 216.398 45.434 216.348 45.332 216.246 cv
45.223 216.141 45.172 215.93 45.176 215.613 cv
45.172 215.289 45.227 215.074 45.336 214.965 cv
45.441 214.859 45.637 214.805 45.922 214.805 cv
46.195 214.805 46.383 214.859 46.492 214.965 cv
46.594 215.07 46.648 215.281 46.648 215.594 cv
cp
f
54.059 215.832 mo
54.055 215.918 54.051 215.992 54.039 216.055 cv
54.027 216.121 54.012 216.176 53.992 216.215 cv
53.969 216.262 53.941 216.293 53.91 216.309 cv
53.875 216.332 53.836 216.34 53.797 216.34 cv
48.895 216.34 li
48.832 216.34 48.773 216.332 48.727 216.316 cv
48.676 216.301 48.637 216.277 48.602 216.238 cv
48.566 216.207 48.539 216.152 48.527 216.082 cv
48.508 216.012 48.5 215.926 48.504 215.824 cv
48.5 215.734 48.504 215.656 48.512 215.586 cv
48.516 215.52 48.531 215.461 48.559 215.406 cv
48.582 215.355 48.613 215.301 48.648 215.246 cv
48.684 215.195 48.727 215.141 48.785 215.078 cv
50.559 213.254 li
50.969 212.836 51.297 212.461 51.547 212.125 cv
51.793 211.797 51.984 211.492 52.117 211.215 cv
52.25 210.941 52.336 210.691 52.383 210.465 cv
52.422 210.242 52.445 210.031 52.445 209.836 cv
52.445 209.641 52.41 209.457 52.344 209.277 cv
52.277 209.105 52.184 208.949 52.059 208.812 cv
51.934 208.684 51.777 208.578 51.59 208.496 cv
51.402 208.422 51.184 208.383 50.938 208.379 cv
50.648 208.383 50.391 208.422 50.164 208.496 cv
49.934 208.578 49.734 208.664 49.563 208.75 cv
49.391 208.844 49.246 208.926 49.129 209.004 cv
49.012 209.082 48.926 209.121 48.875 209.121 cv
48.84 209.121 48.809 209.113 48.785 209.094 cv
48.754 209.078 48.734 209.047 48.719 209.004 cv
48.703 208.965 48.688 208.91 48.68 208.84 cv
48.668 208.773 48.664 208.691 48.668 208.594 cv
48.664 208.527 48.668 208.469 48.676 208.418 cv
48.68 208.367 48.688 208.324 48.699 208.285 cv
48.707 208.25 48.723 208.215 48.742 208.184 cv
48.762 208.152 48.797 208.113 48.855 208.062 cv
48.906 208.016 49 207.949 49.137 207.867 cv
49.27 207.785 49.441 207.707 49.645 207.625 cv
49.848 207.547 50.07 207.477 50.316 207.422 cv
50.559 207.367 50.816 207.34 51.09 207.34 cv
51.516 207.34 51.891 207.402 52.215 207.523 cv
52.535 207.645 52.801 207.809 53.016 208.02 cv
53.227 208.23 53.387 208.477 53.492 208.75 cv
53.598 209.031 53.652 209.328 53.652 209.641 cv
53.652 209.93 53.625 210.211 53.574 210.488 cv
53.523 210.773 53.418 211.078 53.258 211.402 cv
53.094 211.73 52.859 212.094 52.555 212.492 cv
52.246 212.895 51.84 213.355 51.336 213.871 cv
49.93 215.34 li
53.789 215.34 li
53.82 215.344 53.855 215.355 53.895 215.371 cv
53.926 215.395 53.957 215.426 53.984 215.465 cv
54.008 215.508 54.027 215.559 54.039 215.617 cv
54.051 215.684 54.055 215.754 54.059 215.832 cv
cp
f
61.133 213.488 mo
61.133 213.965 61.051 214.387 60.891 214.758 cv
60.73 215.129 60.504 215.441 60.215 215.695 cv
59.918 215.949 59.57 216.145 59.168 216.273 cv
58.762 216.406 58.313 216.469 57.82 216.469 cv
57.543 216.469 57.281 216.449 57.039 216.41 cv
56.789 216.371 56.57 216.324 56.383 216.27 cv
56.188 216.215 56.031 216.16 55.906 216.102 cv
55.781 216.051 55.703 216.008 55.672 215.973 cv
55.637 215.941 55.613 215.91 55.602 215.883 cv
55.586 215.855 55.57 215.824 55.563 215.781 cv
55.547 215.746 55.539 215.695 55.539 215.633 cv
55.531 215.574 55.531 215.504 55.531 215.422 cv
55.531 215.348 55.535 215.277 55.543 215.215 cv
55.551 215.152 55.563 215.102 55.582 215.062 cv
55.598 215.023 55.617 214.996 55.645 214.977 cv
55.668 214.961 55.699 214.953 55.73 214.949 cv
55.777 214.953 55.848 214.98 55.941 215.035 cv
56.035 215.094 56.164 215.156 56.328 215.223 cv
56.492 215.289 56.691 215.352 56.934 215.41 cv
57.168 215.469 57.453 215.496 57.789 215.496 cv
58.09 215.496 58.371 215.461 58.629 215.387 cv
58.883 215.316 59.105 215.203 59.293 215.047 cv
59.477 214.895 59.621 214.699 59.727 214.461 cv
59.832 214.227 59.883 213.937 59.887 213.598 cv
59.883 213.316 59.84 213.066 59.75 212.848 cv
59.66 212.629 59.523 212.449 59.34 212.305 cv
59.152 212.164 58.918 212.059 58.637 211.984 cv
58.352 211.914 58.012 211.875 57.625 211.875 cv
57.34 211.875 57.102 211.891 56.902 211.918 cv
56.699 211.949 56.512 211.965 56.34 211.961 cv
56.211 211.965 56.117 211.934 56.066 211.871 cv
56.008 211.812 55.98 211.699 55.984 211.527 cv
55.984 207.914 li
55.98 207.766 56.016 207.656 56.09 207.578 cv
56.156 207.508 56.258 207.469 56.395 207.469 cv
60.324 207.469 li
60.359 207.469 60.395 207.48 60.43 207.5 cv
60.461 207.523 60.488 207.555 60.516 207.594 cv
60.535 207.637 60.551 207.687 60.566 207.75 cv
60.574 207.816 60.582 207.895 60.586 207.977 cv
60.582 208.145 60.559 208.27 60.52 208.359 cv
60.473 208.453 60.414 208.5 60.336 208.496 cv
57.164 208.496 li
57.164 210.984 li
57.316 210.965 57.473 210.953 57.637 210.945 cv
57.793 210.941 57.98 210.937 58.195 210.937 cv
58.68 210.937 59.105 211 59.473 211.121 cv
59.836 211.242 60.141 211.414 60.391 211.633 cv
60.633 211.859 60.82 212.125 60.945 212.437 cv
61.07 212.754 61.133 213.105 61.133 213.488 cv
cp
f
29.969 167.969 mo
61.887 167.969 li
61.887 185.059 li
29.969 185.059 li
cp
0 0 0 0 cmyk
ef
36.332 180.855 mo
36.328 180.945 36.32 181.016 36.309 181.074 cv
36.293 181.137 36.273 181.187 36.254 181.219 cv
36.23 181.258 36.207 181.281 36.176 181.297 cv
36.145 181.312 36.113 181.32 36.086 181.32 cv
31.449 181.32 li
31.414 181.32 31.387 181.312 31.359 181.297 cv
31.332 181.281 31.305 181.258 31.281 181.219 cv
31.254 181.187 31.234 181.137 31.223 181.074 cv
31.207 181.016 31.199 180.945 31.203 180.855 cv
31.199 180.777 31.207 180.703 31.223 180.641 cv
31.234 180.582 31.25 180.535 31.273 180.496 cv
31.289 180.461 31.316 180.43 31.348 180.406 cv
31.379 180.387 31.41 180.379 31.449 180.375 cv
33.301 180.375 li
33.301 173.629 li
31.586 174.648 li
31.496 174.699 31.426 174.727 31.379 174.734 cv
31.324 174.742 31.281 174.734 31.25 174.703 cv
31.215 174.676 31.195 174.625 31.184 174.555 cv
31.172 174.488 31.164 174.402 31.168 174.293 cv
31.164 174.219 31.168 174.152 31.18 174.094 cv
31.184 174.043 31.195 173.996 31.211 173.957 cv
31.223 173.922 31.242 173.891 31.266 173.863 cv
31.289 173.836 31.32 173.809 31.367 173.781 cv
33.41 172.469 li
33.426 172.457 33.445 172.445 33.477 172.437 cv
33.5 172.43 33.535 172.422 33.582 172.41 cv
33.621 172.402 33.672 172.395 33.727 172.391 cv
33.781 172.391 33.848 172.391 33.934 172.387 cv
34.039 172.391 34.133 172.395 34.207 172.402 cv
34.277 172.41 34.332 172.426 34.379 172.441 cv
34.418 172.461 34.445 172.48 34.461 172.504 cv
34.469 172.531 34.477 172.555 34.48 172.578 cv
34.48 180.375 li
36.086 180.375 li
36.121 180.379 36.156 180.387 36.188 180.406 cv
36.219 180.43 36.242 180.461 36.266 180.496 cv
36.281 180.535 36.297 180.582 36.313 180.641 cv
36.32 180.703 36.328 180.777 36.332 180.855 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
43.43 180.812 mo
43.426 180.898 43.422 180.973 43.41 181.035 cv
43.398 181.102 43.383 181.156 43.363 181.195 cv
43.34 181.242 43.313 181.273 43.281 181.289 cv
43.246 181.312 43.207 181.32 43.168 181.32 cv
38.266 181.32 li
38.203 181.32 38.145 181.312 38.098 181.297 cv
38.047 181.281 38.008 181.258 37.973 181.219 cv
37.938 181.187 37.91 181.133 37.898 181.062 cv
37.879 180.992 37.871 180.906 37.875 180.805 cv
37.871 180.715 37.875 180.637 37.883 180.566 cv
37.887 180.5 37.902 180.441 37.93 180.387 cv
37.953 180.336 37.984 180.281 38.02 180.227 cv
38.055 180.176 38.098 180.121 38.156 180.059 cv
39.93 178.234 li
40.34 177.816 40.668 177.441 40.918 177.105 cv
41.164 176.777 41.355 176.473 41.488 176.195 cv
41.621 175.922 41.707 175.672 41.754 175.445 cv
41.793 175.223 41.816 175.012 41.816 174.816 cv
41.816 174.621 41.781 174.437 41.715 174.258 cv
41.648 174.086 41.555 173.93 41.43 173.793 cv
41.305 173.664 41.148 173.559 40.961 173.477 cv
40.773 173.402 40.555 173.363 40.309 173.359 cv
40.02 173.363 39.762 173.402 39.535 173.477 cv
39.305 173.559 39.105 173.645 38.934 173.73 cv
38.762 173.824 38.617 173.906 38.5 173.984 cv
38.383 174.062 38.297 174.102 38.246 174.102 cv
38.211 174.102 38.18 174.094 38.156 174.074 cv
38.125 174.059 38.105 174.027 38.09 173.984 cv
38.074 173.945 38.059 173.891 38.051 173.82 cv
38.039 173.754 38.035 173.672 38.039 173.574 cv
38.035 173.508 38.039 173.449 38.047 173.398 cv
38.051 173.348 38.059 173.305 38.07 173.266 cv
38.078 173.23 38.094 173.195 38.113 173.164 cv
38.133 173.133 38.168 173.094 38.227 173.043 cv
38.277 172.996 38.371 172.93 38.508 172.848 cv
38.641 172.766 38.813 172.687 39.016 172.605 cv
39.219 172.527 39.441 172.457 39.688 172.402 cv
39.93 172.348 40.188 172.32 40.461 172.32 cv
40.887 172.32 41.262 172.383 41.586 172.504 cv
41.906 172.625 42.172 172.789 42.387 173 cv
42.598 173.211 42.758 173.457 42.863 173.73 cv
42.969 174.012 43.023 174.309 43.023 174.621 cv
43.023 174.91 42.996 175.191 42.945 175.469 cv
42.895 175.754 42.789 176.059 42.629 176.383 cv
42.465 176.711 42.23 177.074 41.926 177.473 cv
41.617 177.875 41.211 178.336 40.707 178.852 cv
39.301 180.32 li
43.16 180.32 li
43.191 180.324 43.227 180.336 43.266 180.352 cv
43.297 180.375 43.328 180.406 43.355 180.445 cv
43.379 180.488 43.398 180.539 43.41 180.598 cv
43.422 180.664 43.426 180.734 43.43 180.812 cv
cp
f
46.648 180.574 mo
46.648 180.902 46.594 181.117 46.488 181.223 cv
46.379 181.328 46.184 181.379 45.902 181.383 cv
45.625 181.379 45.434 181.328 45.332 181.227 cv
45.223 181.121 45.172 180.91 45.176 180.594 cv
45.172 180.27 45.227 180.055 45.336 179.945 cv
45.441 179.84 45.637 179.785 45.922 179.785 cv
46.195 179.785 46.383 179.84 46.492 179.945 cv
46.594 180.051 46.648 180.262 46.648 180.574 cv
cp
f
54.016 178.469 mo
54.016 178.945 53.934 179.367 53.773 179.738 cv
53.613 180.109 53.387 180.422 53.098 180.676 cv
52.801 180.93 52.453 181.125 52.051 181.254 cv
51.645 181.387 51.195 181.449 50.703 181.449 cv
50.426 181.449 50.164 181.43 49.922 181.391 cv
49.672 181.352 49.453 181.305 49.266 181.25 cv
49.07 181.195 48.914 181.141 48.789 181.082 cv
48.664 181.031 48.586 180.988 48.555 180.953 cv
48.52 180.922 48.496 180.891 48.484 180.863 cv
48.469 180.836 48.453 180.805 48.445 180.762 cv
48.43 180.727 48.422 180.676 48.422 180.613 cv
48.414 180.555 48.414 180.484 48.414 180.402 cv
48.414 180.328 48.418 180.258 48.426 180.195 cv
48.434 180.133 48.445 180.082 48.465 180.043 cv
48.48 180.004 48.5 179.977 48.527 179.957 cv
48.551 179.941 48.582 179.934 48.613 179.93 cv
48.66 179.934 48.73 179.961 48.824 180.016 cv
48.918 180.074 49.047 180.137 49.211 180.203 cv
49.375 180.27 49.574 180.332 49.816 180.391 cv
50.051 180.449 50.336 180.477 50.672 180.477 cv
50.973 180.477 51.254 180.441 51.512 180.367 cv
51.766 180.297 51.988 180.184 52.176 180.027 cv
52.359 179.875 52.504 179.68 52.609 179.441 cv
52.715 179.207 52.766 178.918 52.77 178.578 cv
52.766 178.297 52.723 178.047 52.633 177.828 cv
52.543 177.609 52.406 177.43 52.223 177.285 cv
52.035 177.145 51.801 177.039 51.52 176.965 cv
51.234 176.895 50.895 176.855 50.508 176.855 cv
50.223 176.855 49.984 176.871 49.785 176.898 cv
49.582 176.93 49.395 176.945 49.223 176.941 cv
49.094 176.945 49 176.914 48.949 176.852 cv
48.891 176.793 48.863 176.68 48.867 176.508 cv
48.867 172.895 li
48.863 172.746 48.898 172.637 48.973 172.559 cv
49.039 172.488 49.141 172.449 49.277 172.449 cv
53.207 172.449 li
53.242 172.449 53.277 172.461 53.313 172.48 cv
53.344 172.504 53.371 172.535 53.398 172.574 cv
53.418 172.617 53.434 172.668 53.449 172.73 cv
53.457 172.797 53.465 172.875 53.469 172.957 cv
53.465 173.125 53.441 173.25 53.402 173.34 cv
53.355 173.434 53.297 173.48 53.219 173.477 cv
50.047 173.477 li
50.047 175.965 li
50.199 175.945 50.355 175.934 50.52 175.926 cv
50.676 175.922 50.863 175.918 51.078 175.918 cv
51.563 175.918 51.988 175.98 52.355 176.102 cv
52.719 176.223 53.023 176.395 53.273 176.613 cv
53.516 176.84 53.703 177.105 53.828 177.418 cv
53.953 177.734 54.016 178.086 54.016 178.469 cv
cp
f
61.469 176.863 mo
61.465 177.547 61.414 178.168 61.309 178.73 cv
61.199 179.293 61.02 179.777 60.773 180.18 cv
60.52 180.586 60.191 180.898 59.793 181.117 cv
59.387 181.34 58.895 181.449 58.309 181.449 cv
57.75 181.449 57.277 181.352 56.898 181.152 cv
56.516 180.957 56.211 180.664 55.977 180.277 cv
55.742 179.891 55.574 179.418 55.48 178.852 cv
55.379 178.289 55.332 177.641 55.332 176.906 cv
55.332 176.234 55.387 175.613 55.496 175.047 cv
55.605 174.484 55.781 174 56.031 173.594 cv
56.273 173.191 56.598 172.879 57.004 172.652 cv
57.402 172.434 57.898 172.32 58.488 172.32 cv
59.047 172.32 59.52 172.422 59.902 172.617 cv
60.285 172.82 60.59 173.113 60.824 173.496 cv
61.055 173.887 61.223 174.359 61.32 174.922 cv
61.418 175.484 61.465 176.133 61.469 176.863 cv
cp
60.262 176.945 mo
60.258 176.504 60.242 176.105 60.215 175.754 cv
60.18 175.402 60.133 175.094 60.074 174.824 cv
60.008 174.555 59.93 174.324 59.832 174.129 cv
59.734 173.937 59.617 173.777 59.48 173.648 cv
59.34 173.523 59.18 173.43 59.008 173.371 cv
58.828 173.316 58.633 173.289 58.418 173.285 cv
58.027 173.289 57.711 173.379 57.473 173.562 cv
57.227 173.746 57.035 174 56.898 174.316 cv
56.758 174.637 56.664 175.008 56.613 175.437 cv
56.563 175.867 56.539 176.332 56.539 176.824 cv
56.539 177.488 56.57 178.051 56.641 178.512 cv
56.707 178.98 56.816 179.359 56.969 179.648 cv
57.113 179.945 57.305 180.156 57.535 180.285 cv
57.766 180.422 58.047 180.488 58.379 180.484 cv
58.633 180.488 58.855 180.449 59.051 180.363 cv
59.242 180.285 59.41 180.164 59.551 180.008 cv
59.691 179.855 59.805 179.672 59.898 179.457 cv
59.984 179.242 60.059 179.004 60.117 178.742 cv
60.168 178.484 60.207 178.203 60.23 177.898 cv
60.25 177.594 60.258 177.277 60.262 176.945 cv
cp
f
29.969 132.969 mo
61.887 132.969 li
61.887 150.059 li
29.969 150.059 li
cp
0 0 0 0 cmyk
ef
36.332 145.863 mo
36.328 145.953 36.32 146.023 36.309 146.082 cv
36.293 146.145 36.273 146.195 36.254 146.227 cv
36.23 146.266 36.207 146.289 36.176 146.305 cv
36.145 146.32 36.113 146.328 36.086 146.328 cv
31.449 146.328 li
31.414 146.328 31.387 146.32 31.359 146.305 cv
31.332 146.289 31.305 146.266 31.281 146.227 cv
31.254 146.195 31.234 146.145 31.223 146.082 cv
31.207 146.023 31.199 145.953 31.203 145.863 cv
31.199 145.785 31.207 145.711 31.223 145.648 cv
31.234 145.59 31.25 145.543 31.273 145.504 cv
31.289 145.469 31.316 145.437 31.348 145.414 cv
31.379 145.395 31.41 145.387 31.449 145.383 cv
33.301 145.383 li
33.301 138.637 li
31.586 139.656 li
31.496 139.707 31.426 139.734 31.379 139.742 cv
31.324 139.75 31.281 139.742 31.25 139.711 cv
31.215 139.684 31.195 139.633 31.184 139.562 cv
31.172 139.496 31.164 139.41 31.168 139.301 cv
31.164 139.227 31.168 139.16 31.18 139.102 cv
31.184 139.051 31.195 139.004 31.211 138.965 cv
31.223 138.93 31.242 138.898 31.266 138.871 cv
31.289 138.844 31.32 138.816 31.367 138.789 cv
33.41 137.477 li
33.426 137.465 33.445 137.453 33.477 137.445 cv
33.5 137.437 33.535 137.43 33.582 137.418 cv
33.621 137.41 33.672 137.402 33.727 137.398 cv
33.781 137.398 33.848 137.398 33.934 137.395 cv
34.039 137.398 34.133 137.402 34.207 137.41 cv
34.277 137.418 34.332 137.434 34.379 137.449 cv
34.418 137.469 34.445 137.488 34.461 137.512 cv
34.469 137.539 34.477 137.562 34.48 137.586 cv
34.48 145.383 li
36.086 145.383 li
36.121 145.387 36.156 145.395 36.188 145.414 cv
36.219 145.437 36.242 145.469 36.266 145.504 cv
36.281 145.543 36.297 145.59 36.313 145.648 cv
36.32 145.711 36.328 145.785 36.332 145.863 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
43.359 143.793 mo
43.355 144.203 43.285 144.57 43.145 144.895 cv
43 145.223 42.797 145.504 42.535 145.734 cv
42.27 145.969 41.941 146.145 41.555 146.27 cv
41.164 146.395 40.727 146.457 40.242 146.457 cv
39.938 146.457 39.66 146.43 39.406 146.383 cv
39.145 146.336 38.914 146.285 38.719 146.215 cv
38.516 146.152 38.352 146.082 38.219 146.012 cv
38.086 145.941 38 145.891 37.969 145.855 cv
37.93 145.828 37.906 145.797 37.891 145.762 cv
37.871 145.73 37.852 145.691 37.84 145.645 cv
37.824 145.602 37.816 145.547 37.809 145.477 cv
37.801 145.414 37.797 145.332 37.801 145.23 cv
37.797 145.07 37.813 144.957 37.848 144.891 cv
37.879 144.828 37.926 144.793 37.988 144.793 cv
38.031 144.793 38.113 144.832 38.238 144.902 cv
38.359 144.98 38.52 145.059 38.715 145.141 cv
38.906 145.227 39.133 145.305 39.398 145.375 cv
39.656 145.449 39.949 145.484 40.27 145.484 cv
40.578 145.484 40.848 145.445 41.086 145.367 cv
41.316 145.289 41.516 145.18 41.676 145.039 cv
41.832 144.898 41.949 144.73 42.031 144.535 cv
42.109 144.34 42.148 144.129 42.152 143.902 cv
42.148 143.652 42.098 143.426 42 143.223 cv
41.895 143.023 41.746 142.852 41.555 142.703 cv
41.355 142.559 41.117 142.445 40.832 142.367 cv
40.547 142.289 40.223 142.25 39.859 142.25 cv
38.988 142.25 li
38.945 142.25 38.91 142.242 38.875 142.227 cv
38.84 142.211 38.809 142.184 38.785 142.145 cv
38.758 142.109 38.738 142.062 38.723 142.004 cv
38.707 141.945 38.699 141.867 38.699 141.77 cv
38.699 141.684 38.703 141.613 38.719 141.555 cv
38.727 141.5 38.746 141.453 38.777 141.418 cv
38.801 141.383 38.832 141.359 38.863 141.34 cv
38.895 141.328 38.93 141.32 38.973 141.316 cv
39.746 141.316 li
40.047 141.32 40.316 141.281 40.559 141.199 cv
40.793 141.125 40.996 141.012 41.168 140.863 cv
41.332 140.719 41.461 140.543 41.551 140.34 cv
41.641 140.137 41.688 139.91 41.688 139.656 cv
41.688 139.477 41.656 139.301 41.598 139.133 cv
41.535 138.969 41.445 138.824 41.328 138.699 cv
41.207 138.574 41.055 138.477 40.875 138.406 cv
40.688 138.336 40.477 138.301 40.234 138.301 cv
39.969 138.301 39.723 138.344 39.504 138.422 cv
39.277 138.504 39.082 138.59 38.91 138.68 cv
38.734 138.773 38.59 138.859 38.477 138.937 cv
38.363 139.02 38.281 139.059 38.238 139.055 cv
38.203 139.059 38.176 139.051 38.152 139.039 cv
38.125 139.027 38.105 139.004 38.09 138.969 cv
38.074 138.937 38.063 138.891 38.055 138.824 cv
38.047 138.766 38.043 138.684 38.047 138.582 cv
38.043 138.516 38.043 138.457 38.051 138.402 cv
38.051 138.352 38.063 138.305 38.078 138.262 cv
38.094 138.227 38.109 138.191 38.129 138.156 cv
38.145 138.129 38.176 138.09 38.219 138.043 cv
38.262 138 38.348 137.937 38.484 137.855 cv
38.613 137.773 38.777 137.695 38.973 137.613 cv
39.164 137.535 39.387 137.465 39.645 137.41 cv
39.895 137.355 40.168 137.328 40.465 137.328 cv
40.871 137.328 41.234 137.383 41.547 137.484 cv
41.859 137.594 42.117 137.742 42.328 137.93 cv
42.531 138.125 42.688 138.355 42.793 138.621 cv
42.895 138.891 42.945 139.184 42.949 139.508 cv
42.945 139.789 42.91 140.051 42.84 140.285 cv
42.766 140.527 42.656 140.738 42.516 140.922 cv
42.371 141.109 42.199 141.266 41.996 141.395 cv
41.789 141.527 41.551 141.621 41.281 141.668 cv
41.281 141.68 li
41.586 141.715 41.867 141.789 42.121 141.91 cv
42.375 142.031 42.594 142.184 42.777 142.367 cv
42.957 142.551 43.098 142.766 43.203 143.008 cv
43.305 143.254 43.355 143.516 43.359 143.793 cv
cp
f
46.648 145.582 mo
46.648 145.91 46.594 146.125 46.488 146.23 cv
46.379 146.336 46.184 146.387 45.902 146.391 cv
45.625 146.387 45.434 146.336 45.332 146.234 cv
45.223 146.129 45.172 145.918 45.176 145.602 cv
45.172 145.277 45.227 145.062 45.336 144.953 cv
45.441 144.848 45.637 144.793 45.922 144.793 cv
46.195 144.793 46.383 144.848 46.492 144.953 cv
46.594 145.059 46.648 145.27 46.648 145.582 cv
cp
f
54.188 137.965 mo
54.184 138.051 54.18 138.125 54.176 138.187 cv
54.168 138.258 54.16 138.32 54.148 138.379 cv
54.137 138.445 54.121 138.504 54.102 138.559 cv
54.078 138.617 54.055 138.68 54.031 138.738 cv
50.836 146.102 li
50.809 146.16 50.781 146.203 50.75 146.234 cv
50.715 146.27 50.672 146.297 50.617 146.316 cv
50.563 146.336 50.492 146.348 50.414 146.359 cv
50.328 146.363 50.23 146.367 50.113 146.371 cv
49.957 146.367 49.836 146.359 49.75 146.348 cv
49.664 146.332 49.602 146.316 49.563 146.285 cv
49.523 146.258 49.504 146.219 49.512 146.176 cv
49.512 146.133 49.527 146.082 49.559 146.02 cv
52.918 138.492 li
48.66 138.492 li
48.574 138.496 48.508 138.449 48.465 138.355 cv
48.422 138.266 48.402 138.137 48.402 137.973 cv
48.402 137.887 48.406 137.812 48.418 137.746 cv
48.43 137.684 48.445 137.629 48.469 137.586 cv
48.488 137.543 48.516 137.512 48.551 137.488 cv
48.582 137.469 48.621 137.457 48.66 137.457 cv
53.832 137.457 li
53.891 137.457 53.945 137.465 53.996 137.48 cv
54.043 137.496 54.078 137.523 54.105 137.562 cv
54.129 137.602 54.148 137.656 54.164 137.719 cv
54.176 137.785 54.184 137.867 54.188 137.965 cv
cp
f
61.133 143.477 mo
61.133 143.953 61.051 144.375 60.891 144.746 cv
60.73 145.117 60.504 145.43 60.215 145.684 cv
59.918 145.937 59.57 146.133 59.168 146.262 cv
58.762 146.395 58.313 146.457 57.82 146.457 cv
57.543 146.457 57.281 146.437 57.039 146.398 cv
56.789 146.359 56.57 146.312 56.383 146.258 cv
56.188 146.203 56.031 146.148 55.906 146.09 cv
55.781 146.039 55.703 145.996 55.672 145.961 cv
55.637 145.93 55.613 145.898 55.602 145.871 cv
55.586 145.844 55.57 145.812 55.563 145.77 cv
55.547 145.734 55.539 145.684 55.539 145.621 cv
55.531 145.562 55.531 145.492 55.531 145.41 cv
55.531 145.336 55.535 145.266 55.543 145.203 cv
55.551 145.141 55.563 145.09 55.582 145.051 cv
55.598 145.012 55.617 144.984 55.645 144.965 cv
55.668 144.949 55.699 144.941 55.73 144.937 cv
55.777 144.941 55.848 144.969 55.941 145.023 cv
56.035 145.082 56.164 145.145 56.328 145.211 cv
56.492 145.277 56.691 145.34 56.934 145.398 cv
57.168 145.457 57.453 145.484 57.789 145.484 cv
58.09 145.484 58.371 145.449 58.629 145.375 cv
58.883 145.305 59.105 145.191 59.293 145.035 cv
59.477 144.883 59.621 144.687 59.727 144.449 cv
59.832 144.215 59.883 143.926 59.887 143.586 cv
59.883 143.305 59.84 143.055 59.75 142.836 cv
59.66 142.617 59.523 142.437 59.34 142.293 cv
59.152 142.152 58.918 142.047 58.637 141.973 cv
58.352 141.902 58.012 141.863 57.625 141.863 cv
57.34 141.863 57.102 141.879 56.902 141.906 cv
56.699 141.937 56.512 141.953 56.34 141.949 cv
56.211 141.953 56.117 141.922 56.066 141.859 cv
56.008 141.801 55.98 141.687 55.984 141.516 cv
55.984 137.902 li
55.98 137.754 56.016 137.645 56.09 137.566 cv
56.156 137.496 56.258 137.457 56.395 137.457 cv
60.324 137.457 li
60.359 137.457 60.395 137.469 60.43 137.488 cv
60.461 137.512 60.488 137.543 60.516 137.582 cv
60.535 137.625 60.551 137.676 60.566 137.738 cv
60.574 137.805 60.582 137.883 60.586 137.965 cv
60.582 138.133 60.559 138.258 60.52 138.348 cv
60.473 138.441 60.414 138.488 60.336 138.484 cv
57.164 138.484 li
57.164 140.973 li
57.316 140.953 57.473 140.941 57.637 140.934 cv
57.793 140.93 57.98 140.926 58.195 140.926 cv
58.68 140.926 59.105 140.988 59.473 141.109 cv
59.836 141.23 60.141 141.402 60.391 141.621 cv
60.633 141.848 60.82 142.113 60.945 142.426 cv
61.07 142.742 61.133 143.094 61.133 143.477 cv
cp
f
29.969 97.98 mo
61.887 97.98 li
61.887 115.07 li
29.969 115.07 li
cp
0 0 0 0 cmyk
ef
36.332 110.844 mo
36.328 110.934 36.32 111.004 36.309 111.062 cv
36.293 111.125 36.273 111.176 36.254 111.207 cv
36.23 111.246 36.207 111.27 36.176 111.285 cv
36.145 111.301 36.113 111.309 36.086 111.309 cv
31.449 111.309 li
31.414 111.309 31.387 111.301 31.359 111.285 cv
31.332 111.27 31.305 111.246 31.281 111.207 cv
31.254 111.176 31.234 111.125 31.223 111.062 cv
31.207 111.004 31.199 110.934 31.203 110.844 cv
31.199 110.766 31.207 110.691 31.223 110.629 cv
31.234 110.57 31.25 110.523 31.273 110.484 cv
31.289 110.449 31.316 110.418 31.348 110.395 cv
31.379 110.375 31.41 110.367 31.449 110.363 cv
33.301 110.363 li
33.301 103.617 li
31.586 104.637 li
31.496 104.687 31.426 104.715 31.379 104.723 cv
31.324 104.73 31.281 104.723 31.25 104.691 cv
31.215 104.664 31.195 104.613 31.184 104.543 cv
31.172 104.477 31.164 104.391 31.168 104.281 cv
31.164 104.207 31.168 104.141 31.18 104.082 cv
31.184 104.031 31.195 103.984 31.211 103.945 cv
31.223 103.91 31.242 103.879 31.266 103.852 cv
31.289 103.824 31.32 103.797 31.367 103.77 cv
33.41 102.457 li
33.426 102.445 33.445 102.434 33.477 102.426 cv
33.5 102.418 33.535 102.41 33.582 102.398 cv
33.621 102.391 33.672 102.383 33.727 102.379 cv
33.781 102.379 33.848 102.379 33.934 102.375 cv
34.039 102.379 34.133 102.383 34.207 102.391 cv
34.277 102.398 34.332 102.414 34.379 102.43 cv
34.418 102.449 34.445 102.469 34.461 102.492 cv
34.469 102.52 34.477 102.543 34.48 102.566 cv
34.48 110.363 li
36.086 110.363 li
36.121 110.367 36.156 110.375 36.188 110.395 cv
36.219 110.418 36.242 110.449 36.266 110.484 cv
36.281 110.523 36.297 110.57 36.313 110.629 cv
36.32 110.691 36.328 110.766 36.332 110.844 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
43.387 108.457 mo
43.387 108.934 43.305 109.355 43.145 109.727 cv
42.984 110.098 42.758 110.41 42.469 110.664 cv
42.172 110.918 41.824 111.113 41.422 111.242 cv
41.016 111.375 40.566 111.437 40.074 111.437 cv
39.797 111.437 39.535 111.418 39.293 111.379 cv
39.043 111.34 38.824 111.293 38.637 111.238 cv
38.441 111.184 38.285 111.129 38.16 111.07 cv
38.035 111.02 37.957 110.977 37.926 110.941 cv
37.891 110.91 37.867 110.879 37.855 110.852 cv
37.84 110.824 37.824 110.793 37.816 110.75 cv
37.801 110.715 37.793 110.664 37.793 110.602 cv
37.785 110.543 37.785 110.473 37.785 110.391 cv
37.785 110.316 37.789 110.246 37.797 110.184 cv
37.805 110.121 37.816 110.07 37.836 110.031 cv
37.852 109.992 37.871 109.965 37.898 109.945 cv
37.922 109.93 37.953 109.922 37.984 109.918 cv
38.031 109.922 38.102 109.949 38.195 110.004 cv
38.289 110.062 38.418 110.125 38.582 110.191 cv
38.746 110.258 38.945 110.32 39.188 110.379 cv
39.422 110.437 39.707 110.465 40.043 110.465 cv
40.344 110.465 40.625 110.43 40.883 110.355 cv
41.137 110.285 41.359 110.172 41.547 110.016 cv
41.73 109.863 41.875 109.668 41.98 109.43 cv
42.086 109.195 42.137 108.906 42.141 108.566 cv
42.137 108.285 42.094 108.035 42.004 107.816 cv
41.914 107.598 41.777 107.418 41.594 107.273 cv
41.406 107.133 41.172 107.027 40.891 106.953 cv
40.605 106.883 40.266 106.844 39.879 106.844 cv
39.594 106.844 39.355 106.859 39.156 106.887 cv
38.953 106.918 38.766 106.934 38.594 106.93 cv
38.465 106.934 38.371 106.902 38.32 106.84 cv
38.262 106.781 38.234 106.668 38.238 106.496 cv
38.238 102.883 li
38.234 102.734 38.27 102.625 38.344 102.547 cv
38.41 102.477 38.512 102.437 38.648 102.437 cv
42.578 102.437 li
42.613 102.437 42.648 102.449 42.684 102.469 cv
42.715 102.492 42.742 102.523 42.77 102.562 cv
42.789 102.605 42.805 102.656 42.82 102.719 cv
42.828 102.785 42.836 102.863 42.84 102.945 cv
42.836 103.113 42.813 103.238 42.773 103.328 cv
42.727 103.422 42.668 103.469 42.59 103.465 cv
39.418 103.465 li
39.418 105.953 li
39.57 105.934 39.727 105.922 39.891 105.914 cv
40.047 105.91 40.234 105.906 40.449 105.906 cv
40.934 105.906 41.359 105.969 41.727 106.09 cv
42.09 106.211 42.395 106.383 42.645 106.602 cv
42.887 106.828 43.074 107.094 43.199 107.406 cv
43.324 107.723 43.387 108.074 43.387 108.457 cv
cp
f
46.648 110.562 mo
46.648 110.891 46.594 111.105 46.488 111.211 cv
46.379 111.316 46.184 111.367 45.902 111.371 cv
45.625 111.367 45.434 111.316 45.332 111.215 cv
45.223 111.109 45.172 110.898 45.176 110.582 cv
45.172 110.258 45.227 110.043 45.336 109.934 cv
45.441 109.828 45.637 109.773 45.922 109.773 cv
46.195 109.773 46.383 109.828 46.492 109.934 cv
46.594 110.039 46.648 110.25 46.648 110.562 cv
cp
f
54.352 106.852 mo
54.348 107.535 54.297 108.156 54.191 108.719 cv
54.082 109.281 53.902 109.766 53.656 110.168 cv
53.402 110.574 53.074 110.887 52.676 111.105 cv
52.27 111.328 51.777 111.437 51.191 111.437 cv
50.633 111.437 50.16 111.34 49.781 111.141 cv
49.398 110.945 49.094 110.652 48.859 110.266 cv
48.625 109.879 48.457 109.406 48.363 108.84 cv
48.262 108.277 48.215 107.629 48.215 106.895 cv
48.215 106.223 48.27 105.602 48.379 105.035 cv
48.488 104.473 48.664 103.988 48.914 103.582 cv
49.156 103.18 49.48 102.867 49.887 102.641 cv
50.285 102.422 50.781 102.309 51.371 102.309 cv
51.93 102.309 52.402 102.41 52.785 102.605 cv
53.168 102.809 53.473 103.102 53.707 103.484 cv
53.938 103.875 54.105 104.348 54.203 104.91 cv
54.301 105.473 54.348 106.121 54.352 106.852 cv
cp
53.145 106.934 mo
53.141 106.492 53.125 106.094 53.098 105.742 cv
53.063 105.391 53.016 105.082 52.957 104.812 cv
52.891 104.543 52.813 104.312 52.715 104.117 cv
52.617 103.926 52.5 103.766 52.363 103.637 cv
52.223 103.512 52.063 103.418 51.891 103.359 cv
51.711 103.305 51.516 103.277 51.301 103.273 cv
50.91 103.277 50.594 103.367 50.355 103.551 cv
50.109 103.734 49.918 103.988 49.781 104.305 cv
49.641 104.625 49.547 104.996 49.496 105.426 cv
49.445 105.855 49.422 106.32 49.422 106.812 cv
49.422 107.477 49.453 108.039 49.523 108.5 cv
49.59 108.969 49.699 109.348 49.852 109.637 cv
49.996 109.934 50.188 110.145 50.418 110.273 cv
50.648 110.41 50.93 110.477 51.262 110.473 cv
51.516 110.477 51.738 110.437 51.934 110.352 cv
52.125 110.273 52.293 110.152 52.434 109.996 cv
52.574 109.844 52.688 109.66 52.781 109.445 cv
52.867 109.23 52.941 108.992 53 108.73 cv
53.051 108.473 53.09 108.191 53.113 107.887 cv
53.133 107.582 53.141 107.266 53.145 106.934 cv
cp
f
61.469 106.852 mo
61.465 107.535 61.414 108.156 61.309 108.719 cv
61.199 109.281 61.02 109.766 60.773 110.168 cv
60.52 110.574 60.191 110.887 59.793 111.105 cv
59.387 111.328 58.895 111.437 58.309 111.437 cv
57.75 111.437 57.277 111.34 56.898 111.141 cv
56.516 110.945 56.211 110.652 55.977 110.266 cv
55.742 109.879 55.574 109.406 55.48 108.84 cv
55.379 108.277 55.332 107.629 55.332 106.895 cv
55.332 106.223 55.387 105.602 55.496 105.035 cv
55.605 104.473 55.781 103.988 56.031 103.582 cv
56.273 103.18 56.598 102.867 57.004 102.641 cv
57.402 102.422 57.898 102.309 58.488 102.309 cv
59.047 102.309 59.52 102.41 59.902 102.605 cv
60.285 102.809 60.59 103.102 60.824 103.484 cv
61.055 103.875 61.223 104.348 61.32 104.91 cv
61.418 105.473 61.465 106.121 61.469 106.852 cv
cp
60.262 106.934 mo
60.258 106.492 60.242 106.094 60.215 105.742 cv
60.18 105.391 60.133 105.082 60.074 104.812 cv
60.008 104.543 59.93 104.312 59.832 104.117 cv
59.734 103.926 59.617 103.766 59.48 103.637 cv
59.34 103.512 59.18 103.418 59.008 103.359 cv
58.828 103.305 58.633 103.277 58.418 103.273 cv
58.027 103.277 57.711 103.367 57.473 103.551 cv
57.227 103.734 57.035 103.988 56.898 104.305 cv
56.758 104.625 56.664 104.996 56.613 105.426 cv
56.563 105.855 56.539 106.32 56.539 106.812 cv
56.539 107.477 56.57 108.039 56.641 108.5 cv
56.707 108.969 56.816 109.348 56.969 109.637 cv
57.113 109.934 57.305 110.145 57.535 110.273 cv
57.766 110.41 58.047 110.477 58.379 110.473 cv
58.633 110.477 58.855 110.437 59.051 110.352 cv
59.242 110.273 59.41 110.152 59.551 109.996 cv
59.691 109.844 59.805 109.66 59.898 109.445 cv
59.984 109.23 60.059 108.992 60.117 108.73 cv
60.168 108.473 60.207 108.191 60.23 107.887 cv
60.25 107.582 60.258 107.266 60.262 106.934 cv
cp
f
29.969 62.98 mo
61.887 62.98 li
61.887 80.07 li
29.969 80.07 li
cp
0 0 0 0 cmyk
ef
36.332 75.855 mo
36.328 75.945 36.32 76.016 36.309 76.074 cv
36.293 76.137 36.273 76.187 36.254 76.219 cv
36.23 76.258 36.207 76.281 36.176 76.297 cv
36.145 76.312 36.113 76.32 36.086 76.32 cv
31.449 76.32 li
31.414 76.32 31.387 76.312 31.359 76.297 cv
31.332 76.281 31.305 76.258 31.281 76.219 cv
31.254 76.187 31.234 76.137 31.223 76.074 cv
31.207 76.016 31.199 75.945 31.203 75.855 cv
31.199 75.777 31.207 75.703 31.223 75.641 cv
31.234 75.582 31.25 75.535 31.273 75.496 cv
31.289 75.461 31.316 75.43 31.348 75.406 cv
31.379 75.387 31.41 75.379 31.449 75.375 cv
33.301 75.375 li
33.301 68.629 li
31.586 69.648 li
31.496 69.699 31.426 69.727 31.379 69.734 cv
31.324 69.742 31.281 69.734 31.25 69.703 cv
31.215 69.676 31.195 69.625 31.184 69.555 cv
31.172 69.488 31.164 69.402 31.168 69.293 cv
31.164 69.219 31.168 69.152 31.18 69.094 cv
31.184 69.043 31.195 68.996 31.211 68.957 cv
31.223 68.922 31.242 68.891 31.266 68.863 cv
31.289 68.836 31.32 68.809 31.367 68.781 cv
33.41 67.469 li
33.426 67.457 33.445 67.445 33.477 67.437 cv
33.5 67.43 33.535 67.422 33.582 67.41 cv
33.621 67.402 33.672 67.395 33.727 67.391 cv
33.781 67.391 33.848 67.391 33.934 67.387 cv
34.039 67.391 34.133 67.395 34.207 67.402 cv
34.277 67.41 34.332 67.426 34.379 67.441 cv
34.418 67.461 34.445 67.48 34.461 67.504 cv
34.469 67.531 34.477 67.555 34.48 67.578 cv
34.48 75.375 li
36.086 75.375 li
36.121 75.379 36.156 75.387 36.188 75.406 cv
36.219 75.43 36.242 75.461 36.266 75.496 cv
36.281 75.535 36.297 75.582 36.313 75.641 cv
36.32 75.703 36.328 75.777 36.332 75.855 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
43.656 73.449 mo
43.656 73.84 43.594 74.219 43.477 74.578 cv
43.352 74.945 43.168 75.262 42.926 75.535 cv
42.676 75.812 42.363 76.035 41.988 76.199 cv
41.605 76.367 41.16 76.449 40.645 76.449 cv
40.273 76.449 39.945 76.406 39.664 76.312 cv
39.379 76.227 39.133 76.094 38.922 75.922 cv
38.711 75.754 38.535 75.547 38.398 75.301 cv
38.258 75.055 38.145 74.773 38.063 74.457 cv
37.977 74.145 37.918 73.801 37.883 73.422 cv
37.844 73.051 37.824 72.648 37.828 72.215 cv
37.824 71.836 37.844 71.453 37.887 71.062 cv
37.926 70.68 38 70.305 38.105 69.937 cv
38.211 69.578 38.355 69.238 38.535 68.922 cv
38.715 68.605 38.941 68.328 39.215 68.094 cv
39.488 67.859 39.813 67.672 40.191 67.531 cv
40.57 67.395 41.012 67.328 41.516 67.324 cv
41.684 67.328 41.855 67.336 42.027 67.355 cv
42.199 67.379 42.359 67.41 42.508 67.441 cv
42.656 67.48 42.777 67.516 42.879 67.555 cv
42.977 67.594 43.043 67.629 43.078 67.652 cv
43.105 67.68 43.129 67.707 43.148 67.734 cv
43.164 67.766 43.18 67.797 43.188 67.832 cv
43.195 67.867 43.199 67.906 43.207 67.949 cv
43.207 67.992 43.211 68.047 43.215 68.109 cv
43.211 68.195 43.211 68.266 43.211 68.32 cv
43.207 68.383 43.195 68.43 43.184 68.465 cv
43.164 68.504 43.145 68.531 43.121 68.547 cv
43.094 68.566 43.063 68.574 43.023 68.574 cv
42.973 68.574 42.902 68.559 42.816 68.527 cv
42.727 68.496 42.621 68.461 42.5 68.418 cv
42.375 68.383 42.227 68.348 42.051 68.312 cv
41.875 68.285 41.672 68.27 41.441 68.266 cv
41.012 68.27 40.645 68.355 40.34 68.527 cv
40.035 68.699 39.785 68.934 39.59 69.227 cv
39.395 69.52 39.25 69.859 39.16 70.242 cv
39.063 70.633 39.008 71.035 39 71.453 cv
39.117 71.387 39.254 71.32 39.402 71.25 cv
39.551 71.184 39.711 71.121 39.887 71.062 cv
40.063 71.012 40.25 70.965 40.445 70.93 cv
40.641 70.898 40.852 70.883 41.078 70.879 cv
41.555 70.883 41.957 70.949 42.289 71.074 cv
42.617 71.207 42.883 71.387 43.09 71.617 cv
43.289 71.848 43.434 72.117 43.523 72.43 cv
43.609 72.742 43.656 73.082 43.656 73.449 cv
cp
42.461 73.559 mo
42.461 73.297 42.434 73.055 42.383 72.836 cv
42.328 72.621 42.238 72.437 42.117 72.281 cv
41.992 72.133 41.828 72.016 41.625 71.934 cv
41.414 71.852 41.16 71.809 40.863 71.809 cv
40.691 71.809 40.523 71.824 40.355 71.855 cv
40.184 71.887 40.02 71.93 39.863 71.977 cv
39.703 72.031 39.555 72.094 39.414 72.164 cv
39.27 72.238 39.137 72.312 39.02 72.391 cv
39.016 72.984 39.055 73.48 39.133 73.875 cv
39.207 74.273 39.316 74.59 39.461 74.828 cv
39.605 75.07 39.785 75.242 40 75.344 cv
40.215 75.449 40.465 75.5 40.754 75.496 cv
41.043 75.5 41.297 75.445 41.512 75.332 cv
41.727 75.227 41.902 75.078 42.047 74.891 cv
42.188 74.707 42.293 74.5 42.359 74.27 cv
42.426 74.039 42.461 73.805 42.461 73.559 cv
cp
f
46.648 75.574 mo
46.648 75.902 46.594 76.117 46.488 76.223 cv
46.379 76.328 46.184 76.379 45.902 76.383 cv
45.625 76.379 45.434 76.328 45.332 76.227 cv
45.223 76.121 45.172 75.91 45.176 75.594 cv
45.172 75.27 45.227 75.055 45.336 74.945 cv
45.441 74.84 45.637 74.785 45.922 74.785 cv
46.195 74.785 46.383 74.84 46.492 74.945 cv
46.594 75.051 46.648 75.262 46.648 75.574 cv
cp
f
54.059 75.812 mo
54.055 75.898 54.051 75.973 54.039 76.035 cv
54.027 76.102 54.012 76.156 53.992 76.195 cv
53.969 76.242 53.941 76.273 53.91 76.289 cv
53.875 76.312 53.836 76.32 53.797 76.32 cv
48.895 76.32 li
48.832 76.32 48.773 76.312 48.727 76.297 cv
48.676 76.281 48.637 76.258 48.602 76.219 cv
48.566 76.187 48.539 76.133 48.527 76.062 cv
48.508 75.992 48.5 75.906 48.504 75.805 cv
48.5 75.715 48.504 75.637 48.512 75.566 cv
48.516 75.5 48.531 75.441 48.559 75.387 cv
48.582 75.336 48.613 75.281 48.648 75.227 cv
48.684 75.176 48.727 75.121 48.785 75.059 cv
50.559 73.234 li
50.969 72.816 51.297 72.441 51.547 72.105 cv
51.793 71.777 51.984 71.473 52.117 71.195 cv
52.25 70.922 52.336 70.672 52.383 70.445 cv
52.422 70.223 52.445 70.012 52.445 69.816 cv
52.445 69.621 52.41 69.437 52.344 69.258 cv
52.277 69.086 52.184 68.93 52.059 68.793 cv
51.934 68.664 51.777 68.559 51.59 68.477 cv
51.402 68.402 51.184 68.363 50.938 68.359 cv
50.648 68.363 50.391 68.402 50.164 68.477 cv
49.934 68.559 49.734 68.645 49.563 68.73 cv
49.391 68.824 49.246 68.906 49.129 68.984 cv
49.012 69.062 48.926 69.102 48.875 69.102 cv
48.84 69.102 48.809 69.094 48.785 69.074 cv
48.754 69.059 48.734 69.027 48.719 68.984 cv
48.703 68.945 48.688 68.891 48.68 68.82 cv
48.668 68.754 48.664 68.672 48.668 68.574 cv
48.664 68.508 48.668 68.449 48.676 68.398 cv
48.68 68.348 48.688 68.305 48.699 68.266 cv
48.707 68.23 48.723 68.195 48.742 68.164 cv
48.762 68.133 48.797 68.094 48.855 68.043 cv
48.906 67.996 49 67.93 49.137 67.848 cv
49.27 67.766 49.441 67.687 49.645 67.605 cv
49.848 67.527 50.07 67.457 50.316 67.402 cv
50.559 67.348 50.816 67.32 51.09 67.32 cv
51.516 67.32 51.891 67.383 52.215 67.504 cv
52.535 67.625 52.801 67.789 53.016 68 cv
53.227 68.211 53.387 68.457 53.492 68.73 cv
53.598 69.012 53.652 69.309 53.652 69.621 cv
53.652 69.91 53.625 70.191 53.574 70.469 cv
53.523 70.754 53.418 71.059 53.258 71.383 cv
53.094 71.711 52.859 72.074 52.555 72.473 cv
52.246 72.875 51.84 73.336 51.336 73.852 cv
49.93 75.32 li
53.789 75.32 li
53.82 75.324 53.855 75.336 53.895 75.352 cv
53.926 75.375 53.957 75.406 53.984 75.445 cv
54.008 75.488 54.027 75.539 54.039 75.598 cv
54.051 75.664 54.055 75.734 54.059 75.812 cv
cp
f
61.133 73.469 mo
61.133 73.945 61.051 74.367 60.891 74.738 cv
60.73 75.109 60.504 75.422 60.215 75.676 cv
59.918 75.93 59.57 76.125 59.168 76.254 cv
58.762 76.387 58.313 76.449 57.82 76.449 cv
57.543 76.449 57.281 76.43 57.039 76.391 cv
56.789 76.352 56.57 76.305 56.383 76.25 cv
56.188 76.195 56.031 76.141 55.906 76.082 cv
55.781 76.031 55.703 75.988 55.672 75.953 cv
55.637 75.922 55.613 75.891 55.602 75.863 cv
55.586 75.836 55.57 75.805 55.563 75.762 cv
55.547 75.727 55.539 75.676 55.539 75.613 cv
55.531 75.555 55.531 75.484 55.531 75.402 cv
55.531 75.328 55.535 75.258 55.543 75.195 cv
55.551 75.133 55.563 75.082 55.582 75.043 cv
55.598 75.004 55.617 74.977 55.645 74.957 cv
55.668 74.941 55.699 74.934 55.73 74.93 cv
55.777 74.934 55.848 74.961 55.941 75.016 cv
56.035 75.074 56.164 75.137 56.328 75.203 cv
56.492 75.27 56.691 75.332 56.934 75.391 cv
57.168 75.449 57.453 75.477 57.789 75.477 cv
58.09 75.477 58.371 75.441 58.629 75.367 cv
58.883 75.297 59.105 75.184 59.293 75.027 cv
59.477 74.875 59.621 74.68 59.727 74.441 cv
59.832 74.207 59.883 73.918 59.887 73.578 cv
59.883 73.297 59.84 73.047 59.75 72.828 cv
59.66 72.609 59.523 72.43 59.34 72.285 cv
59.152 72.145 58.918 72.039 58.637 71.965 cv
58.352 71.895 58.012 71.855 57.625 71.855 cv
57.34 71.855 57.102 71.871 56.902 71.898 cv
56.699 71.93 56.512 71.945 56.34 71.941 cv
56.211 71.945 56.117 71.914 56.066 71.852 cv
56.008 71.793 55.98 71.68 55.984 71.508 cv
55.984 67.895 li
55.98 67.746 56.016 67.637 56.09 67.559 cv
56.156 67.488 56.258 67.449 56.395 67.449 cv
60.324 67.449 li
60.359 67.449 60.395 67.461 60.43 67.48 cv
60.461 67.504 60.488 67.535 60.516 67.574 cv
60.535 67.617 60.551 67.668 60.566 67.73 cv
60.574 67.797 60.582 67.875 60.586 67.957 cv
60.582 68.125 60.559 68.25 60.52 68.34 cv
60.473 68.434 60.414 68.48 60.336 68.477 cv
57.164 68.477 li
57.164 70.965 li
57.316 70.945 57.473 70.934 57.637 70.926 cv
57.793 70.922 57.98 70.918 58.195 70.918 cv
58.68 70.918 59.105 70.98 59.473 71.102 cv
59.836 71.223 60.141 71.395 60.391 71.613 cv
60.633 71.84 60.82 72.105 60.945 72.418 cv
61.07 72.734 61.133 73.086 61.133 73.469 cv
cp
f
29.969 27.98 mo
61.887 27.98 li
61.887 45.07 li
29.969 45.07 li
cp
0 0 0 0 cmyk
ef
36.332 40.836 mo
36.328 40.926 36.32 40.996 36.309 41.055 cv
36.293 41.117 36.273 41.168 36.254 41.199 cv
36.23 41.238 36.207 41.262 36.176 41.277 cv
36.145 41.293 36.113 41.301 36.086 41.301 cv
31.449 41.301 li
31.414 41.301 31.387 41.293 31.359 41.277 cv
31.332 41.262 31.305 41.238 31.281 41.199 cv
31.254 41.168 31.234 41.117 31.223 41.055 cv
31.207 40.996 31.199 40.926 31.203 40.836 cv
31.199 40.758 31.207 40.684 31.223 40.621 cv
31.234 40.562 31.25 40.516 31.273 40.477 cv
31.289 40.441 31.316 40.41 31.348 40.387 cv
31.379 40.367 31.41 40.359 31.449 40.355 cv
33.301 40.355 li
33.301 33.609 li
31.586 34.629 li
31.496 34.68 31.426 34.707 31.379 34.715 cv
31.324 34.723 31.281 34.715 31.25 34.684 cv
31.215 34.656 31.195 34.605 31.184 34.535 cv
31.172 34.469 31.164 34.383 31.168 34.273 cv
31.164 34.199 31.168 34.133 31.18 34.074 cv
31.184 34.023 31.195 33.977 31.211 33.937 cv
31.223 33.902 31.242 33.871 31.266 33.844 cv
31.289 33.816 31.32 33.789 31.367 33.762 cv
33.41 32.449 li
33.426 32.437 33.445 32.426 33.477 32.418 cv
33.5 32.41 33.535 32.402 33.582 32.391 cv
33.621 32.383 33.672 32.375 33.727 32.371 cv
33.781 32.371 33.848 32.371 33.934 32.367 cv
34.039 32.371 34.133 32.375 34.207 32.383 cv
34.277 32.391 34.332 32.406 34.379 32.422 cv
34.418 32.441 34.445 32.461 34.461 32.484 cv
34.469 32.512 34.477 32.535 34.48 32.559 cv
34.48 40.355 li
36.086 40.355 li
36.121 40.359 36.156 40.367 36.188 40.387 cv
36.219 40.41 36.242 40.441 36.266 40.477 cv
36.281 40.516 36.297 40.562 36.313 40.621 cv
36.32 40.684 36.328 40.758 36.332 40.836 cv
cp
.629236 .549432 .540154 .282963 cmyk
f
43.559 32.937 mo
43.555 33.023 43.551 33.098 43.547 33.16 cv
43.539 33.23 43.531 33.293 43.52 33.352 cv
43.508 33.418 43.492 33.477 43.473 33.531 cv
43.449 33.59 43.426 33.652 43.402 33.711 cv
40.207 41.074 li
40.18 41.133 40.152 41.176 40.121 41.207 cv
40.086 41.242 40.043 41.27 39.988 41.289 cv
39.934 41.309 39.863 41.32 39.785 41.332 cv
39.699 41.336 39.602 41.34 39.484 41.344 cv
39.328 41.34 39.207 41.332 39.121 41.32 cv
39.035 41.305 38.973 41.289 38.934 41.258 cv
38.895 41.23 38.875 41.191 38.883 41.148 cv
38.883 41.105 38.898 41.055 38.93 40.992 cv
42.289 33.465 li
38.031 33.465 li
37.945 33.469 37.879 33.422 37.836 33.328 cv
37.793 33.238 37.773 33.109 37.773 32.945 cv
37.773 32.859 37.777 32.785 37.789 32.719 cv
37.801 32.656 37.816 32.602 37.84 32.559 cv
37.859 32.516 37.887 32.484 37.922 32.461 cv
37.953 32.441 37.992 32.43 38.031 32.43 cv
43.203 32.43 li
43.262 32.43 43.316 32.437 43.367 32.453 cv
43.414 32.469 43.449 32.496 43.477 32.535 cv
43.5 32.574 43.52 32.629 43.535 32.691 cv
43.547 32.758 43.555 32.84 43.559 32.937 cv
cp
f
46.648 40.555 mo
46.648 40.883 46.594 41.098 46.488 41.203 cv
46.379 41.309 46.184 41.359 45.902 41.363 cv
45.625 41.359 45.434 41.309 45.332 41.207 cv
45.223 41.102 45.172 40.891 45.176 40.574 cv
45.172 40.25 45.227 40.035 45.336 39.926 cv
45.441 39.82 45.637 39.766 45.922 39.766 cv
46.195 39.766 46.383 39.82 46.492 39.926 cv
46.594 40.031 46.648 40.242 46.648 40.555 cv
cp
f
54.016 38.449 mo
54.016 38.926 53.934 39.348 53.773 39.719 cv
53.613 40.09 53.387 40.402 53.098 40.656 cv
52.801 40.91 52.453 41.105 52.051 41.234 cv
51.645 41.367 51.195 41.43 50.703 41.43 cv
50.426 41.43 50.164 41.41 49.922 41.371 cv
49.672 41.332 49.453 41.285 49.266 41.23 cv
49.07 41.176 48.914 41.121 48.789 41.062 cv
48.664 41.012 48.586 40.969 48.555 40.934 cv
48.52 40.902 48.496 40.871 48.484 40.844 cv
48.469 40.816 48.453 40.785 48.445 40.742 cv
48.43 40.707 48.422 40.656 48.422 40.594 cv
48.414 40.535 48.414 40.465 48.414 40.383 cv
48.414 40.309 48.418 40.238 48.426 40.176 cv
48.434 40.113 48.445 40.062 48.465 40.023 cv
48.48 39.984 48.5 39.957 48.527 39.937 cv
48.551 39.922 48.582 39.914 48.613 39.91 cv
48.66 39.914 48.73 39.941 48.824 39.996 cv
48.918 40.055 49.047 40.117 49.211 40.184 cv
49.375 40.25 49.574 40.312 49.816 40.371 cv
50.051 40.43 50.336 40.457 50.672 40.457 cv
50.973 40.457 51.254 40.422 51.512 40.348 cv
51.766 40.277 51.988 40.164 52.176 40.008 cv
52.359 39.855 52.504 39.66 52.609 39.422 cv
52.715 39.187 52.766 38.898 52.77 38.559 cv
52.766 38.277 52.723 38.027 52.633 37.809 cv
52.543 37.59 52.406 37.41 52.223 37.266 cv
52.035 37.125 51.801 37.02 51.52 36.945 cv
51.234 36.875 50.895 36.836 50.508 36.836 cv
50.223 36.836 49.984 36.852 49.785 36.879 cv
49.582 36.91 49.395 36.926 49.223 36.922 cv
49.094 36.926 49 36.895 48.949 36.832 cv
48.891 36.773 48.863 36.66 48.867 36.488 cv
48.867 32.875 li
48.863 32.727 48.898 32.617 48.973 32.539 cv
49.039 32.469 49.141 32.43 49.277 32.43 cv
53.207 32.43 li
53.242 32.43 53.277 32.441 53.313 32.461 cv
53.344 32.484 53.371 32.516 53.398 32.555 cv
53.418 32.598 53.434 32.648 53.449 32.711 cv
53.457 32.777 53.465 32.855 53.469 32.937 cv
53.465 33.105 53.441 33.23 53.402 33.32 cv
53.355 33.414 53.297 33.461 53.219 33.457 cv
50.047 33.457 li
50.047 35.945 li
50.199 35.926 50.355 35.914 50.52 35.906 cv
50.676 35.902 50.863 35.898 51.078 35.898 cv
51.563 35.898 51.988 35.961 52.355 36.082 cv
52.719 36.203 53.023 36.375 53.273 36.594 cv
53.516 36.82 53.703 37.086 53.828 37.398 cv
53.953 37.715 54.016 38.066 54.016 38.449 cv
cp
f
61.469 36.844 mo
61.465 37.527 61.414 38.148 61.309 38.711 cv
61.199 39.273 61.02 39.758 60.773 40.16 cv
60.52 40.566 60.191 40.879 59.793 41.098 cv
59.387 41.32 58.895 41.43 58.309 41.43 cv
57.75 41.43 57.277 41.332 56.898 41.133 cv
56.516 40.937 56.211 40.645 55.977 40.258 cv
55.742 39.871 55.574 39.398 55.48 38.832 cv
55.379 38.27 55.332 37.621 55.332 36.887 cv
55.332 36.215 55.387 35.594 55.496 35.027 cv
55.605 34.465 55.781 33.98 56.031 33.574 cv
56.273 33.172 56.598 32.859 57.004 32.633 cv
57.402 32.414 57.898 32.301 58.488 32.301 cv
59.047 32.301 59.52 32.402 59.902 32.598 cv
60.285 32.801 60.59 33.094 60.824 33.477 cv
61.055 33.867 61.223 34.34 61.32 34.902 cv
61.418 35.465 61.465 36.113 61.469 36.844 cv
cp
60.262 36.926 mo
60.258 36.484 60.242 36.086 60.215 35.734 cv
60.18 35.383 60.133 35.074 60.074 34.805 cv
60.008 34.535 59.93 34.305 59.832 34.109 cv
59.734 33.918 59.617 33.758 59.48 33.629 cv
59.34 33.504 59.18 33.41 59.008 33.352 cv
58.828 33.297 58.633 33.27 58.418 33.266 cv
58.027 33.27 57.711 33.359 57.473 33.543 cv
57.227 33.727 57.035 33.98 56.898 34.297 cv
56.758 34.617 56.664 34.988 56.613 35.418 cv
56.563 35.848 56.539 36.312 56.539 36.805 cv
56.539 37.469 56.57 38.031 56.641 38.492 cv
56.707 38.961 56.816 39.34 56.969 39.629 cv
57.113 39.926 57.305 40.137 57.535 40.266 cv
57.766 40.402 58.047 40.469 58.379 40.465 cv
58.633 40.469 58.855 40.43 59.051 40.344 cv
59.242 40.266 59.41 40.145 59.551 39.988 cv
59.691 39.836 59.805 39.652 59.898 39.437 cv
59.984 39.223 60.059 38.984 60.117 38.723 cv
60.168 38.465 60.207 38.184 60.23 37.879 cv
60.25 37.574 60.258 37.258 60.262 36.926 cv
cp
f
77.707 549.109 mo
77.703 549.199 77.695 549.27 77.684 549.328 cv
77.668 549.391 77.648 549.441 77.629 549.473 cv
77.605 549.512 77.582 549.535 77.551 549.551 cv
77.52 549.566 77.488 549.574 77.461 549.574 cv
72.824 549.574 li
72.789 549.574 72.762 549.566 72.734 549.551 cv
72.707 549.535 72.68 549.512 72.656 549.473 cv
72.629 549.441 72.609 549.391 72.598 549.328 cv
72.582 549.27 72.574 549.199 72.578 549.109 cv
72.574 549.031 72.582 548.957 72.598 548.895 cv
72.609 548.836 72.625 548.789 72.648 548.75 cv
72.664 548.715 72.691 548.684 72.723 548.66 cv
72.754 548.641 72.785 548.633 72.824 548.629 cv
74.676 548.629 li
74.676 541.883 li
72.961 542.902 li
72.871 542.953 72.801 542.98 72.754 542.988 cv
72.699 542.996 72.656 542.988 72.625 542.957 cv
72.59 542.93 72.57 542.879 72.559 542.809 cv
72.547 542.742 72.539 542.656 72.543 542.547 cv
72.539 542.473 72.543 542.406 72.555 542.348 cv
72.559 542.297 72.57 542.25 72.586 542.211 cv
72.598 542.176 72.617 542.145 72.641 542.117 cv
72.664 542.09 72.695 542.062 72.742 542.035 cv
74.785 540.723 li
74.801 540.711 74.82 540.699 74.852 540.691 cv
74.875 540.684 74.91 540.676 74.957 540.664 cv
74.996 540.656 75.047 540.648 75.102 540.645 cv
75.156 540.645 75.223 540.645 75.309 540.641 cv
75.414 540.645 75.508 540.648 75.582 540.656 cv
75.652 540.664 75.707 540.68 75.754 540.695 cv
75.793 540.715 75.82 540.734 75.836 540.758 cv
75.844 540.785 75.852 540.809 75.855 540.832 cv
75.855 548.629 li
77.461 548.629 li
77.496 548.633 77.531 548.641 77.563 548.66 cv
77.594 548.684 77.617 548.715 77.641 548.75 cv
77.656 548.789 77.672 548.836 77.688 548.895 cv
77.695 548.957 77.703 549.031 77.707 549.109 cv
cp
f
154.605 549.066 mo
154.602 549.152 154.598 549.227 154.586 549.289 cv
154.574 549.355 154.559 549.41 154.539 549.449 cv
154.516 549.496 154.488 549.527 154.457 549.543 cv
154.422 549.566 154.383 549.574 154.344 549.574 cv
149.441 549.574 li
149.379 549.574 149.32 549.566 149.273 549.551 cv
149.223 549.535 149.184 549.512 149.148 549.473 cv
149.113 549.441 149.086 549.387 149.074 549.316 cv
149.055 549.246 149.047 549.16 149.051 549.059 cv
149.047 548.969 149.051 548.891 149.059 548.82 cv
149.063 548.754 149.078 548.695 149.105 548.641 cv
149.129 548.59 149.16 548.535 149.195 548.48 cv
149.23 548.43 149.273 548.375 149.332 548.312 cv
151.105 546.488 li
151.516 546.07 151.844 545.695 152.094 545.359 cv
152.34 545.031 152.531 544.727 152.664 544.449 cv
152.797 544.176 152.883 543.926 152.93 543.699 cv
152.969 543.477 152.992 543.266 152.992 543.07 cv
152.992 542.875 152.957 542.691 152.891 542.512 cv
152.824 542.34 152.73 542.184 152.605 542.047 cv
152.48 541.918 152.324 541.812 152.137 541.73 cv
151.949 541.656 151.73 541.617 151.484 541.613 cv
151.195 541.617 150.938 541.656 150.711 541.73 cv
150.48 541.812 150.281 541.898 150.109 541.984 cv
149.938 542.078 149.793 542.16 149.676 542.238 cv
149.559 542.316 149.473 542.355 149.422 542.355 cv
149.387 542.355 149.355 542.348 149.332 542.328 cv
149.301 542.312 149.281 542.281 149.266 542.238 cv
149.25 542.199 149.234 542.145 149.227 542.074 cv
149.215 542.008 149.211 541.926 149.215 541.828 cv
149.211 541.762 149.215 541.703 149.223 541.652 cv
149.227 541.602 149.234 541.559 149.246 541.52 cv
149.254 541.484 149.27 541.449 149.289 541.418 cv
149.309 541.387 149.344 541.348 149.402 541.297 cv
149.453 541.25 149.547 541.184 149.684 541.102 cv
149.816 541.02 149.988 540.941 150.191 540.859 cv
150.395 540.781 150.617 540.711 150.863 540.656 cv
151.105 540.602 151.363 540.574 151.637 540.574 cv
152.063 540.574 152.438 540.637 152.762 540.758 cv
153.082 540.879 153.348 541.043 153.563 541.254 cv
153.773 541.465 153.934 541.711 154.039 541.984 cv
154.145 542.266 154.199 542.562 154.199 542.875 cv
154.199 543.164 154.172 543.445 154.121 543.723 cv
154.07 544.008 153.965 544.312 153.805 544.637 cv
153.641 544.965 153.406 545.328 153.102 545.727 cv
152.793 546.129 152.387 546.59 151.883 547.105 cv
150.477 548.574 li
154.336 548.574 li
154.367 548.578 154.402 548.59 154.441 548.605 cv
154.473 548.629 154.504 548.66 154.531 548.699 cv
154.555 548.742 154.574 548.793 154.586 548.852 cv
154.598 548.918 154.602 548.988 154.605 549.066 cv
cp
f
231.902 547.051 mo
231.898 547.203 231.875 547.324 231.832 547.41 cv
231.785 547.5 231.723 547.543 231.641 547.539 cv
230.641 547.539 li
230.641 549.402 li
230.641 549.441 230.629 549.473 230.613 549.496 cv
230.59 549.523 230.559 549.543 230.516 549.562 cv
230.465 549.578 230.402 549.59 230.332 549.602 cv
230.254 549.609 230.16 549.613 230.043 549.617 cv
229.926 549.613 229.828 549.609 229.758 549.602 cv
229.68 549.59 229.621 549.578 229.578 549.562 cv
229.531 549.543 229.5 549.523 229.484 549.496 cv
229.465 549.473 229.457 549.441 229.461 549.402 cv
229.461 547.539 li
225.832 547.539 li
225.773 547.543 225.73 547.535 225.695 547.52 cv
225.66 547.508 225.625 547.48 225.598 547.441 cv
225.566 547.406 225.547 547.355 225.535 547.285 cv
225.523 547.219 225.52 547.129 225.52 547.016 cv
225.52 546.934 225.52 546.855 225.527 546.785 cv
225.527 546.715 225.539 546.652 225.555 546.598 cv
225.566 546.543 225.582 546.488 225.609 546.434 cv
225.629 546.379 225.656 546.324 225.691 546.262 cv
228.852 540.875 li
228.871 540.84 228.906 540.809 228.953 540.781 cv
228.996 540.754 229.051 540.73 229.125 540.711 cv
229.191 540.695 229.277 540.684 229.383 540.672 cv
229.484 540.668 229.605 540.664 229.746 540.66 cv
229.895 540.664 230.031 540.668 230.148 540.68 cv
230.262 540.691 230.352 540.707 230.426 540.723 cv
230.492 540.742 230.547 540.766 230.586 540.797 cv
230.621 540.828 230.641 540.863 230.641 540.902 cv
230.641 546.566 li
231.641 546.566 li
231.715 546.57 231.777 546.609 231.828 546.687 cv
231.875 546.77 231.898 546.891 231.902 547.051 cv
cp
229.461 541.699 mo
229.449 541.699 li
226.598 546.566 li
229.461 546.566 li
cp
f
308.703 546.703 mo
308.703 547.094 308.641 547.473 308.523 547.832 cv
308.398 548.199 308.215 548.516 307.973 548.789 cv
307.723 549.066 307.41 549.289 307.035 549.453 cv
306.652 549.621 306.207 549.703 305.691 549.703 cv
305.32 549.703 304.992 549.66 304.711 549.566 cv
304.426 549.48 304.18 549.348 303.969 549.176 cv
303.758 549.008 303.582 548.801 303.445 548.555 cv
303.305 548.309 303.191 548.027 303.109 547.711 cv
303.023 547.398 302.965 547.055 302.93 546.676 cv
302.891 546.305 302.871 545.902 302.875 545.469 cv
302.871 545.09 302.891 544.707 302.934 544.316 cv
302.973 543.934 303.047 543.559 303.152 543.191 cv
303.258 542.832 303.402 542.492 303.582 542.176 cv
303.762 541.859 303.988 541.582 304.262 541.348 cv
304.535 541.113 304.859 540.926 305.238 540.785 cv
305.617 540.648 306.059 540.582 306.563 540.578 cv
306.73 540.582 306.902 540.59 307.074 540.609 cv
307.246 540.633 307.406 540.664 307.555 540.695 cv
307.703 540.734 307.824 540.77 307.926 540.809 cv
308.023 540.848 308.09 540.883 308.125 540.906 cv
308.152 540.934 308.176 540.961 308.195 540.988 cv
308.211 541.02 308.227 541.051 308.234 541.086 cv
308.242 541.121 308.246 541.16 308.254 541.203 cv
308.254 541.246 308.258 541.301 308.262 541.363 cv
308.258 541.449 308.258 541.52 308.258 541.574 cv
308.254 541.637 308.242 541.684 308.23 541.719 cv
308.211 541.758 308.191 541.785 308.168 541.801 cv
308.141 541.82 308.109 541.828 308.07 541.828 cv
308.02 541.828 307.949 541.812 307.863 541.781 cv
307.773 541.75 307.668 541.715 307.547 541.672 cv
307.422 541.637 307.273 541.602 307.098 541.566 cv
306.922 541.539 306.719 541.523 306.488 541.52 cv
306.059 541.523 305.691 541.609 305.387 541.781 cv
305.082 541.953 304.832 542.187 304.637 542.48 cv
304.441 542.773 304.297 543.113 304.207 543.496 cv
304.109 543.887 304.055 544.289 304.047 544.707 cv
304.164 544.641 304.301 544.574 304.449 544.504 cv
304.598 544.437 304.758 544.375 304.934 544.316 cv
305.109 544.266 305.297 544.219 305.492 544.184 cv
305.688 544.152 305.898 544.137 306.125 544.133 cv
306.602 544.137 307.004 544.203 307.336 544.328 cv
307.664 544.461 307.93 544.641 308.137 544.871 cv
308.336 545.102 308.48 545.371 308.57 545.684 cv
308.656 545.996 308.703 546.336 308.703 546.703 cv
cp
307.508 546.812 mo
307.508 546.551 307.48 546.309 307.43 546.09 cv
307.375 545.875 307.285 545.691 307.164 545.535 cv
307.039 545.387 306.875 545.27 306.672 545.187 cv
306.461 545.105 306.207 545.062 305.91 545.062 cv
305.738 545.062 305.57 545.078 305.402 545.109 cv
305.23 545.141 305.066 545.184 304.91 545.23 cv
304.75 545.285 304.602 545.348 304.461 545.418 cv
304.316 545.492 304.184 545.566 304.066 545.645 cv
304.063 546.238 304.102 546.734 304.18 547.129 cv
304.254 547.527 304.363 547.844 304.508 548.082 cv
304.652 548.324 304.832 548.496 305.047 548.598 cv
305.262 548.703 305.512 548.754 305.801 548.75 cv
306.09 548.754 306.344 548.699 306.559 548.586 cv
306.773 548.48 306.949 548.332 307.094 548.145 cv
307.234 547.961 307.34 547.754 307.406 547.523 cv
307.473 547.293 307.508 547.059 307.508 546.812 cv
cp
f
385.598 547.297 mo
385.598 547.684 385.527 548.027 385.391 548.324 cv
385.254 548.629 385.059 548.879 384.801 549.082 cv
384.543 549.289 384.223 549.445 383.844 549.547 cv
383.461 549.652 383.027 549.703 382.543 549.703 cv
382.082 549.703 381.672 549.656 381.313 549.562 cv
380.949 549.469 380.645 549.328 380.395 549.137 cv
380.145 548.953 379.953 548.723 379.82 548.445 cv
379.688 548.172 379.621 547.859 379.621 547.504 cv
379.621 547.23 379.664 546.973 379.758 546.738 cv
379.844 546.504 379.977 546.289 380.152 546.094 cv
380.32 545.898 380.531 545.715 380.785 545.539 cv
381.035 545.371 381.32 545.207 381.637 545.051 cv
381.363 544.91 381.121 544.762 380.91 544.602 cv
380.699 544.445 380.52 544.273 380.375 544.086 cv
380.227 543.902 380.117 543.707 380.043 543.496 cv
379.965 543.289 379.926 543.059 379.93 542.809 cv
379.926 542.5 379.98 542.207 380.098 541.934 cv
380.207 541.664 380.379 541.43 380.605 541.227 cv
380.832 541.027 381.117 540.867 381.469 540.75 cv
381.813 540.633 382.223 540.574 382.691 540.574 cv
383.137 540.574 383.523 540.629 383.852 540.734 cv
384.18 540.844 384.449 540.988 384.66 541.172 cv
384.871 541.359 385.027 541.578 385.133 541.828 cv
385.23 542.078 385.281 542.348 385.285 542.637 cv
385.281 542.871 385.242 543.098 385.172 543.309 cv
385.094 543.527 384.984 543.73 384.836 543.918 cv
384.688 544.113 384.508 544.293 384.297 544.457 cv
384.086 544.629 383.844 544.785 383.57 544.926 cv
383.891 545.09 384.176 545.254 384.434 545.422 cv
384.684 545.59 384.898 545.77 385.074 545.965 cv
385.242 546.16 385.371 546.367 385.465 546.582 cv
385.551 546.801 385.598 547.039 385.598 547.297 cv
cp
384.117 542.746 mo
384.113 542.559 384.082 542.383 384.016 542.227 cv
383.949 542.07 383.852 541.937 383.727 541.828 cv
383.598 541.719 383.438 541.637 383.25 541.578 cv
383.055 541.523 382.84 541.496 382.602 541.492 cv
382.105 541.496 381.73 541.605 381.48 541.828 cv
381.223 542.055 381.098 542.363 381.102 542.746 cv
381.098 542.926 381.129 543.09 381.191 543.242 cv
381.254 543.398 381.348 543.543 381.48 543.68 cv
381.605 543.816 381.77 543.949 381.973 544.078 cv
382.168 544.211 382.406 544.348 382.684 544.488 cv
383.145 544.254 383.5 543.992 383.746 543.699 cv
383.992 543.414 384.113 543.098 384.117 542.746 cv
cp
384.406 547.422 mo
384.402 547.215 384.363 547.023 384.289 546.852 cv
384.207 546.684 384.09 546.523 383.934 546.371 cv
383.777 546.223 383.578 546.078 383.344 545.937 cv
383.105 545.801 382.836 545.656 382.527 545.504 cv
382.238 545.648 381.984 545.789 381.77 545.93 cv
381.551 546.07 381.371 546.219 381.234 546.367 cv
381.094 546.523 380.988 546.68 380.918 546.844 cv
380.844 547.012 380.809 547.195 380.813 547.395 cv
380.809 547.84 380.961 548.184 381.27 548.422 cv
381.57 548.668 382.023 548.789 382.629 548.785 cv
383.211 548.789 383.656 548.668 383.957 548.418 cv
384.254 548.176 384.402 547.844 384.406 547.422 cv
cp
f
458.805 549.109 mo
458.801 549.199 458.793 549.27 458.781 549.328 cv
458.766 549.391 458.746 549.441 458.727 549.473 cv
458.703 549.512 458.68 549.535 458.648 549.551 cv
458.617 549.566 458.586 549.574 458.559 549.574 cv
453.922 549.574 li
453.887 549.574 453.859 549.566 453.832 549.551 cv
453.805 549.535 453.777 549.512 453.754 549.473 cv
453.727 549.441 453.707 549.391 453.695 549.328 cv
453.68 549.27 453.672 549.199 453.676 549.109 cv
453.672 549.031 453.68 548.957 453.695 548.895 cv
453.707 548.836 453.723 548.789 453.746 548.75 cv
453.762 548.715 453.789 548.684 453.82 548.66 cv
453.852 548.641 453.883 548.633 453.922 548.629 cv
455.773 548.629 li
455.773 541.883 li
454.059 542.902 li
453.969 542.953 453.898 542.98 453.852 542.988 cv
453.797 542.996 453.754 542.988 453.723 542.957 cv
453.688 542.93 453.668 542.879 453.656 542.809 cv
453.645 542.742 453.637 542.656 453.641 542.547 cv
453.637 542.473 453.641 542.406 453.652 542.348 cv
453.656 542.297 453.668 542.25 453.684 542.211 cv
453.695 542.176 453.715 542.145 453.738 542.117 cv
453.762 542.09 453.793 542.062 453.84 542.035 cv
455.883 540.723 li
455.898 540.711 455.918 540.699 455.949 540.691 cv
455.973 540.684 456.008 540.676 456.055 540.664 cv
456.094 540.656 456.145 540.648 456.199 540.645 cv
456.254 540.645 456.32 540.645 456.406 540.641 cv
456.512 540.645 456.605 540.648 456.68 540.656 cv
456.75 540.664 456.805 540.68 456.852 540.695 cv
456.891 540.715 456.918 540.734 456.934 540.758 cv
456.941 540.785 456.949 540.809 456.953 540.832 cv
456.953 548.629 li
458.559 548.629 li
458.594 548.633 458.629 548.641 458.66 548.66 cv
458.691 548.684 458.715 548.715 458.738 548.75 cv
458.754 548.789 458.77 548.836 458.785 548.895 cv
458.793 548.957 458.801 549.031 458.805 549.109 cv
cp
f
466.16 545.117 mo
466.156 545.801 466.105 546.422 466 546.984 cv
465.891 547.547 465.711 548.031 465.465 548.434 cv
465.211 548.84 464.883 549.152 464.484 549.371 cv
464.078 549.594 463.586 549.703 463 549.703 cv
462.441 549.703 461.969 549.605 461.59 549.406 cv
461.207 549.211 460.902 548.918 460.668 548.531 cv
460.434 548.145 460.266 547.672 460.172 547.105 cv
460.07 546.543 460.023 545.895 460.023 545.16 cv
460.023 544.488 460.078 543.867 460.188 543.301 cv
460.297 542.738 460.473 542.254 460.723 541.848 cv
460.965 541.445 461.289 541.133 461.695 540.906 cv
462.094 540.687 462.59 540.574 463.18 540.574 cv
463.738 540.574 464.211 540.676 464.594 540.871 cv
464.977 541.074 465.281 541.367 465.516 541.75 cv
465.746 542.141 465.914 542.613 466.012 543.176 cv
466.109 543.738 466.156 544.387 466.16 545.117 cv
cp
464.953 545.199 mo
464.949 544.758 464.934 544.359 464.906 544.008 cv
464.871 543.656 464.824 543.348 464.766 543.078 cv
464.699 542.809 464.621 542.578 464.523 542.383 cv
464.426 542.191 464.309 542.031 464.172 541.902 cv
464.031 541.777 463.871 541.684 463.699 541.625 cv
463.52 541.57 463.324 541.543 463.109 541.539 cv
462.719 541.543 462.402 541.633 462.164 541.816 cv
461.918 542 461.727 542.254 461.59 542.57 cv
461.449 542.891 461.355 543.262 461.305 543.691 cv
461.254 544.121 461.23 544.586 461.23 545.078 cv
461.23 545.742 461.262 546.305 461.332 546.766 cv
461.398 547.234 461.508 547.613 461.66 547.902 cv
461.805 548.199 461.996 548.41 462.227 548.539 cv
462.457 548.676 462.738 548.742 463.07 548.738 cv
463.324 548.742 463.547 548.703 463.742 548.617 cv
463.934 548.539 464.102 548.418 464.242 548.262 cv
464.383 548.109 464.496 547.926 464.59 547.711 cv
464.676 547.496 464.75 547.258 464.809 546.996 cv
464.859 546.738 464.898 546.457 464.922 546.152 cv
464.941 545.848 464.949 545.531 464.953 545.199 cv
cp
f
535.727 549.109 mo
535.723 549.199 535.715 549.27 535.703 549.328 cv
535.688 549.391 535.668 549.441 535.648 549.473 cv
535.625 549.512 535.602 549.535 535.57 549.551 cv
535.539 549.566 535.508 549.574 535.48 549.574 cv
530.844 549.574 li
530.809 549.574 530.781 549.566 530.754 549.551 cv
530.727 549.535 530.699 549.512 530.676 549.473 cv
530.648 549.441 530.629 549.391 530.617 549.328 cv
530.602 549.27 530.594 549.199 530.598 549.109 cv
530.594 549.031 530.602 548.957 530.617 548.895 cv
530.629 548.836 530.645 548.789 530.668 548.75 cv
530.684 548.715 530.711 548.684 530.742 548.66 cv
530.773 548.641 530.805 548.633 530.844 548.629 cv
532.695 548.629 li
532.695 541.883 li
530.98 542.902 li
530.891 542.953 530.82 542.98 530.773 542.988 cv
530.719 542.996 530.676 542.988 530.645 542.957 cv
530.609 542.93 530.59 542.879 530.578 542.809 cv
530.566 542.742 530.559 542.656 530.563 542.547 cv
530.559 542.473 530.563 542.406 530.574 542.348 cv
530.578 542.297 530.59 542.25 530.605 542.211 cv
530.617 542.176 530.637 542.145 530.66 542.117 cv
530.684 542.09 530.715 542.062 530.762 542.035 cv
532.805 540.723 li
532.82 540.711 532.84 540.699 532.871 540.691 cv
532.895 540.684 532.93 540.676 532.977 540.664 cv
533.016 540.656 533.066 540.648 533.121 540.645 cv
533.176 540.645 533.242 540.645 533.328 540.641 cv
533.434 540.645 533.527 540.648 533.602 540.656 cv
533.672 540.664 533.727 540.68 533.773 540.695 cv
533.813 540.715 533.84 540.734 533.855 540.758 cv
533.863 540.785 533.871 540.809 533.875 540.832 cv
533.875 548.629 li
535.48 548.629 li
535.516 548.633 535.551 548.641 535.582 548.66 cv
535.613 548.684 535.637 548.715 535.66 548.75 cv
535.676 548.789 535.691 548.836 535.707 548.895 cv
535.715 548.957 535.723 549.031 535.727 549.109 cv
cp
f
542.785 549.066 mo
542.781 549.152 542.777 549.227 542.766 549.289 cv
542.754 549.355 542.738 549.41 542.719 549.449 cv
542.695 549.496 542.668 549.527 542.637 549.543 cv
542.602 549.566 542.563 549.574 542.523 549.574 cv
537.621 549.574 li
537.559 549.574 537.5 549.566 537.453 549.551 cv
537.402 549.535 537.363 549.512 537.328 549.473 cv
537.293 549.441 537.266 549.387 537.254 549.316 cv
537.234 549.246 537.227 549.16 537.23 549.059 cv
537.227 548.969 537.23 548.891 537.238 548.82 cv
537.242 548.754 537.258 548.695 537.285 548.641 cv
537.309 548.59 537.34 548.535 537.375 548.48 cv
537.41 548.43 537.453 548.375 537.512 548.312 cv
539.285 546.488 li
539.695 546.07 540.023 545.695 540.273 545.359 cv
540.52 545.031 540.711 544.727 540.844 544.449 cv
540.977 544.176 541.063 543.926 541.109 543.699 cv
541.148 543.477 541.172 543.266 541.172 543.07 cv
541.172 542.875 541.137 542.691 541.07 542.512 cv
541.004 542.34 540.91 542.184 540.785 542.047 cv
540.66 541.918 540.504 541.812 540.316 541.73 cv
540.129 541.656 539.91 541.617 539.664 541.613 cv
539.375 541.617 539.117 541.656 538.891 541.73 cv
538.66 541.812 538.461 541.898 538.289 541.984 cv
538.117 542.078 537.973 542.16 537.855 542.238 cv
537.738 542.316 537.652 542.355 537.602 542.355 cv
537.566 542.355 537.535 542.348 537.512 542.328 cv
537.48 542.312 537.461 542.281 537.445 542.238 cv
537.43 542.199 537.414 542.145 537.406 542.074 cv
537.395 542.008 537.391 541.926 537.395 541.828 cv
537.391 541.762 537.395 541.703 537.402 541.652 cv
537.406 541.602 537.414 541.559 537.426 541.52 cv
537.434 541.484 537.449 541.449 537.469 541.418 cv
537.488 541.387 537.523 541.348 537.582 541.297 cv
537.633 541.25 537.727 541.184 537.863 541.102 cv
537.996 541.02 538.168 540.941 538.371 540.859 cv
538.574 540.781 538.797 540.711 539.043 540.656 cv
539.285 540.602 539.543 540.574 539.816 540.574 cv
540.242 540.574 540.617 540.637 540.941 540.758 cv
541.262 540.879 541.527 541.043 541.742 541.254 cv
541.953 541.465 542.113 541.711 542.219 541.984 cv
542.324 542.266 542.379 542.562 542.379 542.875 cv
542.379 543.164 542.352 543.445 542.301 543.723 cv
542.25 544.008 542.145 544.312 541.984 544.637 cv
541.82 544.965 541.586 545.328 541.281 545.727 cv
540.973 546.129 540.566 546.59 540.063 547.105 cv
538.656 548.574 li
542.516 548.574 li
542.547 548.578 542.582 548.59 542.621 548.605 cv
542.652 548.629 542.684 548.66 542.711 548.699 cv
542.734 548.742 542.754 548.793 542.766 548.852 cv
542.777 548.918 542.781 548.988 542.785 549.066 cv
cp
f
612.645 549.109 mo
612.641 549.199 612.633 549.27 612.621 549.328 cv
612.605 549.391 612.586 549.441 612.566 549.473 cv
612.543 549.512 612.52 549.535 612.488 549.551 cv
612.457 549.566 612.426 549.574 612.398 549.574 cv
607.762 549.574 li
607.727 549.574 607.699 549.566 607.672 549.551 cv
607.645 549.535 607.617 549.512 607.594 549.473 cv
607.566 549.441 607.547 549.391 607.535 549.328 cv
607.52 549.27 607.512 549.199 607.516 549.109 cv
607.512 549.031 607.52 548.957 607.535 548.895 cv
607.547 548.836 607.563 548.789 607.586 548.75 cv
607.602 548.715 607.629 548.684 607.66 548.66 cv
607.691 548.641 607.723 548.633 607.762 548.629 cv
609.613 548.629 li
609.613 541.883 li
607.898 542.902 li
607.809 542.953 607.738 542.98 607.691 542.988 cv
607.637 542.996 607.594 542.988 607.563 542.957 cv
607.527 542.93 607.508 542.879 607.496 542.809 cv
607.484 542.742 607.477 542.656 607.48 542.547 cv
607.477 542.473 607.48 542.406 607.492 542.348 cv
607.496 542.297 607.508 542.25 607.523 542.211 cv
607.535 542.176 607.555 542.145 607.578 542.117 cv
607.602 542.09 607.633 542.062 607.68 542.035 cv
609.723 540.723 li
609.738 540.711 609.758 540.699 609.789 540.691 cv
609.813 540.684 609.848 540.676 609.895 540.664 cv
609.934 540.656 609.984 540.648 610.039 540.645 cv
610.094 540.645 610.16 540.645 610.246 540.641 cv
610.352 540.645 610.445 540.648 610.52 540.656 cv
610.59 540.664 610.645 540.68 610.691 540.695 cv
610.73 540.715 610.758 540.734 610.773 540.758 cv
610.781 540.785 610.789 540.809 610.793 540.832 cv
610.793 548.629 li
612.398 548.629 li
612.434 548.633 612.469 548.641 612.5 548.66 cv
612.531 548.684 612.555 548.715 612.578 548.75 cv
612.594 548.789 612.609 548.836 612.625 548.895 cv
612.633 548.957 612.641 549.031 612.645 549.109 cv
cp
f
620.082 547.051 mo
620.078 547.203 620.055 547.324 620.012 547.41 cv
619.965 547.5 619.902 547.543 619.82 547.539 cv
618.82 547.539 li
618.82 549.402 li
618.82 549.441 618.809 549.473 618.793 549.496 cv
618.77 549.523 618.738 549.543 618.695 549.562 cv
618.645 549.578 618.582 549.59 618.512 549.602 cv
618.434 549.609 618.34 549.613 618.223 549.617 cv
618.105 549.613 618.008 549.609 617.938 549.602 cv
617.859 549.59 617.801 549.578 617.758 549.562 cv
617.711 549.543 617.68 549.523 617.664 549.496 cv
617.645 549.473 617.637 549.441 617.641 549.402 cv
617.641 547.539 li
614.012 547.539 li
613.953 547.543 613.91 547.535 613.875 547.52 cv
613.84 547.508 613.805 547.48 613.777 547.441 cv
613.746 547.406 613.727 547.355 613.715 547.285 cv
613.703 547.219 613.699 547.129 613.699 547.016 cv
613.699 546.934 613.699 546.855 613.707 546.785 cv
613.707 546.715 613.719 546.652 613.734 546.598 cv
613.746 546.543 613.762 546.488 613.789 546.434 cv
613.809 546.379 613.836 546.324 613.871 546.262 cv
617.031 540.875 li
617.051 540.84 617.086 540.809 617.133 540.781 cv
617.176 540.754 617.23 540.73 617.305 540.711 cv
617.371 540.695 617.457 540.684 617.563 540.672 cv
617.664 540.668 617.785 540.664 617.926 540.66 cv
618.074 540.664 618.211 540.668 618.328 540.68 cv
618.441 540.691 618.531 540.707 618.605 540.723 cv
618.672 540.742 618.727 540.766 618.766 540.797 cv
618.801 540.828 618.82 540.863 618.82 540.902 cv
618.82 546.566 li
619.82 546.566 li
619.895 546.57 619.957 546.609 620.008 546.687 cv
620.055 546.77 620.078 546.891 620.082 547.051 cv
cp
617.641 541.699 mo
617.629 541.699 li
614.777 546.566 li
617.641 546.566 li
cp
f
689.586 549.109 mo
689.582 549.199 689.574 549.27 689.563 549.328 cv
689.547 549.391 689.527 549.441 689.508 549.473 cv
689.484 549.512 689.461 549.535 689.43 549.551 cv
689.398 549.566 689.367 549.574 689.34 549.574 cv
684.703 549.574 li
684.668 549.574 684.641 549.566 684.613 549.551 cv
684.586 549.535 684.559 549.512 684.535 549.473 cv
684.508 549.441 684.488 549.391 684.477 549.328 cv
684.461 549.27 684.453 549.199 684.457 549.109 cv
684.453 549.031 684.461 548.957 684.477 548.895 cv
684.488 548.836 684.504 548.789 684.527 548.75 cv
684.543 548.715 684.57 548.684 684.602 548.66 cv
684.633 548.641 684.664 548.633 684.703 548.629 cv
686.555 548.629 li
686.555 541.883 li
684.84 542.902 li
684.75 542.953 684.68 542.98 684.633 542.988 cv
684.578 542.996 684.535 542.988 684.504 542.957 cv
684.469 542.93 684.449 542.879 684.438 542.809 cv
684.426 542.742 684.418 542.656 684.422 542.547 cv
684.418 542.473 684.422 542.406 684.434 542.348 cv
684.438 542.297 684.449 542.25 684.465 542.211 cv
684.477 542.176 684.496 542.145 684.52 542.117 cv
684.543 542.09 684.574 542.062 684.621 542.035 cv
686.664 540.723 li
686.68 540.711 686.699 540.699 686.73 540.691 cv
686.754 540.684 686.789 540.676 686.836 540.664 cv
686.875 540.656 686.926 540.648 686.98 540.645 cv
687.035 540.645 687.102 540.645 687.188 540.641 cv
687.293 540.645 687.387 540.648 687.461 540.656 cv
687.531 540.664 687.586 540.68 687.633 540.695 cv
687.672 540.715 687.699 540.734 687.715 540.758 cv
687.723 540.785 687.73 540.809 687.734 540.832 cv
687.734 548.629 li
689.34 548.629 li
689.375 548.633 689.41 548.641 689.441 548.66 cv
689.473 548.684 689.496 548.715 689.52 548.75 cv
689.535 548.789 689.551 548.836 689.566 548.895 cv
689.574 548.957 689.582 549.031 689.586 549.109 cv
cp
f
696.871 546.703 mo
696.871 547.094 696.809 547.473 696.691 547.832 cv
696.566 548.199 696.383 548.516 696.141 548.789 cv
695.891 549.066 695.578 549.289 695.203 549.453 cv
694.82 549.621 694.375 549.703 693.859 549.703 cv
693.488 549.703 693.16 549.66 692.879 549.566 cv
692.594 549.48 692.348 549.348 692.137 549.176 cv
691.926 549.008 691.75 548.801 691.613 548.555 cv
691.473 548.309 691.359 548.027 691.277 547.711 cv
691.191 547.398 691.133 547.055 691.098 546.676 cv
691.059 546.305 691.039 545.902 691.043 545.469 cv
691.039 545.09 691.059 544.707 691.102 544.316 cv
691.141 543.934 691.215 543.559 691.32 543.191 cv
691.426 542.832 691.57 542.492 691.75 542.176 cv
691.93 541.859 692.156 541.582 692.43 541.348 cv
692.703 541.113 693.027 540.926 693.406 540.785 cv
693.785 540.648 694.227 540.582 694.73 540.578 cv
694.898 540.582 695.07 540.59 695.242 540.609 cv
695.414 540.633 695.574 540.664 695.723 540.695 cv
695.871 540.734 695.992 540.77 696.094 540.809 cv
696.191 540.848 696.258 540.883 696.293 540.906 cv
696.32 540.934 696.344 540.961 696.363 540.988 cv
696.379 541.02 696.395 541.051 696.402 541.086 cv
696.41 541.121 696.414 541.16 696.422 541.203 cv
696.422 541.246 696.426 541.301 696.43 541.363 cv
696.426 541.449 696.426 541.52 696.426 541.574 cv
696.422 541.637 696.41 541.684 696.398 541.719 cv
696.379 541.758 696.359 541.785 696.336 541.801 cv
696.309 541.82 696.277 541.828 696.238 541.828 cv
696.188 541.828 696.117 541.812 696.031 541.781 cv
695.941 541.75 695.836 541.715 695.715 541.672 cv
695.59 541.637 695.441 541.602 695.266 541.566 cv
695.09 541.539 694.887 541.523 694.656 541.52 cv
694.227 541.523 693.859 541.609 693.555 541.781 cv
693.25 541.953 693 542.187 692.805 542.48 cv
692.609 542.773 692.465 543.113 692.375 543.496 cv
692.277 543.887 692.223 544.289 692.215 544.707 cv
692.332 544.641 692.469 544.574 692.617 544.504 cv
692.766 544.437 692.926 544.375 693.102 544.316 cv
693.277 544.266 693.465 544.219 693.66 544.184 cv
693.855 544.152 694.066 544.137 694.293 544.133 cv
694.77 544.137 695.172 544.203 695.504 544.328 cv
695.832 544.461 696.098 544.641 696.305 544.871 cv
696.504 545.102 696.648 545.371 696.738 545.684 cv
696.824 545.996 696.871 546.336 696.871 546.703 cv
cp
695.676 546.812 mo
695.676 546.551 695.648 546.309 695.598 546.09 cv
695.543 545.875 695.453 545.691 695.332 545.535 cv
695.207 545.387 695.043 545.27 694.84 545.187 cv
694.629 545.105 694.375 545.062 694.078 545.062 cv
693.906 545.062 693.738 545.078 693.57 545.109 cv
693.398 545.141 693.234 545.184 693.078 545.23 cv
692.918 545.285 692.77 545.348 692.629 545.418 cv
692.484 545.492 692.352 545.566 692.234 545.645 cv
692.23 546.238 692.27 546.734 692.348 547.129 cv
692.422 547.527 692.531 547.844 692.676 548.082 cv
692.82 548.324 693 548.496 693.215 548.598 cv
693.43 548.703 693.68 548.754 693.969 548.75 cv
694.258 548.754 694.512 548.699 694.727 548.586 cv
694.941 548.48 695.117 548.332 695.262 548.145 cv
695.402 547.961 695.508 547.754 695.574 547.523 cv
695.641 547.293 695.676 547.059 695.676 546.812 cv
cp
f
16.652 389.766 mo
16.75 389.77 16.832 389.773 16.898 389.781 cv
16.973 389.793 17.031 389.812 17.074 389.836 cv
17.125 389.863 17.16 389.895 17.176 389.926 cv
17.199 389.965 17.207 390 17.207 390.039 cv
17.207 394.879 li
17.207 395 17.168 395.113 17.086 395.219 cv
17.008 395.328 16.867 395.383 16.66 395.379 cv
7.668 395.379 li
7.465 395.383 7.324 395.328 7.242 395.219 cv
7.164 395.113 7.125 395 7.121 394.879 cv
7.121 390.094 li
7.125 390.055 7.133 390.016 7.152 389.98 cv
7.176 389.949 7.211 389.922 7.254 389.898 cv
7.305 389.879 7.363 389.863 7.43 389.848 cv
7.504 389.836 7.59 389.828 7.691 389.828 cv
7.785 389.828 7.867 389.836 7.938 389.848 cv
8.008 389.863 8.066 389.879 8.109 389.898 cv
8.156 389.922 8.188 389.949 8.207 389.98 cv
8.23 390.016 8.242 390.055 8.238 390.094 cv
8.238 394.039 li
11.402 394.039 li
11.402 390.656 li
11.406 390.617 11.418 390.578 11.438 390.543 cv
11.465 390.512 11.496 390.484 11.535 390.457 cv
11.578 390.437 11.637 390.422 11.707 390.406 cv
11.781 390.398 11.867 390.391 11.961 390.391 cv
12.059 390.391 12.137 390.398 12.203 390.406 cv
12.273 390.422 12.328 390.437 12.367 390.457 cv
12.41 390.484 12.441 390.512 12.457 390.543 cv
12.477 390.578 12.484 390.617 12.484 390.656 cv
12.484 394.039 li
16.094 394.039 li
16.094 390.039 li
16.094 390 16.105 389.965 16.125 389.926 cv
16.148 389.895 16.18 389.863 16.223 389.836 cv
16.27 389.812 16.328 389.793 16.395 389.781 cv
16.465 389.773 16.551 389.77 16.652 389.766 cv
cp
f
17.012 381.699 mo
17.059 381.699 17.094 381.711 17.117 381.73 cv
17.148 381.754 17.172 381.789 17.191 381.832 cv
17.211 381.883 17.223 381.945 17.238 382.027 cv
17.246 382.109 17.254 382.215 17.254 382.336 cv
17.254 382.469 17.246 382.574 17.238 382.656 cv
17.223 382.742 17.211 382.809 17.191 382.852 cv
17.172 382.902 17.148 382.934 17.117 382.953 cv
17.094 382.977 17.059 382.988 17.012 382.984 cv
12.906 382.984 li
12.508 382.988 12.188 383.02 11.941 383.078 cv
11.699 383.145 11.488 383.234 11.309 383.352 cv
11.133 383.469 10.996 383.625 10.902 383.812 cv
10.809 384.008 10.762 384.227 10.762 384.473 cv
10.762 384.797 10.879 385.121 11.105 385.441 cv
11.34 385.766 11.672 386.102 12.109 386.453 cv
17.012 386.453 li
17.059 386.457 17.094 386.469 17.117 386.484 cv
17.148 386.508 17.172 386.539 17.191 386.586 cv
17.211 386.633 17.223 386.699 17.238 386.777 cv
17.246 386.863 17.254 386.969 17.254 387.098 cv
17.254 387.227 17.246 387.332 17.238 387.41 cv
17.223 387.496 17.211 387.562 17.191 387.609 cv
17.172 387.664 17.148 387.695 17.117 387.711 cv
17.094 387.73 17.059 387.742 17.012 387.738 cv
10 387.738 li
9.961 387.742 9.926 387.734 9.895 387.715 cv
9.867 387.703 9.844 387.672 9.816 387.621 cv
9.797 387.578 9.781 387.516 9.77 387.441 cv
9.766 387.371 9.762 387.277 9.758 387.152 cv
9.762 387.043 9.766 386.945 9.77 386.867 cv
9.781 386.793 9.797 386.734 9.816 386.691 cv
9.844 386.652 9.867 386.625 9.895 386.605 cv
9.926 386.59 9.961 386.582 10 386.578 cv
10.926 386.578 li
10.484 386.187 10.164 385.793 9.957 385.398 cv
9.754 385.008 9.648 384.609 9.648 384.207 cv
9.648 383.738 9.73 383.348 9.887 383.027 cv
10.051 382.711 10.262 382.449 10.523 382.25 cv
10.789 382.055 11.098 381.914 11.453 381.828 cv
11.809 381.742 12.238 381.699 12.734 381.699 cv
cp
f
13.203 373.375 mo
13.406 373.379 13.547 373.43 13.633 373.527 cv
13.719 373.633 13.762 373.75 13.762 373.875 cv
13.762 378.492 li
14.152 378.496 14.504 378.457 14.816 378.375 cv
15.129 378.301 15.398 378.168 15.617 377.984 cv
15.844 377.805 16.016 377.57 16.133 377.273 cv
16.258 376.984 16.316 376.625 16.313 376.199 cv
16.316 375.867 16.289 375.57 16.23 375.309 cv
16.18 375.047 16.117 374.82 16.047 374.629 cv
15.98 374.441 15.922 374.285 15.863 374.16 cv
15.813 374.039 15.785 373.945 15.781 373.883 cv
15.785 373.848 15.793 373.816 15.809 373.785 cv
15.828 373.758 15.855 373.734 15.891 373.715 cv
15.93 373.703 15.98 373.691 16.043 373.68 cv
16.109 373.676 16.188 373.672 16.281 373.668 cv
16.352 373.672 16.41 373.676 16.457 373.676 cv
16.504 373.684 16.547 373.687 16.586 373.695 cv
16.625 373.703 16.66 373.719 16.691 373.734 cv
16.723 373.758 16.754 373.781 16.781 373.805 cv
16.813 373.836 16.859 373.918 16.922 374.059 cv
16.988 374.199 17.051 374.383 17.113 374.605 cv
17.176 374.832 17.23 375.09 17.281 375.383 cv
17.328 375.676 17.352 375.988 17.355 376.32 cv
17.352 376.898 17.273 377.406 17.113 377.836 cv
16.953 378.273 16.715 378.637 16.398 378.93 cv
16.082 379.23 15.688 379.453 15.207 379.602 cv
14.73 379.75 14.172 379.824 13.535 379.824 cv
12.938 379.824 12.398 379.75 11.914 379.594 cv
11.438 379.441 11.027 379.215 10.691 378.918 cv
10.355 378.625 10.098 378.27 9.918 377.855 cv
9.738 377.441 9.648 376.977 9.648 376.461 cv
9.648 375.91 9.738 375.441 9.914 375.055 cv
10.094 374.668 10.332 374.352 10.629 374.098 cv
10.93 373.852 11.281 373.668 11.68 373.551 cv
12.086 373.437 12.516 373.379 12.969 373.375 cv
cp
12.82 374.668 mo
12.145 374.652 11.613 374.805 11.23 375.121 cv
10.848 375.437 10.656 375.906 10.652 376.523 cv
10.656 376.848 10.715 377.129 10.832 377.367 cv
10.953 377.609 11.113 377.809 11.309 377.969 cv
11.508 378.133 11.738 378.258 12 378.344 cv
12.262 378.434 12.535 378.484 12.82 378.492 cv
cp
f
10.457 367.312 mo
10.574 367.316 10.672 367.316 10.746 367.32 cv
10.828 367.328 10.891 367.34 10.93 367.352 cv
10.977 367.371 11.008 367.391 11.031 367.41 cv
11.055 367.437 11.066 367.469 11.066 367.508 cv
11.066 367.551 11.055 367.602 11.031 367.66 cv
11.008 367.723 10.984 367.793 10.961 367.863 cv
10.938 367.941 10.918 368.023 10.895 368.117 cv
10.879 368.211 10.867 368.312 10.863 368.422 cv
10.867 368.555 10.895 368.684 10.941 368.805 cv
10.996 368.93 11.082 369.059 11.199 369.195 cv
11.324 369.336 11.48 369.48 11.676 369.629 cv
11.871 369.781 12.113 369.949 12.398 370.129 cv
17.012 370.129 li
17.059 370.133 17.094 370.145 17.117 370.16 cv
17.148 370.184 17.172 370.215 17.191 370.262 cv
17.211 370.309 17.223 370.375 17.238 370.453 cv
17.246 370.539 17.254 370.645 17.254 370.773 cv
17.254 370.902 17.246 371.008 17.238 371.086 cv
17.223 371.172 17.211 371.238 17.191 371.285 cv
17.172 371.34 17.148 371.371 17.117 371.387 cv
17.094 371.406 17.059 371.418 17.012 371.414 cv
10 371.414 li
9.961 371.418 9.926 371.41 9.895 371.391 cv
9.867 371.379 9.844 371.348 9.816 371.297 cv
9.797 371.254 9.781 371.191 9.77 371.117 cv
9.766 371.047 9.762 370.953 9.758 370.828 cv
9.762 370.719 9.766 370.621 9.77 370.543 cv
9.781 370.469 9.797 370.41 9.816 370.367 cv
9.844 370.328 9.867 370.301 9.895 370.281 cv
9.926 370.266 9.961 370.258 10 370.254 cv
11.02 370.254 li
10.738 370.066 10.512 369.883 10.336 369.711 cv
10.16 369.543 10.02 369.383 9.918 369.23 cv
9.816 369.082 9.746 368.934 9.707 368.785 cv
9.668 368.637 9.648 368.488 9.648 368.336 cv
9.648 368.27 9.652 368.191 9.66 368.105 cv
9.668 368.02 9.684 367.93 9.703 367.836 cv
9.727 367.742 9.75 367.66 9.773 367.582 cv
9.801 367.512 9.828 367.457 9.852 367.422 cv
9.883 367.395 9.906 367.375 9.926 367.359 cv
9.953 367.352 9.984 367.34 10.016 367.332 cv
10.055 367.324 10.105 367.32 10.176 367.316 cv
10.246 367.316 10.34 367.316 10.457 367.312 cv
cp
f
10.316 360.27 mo
10.5 360.273 10.633 360.297 10.711 360.344 cv
10.793 360.395 10.832 360.457 10.832 360.531 cv
10.832 361.539 li
11.02 361.359 11.227 361.23 11.453 361.156 cv
11.68 361.086 11.914 361.051 12.156 361.047 cv
12.563 361.051 12.922 361.117 13.234 361.242 cv
13.547 361.375 13.813 361.559 14.023 361.801 cv
14.242 362.043 14.406 362.332 14.52 362.66 cv
14.637 362.996 14.695 363.363 14.691 363.766 cv
14.695 364.055 14.656 364.328 14.578 364.582 cv
14.504 364.844 14.41 365.039 14.293 365.176 cv
14.391 365.27 14.496 365.348 14.613 365.406 cv
14.734 365.469 14.871 365.5 15.023 365.496 cv
15.207 365.5 15.359 365.414 15.477 365.242 cv
15.602 365.074 15.664 364.852 15.672 364.57 cv
15.75 362.738 li
15.762 362.391 15.809 362.074 15.895 361.781 cv
15.98 361.492 16.105 361.238 16.262 361.023 cv
16.422 360.812 16.613 360.645 16.844 360.523 cv
17.078 360.406 17.348 360.348 17.652 360.344 cv
17.973 360.348 18.277 360.414 18.57 360.547 cv
18.859 360.684 19.113 360.891 19.336 361.168 cv
19.555 361.449 19.73 361.805 19.859 362.234 cv
19.984 362.664 20.047 363.172 20.051 363.758 cv
20.047 364.328 20 364.812 19.906 365.207 cv
19.809 365.605 19.676 365.93 19.512 366.184 cv
19.344 366.437 19.148 366.621 18.918 366.734 cv
18.684 366.852 18.43 366.91 18.164 366.906 cv
17.992 366.91 17.828 366.891 17.668 366.844 cv
17.504 366.805 17.352 366.742 17.207 366.656 cv
17.063 366.574 16.926 366.465 16.789 366.336 cv
16.66 366.211 16.527 366.066 16.398 365.895 cv
16.27 366.152 16.105 366.34 15.906 366.461 cv
15.711 366.582 15.5 366.641 15.266 366.641 cv
14.953 366.641 14.668 366.578 14.418 366.449 cv
14.168 366.32 13.945 366.16 13.746 365.965 cv
13.555 366.129 13.34 366.254 13.098 366.348 cv
12.859 366.441 12.566 366.488 12.219 366.488 cv
11.824 366.488 11.465 366.422 11.145 366.285 cv
10.828 366.152 10.563 365.965 10.344 365.723 cv
10.129 365.484 9.961 365.199 9.84 364.863 cv
9.727 364.531 9.668 364.164 9.664 363.766 cv
9.668 363.555 9.68 363.355 9.699 363.172 cv
9.727 362.988 9.758 362.816 9.797 362.652 cv
9.797 360.531 li
9.801 360.445 9.844 360.379 9.926 360.336 cv
10.016 360.293 10.145 360.273 10.316 360.27 cv
cp
12.164 362.277 mo
11.691 362.281 11.32 362.414 11.047 362.672 cv
10.781 362.937 10.645 363.309 10.645 363.789 cv
10.645 364.043 10.688 364.262 10.77 364.441 cv
10.855 364.629 10.969 364.781 11.113 364.902 cv
11.262 365.023 11.43 365.113 11.617 365.172 cv
11.805 365.234 12.004 365.266 12.211 365.262 cv
12.676 365.266 13.039 365.133 13.305 364.871 cv
13.57 364.609 13.703 364.242 13.699 363.766 cv
13.703 363.516 13.664 363.297 13.578 363.105 cv
13.5 362.922 13.387 362.766 13.246 362.641 cv
13.105 362.52 12.941 362.43 12.75 362.367 cv
12.566 362.312 12.371 362.281 12.164 362.277 cv
cp
17.723 361.633 mo
17.418 361.637 17.188 361.762 17.023 362.004 cv
16.863 362.254 16.773 362.586 16.762 363.004 cv
16.699 364.82 li
16.832 364.988 16.957 365.125 17.07 365.227 cv
17.188 365.336 17.297 365.418 17.406 365.48 cv
17.512 365.543 17.617 365.586 17.723 365.609 cv
17.824 365.633 17.93 365.645 18.039 365.645 cv
18.375 365.645 18.629 365.477 18.809 365.133 cv
18.98 364.793 19.07 364.312 19.07 363.695 cv
19.07 363.309 19.031 362.984 18.957 362.719 cv
18.879 362.461 18.777 362.25 18.656 362.086 cv
18.527 361.93 18.387 361.812 18.227 361.738 cv
18.066 361.672 17.898 361.637 17.723 361.633 cv
cp
f
17.207 355.418 mo
19.785 356.352 li
19.867 356.387 19.93 356.465 19.977 356.59 cv
20.02 356.719 20.043 356.914 20.043 357.172 cv
20.043 357.312 20.035 357.422 20.023 357.5 cv
20.008 357.586 19.984 357.648 19.957 357.687 cv
19.922 357.734 19.883 357.758 19.832 357.762 cv
19.777 357.77 19.715 357.758 19.645 357.723 cv
17.207 356.758 li
17.188 356.805 17.156 356.852 17.105 356.891 cv
17.063 356.937 17.012 356.965 16.957 356.977 cv
10.254 359.477 li
10.148 359.52 10.063 359.543 10 359.539 cv
9.938 359.543 9.891 359.52 9.852 359.477 cv
9.82 359.437 9.793 359.371 9.777 359.273 cv
9.766 359.184 9.762 359.059 9.758 358.902 cv
9.762 358.746 9.766 358.625 9.77 358.535 cv
9.781 358.449 9.793 358.379 9.813 358.324 cv
9.836 358.273 9.867 358.234 9.902 358.211 cv
9.945 358.187 10 358.164 10.063 358.137 cv
15.688 356.133 li
15.688 356.109 li
10.031 354.18 li
9.934 354.148 9.871 354.113 9.84 354.066 cv
9.816 354.027 9.793 353.961 9.777 353.867 cv
9.766 353.781 9.762 353.652 9.758 353.484 cv
9.762 353.34 9.766 353.219 9.777 353.125 cv
9.793 353.031 9.82 352.965 9.852 352.918 cv
9.891 352.879 9.938 352.855 10 352.852 cv
10.063 352.855 10.141 352.871 10.23 352.898 cv
cp
f
15.781 340.781 mo
15.867 340.781 15.938 340.785 16 340.789 cv
16.063 340.797 16.117 340.805 16.164 340.816 cv
16.211 340.832 16.254 340.852 16.289 340.867 cv
16.328 340.891 16.371 340.926 16.422 340.977 cv
16.473 341.031 16.551 341.141 16.656 341.305 cv
16.766 341.473 16.871 341.68 16.969 341.926 cv
17.074 342.172 17.156 342.453 17.227 342.773 cv
17.293 343.094 17.328 343.445 17.332 343.82 cv
17.328 344.48 17.223 345.07 17.004 345.598 cv
16.789 346.125 16.469 346.574 16.039 346.945 cv
15.617 347.316 15.09 347.602 14.461 347.801 cv
13.836 348 13.113 348.102 12.297 348.098 cv
11.461 348.102 10.719 347.992 10.063 347.777 cv
9.41 347.562 8.855 347.262 8.398 346.871 cv
7.945 346.484 7.598 346.02 7.359 345.473 cv
7.121 344.934 7 344.328 7 343.664 cv
7 343.375 7.027 343.094 7.082 342.816 cv
7.137 342.543 7.207 342.289 7.285 342.055 cv
7.371 341.824 7.465 341.617 7.574 341.43 cv
7.684 341.25 7.773 341.121 7.844 341.051 cv
7.914 340.98 7.969 340.937 8.004 340.914 cv
8.043 340.898 8.086 340.879 8.133 340.863 cv
8.184 340.852 8.242 340.844 8.309 340.832 cv
8.379 340.828 8.461 340.824 8.551 340.82 cv
8.656 340.824 8.742 340.828 8.813 340.836 cv
8.887 340.848 8.949 340.863 8.996 340.883 cv
9.051 340.906 9.086 340.93 9.105 340.957 cv
9.133 340.988 9.145 341.023 9.141 341.062 cv
9.145 341.137 9.094 341.242 8.988 341.371 cv
8.891 341.504 8.781 341.672 8.656 341.875 cv
8.539 342.086 8.426 342.336 8.32 342.629 cv
8.223 342.926 8.172 343.277 8.168 343.687 cv
8.172 344.141 8.262 344.551 8.438 344.918 cv
8.617 345.285 8.879 345.602 9.227 345.859 cv
9.578 346.125 10.004 346.324 10.504 346.465 cv
11.004 346.609 11.578 346.684 12.219 346.68 cv
12.863 346.684 13.43 346.613 13.918 346.473 cv
14.41 346.336 14.82 346.137 15.148 345.879 cv
15.48 345.621 15.727 345.305 15.895 344.93 cv
16.066 344.555 16.152 344.129 16.148 343.648 cv
16.152 343.25 16.102 342.898 16 342.598 cv
15.902 342.297 15.793 342.043 15.668 341.828 cv
15.547 341.621 15.438 341.445 15.336 341.309 cv
15.242 341.172 15.191 341.066 15.188 340.984 cv
15.191 340.953 15.199 340.922 15.211 340.891 cv
15.23 340.867 15.262 340.844 15.301 340.828 cv
15.348 340.812 15.406 340.801 15.484 340.793 cv
15.563 340.785 15.664 340.781 15.781 340.781 cv
cp
f
13.426 332.633 mo
14.004 332.637 14.531 332.711 15.008 332.859 cv
15.492 333.012 15.906 333.238 16.25 333.535 cv
16.602 333.836 16.871 334.211 17.063 334.656 cv
17.258 335.109 17.352 335.629 17.355 336.219 cv
17.352 336.797 17.27 337.301 17.098 337.727 cv
16.93 338.156 16.68 338.512 16.352 338.797 cv
16.023 339.086 15.629 339.301 15.16 339.437 cv
14.695 339.578 14.164 339.645 13.566 339.645 cv
13 339.645 12.473 339.574 11.992 339.426 cv
11.512 339.281 11.098 339.055 10.746 338.754 cv
10.398 338.457 10.129 338.086 9.938 337.637 cv
9.746 337.191 9.648 336.668 9.648 336.07 cv
9.648 335.492 9.734 334.992 9.906 334.562 cv
10.078 334.137 10.328 333.777 10.656 333.492 cv
10.984 333.207 11.383 332.992 11.848 332.848 cv
12.316 332.707 12.844 332.637 13.426 332.633 cv
cp
13.512 333.965 mo
13.137 333.969 12.777 334.004 12.438 334.07 cv
12.102 334.145 11.809 334.262 11.551 334.422 cv
11.301 334.586 11.098 334.805 10.945 335.082 cv
10.801 335.363 10.727 335.711 10.723 336.121 cv
10.727 336.508 10.793 336.836 10.926 337.109 cv
11.063 337.387 11.254 337.613 11.5 337.789 cv
11.746 337.969 12.039 338.102 12.375 338.184 cv
12.715 338.273 13.082 338.316 13.48 338.312 cv
13.867 338.316 14.23 338.281 14.566 338.207 cv
14.906 338.141 15.199 338.023 15.449 337.855 cv
15.703 337.691 15.906 337.469 16.051 337.191 cv
16.203 336.914 16.277 336.566 16.273 336.152 cv
16.277 335.777 16.207 335.449 16.07 335.168 cv
15.938 334.891 15.75 334.664 15.5 334.484 cv
15.258 334.309 14.965 334.18 14.629 334.094 cv
14.293 334.012 13.922 333.969 13.512 333.965 cv
cp
f
17.012 324.707 mo
17.059 324.707 17.094 324.719 17.117 324.738 cv
17.148 324.762 17.172 324.797 17.191 324.84 cv
17.211 324.891 17.223 324.953 17.238 325.035 cv
17.246 325.117 17.254 325.223 17.254 325.344 cv
17.254 325.477 17.246 325.582 17.238 325.664 cv
17.223 325.75 17.211 325.816 17.191 325.859 cv
17.172 325.91 17.148 325.941 17.117 325.961 cv
17.094 325.984 17.059 325.996 17.012 325.992 cv
12.906 325.992 li
12.508 325.996 12.188 326.027 11.941 326.086 cv
11.699 326.152 11.488 326.242 11.309 326.359 cv
11.133 326.477 10.996 326.633 10.902 326.82 cv
10.809 327.016 10.762 327.234 10.762 327.48 cv
10.762 327.805 10.879 328.129 11.105 328.449 cv
11.34 328.773 11.672 329.109 12.109 329.461 cv
17.012 329.461 li
17.059 329.465 17.094 329.477 17.117 329.492 cv
17.148 329.516 17.172 329.547 17.191 329.594 cv
17.211 329.641 17.223 329.707 17.238 329.785 cv
17.246 329.871 17.254 329.977 17.254 330.105 cv
17.254 330.234 17.246 330.34 17.238 330.418 cv
17.223 330.504 17.211 330.57 17.191 330.617 cv
17.172 330.672 17.148 330.703 17.117 330.719 cv
17.094 330.738 17.059 330.75 17.012 330.746 cv
10 330.746 li
9.961 330.75 9.926 330.742 9.895 330.723 cv
9.867 330.711 9.844 330.68 9.816 330.629 cv
9.797 330.586 9.781 330.523 9.77 330.449 cv
9.766 330.379 9.762 330.285 9.758 330.16 cv
9.762 330.051 9.766 329.953 9.77 329.875 cv
9.781 329.801 9.797 329.742 9.816 329.699 cv
9.844 329.66 9.867 329.633 9.895 329.613 cv
9.926 329.598 9.961 329.59 10 329.586 cv
10.926 329.586 li
10.484 329.195 10.164 328.801 9.957 328.406 cv
9.754 328.016 9.648 327.617 9.648 327.215 cv
9.648 326.746 9.73 326.355 9.887 326.035 cv
10.051 325.719 10.262 325.457 10.523 325.258 cv
10.789 325.062 11.098 324.922 11.453 324.836 cv
11.809 324.75 12.238 324.707 12.734 324.707 cv
cp
f
15.102 317.965 mo
15.465 317.969 15.785 318.035 16.063 318.164 cv
16.344 318.297 16.578 318.484 16.77 318.727 cv
16.965 318.973 17.109 319.266 17.207 319.602 cv
17.305 319.941 17.352 320.312 17.355 320.715 cv
17.352 320.969 17.332 321.207 17.297 321.43 cv
17.254 321.656 17.207 321.855 17.148 322.035 cv
17.09 322.215 17.027 322.367 16.961 322.492 cv
16.898 322.617 16.84 322.711 16.785 322.766 cv
16.734 322.824 16.664 322.863 16.566 322.887 cv
16.477 322.914 16.348 322.926 16.188 322.926 cv
16.09 322.926 16.008 322.922 15.938 322.91 cv
15.871 322.902 15.816 322.891 15.773 322.871 cv
15.734 322.859 15.703 322.836 15.684 322.809 cv
15.668 322.781 15.66 322.75 15.656 322.711 cv
15.66 322.656 15.695 322.57 15.762 322.457 cv
15.836 322.348 15.914 322.211 15.992 322.043 cv
16.078 321.883 16.152 321.691 16.223 321.465 cv
16.293 321.246 16.328 320.988 16.328 320.691 cv
16.328 320.477 16.305 320.277 16.258 320.098 cv
16.211 319.922 16.145 319.77 16.051 319.641 cv
15.965 319.512 15.848 319.41 15.703 319.34 cv
15.566 319.27 15.398 319.234 15.203 319.234 cv
15.008 319.234 14.844 319.285 14.707 319.387 cv
14.574 319.488 14.453 319.625 14.348 319.789 cv
14.246 319.957 14.156 320.141 14.07 320.348 cv
13.992 320.559 13.906 320.773 13.816 320.992 cv
13.73 321.211 13.629 321.426 13.516 321.637 cv
13.406 321.848 13.273 322.039 13.109 322.203 cv
12.953 322.375 12.758 322.508 12.531 322.605 cv
12.309 322.711 12.043 322.762 11.73 322.758 cv
11.457 322.762 11.191 322.707 10.938 322.598 cv
10.688 322.492 10.469 322.332 10.277 322.117 cv
10.09 321.906 9.938 321.641 9.82 321.32 cv
9.707 321 9.648 320.629 9.648 320.199 cv
9.648 320.016 9.664 319.828 9.695 319.641 cv
9.727 319.457 9.766 319.289 9.813 319.133 cv
9.859 318.984 9.91 318.855 9.965 318.746 cv
10.02 318.645 10.07 318.562 10.109 318.504 cv
10.156 318.453 10.191 318.418 10.219 318.395 cv
10.25 318.379 10.285 318.363 10.32 318.355 cv
10.363 318.348 10.41 318.34 10.465 318.332 cv
10.523 318.324 10.594 318.32 10.676 318.32 cv
10.766 318.32 10.844 318.324 10.906 318.332 cv
10.977 318.34 11.027 318.355 11.066 318.371 cv
11.109 318.395 11.141 318.414 11.156 318.437 cv
11.176 318.465 11.184 318.496 11.184 318.523 cv
11.184 318.574 11.156 318.641 11.098 318.727 cv
11.043 318.816 10.98 318.93 10.914 319.07 cv
10.852 319.211 10.793 319.379 10.73 319.566 cv
10.676 319.758 10.645 319.973 10.645 320.215 cv
10.645 320.437 10.672 320.629 10.719 320.793 cv
10.773 320.961 10.844 321.098 10.93 321.203 cv
11.023 321.309 11.129 321.391 11.254 321.441 cv
11.379 321.5 11.516 321.527 11.66 321.523 cv
11.863 321.527 12.031 321.477 12.168 321.371 cv
12.309 321.27 12.43 321.133 12.531 320.965 cv
12.637 320.801 12.73 320.609 12.813 320.395 cv
12.898 320.184 12.984 319.969 13.07 319.746 cv
13.16 319.527 13.262 319.309 13.367 319.09 cv
13.477 318.875 13.605 318.684 13.762 318.516 cv
13.918 318.352 14.105 318.219 14.324 318.117 cv
14.543 318.02 14.805 317.969 15.102 317.965 cv
cp
f
17.012 310.121 mo
17.059 310.125 17.094 310.133 17.117 310.148 cv
17.148 310.168 17.172 310.203 17.191 310.246 cv
17.211 310.293 17.223 310.352 17.238 310.426 cv
17.246 310.504 17.254 310.598 17.254 310.703 cv
17.254 310.828 17.246 310.926 17.238 310.996 cv
17.223 311.074 17.211 311.133 17.191 311.176 cv
17.172 311.223 17.148 311.254 17.117 311.266 cv
17.094 311.285 17.059 311.293 17.012 311.289 cv
16.086 311.289 li
16.531 311.691 16.852 312.086 17.051 312.473 cv
17.254 312.867 17.352 313.262 17.355 313.656 cv
17.352 314.129 17.277 314.523 17.121 314.84 cv
16.969 315.16 16.758 315.418 16.488 315.613 cv
16.223 315.816 15.91 315.957 15.551 316.039 cv
15.195 316.129 14.762 316.172 14.254 316.168 cv
10 316.168 li
9.961 316.172 9.926 316.164 9.895 316.141 cv
9.867 316.125 9.844 316.09 9.816 316.035 cv
9.797 315.988 9.781 315.918 9.77 315.832 cv
9.766 315.75 9.762 315.648 9.758 315.52 cv
9.762 315.398 9.766 315.293 9.77 315.207 cv
9.781 315.125 9.797 315.059 9.816 315.012 cv
9.844 314.965 9.867 314.93 9.895 314.906 cv
9.926 314.887 9.961 314.879 10 314.875 cv
14.082 314.875 li
14.496 314.879 14.824 314.848 15.07 314.785 cv
15.316 314.727 15.527 314.637 15.699 314.512 cv
15.879 314.395 16.012 314.238 16.105 314.047 cv
16.203 313.863 16.254 313.645 16.25 313.395 cv
16.254 313.074 16.137 312.754 15.906 312.43 cv
15.68 312.113 15.344 311.773 14.898 311.414 cv
10 311.414 li
9.961 311.414 9.926 311.406 9.895 311.387 cv
9.867 311.371 9.844 311.336 9.816 311.281 cv
9.797 311.23 9.781 311.164 9.77 311.082 cv
9.766 311.004 9.762 310.898 9.758 310.766 cv
9.762 310.645 9.766 310.539 9.77 310.453 cv
9.781 310.371 9.797 310.309 9.816 310.262 cv
9.844 310.219 9.867 310.184 9.895 310.156 cv
9.926 310.137 9.961 310.125 10 310.121 cv
cp
f
17.012 297.344 mo
17.059 297.348 17.094 297.355 17.117 297.375 cv
17.148 297.398 17.172 297.434 17.191 297.477 cv
17.211 297.527 17.223 297.594 17.238 297.672 cv
17.246 297.758 17.254 297.859 17.254 297.984 cv
17.254 298.117 17.246 298.227 17.238 298.305 cv
17.223 298.391 17.211 298.457 17.191 298.504 cv
17.172 298.559 17.148 298.594 17.117 298.609 cv
17.094 298.633 17.059 298.641 17.012 298.641 cv
12.75 298.641 li
12.457 298.641 12.188 298.668 11.941 298.719 cv
11.699 298.773 11.488 298.855 11.309 298.969 cv
11.133 299.082 10.996 299.227 10.902 299.402 cv
10.809 299.582 10.762 299.793 10.762 300.027 cv
10.762 300.324 10.879 300.621 11.105 300.918 cv
11.34 301.223 11.672 301.551 12.109 301.906 cv
17.012 301.906 li
17.059 301.91 17.094 301.922 17.117 301.937 cv
17.148 301.961 17.172 301.992 17.191 302.039 cv
17.211 302.09 17.223 302.156 17.238 302.238 cv
17.246 302.324 17.254 302.43 17.254 302.551 cv
17.254 302.672 17.246 302.773 17.238 302.859 cv
17.223 302.945 17.211 303.016 17.191 303.062 cv
17.172 303.117 17.148 303.148 17.117 303.164 cv
17.094 303.184 17.059 303.195 17.012 303.191 cv
12.75 303.191 li
12.457 303.195 12.188 303.223 11.941 303.277 cv
11.699 303.336 11.488 303.422 11.309 303.535 cv
11.133 303.648 10.996 303.793 10.902 303.965 cv
10.809 304.145 10.762 304.352 10.762 304.586 cv
10.762 304.887 10.879 305.184 11.105 305.484 cv
11.34 305.785 11.672 306.113 12.109 306.465 cv
17.012 306.465 li
17.059 306.469 17.094 306.48 17.117 306.496 cv
17.148 306.52 17.172 306.551 17.191 306.598 cv
17.211 306.645 17.223 306.711 17.238 306.789 cv
17.246 306.875 17.254 306.98 17.254 307.109 cv
17.254 307.238 17.246 307.344 17.238 307.422 cv
17.223 307.508 17.211 307.574 17.191 307.621 cv
17.172 307.676 17.148 307.707 17.117 307.723 cv
17.094 307.742 17.059 307.754 17.012 307.75 cv
10 307.75 li
9.961 307.754 9.926 307.746 9.895 307.727 cv
9.867 307.715 9.844 307.684 9.816 307.633 cv
9.797 307.59 9.781 307.527 9.77 307.453 cv
9.766 307.383 9.762 307.289 9.758 307.164 cv
9.762 307.055 9.766 306.957 9.77 306.879 cv
9.781 306.805 9.797 306.746 9.816 306.703 cv
9.844 306.664 9.867 306.637 9.895 306.617 cv
9.926 306.602 9.961 306.594 10 306.59 cv
10.926 306.59 li
10.484 306.199 10.164 305.816 9.957 305.441 cv
9.754 305.074 9.648 304.695 9.648 304.312 cv
9.648 304.023 9.684 303.766 9.75 303.531 cv
9.82 303.305 9.914 303.098 10.035 302.918 cv
10.156 302.742 10.301 302.594 10.469 302.465 cv
10.641 302.344 10.832 302.238 11.035 302.152 cv
10.785 301.922 10.57 301.699 10.391 301.488 cv
10.219 301.277 10.074 301.074 9.961 300.879 cv
9.855 300.684 9.777 300.496 9.723 300.312 cv
9.676 300.129 9.648 299.941 9.648 299.754 cv
9.648 299.301 9.73 298.922 9.887 298.617 cv
10.051 298.312 10.262 298.066 10.523 297.871 cv
10.789 297.684 11.098 297.547 11.453 297.465 cv
11.809 297.387 12.184 297.348 12.578 297.344 cv
cp
f
13.395 288.543 mo
14.012 288.547 14.563 288.613 15.051 288.742 cv
15.539 288.879 15.953 289.074 16.293 289.328 cv
16.633 289.586 16.895 289.902 17.078 290.281 cv
17.262 290.66 17.352 291.094 17.355 291.582 cv
17.352 291.793 17.332 291.988 17.293 292.16 cv
17.25 292.34 17.188 292.512 17.098 292.676 cv
17.012 292.848 16.898 293.016 16.762 293.18 cv
16.629 293.352 16.473 293.527 16.289 293.711 cv
19.793 293.711 li
19.832 293.715 19.871 293.727 19.902 293.742 cv
19.934 293.766 19.957 293.797 19.98 293.844 cv
19.996 293.891 20.012 293.957 20.027 294.035 cv
20.035 294.121 20.043 294.227 20.043 294.355 cv
20.043 294.484 20.035 294.59 20.027 294.668 cv
20.012 294.754 19.996 294.82 19.98 294.867 cv
19.957 294.922 19.934 294.953 19.902 294.969 cv
19.871 294.988 19.832 295 19.793 294.996 cv
10 294.996 li
9.953 295 9.918 294.992 9.887 294.973 cv
9.863 294.961 9.836 294.93 9.813 294.879 cv
9.793 294.836 9.781 294.773 9.77 294.699 cv
9.766 294.629 9.762 294.543 9.758 294.434 cv
9.762 294.328 9.766 294.238 9.77 294.164 cv
9.781 294.098 9.793 294.039 9.813 293.988 cv
9.836 293.945 9.863 293.91 9.887 293.891 cv
9.918 293.875 9.953 293.867 10 293.863 cv
10.941 293.863 li
10.727 293.656 10.535 293.453 10.375 293.25 cv
10.215 293.055 10.082 292.855 9.973 292.652 cv
9.867 292.457 9.785 292.25 9.73 292.039 cv
9.676 291.828 9.648 291.605 9.648 291.371 cv
9.648 290.863 9.75 290.43 9.945 290.07 cv
10.145 289.711 10.414 289.422 10.754 289.195 cv
11.102 288.973 11.5 288.805 11.953 288.699 cv
12.41 288.598 12.891 288.547 13.395 288.543 cv
cp
13.543 289.875 mo
13.191 289.879 12.844 289.906 12.504 289.957 cv
12.172 290.016 11.875 290.109 11.613 290.242 cv
11.355 290.379 11.148 290.559 10.988 290.777 cv
10.836 291.004 10.758 291.281 10.754 291.617 cv
10.758 291.785 10.781 291.949 10.828 292.109 cv
10.879 292.273 10.957 292.441 11.063 292.605 cv
11.172 292.777 11.313 292.949 11.484 293.129 cv
11.66 293.312 11.875 293.508 12.125 293.711 cv
14.914 293.711 li
15.352 293.355 15.68 293.02 15.906 292.699 cv
16.137 292.383 16.254 292.047 16.25 291.695 cv
16.254 291.371 16.176 291.094 16.016 290.859 cv
15.863 290.633 15.652 290.445 15.391 290.297 cv
15.133 290.156 14.844 290.047 14.52 289.977 cv
14.199 289.91 13.875 289.879 13.543 289.875 cv
cp
f
16.496 283.051 mo
16.652 283.051 16.77 283.062 16.855 283.082 cv
16.945 283.105 17.012 283.137 17.051 283.176 cv
17.094 283.219 17.133 283.281 17.168 283.363 cv
17.203 283.449 17.23 283.543 17.258 283.648 cv
17.277 283.758 17.297 283.871 17.316 283.988 cv
17.328 284.105 17.336 284.227 17.34 284.344 cv
17.336 284.711 17.289 285.023 17.195 285.281 cv
17.102 285.543 16.957 285.754 16.758 285.918 cv
16.566 286.086 16.32 286.207 16.02 286.281 cv
15.723 286.359 15.371 286.398 14.961 286.395 cv
10.863 286.395 li
10.863 287.375 li
10.867 287.453 10.824 287.516 10.738 287.562 cv
10.656 287.609 10.523 287.633 10.332 287.633 cv
10.238 287.633 10.156 287.629 10.086 287.613 cv
10.023 287.605 9.965 287.586 9.918 287.562 cv
9.875 287.543 9.844 287.516 9.824 287.48 cv
9.809 287.449 9.801 287.414 9.797 287.367 cv
9.797 286.395 li
8.129 286.395 li
8.098 286.398 8.063 286.387 8.027 286.367 cv
8 286.352 7.973 286.32 7.945 286.266 cv
7.926 286.219 7.91 286.152 7.895 286.066 cv
7.887 285.988 7.879 285.883 7.879 285.754 cv
7.879 285.625 7.887 285.52 7.895 285.437 cv
7.91 285.355 7.926 285.289 7.945 285.242 cv
7.973 285.195 8 285.164 8.027 285.141 cv
8.063 285.125 8.098 285.113 8.129 285.109 cv
9.797 285.109 li
9.797 283.309 li
9.801 283.27 9.809 283.234 9.824 283.199 cv
9.844 283.172 9.875 283.145 9.918 283.117 cv
9.965 283.098 10.023 283.082 10.086 283.066 cv
10.156 283.059 10.238 283.051 10.332 283.051 cv
10.523 283.051 10.656 283.074 10.738 283.121 cv
10.824 283.168 10.867 283.23 10.863 283.309 cv
10.863 285.109 li
14.777 285.109 li
15.262 285.113 15.625 285.043 15.871 284.895 cv
16.121 284.754 16.246 284.496 16.242 284.125 cv
16.246 284.012 16.234 283.906 16.207 283.809 cv
16.188 283.719 16.164 283.637 16.133 283.559 cv
16.109 283.488 16.082 283.426 16.059 283.371 cv
16.035 283.324 16.023 283.277 16.023 283.23 cv
16.023 283.207 16.031 283.18 16.043 283.156 cv
16.059 283.133 16.082 283.117 16.117 283.102 cv
16.156 283.094 16.207 283.082 16.266 283.066 cv
16.332 283.059 16.41 283.051 16.496 283.051 cv
cp
f
17.012 280.035 mo
17.059 280.039 17.094 280.051 17.117 280.066 cv
17.148 280.09 17.172 280.121 17.191 280.168 cv
17.211 280.215 17.223 280.281 17.238 280.359 cv
17.246 280.445 17.254 280.551 17.254 280.68 cv
17.254 280.809 17.246 280.914 17.238 280.992 cv
17.223 281.078 17.211 281.145 17.191 281.191 cv
17.172 281.246 17.148 281.277 17.117 281.293 cv
17.094 281.312 17.059 281.324 17.012 281.32 cv
10 281.32 li
9.965 281.324 9.934 281.312 9.898 281.293 cv
9.871 281.277 9.844 281.246 9.82 281.191 cv
9.801 281.145 9.785 281.078 9.773 280.992 cv
9.766 280.914 9.762 280.809 9.758 280.68 cv
9.762 280.551 9.766 280.445 9.773 280.359 cv
9.785 280.281 9.801 280.215 9.82 280.168 cv
9.844 280.121 9.871 280.09 9.898 280.066 cv
9.934 280.051 9.965 280.039 10 280.035 cv
cp
7.629 279.887 mo
7.934 279.887 8.141 279.945 8.246 280.059 cv
8.359 280.172 8.414 280.383 8.41 280.687 cv
8.414 280.992 8.359 281.199 8.25 281.309 cv
8.145 281.426 7.941 281.48 7.645 281.477 cv
7.344 281.48 7.141 281.422 7.031 281.305 cv
6.926 281.191 6.871 280.98 6.867 280.672 cv
6.871 280.371 6.926 280.168 7.027 280.055 cv
7.137 279.945 7.336 279.887 7.629 279.887 cv
cp
f
13.426 271.094 mo
14.004 271.098 14.531 271.172 15.008 271.32 cv
15.492 271.473 15.906 271.699 16.25 271.996 cv
16.602 272.297 16.871 272.672 17.063 273.117 cv
17.258 273.57 17.352 274.09 17.355 274.68 cv
17.352 275.258 17.27 275.762 17.098 276.187 cv
16.93 276.617 16.68 276.973 16.352 277.258 cv
16.023 277.547 15.629 277.762 15.16 277.898 cv
14.695 278.039 14.164 278.105 13.566 278.105 cv
13 278.105 12.473 278.035 11.992 277.887 cv
11.512 277.742 11.098 277.516 10.746 277.215 cv
10.398 276.918 10.129 276.547 9.938 276.098 cv
9.746 275.652 9.648 275.129 9.648 274.531 cv
9.648 273.953 9.734 273.453 9.906 273.023 cv
10.078 272.598 10.328 272.238 10.656 271.953 cv
10.984 271.668 11.383 271.453 11.848 271.309 cv
12.316 271.168 12.844 271.098 13.426 271.094 cv
cp
13.512 272.426 mo
13.137 272.43 12.777 272.465 12.438 272.531 cv
12.102 272.605 11.809 272.723 11.551 272.883 cv
11.301 273.047 11.098 273.266 10.945 273.543 cv
10.801 273.824 10.727 274.172 10.723 274.582 cv
10.727 274.969 10.793 275.297 10.926 275.57 cv
11.063 275.848 11.254 276.074 11.5 276.25 cv
11.746 276.43 12.039 276.562 12.375 276.645 cv
12.715 276.734 13.082 276.777 13.48 276.773 cv
13.867 276.777 14.23 276.742 14.566 276.668 cv
14.906 276.602 15.199 276.484 15.449 276.316 cv
15.703 276.152 15.906 275.93 16.051 275.652 cv
16.203 275.375 16.277 275.027 16.273 274.613 cv
16.277 274.238 16.207 273.91 16.07 273.629 cv
15.938 273.352 15.75 273.125 15.5 272.945 cv
15.258 272.77 14.965 272.641 14.629 272.555 cv
14.293 272.473 13.922 272.43 13.512 272.426 cv
cp
f
17.012 263.168 mo
17.059 263.168 17.094 263.18 17.117 263.199 cv
17.148 263.223 17.172 263.258 17.191 263.301 cv
17.211 263.352 17.223 263.414 17.238 263.496 cv
17.246 263.578 17.254 263.684 17.254 263.805 cv
17.254 263.937 17.246 264.043 17.238 264.125 cv
17.223 264.211 17.211 264.277 17.191 264.32 cv
17.172 264.371 17.148 264.402 17.117 264.422 cv
17.094 264.445 17.059 264.457 17.012 264.453 cv
12.906 264.453 li
12.508 264.457 12.188 264.488 11.941 264.547 cv
11.699 264.613 11.488 264.703 11.309 264.82 cv
11.133 264.937 10.996 265.094 10.902 265.281 cv
10.809 265.477 10.762 265.695 10.762 265.941 cv
10.762 266.266 10.879 266.59 11.105 266.91 cv
11.34 267.234 11.672 267.57 12.109 267.922 cv
17.012 267.922 li
17.059 267.926 17.094 267.937 17.117 267.953 cv
17.148 267.977 17.172 268.008 17.191 268.055 cv
17.211 268.102 17.223 268.168 17.238 268.246 cv
17.246 268.332 17.254 268.437 17.254 268.566 cv
17.254 268.695 17.246 268.801 17.238 268.879 cv
17.223 268.965 17.211 269.031 17.191 269.078 cv
17.172 269.133 17.148 269.164 17.117 269.18 cv
17.094 269.199 17.059 269.211 17.012 269.207 cv
10 269.207 li
9.961 269.211 9.926 269.203 9.895 269.184 cv
9.867 269.172 9.844 269.141 9.816 269.09 cv
9.797 269.047 9.781 268.984 9.77 268.91 cv
9.766 268.84 9.762 268.746 9.758 268.621 cv
9.762 268.512 9.766 268.414 9.77 268.336 cv
9.781 268.262 9.797 268.203 9.816 268.16 cv
9.844 268.121 9.867 268.094 9.895 268.074 cv
9.926 268.059 9.961 268.051 10 268.047 cv
10.926 268.047 li
10.484 267.656 10.164 267.262 9.957 266.867 cv
9.754 266.477 9.648 266.078 9.648 265.676 cv
9.648 265.207 9.73 264.816 9.887 264.496 cv
10.051 264.18 10.262 263.918 10.523 263.719 cv
10.789 263.523 11.098 263.383 11.453 263.297 cv
11.809 263.211 12.238 263.168 12.734 263.168 cv
cp
f
6.469 254.328 mo
7.516 254.824 8.586 255.191 9.684 255.434 cv
10.785 255.676 11.891 255.797 13 255.797 cv
14.117 255.797 15.227 255.676 16.32 255.426 cv
17.418 255.184 18.488 254.82 19.543 254.344 cv
19.602 254.32 19.656 254.309 19.703 254.301 cv
19.746 254.301 19.781 254.316 19.813 254.352 cv
19.84 254.391 19.859 254.445 19.875 254.52 cv
19.883 254.598 19.891 254.703 19.895 254.828 cv
19.891 254.926 19.887 255.004 19.887 255.07 cv
19.879 255.141 19.871 255.199 19.855 255.246 cv
19.84 255.297 19.82 255.34 19.801 255.367 cv
19.777 255.402 19.754 255.426 19.73 255.437 cv
19.199 255.719 18.664 255.965 18.121 256.176 cv
17.578 256.395 17.027 256.574 16.469 256.715 cv
15.906 256.863 15.34 256.973 14.766 257.043 cv
14.191 257.121 13.609 257.156 13.023 257.152 cv
12.438 257.156 11.859 257.117 11.285 257.031 cv
10.715 256.953 10.148 256.836 9.582 256.687 cv
9.02 256.539 8.465 256.359 7.918 256.148 cv
7.375 255.937 6.832 255.699 6.297 255.43 cv
6.277 255.426 6.262 255.41 6.242 255.387 cv
6.23 255.363 6.215 255.332 6.195 255.289 cv
6.184 255.25 6.172 255.191 6.16 255.117 cv
6.156 255.047 6.152 254.953 6.148 254.836 cv
6.152 254.719 6.16 254.625 6.172 254.547 cv
6.191 254.477 6.211 254.418 6.234 254.375 cv
6.262 254.336 6.297 254.312 6.336 254.305 cv
6.383 254.301 6.426 254.309 6.469 254.328 cv
cp
f
16.988 245.434 mo
17.035 245.437 17.07 245.445 17.102 245.461 cv
17.137 245.48 17.164 245.516 17.184 245.566 cv
17.203 245.621 17.219 245.691 17.234 245.777 cv
17.246 245.867 17.254 245.98 17.254 246.121 cv
17.254 246.301 17.246 246.449 17.23 246.562 cv
17.215 246.68 17.188 246.766 17.145 246.82 cv
17.105 246.879 17.059 246.926 17.004 246.961 cv
11.961 250.672 li
17.004 250.672 li
17.043 250.676 17.078 250.684 17.109 250.703 cv
17.145 250.727 17.172 250.766 17.188 250.812 cv
17.207 250.867 17.219 250.934 17.234 251.02 cv
17.246 251.105 17.254 251.215 17.254 251.34 cv
17.254 251.469 17.246 251.574 17.234 251.66 cv
17.219 251.75 17.207 251.82 17.188 251.871 cv
17.172 251.926 17.145 251.961 17.109 251.98 cv
17.078 252.004 17.043 252.016 17.004 252.012 cv
7.324 252.012 li
7.285 252.016 7.25 252.004 7.215 251.98 cv
7.188 251.961 7.16 251.926 7.141 251.871 cv
7.125 251.82 7.109 251.75 7.094 251.66 cv
7.082 251.574 7.078 251.469 7.074 251.34 cv
7.078 251.215 7.082 251.105 7.094 251.02 cv
7.109 250.934 7.125 250.867 7.141 250.812 cv
7.16 250.766 7.188 250.727 7.215 250.703 cv
7.25 250.684 7.285 250.676 7.324 250.672 cv
11.805 250.672 li
7.324 247.102 li
7.281 247.074 7.242 247.039 7.207 246.992 cv
7.18 246.953 7.156 246.902 7.133 246.84 cv
7.117 246.785 7.102 246.711 7.09 246.621 cv
7.082 246.539 7.078 246.43 7.074 246.293 cv
7.078 246.16 7.082 246.051 7.094 245.965 cv
7.109 245.883 7.129 245.816 7.145 245.766 cv
7.168 245.719 7.191 245.684 7.223 245.664 cv
7.254 245.648 7.289 245.641 7.324 245.637 cv
7.395 245.641 7.461 245.656 7.527 245.687 cv
7.598 245.723 7.691 245.789 7.809 245.879 cv
11.805 249.223 li
16.59 245.621 li
16.73 245.535 16.82 245.48 16.867 245.461 cv
16.918 245.445 16.961 245.437 16.988 245.434 cv
cp
f
16.91 234.344 mo
16.984 234.367 17.043 234.398 17.086 234.437 cv
17.133 234.48 17.168 234.539 17.188 234.609 cv
17.211 234.687 17.223 234.777 17.238 234.879 cv
17.246 234.988 17.254 235.117 17.254 235.27 cv
17.254 235.434 17.246 235.57 17.238 235.68 cv
17.223 235.793 17.211 235.887 17.188 235.957 cv
17.168 236.035 17.133 236.09 17.086 236.121 cv
17.043 236.16 16.984 236.187 16.91 236.207 cv
9.297 238.32 li
9.297 238.332 li
16.91 240.281 li
16.984 240.301 17.043 240.324 17.086 240.359 cv
17.133 240.398 17.168 240.453 17.188 240.516 cv
17.211 240.586 17.223 240.672 17.238 240.777 cv
17.246 240.887 17.254 241.023 17.254 241.187 cv
17.254 241.359 17.246 241.5 17.238 241.613 cv
17.223 241.73 17.211 241.824 17.188 241.895 cv
17.168 241.969 17.133 242.027 17.086 242.062 cv
17.043 242.105 16.984 242.133 16.91 242.145 cv
7.598 244.809 li
7.48 244.844 7.387 244.859 7.316 244.859 cv
7.25 244.863 7.199 244.844 7.16 244.797 cv
7.125 244.754 7.102 244.684 7.09 244.586 cv
7.082 244.488 7.078 244.355 7.074 244.187 cv
7.078 244.027 7.082 243.898 7.086 243.805 cv
7.098 243.711 7.109 243.641 7.129 243.59 cv
7.152 243.543 7.184 243.508 7.215 243.488 cv
7.254 243.473 7.301 243.461 7.355 243.445 cv
15.805 241.18 li
15.805 241.172 li
7.371 239.02 li
7.316 239.008 7.27 238.988 7.227 238.961 cv
7.191 238.941 7.16 238.902 7.137 238.848 cv
7.117 238.797 7.102 238.723 7.09 238.625 cv
7.082 238.531 7.078 238.406 7.074 238.25 cv
7.078 238.105 7.082 237.992 7.09 237.902 cv
7.102 237.82 7.117 237.75 7.137 237.695 cv
7.16 237.645 7.191 237.605 7.227 237.582 cv
7.27 237.559 7.316 237.539 7.371 237.523 cv
15.805 235.207 li
15.805 235.195 li
7.363 232.973 li
7.313 232.961 7.27 232.945 7.227 232.926 cv
7.191 232.914 7.16 232.883 7.137 232.828 cv
7.117 232.781 7.102 232.711 7.09 232.617 cv
7.082 232.531 7.078 232.41 7.074 232.254 cv
7.078 232.105 7.082 231.98 7.094 231.887 cv
7.109 231.797 7.137 231.73 7.168 231.687 cv
7.207 231.648 7.258 231.629 7.324 231.629 cv
7.395 231.633 7.488 231.648 7.605 231.672 cv
cp
f
17.012 223.906 mo
17.059 223.906 17.094 223.918 17.117 223.937 cv
17.148 223.961 17.172 223.996 17.191 224.039 cv
17.211 224.09 17.223 224.152 17.238 224.234 cv
17.246 224.316 17.254 224.422 17.254 224.543 cv
17.254 224.676 17.246 224.781 17.238 224.863 cv
17.223 224.949 17.211 225.016 17.191 225.059 cv
17.172 225.109 17.148 225.141 17.117 225.16 cv
17.094 225.184 17.059 225.195 17.012 225.191 cv
12.906 225.191 li
12.508 225.195 12.188 225.227 11.941 225.285 cv
11.699 225.352 11.488 225.441 11.309 225.559 cv
11.133 225.676 10.996 225.832 10.902 226.02 cv
10.809 226.215 10.762 226.434 10.762 226.68 cv
10.762 227.004 10.879 227.328 11.105 227.648 cv
11.34 227.973 11.672 228.309 12.109 228.66 cv
17.012 228.66 li
17.059 228.664 17.094 228.676 17.117 228.691 cv
17.148 228.715 17.172 228.746 17.191 228.793 cv
17.211 228.84 17.223 228.906 17.238 228.984 cv
17.246 229.07 17.254 229.176 17.254 229.305 cv
17.254 229.434 17.246 229.539 17.238 229.617 cv
17.223 229.703 17.211 229.77 17.191 229.816 cv
17.172 229.871 17.148 229.902 17.117 229.918 cv
17.094 229.937 17.059 229.949 17.012 229.945 cv
6.602 229.945 li
6.563 229.949 6.527 229.937 6.492 229.918 cv
6.465 229.902 6.438 229.871 6.414 229.816 cv
6.395 229.77 6.379 229.703 6.367 229.617 cv
6.359 229.539 6.355 229.434 6.352 229.305 cv
6.355 229.176 6.359 229.07 6.367 228.984 cv
6.379 228.906 6.395 228.84 6.414 228.793 cv
6.438 228.746 6.465 228.715 6.492 228.691 cv
6.527 228.676 6.563 228.664 6.602 228.66 cv
10.801 228.66 li
10.414 228.293 10.125 227.922 9.934 227.547 cv
9.746 227.176 9.648 226.797 9.648 226.414 cv
9.648 225.945 9.73 225.555 9.887 225.234 cv
10.051 224.918 10.262 224.656 10.523 224.457 cv
10.789 224.262 11.098 224.121 11.453 224.035 cv
11.809 223.949 12.238 223.906 12.742 223.906 cv
cp
f
19.086 221.449 mo
19.152 221.473 19.207 221.5 19.246 221.531 cv
19.285 221.57 19.313 221.613 19.336 221.66 cv
19.352 221.715 19.367 221.777 19.383 221.852 cv
19.391 221.93 19.398 222.02 19.398 222.125 cv
19.398 222.258 19.387 222.367 19.371 222.449 cv
19.348 222.539 19.324 222.605 19.293 222.648 cv
19.258 222.699 19.215 222.727 19.168 222.734 cv
19.117 222.746 19.059 222.738 18.992 222.703 cv
6.063 217.988 li
5.996 217.969 5.945 217.941 5.902 217.906 cv
5.867 217.875 5.836 217.836 5.809 217.781 cv
5.789 217.734 5.773 217.668 5.762 217.59 cv
5.758 217.512 5.754 217.418 5.75 217.309 cv
5.754 217.184 5.762 217.078 5.777 216.992 cv
5.797 216.91 5.82 216.848 5.852 216.797 cv
5.883 216.754 5.926 216.723 5.977 216.711 cv
6.031 216.703 6.09 216.711 6.156 216.734 cv
cp
f
16.676 209.437 mo
16.777 209.441 16.859 209.449 16.926 209.461 cv
16.996 209.48 17.051 209.5 17.09 209.523 cv
17.133 209.551 17.164 209.582 17.18 209.613 cv
17.199 209.648 17.207 209.684 17.207 209.715 cv
17.207 214.984 li
17.207 215.023 17.199 215.059 17.18 215.086 cv
17.164 215.121 17.133 215.152 17.09 215.176 cv
17.051 215.207 16.996 215.227 16.926 215.242 cv
16.859 215.258 16.777 215.266 16.676 215.266 cv
16.586 215.266 16.508 215.258 16.438 215.242 cv
16.375 215.227 16.316 215.207 16.27 215.184 cv
16.227 215.16 16.195 215.133 16.168 215.098 cv
16.148 215.066 16.137 215.027 16.133 214.984 cv
16.133 212.879 li
8.465 212.879 li
9.625 214.828 li
9.68 214.93 9.711 215.008 9.719 215.066 cv
9.73 215.129 9.719 215.18 9.684 215.211 cv
9.652 215.25 9.598 215.273 9.516 215.285 cv
9.441 215.301 9.344 215.309 9.219 215.305 cv
9.133 215.309 9.055 215.305 8.992 215.293 cv
8.93 215.289 8.879 215.277 8.836 215.258 cv
8.797 215.246 8.762 215.223 8.727 215.191 cv
8.699 215.164 8.668 215.125 8.637 215.078 cv
7.145 212.758 li
7.133 212.738 7.117 212.715 7.105 212.68 cv
7.098 212.652 7.09 212.613 7.078 212.562 cv
7.07 212.52 7.063 212.465 7.059 212.398 cv
7.059 212.34 7.059 212.262 7.055 212.164 cv
7.059 212.043 7.063 211.937 7.07 211.852 cv
7.078 211.77 7.094 211.703 7.109 211.656 cv
7.133 211.609 7.156 211.578 7.18 211.562 cv
7.211 211.547 7.238 211.539 7.27 211.539 cv
16.133 211.539 li
16.133 209.715 li
16.137 209.676 16.148 209.637 16.168 209.602 cv
16.195 209.566 16.227 209.535 16.27 209.512 cv
16.316 209.488 16.375 209.473 16.438 209.457 cv
16.508 209.449 16.586 209.441 16.676 209.437 cv
cp
f
12.141 201.082 mo
12.918 201.082 13.625 201.145 14.262 201.266 cv
14.902 201.391 15.453 201.594 15.91 201.875 cv
16.371 202.16 16.727 202.531 16.977 202.984 cv
17.23 203.445 17.352 204.008 17.355 204.676 cv
17.352 205.312 17.242 205.848 17.016 206.277 cv
16.793 206.715 16.461 207.062 16.02 207.324 cv
15.582 207.594 15.043 207.781 14.398 207.891 cv
13.758 208 13.02 208.055 12.188 208.055 cv
11.422 208.055 10.719 207.996 10.074 207.871 cv
9.434 207.75 8.883 207.547 8.422 207.262 cv
7.965 206.984 7.609 206.613 7.355 206.156 cv
7.105 205.699 6.977 205.141 6.977 204.473 cv
6.977 203.836 7.09 203.297 7.316 202.863 cv
7.543 202.43 7.875 202.082 8.313 201.816 cv
8.75 201.555 9.293 201.367 9.934 201.25 cv
10.578 201.141 11.313 201.082 12.141 201.082 cv
cp
12.234 202.453 mo
11.734 202.453 11.281 202.473 10.879 202.508 cv
10.48 202.547 10.129 202.602 9.82 202.668 cv
9.516 202.742 9.25 202.832 9.027 202.941 cv
8.809 203.055 8.629 203.187 8.484 203.344 cv
8.344 203.5 8.238 203.68 8.172 203.875 cv
8.109 204.078 8.078 204.301 8.074 204.551 cv
8.078 204.992 8.184 205.352 8.387 205.625 cv
8.598 205.902 8.883 206.121 9.242 206.277 cv
9.609 206.437 10.035 206.543 10.523 206.598 cv
11.012 206.656 11.535 206.684 12.094 206.684 cv
12.852 206.684 13.492 206.645 14.02 206.566 cv
14.547 206.488 14.977 206.367 15.309 206.199 cv
15.641 206.031 15.883 205.816 16.031 205.551 cv
16.184 205.293 16.258 204.973 16.258 204.598 cv
16.258 204.309 16.211 204.055 16.117 203.828 cv
16.023 203.609 15.891 203.418 15.715 203.262 cv
15.543 203.105 15.336 202.977 15.09 202.867 cv
14.848 202.766 14.574 202.68 14.277 202.617 cv
13.98 202.555 13.66 202.512 13.316 202.488 cv
12.973 202.465 12.613 202.453 12.234 202.453 cv
cp
f
9.773 197.559 mo
9.914 197.562 10.008 197.578 10.055 197.605 cv
10.109 197.641 10.133 197.687 10.133 197.742 cv
10.133 199.922 li
10.133 199.988 10.109 200.035 10.055 200.062 cv
10.004 200.098 9.91 200.113 9.773 200.109 cv
9.645 200.113 9.551 200.098 9.496 200.062 cv
9.445 200.035 9.418 199.988 9.418 199.922 cv
9.418 197.742 li
9.418 197.719 9.426 197.691 9.434 197.668 cv
9.449 197.645 9.469 197.625 9.496 197.609 cv
9.527 197.594 9.563 197.582 9.605 197.574 cv
9.652 197.566 9.711 197.562 9.773 197.559 cv
cp
f
10.477 192.465 mo
10.789 192.469 11.066 192.523 11.316 192.629 cv
11.566 192.738 11.781 192.891 11.953 193.09 cv
12.133 193.293 12.27 193.543 12.363 193.836 cv
12.457 194.133 12.5 194.465 12.504 194.836 cv
12.5 195.066 12.48 195.277 12.449 195.473 cv
12.41 195.668 12.371 195.844 12.32 195.996 cv
12.273 196.148 12.223 196.273 12.164 196.375 cv
12.113 196.477 12.074 196.543 12.047 196.566 cv
12.027 196.598 12.004 196.617 11.977 196.625 cv
11.953 196.641 11.922 196.652 11.887 196.66 cv
11.852 196.676 11.809 196.684 11.758 196.684 cv
11.707 196.691 11.645 196.691 11.57 196.691 cv
11.449 196.691 11.363 196.68 11.313 196.656 cv
11.266 196.633 11.242 196.598 11.238 196.551 cv
11.242 196.52 11.27 196.457 11.324 196.359 cv
11.383 196.27 11.441 196.148 11.504 195.996 cv
11.566 195.852 11.629 195.68 11.684 195.477 cv
11.742 195.281 11.77 195.059 11.766 194.816 cv
11.77 194.582 11.738 194.375 11.676 194.195 cv
11.617 194.016 11.535 193.867 11.426 193.746 cv
11.324 193.625 11.195 193.535 11.043 193.473 cv
10.898 193.418 10.738 193.387 10.559 193.383 cv
10.371 193.387 10.199 193.426 10.047 193.5 cv
9.895 193.578 9.762 193.691 9.648 193.836 cv
9.539 193.988 9.453 194.172 9.395 194.387 cv
9.336 194.605 9.309 194.852 9.305 195.125 cv
9.305 195.789 li
9.309 195.82 9.301 195.852 9.285 195.875 cv
9.273 195.906 9.254 195.93 9.227 195.945 cv
9.199 195.969 9.164 195.984 9.117 195.992 cv
9.074 196.008 9.012 196.012 8.938 196.012 cv
8.875 196.012 8.82 196.008 8.773 195.996 cv
8.73 195.988 8.695 195.973 8.668 195.953 cv
8.645 195.934 8.629 195.914 8.613 195.887 cv
8.605 195.863 8.598 195.832 8.594 195.801 cv
8.594 195.211 li
8.598 194.984 8.57 194.777 8.508 194.594 cv
8.453 194.414 8.367 194.262 8.25 194.133 cv
8.141 194.008 8.008 193.91 7.852 193.84 cv
7.699 193.773 7.523 193.738 7.332 193.738 cv
7.195 193.738 7.063 193.762 6.934 193.805 cv
6.809 193.852 6.699 193.918 6.602 194.008 cv
6.512 194.102 6.438 194.219 6.383 194.355 cv
6.328 194.5 6.301 194.664 6.301 194.844 cv
6.301 195.047 6.332 195.23 6.391 195.398 cv
6.453 195.566 6.52 195.715 6.586 195.848 cv
6.66 195.98 6.727 196.094 6.785 196.18 cv
6.848 196.27 6.875 196.328 6.875 196.359 cv
6.875 196.387 6.871 196.41 6.863 196.426 cv
6.855 196.449 6.84 196.465 6.809 196.473 cv
6.785 196.488 6.746 196.496 6.699 196.496 cv
6.652 196.504 6.59 196.504 6.512 196.504 cv
6.461 196.504 6.418 196.504 6.375 196.5 cv
6.34 196.5 6.305 196.492 6.273 196.48 cv
6.246 196.473 6.219 196.461 6.191 196.445 cv
6.168 196.43 6.141 196.406 6.105 196.375 cv
6.074 196.344 6.023 196.277 5.961 196.172 cv
5.898 196.074 5.84 195.949 5.777 195.801 cv
5.719 195.652 5.664 195.484 5.621 195.289 cv
5.582 195.102 5.563 194.891 5.559 194.664 cv
5.563 194.352 5.602 194.078 5.68 193.84 cv
5.762 193.605 5.875 193.41 6.02 193.25 cv
6.168 193.094 6.344 192.973 6.543 192.895 cv
6.75 192.816 6.977 192.777 7.219 192.777 cv
7.434 192.777 7.629 192.809 7.809 192.863 cv
7.992 192.922 8.152 193 8.293 193.105 cv
8.434 193.215 8.555 193.348 8.656 193.504 cv
8.758 193.66 8.828 193.84 8.859 194.043 cv
8.871 194.043 li
8.898 193.812 8.957 193.602 9.047 193.406 cv
9.141 193.215 9.254 193.051 9.395 192.91 cv
9.535 192.773 9.699 192.664 9.883 192.582 cv
10.07 192.508 10.27 192.469 10.477 192.465 cv
cp
f
13.023 188.031 mo
13.609 188.031 14.191 188.07 14.766 188.141 cv
15.34 188.219 15.906 188.328 16.469 188.469 cv
17.027 188.617 17.578 188.793 18.121 189.004 cv
18.664 189.215 19.199 189.461 19.73 189.738 cv
19.754 189.758 19.777 189.781 19.801 189.809 cv
19.82 189.844 19.84 189.883 19.855 189.93 cv
19.871 189.98 19.879 190.039 19.887 190.105 cv
19.887 190.176 19.891 190.258 19.895 190.348 cv
19.891 190.484 19.883 190.59 19.875 190.664 cv
19.859 190.742 19.84 190.797 19.813 190.828 cv
19.781 190.863 19.746 190.879 19.703 190.875 cv
19.656 190.875 19.602 190.859 19.543 190.832 cv
18.492 190.355 17.422 189.996 16.324 189.75 cv
15.227 189.508 14.117 189.387 13 189.383 cv
11.891 189.387 10.785 189.508 9.684 189.75 cv
8.586 189.996 7.516 190.363 6.469 190.848 cv
6.426 190.871 6.383 190.879 6.336 190.871 cv
6.297 190.871 6.262 190.848 6.234 190.801 cv
6.211 190.762 6.191 190.703 6.172 190.629 cv
6.16 190.559 6.152 190.461 6.148 190.34 cv
6.152 190.23 6.156 190.141 6.16 190.066 cv
6.172 189.996 6.184 189.937 6.195 189.891 cv
6.215 189.848 6.23 189.816 6.242 189.793 cv
6.262 189.777 6.277 189.762 6.297 189.746 cv
7.363 189.215 8.461 188.793 9.582 188.488 cv
10.711 188.184 11.855 188.031 13.023 188.031 cv
cp
f
319.676 568.508 mo
319.676 568.613 319.656 568.703 319.621 568.773 cv
319.586 568.852 319.539 568.91 319.484 568.953 cv
319.422 569.004 319.359 569.039 319.293 569.055 cv
319.223 569.078 319.152 569.086 319.086 569.086 cv
318.641 569.086 li
318.496 569.086 318.375 569.074 318.273 569.043 cv
318.168 569.02 318.07 568.965 317.977 568.887 cv
317.883 568.812 317.785 568.711 317.691 568.578 cv
317.594 568.449 317.496 568.281 317.395 568.078 cv
314.313 562.336 li
314.148 562.039 313.984 561.73 313.824 561.402 cv
313.656 561.082 313.504 560.766 313.367 560.453 cv
313.352 560.453 li
313.359 560.832 313.367 561.215 313.375 561.602 cv
313.379 561.996 313.383 562.383 313.383 562.766 cv
313.383 568.859 li
313.383 568.898 313.371 568.934 313.348 568.965 cv
313.324 569 313.285 569.027 313.238 569.043 cv
313.184 569.062 313.117 569.074 313.031 569.09 cv
312.945 569.102 312.836 569.109 312.707 569.109 cv
312.574 569.109 312.465 569.102 312.383 569.09 cv
312.293 569.074 312.227 569.062 312.18 569.043 cv
312.129 569.027 312.094 569 312.074 568.965 cv
312.051 568.934 312.039 568.898 312.043 568.859 cv
312.043 559.539 li
312.039 559.336 312.098 559.187 312.219 559.098 cv
312.332 559.012 312.461 558.969 312.605 558.965 cv
313.266 558.965 li
313.422 558.969 313.551 558.98 313.656 559.004 cv
313.758 559.031 313.852 559.074 313.938 559.133 cv
314.02 559.195 314.102 559.277 314.18 559.383 cv
314.258 559.488 314.34 559.621 314.426 559.781 cv
316.793 564.215 li
316.938 564.488 317.078 564.75 317.215 565.008 cv
317.352 565.266 317.48 565.52 317.609 565.77 cv
317.73 566.02 317.855 566.266 317.98 566.508 cv
318.102 566.75 318.223 566.992 318.348 567.234 cv
318.355 567.234 li
318.344 566.828 318.336 566.402 318.336 565.953 cv
318.328 565.512 318.328 565.082 318.332 564.668 cv
318.332 559.191 li
318.328 559.156 318.34 559.121 318.363 559.09 cv
318.387 559.059 318.422 559.031 318.477 559.008 cv
318.523 558.984 318.594 558.969 318.68 558.957 cv
318.766 558.949 318.875 558.945 319.016 558.941 cv
319.133 558.945 319.238 558.949 319.328 558.957 cv
319.414 558.969 319.484 558.984 319.535 559.008 cv
319.582 559.031 319.617 559.059 319.641 559.09 cv
319.664 559.121 319.676 559.156 319.676 559.191 cv
cp
f
328.238 568.867 mo
328.234 568.914 328.227 568.949 328.211 568.973 cv
328.191 569.004 328.156 569.027 328.113 569.047 cv
328.063 569.066 328.004 569.078 327.93 569.094 cv
327.852 569.102 327.758 569.109 327.652 569.109 cv
327.531 569.109 327.434 569.102 327.359 569.094 cv
327.281 569.078 327.223 569.066 327.18 569.047 cv
327.133 569.027 327.102 569.004 327.09 568.973 cv
327.07 568.949 327.063 568.914 327.066 568.867 cv
327.066 567.937 li
326.664 568.383 326.27 568.707 325.883 568.906 cv
325.488 569.109 325.094 569.207 324.695 569.211 cv
324.227 569.207 323.832 569.133 323.512 568.977 cv
323.191 568.824 322.93 568.613 322.734 568.34 cv
322.535 568.074 322.395 567.762 322.313 567.406 cv
322.223 567.051 322.18 566.617 322.184 566.105 cv
322.184 561.844 li
322.18 561.805 322.191 561.77 322.211 561.738 cv
322.227 561.711 322.262 561.687 322.316 561.66 cv
322.367 561.641 322.434 561.625 322.52 561.613 cv
322.602 561.609 322.707 561.605 322.832 561.602 cv
322.953 561.605 323.055 561.609 323.141 561.613 cv
323.223 561.625 323.289 561.641 323.34 561.66 cv
323.387 561.687 323.422 561.711 323.445 561.738 cv
323.465 561.77 323.477 561.805 323.477 561.844 cv
323.477 565.934 li
323.477 566.348 323.504 566.68 323.566 566.922 cv
323.621 567.172 323.715 567.379 323.84 567.551 cv
323.961 567.727 324.113 567.863 324.305 567.957 cv
324.488 568.055 324.707 568.102 324.961 568.102 cv
325.281 568.102 325.605 567.988 325.926 567.758 cv
326.246 567.531 326.582 567.195 326.941 566.754 cv
326.941 561.844 li
326.938 561.805 326.949 561.77 326.969 561.738 cv
326.984 561.711 327.02 561.687 327.074 561.66 cv
327.125 561.641 327.191 561.625 327.273 561.613 cv
327.352 561.609 327.457 561.605 327.59 561.602 cv
327.715 561.605 327.816 561.609 327.902 561.613 cv
327.98 561.625 328.047 561.641 328.098 561.66 cv
328.141 561.687 328.176 561.711 328.203 561.738 cv
328.223 561.77 328.234 561.805 328.238 561.844 cv
cp
f
341.031 568.867 mo
341.031 568.914 341.02 568.949 341 568.973 cv
340.977 569.004 340.941 569.027 340.898 569.047 cv
340.848 569.066 340.785 569.078 340.703 569.094 cv
340.617 569.102 340.512 569.109 340.391 569.109 cv
340.258 569.109 340.152 569.102 340.07 569.094 cv
339.984 569.078 339.918 569.066 339.871 569.047 cv
339.82 569.027 339.785 569.004 339.766 568.973 cv
339.742 568.949 339.73 568.914 339.734 568.867 cv
339.734 564.598 li
339.73 564.301 339.703 564.031 339.656 563.785 cv
339.602 563.543 339.52 563.332 339.406 563.156 cv
339.289 562.98 339.145 562.848 338.969 562.75 cv
338.793 562.66 338.586 562.613 338.348 562.609 cv
338.051 562.613 337.75 562.727 337.453 562.953 cv
337.148 563.184 336.82 563.52 336.465 563.957 cv
336.465 568.867 li
336.461 568.914 336.449 568.949 336.434 568.973 cv
336.41 569.004 336.375 569.027 336.328 569.047 cv
336.273 569.066 336.207 569.078 336.129 569.094 cv
336.043 569.102 335.941 569.109 335.816 569.109 cv
335.695 569.109 335.59 569.102 335.508 569.094 cv
335.418 569.078 335.352 569.066 335.305 569.047 cv
335.254 569.027 335.223 569.004 335.207 568.973 cv
335.188 568.949 335.176 568.914 335.18 568.867 cv
335.18 564.598 li
335.176 564.301 335.148 564.031 335.094 563.785 cv
335.035 563.543 334.949 563.332 334.836 563.156 cv
334.719 562.98 334.574 562.848 334.402 562.75 cv
334.227 562.66 334.02 562.613 333.781 562.609 cv
333.48 562.613 333.18 562.727 332.883 562.953 cv
332.578 563.184 332.25 563.52 331.898 563.957 cv
331.898 568.867 li
331.895 568.914 331.887 568.949 331.867 568.973 cv
331.844 569.004 331.809 569.027 331.766 569.047 cv
331.715 569.066 331.648 569.078 331.57 569.094 cv
331.484 569.102 331.379 569.109 331.254 569.109 cv
331.125 569.109 331.023 569.102 330.941 569.094 cv
330.855 569.078 330.789 569.066 330.742 569.047 cv
330.691 569.027 330.656 569.004 330.641 568.973 cv
330.621 568.949 330.613 568.914 330.613 568.867 cv
330.613 561.844 li
330.613 561.805 330.621 561.77 330.637 561.738 cv
330.652 561.711 330.684 561.687 330.73 561.66 cv
330.777 561.641 330.836 561.625 330.91 561.613 cv
330.98 561.609 331.078 561.605 331.199 561.602 cv
331.313 561.605 331.406 561.609 331.48 561.613 cv
331.555 561.625 331.613 561.641 331.656 561.66 cv
331.695 561.687 331.723 561.711 331.746 561.738 cv
331.762 561.77 331.773 561.805 331.773 561.844 cv
331.773 562.773 li
332.168 562.336 332.551 562.012 332.926 561.801 cv
333.297 561.598 333.672 561.492 334.055 561.492 cv
334.344 561.492 334.605 561.527 334.84 561.594 cv
335.066 561.664 335.27 561.758 335.449 561.879 cv
335.621 562.004 335.773 562.152 335.902 562.316 cv
336.023 562.488 336.129 562.676 336.215 562.883 cv
336.449 562.629 336.672 562.414 336.883 562.234 cv
337.094 562.062 337.297 561.918 337.492 561.805 cv
337.688 561.699 337.875 561.621 338.063 561.566 cv
338.242 561.52 338.43 561.492 338.621 561.492 cv
339.07 561.492 339.449 561.574 339.758 561.73 cv
340.063 561.895 340.313 562.105 340.504 562.367 cv
340.691 562.637 340.824 562.949 340.91 563.301 cv
340.988 563.66 341.031 564.035 341.031 564.426 cv
cp
f
349.797 565.262 mo
349.793 565.875 349.727 566.422 349.598 566.906 cv
349.461 567.391 349.266 567.805 349.012 568.148 cv
348.75 568.492 348.434 568.758 348.063 568.937 cv
347.688 569.121 347.258 569.207 346.777 569.211 cv
346.551 569.207 346.344 569.187 346.156 569.145 cv
345.961 569.098 345.777 569.027 345.598 568.93 cv
345.414 568.832 345.23 568.707 345.051 568.555 cv
344.867 568.406 344.676 568.223 344.473 568.008 cv
344.473 568.867 li
344.473 568.914 344.461 568.949 344.441 568.977 cv
344.418 569.012 344.383 569.035 344.34 569.051 cv
344.289 569.066 344.23 569.078 344.164 569.094 cv
344.094 569.102 344.008 569.109 343.898 569.109 cv
343.793 569.109 343.703 569.102 343.633 569.094 cv
343.559 569.078 343.5 569.066 343.453 569.051 cv
343.406 569.035 343.375 569.012 343.359 568.977 cv
343.344 568.949 343.336 568.914 343.336 568.867 cv
343.336 558.441 li
343.336 558.402 343.344 558.367 343.363 558.332 cv
343.379 558.305 343.414 558.277 343.465 558.254 cv
343.512 558.234 343.578 558.219 343.664 558.207 cv
343.746 558.199 343.848 558.195 343.977 558.191 cv
344.102 558.195 344.207 558.199 344.293 558.207 cv
344.371 558.219 344.438 558.234 344.488 558.254 cv
344.531 558.277 344.566 558.305 344.59 558.332 cv
344.609 558.367 344.617 558.402 344.621 558.441 cv
344.621 562.648 li
344.824 562.437 345.027 562.258 345.227 562.109 cv
345.418 561.965 345.609 561.848 345.801 561.754 cv
345.984 561.668 346.172 561.602 346.363 561.555 cv
346.547 561.516 346.746 561.492 346.957 561.492 cv
347.465 561.492 347.898 561.594 348.262 561.797 cv
348.621 562 348.914 562.273 349.145 562.613 cv
349.367 562.957 349.535 563.355 349.641 563.812 cv
349.742 564.27 349.793 564.754 349.797 565.262 cv
cp
348.461 565.41 mo
348.457 565.055 348.43 564.703 348.379 564.363 cv
348.32 564.027 348.227 563.73 348.094 563.469 cv
347.957 563.211 347.773 563 347.551 562.84 cv
347.324 562.684 347.047 562.605 346.711 562.602 cv
346.543 562.605 346.375 562.629 346.215 562.672 cv
346.051 562.723 345.887 562.801 345.719 562.906 cv
345.551 563.02 345.379 563.16 345.199 563.328 cv
345.02 563.5 344.824 563.715 344.621 563.973 cv
344.621 566.777 li
344.973 567.207 345.313 567.535 345.641 567.762 cv
345.961 567.988 346.301 568.102 346.656 568.102 cv
346.98 568.102 347.258 568.023 347.488 567.867 cv
347.719 567.711 347.906 567.508 348.051 567.25 cv
348.191 566.996 348.297 566.707 348.363 566.383 cv
348.426 566.066 348.457 565.742 348.461 565.41 cv
cp
f
357.719 565.051 mo
357.715 565.258 357.664 565.402 357.566 565.484 cv
357.461 565.574 357.344 565.617 357.219 565.613 cv
352.59 565.613 li
352.586 566.008 352.625 566.359 352.707 566.668 cv
352.785 566.98 352.918 567.246 353.102 567.469 cv
353.281 567.695 353.52 567.867 353.813 567.984 cv
354.105 568.105 354.465 568.168 354.891 568.164 cv
355.223 568.168 355.52 568.141 355.781 568.082 cv
356.043 568.031 356.27 567.969 356.461 567.898 cv
356.652 567.832 356.809 567.77 356.934 567.715 cv
357.055 567.66 357.148 567.633 357.211 567.633 cv
357.246 567.633 357.277 567.645 357.309 567.66 cv
357.336 567.684 357.359 567.711 357.375 567.742 cv
357.391 567.781 357.402 567.832 357.41 567.895 cv
357.418 567.965 357.422 568.043 357.422 568.133 cv
357.422 568.203 357.418 568.262 357.414 568.309 cv
357.406 568.359 357.398 568.402 357.395 568.441 cv
357.383 568.48 357.371 568.516 357.355 568.547 cv
357.336 568.578 357.313 568.609 357.285 568.637 cv
357.254 568.668 357.168 568.715 357.031 568.777 cv
356.887 568.844 356.707 568.906 356.484 568.969 cv
356.262 569.031 356.004 569.086 355.711 569.137 cv
355.414 569.184 355.098 569.207 354.77 569.211 cv
354.188 569.207 353.684 569.129 353.25 568.969 cv
352.813 568.809 352.445 568.57 352.152 568.25 cv
351.855 567.934 351.633 567.535 351.484 567.059 cv
351.332 566.582 351.258 566.027 351.258 565.387 cv
351.258 564.785 351.336 564.242 351.492 563.762 cv
351.648 563.281 351.871 562.871 352.164 562.535 cv
352.457 562.199 352.813 561.941 353.23 561.762 cv
353.645 561.582 354.109 561.492 354.629 561.492 cv
355.176 561.492 355.645 561.582 356.035 561.758 cv
356.418 561.937 356.738 562.176 356.992 562.473 cv
357.238 562.773 357.422 563.125 357.543 563.527 cv
357.656 563.93 357.715 564.359 357.719 564.816 cv
cp
356.422 564.668 mo
356.434 563.992 356.285 563.465 355.969 563.078 cv
355.652 562.695 355.184 562.5 354.563 562.5 cv
354.242 562.5 353.961 562.562 353.719 562.68 cv
353.477 562.805 353.273 562.961 353.117 563.156 cv
352.953 563.352 352.828 563.582 352.738 563.844 cv
352.648 564.109 352.598 564.383 352.59 564.668 cv
cp
f
363.793 562.305 mo
363.789 562.422 363.785 562.516 363.785 562.594 cv
363.777 562.672 363.77 562.734 363.754 562.777 cv
363.738 562.824 363.719 562.859 363.695 562.879 cv
363.672 562.906 363.637 562.918 363.598 562.914 cv
363.551 562.918 363.5 562.906 363.445 562.879 cv
363.383 562.859 363.316 562.836 363.242 562.809 cv
363.164 562.789 363.078 562.766 362.988 562.742 cv
362.891 562.723 362.789 562.711 362.684 562.711 cv
362.551 562.711 362.426 562.738 362.301 562.789 cv
362.176 562.844 362.043 562.93 361.906 563.047 cv
361.766 563.168 361.621 563.324 361.473 563.52 cv
361.32 563.719 361.152 563.961 360.973 564.246 cv
360.973 568.867 li
360.969 568.914 360.961 568.949 360.941 568.973 cv
360.918 569.004 360.883 569.027 360.84 569.047 cv
360.789 569.066 360.723 569.078 360.645 569.094 cv
360.559 569.102 360.453 569.109 360.328 569.109 cv
360.199 569.109 360.098 569.102 360.016 569.094 cv
359.93 569.078 359.863 569.066 359.816 569.047 cv
359.766 569.027 359.73 569.004 359.715 568.973 cv
359.695 568.949 359.688 568.914 359.688 568.867 cv
359.688 561.844 li
359.688 561.805 359.695 561.77 359.711 561.738 cv
359.727 561.711 359.758 561.687 359.805 561.66 cv
359.852 561.641 359.91 561.625 359.984 561.613 cv
360.055 561.609 360.152 561.605 360.273 561.602 cv
360.387 561.605 360.48 561.609 360.555 561.613 cv
360.629 561.625 360.688 561.641 360.73 561.66 cv
360.77 561.687 360.797 561.711 360.82 561.738 cv
360.836 561.77 360.848 561.805 360.848 561.844 cv
360.848 562.867 li
361.039 562.59 361.219 562.359 361.391 562.18 cv
361.559 562.004 361.719 561.863 361.871 561.762 cv
362.02 561.66 362.168 561.59 362.32 561.551 cv
362.465 561.512 362.617 561.492 362.77 561.492 cv
362.836 561.492 362.91 561.496 363 561.504 cv
363.082 561.512 363.172 561.527 363.27 561.547 cv
363.359 561.57 363.445 561.594 363.523 561.617 cv
363.598 561.645 363.652 561.672 363.684 561.695 cv
363.715 561.727 363.734 561.75 363.746 561.77 cv
363.754 561.797 363.762 561.828 363.773 561.859 cv
363.777 561.898 363.785 561.949 363.789 562.02 cv
363.789 562.09 363.789 562.187 363.793 562.305 cv
cp
f
375.52 565.277 mo
375.516 565.852 375.441 566.379 375.293 566.859 cv
375.141 567.34 374.914 567.754 374.617 568.102 cv
374.316 568.453 373.941 568.727 373.492 568.918 cv
373.043 569.113 372.523 569.207 371.93 569.211 cv
371.352 569.207 370.848 569.125 370.418 568.953 cv
369.988 568.785 369.629 568.535 369.344 568.203 cv
369.059 567.879 368.848 567.48 368.707 567.012 cv
368.566 566.543 368.496 566.012 368.496 565.418 cv
368.496 564.848 368.57 564.324 368.719 563.84 cv
368.867 563.363 369.09 562.945 369.387 562.594 cv
369.684 562.246 370.055 561.977 370.508 561.781 cv
370.953 561.59 371.477 561.492 372.078 561.492 cv
372.652 561.492 373.156 561.578 373.586 561.75 cv
374.012 561.922 374.371 562.172 374.66 562.5 cv
374.945 562.828 375.16 563.227 375.305 563.695 cv
375.445 564.164 375.516 564.691 375.52 565.277 cv
cp
374.184 565.363 mo
374.18 564.988 374.145 564.629 374.078 564.285 cv
374.004 563.949 373.887 563.652 373.727 563.398 cv
373.563 563.145 373.344 562.941 373.066 562.793 cv
372.785 562.645 372.438 562.57 372.027 562.57 cv
371.641 562.57 371.313 562.641 371.039 562.773 cv
370.762 562.914 370.531 563.105 370.355 563.348 cv
370.176 563.598 370.043 563.887 369.957 564.223 cv
369.867 564.562 369.824 564.934 369.828 565.332 cv
369.824 565.719 369.859 566.082 369.934 566.418 cv
370.004 566.762 370.125 567.055 370.289 567.305 cv
370.453 567.555 370.676 567.754 370.957 567.902 cv
371.234 568.051 371.578 568.125 371.996 568.125 cv
372.371 568.125 372.699 568.059 372.98 567.922 cv
373.254 567.789 373.484 567.602 373.664 567.355 cv
373.844 567.113 373.973 566.82 374.059 566.48 cv
374.137 566.145 374.18 565.773 374.184 565.363 cv
cp
f
381.262 558.957 mo
381.258 559.059 381.254 559.137 381.246 559.195 cv
381.234 559.258 381.223 559.309 381.211 559.34 cv
381.195 559.379 381.176 559.402 381.16 559.41 cv
381.137 559.426 381.113 559.43 381.082 559.43 cv
381.043 559.43 380.996 559.418 380.945 559.395 cv
380.887 559.371 380.82 559.348 380.746 559.32 cv
380.664 559.293 380.57 559.266 380.469 559.242 cv
380.359 559.219 380.238 559.207 380.098 559.207 cv
379.902 559.207 379.738 559.238 379.605 559.301 cv
379.469 559.363 379.359 559.461 379.277 559.59 cv
379.191 559.727 379.129 559.898 379.098 560.105 cv
379.059 560.32 379.043 560.578 379.043 560.875 cv
379.043 561.641 li
380.613 561.641 li
380.652 561.645 380.688 561.652 380.719 561.668 cv
380.746 561.687 380.77 561.719 380.797 561.762 cv
380.816 561.809 380.836 561.867 380.852 561.93 cv
380.863 562 380.871 562.082 380.871 562.18 cv
380.871 562.371 380.848 562.508 380.801 562.586 cv
380.754 562.672 380.691 562.711 380.613 562.711 cv
379.043 562.711 li
379.043 568.867 li
379.043 568.914 379.031 568.949 379.012 568.973 cv
378.988 569.004 378.953 569.027 378.906 569.047 cv
378.855 569.066 378.789 569.078 378.707 569.094 cv
378.621 569.102 378.516 569.109 378.395 569.109 cv
378.266 569.109 378.164 569.102 378.082 569.094 cv
378 569.078 377.934 569.066 377.887 569.047 cv
377.836 569.027 377.801 569.004 377.781 568.973 cv
377.758 568.949 377.746 568.914 377.75 568.867 cv
377.75 562.711 li
376.758 562.711 li
376.672 562.711 376.609 562.672 376.57 562.586 cv
376.527 562.508 376.504 562.371 376.508 562.18 cv
376.504 562.082 376.512 562 376.523 561.93 cv
376.531 561.867 376.547 561.809 376.57 561.762 cv
376.59 561.719 376.613 561.687 376.648 561.668 cv
376.676 561.652 376.715 561.645 376.758 561.641 cv
377.75 561.641 li
377.75 560.914 li
377.746 560.426 377.793 560.008 377.887 559.656 cv
377.977 559.309 378.113 559.02 378.301 558.793 cv
378.484 558.57 378.723 558.406 379.008 558.297 cv
379.289 558.195 379.621 558.141 380.012 558.137 cv
380.191 558.141 380.371 558.156 380.543 558.187 cv
380.715 558.223 380.848 558.262 380.941 558.297 cv
381.035 558.34 381.098 558.375 381.129 558.402 cv
381.16 558.437 381.184 558.477 381.207 558.523 cv
381.223 558.574 381.238 558.633 381.25 558.703 cv
381.254 558.773 381.258 558.859 381.262 558.957 cv
cp
f
391.473 566.23 mo
391.469 566.707 391.383 567.129 391.211 567.496 cv
391.035 567.867 390.793 568.18 390.484 568.434 cv
390.176 568.695 389.813 568.887 389.395 569.016 cv
388.973 569.145 388.52 569.207 388.039 569.211 cv
387.699 569.207 387.387 569.18 387.098 569.125 cv
386.809 569.066 386.551 569 386.324 568.914 cv
386.098 568.836 385.906 568.75 385.758 568.656 cv
385.602 568.57 385.496 568.492 385.438 568.43 cv
385.375 568.367 385.332 568.289 385.305 568.191 cv
385.273 568.098 385.258 567.969 385.262 567.805 cv
385.258 567.691 385.262 567.598 385.277 567.52 cv
385.285 567.449 385.301 567.387 385.324 567.336 cv
385.34 567.293 385.367 567.262 385.402 567.238 cv
385.43 567.223 385.465 567.211 385.512 567.211 cv
385.582 567.211 385.688 567.258 385.82 567.344 cv
385.953 567.437 386.121 567.531 386.332 567.633 cv
386.535 567.738 386.785 567.836 387.082 567.926 cv
387.371 568.02 387.711 568.066 388.102 568.062 cv
388.391 568.066 388.66 568.027 388.902 567.945 cv
389.145 567.871 389.352 567.762 389.527 567.613 cv
389.699 567.473 389.832 567.297 389.93 567.09 cv
390.02 566.883 390.066 566.645 390.07 566.379 cv
390.066 566.094 390.004 565.852 389.875 565.645 cv
389.742 565.445 389.57 565.266 389.359 565.109 cv
389.145 564.957 388.898 564.816 388.629 564.687 cv
388.352 564.562 388.074 564.434 387.789 564.297 cv
387.5 564.168 387.219 564.02 386.953 563.855 cv
386.68 563.695 386.441 563.508 386.23 563.289 cv
386.016 563.074 385.84 562.816 385.711 562.52 cv
385.574 562.227 385.508 561.875 385.512 561.461 cv
385.508 561.043 385.586 560.664 385.742 560.332 cv
385.895 560.004 386.105 559.73 386.379 559.504 cv
386.648 559.285 386.977 559.113 387.355 558.992 cv
387.73 558.879 388.137 558.82 388.578 558.816 cv
388.801 558.82 389.027 558.84 389.254 558.875 cv
389.48 558.918 389.691 558.969 389.895 559.031 cv
390.09 559.098 390.27 559.172 390.426 559.25 cv
390.582 559.332 390.684 559.395 390.734 559.441 cv
390.781 559.492 390.813 559.531 390.832 559.559 cv
390.844 559.59 390.859 559.629 390.871 559.668 cv
390.879 559.715 390.887 559.766 390.895 559.828 cv
390.898 559.891 390.898 559.973 390.902 560.07 cv
390.898 560.168 390.895 560.25 390.891 560.32 cv
390.879 560.395 390.867 560.457 390.855 560.504 cv
390.836 560.555 390.816 560.59 390.789 560.613 cv
390.758 560.637 390.723 560.648 390.691 560.648 cv
390.629 560.648 390.539 560.613 390.422 560.539 cv
390.297 560.469 390.148 560.387 389.977 560.293 cv
389.797 560.203 389.59 560.121 389.348 560.043 cv
389.105 559.973 388.832 559.934 388.531 559.93 cv
388.246 559.934 388 559.973 387.797 560.043 cv
387.586 560.121 387.414 560.219 387.281 560.344 cv
387.141 560.469 387.039 560.617 386.977 560.789 cv
386.906 560.961 386.875 561.145 386.875 561.336 cv
386.875 561.621 386.938 561.863 387.07 562.062 cv
387.195 562.27 387.371 562.449 387.59 562.602 cv
387.805 562.762 388.051 562.906 388.328 563.031 cv
388.602 563.164 388.883 563.293 389.172 563.422 cv
389.457 563.559 389.738 563.703 390.016 563.859 cv
390.289 564.02 390.531 564.207 390.75 564.422 cv
390.961 564.641 391.137 564.898 391.273 565.187 cv
391.402 565.484 391.469 565.832 391.473 566.23 cv
cp
f
399.254 568.867 mo
399.25 568.914 399.242 568.949 399.227 568.973 cv
399.207 569.004 399.172 569.027 399.129 569.047 cv
399.078 569.066 399.02 569.078 398.945 569.094 cv
398.867 569.102 398.773 569.109 398.668 569.109 cv
398.547 569.109 398.449 569.102 398.375 569.094 cv
398.297 569.078 398.238 569.066 398.195 569.047 cv
398.148 569.027 398.117 569.004 398.105 568.973 cv
398.086 568.949 398.078 568.914 398.082 568.867 cv
398.082 567.937 li
397.68 568.383 397.285 568.707 396.898 568.906 cv
396.504 569.109 396.109 569.207 395.711 569.211 cv
395.242 569.207 394.848 569.133 394.527 568.977 cv
394.207 568.824 393.945 568.613 393.75 568.34 cv
393.551 568.074 393.41 567.762 393.328 567.406 cv
393.238 567.051 393.195 566.617 393.199 566.105 cv
393.199 561.844 li
393.195 561.805 393.207 561.77 393.227 561.738 cv
393.242 561.711 393.277 561.687 393.332 561.66 cv
393.383 561.641 393.449 561.625 393.535 561.613 cv
393.617 561.609 393.723 561.605 393.848 561.602 cv
393.969 561.605 394.07 561.609 394.156 561.613 cv
394.238 561.625 394.305 561.641 394.355 561.66 cv
394.402 561.687 394.438 561.711 394.461 561.738 cv
394.48 561.77 394.492 561.805 394.492 561.844 cv
394.492 565.934 li
394.492 566.348 394.52 566.68 394.582 566.922 cv
394.637 567.172 394.73 567.379 394.855 567.551 cv
394.977 567.727 395.129 567.863 395.32 567.957 cv
395.504 568.055 395.723 568.102 395.977 568.102 cv
396.297 568.102 396.621 567.988 396.941 567.758 cv
397.262 567.531 397.598 567.195 397.957 566.754 cv
397.957 561.844 li
397.953 561.805 397.965 561.77 397.984 561.738 cv
398 561.711 398.035 561.687 398.09 561.66 cv
398.141 561.641 398.207 561.625 398.289 561.613 cv
398.367 561.609 398.473 561.605 398.605 561.602 cv
398.73 561.605 398.832 561.609 398.918 561.613 cv
398.996 561.625 399.063 561.641 399.113 561.66 cv
399.156 561.687 399.191 561.711 399.219 561.738 cv
399.238 561.77 399.25 561.805 399.254 561.844 cv
cp
f
408.09 565.262 mo
408.086 565.875 408.02 566.422 407.891 566.906 cv
407.754 567.391 407.559 567.805 407.305 568.148 cv
407.043 568.492 406.727 568.758 406.355 568.937 cv
405.98 569.121 405.551 569.207 405.07 569.211 cv
404.844 569.207 404.637 569.187 404.449 569.145 cv
404.254 569.098 404.07 569.027 403.891 568.93 cv
403.707 568.832 403.523 568.707 403.344 568.555 cv
403.16 568.406 402.969 568.223 402.766 568.008 cv
402.766 568.867 li
402.766 568.914 402.754 568.949 402.734 568.977 cv
402.711 569.012 402.676 569.035 402.633 569.051 cv
402.582 569.066 402.523 569.078 402.457 569.094 cv
402.387 569.102 402.301 569.109 402.191 569.109 cv
402.086 569.109 401.996 569.102 401.926 569.094 cv
401.852 569.078 401.793 569.066 401.746 569.051 cv
401.699 569.035 401.668 569.012 401.652 568.977 cv
401.637 568.949 401.629 568.914 401.629 568.867 cv
401.629 558.441 li
401.629 558.402 401.637 558.367 401.656 558.332 cv
401.672 558.305 401.707 558.277 401.758 558.254 cv
401.805 558.234 401.871 558.219 401.957 558.207 cv
402.039 558.199 402.141 558.195 402.27 558.191 cv
402.395 558.195 402.5 558.199 402.586 558.207 cv
402.664 558.219 402.73 558.234 402.781 558.254 cv
402.824 558.277 402.859 558.305 402.883 558.332 cv
402.902 558.367 402.91 558.402 402.914 558.441 cv
402.914 562.648 li
403.117 562.437 403.32 562.258 403.52 562.109 cv
403.711 561.965 403.902 561.848 404.094 561.754 cv
404.277 561.668 404.465 561.602 404.656 561.555 cv
404.84 561.516 405.039 561.492 405.25 561.492 cv
405.758 561.492 406.191 561.594 406.555 561.797 cv
406.914 562 407.207 562.273 407.438 562.613 cv
407.66 562.957 407.828 563.355 407.934 563.812 cv
408.035 564.27 408.086 564.754 408.09 565.262 cv
cp
406.754 565.41 mo
406.75 565.055 406.723 564.703 406.672 564.363 cv
406.613 564.027 406.52 563.73 406.387 563.469 cv
406.25 563.211 406.066 563 405.844 562.84 cv
405.617 562.684 405.34 562.605 405.004 562.602 cv
404.836 562.605 404.668 562.629 404.508 562.672 cv
404.344 562.723 404.18 562.801 404.012 562.906 cv
403.844 563.02 403.672 563.16 403.492 563.328 cv
403.313 563.5 403.117 563.715 402.914 563.973 cv
402.914 566.777 li
403.266 567.207 403.605 567.535 403.934 567.762 cv
404.254 567.988 404.594 568.102 404.949 568.102 cv
405.273 568.102 405.551 568.023 405.781 567.867 cv
406.012 567.711 406.199 567.508 406.344 567.25 cv
406.484 566.996 406.59 566.707 406.656 566.383 cv
406.719 566.066 406.75 565.742 406.754 565.41 cv
cp
f
413.215 565.121 mo
413.211 565.328 413.188 565.469 413.145 565.543 cv
413.094 565.625 413.027 565.664 412.941 565.66 cv
409.68 565.66 li
409.586 565.664 409.516 565.625 409.469 565.539 cv
409.422 565.461 409.398 565.32 409.398 565.121 cv
409.398 564.926 409.422 564.789 409.469 564.707 cv
409.516 564.633 409.586 564.594 409.68 564.59 cv
412.941 564.59 li
412.98 564.594 413.02 564.602 413.055 564.613 cv
413.086 564.633 413.113 564.66 413.141 564.703 cv
413.16 564.75 413.18 564.809 413.195 564.871 cv
413.207 564.941 413.211 565.023 413.215 565.121 cv
cp
f
416.465 568.859 mo
416.465 568.902 416.453 568.937 416.434 568.969 cv
416.41 569 416.375 569.027 416.324 569.043 cv
416.27 569.062 416.199 569.074 416.117 569.09 cv
416.027 569.102 415.918 569.109 415.793 569.109 cv
415.668 569.109 415.563 569.102 415.477 569.09 cv
415.383 569.074 415.313 569.062 415.266 569.043 cv
415.211 569.027 415.176 569 415.156 568.969 cv
415.133 568.937 415.121 568.902 415.125 568.859 cv
415.125 559.168 li
415.121 559.129 415.133 559.094 415.16 559.059 cv
415.18 559.031 415.219 559.004 415.277 558.984 cv
415.328 558.969 415.398 558.953 415.488 558.937 cv
415.57 558.926 415.672 558.922 415.793 558.918 cv
415.918 558.922 416.027 558.926 416.117 558.937 cv
416.199 558.953 416.27 558.969 416.324 558.984 cv
416.375 559.004 416.41 559.031 416.434 559.059 cv
416.453 559.094 416.465 559.129 416.465 559.168 cv
cp
f
429.453 568.867 mo
429.453 568.914 429.441 568.949 429.422 568.973 cv
429.398 569.004 429.363 569.027 429.32 569.047 cv
429.27 569.066 429.207 569.078 429.125 569.094 cv
429.039 569.102 428.934 569.109 428.813 569.109 cv
428.68 569.109 428.574 569.102 428.492 569.094 cv
428.406 569.078 428.34 569.066 428.293 569.047 cv
428.242 569.027 428.207 569.004 428.188 568.973 cv
428.164 568.949 428.152 568.914 428.156 568.867 cv
428.156 564.598 li
428.152 564.301 428.125 564.031 428.078 563.785 cv
428.023 563.543 427.941 563.332 427.828 563.156 cv
427.711 562.98 427.566 562.848 427.391 562.75 cv
427.215 562.66 427.008 562.613 426.77 562.609 cv
426.473 562.613 426.172 562.727 425.875 562.953 cv
425.57 563.184 425.242 563.52 424.887 563.957 cv
424.887 568.867 li
424.883 568.914 424.871 568.949 424.855 568.973 cv
424.832 569.004 424.797 569.027 424.75 569.047 cv
424.695 569.066 424.629 569.078 424.551 569.094 cv
424.465 569.102 424.363 569.109 424.238 569.109 cv
424.117 569.109 424.012 569.102 423.93 569.094 cv
423.84 569.078 423.773 569.066 423.727 569.047 cv
423.676 569.027 423.645 569.004 423.629 568.973 cv
423.609 568.949 423.598 568.914 423.602 568.867 cv
423.602 564.598 li
423.598 564.301 423.57 564.031 423.516 563.785 cv
423.457 563.543 423.371 563.332 423.258 563.156 cv
423.141 562.98 422.996 562.848 422.824 562.75 cv
422.648 562.66 422.441 562.613 422.203 562.609 cv
421.902 562.613 421.602 562.727 421.305 562.953 cv
421 563.184 420.672 563.52 420.32 563.957 cv
420.32 568.867 li
420.316 568.914 420.309 568.949 420.289 568.973 cv
420.266 569.004 420.23 569.027 420.188 569.047 cv
420.137 569.066 420.07 569.078 419.992 569.094 cv
419.906 569.102 419.801 569.109 419.676 569.109 cv
419.547 569.109 419.445 569.102 419.363 569.094 cv
419.277 569.078 419.211 569.066 419.164 569.047 cv
419.113 569.027 419.078 569.004 419.063 568.973 cv
419.043 568.949 419.035 568.914 419.035 568.867 cv
419.035 561.844 li
419.035 561.805 419.043 561.77 419.059 561.738 cv
419.074 561.711 419.105 561.687 419.152 561.66 cv
419.199 561.641 419.258 561.625 419.332 561.613 cv
419.402 561.609 419.5 561.605 419.621 561.602 cv
419.734 561.605 419.828 561.609 419.902 561.613 cv
419.977 561.625 420.035 561.641 420.078 561.66 cv
420.117 561.687 420.145 561.711 420.168 561.738 cv
420.184 561.77 420.195 561.805 420.195 561.844 cv
420.195 562.773 li
420.59 562.336 420.973 562.012 421.348 561.801 cv
421.719 561.598 422.094 561.492 422.477 561.492 cv
422.766 561.492 423.027 561.527 423.262 561.594 cv
423.488 561.664 423.691 561.758 423.871 561.879 cv
424.043 562.004 424.195 562.152 424.324 562.316 cv
424.445 562.488 424.551 562.676 424.637 562.883 cv
424.871 562.629 425.094 562.414 425.305 562.234 cv
425.516 562.062 425.719 561.918 425.914 561.805 cv
426.109 561.699 426.297 561.621 426.484 561.566 cv
426.664 561.52 426.852 561.492 427.043 561.492 cv
427.492 561.492 427.871 561.574 428.18 561.73 cv
428.484 561.895 428.734 562.105 428.926 562.367 cv
429.113 562.637 429.246 562.949 429.332 563.301 cv
429.41 563.66 429.453 564.035 429.453 564.426 cv
cp
f
437.047 568.875 mo
437.043 568.937 437.023 568.984 436.984 569.016 cv
436.941 569.047 436.883 569.07 436.813 569.086 cv
436.738 569.102 436.633 569.109 436.492 569.109 cv
436.359 569.109 436.25 569.102 436.172 569.086 cv
436.086 569.07 436.027 569.047 435.996 569.016 cv
435.957 568.984 435.941 568.937 435.941 568.875 cv
435.941 568.172 li
435.633 568.5 435.289 568.758 434.914 568.937 cv
434.535 569.121 434.137 569.207 433.715 569.211 cv
433.344 569.207 433.008 569.16 432.711 569.066 cv
432.41 568.969 432.156 568.832 431.949 568.648 cv
431.734 568.469 431.57 568.246 431.457 567.977 cv
431.336 567.715 431.277 567.414 431.281 567.074 cv
431.277 566.684 431.359 566.34 431.523 566.043 cv
431.684 565.754 431.914 565.512 432.215 565.316 cv
432.516 565.129 432.883 564.984 433.324 564.883 cv
433.758 564.789 434.25 564.738 434.801 564.738 cv
435.77 564.738 li
435.77 564.191 li
435.766 563.926 435.738 563.687 435.684 563.477 cv
435.625 563.273 435.531 563.098 435.406 562.957 cv
435.277 562.82 435.113 562.719 434.91 562.645 cv
434.707 562.578 434.457 562.543 434.16 562.539 cv
433.84 562.543 433.555 562.578 433.305 562.652 cv
433.051 562.73 432.828 562.816 432.641 562.902 cv
432.449 562.996 432.293 563.078 432.168 563.152 cv
432.039 563.227 431.941 563.262 431.883 563.262 cv
431.836 563.262 431.801 563.254 431.773 563.234 cv
431.738 563.215 431.711 563.184 431.691 563.141 cv
431.664 563.102 431.648 563.047 431.641 562.98 cv
431.629 562.918 431.621 562.848 431.625 562.766 cv
431.621 562.637 431.633 562.535 431.652 562.457 cv
431.668 562.387 431.711 562.312 431.785 562.242 cv
431.852 562.176 431.973 562.098 432.148 562.004 cv
432.316 561.914 432.512 561.832 432.738 561.754 cv
432.957 561.684 433.203 561.621 433.473 561.566 cv
433.734 561.52 434.004 561.492 434.277 561.492 cv
434.781 561.492 435.211 561.551 435.566 561.664 cv
435.918 561.781 436.203 561.949 436.422 562.168 cv
436.641 562.391 436.797 562.664 436.898 562.992 cv
436.992 563.32 437.043 563.703 437.047 564.137 cv
cp
435.77 565.668 mo
434.668 565.668 li
434.313 565.672 434.004 565.699 433.746 565.758 cv
433.48 565.82 433.266 565.91 433.098 566.023 cv
432.922 566.145 432.797 566.285 432.719 566.445 cv
432.637 566.613 432.594 566.801 432.598 567.012 cv
432.594 567.375 432.711 567.664 432.945 567.879 cv
433.176 568.098 433.5 568.207 433.918 568.203 cv
434.254 568.207 434.566 568.121 434.859 567.945 cv
435.145 567.777 435.449 567.516 435.77 567.156 cv
cp
f
445.281 562.164 mo
445.277 562.352 445.254 562.48 445.207 562.559 cv
445.156 562.641 445.094 562.684 445.016 562.68 cv
444.012 562.68 li
444.188 562.871 444.313 563.078 444.391 563.301 cv
444.461 563.527 444.5 563.762 444.5 564.004 cv
444.5 564.414 444.434 564.773 444.305 565.082 cv
444.172 565.398 443.984 565.66 443.746 565.875 cv
443.504 566.094 443.219 566.262 442.887 566.371 cv
442.551 566.488 442.18 566.543 441.777 566.543 cv
441.488 566.543 441.219 566.508 440.961 566.43 cv
440.703 566.359 440.504 566.262 440.363 566.145 cv
440.27 566.238 440.191 566.348 440.133 566.465 cv
440.074 566.59 440.047 566.727 440.047 566.879 cv
440.047 567.062 440.129 567.211 440.297 567.328 cv
440.465 567.449 440.691 567.516 440.973 567.523 cv
442.809 567.602 li
443.152 567.617 443.473 567.664 443.766 567.746 cv
444.055 567.836 444.309 567.957 444.523 568.113 cv
444.734 568.273 444.898 568.469 445.023 568.699 cv
445.141 568.934 445.203 569.203 445.203 569.508 cv
445.203 569.828 445.133 570.133 445 570.43 cv
444.859 570.719 444.652 570.977 444.379 571.195 cv
444.098 571.414 443.746 571.586 443.316 571.719 cv
442.883 571.844 442.371 571.91 441.785 571.91 cv
441.215 571.91 440.73 571.859 440.336 571.766 cv
439.938 571.664 439.613 571.535 439.359 571.371 cv
439.102 571.203 438.918 571.004 438.805 570.773 cv
438.688 570.543 438.629 570.293 438.633 570.023 cv
438.629 569.852 438.648 569.684 438.695 569.523 cv
438.734 569.359 438.801 569.207 438.887 569.062 cv
438.973 568.918 439.078 568.781 439.207 568.645 cv
439.332 568.516 439.48 568.383 439.648 568.25 cv
439.391 568.121 439.199 567.957 439.082 567.758 cv
438.957 567.562 438.898 567.348 438.898 567.117 cv
438.898 566.805 438.961 566.523 439.094 566.27 cv
439.219 566.023 439.383 565.801 439.578 565.598 cv
439.414 565.41 439.285 565.191 439.195 564.945 cv
439.098 564.707 439.051 564.414 439.055 564.066 cv
439.051 563.668 439.117 563.309 439.258 562.992 cv
439.391 562.676 439.578 562.41 439.816 562.187 cv
440.055 561.973 440.344 561.805 440.68 561.684 cv
441.016 561.57 441.379 561.512 441.777 561.508 cv
441.988 561.512 442.188 561.523 442.375 561.543 cv
442.555 561.57 442.73 561.602 442.895 561.641 cv
445.016 561.641 li
445.102 561.645 445.168 561.687 445.215 561.77 cv
445.258 561.859 445.277 561.992 445.281 562.164 cv
cp
443.27 564.012 mo
443.27 563.535 443.137 563.164 442.875 562.895 cv
442.609 562.629 442.234 562.496 441.754 562.492 cv
441.5 562.496 441.285 562.535 441.102 562.617 cv
440.914 562.703 440.758 562.82 440.641 562.961 cv
440.516 563.109 440.426 563.277 440.367 563.465 cv
440.305 563.656 440.273 563.852 440.277 564.059 cv
440.273 564.523 440.406 564.891 440.672 565.152 cv
440.934 565.422 441.301 565.555 441.777 565.551 cv
442.027 565.555 442.25 565.512 442.441 565.43 cv
442.625 565.352 442.781 565.242 442.906 565.094 cv
443.027 564.953 443.117 564.785 443.18 564.598 cv
443.238 564.41 443.27 564.215 443.27 564.012 cv
cp
443.918 569.578 mo
443.914 569.273 443.789 569.043 443.547 568.879 cv
443.297 568.719 442.965 568.629 442.543 568.617 cv
440.723 568.555 li
440.551 568.687 440.414 568.812 440.313 568.926 cv
440.203 569.043 440.121 569.152 440.063 569.262 cv
439.996 569.367 439.953 569.473 439.934 569.578 cv
439.906 569.68 439.895 569.785 439.898 569.898 cv
439.895 570.234 440.066 570.492 440.41 570.668 cv
440.754 570.84 441.23 570.926 441.848 570.93 cv
442.234 570.926 442.563 570.887 442.828 570.816 cv
443.09 570.738 443.301 570.641 443.465 570.516 cv
443.621 570.391 443.738 570.246 443.813 570.086 cv
443.879 569.922 443.914 569.754 443.918 569.578 cv
cp
f
452.871 565.051 mo
452.867 565.258 452.816 565.402 452.719 565.484 cv
452.613 565.574 452.496 565.617 452.371 565.613 cv
447.742 565.613 li
447.738 566.008 447.777 566.359 447.859 566.668 cv
447.938 566.98 448.07 567.246 448.254 567.469 cv
448.434 567.695 448.672 567.867 448.965 567.984 cv
449.258 568.105 449.617 568.168 450.043 568.164 cv
450.375 568.168 450.672 568.141 450.934 568.082 cv
451.195 568.031 451.422 567.969 451.613 567.898 cv
451.805 567.832 451.961 567.77 452.086 567.715 cv
452.207 567.66 452.301 567.633 452.363 567.633 cv
452.398 567.633 452.43 567.645 452.461 567.66 cv
452.488 567.684 452.512 567.711 452.527 567.742 cv
452.543 567.781 452.555 567.832 452.563 567.895 cv
452.57 567.965 452.574 568.043 452.574 568.133 cv
452.574 568.203 452.57 568.262 452.566 568.309 cv
452.559 568.359 452.551 568.402 452.547 568.441 cv
452.535 568.48 452.523 568.516 452.508 568.547 cv
452.488 568.578 452.465 568.609 452.438 568.637 cv
452.406 568.668 452.32 568.715 452.184 568.777 cv
452.039 568.844 451.859 568.906 451.637 568.969 cv
451.414 569.031 451.156 569.086 450.863 569.137 cv
450.566 569.184 450.25 569.207 449.922 569.211 cv
449.34 569.207 448.836 569.129 448.402 568.969 cv
447.965 568.809 447.598 568.57 447.305 568.25 cv
447.008 567.934 446.785 567.535 446.637 567.059 cv
446.484 566.582 446.41 566.027 446.41 565.387 cv
446.41 564.785 446.488 564.242 446.645 563.762 cv
446.801 563.281 447.023 562.871 447.316 562.535 cv
447.609 562.199 447.965 561.941 448.383 561.762 cv
448.797 561.582 449.262 561.492 449.781 561.492 cv
450.328 561.492 450.797 561.582 451.188 561.758 cv
451.57 561.937 451.891 562.176 452.145 562.473 cv
452.391 562.773 452.574 563.125 452.695 563.527 cv
452.809 563.93 452.867 564.359 452.871 564.816 cv
cp
451.574 564.668 mo
451.586 563.992 451.438 563.465 451.121 563.078 cv
450.805 562.695 450.336 562.5 449.715 562.5 cv
449.395 562.5 449.113 562.562 448.871 562.68 cv
448.629 562.805 448.426 562.961 448.27 563.156 cv
448.105 563.352 447.98 563.582 447.891 563.844 cv
447.801 564.109 447.75 564.383 447.742 564.668 cv
cp
f
459.25 566.957 mo
459.246 567.316 459.18 567.633 459.051 567.914 cv
458.914 568.195 458.727 568.434 458.484 568.625 cv
458.238 568.82 457.945 568.965 457.609 569.062 cv
457.27 569.16 456.898 569.207 456.492 569.211 cv
456.242 569.207 456.004 569.187 455.777 569.152 cv
455.551 569.109 455.348 569.062 455.172 569.004 cv
454.988 568.945 454.836 568.883 454.715 568.816 cv
454.586 568.754 454.496 568.695 454.441 568.641 cv
454.383 568.59 454.34 568.52 454.316 568.422 cv
454.289 568.332 454.277 568.203 454.277 568.039 cv
454.277 567.941 454.281 567.859 454.293 567.789 cv
454.301 567.727 454.313 567.672 454.332 567.625 cv
454.344 567.586 454.367 567.555 454.398 567.535 cv
454.426 567.52 454.457 567.512 454.496 567.508 cv
454.551 567.512 454.637 567.547 454.75 567.613 cv
454.859 567.687 454.996 567.762 455.164 567.844 cv
455.324 567.93 455.52 568.008 455.742 568.074 cv
455.965 568.148 456.223 568.184 456.516 568.18 cv
456.734 568.184 456.93 568.16 457.109 568.109 cv
457.281 568.066 457.438 567.996 457.57 567.902 cv
457.699 567.812 457.797 567.699 457.871 567.555 cv
457.938 567.418 457.973 567.25 457.977 567.059 cv
457.973 566.863 457.922 566.699 457.824 566.559 cv
457.719 566.426 457.586 566.305 457.422 566.199 cv
457.254 566.098 457.066 566.004 456.859 565.922 cv
456.648 565.844 456.434 565.762 456.215 565.668 cv
455.992 565.582 455.777 565.48 455.566 565.367 cv
455.355 565.258 455.168 565.121 455.004 564.957 cv
454.836 564.797 454.699 564.605 454.602 564.379 cv
454.496 564.16 454.445 563.891 454.449 563.574 cv
454.445 563.305 454.5 563.043 454.609 562.785 cv
454.715 562.535 454.875 562.312 455.09 562.121 cv
455.301 561.934 455.566 561.781 455.887 561.664 cv
456.203 561.551 456.578 561.492 457.008 561.492 cv
457.195 561.492 457.383 561.508 457.57 561.539 cv
457.758 561.57 457.926 561.609 458.078 561.656 cv
458.227 561.703 458.355 561.754 458.465 561.809 cv
458.57 561.863 458.652 561.914 458.707 561.953 cv
458.762 562 458.797 562.035 458.816 562.062 cv
458.832 562.098 458.844 562.133 458.855 562.168 cv
458.859 562.211 458.867 562.258 458.879 562.312 cv
458.883 562.371 458.887 562.441 458.891 562.523 cv
458.887 562.613 458.883 562.691 458.879 562.754 cv
458.867 562.82 458.855 562.875 458.84 562.914 cv
458.82 562.961 458.797 562.988 458.773 563.004 cv
458.742 563.023 458.715 563.035 458.688 563.031 cv
458.637 563.035 458.57 563.004 458.484 562.945 cv
458.395 562.891 458.277 562.832 458.141 562.762 cv
457.996 562.699 457.832 562.637 457.645 562.578 cv
457.453 562.523 457.234 562.496 456.992 562.492 cv
456.77 562.496 456.578 562.52 456.414 562.566 cv
456.246 562.617 456.109 562.687 456.004 562.777 cv
455.895 562.871 455.813 562.98 455.762 563.102 cv
455.703 563.227 455.676 563.359 455.68 563.504 cv
455.676 563.711 455.73 563.883 455.836 564.016 cv
455.938 564.156 456.07 564.277 456.242 564.379 cv
456.406 564.488 456.598 564.582 456.813 564.66 cv
457.023 564.746 457.242 564.832 457.465 564.918 cv
457.684 565.012 457.902 565.109 458.121 565.215 cv
458.336 565.328 458.527 565.461 458.695 565.613 cv
458.859 565.773 458.992 565.961 459.098 566.176 cv
459.195 566.398 459.246 566.66 459.25 566.957 cv
cp
f
263.754 19.238 mo
263.75 19.391 263.746 19.516 263.734 19.613 cv
263.719 19.719 263.699 19.801 263.676 19.859 cv
263.652 19.926 263.621 19.973 263.582 19.996 cv
263.543 20.027 263.5 20.039 263.453 20.039 cv
258.387 20.039 li
258.211 20.039 258.066 19.988 257.953 19.887 cv
257.832 19.785 257.773 19.621 257.777 19.391 cv
257.777 10.602 li
257.773 10.375 257.832 10.211 257.953 10.105 cv
258.066 10.008 258.211 9.95697 258.387 9.953 cv
263.422 9.953 li
263.465 9.95697 263.508 9.96899 263.547 9.992 cv
263.582 10.02 263.613 10.066 263.641 10.129 cv
263.664 10.199 263.68 10.281 263.695 10.379 cv
263.703 10.484 263.711 10.613 263.715 10.766 cv
263.711 10.914 263.703 11.039 263.695 11.137 cv
263.68 11.242 263.664 11.324 263.641 11.383 cv
263.613 11.445 263.582 11.488 263.547 11.516 cv
263.508 11.547 263.465 11.562 263.422 11.559 cv
259.82 11.559 li
259.82 14.023 li
262.867 14.023 li
262.914 14.027 262.957 14.043 262.996 14.066 cv
263.035 14.098 263.066 14.141 263.094 14.199 cv
263.117 14.262 263.137 14.344 263.152 14.441 cv
263.164 14.543 263.172 14.664 263.172 14.809 cv
263.172 14.961 263.164 15.086 263.152 15.184 cv
263.137 15.285 263.117 15.363 263.094 15.422 cv
263.066 15.484 263.035 15.527 262.996 15.551 cv
262.957 15.578 262.914 15.594 262.867 15.59 cv
259.82 15.59 li
259.82 18.434 li
263.453 18.434 li
263.5 18.434 263.543 18.449 263.582 18.477 cv
263.621 18.508 263.652 18.555 263.676 18.613 cv
263.699 18.68 263.719 18.762 263.734 18.859 cv
263.746 18.965 263.75 19.09 263.754 19.238 cv
cp
f
272.09 19.773 mo
272.086 19.828 272.07 19.871 272.043 19.91 cv
272.008 19.949 271.957 19.984 271.887 20.008 cv
271.813 20.035 271.711 20.051 271.586 20.066 cv
271.457 20.078 271.301 20.086 271.117 20.086 cv
270.922 20.086 270.762 20.078 270.637 20.066 cv
270.508 20.051 270.406 20.035 270.336 20.008 cv
270.258 19.984 270.207 19.949 270.18 19.91 cv
270.145 19.871 270.129 19.828 270.133 19.773 cv
270.133 15.809 li
270.129 15.473 270.105 15.207 270.059 15.012 cv
270.008 14.82 269.934 14.656 269.844 14.52 cv
269.75 14.383 269.633 14.277 269.484 14.199 cv
269.336 14.125 269.16 14.086 268.965 14.086 cv
268.711 14.086 268.461 14.18 268.207 14.359 cv
267.953 14.543 267.688 14.805 267.414 15.152 cv
267.414 19.773 li
267.41 19.828 267.395 19.871 267.367 19.91 cv
267.332 19.949 267.277 19.984 267.207 20.008 cv
267.129 20.035 267.031 20.051 266.906 20.066 cv
266.781 20.078 266.621 20.086 266.434 20.086 cv
266.238 20.086 266.082 20.078 265.957 20.066 cv
265.832 20.051 265.73 20.035 265.656 20.008 cv
265.578 19.984 265.523 19.949 265.496 19.91 cv
265.461 19.871 265.445 19.828 265.449 19.773 cv
265.449 12.824 li
265.445 12.777 265.461 12.73 265.488 12.687 cv
265.512 12.652 265.559 12.621 265.629 12.59 cv
265.695 12.566 265.781 12.547 265.891 12.531 cv
265.996 12.523 266.129 12.516 266.293 12.512 cv
266.457 12.516 266.594 12.523 266.703 12.531 cv
266.809 12.547 266.895 12.566 266.957 12.59 cv
267.016 12.621 267.059 12.652 267.086 12.687 cv
267.109 12.73 267.121 12.777 267.125 12.824 cv
267.125 13.625 li
267.508 13.215 267.898 12.902 268.297 12.691 cv
268.691 12.484 269.109 12.383 269.543 12.379 cv
270.012 12.383 270.41 12.461 270.738 12.613 cv
271.063 12.773 271.324 12.984 271.523 13.25 cv
271.723 13.52 271.867 13.832 271.957 14.187 cv
272.043 14.547 272.086 14.977 272.09 15.48 cv
cp
f
280.441 16.098 mo
280.438 16.336 280.387 16.512 280.281 16.625 cv
280.172 16.742 280.023 16.801 279.844 16.797 cv
275.609 16.797 li
275.605 17.098 275.641 17.367 275.715 17.605 cv
275.781 17.848 275.895 18.051 276.051 18.219 cv
276.203 18.391 276.398 18.52 276.641 18.605 cv
276.879 18.695 277.168 18.738 277.512 18.738 cv
277.852 18.738 278.152 18.715 278.414 18.664 cv
278.672 18.617 278.898 18.562 279.09 18.5 cv
279.277 18.441 279.434 18.387 279.563 18.336 cv
279.684 18.289 279.785 18.266 279.867 18.262 cv
279.91 18.266 279.949 18.273 279.984 18.289 cv
280.012 18.309 280.039 18.34 280.059 18.387 cv
280.078 18.434 280.09 18.5 280.102 18.586 cv
280.105 18.672 280.109 18.781 280.113 18.91 cv
280.109 19.027 280.109 19.125 280.105 19.203 cv
280.098 19.285 280.09 19.352 280.082 19.406 cv
280.07 19.465 280.055 19.516 280.035 19.551 cv
280.016 19.594 279.988 19.629 279.957 19.664 cv
279.922 19.703 279.828 19.754 279.68 19.812 cv
279.523 19.879 279.332 19.941 279.102 19.996 cv
278.863 20.059 278.594 20.105 278.297 20.152 cv
277.992 20.191 277.672 20.215 277.332 20.219 cv
276.711 20.215 276.168 20.141 275.707 19.984 cv
275.238 19.832 274.852 19.594 274.543 19.277 cv
274.227 18.961 273.992 18.562 273.844 18.078 cv
273.688 17.598 273.613 17.031 273.617 16.375 cv
273.613 15.762 273.691 15.203 273.855 14.707 cv
274.012 14.211 274.246 13.793 274.559 13.445 cv
274.863 13.102 275.238 12.836 275.676 12.652 cv
276.113 12.473 276.605 12.383 277.16 12.379 cv
277.738 12.383 278.238 12.469 278.652 12.637 cv
279.066 12.812 279.402 13.051 279.668 13.352 cv
279.93 13.656 280.125 14.016 280.254 14.43 cv
280.375 14.848 280.438 15.297 280.441 15.785 cv
cp
278.539 15.535 mo
278.551 14.984 278.441 14.551 278.207 14.238 cv
277.973 13.926 277.605 13.77 277.113 13.766 cv
276.863 13.77 276.648 13.816 276.465 13.906 cv
276.277 14.004 276.125 14.129 276.004 14.285 cv
275.879 14.445 275.785 14.633 275.723 14.848 cv
275.656 15.062 275.617 15.293 275.609 15.535 cv
cp
f
286.516 13.469 mo
286.516 13.66 286.508 13.812 286.5 13.93 cv
286.484 14.051 286.469 14.145 286.453 14.211 cv
286.43 14.281 286.402 14.328 286.371 14.352 cv
286.332 14.379 286.289 14.391 286.242 14.391 cv
286.195 14.391 286.148 14.383 286.102 14.363 cv
286.047 14.348 285.988 14.328 285.926 14.305 cv
285.855 14.285 285.785 14.266 285.711 14.246 cv
285.629 14.23 285.543 14.223 285.453 14.219 cv
285.34 14.223 285.23 14.242 285.125 14.285 cv
285.016 14.332 284.902 14.402 284.789 14.492 cv
284.668 14.586 284.547 14.711 284.422 14.863 cv
284.293 15.023 284.156 15.215 284.012 15.441 cv
284.012 19.773 li
284.008 19.828 283.992 19.871 283.965 19.91 cv
283.93 19.949 283.875 19.984 283.805 20.008 cv
283.727 20.035 283.629 20.051 283.504 20.066 cv
283.379 20.078 283.219 20.086 283.031 20.086 cv
282.836 20.086 282.68 20.078 282.555 20.066 cv
282.43 20.051 282.328 20.035 282.254 20.008 cv
282.176 19.984 282.121 19.949 282.094 19.91 cv
282.059 19.871 282.043 19.828 282.047 19.773 cv
282.047 12.824 li
282.043 12.777 282.059 12.73 282.086 12.687 cv
282.109 12.652 282.156 12.621 282.227 12.59 cv
282.293 12.566 282.379 12.547 282.488 12.531 cv
282.594 12.523 282.727 12.516 282.891 12.512 cv
283.055 12.516 283.191 12.523 283.301 12.531 cv
283.406 12.547 283.492 12.566 283.555 12.59 cv
283.613 12.621 283.656 12.652 283.684 12.687 cv
283.707 12.73 283.719 12.777 283.723 12.824 cv
283.723 13.687 li
283.902 13.43 284.074 13.219 284.238 13.047 cv
284.395 12.883 284.551 12.746 284.699 12.645 cv
284.844 12.547 284.988 12.48 285.133 12.437 cv
285.277 12.402 285.422 12.383 285.57 12.379 cv
285.637 12.383 285.711 12.387 285.789 12.391 cv
285.867 12.402 285.945 12.414 286.031 12.43 cv
286.109 12.449 286.184 12.469 286.25 12.492 cv
286.309 12.516 286.355 12.543 286.387 12.566 cv
286.414 12.598 286.434 12.625 286.449 12.652 cv
286.461 12.687 286.473 12.73 286.484 12.781 cv
286.492 12.84 286.5 12.922 286.508 13.027 cv
286.512 13.137 286.516 13.285 286.516 13.469 cv
cp
f
293.691 13.305 mo
293.688 13.559 293.66 13.742 293.605 13.859 cv
293.547 13.98 293.477 14.039 293.398 14.039 cv
292.578 14.039 li
292.691 14.164 292.773 14.309 292.824 14.465 cv
292.871 14.625 292.895 14.789 292.898 14.957 cv
292.895 15.367 292.828 15.727 292.695 16.039 cv
292.559 16.355 292.363 16.621 292.113 16.832 cv
291.859 17.051 291.559 17.215 291.203 17.324 cv
290.844 17.441 290.445 17.496 290.016 17.492 cv
289.789 17.496 289.578 17.469 289.375 17.41 cv
289.172 17.359 289.016 17.297 288.906 17.219 cv
288.844 17.289 288.785 17.367 288.738 17.461 cv
288.688 17.555 288.664 17.66 288.668 17.77 cv
288.664 17.926 288.73 18.047 288.863 18.141 cv
288.992 18.238 289.18 18.293 289.422 18.301 cv
291.113 18.363 li
291.508 18.379 291.859 18.437 292.168 18.531 cv
292.477 18.633 292.738 18.766 292.949 18.937 cv
293.16 19.113 293.32 19.324 293.43 19.566 cv
293.539 19.812 293.594 20.086 293.598 20.398 cv
293.594 20.734 293.52 21.059 293.371 21.367 cv
293.223 21.668 292.996 21.93 292.695 22.156 cv
292.391 22.375 292.012 22.555 291.559 22.687 cv
291.102 22.816 290.57 22.879 289.969 22.883 cv
289.371 22.879 288.867 22.832 288.449 22.742 cv
288.031 22.645 287.688 22.516 287.422 22.352 cv
287.152 22.184 286.957 21.984 286.84 21.758 cv
286.715 21.523 286.656 21.27 286.656 20.996 cv
286.656 20.824 286.676 20.664 286.723 20.508 cv
286.762 20.352 286.828 20.199 286.918 20.059 cv
287 19.914 287.105 19.781 287.23 19.648 cv
287.355 19.52 287.496 19.395 287.66 19.273 cv
287.434 19.16 287.262 19 287.141 18.789 cv
287.02 18.586 286.961 18.359 286.961 18.113 cv
286.961 17.812 287.027 17.535 287.168 17.277 cv
287.305 17.027 287.488 16.797 287.715 16.594 cv
287.531 16.414 287.387 16.199 287.277 15.941 cv
287.168 15.691 287.113 15.371 287.117 14.988 cv
287.113 14.586 287.184 14.227 287.328 13.902 cv
287.469 13.586 287.668 13.316 287.926 13.094 cv
288.18 12.875 288.484 12.703 288.836 12.586 cv
289.188 12.469 289.578 12.41 290.008 12.41 cv
290.227 12.41 290.434 12.426 290.633 12.449 cv
290.832 12.48 291.02 12.516 291.191 12.559 cv
293.398 12.559 li
293.48 12.562 293.551 12.621 293.609 12.73 cv
293.66 12.848 293.688 13.039 293.691 13.305 cv
cp
291.176 14.949 mo
291.172 14.578 291.07 14.289 290.863 14.078 cv
290.652 13.875 290.359 13.77 289.984 13.766 cv
289.789 13.77 289.617 13.801 289.477 13.863 cv
289.328 13.93 289.207 14.02 289.113 14.129 cv
289.012 14.242 288.941 14.371 288.898 14.52 cv
288.848 14.668 288.824 14.824 288.828 14.98 cv
288.824 15.34 288.93 15.617 289.141 15.82 cv
289.348 16.027 289.637 16.133 290.008 16.129 cv
290.203 16.133 290.371 16.102 290.52 16.035 cv
290.66 15.977 290.781 15.891 290.883 15.777 cv
290.977 15.672 291.051 15.543 291.102 15.398 cv
291.148 15.258 291.172 15.109 291.176 14.949 cv
cp
291.637 20.5 mo
291.637 20.262 291.543 20.086 291.355 19.961 cv
291.168 19.84 290.91 19.77 290.582 19.758 cv
289.188 19.719 li
289.051 19.82 288.941 19.914 288.863 20.004 cv
288.781 20.094 288.719 20.18 288.672 20.266 cv
288.621 20.348 288.586 20.43 288.574 20.508 cv
288.555 20.586 288.547 20.664 288.551 20.75 cv
288.547 21.004 288.68 21.203 288.941 21.34 cv
289.203 21.473 289.574 21.539 290.055 21.543 cv
290.348 21.539 290.594 21.508 290.801 21.453 cv
291 21.391 291.164 21.312 291.293 21.215 cv
291.414 21.113 291.504 21.004 291.559 20.883 cv
291.609 20.762 291.637 20.633 291.637 20.5 cv
cp
f
299.023 20.039 mo
298.18 22.5 li
298.129 22.629 298.004 22.723 297.797 22.781 cv
297.59 22.836 297.285 22.863 296.887 22.867 cv
296.676 22.863 296.508 22.855 296.387 22.84 cv
296.262 22.82 296.172 22.789 296.109 22.75 cv
296.047 22.707 296.012 22.656 296.008 22.594 cv
296 22.531 296.016 22.457 296.055 22.371 cv
296.98 20.039 li
296.91 20.008 296.848 19.961 296.797 19.895 cv
296.738 19.832 296.699 19.762 296.676 19.687 cv
294.285 13.297 li
294.215 13.117 294.18 12.98 294.184 12.883 cv
294.18 12.789 294.211 12.711 294.277 12.656 cv
294.336 12.602 294.441 12.566 294.59 12.543 cv
294.734 12.527 294.93 12.516 295.18 12.512 cv
295.398 12.516 295.578 12.52 295.711 12.523 cv
295.84 12.535 295.941 12.555 296.016 12.582 cv
296.086 12.617 296.141 12.664 296.18 12.727 cv
296.215 12.793 296.25 12.887 296.289 13.004 cv
297.922 17.656 li
297.945 17.656 li
299.445 12.91 li
299.469 12.777 299.508 12.687 299.563 12.641 cv
299.609 12.598 299.691 12.566 299.809 12.543 cv
299.918 12.527 300.121 12.516 300.41 12.512 cv
300.633 12.516 300.816 12.527 300.965 12.543 cv
301.109 12.566 301.219 12.605 301.293 12.66 cv
301.359 12.723 301.395 12.797 301.398 12.891 cv
301.395 12.984 301.375 13.098 301.336 13.227 cv
cp
f
313.465 18.512 mo
313.465 18.645 313.461 18.754 313.453 18.844 cv
313.445 18.937 313.434 19.016 313.418 19.078 cv
313.402 19.145 313.379 19.203 313.355 19.246 cv
313.324 19.293 313.285 19.344 313.23 19.402 cv
313.172 19.465 313.059 19.543 312.898 19.633 cv
312.73 19.73 312.531 19.82 312.297 19.902 cv
312.059 19.992 311.789 20.059 311.488 20.117 cv
311.18 20.172 310.852 20.203 310.504 20.203 cv
309.809 20.203 309.184 20.098 308.629 19.883 cv
308.07 19.672 307.598 19.355 307.211 18.93 cv
306.82 18.508 306.523 17.977 306.316 17.344 cv
306.109 16.711 306.004 15.973 306.008 15.129 cv
306.004 14.273 306.117 13.516 306.348 12.848 cv
306.574 12.184 306.895 11.625 307.305 11.172 cv
307.715 10.723 308.207 10.379 308.781 10.145 cv
309.355 9.914 309.988 9.797 310.684 9.79303 cv
310.957 9.797 311.227 9.82001 311.492 9.86298 cv
311.75 9.90997 311.992 9.96899 312.211 10.043 cv
312.43 10.121 312.629 10.211 312.809 10.305 cv
312.984 10.406 313.105 10.488 313.18 10.559 cv
313.246 10.629 313.297 10.687 313.324 10.734 cv
313.348 10.781 313.367 10.844 313.387 10.914 cv
313.398 10.992 313.41 11.078 313.422 11.172 cv
313.426 11.273 313.43 11.395 313.434 11.535 cv
313.43 11.695 313.426 11.828 313.418 11.934 cv
313.406 12.047 313.387 12.133 313.363 12.199 cv
313.336 12.27 313.305 12.32 313.27 12.348 cv
313.23 12.383 313.188 12.398 313.145 12.395 cv
313.063 12.398 312.965 12.352 312.848 12.258 cv
312.727 12.168 312.57 12.066 312.383 11.953 cv
312.191 11.844 311.969 11.742 311.707 11.648 cv
311.441 11.559 311.129 11.516 310.77 11.512 cv
310.367 11.516 310.008 11.598 309.695 11.758 cv
309.379 11.926 309.113 12.16 308.895 12.461 cv
308.672 12.77 308.504 13.137 308.391 13.566 cv
308.273 14 308.215 14.484 308.219 15.02 cv
308.215 15.617 308.277 16.133 308.402 16.562 cv
308.523 17 308.695 17.355 308.926 17.633 cv
309.148 17.914 309.422 18.121 309.742 18.258 cv
310.059 18.398 310.418 18.469 310.824 18.465 cv
311.184 18.469 311.5 18.426 311.766 18.336 cv
312.031 18.254 312.258 18.16 312.445 18.051 cv
312.633 17.949 312.789 17.855 312.914 17.773 cv
313.035 17.691 313.129 17.648 313.199 17.648 cv
313.25 17.648 313.293 17.66 313.324 17.68 cv
313.355 17.699 313.379 17.738 313.402 17.801 cv
313.418 17.863 313.434 17.953 313.449 18.062 cv
313.457 18.18 313.465 18.328 313.465 18.512 cv
cp
f
321.844 16.227 mo
321.84 16.824 321.762 17.367 321.609 17.852 cv
321.449 18.344 321.215 18.762 320.898 19.113 cv
320.582 19.465 320.184 19.738 319.707 19.93 cv
319.227 20.121 318.668 20.215 318.031 20.219 cv
317.41 20.215 316.871 20.133 316.418 19.961 cv
315.957 19.793 315.578 19.543 315.281 19.215 cv
314.977 18.891 314.754 18.488 314.609 18.008 cv
314.465 17.531 314.395 16.984 314.395 16.367 cv
314.395 15.777 314.473 15.238 314.629 14.746 cv
314.785 14.258 315.023 13.836 315.344 13.484 cv
315.66 13.137 316.055 12.863 316.531 12.668 cv
317.004 12.477 317.563 12.383 318.203 12.379 cv
318.828 12.383 319.367 12.465 319.824 12.633 cv
320.281 12.805 320.66 13.055 320.957 13.379 cv
321.254 13.707 321.477 14.109 321.625 14.586 cv
321.77 15.066 321.84 15.613 321.844 16.227 cv
cp
319.824 16.305 mo
319.82 15.969 319.793 15.652 319.742 15.359 cv
319.684 15.074 319.59 14.824 319.465 14.609 cv
319.332 14.398 319.16 14.23 318.949 14.109 cv
318.73 13.992 318.461 13.934 318.133 13.93 cv
317.844 13.934 317.59 13.988 317.371 14.09 cv
317.152 14.199 316.973 14.355 316.832 14.559 cv
316.691 14.766 316.586 15.012 316.516 15.297 cv
316.445 15.59 316.41 15.918 316.41 16.281 cv
316.41 16.629 316.438 16.945 316.496 17.23 cv
316.551 17.523 316.645 17.773 316.773 17.984 cv
316.898 18.199 317.07 18.363 317.293 18.477 cv
317.508 18.598 317.777 18.656 318.102 18.652 cv
318.395 18.656 318.652 18.602 318.875 18.492 cv
319.09 18.387 319.27 18.234 319.41 18.027 cv
319.551 17.828 319.652 17.582 319.723 17.293 cv
319.785 17.008 319.82 16.68 319.824 16.305 cv
cp
f
330.039 19.773 mo
330.035 19.828 330.02 19.871 329.992 19.91 cv
329.957 19.949 329.906 19.984 329.836 20.008 cv
329.762 20.035 329.66 20.051 329.535 20.066 cv
329.406 20.078 329.25 20.086 329.066 20.086 cv
328.871 20.086 328.711 20.078 328.586 20.066 cv
328.457 20.051 328.355 20.035 328.285 20.008 cv
328.207 19.984 328.156 19.949 328.129 19.91 cv
328.094 19.871 328.078 19.828 328.082 19.773 cv
328.082 15.809 li
328.078 15.473 328.055 15.207 328.008 15.012 cv
327.957 14.82 327.883 14.656 327.793 14.52 cv
327.699 14.383 327.582 14.277 327.434 14.199 cv
327.285 14.125 327.109 14.086 326.914 14.086 cv
326.66 14.086 326.41 14.18 326.156 14.359 cv
325.902 14.543 325.637 14.805 325.363 15.152 cv
325.363 19.773 li
325.359 19.828 325.344 19.871 325.316 19.91 cv
325.281 19.949 325.227 19.984 325.156 20.008 cv
325.078 20.035 324.98 20.051 324.855 20.066 cv
324.73 20.078 324.57 20.086 324.383 20.086 cv
324.188 20.086 324.031 20.078 323.906 20.066 cv
323.781 20.051 323.68 20.035 323.605 20.008 cv
323.527 19.984 323.473 19.949 323.445 19.91 cv
323.41 19.871 323.395 19.828 323.398 19.773 cv
323.398 12.824 li
323.395 12.777 323.41 12.73 323.438 12.687 cv
323.461 12.652 323.508 12.621 323.578 12.59 cv
323.645 12.566 323.73 12.547 323.84 12.531 cv
323.945 12.523 324.078 12.516 324.242 12.512 cv
324.406 12.516 324.543 12.523 324.652 12.531 cv
324.758 12.547 324.844 12.566 324.906 12.59 cv
324.965 12.621 325.008 12.652 325.035 12.687 cv
325.059 12.73 325.07 12.777 325.074 12.824 cv
325.074 13.625 li
325.457 13.215 325.848 12.902 326.246 12.691 cv
326.641 12.484 327.059 12.383 327.492 12.379 cv
327.961 12.383 328.359 12.461 328.688 12.613 cv
329.012 12.773 329.273 12.984 329.473 13.25 cv
329.672 13.52 329.816 13.832 329.906 14.187 cv
329.992 14.547 330.035 14.977 330.039 15.48 cv
cp
f
336.863 17.809 mo
336.859 18.207 336.785 18.555 336.641 18.855 cv
336.492 19.156 336.285 19.41 336.016 19.609 cv
335.742 19.816 335.422 19.965 335.055 20.066 cv
334.688 20.164 334.285 20.215 333.855 20.219 cv
333.59 20.215 333.344 20.195 333.109 20.16 cv
332.875 20.117 332.664 20.07 332.477 20.012 cv
332.289 19.953 332.133 19.891 332.008 19.828 cv
331.883 19.766 331.789 19.707 331.734 19.652 cv
331.676 19.598 331.633 19.516 331.605 19.398 cv
331.57 19.285 331.555 19.109 331.559 18.879 cv
331.555 18.73 331.563 18.609 331.574 18.516 cv
331.582 18.426 331.598 18.355 331.621 18.297 cv
331.641 18.246 331.664 18.207 331.699 18.187 cv
331.727 18.172 331.766 18.164 331.813 18.16 cv
331.867 18.164 331.953 18.195 332.066 18.258 cv
332.176 18.324 332.313 18.398 332.484 18.473 cv
332.648 18.555 332.844 18.625 333.063 18.691 cv
333.281 18.762 333.531 18.797 333.816 18.793 cv
333.992 18.797 334.148 18.777 334.289 18.738 cv
334.422 18.703 334.543 18.652 334.648 18.582 cv
334.746 18.516 334.82 18.43 334.875 18.324 cv
334.922 18.223 334.949 18.102 334.953 17.965 cv
334.949 17.809 334.902 17.676 334.809 17.566 cv
334.715 17.457 334.586 17.359 334.43 17.273 cv
334.266 17.191 334.086 17.113 333.891 17.039 cv
333.688 16.969 333.484 16.891 333.273 16.797 cv
333.063 16.711 332.855 16.609 332.66 16.492 cv
332.457 16.383 332.277 16.242 332.121 16.074 cv
331.957 15.91 331.832 15.711 331.738 15.473 cv
331.645 15.242 331.598 14.961 331.598 14.629 cv
331.598 14.301 331.66 13.996 331.789 13.715 cv
331.918 13.441 332.105 13.203 332.352 13.004 cv
332.594 12.809 332.891 12.656 333.242 12.543 cv
333.59 12.437 333.984 12.383 334.426 12.379 cv
334.641 12.383 334.852 12.398 335.059 12.426 cv
335.262 12.461 335.449 12.5 335.617 12.543 cv
335.781 12.594 335.922 12.645 336.039 12.695 cv
336.152 12.754 336.234 12.801 336.285 12.836 cv
336.332 12.879 336.367 12.918 336.391 12.953 cv
336.41 12.996 336.422 13.043 336.434 13.094 cv
336.441 13.148 336.453 13.215 336.461 13.293 cv
336.469 13.379 336.473 13.477 336.473 13.594 cv
336.473 13.734 336.469 13.852 336.461 13.937 cv
336.453 14.031 336.438 14.102 336.422 14.148 cv
336.402 14.203 336.379 14.238 336.352 14.254 cv
336.316 14.277 336.281 14.285 336.242 14.281 cv
336.191 14.285 336.117 14.258 336.023 14.199 cv
335.922 14.148 335.801 14.09 335.652 14.023 cv
335.504 13.965 335.332 13.906 335.137 13.848 cv
334.941 13.797 334.719 13.77 334.473 13.766 cv
334.293 13.77 334.141 13.789 334.012 13.82 cv
333.879 13.859 333.77 13.91 333.691 13.977 cv
333.605 14.047 333.543 14.125 333.504 14.215 cv
333.457 14.309 333.438 14.406 333.441 14.508 cv
333.438 14.668 333.488 14.805 333.59 14.91 cv
333.688 15.023 333.816 15.117 333.98 15.199 cv
334.141 15.285 334.324 15.363 334.531 15.434 cv
334.734 15.508 334.941 15.59 335.152 15.672 cv
335.359 15.762 335.566 15.859 335.777 15.973 cv
335.98 16.086 336.164 16.227 336.324 16.391 cv
336.484 16.559 336.613 16.758 336.715 16.988 cv
336.809 17.223 336.859 17.496 336.863 17.809 cv
cp
f
344.934 19.773 mo
344.93 19.828 344.918 19.871 344.895 19.91 cv
344.867 19.949 344.82 19.984 344.758 20.008 cv
344.691 20.035 344.605 20.051 344.5 20.066 cv
344.395 20.078 344.262 20.086 344.102 20.086 cv
343.926 20.086 343.785 20.078 343.684 20.066 cv
343.574 20.051 343.492 20.035 343.43 20.008 cv
343.367 19.984 343.32 19.949 343.297 19.91 cv
343.266 19.871 343.254 19.828 343.258 19.773 cv
343.258 18.973 li
342.871 19.387 342.48 19.699 342.086 19.906 cv
341.684 20.113 341.273 20.215 340.852 20.219 cv
340.371 20.215 339.969 20.141 339.645 19.984 cv
339.32 19.832 339.059 19.617 338.859 19.348 cv
338.656 19.078 338.512 18.766 338.43 18.406 cv
338.34 18.051 338.297 17.609 338.301 17.078 cv
338.301 12.824 li
338.297 12.777 338.313 12.73 338.344 12.687 cv
338.371 12.652 338.422 12.621 338.5 12.59 cv
338.574 12.566 338.676 12.547 338.805 12.531 cv
338.93 12.523 339.086 12.516 339.277 12.512 cv
339.465 12.516 339.625 12.523 339.75 12.531 cv
339.875 12.547 339.973 12.566 340.051 12.59 cv
340.121 12.621 340.176 12.652 340.211 12.687 cv
340.238 12.73 340.254 12.777 340.258 12.824 cv
340.258 16.75 li
340.254 17.117 340.277 17.395 340.328 17.586 cv
340.371 17.777 340.441 17.941 340.543 18.078 cv
340.637 18.219 340.762 18.324 340.91 18.398 cv
341.059 18.477 341.23 18.516 341.426 18.512 cv
341.676 18.516 341.926 18.426 342.18 18.238 cv
342.43 18.059 342.699 17.793 342.984 17.445 cv
342.984 12.824 li
342.984 12.777 342.996 12.73 343.027 12.687 cv
343.051 12.652 343.105 12.621 343.184 12.59 cv
343.258 12.566 343.355 12.547 343.484 12.531 cv
343.605 12.523 343.766 12.516 343.961 12.512 cv
344.152 12.516 344.309 12.523 344.434 12.531 cv
344.555 12.547 344.656 12.566 344.73 12.59 cv
344.801 12.621 344.852 12.652 344.887 12.687 cv
344.914 12.73 344.93 12.777 344.934 12.824 cv
cp
f
357.871 19.773 mo
357.867 19.828 357.852 19.871 357.824 19.91 cv
357.789 19.949 357.738 19.984 357.668 20.008 cv
357.594 20.035 357.492 20.051 357.371 20.066 cv
357.246 20.078 357.09 20.086 356.898 20.086 cv
356.699 20.086 356.539 20.078 356.414 20.066 cv
356.289 20.051 356.188 20.035 356.113 20.008 cv
356.035 19.984 355.984 19.949 355.957 19.91 cv
355.93 19.871 355.914 19.828 355.918 19.773 cv
355.918 15.652 li
355.914 15.422 355.895 15.207 355.852 15.012 cv
355.805 14.82 355.734 14.656 355.648 14.52 cv
355.555 14.383 355.441 14.277 355.305 14.199 cv
355.164 14.125 355 14.086 354.809 14.086 cv
354.574 14.086 354.336 14.18 354.098 14.359 cv
353.859 14.543 353.602 14.805 353.32 15.152 cv
353.32 19.773 li
353.32 19.828 353.305 19.871 353.273 19.91 cv
353.242 19.949 353.188 19.984 353.113 20.008 cv
353.035 20.035 352.934 20.051 352.813 20.066 cv
352.688 20.078 352.535 20.086 352.348 20.086 cv
352.152 20.086 351.992 20.078 351.871 20.066 cv
351.742 20.051 351.641 20.035 351.57 20.008 cv
351.492 19.984 351.441 19.949 351.41 19.91 cv
351.379 19.871 351.363 19.828 351.363 19.773 cv
351.363 15.652 li
351.363 15.422 351.34 15.207 351.297 15.012 cv
351.254 14.82 351.188 14.656 351.102 14.52 cv
351.008 14.383 350.895 14.277 350.758 14.199 cv
350.613 14.125 350.449 14.086 350.266 14.086 cv
350.023 14.086 349.785 14.18 349.547 14.359 cv
349.309 14.543 349.051 14.805 348.777 15.152 cv
348.777 19.773 li
348.773 19.828 348.758 19.871 348.73 19.91 cv
348.695 19.949 348.641 19.984 348.57 20.008 cv
348.492 20.035 348.395 20.051 348.27 20.066 cv
348.145 20.078 347.984 20.086 347.797 20.086 cv
347.602 20.086 347.445 20.078 347.32 20.066 cv
347.195 20.051 347.094 20.035 347.02 20.008 cv
346.941 19.984 346.887 19.949 346.859 19.91 cv
346.824 19.871 346.809 19.828 346.813 19.773 cv
346.813 12.824 li
346.809 12.777 346.824 12.73 346.852 12.687 cv
346.875 12.652 346.922 12.621 346.992 12.59 cv
347.059 12.566 347.145 12.547 347.254 12.531 cv
347.359 12.523 347.492 12.516 347.656 12.512 cv
347.82 12.516 347.957 12.523 348.066 12.531 cv
348.172 12.547 348.258 12.566 348.32 12.59 cv
348.379 12.621 348.422 12.652 348.449 12.687 cv
348.473 12.73 348.484 12.777 348.488 12.824 cv
348.488 13.625 li
348.871 13.215 349.254 12.902 349.637 12.691 cv
350.016 12.484 350.418 12.383 350.836 12.379 cv
351.121 12.383 351.375 12.41 351.605 12.469 cv
351.832 12.531 352.039 12.617 352.219 12.727 cv
352.398 12.84 352.551 12.977 352.68 13.129 cv
352.809 13.285 352.918 13.457 353.008 13.648 cv
353.215 13.426 353.418 13.234 353.621 13.074 cv
353.816 12.914 354.016 12.781 354.211 12.68 cv
354.406 12.578 354.602 12.504 354.797 12.453 cv
354.992 12.406 355.191 12.383 355.395 12.379 cv
355.855 12.383 356.242 12.461 356.563 12.613 cv
356.875 12.773 357.133 12.984 357.328 13.25 cv
357.523 13.52 357.66 13.832 357.746 14.187 cv
357.824 14.547 357.867 14.926 357.871 15.324 cv
cp
f
366.789 16.195 mo
366.789 16.816 366.723 17.375 366.59 17.871 cv
366.457 18.367 366.262 18.789 366.008 19.137 cv
365.754 19.484 365.438 19.754 365.059 19.937 cv
364.676 20.125 364.242 20.215 363.758 20.219 cv
363.551 20.215 363.363 20.195 363.199 20.16 cv
363.027 20.117 362.863 20.059 362.707 19.98 cv
362.547 19.902 362.391 19.805 362.238 19.68 cv
362.078 19.562 361.918 19.422 361.754 19.258 cv
361.754 22.531 li
361.75 22.578 361.734 22.625 361.707 22.672 cv
361.672 22.711 361.617 22.746 361.547 22.777 cv
361.469 22.801 361.371 22.824 361.246 22.844 cv
361.121 22.855 360.961 22.863 360.773 22.867 cv
360.578 22.863 360.422 22.855 360.297 22.844 cv
360.172 22.824 360.07 22.801 359.996 22.777 cv
359.918 22.746 359.863 22.711 359.836 22.672 cv
359.801 22.625 359.785 22.578 359.789 22.531 cv
359.789 12.824 li
359.785 12.777 359.801 12.73 359.828 12.687 cv
359.852 12.652 359.895 12.621 359.965 12.59 cv
360.027 12.566 360.113 12.547 360.223 12.531 cv
360.324 12.523 360.461 12.516 360.625 12.512 cv
360.781 12.516 360.91 12.523 361.016 12.531 cv
361.121 12.547 361.207 12.566 361.273 12.59 cv
361.336 12.621 361.383 12.652 361.41 12.687 cv
361.434 12.73 361.445 12.777 361.449 12.824 cv
361.449 13.641 li
361.648 13.434 361.848 13.254 362.047 13.094 cv
362.238 12.937 362.438 12.805 362.641 12.695 cv
362.844 12.594 363.051 12.512 363.27 12.457 cv
363.48 12.406 363.711 12.383 363.961 12.379 cv
364.465 12.383 364.898 12.48 365.262 12.68 cv
365.617 12.883 365.91 13.16 366.137 13.504 cv
366.359 13.855 366.523 14.258 366.633 14.719 cv
366.734 15.18 366.789 15.672 366.789 16.195 cv
cp
364.746 16.336 mo
364.742 16.043 364.723 15.762 364.68 15.484 cv
364.633 15.215 364.555 14.973 364.453 14.758 cv
364.344 14.547 364.203 14.375 364.031 14.246 cv
363.855 14.121 363.641 14.059 363.383 14.055 cv
363.25 14.059 363.121 14.078 362.996 14.113 cv
362.867 14.156 362.738 14.219 362.605 14.305 cv
362.473 14.395 362.336 14.508 362.199 14.648 cv
362.055 14.789 361.906 14.965 361.754 15.168 cv
361.754 17.461 li
362.027 17.809 362.289 18.078 362.539 18.266 cv
362.785 18.457 363.047 18.551 363.32 18.551 cv
363.574 18.551 363.789 18.488 363.973 18.355 cv
364.148 18.23 364.297 18.059 364.41 17.848 cv
364.523 17.637 364.605 17.398 364.664 17.133 cv
364.715 16.867 364.742 16.602 364.746 16.336 cv
cp
f
372.285 19.09 mo
372.285 19.316 372.27 19.492 372.242 19.613 cv
372.211 19.738 372.172 19.824 372.129 19.871 cv
372.078 19.922 372.012 19.965 371.922 20.004 cv
371.828 20.043 371.719 20.074 371.602 20.105 cv
371.477 20.129 371.344 20.152 371.203 20.172 cv
371.059 20.184 370.918 20.191 370.773 20.195 cv
370.383 20.191 370.043 20.141 369.758 20.047 cv
369.473 19.945 369.238 19.797 369.051 19.59 cv
368.863 19.387 368.723 19.129 368.637 18.816 cv
368.543 18.508 368.5 18.137 368.504 17.707 cv
368.504 14.148 li
367.672 14.148 li
367.57 14.152 367.496 14.09 367.445 13.965 cv
367.391 13.844 367.363 13.641 367.367 13.352 cv
367.363 13.203 367.371 13.074 367.387 12.973 cv
367.398 12.871 367.418 12.789 367.445 12.727 cv
367.469 12.668 367.5 12.625 367.543 12.598 cv
367.578 12.574 367.625 12.562 367.68 12.559 cv
368.504 12.559 li
368.504 11.008 li
368.5 10.961 368.516 10.914 368.547 10.867 cv
368.574 10.828 368.625 10.793 368.703 10.762 cv
368.777 10.738 368.879 10.715 369.008 10.699 cv
369.133 10.687 369.289 10.684 369.48 10.68 cv
369.668 10.684 369.828 10.687 369.957 10.699 cv
370.082 10.715 370.184 10.738 370.258 10.762 cv
370.328 10.793 370.379 10.828 370.414 10.867 cv
370.441 10.914 370.457 10.961 370.461 11.008 cv
370.461 12.559 li
371.973 12.559 li
372.023 12.562 372.07 12.574 372.109 12.598 cv
372.148 12.625 372.18 12.668 372.207 12.727 cv
372.23 12.789 372.25 12.871 372.266 12.973 cv
372.277 13.074 372.285 13.203 372.285 13.352 cv
372.285 13.641 372.258 13.844 372.207 13.965 cv
372.152 14.09 372.078 14.152 371.98 14.148 cv
370.461 14.148 li
370.461 17.414 li
370.457 17.793 370.516 18.078 370.641 18.266 cv
370.758 18.457 370.973 18.551 371.277 18.551 cv
371.379 18.551 371.473 18.543 371.559 18.523 cv
371.641 18.508 371.715 18.488 371.781 18.461 cv
371.844 18.441 371.898 18.418 371.945 18.398 cv
371.988 18.383 372.027 18.375 372.066 18.371 cv
372.094 18.375 372.125 18.383 372.156 18.398 cv
372.184 18.418 372.203 18.457 372.223 18.508 cv
372.234 18.566 372.25 18.641 372.266 18.73 cv
372.277 18.828 372.285 18.945 372.285 19.09 cv
cp
f
375.672 19.773 mo
375.668 19.828 375.652 19.871 375.625 19.91 cv
375.59 19.949 375.535 19.984 375.465 20.008 cv
375.387 20.035 375.289 20.051 375.164 20.066 cv
375.039 20.078 374.879 20.086 374.691 20.086 cv
374.496 20.086 374.34 20.078 374.215 20.066 cv
374.09 20.051 373.988 20.035 373.914 20.008 cv
373.836 19.984 373.781 19.949 373.754 19.91 cv
373.719 19.871 373.703 19.828 373.707 19.773 cv
373.707 12.84 li
373.703 12.789 373.719 12.742 373.754 12.703 cv
373.781 12.664 373.836 12.633 373.914 12.602 cv
373.988 12.578 374.09 12.555 374.215 12.535 cv
374.34 12.523 374.496 12.516 374.691 12.512 cv
374.879 12.516 375.039 12.523 375.164 12.535 cv
375.289 12.555 375.387 12.578 375.465 12.602 cv
375.535 12.633 375.59 12.664 375.625 12.703 cv
375.652 12.742 375.668 12.789 375.672 12.84 cv
cp
375.82 10.469 mo
375.82 10.867 375.738 11.141 375.578 11.289 cv
375.414 11.441 375.117 11.516 374.684 11.512 cv
374.238 11.516 373.938 11.441 373.789 11.297 cv
373.633 11.152 373.559 10.891 373.559 10.508 cv
373.559 10.113 373.637 9.84003 373.797 9.68701 cv
373.953 9.53497 374.254 9.45697 374.699 9.45697 cv
375.133 9.45697 375.43 9.53101 375.586 9.67999 cv
375.742 9.828 375.82 10.094 375.82 10.469 cv
cp
f
384.664 16.227 mo
384.66 16.824 384.582 17.367 384.43 17.852 cv
384.27 18.344 384.035 18.762 383.719 19.113 cv
383.402 19.465 383.004 19.738 382.527 19.93 cv
382.047 20.121 381.488 20.215 380.852 20.219 cv
380.23 20.215 379.691 20.133 379.238 19.961 cv
378.777 19.793 378.398 19.543 378.102 19.215 cv
377.797 18.891 377.574 18.488 377.43 18.008 cv
377.285 17.531 377.215 16.984 377.215 16.367 cv
377.215 15.777 377.293 15.238 377.449 14.746 cv
377.605 14.258 377.844 13.836 378.164 13.484 cv
378.48 13.137 378.875 12.863 379.352 12.668 cv
379.824 12.477 380.383 12.383 381.023 12.379 cv
381.648 12.383 382.188 12.465 382.645 12.633 cv
383.102 12.805 383.48 13.055 383.777 13.379 cv
384.074 13.707 384.297 14.109 384.445 14.586 cv
384.59 15.066 384.66 15.613 384.664 16.227 cv
cp
382.645 16.305 mo
382.641 15.969 382.613 15.652 382.563 15.359 cv
382.504 15.074 382.41 14.824 382.285 14.609 cv
382.152 14.398 381.98 14.23 381.77 14.109 cv
381.551 13.992 381.281 13.934 380.953 13.93 cv
380.664 13.934 380.41 13.988 380.191 14.09 cv
379.973 14.199 379.793 14.355 379.652 14.559 cv
379.512 14.766 379.406 15.012 379.336 15.297 cv
379.266 15.59 379.23 15.918 379.23 16.281 cv
379.23 16.629 379.258 16.945 379.316 17.23 cv
379.371 17.523 379.465 17.773 379.594 17.984 cv
379.719 18.199 379.891 18.363 380.113 18.477 cv
380.328 18.598 380.598 18.656 380.922 18.652 cv
381.215 18.656 381.473 18.602 381.695 18.492 cv
381.91 18.387 382.09 18.234 382.23 18.027 cv
382.371 17.828 382.473 17.582 382.543 17.293 cv
382.605 17.008 382.641 16.68 382.645 16.305 cv
cp
f
392.906 19.773 mo
392.902 19.828 392.887 19.871 392.859 19.91 cv
392.824 19.949 392.773 19.984 392.703 20.008 cv
392.629 20.035 392.527 20.051 392.402 20.066 cv
392.273 20.078 392.117 20.086 391.934 20.086 cv
391.738 20.086 391.578 20.078 391.453 20.066 cv
391.324 20.051 391.223 20.035 391.152 20.008 cv
391.074 19.984 391.023 19.949 390.996 19.91 cv
390.961 19.871 390.945 19.828 390.949 19.773 cv
390.949 15.809 li
390.945 15.473 390.922 15.207 390.875 15.012 cv
390.824 14.82 390.75 14.656 390.66 14.52 cv
390.566 14.383 390.449 14.277 390.301 14.199 cv
390.152 14.125 389.977 14.086 389.781 14.086 cv
389.527 14.086 389.277 14.18 389.023 14.359 cv
388.77 14.543 388.504 14.805 388.23 15.152 cv
388.23 19.773 li
388.227 19.828 388.211 19.871 388.184 19.91 cv
388.148 19.949 388.094 19.984 388.023 20.008 cv
387.945 20.035 387.848 20.051 387.723 20.066 cv
387.598 20.078 387.438 20.086 387.25 20.086 cv
387.055 20.086 386.898 20.078 386.773 20.066 cv
386.648 20.051 386.547 20.035 386.473 20.008 cv
386.395 19.984 386.34 19.949 386.313 19.91 cv
386.277 19.871 386.262 19.828 386.266 19.773 cv
386.266 12.824 li
386.262 12.777 386.277 12.73 386.305 12.687 cv
386.328 12.652 386.375 12.621 386.445 12.59 cv
386.512 12.566 386.598 12.547 386.707 12.531 cv
386.813 12.523 386.945 12.516 387.109 12.512 cv
387.273 12.516 387.41 12.523 387.52 12.531 cv
387.625 12.547 387.711 12.566 387.773 12.59 cv
387.832 12.621 387.875 12.652 387.902 12.687 cv
387.926 12.73 387.938 12.777 387.941 12.824 cv
387.941 13.625 li
388.324 13.215 388.715 12.902 389.113 12.691 cv
389.508 12.484 389.926 12.383 390.359 12.379 cv
390.828 12.383 391.227 12.461 391.555 12.613 cv
391.879 12.773 392.141 12.984 392.34 13.25 cv
392.539 13.52 392.684 13.832 392.773 14.187 cv
392.859 14.547 392.902 14.977 392.906 15.48 cv
cp
f
402.246 16.121 mo
402.242 16.422 402.215 16.633 402.16 16.75 cv
402.102 16.875 402.012 16.934 401.887 16.93 cv
398.645 16.93 li
398.516 16.934 398.422 16.871 398.367 16.746 cv
398.305 16.625 398.277 16.418 398.281 16.121 cv
398.277 15.832 398.305 15.625 398.367 15.504 cv
398.422 15.387 398.516 15.328 398.645 15.324 cv
401.887 15.324 li
401.949 15.328 402 15.34 402.047 15.363 cv
402.086 15.391 402.125 15.437 402.16 15.496 cv
402.188 15.562 402.211 15.645 402.227 15.746 cv
402.238 15.852 402.242 15.977 402.246 16.121 cv
cp
f
414.918 19.773 mo
414.918 19.836 414.906 19.883 414.887 19.918 cv
414.867 19.961 414.82 19.992 414.742 20.016 cv
414.664 20.039 414.547 20.055 414.398 20.07 cv
414.242 20.078 414.039 20.086 413.781 20.086 cv
413.563 20.086 413.387 20.078 413.258 20.07 cv
413.129 20.055 413.027 20.039 412.953 20.012 cv
412.875 19.984 412.82 19.949 412.793 19.902 cv
412.758 19.863 412.734 19.809 412.715 19.742 cv
411.809 17.492 li
411.699 17.238 411.594 17.012 411.492 16.812 cv
411.383 16.617 411.27 16.453 411.145 16.32 cv
411.016 16.191 410.867 16.09 410.703 16.02 cv
410.535 15.953 410.344 15.922 410.129 15.918 cv
409.488 15.918 li
409.488 19.758 li
409.484 19.812 409.469 19.859 409.438 19.898 cv
409.402 19.941 409.348 19.977 409.27 20 cv
409.191 20.027 409.086 20.047 408.957 20.062 cv
408.824 20.078 408.66 20.086 408.461 20.086 cv
408.262 20.086 408.094 20.078 407.965 20.062 cv
407.828 20.047 407.723 20.027 407.648 20 cv
407.566 19.977 407.512 19.941 407.484 19.898 cv
407.449 19.859 407.434 19.812 407.438 19.758 cv
407.438 10.602 li
407.434 10.375 407.492 10.211 407.613 10.105 cv
407.727 10.008 407.871 9.95697 408.047 9.953 cv
410.656 9.953 li
410.918 9.95697 411.137 9.961 411.313 9.96899 cv
411.48 9.97998 411.637 9.992 411.781 10.008 cv
412.184 10.066 412.547 10.168 412.871 10.305 cv
413.195 10.449 413.473 10.633 413.699 10.855 cv
413.926 11.086 414.098 11.352 414.219 11.66 cv
414.336 11.969 414.395 12.324 414.398 12.723 cv
414.395 13.062 414.352 13.371 414.27 13.645 cv
414.18 13.926 414.055 14.172 413.891 14.391 cv
413.723 14.609 413.516 14.801 413.273 14.957 cv
413.027 15.121 412.75 15.25 412.441 15.348 cv
412.59 15.422 412.734 15.512 412.867 15.613 cv
413 15.723 413.121 15.848 413.238 15.992 cv
413.352 16.141 413.465 16.309 413.57 16.496 cv
413.672 16.687 413.773 16.902 413.875 17.141 cv
414.727 19.129 li
414.801 19.328 414.852 19.469 414.879 19.559 cv
414.902 19.652 414.918 19.727 414.918 19.773 cv
cp
412.277 12.934 mo
412.273 12.602 412.199 12.32 412.051 12.09 cv
411.898 11.863 411.652 11.703 411.313 11.605 cv
411.207 11.582 411.09 11.559 410.957 11.543 cv
410.824 11.527 410.641 11.52 410.406 11.52 cv
409.488 11.52 li
409.488 14.383 li
410.531 14.383 li
410.82 14.387 411.078 14.352 411.297 14.277 cv
411.516 14.211 411.695 14.109 411.84 13.98 cv
411.984 13.855 412.094 13.703 412.168 13.523 cv
412.238 13.348 412.273 13.152 412.277 12.934 cv
cp
f
422.504 16.098 mo
422.5 16.336 422.449 16.512 422.344 16.625 cv
422.234 16.742 422.086 16.801 421.906 16.797 cv
417.672 16.797 li
417.668 17.098 417.703 17.367 417.777 17.605 cv
417.844 17.848 417.957 18.051 418.113 18.219 cv
418.266 18.391 418.461 18.52 418.703 18.605 cv
418.941 18.695 419.23 18.738 419.574 18.738 cv
419.914 18.738 420.215 18.715 420.477 18.664 cv
420.734 18.617 420.961 18.562 421.152 18.5 cv
421.34 18.441 421.496 18.387 421.625 18.336 cv
421.746 18.289 421.848 18.266 421.93 18.262 cv
421.973 18.266 422.012 18.273 422.047 18.289 cv
422.074 18.309 422.102 18.34 422.121 18.387 cv
422.141 18.434 422.152 18.5 422.164 18.586 cv
422.168 18.672 422.172 18.781 422.176 18.91 cv
422.172 19.027 422.172 19.125 422.168 19.203 cv
422.16 19.285 422.152 19.352 422.145 19.406 cv
422.133 19.465 422.117 19.516 422.098 19.551 cv
422.078 19.594 422.051 19.629 422.02 19.664 cv
421.984 19.703 421.891 19.754 421.742 19.812 cv
421.586 19.879 421.395 19.941 421.164 19.996 cv
420.926 20.059 420.656 20.105 420.359 20.152 cv
420.055 20.191 419.734 20.215 419.395 20.219 cv
418.773 20.215 418.23 20.141 417.77 19.984 cv
417.301 19.832 416.914 19.594 416.605 19.277 cv
416.289 18.961 416.055 18.562 415.906 18.078 cv
415.75 17.598 415.676 17.031 415.68 16.375 cv
415.676 15.762 415.754 15.203 415.918 14.707 cv
416.074 14.211 416.309 13.793 416.621 13.445 cv
416.926 13.102 417.301 12.836 417.738 12.652 cv
418.176 12.473 418.668 12.383 419.223 12.379 cv
419.801 12.383 420.301 12.469 420.715 12.637 cv
421.129 12.812 421.465 13.051 421.73 13.352 cv
421.992 13.656 422.188 14.016 422.316 14.43 cv
422.438 14.848 422.5 15.297 422.504 15.785 cv
cp
420.602 15.535 mo
420.613 14.984 420.504 14.551 420.27 14.238 cv
420.035 13.926 419.668 13.77 419.176 13.766 cv
418.926 13.77 418.711 13.816 418.527 13.906 cv
418.34 14.004 418.188 14.129 418.066 14.285 cv
417.941 14.445 417.848 14.633 417.785 14.848 cv
417.719 15.062 417.68 15.293 417.672 15.535 cv
cp
f
435.168 19.773 mo
435.164 19.828 435.148 19.871 435.121 19.91 cv
435.086 19.949 435.035 19.984 434.965 20.008 cv
434.891 20.035 434.789 20.051 434.668 20.066 cv
434.543 20.078 434.387 20.086 434.195 20.086 cv
433.996 20.086 433.836 20.078 433.711 20.066 cv
433.586 20.051 433.484 20.035 433.41 20.008 cv
433.332 19.984 433.281 19.949 433.254 19.91 cv
433.227 19.871 433.211 19.828 433.215 19.773 cv
433.215 15.652 li
433.211 15.422 433.191 15.207 433.148 15.012 cv
433.102 14.82 433.031 14.656 432.945 14.52 cv
432.852 14.383 432.738 14.277 432.602 14.199 cv
432.461 14.125 432.297 14.086 432.105 14.086 cv
431.871 14.086 431.633 14.18 431.395 14.359 cv
431.156 14.543 430.898 14.805 430.617 15.152 cv
430.617 19.773 li
430.617 19.828 430.602 19.871 430.57 19.91 cv
430.539 19.949 430.484 19.984 430.41 20.008 cv
430.332 20.035 430.23 20.051 430.109 20.066 cv
429.984 20.078 429.832 20.086 429.645 20.086 cv
429.449 20.086 429.289 20.078 429.168 20.066 cv
429.039 20.051 428.938 20.035 428.867 20.008 cv
428.789 19.984 428.738 19.949 428.707 19.91 cv
428.676 19.871 428.66 19.828 428.66 19.773 cv
428.66 15.652 li
428.66 15.422 428.637 15.207 428.594 15.012 cv
428.551 14.82 428.484 14.656 428.398 14.52 cv
428.305 14.383 428.191 14.277 428.055 14.199 cv
427.91 14.125 427.746 14.086 427.563 14.086 cv
427.32 14.086 427.082 14.18 426.844 14.359 cv
426.605 14.543 426.348 14.805 426.074 15.152 cv
426.074 19.773 li
426.07 19.828 426.055 19.871 426.027 19.91 cv
425.992 19.949 425.938 19.984 425.867 20.008 cv
425.789 20.035 425.691 20.051 425.566 20.066 cv
425.441 20.078 425.281 20.086 425.094 20.086 cv
424.898 20.086 424.742 20.078 424.617 20.066 cv
424.492 20.051 424.391 20.035 424.316 20.008 cv
424.238 19.984 424.184 19.949 424.156 19.91 cv
424.121 19.871 424.105 19.828 424.109 19.773 cv
424.109 12.824 li
424.105 12.777 424.121 12.73 424.148 12.687 cv
424.172 12.652 424.219 12.621 424.289 12.59 cv
424.355 12.566 424.441 12.547 424.551 12.531 cv
424.656 12.523 424.789 12.516 424.953 12.512 cv
425.117 12.516 425.254 12.523 425.363 12.531 cv
425.469 12.547 425.555 12.566 425.617 12.59 cv
425.676 12.621 425.719 12.652 425.746 12.687 cv
425.77 12.73 425.781 12.777 425.785 12.824 cv
425.785 13.625 li
426.168 13.215 426.551 12.902 426.934 12.691 cv
427.313 12.484 427.715 12.383 428.133 12.379 cv
428.418 12.383 428.672 12.41 428.902 12.469 cv
429.129 12.531 429.336 12.617 429.516 12.727 cv
429.695 12.84 429.848 12.977 429.977 13.129 cv
430.105 13.285 430.215 13.457 430.305 13.648 cv
430.512 13.426 430.715 13.234 430.918 13.074 cv
431.113 12.914 431.313 12.781 431.508 12.68 cv
431.703 12.578 431.898 12.504 432.094 12.453 cv
432.289 12.406 432.488 12.383 432.691 12.379 cv
433.152 12.383 433.539 12.461 433.859 12.613 cv
434.172 12.773 434.43 12.984 434.625 13.25 cv
434.82 13.52 434.957 13.832 435.043 14.187 cv
435.121 14.547 435.164 14.926 435.168 15.324 cv
cp
f
444.117 16.227 mo
444.113 16.824 444.035 17.367 443.883 17.852 cv
443.723 18.344 443.488 18.762 443.172 19.113 cv
442.855 19.465 442.457 19.738 441.98 19.93 cv
441.5 20.121 440.941 20.215 440.305 20.219 cv
439.684 20.215 439.145 20.133 438.691 19.961 cv
438.23 19.793 437.852 19.543 437.555 19.215 cv
437.25 18.891 437.027 18.488 436.883 18.008 cv
436.738 17.531 436.668 16.984 436.668 16.367 cv
436.668 15.777 436.746 15.238 436.902 14.746 cv
437.059 14.258 437.297 13.836 437.617 13.484 cv
437.934 13.137 438.328 12.863 438.805 12.668 cv
439.277 12.477 439.836 12.383 440.477 12.379 cv
441.102 12.383 441.641 12.465 442.098 12.633 cv
442.555 12.805 442.934 13.055 443.23 13.379 cv
443.527 13.707 443.75 14.109 443.898 14.586 cv
444.043 15.066 444.113 15.613 444.117 16.227 cv
cp
442.098 16.305 mo
442.094 15.969 442.066 15.652 442.016 15.359 cv
441.957 15.074 441.863 14.824 441.738 14.609 cv
441.605 14.398 441.434 14.23 441.223 14.109 cv
441.004 13.992 440.734 13.934 440.406 13.93 cv
440.117 13.934 439.863 13.988 439.645 14.09 cv
439.426 14.199 439.246 14.355 439.105 14.559 cv
438.965 14.766 438.859 15.012 438.789 15.297 cv
438.719 15.59 438.684 15.918 438.684 16.281 cv
438.684 16.629 438.711 16.945 438.77 17.23 cv
438.824 17.523 438.918 17.773 439.047 17.984 cv
439.172 18.199 439.344 18.363 439.566 18.477 cv
439.781 18.598 440.051 18.656 440.375 18.652 cv
440.668 18.656 440.926 18.602 441.148 18.492 cv
441.363 18.387 441.543 18.234 441.684 18.027 cv
441.824 17.828 441.926 17.582 441.996 17.293 cv
442.059 17.008 442.094 16.68 442.098 16.305 cv
cp
f
449.82 19.09 mo
449.82 19.316 449.805 19.492 449.777 19.613 cv
449.746 19.738 449.707 19.824 449.664 19.871 cv
449.613 19.922 449.547 19.965 449.457 20.004 cv
449.363 20.043 449.254 20.074 449.137 20.105 cv
449.012 20.129 448.879 20.152 448.738 20.172 cv
448.594 20.184 448.453 20.191 448.309 20.195 cv
447.918 20.191 447.578 20.141 447.293 20.047 cv
447.008 19.945 446.773 19.797 446.586 19.59 cv
446.398 19.387 446.258 19.129 446.172 18.816 cv
446.078 18.508 446.035 18.137 446.039 17.707 cv
446.039 14.148 li
445.207 14.148 li
445.105 14.152 445.031 14.09 444.98 13.965 cv
444.926 13.844 444.898 13.641 444.902 13.352 cv
444.898 13.203 444.906 13.074 444.922 12.973 cv
444.934 12.871 444.953 12.789 444.98 12.727 cv
445.004 12.668 445.035 12.625 445.078 12.598 cv
445.113 12.574 445.16 12.562 445.215 12.559 cv
446.039 12.559 li
446.039 11.008 li
446.035 10.961 446.051 10.914 446.082 10.867 cv
446.109 10.828 446.16 10.793 446.238 10.762 cv
446.313 10.738 446.414 10.715 446.543 10.699 cv
446.668 10.687 446.824 10.684 447.016 10.68 cv
447.203 10.684 447.363 10.687 447.492 10.699 cv
447.617 10.715 447.719 10.738 447.793 10.762 cv
447.863 10.793 447.914 10.828 447.949 10.867 cv
447.977 10.914 447.992 10.961 447.996 11.008 cv
447.996 12.559 li
449.508 12.559 li
449.559 12.562 449.605 12.574 449.645 12.598 cv
449.684 12.625 449.715 12.668 449.742 12.727 cv
449.766 12.789 449.785 12.871 449.801 12.973 cv
449.813 13.074 449.82 13.203 449.82 13.352 cv
449.82 13.641 449.793 13.844 449.742 13.965 cv
449.688 14.09 449.613 14.152 449.516 14.148 cv
447.996 14.148 li
447.996 17.414 li
447.992 17.793 448.051 18.078 448.176 18.266 cv
448.293 18.457 448.508 18.551 448.813 18.551 cv
448.914 18.551 449.008 18.543 449.094 18.523 cv
449.176 18.508 449.25 18.488 449.316 18.461 cv
449.379 18.441 449.434 18.418 449.48 18.398 cv
449.523 18.383 449.563 18.375 449.602 18.371 cv
449.629 18.375 449.66 18.383 449.691 18.398 cv
449.719 18.418 449.738 18.457 449.758 18.508 cv
449.77 18.566 449.785 18.641 449.801 18.73 cv
449.813 18.828 449.82 18.945 449.82 19.09 cv
cp
f
457.41 16.098 mo
457.406 16.336 457.355 16.512 457.25 16.625 cv
457.141 16.742 456.992 16.801 456.813 16.797 cv
452.578 16.797 li
452.574 17.098 452.609 17.367 452.684 17.605 cv
452.75 17.848 452.863 18.051 453.02 18.219 cv
453.172 18.391 453.367 18.52 453.609 18.605 cv
453.848 18.695 454.137 18.738 454.48 18.738 cv
454.82 18.738 455.121 18.715 455.383 18.664 cv
455.641 18.617 455.867 18.562 456.059 18.5 cv
456.246 18.441 456.402 18.387 456.531 18.336 cv
456.652 18.289 456.754 18.266 456.836 18.262 cv
456.879 18.266 456.918 18.273 456.953 18.289 cv
456.98 18.309 457.008 18.34 457.027 18.387 cv
457.047 18.434 457.059 18.5 457.07 18.586 cv
457.074 18.672 457.078 18.781 457.082 18.91 cv
457.078 19.027 457.078 19.125 457.074 19.203 cv
457.066 19.285 457.059 19.352 457.051 19.406 cv
457.039 19.465 457.023 19.516 457.004 19.551 cv
456.984 19.594 456.957 19.629 456.926 19.664 cv
456.891 19.703 456.797 19.754 456.648 19.812 cv
456.492 19.879 456.301 19.941 456.07 19.996 cv
455.832 20.059 455.563 20.105 455.266 20.152 cv
454.961 20.191 454.641 20.215 454.301 20.219 cv
453.68 20.215 453.137 20.141 452.676 19.984 cv
452.207 19.832 451.82 19.594 451.512 19.277 cv
451.195 18.961 450.961 18.562 450.813 18.078 cv
450.656 17.598 450.582 17.031 450.586 16.375 cv
450.582 15.762 450.66 15.203 450.824 14.707 cv
450.98 14.211 451.215 13.793 451.527 13.445 cv
451.832 13.102 452.207 12.836 452.645 12.652 cv
453.082 12.473 453.574 12.383 454.129 12.379 cv
454.707 12.383 455.207 12.469 455.621 12.637 cv
456.035 12.812 456.371 13.051 456.637 13.352 cv
456.898 13.656 457.094 14.016 457.223 14.43 cv
457.344 14.848 457.406 15.297 457.41 15.785 cv
cp
455.508 15.535 mo
455.52 14.984 455.41 14.551 455.176 14.238 cv
454.941 13.926 454.574 13.77 454.082 13.766 cv
453.832 13.77 453.617 13.816 453.434 13.906 cv
453.246 14.004 453.094 14.129 452.973 14.285 cv
452.848 14.445 452.754 14.633 452.691 14.848 cv
452.625 15.062 452.586 15.293 452.578 15.535 cv
cp
f
474.715 19.758 mo
474.711 19.812 474.699 19.859 474.672 19.898 cv
474.641 19.941 474.586 19.977 474.516 20 cv
474.438 20.027 474.34 20.047 474.215 20.062 cv
474.09 20.078 473.93 20.086 473.738 20.086 cv
473.551 20.086 473.395 20.078 473.273 20.062 cv
473.145 20.047 473.047 20.027 472.977 20 cv
472.902 19.977 472.852 19.941 472.82 19.898 cv
472.789 19.859 472.773 19.812 472.773 19.758 cv
472.773 11.551 li
472.758 11.551 li
469.836 19.75 li
469.813 19.82 469.777 19.875 469.734 19.918 cv
469.684 19.965 469.621 20 469.543 20.023 cv
469.461 20.051 469.359 20.066 469.234 20.074 cv
469.109 20.082 468.957 20.086 468.785 20.086 cv
468.605 20.086 468.457 20.078 468.332 20.066 cv
468.207 20.051 468.102 20.031 468.023 20.004 cv
467.938 19.977 467.875 19.941 467.832 19.898 cv
467.781 19.859 467.75 19.812 467.738 19.75 cv
464.918 11.551 li
464.902 11.551 li
464.902 19.758 li
464.898 19.812 464.883 19.859 464.859 19.898 cv
464.828 19.941 464.777 19.977 464.699 20 cv
464.621 20.027 464.52 20.047 464.398 20.062 cv
464.273 20.078 464.117 20.086 463.93 20.086 cv
463.738 20.086 463.582 20.078 463.461 20.062 cv
463.332 20.047 463.23 20.027 463.16 20 cv
463.082 19.977 463.031 19.941 463.004 19.898 cv
462.973 19.859 462.957 19.812 462.961 19.758 cv
462.961 10.773 li
462.957 10.512 463.027 10.309 463.172 10.164 cv
463.309 10.027 463.496 9.95697 463.734 9.953 cv
465.074 9.953 li
465.313 9.95697 465.516 9.97699 465.688 10.012 cv
465.855 10.055 466.004 10.117 466.133 10.207 cv
466.254 10.301 466.359 10.422 466.445 10.566 cv
466.527 10.719 466.598 10.902 466.664 11.117 cv
468.848 17.125 li
468.879 17.125 li
471.137 11.133 li
471.203 10.914 471.277 10.73 471.359 10.578 cv
471.438 10.43 471.531 10.309 471.641 10.211 cv
471.746 10.121 471.871 10.055 472.016 10.012 cv
472.16 9.97699 472.328 9.95697 472.523 9.953 cv
473.902 9.953 li
474.039 9.95697 474.16 9.97302 474.266 10.008 cv
474.363 10.047 474.445 10.102 474.516 10.168 cv
474.578 10.242 474.629 10.328 474.664 10.426 cv
474.695 10.531 474.711 10.648 474.715 10.773 cv
cp
f
483.824 16.227 mo
483.82 16.824 483.742 17.367 483.59 17.852 cv
483.43 18.344 483.195 18.762 482.879 19.113 cv
482.563 19.465 482.164 19.738 481.688 19.93 cv
481.207 20.121 480.648 20.215 480.012 20.219 cv
479.391 20.215 478.852 20.133 478.398 19.961 cv
477.938 19.793 477.559 19.543 477.262 19.215 cv
476.957 18.891 476.734 18.488 476.59 18.008 cv
476.445 17.531 476.375 16.984 476.375 16.367 cv
476.375 15.777 476.453 15.238 476.609 14.746 cv
476.766 14.258 477.004 13.836 477.324 13.484 cv
477.641 13.137 478.035 12.863 478.512 12.668 cv
478.984 12.477 479.543 12.383 480.184 12.379 cv
480.809 12.383 481.348 12.465 481.805 12.633 cv
482.262 12.805 482.641 13.055 482.938 13.379 cv
483.234 13.707 483.457 14.109 483.605 14.586 cv
483.75 15.066 483.82 15.613 483.824 16.227 cv
cp
481.805 16.305 mo
481.801 15.969 481.773 15.652 481.723 15.359 cv
481.664 15.074 481.57 14.824 481.445 14.609 cv
481.313 14.398 481.141 14.23 480.93 14.109 cv
480.711 13.992 480.441 13.934 480.113 13.93 cv
479.824 13.934 479.57 13.988 479.352 14.09 cv
479.133 14.199 478.953 14.355 478.813 14.559 cv
478.672 14.766 478.566 15.012 478.496 15.297 cv
478.426 15.59 478.391 15.918 478.391 16.281 cv
478.391 16.629 478.418 16.945 478.477 17.23 cv
478.531 17.523 478.625 17.773 478.754 17.984 cv
478.879 18.199 479.051 18.363 479.273 18.477 cv
479.488 18.598 479.758 18.656 480.082 18.652 cv
480.375 18.656 480.633 18.602 480.855 18.492 cv
481.07 18.387 481.25 18.234 481.391 18.027 cv
481.531 17.828 481.633 17.582 481.703 17.293 cv
481.766 17.008 481.801 16.68 481.805 16.305 cv
cp
f
491.973 19.773 mo
491.969 19.836 491.957 19.883 491.934 19.918 cv
491.906 19.961 491.859 19.992 491.801 20.016 cv
491.734 20.039 491.652 20.055 491.547 20.07 cv
491.441 20.078 491.309 20.086 491.156 20.086 cv
490.984 20.086 490.852 20.078 490.75 20.07 cv
490.645 20.055 490.559 20.039 490.496 20.016 cv
490.43 19.992 490.383 19.961 490.355 19.918 cv
490.324 19.883 490.309 19.836 490.313 19.773 cv
490.313 19.004 li
489.953 19.391 489.578 19.687 489.188 19.898 cv
488.789 20.109 488.355 20.215 487.883 20.219 cv
487.348 20.215 486.898 20.113 486.535 19.91 cv
486.168 19.707 485.871 19.434 485.641 19.082 cv
485.406 18.738 485.238 18.332 485.137 17.863 cv
485.035 17.402 484.984 16.91 484.984 16.391 cv
484.984 15.777 485.047 15.223 485.18 14.727 cv
485.309 14.234 485.504 13.812 485.762 13.465 cv
486.016 13.117 486.332 12.852 486.711 12.66 cv
487.09 12.477 487.527 12.383 488.023 12.379 cv
488.41 12.383 488.762 12.461 489.082 12.617 cv
489.395 12.777 489.711 13.008 490.023 13.312 cv
490.023 9.55103 li
490.023 9.5 490.035 9.453 490.066 9.40997 cv
490.09 9.37097 490.145 9.336 490.223 9.30499 cv
490.297 9.27698 490.395 9.258 490.523 9.23798 cv
490.645 9.22699 490.805 9.21899 491 9.21503 cv
491.191 9.21899 491.348 9.22699 491.473 9.23798 cv
491.594 9.258 491.695 9.27698 491.77 9.30499 cv
491.84 9.336 491.891 9.37097 491.926 9.40997 cv
491.953 9.453 491.969 9.5 491.973 9.55103 cv
cp
490.023 15.129 mo
489.742 14.777 489.473 14.508 489.219 14.32 cv
488.957 14.133 488.688 14.039 488.41 14.039 cv
488.156 14.039 487.938 14.105 487.754 14.23 cv
487.566 14.363 487.418 14.531 487.309 14.742 cv
487.195 14.953 487.113 15.191 487.059 15.453 cv
487.004 15.719 486.977 15.988 486.977 16.258 cv
486.977 16.555 487 16.836 487.047 17.109 cv
487.094 17.387 487.168 17.633 487.277 17.848 cv
487.379 18.062 487.523 18.234 487.703 18.363 cv
487.879 18.496 488.102 18.562 488.371 18.559 cv
488.504 18.562 488.633 18.543 488.766 18.5 cv
488.891 18.465 489.023 18.402 489.156 18.309 cv
489.289 18.223 489.426 18.105 489.566 17.961 cv
489.707 17.82 489.859 17.645 490.023 17.437 cv
cp
f
500.375 16.098 mo
500.371 16.336 500.32 16.512 500.215 16.625 cv
500.105 16.742 499.957 16.801 499.777 16.797 cv
495.543 16.797 li
495.539 17.098 495.574 17.367 495.648 17.605 cv
495.715 17.848 495.828 18.051 495.984 18.219 cv
496.137 18.391 496.332 18.52 496.574 18.605 cv
496.813 18.695 497.102 18.738 497.445 18.738 cv
497.785 18.738 498.086 18.715 498.348 18.664 cv
498.605 18.617 498.832 18.562 499.023 18.5 cv
499.211 18.441 499.367 18.387 499.496 18.336 cv
499.617 18.289 499.719 18.266 499.801 18.262 cv
499.844 18.266 499.883 18.273 499.918 18.289 cv
499.945 18.309 499.973 18.34 499.992 18.387 cv
500.012 18.434 500.023 18.5 500.035 18.586 cv
500.039 18.672 500.043 18.781 500.047 18.91 cv
500.043 19.027 500.043 19.125 500.039 19.203 cv
500.031 19.285 500.023 19.352 500.016 19.406 cv
500.004 19.465 499.988 19.516 499.969 19.551 cv
499.949 19.594 499.922 19.629 499.891 19.664 cv
499.855 19.703 499.762 19.754 499.613 19.812 cv
499.457 19.879 499.266 19.941 499.035 19.996 cv
498.797 20.059 498.527 20.105 498.23 20.152 cv
497.926 20.191 497.605 20.215 497.266 20.219 cv
496.645 20.215 496.102 20.141 495.641 19.984 cv
495.172 19.832 494.785 19.594 494.477 19.277 cv
494.16 18.961 493.926 18.562 493.777 18.078 cv
493.621 17.598 493.547 17.031 493.551 16.375 cv
493.547 15.762 493.625 15.203 493.789 14.707 cv
493.945 14.211 494.18 13.793 494.492 13.445 cv
494.797 13.102 495.172 12.836 495.609 12.652 cv
496.047 12.473 496.539 12.383 497.094 12.379 cv
497.672 12.383 498.172 12.469 498.586 12.637 cv
499 12.812 499.336 13.051 499.602 13.352 cv
499.863 13.656 500.059 14.016 500.188 14.43 cv
500.309 14.848 500.371 15.297 500.375 15.785 cv
cp
498.473 15.535 mo
498.484 14.984 498.375 14.551 498.141 14.238 cv
497.906 13.926 497.539 13.77 497.047 13.766 cv
496.797 13.77 496.582 13.816 496.398 13.906 cv
496.211 14.004 496.059 14.129 495.938 14.285 cv
495.813 14.445 495.719 14.633 495.656 14.848 cv
495.59 15.062 495.551 15.293 495.543 15.535 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
