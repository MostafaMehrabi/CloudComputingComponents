%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: EnergyConsumption-LocalMode.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: mmeh012
%%CreationDate: 13/12/2018, 12:16:02 p.m.
%%BoundingBox: 0 0 711 564
%%HiResBoundingBox: 0 0 710.0400 563.5201
%%CropBox: 0 0 710.0400 563.5201
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 535 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="cairo 1.11.2 (http://cairographics.org)"
   pdf:Producer="cairo 1.11.2 (http://cairographics.org)"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -563.52 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 563.52 li
710.04 563.52 li
710.04 0 li
cp
clp
gsave
0 563.52 mo
711 563.52 li
711 -.47998 li
0 -.47998 li
cp
clp
0 0 mo
710.039 0 li
710.039 563.52 li
0 563.52 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.72 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
76.199 496.559 mo
692.641 496.559 li
76.199 462.238 mo
692.641 462.238 li
76.199 428.039 mo
692.641 428.039 li
76.199 393.84 mo
692.641 393.84 li
76.199 359.52 mo
692.641 359.52 li
76.199 325.32 mo
692.641 325.32 li
76.199 291.121 mo
692.641 291.121 li
76.199 256.801 mo
692.641 256.801 li
76.199 222.602 mo
692.641 222.602 li
76.199 188.398 mo
692.641 188.398 li
76.199 154.078 mo
692.641 154.078 li
76.199 119.879 mo
692.641 119.879 li
76.199 85.68 mo
692.641 85.68 li
76.199 51.359 mo
692.641 51.359 li
.140414 .108034 .108034 0 cmyk
@
76.199 479.398 mo
692.641 479.398 li
76.199 445.199 mo
692.641 445.199 li
76.199 410.879 mo
692.641 410.879 li
76.199 376.68 mo
692.641 376.68 li
76.199 342.48 mo
692.641 342.48 li
76.199 308.16 mo
692.641 308.16 li
76.199 273.961 mo
692.641 273.961 li
76.199 239.762 mo
692.641 239.762 li
76.199 205.441 mo
692.641 205.441 li
76.199 171.238 mo
692.641 171.238 li
76.199 137.039 mo
692.641 137.039 li
76.199 102.719 mo
692.641 102.719 li
76.199 68.52 mo
692.641 68.52 li
76.199 34.32 mo
692.641 34.32 li
.328344 .284215 .278569 .000915541 cmyk
@
114.719 34.32 mo
114.719 513.602 li
191.762 34.32 mo
191.762 513.602 li
268.801 34.32 mo
268.801 513.602 li
345.961 34.32 mo
345.961 513.602 li
423 34.32 mo
423 513.602 li
500.039 34.32 mo
500.039 513.602 li
577.078 34.32 mo
577.078 513.602 li
654.121 34.32 mo
654.121 513.602 li
.178592 .148898 .143923 0 cmyk
@
76.199 34.32 mo
76.199 513.602 li
153.238 34.32 mo
153.238 513.602 li
230.281 34.32 mo
230.281 513.602 li
307.32 34.32 mo
307.32 513.602 li
384.48 34.32 mo
384.48 513.602 li
461.52 34.32 mo
461.52 513.602 li
538.559 34.32 mo
538.559 513.602 li
615.602 34.32 mo
615.602 513.602 li
692.641 34.32 mo
692.641 513.602 li
.328344 .284215 .278569 .000915541 cmyk
@
38.398 504.359 mo
63.238 504.359 li
63.238 521.398 li
38.398 521.398 li
cp
0 0 0 0 cmyk
ef
38.398 470.039 mo
63.238 470.039 li
63.238 487.199 li
38.398 487.199 li
cp
ef
38.398 435.84 mo
63.238 435.84 li
63.238 453 li
38.398 453 li
cp
ef
38.398 401.641 mo
63.238 401.641 li
63.238 418.68 li
38.398 418.68 li
cp
ef
38.398 367.32 mo
63.238 367.32 li
63.238 384.48 li
38.398 384.48 li
cp
ef
38.398 333.121 mo
63.238 333.121 li
63.238 350.281 li
38.398 350.281 li
cp
ef
38.398 298.922 mo
63.238 298.922 li
63.238 315.961 li
38.398 315.961 li
cp
ef
38.398 264.602 mo
63.238 264.602 li
63.238 281.762 li
38.398 281.762 li
cp
ef
31.32 230.398 mo
63.238 230.398 li
63.238 247.558 li
31.32 247.558 li
cp
ef
31.32 196.199 mo
63.238 196.199 li
63.238 213.238 li
31.32 213.238 li
cp
ef
31.32 161.879 mo
63.238 161.879 li
63.238 179.039 li
31.32 179.039 li
cp
ef
31.32 127.68 mo
63.238 127.68 li
63.238 144.84 li
31.32 144.84 li
cp
ef
31.32 93.48 mo
63.238 93.48 li
63.238 110.519 li
31.32 110.519 li
cp
ef
31.32 59.16 mo
63.238 59.16 li
63.238 76.32 li
31.32 76.32 li
cp
ef
31.32 24.961 mo
63.238 24.961 li
63.238 42 li
31.32 42 li
cp
ef
.96 lw
76.199 513.602 mo
692.641 513.602 li
.367803 .29575 .300999 .00198367 cmyk
@
76.199 513.602 mo
76.199 518.039 li
153.238 513.602 mo
153.238 518.039 li
230.281 513.602 mo
230.281 518.039 li
307.32 513.602 mo
307.32 518.039 li
384.48 513.602 mo
384.48 518.039 li
461.52 513.602 mo
461.52 518.039 li
538.559 513.602 mo
538.559 518.039 li
615.602 513.602 mo
615.602 518.039 li
692.641 513.602 mo
692.641 518.039 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
1 lc
76.199 157.801 mo
153.238 93.84 li
230.281 57.121 li
307.32 158.398 li
384.48 139.559 li
461.52 138.84 li
538.559 139.199 li
615.602 138.359 li
692.641 138.359 li
.62768 .285466 0 0 cmyk
@
grestore
1 lw
81.129 162.859 mo
71.051 152.781 li
71.051 162.859 mo
81.129 152.781 li
.62768 .285466 0 0 cmyk
@
158.289 98.781 mo
148.211 88.699 li
148.211 98.781 mo
158.289 88.699 li
@
235.328 62.059 mo
225.25 51.98 li
225.25 62.059 mo
235.328 51.98 li
@
312.371 163.34 mo
302.289 153.262 li
302.289 163.34 mo
312.371 153.262 li
@
389.41 144.621 mo
379.328 134.539 li
379.328 144.621 mo
389.41 134.539 li
@
466.449 143.898 mo
456.371 133.82 li
456.371 143.898 mo
466.449 133.82 li
@
543.488 144.262 mo
533.41 134.18 li
533.41 144.262 mo
543.488 134.18 li
@
620.648 143.301 mo
610.57 133.219 li
610.57 143.301 mo
620.648 133.219 li
@
697.691 143.301 mo
687.609 133.219 li
687.609 143.301 mo
697.691 133.219 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
.96 lw
1 lc
76.199 226.68 mo
153.238 243.84 li
230.281 234.961 li
307.32 318.961 li
384.48 271.68 li
461.52 271.441 li
538.559 270.961 li
615.602 271.441 li
692.641 270.961 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
81.129 231.621 mo
71.051 221.539 li
71.051 231.621 mo
81.129 221.539 li
.0319219 .621851 .911223 .000427253 cmyk
@
158.289 248.898 mo
148.211 238.82 li
148.211 248.898 mo
158.289 238.82 li
@
235.328 239.898 mo
225.25 229.82 li
225.25 239.898 mo
235.328 229.82 li
@
312.371 323.898 mo
302.289 313.82 li
302.289 323.898 mo
312.371 313.82 li
@
389.41 276.738 mo
379.328 266.66 li
379.328 276.738 mo
389.41 266.66 li
@
466.449 276.5 mo
456.371 266.422 li
456.371 276.5 mo
466.449 266.422 li
@
543.488 276.02 mo
533.41 265.941 li
533.41 276.02 mo
543.488 265.941 li
@
620.648 276.5 mo
610.57 266.422 li
610.57 276.5 mo
620.648 266.422 li
@
697.691 276.02 mo
687.609 265.941 li
687.609 276.02 mo
697.691 265.941 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
.96 lw
1 lc
76.199 210.121 mo
153.238 236.281 li
230.281 298.199 li
307.32 356.641 li
384.48 269.641 li
461.52 266.879 li
538.559 280.559 li
615.602 272.281 li
692.641 276.719 li
.619135 .109529 .981689 .00570687 cmyk
@
grestore
81.129 215.059 mo
71.051 204.98 li
71.051 215.059 mo
81.129 204.98 li
.619135 .109529 .981689 .00570687 cmyk
@
158.289 241.219 mo
148.211 231.141 li
148.211 241.219 mo
158.289 231.141 li
@
235.328 303.141 mo
225.25 293.059 li
225.25 303.141 mo
235.328 293.059 li
@
312.371 361.578 mo
302.289 351.5 li
302.289 361.578 mo
312.371 351.5 li
@
389.41 274.578 mo
379.328 264.5 li
379.328 274.578 mo
389.41 264.5 li
@
466.449 271.82 mo
456.371 261.738 li
456.371 271.82 mo
466.449 261.738 li
@
543.488 285.5 mo
533.41 275.422 li
533.41 285.5 mo
543.488 275.422 li
@
620.648 277.34 mo
610.57 267.262 li
610.57 277.34 mo
620.648 267.262 li
@
697.691 281.66 mo
687.609 271.578 li
687.609 281.66 mo
697.691 271.578 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
.96 lw
1 lc
76.199 169.922 mo
153.238 278.762 li
230.281 352.922 li
307.32 295.559 li
384.48 303 li
461.52 283.199 li
538.559 298.078 li
615.602 285.359 li
692.641 292.078 li
0 .990631 1 .000396735 cmyk
@
grestore
81.129 174.98 mo
71.051 164.898 li
71.051 174.98 mo
81.129 164.898 li
0 .990631 1 .000396735 cmyk
@
158.289 283.82 mo
148.211 273.738 li
148.211 283.82 mo
158.289 273.738 li
@
235.328 357.859 mo
225.25 347.781 li
225.25 357.859 mo
235.328 347.781 li
@
312.371 300.5 mo
302.289 290.422 li
302.289 300.5 mo
312.371 290.422 li
@
389.41 307.941 mo
379.328 297.859 li
379.328 307.941 mo
389.41 297.859 li
@
466.449 288.262 mo
456.371 278.18 li
456.371 288.262 mo
466.449 278.18 li
@
543.488 303.02 mo
533.41 292.941 li
533.41 303.02 mo
543.488 292.941 li
@
620.648 290.422 mo
610.57 280.34 li
610.57 290.422 mo
620.648 280.34 li
@
697.691 297.02 mo
687.609 286.941 li
687.609 297.02 mo
697.691 286.941 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
76.199 182.762 mo
153.238 321.961 li
230.281 352.922 li
307.32 298.801 li
384.48 294.121 li
461.52 299.039 li
538.559 287.52 li
615.602 300.602 li
692.641 290.16 li
.62768 .285466 0 0 cmyk
@
grestore
80.648 187.34 mo
71.531 178.219 li
71.531 187.34 mo
80.648 178.219 li
.62768 .285466 0 0 cmyk
@
157.809 326.422 mo
148.691 317.301 li
148.691 326.422 mo
157.809 317.301 li
@
234.852 357.379 mo
225.73 348.262 li
225.73 357.379 mo
234.852 348.262 li
@
311.891 303.262 mo
302.77 294.141 li
302.77 303.262 mo
311.891 294.141 li
@
388.93 298.578 mo
379.809 289.461 li
379.809 298.578 mo
388.93 289.461 li
@
465.969 303.5 mo
456.852 294.379 li
456.852 303.5 mo
465.969 294.379 li
@
543.012 291.98 mo
533.891 282.859 li
533.891 291.98 mo
543.012 282.859 li
@
620.172 305.18 mo
611.051 296.059 li
611.051 305.18 mo
620.172 296.059 li
@
697.211 294.621 mo
688.09 285.5 li
688.09 294.621 mo
697.211 285.5 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
76.199 179.281 mo
153.238 276 li
230.281 364.078 li
307.32 349.922 li
384.48 299.641 li
461.52 301.68 li
538.559 305.641 li
615.602 292.441 li
692.641 338.398 li
.0319219 .621851 .911223 .000427253 cmyk
@
grestore
81.129 184.34 mo
71.051 174.262 li
71.051 184.34 mo
81.129 174.262 li
.0319219 .621851 .911223 .000427253 cmyk
@
158.289 281.059 mo
148.211 270.98 li
148.211 281.059 mo
158.289 270.98 li
@
235.328 369.141 mo
225.25 359.059 li
225.25 369.141 mo
235.328 359.059 li
@
312.371 354.98 mo
302.289 344.898 li
302.289 354.98 mo
312.371 344.898 li
@
389.41 304.699 mo
379.328 294.621 li
379.328 304.699 mo
389.41 294.621 li
@
466.449 306.621 mo
456.371 296.539 li
456.371 306.621 mo
466.449 296.539 li
@
543.488 310.578 mo
533.41 300.5 li
533.41 310.578 mo
543.488 300.5 li
@
620.648 297.379 mo
610.57 287.301 li
610.57 297.379 mo
620.648 287.301 li
@
697.691 343.34 mo
687.609 333.262 li
687.609 343.34 mo
697.691 333.262 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
76.199 179.281 mo
153.238 279.359 li
230.281 351.602 li
307.32 335.16 li
384.48 291.48 li
461.52 292.078 li
538.559 308.879 li
615.602 305.641 li
692.641 332.16 li
.619135 .109529 .981689 .00570687 cmyk
@
grestore
81.129 184.34 mo
71.051 174.262 li
71.051 184.34 mo
81.129 174.262 li
.619135 .109529 .981689 .00570687 cmyk
@
158.289 284.422 mo
148.211 274.34 li
148.211 284.422 mo
158.289 274.34 li
@
235.328 356.66 mo
225.25 346.578 li
225.25 356.66 mo
235.328 346.578 li
@
312.371 340.219 mo
302.289 330.141 li
302.289 340.219 mo
312.371 330.141 li
@
389.41 296.422 mo
379.328 286.34 li
379.328 296.422 mo
389.41 286.34 li
@
466.449 297.02 mo
456.371 286.941 li
456.371 297.02 mo
466.449 286.941 li
@
543.488 313.82 mo
533.41 303.738 li
533.41 313.82 mo
543.488 303.738 li
@
620.648 310.578 mo
610.57 300.5 li
610.57 310.578 mo
620.648 300.5 li
@
697.691 337.102 mo
687.609 327.02 li
687.609 337.102 mo
697.691 327.02 li
@
gsave
76.199 34.199 mo
693.359 34.199 li
693.359 514.32 li
76.199 514.32 li
cp
clp
.96 lw
1 lc
[2.88 3.84 ] 0 dsh
76.199 168.719 mo
153.238 279.359 li
230.281 368.039 li
307.32 329.52 li
384.48 310.078 li
461.52 291.719 li
538.559 303.961 li
615.602 301.32 li
692.641 334.559 li
0 .990631 1 .000396735 cmyk
@
grestore
81.129 173.66 mo
71.051 163.578 li
71.051 173.66 mo
81.129 163.578 li
0 .990631 1 .000396735 cmyk
@
158.289 284.422 mo
148.211 274.34 li
148.211 284.422 mo
158.289 274.34 li
@
235.328 372.98 mo
225.25 362.898 li
225.25 372.98 mo
235.328 362.898 li
@
312.371 334.578 mo
302.289 324.5 li
302.289 334.578 mo
312.371 324.5 li
@
389.41 315.141 mo
379.328 305.059 li
379.328 315.141 mo
389.41 305.059 li
@
466.449 296.781 mo
456.371 286.699 li
456.371 296.781 mo
466.449 286.699 li
@
543.488 308.898 mo
533.41 298.82 li
533.41 308.898 mo
543.488 298.82 li
@
620.648 306.262 mo
610.57 296.18 li
610.57 306.262 mo
620.648 296.18 li
@
697.691 339.5 mo
687.609 329.422 li
687.609 339.5 mo
697.691 329.422 li
@
38.395 504.355 mo
63.215 504.355 li
63.215 521.445 li
38.395 521.445 li
cp
0 0 0 0 cmyk
ef
45.027 513.32 mo
45.023 514.004 44.973 514.625 44.867 515.187 cv
44.758 515.75 44.578 516.234 44.332 516.637 cv
44.078 517.043 43.75 517.355 43.352 517.574 cv
42.945 517.797 42.453 517.906 41.867 517.906 cv
41.309 517.906 40.836 517.809 40.457 517.609 cv
40.074 517.414 39.77 517.121 39.535 516.734 cv
39.301 516.348 39.133 515.875 39.039 515.309 cv
38.938 514.746 38.891 514.098 38.891 513.363 cv
38.891 512.691 38.945 512.07 39.055 511.504 cv
39.164 510.941 39.34 510.457 39.59 510.051 cv
39.832 509.648 40.156 509.336 40.563 509.109 cv
40.961 508.891 41.457 508.777 42.047 508.777 cv
42.605 508.777 43.078 508.879 43.461 509.074 cv
43.844 509.277 44.148 509.57 44.383 509.953 cv
44.613 510.344 44.781 510.816 44.879 511.379 cv
44.977 511.941 45.023 512.59 45.027 513.32 cv
cp
43.82 513.402 mo
43.816 512.961 43.801 512.562 43.773 512.211 cv
43.738 511.859 43.691 511.551 43.633 511.281 cv
43.566 511.012 43.488 510.781 43.391 510.586 cv
43.293 510.395 43.176 510.234 43.039 510.105 cv
42.898 509.98 42.738 509.887 42.566 509.828 cv
42.387 509.773 42.191 509.746 41.977 509.742 cv
41.586 509.746 41.27 509.836 41.031 510.02 cv
40.785 510.203 40.594 510.457 40.457 510.773 cv
40.316 511.094 40.223 511.465 40.172 511.895 cv
40.121 512.324 40.098 512.789 40.098 513.281 cv
40.098 513.945 40.129 514.508 40.199 514.969 cv
40.266 515.437 40.375 515.816 40.527 516.105 cv
40.672 516.402 40.863 516.613 41.094 516.742 cv
41.324 516.879 41.605 516.945 41.938 516.941 cv
42.191 516.945 42.414 516.906 42.609 516.82 cv
42.801 516.742 42.969 516.621 43.109 516.465 cv
43.25 516.312 43.363 516.129 43.457 515.914 cv
43.543 515.699 43.617 515.461 43.676 515.199 cv
43.727 514.941 43.766 514.66 43.789 514.355 cv
43.809 514.051 43.816 513.734 43.82 513.402 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 517.031 mo
48.027 517.359 47.973 517.574 47.867 517.68 cv
47.758 517.785 47.563 517.836 47.281 517.84 cv
47.004 517.836 46.813 517.785 46.711 517.684 cv
46.602 517.578 46.551 517.367 46.555 517.051 cv
46.551 516.727 46.605 516.512 46.715 516.402 cv
46.82 516.297 47.016 516.242 47.301 516.242 cv
47.574 516.242 47.762 516.297 47.871 516.402 cv
47.973 516.508 48.027 516.719 48.027 517.031 cv
cp
f
55.684 513.32 mo
55.68 514.004 55.629 514.625 55.523 515.187 cv
55.414 515.75 55.234 516.234 54.988 516.637 cv
54.734 517.043 54.406 517.355 54.008 517.574 cv
53.602 517.797 53.109 517.906 52.523 517.906 cv
51.965 517.906 51.492 517.809 51.113 517.609 cv
50.73 517.414 50.426 517.121 50.191 516.734 cv
49.957 516.348 49.789 515.875 49.695 515.309 cv
49.594 514.746 49.547 514.098 49.547 513.363 cv
49.547 512.691 49.602 512.07 49.711 511.504 cv
49.82 510.941 49.996 510.457 50.246 510.051 cv
50.488 509.648 50.813 509.336 51.219 509.109 cv
51.617 508.891 52.113 508.777 52.703 508.777 cv
53.262 508.777 53.734 508.879 54.117 509.074 cv
54.5 509.277 54.805 509.57 55.039 509.953 cv
55.27 510.344 55.438 510.816 55.535 511.379 cv
55.633 511.941 55.68 512.59 55.684 513.32 cv
cp
54.477 513.402 mo
54.473 512.961 54.457 512.562 54.43 512.211 cv
54.395 511.859 54.348 511.551 54.289 511.281 cv
54.223 511.012 54.145 510.781 54.047 510.586 cv
53.949 510.395 53.832 510.234 53.695 510.105 cv
53.555 509.98 53.395 509.887 53.223 509.828 cv
53.043 509.773 52.848 509.746 52.633 509.742 cv
52.242 509.746 51.926 509.836 51.688 510.02 cv
51.441 510.203 51.25 510.457 51.113 510.773 cv
50.973 511.094 50.879 511.465 50.828 511.895 cv
50.777 512.324 50.754 512.789 50.754 513.281 cv
50.754 513.945 50.785 514.508 50.855 514.969 cv
50.922 515.437 51.031 515.816 51.184 516.105 cv
51.328 516.402 51.52 516.613 51.75 516.742 cv
51.98 516.879 52.262 516.945 52.594 516.941 cv
52.848 516.945 53.07 516.906 53.266 516.82 cv
53.457 516.742 53.625 516.621 53.766 516.465 cv
53.906 516.312 54.02 516.129 54.113 515.914 cv
54.199 515.699 54.273 515.461 54.332 515.199 cv
54.383 514.941 54.422 514.66 54.445 514.355 cv
54.465 514.051 54.473 513.734 54.477 513.402 cv
cp
f
62.805 513.32 mo
62.801 514.004 62.75 514.625 62.645 515.187 cv
62.535 515.75 62.355 516.234 62.109 516.637 cv
61.855 517.043 61.527 517.355 61.129 517.574 cv
60.723 517.797 60.23 517.906 59.645 517.906 cv
59.086 517.906 58.613 517.809 58.234 517.609 cv
57.852 517.414 57.547 517.121 57.313 516.734 cv
57.078 516.348 56.91 515.875 56.816 515.309 cv
56.715 514.746 56.668 514.098 56.668 513.363 cv
56.668 512.691 56.723 512.07 56.832 511.504 cv
56.941 510.941 57.117 510.457 57.367 510.051 cv
57.609 509.648 57.934 509.336 58.34 509.109 cv
58.738 508.891 59.234 508.777 59.824 508.777 cv
60.383 508.777 60.855 508.879 61.238 509.074 cv
61.621 509.277 61.926 509.57 62.16 509.953 cv
62.391 510.344 62.559 510.816 62.656 511.379 cv
62.754 511.941 62.801 512.59 62.805 513.32 cv
cp
61.598 513.402 mo
61.594 512.961 61.578 512.562 61.551 512.211 cv
61.516 511.859 61.469 511.551 61.41 511.281 cv
61.344 511.012 61.266 510.781 61.168 510.586 cv
61.07 510.395 60.953 510.234 60.816 510.105 cv
60.676 509.98 60.516 509.887 60.344 509.828 cv
60.164 509.773 59.969 509.746 59.754 509.742 cv
59.363 509.746 59.047 509.836 58.809 510.02 cv
58.563 510.203 58.371 510.457 58.234 510.773 cv
58.094 511.094 58 511.465 57.949 511.895 cv
57.898 512.324 57.875 512.789 57.875 513.281 cv
57.875 513.945 57.906 514.508 57.977 514.969 cv
58.043 515.437 58.152 515.816 58.305 516.105 cv
58.449 516.402 58.641 516.613 58.871 516.742 cv
59.102 516.879 59.383 516.945 59.715 516.941 cv
59.969 516.945 60.191 516.906 60.387 516.82 cv
60.578 516.742 60.746 516.621 60.887 516.465 cv
61.027 516.312 61.141 516.129 61.234 515.914 cv
61.32 515.699 61.395 515.461 61.453 515.199 cv
61.504 514.941 61.543 514.66 61.566 514.355 cv
61.586 514.051 61.594 513.734 61.598 513.402 cv
cp
f
38.395 470.117 mo
63.215 470.117 li
63.215 487.207 li
38.395 487.207 li
cp
0 0 0 0 cmyk
ef
44.754 483.062 mo
44.75 483.152 44.742 483.223 44.73 483.281 cv
44.715 483.344 44.695 483.395 44.676 483.426 cv
44.652 483.465 44.629 483.488 44.598 483.504 cv
44.566 483.52 44.535 483.527 44.508 483.527 cv
39.871 483.527 li
39.836 483.527 39.809 483.52 39.781 483.504 cv
39.754 483.488 39.727 483.465 39.703 483.426 cv
39.676 483.395 39.656 483.344 39.645 483.281 cv
39.629 483.223 39.621 483.152 39.625 483.062 cv
39.621 482.984 39.629 482.91 39.645 482.848 cv
39.656 482.789 39.672 482.742 39.695 482.703 cv
39.711 482.668 39.738 482.637 39.77 482.613 cv
39.801 482.594 39.832 482.586 39.871 482.582 cv
41.723 482.582 li
41.723 475.836 li
40.008 476.855 li
39.918 476.906 39.848 476.934 39.801 476.941 cv
39.746 476.949 39.703 476.941 39.672 476.91 cv
39.637 476.883 39.617 476.832 39.605 476.762 cv
39.594 476.695 39.586 476.609 39.59 476.5 cv
39.586 476.426 39.59 476.359 39.602 476.301 cv
39.605 476.25 39.617 476.203 39.633 476.164 cv
39.645 476.129 39.664 476.098 39.688 476.07 cv
39.711 476.043 39.742 476.016 39.789 475.988 cv
41.832 474.676 li
41.848 474.664 41.867 474.652 41.898 474.645 cv
41.922 474.637 41.957 474.629 42.004 474.617 cv
42.043 474.609 42.094 474.602 42.148 474.598 cv
42.203 474.598 42.27 474.598 42.355 474.594 cv
42.461 474.598 42.555 474.602 42.629 474.609 cv
42.699 474.617 42.754 474.633 42.801 474.648 cv
42.84 474.668 42.867 474.687 42.883 474.711 cv
42.891 474.738 42.898 474.762 42.902 474.785 cv
42.902 482.582 li
44.508 482.582 li
44.543 482.586 44.578 482.594 44.609 482.613 cv
44.641 482.637 44.664 482.668 44.688 482.703 cv
44.703 482.742 44.719 482.789 44.734 482.848 cv
44.742 482.91 44.75 482.984 44.754 483.062 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 482.781 mo
48.027 483.109 47.973 483.324 47.867 483.43 cv
47.758 483.535 47.563 483.586 47.281 483.59 cv
47.004 483.586 46.813 483.535 46.711 483.434 cv
46.602 483.328 46.551 483.117 46.555 482.801 cv
46.551 482.477 46.605 482.262 46.715 482.152 cv
46.82 482.047 47.016 481.992 47.301 481.992 cv
47.574 481.992 47.762 482.047 47.871 482.152 cv
47.973 482.258 48.027 482.469 48.027 482.781 cv
cp
f
55.391 483.02 mo
55.387 483.105 55.383 483.18 55.371 483.242 cv
55.359 483.309 55.344 483.363 55.324 483.402 cv
55.301 483.449 55.273 483.48 55.242 483.496 cv
55.207 483.52 55.168 483.527 55.129 483.527 cv
50.227 483.527 li
50.164 483.527 50.105 483.52 50.059 483.504 cv
50.008 483.488 49.969 483.465 49.934 483.426 cv
49.898 483.395 49.871 483.34 49.859 483.27 cv
49.84 483.199 49.832 483.113 49.836 483.012 cv
49.832 482.922 49.836 482.844 49.844 482.773 cv
49.848 482.707 49.863 482.648 49.891 482.594 cv
49.914 482.543 49.945 482.488 49.98 482.434 cv
50.016 482.383 50.059 482.328 50.117 482.266 cv
51.891 480.441 li
52.301 480.023 52.629 479.648 52.879 479.312 cv
53.125 478.984 53.316 478.68 53.449 478.402 cv
53.582 478.129 53.668 477.879 53.715 477.652 cv
53.754 477.43 53.777 477.219 53.777 477.023 cv
53.777 476.828 53.742 476.645 53.676 476.465 cv
53.609 476.293 53.516 476.137 53.391 476 cv
53.266 475.871 53.109 475.766 52.922 475.684 cv
52.734 475.609 52.516 475.57 52.27 475.566 cv
51.98 475.57 51.723 475.609 51.496 475.684 cv
51.266 475.766 51.066 475.852 50.895 475.937 cv
50.723 476.031 50.578 476.113 50.461 476.191 cv
50.344 476.27 50.258 476.309 50.207 476.309 cv
50.172 476.309 50.141 476.301 50.117 476.281 cv
50.086 476.266 50.066 476.234 50.051 476.191 cv
50.035 476.152 50.02 476.098 50.012 476.027 cv
50 475.961 49.996 475.879 50 475.781 cv
49.996 475.715 50 475.656 50.008 475.605 cv
50.012 475.555 50.02 475.512 50.031 475.473 cv
50.039 475.437 50.055 475.402 50.074 475.371 cv
50.094 475.34 50.129 475.301 50.188 475.25 cv
50.238 475.203 50.332 475.137 50.469 475.055 cv
50.602 474.973 50.773 474.895 50.977 474.812 cv
51.18 474.734 51.402 474.664 51.648 474.609 cv
51.891 474.555 52.148 474.527 52.422 474.527 cv
52.848 474.527 53.223 474.59 53.547 474.711 cv
53.867 474.832 54.133 474.996 54.348 475.207 cv
54.559 475.418 54.719 475.664 54.824 475.937 cv
54.93 476.219 54.984 476.516 54.984 476.828 cv
54.984 477.117 54.957 477.398 54.906 477.676 cv
54.855 477.961 54.75 478.266 54.59 478.59 cv
54.426 478.918 54.191 479.281 53.887 479.68 cv
53.578 480.082 53.172 480.543 52.668 481.059 cv
51.262 482.527 li
55.121 482.527 li
55.152 482.531 55.188 482.543 55.227 482.559 cv
55.258 482.582 55.289 482.613 55.316 482.652 cv
55.34 482.695 55.359 482.746 55.371 482.805 cv
55.383 482.871 55.387 482.941 55.391 483.02 cv
cp
f
62.469 480.676 mo
62.469 481.152 62.387 481.574 62.227 481.945 cv
62.066 482.316 61.84 482.629 61.551 482.883 cv
61.254 483.137 60.906 483.332 60.504 483.461 cv
60.098 483.594 59.648 483.656 59.156 483.656 cv
58.879 483.656 58.617 483.637 58.375 483.598 cv
58.125 483.559 57.906 483.512 57.719 483.457 cv
57.523 483.402 57.367 483.348 57.242 483.289 cv
57.117 483.238 57.039 483.195 57.008 483.16 cv
56.973 483.129 56.949 483.098 56.938 483.07 cv
56.922 483.043 56.906 483.012 56.898 482.969 cv
56.883 482.934 56.875 482.883 56.875 482.82 cv
56.867 482.762 56.867 482.691 56.867 482.609 cv
56.867 482.535 56.871 482.465 56.879 482.402 cv
56.887 482.34 56.898 482.289 56.918 482.25 cv
56.934 482.211 56.953 482.184 56.98 482.164 cv
57.004 482.148 57.035 482.141 57.066 482.137 cv
57.113 482.141 57.184 482.168 57.277 482.223 cv
57.371 482.281 57.5 482.344 57.664 482.41 cv
57.828 482.477 58.027 482.539 58.27 482.598 cv
58.504 482.656 58.789 482.684 59.125 482.684 cv
59.426 482.684 59.707 482.648 59.965 482.574 cv
60.219 482.504 60.441 482.391 60.629 482.234 cv
60.813 482.082 60.957 481.887 61.063 481.648 cv
61.168 481.414 61.219 481.125 61.223 480.785 cv
61.219 480.504 61.176 480.254 61.086 480.035 cv
60.996 479.816 60.859 479.637 60.676 479.492 cv
60.488 479.352 60.254 479.246 59.973 479.172 cv
59.688 479.102 59.348 479.062 58.961 479.062 cv
58.676 479.062 58.438 479.078 58.238 479.105 cv
58.035 479.137 57.848 479.152 57.676 479.148 cv
57.547 479.152 57.453 479.121 57.402 479.059 cv
57.344 479 57.316 478.887 57.32 478.715 cv
57.32 475.102 li
57.316 474.953 57.352 474.844 57.426 474.766 cv
57.492 474.695 57.594 474.656 57.73 474.656 cv
61.66 474.656 li
61.695 474.656 61.73 474.668 61.766 474.687 cv
61.797 474.711 61.824 474.742 61.852 474.781 cv
61.871 474.824 61.887 474.875 61.902 474.937 cv
61.91 475.004 61.918 475.082 61.922 475.164 cv
61.918 475.332 61.895 475.457 61.855 475.547 cv
61.809 475.641 61.75 475.687 61.672 475.684 cv
58.5 475.684 li
58.5 478.172 li
58.652 478.152 58.809 478.141 58.973 478.133 cv
59.129 478.129 59.316 478.125 59.531 478.125 cv
60.016 478.125 60.441 478.187 60.809 478.309 cv
61.172 478.43 61.477 478.602 61.727 478.82 cv
61.969 479.047 62.156 479.312 62.281 479.625 cv
62.406 479.941 62.469 480.293 62.469 480.676 cv
cp
f
38.395 435.879 mo
63.215 435.879 li
63.215 452.969 li
38.395 452.969 li
cp
0 0 0 0 cmyk
ef
44.734 448.773 mo
44.73 448.859 44.727 448.934 44.715 448.996 cv
44.703 449.062 44.688 449.117 44.668 449.156 cv
44.645 449.203 44.617 449.234 44.586 449.25 cv
44.551 449.273 44.512 449.281 44.473 449.281 cv
39.57 449.281 li
39.508 449.281 39.449 449.273 39.402 449.258 cv
39.352 449.242 39.313 449.219 39.277 449.18 cv
39.242 449.148 39.215 449.094 39.203 449.023 cv
39.184 448.953 39.176 448.867 39.18 448.766 cv
39.176 448.676 39.18 448.598 39.188 448.527 cv
39.191 448.461 39.207 448.402 39.234 448.348 cv
39.258 448.297 39.289 448.242 39.324 448.187 cv
39.359 448.137 39.402 448.082 39.461 448.02 cv
41.234 446.195 li
41.645 445.777 41.973 445.402 42.223 445.066 cv
42.469 444.738 42.66 444.434 42.793 444.156 cv
42.926 443.883 43.012 443.633 43.059 443.406 cv
43.098 443.184 43.121 442.973 43.121 442.777 cv
43.121 442.582 43.086 442.398 43.02 442.219 cv
42.953 442.047 42.859 441.891 42.734 441.754 cv
42.609 441.625 42.453 441.52 42.266 441.437 cv
42.078 441.363 41.859 441.324 41.613 441.32 cv
41.324 441.324 41.066 441.363 40.84 441.437 cv
40.609 441.52 40.41 441.605 40.238 441.691 cv
40.066 441.785 39.922 441.867 39.805 441.945 cv
39.688 442.023 39.602 442.062 39.551 442.062 cv
39.516 442.062 39.484 442.055 39.461 442.035 cv
39.43 442.02 39.41 441.988 39.395 441.945 cv
39.379 441.906 39.363 441.852 39.355 441.781 cv
39.344 441.715 39.34 441.633 39.344 441.535 cv
39.34 441.469 39.344 441.41 39.352 441.359 cv
39.355 441.309 39.363 441.266 39.375 441.227 cv
39.383 441.191 39.398 441.156 39.418 441.125 cv
39.438 441.094 39.473 441.055 39.531 441.004 cv
39.582 440.957 39.676 440.891 39.813 440.809 cv
39.945 440.727 40.117 440.648 40.32 440.566 cv
40.523 440.488 40.746 440.418 40.992 440.363 cv
41.234 440.309 41.492 440.281 41.766 440.281 cv
42.191 440.281 42.566 440.344 42.891 440.465 cv
43.211 440.586 43.477 440.75 43.691 440.961 cv
43.902 441.172 44.063 441.418 44.168 441.691 cv
44.273 441.973 44.328 442.27 44.328 442.582 cv
44.328 442.871 44.301 443.152 44.25 443.43 cv
44.199 443.715 44.094 444.02 43.934 444.344 cv
43.77 444.672 43.535 445.035 43.23 445.434 cv
42.922 445.836 42.516 446.297 42.012 446.812 cv
40.605 448.281 li
44.465 448.281 li
44.496 448.285 44.531 448.297 44.57 448.312 cv
44.602 448.336 44.633 448.367 44.66 448.406 cv
44.684 448.449 44.703 448.5 44.715 448.559 cv
44.727 448.625 44.73 448.695 44.734 448.773 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 448.535 mo
48.027 448.863 47.973 449.078 47.867 449.184 cv
47.758 449.289 47.563 449.34 47.281 449.344 cv
47.004 449.34 46.813 449.289 46.711 449.187 cv
46.602 449.082 46.551 448.871 46.555 448.555 cv
46.551 448.23 46.605 448.016 46.715 447.906 cv
46.82 447.801 47.016 447.746 47.301 447.746 cv
47.574 447.746 47.762 447.801 47.871 447.906 cv
47.973 448.012 48.027 448.223 48.027 448.535 cv
cp
f
55.348 446.43 mo
55.348 446.906 55.266 447.328 55.105 447.699 cv
54.945 448.07 54.719 448.383 54.43 448.637 cv
54.133 448.891 53.785 449.086 53.383 449.215 cv
52.977 449.348 52.527 449.41 52.035 449.41 cv
51.758 449.41 51.496 449.391 51.254 449.352 cv
51.004 449.312 50.785 449.266 50.598 449.211 cv
50.402 449.156 50.246 449.102 50.121 449.043 cv
49.996 448.992 49.918 448.949 49.887 448.914 cv
49.852 448.883 49.828 448.852 49.816 448.824 cv
49.801 448.797 49.785 448.766 49.777 448.723 cv
49.762 448.687 49.754 448.637 49.754 448.574 cv
49.746 448.516 49.746 448.445 49.746 448.363 cv
49.746 448.289 49.75 448.219 49.758 448.156 cv
49.766 448.094 49.777 448.043 49.797 448.004 cv
49.813 447.965 49.832 447.937 49.859 447.918 cv
49.883 447.902 49.914 447.895 49.945 447.891 cv
49.992 447.895 50.063 447.922 50.156 447.977 cv
50.25 448.035 50.379 448.098 50.543 448.164 cv
50.707 448.23 50.906 448.293 51.148 448.352 cv
51.383 448.41 51.668 448.437 52.004 448.437 cv
52.305 448.437 52.586 448.402 52.844 448.328 cv
53.098 448.258 53.32 448.145 53.508 447.988 cv
53.691 447.836 53.836 447.641 53.941 447.402 cv
54.047 447.168 54.098 446.879 54.102 446.539 cv
54.098 446.258 54.055 446.008 53.965 445.789 cv
53.875 445.57 53.738 445.391 53.555 445.246 cv
53.367 445.105 53.133 445 52.852 444.926 cv
52.566 444.855 52.227 444.816 51.84 444.816 cv
51.555 444.816 51.316 444.832 51.117 444.859 cv
50.914 444.891 50.727 444.906 50.555 444.902 cv
50.426 444.906 50.332 444.875 50.281 444.812 cv
50.223 444.754 50.195 444.641 50.199 444.469 cv
50.199 440.855 li
50.195 440.707 50.23 440.598 50.305 440.52 cv
50.371 440.449 50.473 440.41 50.609 440.41 cv
54.539 440.41 li
54.574 440.41 54.609 440.422 54.645 440.441 cv
54.676 440.465 54.703 440.496 54.73 440.535 cv
54.75 440.578 54.766 440.629 54.781 440.691 cv
54.789 440.758 54.797 440.836 54.801 440.918 cv
54.797 441.086 54.773 441.211 54.734 441.301 cv
54.688 441.395 54.629 441.441 54.551 441.437 cv
51.379 441.437 li
51.379 443.926 li
51.531 443.906 51.688 443.895 51.852 443.887 cv
52.008 443.883 52.195 443.879 52.41 443.879 cv
52.895 443.879 53.32 443.941 53.688 444.062 cv
54.051 444.184 54.355 444.355 54.605 444.574 cv
54.848 444.801 55.035 445.066 55.16 445.379 cv
55.285 445.695 55.348 446.047 55.348 446.43 cv
cp
f
62.805 444.824 mo
62.801 445.508 62.75 446.129 62.645 446.691 cv
62.535 447.254 62.355 447.738 62.109 448.141 cv
61.855 448.547 61.527 448.859 61.129 449.078 cv
60.723 449.301 60.23 449.41 59.645 449.41 cv
59.086 449.41 58.613 449.312 58.234 449.113 cv
57.852 448.918 57.547 448.625 57.313 448.238 cv
57.078 447.852 56.91 447.379 56.816 446.812 cv
56.715 446.25 56.668 445.602 56.668 444.867 cv
56.668 444.195 56.723 443.574 56.832 443.008 cv
56.941 442.445 57.117 441.961 57.367 441.555 cv
57.609 441.152 57.934 440.84 58.34 440.613 cv
58.738 440.395 59.234 440.281 59.824 440.281 cv
60.383 440.281 60.855 440.383 61.238 440.578 cv
61.621 440.781 61.926 441.074 62.16 441.457 cv
62.391 441.848 62.559 442.32 62.656 442.883 cv
62.754 443.445 62.801 444.094 62.805 444.824 cv
cp
61.598 444.906 mo
61.594 444.465 61.578 444.066 61.551 443.715 cv
61.516 443.363 61.469 443.055 61.41 442.785 cv
61.344 442.516 61.266 442.285 61.168 442.09 cv
61.07 441.898 60.953 441.738 60.816 441.609 cv
60.676 441.484 60.516 441.391 60.344 441.332 cv
60.164 441.277 59.969 441.25 59.754 441.246 cv
59.363 441.25 59.047 441.34 58.809 441.523 cv
58.563 441.707 58.371 441.961 58.234 442.277 cv
58.094 442.598 58 442.969 57.949 443.398 cv
57.898 443.828 57.875 444.293 57.875 444.785 cv
57.875 445.449 57.906 446.012 57.977 446.473 cv
58.043 446.941 58.152 447.32 58.305 447.609 cv
58.449 447.906 58.641 448.117 58.871 448.246 cv
59.102 448.383 59.383 448.449 59.715 448.445 cv
59.969 448.449 60.191 448.41 60.387 448.324 cv
60.578 448.246 60.746 448.125 60.887 447.969 cv
61.027 447.816 61.141 447.633 61.234 447.418 cv
61.32 447.203 61.395 446.965 61.453 446.703 cv
61.504 446.445 61.543 446.164 61.566 445.859 cv
61.586 445.555 61.594 445.238 61.598 444.906 cv
cp
f
38.395 401.641 mo
63.215 401.641 li
63.215 418.731 li
38.395 418.731 li
cp
0 0 0 0 cmyk
ef
44.664 412.496 mo
44.66 412.906 44.59 413.273 44.449 413.598 cv
44.305 413.926 44.102 414.207 43.84 414.437 cv
43.574 414.672 43.246 414.848 42.859 414.973 cv
42.469 415.098 42.031 415.16 41.547 415.16 cv
41.242 415.16 40.965 415.133 40.711 415.086 cv
40.449 415.039 40.219 414.988 40.023 414.918 cv
39.82 414.855 39.656 414.785 39.523 414.715 cv
39.391 414.645 39.305 414.594 39.273 414.559 cv
39.234 414.531 39.211 414.5 39.195 414.465 cv
39.176 414.434 39.156 414.395 39.145 414.348 cv
39.129 414.305 39.121 414.25 39.113 414.18 cv
39.105 414.117 39.102 414.035 39.105 413.934 cv
39.102 413.773 39.117 413.66 39.152 413.594 cv
39.184 413.531 39.23 413.496 39.293 413.496 cv
39.336 413.496 39.418 413.535 39.543 413.605 cv
39.664 413.684 39.824 413.762 40.02 413.844 cv
40.211 413.93 40.438 414.008 40.703 414.078 cv
40.961 414.152 41.254 414.187 41.574 414.187 cv
41.883 414.187 42.152 414.148 42.391 414.07 cv
42.621 413.992 42.82 413.883 42.98 413.742 cv
43.137 413.602 43.254 413.434 43.336 413.238 cv
43.414 413.043 43.453 412.832 43.457 412.605 cv
43.453 412.355 43.402 412.129 43.305 411.926 cv
43.199 411.727 43.051 411.555 42.859 411.406 cv
42.66 411.262 42.422 411.148 42.137 411.07 cv
41.852 410.992 41.527 410.953 41.164 410.953 cv
40.293 410.953 li
40.25 410.953 40.215 410.945 40.18 410.93 cv
40.145 410.914 40.113 410.887 40.09 410.848 cv
40.063 410.812 40.043 410.766 40.027 410.707 cv
40.012 410.648 40.004 410.57 40.004 410.473 cv
40.004 410.387 40.008 410.316 40.023 410.258 cv
40.031 410.203 40.051 410.156 40.082 410.121 cv
40.105 410.086 40.137 410.062 40.168 410.043 cv
40.199 410.031 40.234 410.023 40.277 410.02 cv
41.051 410.02 li
41.352 410.023 41.621 409.984 41.863 409.902 cv
42.098 409.828 42.301 409.715 42.473 409.566 cv
42.637 409.422 42.766 409.246 42.855 409.043 cv
42.945 408.84 42.992 408.613 42.992 408.359 cv
42.992 408.18 42.961 408.004 42.902 407.836 cv
42.84 407.672 42.75 407.527 42.633 407.402 cv
42.512 407.277 42.359 407.18 42.18 407.109 cv
41.992 407.039 41.781 407.004 41.539 407.004 cv
41.273 407.004 41.027 407.047 40.809 407.125 cv
40.582 407.207 40.387 407.293 40.215 407.383 cv
40.039 407.477 39.895 407.562 39.781 407.641 cv
39.668 407.723 39.586 407.762 39.543 407.758 cv
39.508 407.762 39.48 407.754 39.457 407.742 cv
39.43 407.73 39.41 407.707 39.395 407.672 cv
39.379 407.641 39.367 407.594 39.359 407.527 cv
39.352 407.469 39.348 407.387 39.352 407.285 cv
39.348 407.219 39.348 407.16 39.355 407.105 cv
39.355 407.055 39.367 407.008 39.383 406.965 cv
39.398 406.93 39.414 406.895 39.434 406.859 cv
39.449 406.832 39.48 406.793 39.523 406.746 cv
39.566 406.703 39.652 406.641 39.789 406.559 cv
39.918 406.477 40.082 406.398 40.277 406.316 cv
40.469 406.238 40.691 406.168 40.949 406.113 cv
41.199 406.059 41.473 406.031 41.77 406.031 cv
42.176 406.031 42.539 406.086 42.852 406.187 cv
43.164 406.297 43.422 406.445 43.633 406.633 cv
43.836 406.828 43.992 407.059 44.098 407.324 cv
44.199 407.594 44.25 407.887 44.254 408.211 cv
44.25 408.492 44.215 408.754 44.145 408.988 cv
44.07 409.23 43.961 409.441 43.82 409.625 cv
43.676 409.812 43.504 409.969 43.301 410.098 cv
43.094 410.23 42.855 410.324 42.586 410.371 cv
42.586 410.383 li
42.891 410.418 43.172 410.492 43.426 410.613 cv
43.68 410.734 43.898 410.887 44.082 411.07 cv
44.262 411.254 44.402 411.469 44.508 411.711 cv
44.609 411.957 44.66 412.219 44.664 412.496 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 414.285 mo
48.027 414.613 47.973 414.828 47.867 414.934 cv
47.758 415.039 47.563 415.09 47.281 415.094 cv
47.004 415.09 46.813 415.039 46.711 414.937 cv
46.602 414.832 46.551 414.621 46.555 414.305 cv
46.551 413.98 46.605 413.766 46.715 413.656 cv
46.82 413.551 47.016 413.496 47.301 413.496 cv
47.574 413.496 47.762 413.551 47.871 413.656 cv
47.973 413.762 48.027 413.973 48.027 414.285 cv
cp
f
55.52 406.668 mo
55.516 406.754 55.512 406.828 55.508 406.891 cv
55.5 406.961 55.492 407.023 55.48 407.082 cv
55.469 407.148 55.453 407.207 55.434 407.262 cv
55.41 407.32 55.387 407.383 55.363 407.441 cv
52.168 414.805 li
52.141 414.863 52.113 414.906 52.082 414.937 cv
52.047 414.973 52.004 415 51.949 415.02 cv
51.895 415.039 51.824 415.051 51.746 415.062 cv
51.66 415.066 51.563 415.07 51.445 415.074 cv
51.289 415.07 51.168 415.062 51.082 415.051 cv
50.996 415.035 50.934 415.02 50.895 414.988 cv
50.855 414.961 50.836 414.922 50.844 414.879 cv
50.844 414.836 50.859 414.785 50.891 414.723 cv
54.25 407.195 li
49.992 407.195 li
49.906 407.199 49.84 407.152 49.797 407.059 cv
49.754 406.969 49.734 406.84 49.734 406.676 cv
49.734 406.59 49.738 406.516 49.75 406.449 cv
49.762 406.387 49.777 406.332 49.801 406.289 cv
49.82 406.246 49.848 406.215 49.883 406.191 cv
49.914 406.172 49.953 406.16 49.992 406.16 cv
55.164 406.16 li
55.223 406.16 55.277 406.168 55.328 406.184 cv
55.375 406.199 55.41 406.227 55.438 406.266 cv
55.461 406.305 55.48 406.359 55.496 406.422 cv
55.508 406.488 55.516 406.57 55.52 406.668 cv
cp
f
62.469 412.18 mo
62.469 412.656 62.387 413.078 62.227 413.449 cv
62.066 413.82 61.84 414.133 61.551 414.387 cv
61.254 414.641 60.906 414.836 60.504 414.965 cv
60.098 415.098 59.648 415.16 59.156 415.16 cv
58.879 415.16 58.617 415.141 58.375 415.102 cv
58.125 415.062 57.906 415.016 57.719 414.961 cv
57.523 414.906 57.367 414.852 57.242 414.793 cv
57.117 414.742 57.039 414.699 57.008 414.664 cv
56.973 414.633 56.949 414.602 56.938 414.574 cv
56.922 414.547 56.906 414.516 56.898 414.473 cv
56.883 414.437 56.875 414.387 56.875 414.324 cv
56.867 414.266 56.867 414.195 56.867 414.113 cv
56.867 414.039 56.871 413.969 56.879 413.906 cv
56.887 413.844 56.898 413.793 56.918 413.754 cv
56.934 413.715 56.953 413.687 56.98 413.668 cv
57.004 413.652 57.035 413.645 57.066 413.641 cv
57.113 413.645 57.184 413.672 57.277 413.727 cv
57.371 413.785 57.5 413.848 57.664 413.914 cv
57.828 413.98 58.027 414.043 58.27 414.102 cv
58.504 414.16 58.789 414.187 59.125 414.187 cv
59.426 414.187 59.707 414.152 59.965 414.078 cv
60.219 414.008 60.441 413.895 60.629 413.738 cv
60.813 413.586 60.957 413.391 61.063 413.152 cv
61.168 412.918 61.219 412.629 61.223 412.289 cv
61.219 412.008 61.176 411.758 61.086 411.539 cv
60.996 411.32 60.859 411.141 60.676 410.996 cv
60.488 410.855 60.254 410.75 59.973 410.676 cv
59.688 410.605 59.348 410.566 58.961 410.566 cv
58.676 410.566 58.438 410.582 58.238 410.609 cv
58.035 410.641 57.848 410.656 57.676 410.652 cv
57.547 410.656 57.453 410.625 57.402 410.562 cv
57.344 410.504 57.316 410.391 57.32 410.219 cv
57.32 406.605 li
57.316 406.457 57.352 406.348 57.426 406.27 cv
57.492 406.199 57.594 406.16 57.73 406.16 cv
61.66 406.16 li
61.695 406.16 61.73 406.172 61.766 406.191 cv
61.797 406.215 61.824 406.246 61.852 406.285 cv
61.871 406.328 61.887 406.379 61.902 406.441 cv
61.91 406.508 61.918 406.586 61.922 406.668 cv
61.918 406.836 61.895 406.961 61.855 407.051 cv
61.809 407.145 61.75 407.191 61.672 407.187 cv
58.5 407.187 li
58.5 409.676 li
58.652 409.656 58.809 409.645 58.973 409.637 cv
59.129 409.633 59.316 409.629 59.531 409.629 cv
60.016 409.629 60.441 409.691 60.809 409.812 cv
61.172 409.934 61.477 410.105 61.727 410.324 cv
61.969 410.551 62.156 410.816 62.281 411.129 cv
62.406 411.445 62.469 411.797 62.469 412.18 cv
cp
f
38.395 367.391 mo
63.215 367.391 li
63.215 384.481 li
38.395 384.481 li
cp
0 0 0 0 cmyk
ef
44.691 377.93 mo
44.691 378.406 44.609 378.828 44.449 379.199 cv
44.289 379.57 44.063 379.883 43.773 380.137 cv
43.477 380.391 43.129 380.586 42.727 380.715 cv
42.32 380.848 41.871 380.91 41.379 380.91 cv
41.102 380.91 40.84 380.891 40.598 380.852 cv
40.348 380.812 40.129 380.766 39.941 380.711 cv
39.746 380.656 39.59 380.602 39.465 380.543 cv
39.34 380.492 39.262 380.449 39.23 380.414 cv
39.195 380.383 39.172 380.352 39.16 380.324 cv
39.145 380.297 39.129 380.266 39.121 380.223 cv
39.105 380.187 39.098 380.137 39.098 380.074 cv
39.09 380.016 39.09 379.945 39.09 379.863 cv
39.09 379.789 39.094 379.719 39.102 379.656 cv
39.109 379.594 39.121 379.543 39.141 379.504 cv
39.156 379.465 39.176 379.437 39.203 379.418 cv
39.227 379.402 39.258 379.395 39.289 379.391 cv
39.336 379.395 39.406 379.422 39.5 379.477 cv
39.594 379.535 39.723 379.598 39.887 379.664 cv
40.051 379.73 40.25 379.793 40.492 379.852 cv
40.727 379.91 41.012 379.937 41.348 379.937 cv
41.648 379.937 41.93 379.902 42.188 379.828 cv
42.441 379.758 42.664 379.645 42.852 379.488 cv
43.035 379.336 43.18 379.141 43.285 378.902 cv
43.391 378.668 43.441 378.379 43.445 378.039 cv
43.441 377.758 43.398 377.508 43.309 377.289 cv
43.219 377.07 43.082 376.891 42.898 376.746 cv
42.711 376.605 42.477 376.5 42.195 376.426 cv
41.91 376.355 41.57 376.316 41.184 376.316 cv
40.898 376.316 40.66 376.332 40.461 376.359 cv
40.258 376.391 40.07 376.406 39.898 376.402 cv
39.77 376.406 39.676 376.375 39.625 376.312 cv
39.566 376.254 39.539 376.141 39.543 375.969 cv
39.543 372.355 li
39.539 372.207 39.574 372.098 39.648 372.02 cv
39.715 371.949 39.816 371.91 39.953 371.91 cv
43.883 371.91 li
43.918 371.91 43.953 371.922 43.988 371.941 cv
44.02 371.965 44.047 371.996 44.074 372.035 cv
44.094 372.078 44.109 372.129 44.125 372.191 cv
44.133 372.258 44.141 372.336 44.145 372.418 cv
44.141 372.586 44.117 372.711 44.078 372.801 cv
44.031 372.895 43.973 372.941 43.895 372.937 cv
40.723 372.937 li
40.723 375.426 li
40.875 375.406 41.031 375.395 41.195 375.387 cv
41.352 375.383 41.539 375.379 41.754 375.379 cv
42.238 375.379 42.664 375.441 43.031 375.562 cv
43.395 375.684 43.699 375.855 43.949 376.074 cv
44.191 376.301 44.379 376.566 44.504 376.879 cv
44.629 377.195 44.691 377.547 44.691 377.93 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 380.035 mo
48.027 380.363 47.973 380.578 47.867 380.684 cv
47.758 380.789 47.563 380.84 47.281 380.844 cv
47.004 380.84 46.813 380.789 46.711 380.687 cv
46.602 380.582 46.551 380.371 46.555 380.055 cv
46.551 379.73 46.605 379.516 46.715 379.406 cv
46.82 379.301 47.016 379.246 47.301 379.246 cv
47.574 379.246 47.762 379.301 47.871 379.406 cv
47.973 379.512 48.027 379.723 48.027 380.035 cv
cp
f
55.684 376.324 mo
55.68 377.008 55.629 377.629 55.523 378.191 cv
55.414 378.754 55.234 379.238 54.988 379.641 cv
54.734 380.047 54.406 380.359 54.008 380.578 cv
53.602 380.801 53.109 380.91 52.523 380.91 cv
51.965 380.91 51.492 380.812 51.113 380.613 cv
50.73 380.418 50.426 380.125 50.191 379.738 cv
49.957 379.352 49.789 378.879 49.695 378.312 cv
49.594 377.75 49.547 377.102 49.547 376.367 cv
49.547 375.695 49.602 375.074 49.711 374.508 cv
49.82 373.945 49.996 373.461 50.246 373.055 cv
50.488 372.652 50.813 372.34 51.219 372.113 cv
51.617 371.895 52.113 371.781 52.703 371.781 cv
53.262 371.781 53.734 371.883 54.117 372.078 cv
54.5 372.281 54.805 372.574 55.039 372.957 cv
55.27 373.348 55.438 373.82 55.535 374.383 cv
55.633 374.945 55.68 375.594 55.684 376.324 cv
cp
54.477 376.406 mo
54.473 375.965 54.457 375.566 54.43 375.215 cv
54.395 374.863 54.348 374.555 54.289 374.285 cv
54.223 374.016 54.145 373.785 54.047 373.59 cv
53.949 373.398 53.832 373.238 53.695 373.109 cv
53.555 372.984 53.395 372.891 53.223 372.832 cv
53.043 372.777 52.848 372.75 52.633 372.746 cv
52.242 372.75 51.926 372.84 51.688 373.023 cv
51.441 373.207 51.25 373.461 51.113 373.777 cv
50.973 374.098 50.879 374.469 50.828 374.898 cv
50.777 375.328 50.754 375.793 50.754 376.285 cv
50.754 376.949 50.785 377.512 50.855 377.973 cv
50.922 378.441 51.031 378.82 51.184 379.109 cv
51.328 379.406 51.52 379.617 51.75 379.746 cv
51.98 379.883 52.262 379.949 52.594 379.945 cv
52.848 379.949 53.07 379.91 53.266 379.824 cv
53.457 379.746 53.625 379.625 53.766 379.469 cv
53.906 379.316 54.02 379.133 54.113 378.918 cv
54.199 378.703 54.273 378.465 54.332 378.203 cv
54.383 377.945 54.422 377.664 54.445 377.359 cv
54.465 377.055 54.473 376.738 54.477 376.406 cv
cp
f
62.805 376.324 mo
62.801 377.008 62.75 377.629 62.645 378.191 cv
62.535 378.754 62.355 379.238 62.109 379.641 cv
61.855 380.047 61.527 380.359 61.129 380.578 cv
60.723 380.801 60.23 380.91 59.645 380.91 cv
59.086 380.91 58.613 380.812 58.234 380.613 cv
57.852 380.418 57.547 380.125 57.313 379.738 cv
57.078 379.352 56.91 378.879 56.816 378.312 cv
56.715 377.75 56.668 377.102 56.668 376.367 cv
56.668 375.695 56.723 375.074 56.832 374.508 cv
56.941 373.945 57.117 373.461 57.367 373.055 cv
57.609 372.652 57.934 372.34 58.34 372.113 cv
58.738 371.895 59.234 371.781 59.824 371.781 cv
60.383 371.781 60.855 371.883 61.238 372.078 cv
61.621 372.281 61.926 372.574 62.16 372.957 cv
62.391 373.348 62.559 373.82 62.656 374.383 cv
62.754 374.945 62.801 375.594 62.805 376.324 cv
cp
61.598 376.406 mo
61.594 375.965 61.578 375.566 61.551 375.215 cv
61.516 374.863 61.469 374.555 61.41 374.285 cv
61.344 374.016 61.266 373.785 61.168 373.59 cv
61.07 373.398 60.953 373.238 60.816 373.109 cv
60.676 372.984 60.516 372.891 60.344 372.832 cv
60.164 372.777 59.969 372.75 59.754 372.746 cv
59.363 372.75 59.047 372.84 58.809 373.023 cv
58.563 373.207 58.371 373.461 58.234 373.777 cv
58.094 374.098 58 374.469 57.949 374.898 cv
57.898 375.328 57.875 375.793 57.875 376.285 cv
57.875 376.949 57.906 377.512 57.977 377.973 cv
58.043 378.441 58.152 378.82 58.305 379.109 cv
58.449 379.406 58.641 379.617 58.871 379.746 cv
59.102 379.883 59.383 379.949 59.715 379.945 cv
59.969 379.949 60.191 379.91 60.387 379.824 cv
60.578 379.746 60.746 379.625 60.887 379.469 cv
61.027 379.316 61.141 379.133 61.234 378.918 cv
61.32 378.703 61.395 378.465 61.453 378.203 cv
61.504 377.945 61.543 377.664 61.566 377.359 cv
61.586 377.055 61.594 376.738 61.598 376.406 cv
cp
f
38.395 333.148 mo
63.215 333.148 li
63.215 350.238 li
38.395 350.238 li
cp
0 0 0 0 cmyk
ef
44.961 343.668 mo
44.961 344.059 44.898 344.437 44.781 344.797 cv
44.656 345.164 44.473 345.48 44.23 345.754 cv
43.98 346.031 43.668 346.254 43.293 346.418 cv
42.91 346.586 42.465 346.668 41.949 346.668 cv
41.578 346.668 41.25 346.625 40.969 346.531 cv
40.684 346.445 40.438 346.312 40.227 346.141 cv
40.016 345.973 39.84 345.766 39.703 345.52 cv
39.563 345.273 39.449 344.992 39.367 344.676 cv
39.281 344.363 39.223 344.02 39.188 343.641 cv
39.148 343.27 39.129 342.867 39.133 342.434 cv
39.129 342.055 39.148 341.672 39.191 341.281 cv
39.23 340.898 39.305 340.523 39.41 340.156 cv
39.516 339.797 39.66 339.457 39.84 339.141 cv
40.02 338.824 40.246 338.547 40.52 338.312 cv
40.793 338.078 41.117 337.891 41.496 337.75 cv
41.875 337.613 42.316 337.547 42.82 337.543 cv
42.988 337.547 43.16 337.555 43.332 337.574 cv
43.504 337.598 43.664 337.629 43.813 337.66 cv
43.961 337.699 44.082 337.734 44.184 337.773 cv
44.281 337.812 44.348 337.848 44.383 337.871 cv
44.41 337.898 44.434 337.926 44.453 337.953 cv
44.469 337.984 44.484 338.016 44.492 338.051 cv
44.5 338.086 44.504 338.125 44.512 338.168 cv
44.512 338.211 44.516 338.266 44.52 338.328 cv
44.516 338.414 44.516 338.484 44.516 338.539 cv
44.512 338.602 44.5 338.648 44.488 338.684 cv
44.469 338.723 44.449 338.75 44.426 338.766 cv
44.398 338.785 44.367 338.793 44.328 338.793 cv
44.277 338.793 44.207 338.777 44.121 338.746 cv
44.031 338.715 43.926 338.68 43.805 338.637 cv
43.68 338.602 43.531 338.566 43.355 338.531 cv
43.18 338.504 42.977 338.488 42.746 338.484 cv
42.316 338.488 41.949 338.574 41.645 338.746 cv
41.34 338.918 41.09 339.152 40.895 339.445 cv
40.699 339.738 40.555 340.078 40.465 340.461 cv
40.367 340.852 40.313 341.254 40.305 341.672 cv
40.422 341.605 40.559 341.539 40.707 341.469 cv
40.855 341.402 41.016 341.34 41.191 341.281 cv
41.367 341.23 41.555 341.184 41.75 341.148 cv
41.945 341.117 42.156 341.102 42.383 341.098 cv
42.859 341.102 43.262 341.168 43.594 341.293 cv
43.922 341.426 44.188 341.605 44.395 341.836 cv
44.594 342.066 44.738 342.336 44.828 342.648 cv
44.914 342.961 44.961 343.301 44.961 343.668 cv
cp
43.766 343.777 mo
43.766 343.516 43.738 343.273 43.688 343.055 cv
43.633 342.84 43.543 342.656 43.422 342.5 cv
43.297 342.352 43.133 342.234 42.93 342.152 cv
42.719 342.07 42.465 342.027 42.168 342.027 cv
41.996 342.027 41.828 342.043 41.66 342.074 cv
41.488 342.105 41.324 342.148 41.168 342.195 cv
41.008 342.25 40.859 342.312 40.719 342.383 cv
40.574 342.457 40.441 342.531 40.324 342.609 cv
40.32 343.203 40.359 343.699 40.438 344.094 cv
40.512 344.492 40.621 344.809 40.766 345.047 cv
40.91 345.289 41.09 345.461 41.305 345.562 cv
41.52 345.668 41.77 345.719 42.059 345.715 cv
42.348 345.719 42.602 345.664 42.816 345.551 cv
43.031 345.445 43.207 345.297 43.352 345.109 cv
43.492 344.926 43.598 344.719 43.664 344.488 cv
43.73 344.258 43.766 344.023 43.766 343.777 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 345.793 mo
48.027 346.121 47.973 346.336 47.867 346.441 cv
47.758 346.547 47.563 346.598 47.281 346.602 cv
47.004 346.598 46.813 346.547 46.711 346.445 cv
46.602 346.34 46.551 346.129 46.555 345.812 cv
46.551 345.488 46.605 345.273 46.715 345.164 cv
46.82 345.059 47.016 345.004 47.301 345.004 cv
47.574 345.004 47.762 345.059 47.871 345.164 cv
47.973 345.27 48.027 345.48 48.027 345.793 cv
cp
f
55.391 346.031 mo
55.387 346.117 55.383 346.191 55.371 346.254 cv
55.359 346.32 55.344 346.375 55.324 346.414 cv
55.301 346.461 55.273 346.492 55.242 346.508 cv
55.207 346.531 55.168 346.539 55.129 346.539 cv
50.227 346.539 li
50.164 346.539 50.105 346.531 50.059 346.516 cv
50.008 346.5 49.969 346.477 49.934 346.437 cv
49.898 346.406 49.871 346.352 49.859 346.281 cv
49.84 346.211 49.832 346.125 49.836 346.023 cv
49.832 345.934 49.836 345.855 49.844 345.785 cv
49.848 345.719 49.863 345.66 49.891 345.605 cv
49.914 345.555 49.945 345.5 49.98 345.445 cv
50.016 345.395 50.059 345.34 50.117 345.277 cv
51.891 343.453 li
52.301 343.035 52.629 342.66 52.879 342.324 cv
53.125 341.996 53.316 341.691 53.449 341.414 cv
53.582 341.141 53.668 340.891 53.715 340.664 cv
53.754 340.441 53.777 340.23 53.777 340.035 cv
53.777 339.84 53.742 339.656 53.676 339.477 cv
53.609 339.305 53.516 339.148 53.391 339.012 cv
53.266 338.883 53.109 338.777 52.922 338.695 cv
52.734 338.621 52.516 338.582 52.27 338.578 cv
51.98 338.582 51.723 338.621 51.496 338.695 cv
51.266 338.777 51.066 338.863 50.895 338.949 cv
50.723 339.043 50.578 339.125 50.461 339.203 cv
50.344 339.281 50.258 339.32 50.207 339.32 cv
50.172 339.32 50.141 339.312 50.117 339.293 cv
50.086 339.277 50.066 339.246 50.051 339.203 cv
50.035 339.164 50.02 339.109 50.012 339.039 cv
50 338.973 49.996 338.891 50 338.793 cv
49.996 338.727 50 338.668 50.008 338.617 cv
50.012 338.566 50.02 338.523 50.031 338.484 cv
50.039 338.449 50.055 338.414 50.074 338.383 cv
50.094 338.352 50.129 338.312 50.188 338.262 cv
50.238 338.215 50.332 338.148 50.469 338.066 cv
50.602 337.984 50.773 337.906 50.977 337.824 cv
51.18 337.746 51.402 337.676 51.648 337.621 cv
51.891 337.566 52.148 337.539 52.422 337.539 cv
52.848 337.539 53.223 337.602 53.547 337.723 cv
53.867 337.844 54.133 338.008 54.348 338.219 cv
54.559 338.43 54.719 338.676 54.824 338.949 cv
54.93 339.23 54.984 339.527 54.984 339.84 cv
54.984 340.129 54.957 340.41 54.906 340.687 cv
54.855 340.973 54.75 341.277 54.59 341.602 cv
54.426 341.93 54.191 342.293 53.887 342.691 cv
53.578 343.094 53.172 343.555 52.668 344.07 cv
51.262 345.539 li
55.121 345.539 li
55.152 345.543 55.188 345.555 55.227 345.57 cv
55.258 345.594 55.289 345.625 55.316 345.664 cv
55.34 345.707 55.359 345.758 55.371 345.816 cv
55.383 345.883 55.387 345.953 55.391 346.031 cv
cp
f
62.469 343.687 mo
62.469 344.164 62.387 344.586 62.227 344.957 cv
62.066 345.328 61.84 345.641 61.551 345.895 cv
61.254 346.148 60.906 346.344 60.504 346.473 cv
60.098 346.605 59.648 346.668 59.156 346.668 cv
58.879 346.668 58.617 346.648 58.375 346.609 cv
58.125 346.57 57.906 346.523 57.719 346.469 cv
57.523 346.414 57.367 346.359 57.242 346.301 cv
57.117 346.25 57.039 346.207 57.008 346.172 cv
56.973 346.141 56.949 346.109 56.938 346.082 cv
56.922 346.055 56.906 346.023 56.898 345.98 cv
56.883 345.945 56.875 345.895 56.875 345.832 cv
56.867 345.773 56.867 345.703 56.867 345.621 cv
56.867 345.547 56.871 345.477 56.879 345.414 cv
56.887 345.352 56.898 345.301 56.918 345.262 cv
56.934 345.223 56.953 345.195 56.98 345.176 cv
57.004 345.16 57.035 345.152 57.066 345.148 cv
57.113 345.152 57.184 345.18 57.277 345.234 cv
57.371 345.293 57.5 345.355 57.664 345.422 cv
57.828 345.488 58.027 345.551 58.27 345.609 cv
58.504 345.668 58.789 345.695 59.125 345.695 cv
59.426 345.695 59.707 345.66 59.965 345.586 cv
60.219 345.516 60.441 345.402 60.629 345.246 cv
60.813 345.094 60.957 344.898 61.063 344.66 cv
61.168 344.426 61.219 344.137 61.223 343.797 cv
61.219 343.516 61.176 343.266 61.086 343.047 cv
60.996 342.828 60.859 342.648 60.676 342.504 cv
60.488 342.363 60.254 342.258 59.973 342.184 cv
59.688 342.113 59.348 342.074 58.961 342.074 cv
58.676 342.074 58.438 342.09 58.238 342.117 cv
58.035 342.148 57.848 342.164 57.676 342.16 cv
57.547 342.164 57.453 342.133 57.402 342.07 cv
57.344 342.012 57.316 341.898 57.32 341.727 cv
57.32 338.113 li
57.316 337.965 57.352 337.855 57.426 337.777 cv
57.492 337.707 57.594 337.668 57.73 337.668 cv
61.66 337.668 li
61.695 337.668 61.73 337.68 61.766 337.699 cv
61.797 337.723 61.824 337.754 61.852 337.793 cv
61.871 337.836 61.887 337.887 61.902 337.949 cv
61.91 338.016 61.918 338.094 61.922 338.176 cv
61.918 338.344 61.895 338.469 61.855 338.559 cv
61.809 338.652 61.75 338.699 61.672 338.695 cv
58.5 338.695 li
58.5 341.184 li
58.652 341.164 58.809 341.152 58.973 341.145 cv
59.129 341.141 59.316 341.137 59.531 341.137 cv
60.016 341.137 60.441 341.199 60.809 341.32 cv
61.172 341.441 61.477 341.613 61.727 341.832 cv
61.969 342.059 62.156 342.324 62.281 342.637 cv
62.406 342.953 62.469 343.305 62.469 343.687 cv
cp
f
38.395 298.91 mo
63.215 298.91 li
63.215 316 li
38.395 316 li
cp
0 0 0 0 cmyk
ef
44.863 303.926 mo
44.859 304.012 44.855 304.086 44.852 304.148 cv
44.844 304.219 44.836 304.281 44.824 304.34 cv
44.813 304.406 44.797 304.465 44.777 304.52 cv
44.754 304.578 44.73 304.641 44.707 304.699 cv
41.512 312.062 li
41.484 312.121 41.457 312.164 41.426 312.195 cv
41.391 312.23 41.348 312.258 41.293 312.277 cv
41.238 312.297 41.168 312.309 41.09 312.32 cv
41.004 312.324 40.906 312.328 40.789 312.332 cv
40.633 312.328 40.512 312.32 40.426 312.309 cv
40.34 312.293 40.277 312.277 40.238 312.246 cv
40.199 312.219 40.18 312.18 40.188 312.137 cv
40.188 312.094 40.203 312.043 40.234 311.98 cv
43.594 304.453 li
39.336 304.453 li
39.25 304.457 39.184 304.41 39.141 304.316 cv
39.098 304.227 39.078 304.098 39.078 303.934 cv
39.078 303.848 39.082 303.773 39.094 303.707 cv
39.105 303.645 39.121 303.59 39.145 303.547 cv
39.164 303.504 39.191 303.473 39.227 303.449 cv
39.258 303.43 39.297 303.418 39.336 303.418 cv
44.508 303.418 li
44.566 303.418 44.621 303.426 44.672 303.441 cv
44.719 303.457 44.754 303.484 44.781 303.523 cv
44.805 303.562 44.824 303.617 44.84 303.68 cv
44.852 303.746 44.859 303.828 44.863 303.926 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 311.543 mo
48.027 311.871 47.973 312.086 47.867 312.191 cv
47.758 312.297 47.563 312.348 47.281 312.352 cv
47.004 312.348 46.813 312.297 46.711 312.195 cv
46.602 312.09 46.551 311.879 46.555 311.562 cv
46.551 311.238 46.605 311.023 46.715 310.914 cv
46.82 310.809 47.016 310.754 47.301 310.754 cv
47.574 310.754 47.762 310.809 47.871 310.914 cv
47.973 311.02 48.027 311.23 48.027 311.543 cv
cp
f
55.348 309.437 mo
55.348 309.914 55.266 310.336 55.105 310.707 cv
54.945 311.078 54.719 311.391 54.43 311.645 cv
54.133 311.898 53.785 312.094 53.383 312.223 cv
52.977 312.355 52.527 312.418 52.035 312.418 cv
51.758 312.418 51.496 312.398 51.254 312.359 cv
51.004 312.32 50.785 312.273 50.598 312.219 cv
50.402 312.164 50.246 312.109 50.121 312.051 cv
49.996 312 49.918 311.957 49.887 311.922 cv
49.852 311.891 49.828 311.859 49.816 311.832 cv
49.801 311.805 49.785 311.773 49.777 311.73 cv
49.762 311.695 49.754 311.645 49.754 311.582 cv
49.746 311.523 49.746 311.453 49.746 311.371 cv
49.746 311.297 49.75 311.227 49.758 311.164 cv
49.766 311.102 49.777 311.051 49.797 311.012 cv
49.813 310.973 49.832 310.945 49.859 310.926 cv
49.883 310.91 49.914 310.902 49.945 310.898 cv
49.992 310.902 50.063 310.93 50.156 310.984 cv
50.25 311.043 50.379 311.105 50.543 311.172 cv
50.707 311.238 50.906 311.301 51.148 311.359 cv
51.383 311.418 51.668 311.445 52.004 311.445 cv
52.305 311.445 52.586 311.41 52.844 311.336 cv
53.098 311.266 53.32 311.152 53.508 310.996 cv
53.691 310.844 53.836 310.648 53.941 310.41 cv
54.047 310.176 54.098 309.887 54.102 309.547 cv
54.098 309.266 54.055 309.016 53.965 308.797 cv
53.875 308.578 53.738 308.398 53.555 308.254 cv
53.367 308.113 53.133 308.008 52.852 307.934 cv
52.566 307.863 52.227 307.824 51.84 307.824 cv
51.555 307.824 51.316 307.84 51.117 307.867 cv
50.914 307.898 50.727 307.914 50.555 307.91 cv
50.426 307.914 50.332 307.883 50.281 307.82 cv
50.223 307.762 50.195 307.648 50.199 307.477 cv
50.199 303.863 li
50.195 303.715 50.23 303.605 50.305 303.527 cv
50.371 303.457 50.473 303.418 50.609 303.418 cv
54.539 303.418 li
54.574 303.418 54.609 303.43 54.645 303.449 cv
54.676 303.473 54.703 303.504 54.73 303.543 cv
54.75 303.586 54.766 303.637 54.781 303.699 cv
54.789 303.766 54.797 303.844 54.801 303.926 cv
54.797 304.094 54.773 304.219 54.734 304.309 cv
54.688 304.402 54.629 304.449 54.551 304.445 cv
51.379 304.445 li
51.379 306.934 li
51.531 306.914 51.688 306.902 51.852 306.895 cv
52.008 306.891 52.195 306.887 52.41 306.887 cv
52.895 306.887 53.32 306.949 53.688 307.07 cv
54.051 307.191 54.355 307.363 54.605 307.582 cv
54.848 307.809 55.035 308.074 55.16 308.387 cv
55.285 308.703 55.348 309.055 55.348 309.437 cv
cp
f
62.805 307.832 mo
62.801 308.516 62.75 309.137 62.645 309.699 cv
62.535 310.262 62.355 310.746 62.109 311.148 cv
61.855 311.555 61.527 311.867 61.129 312.086 cv
60.723 312.309 60.23 312.418 59.645 312.418 cv
59.086 312.418 58.613 312.32 58.234 312.121 cv
57.852 311.926 57.547 311.633 57.313 311.246 cv
57.078 310.859 56.91 310.387 56.816 309.82 cv
56.715 309.258 56.668 308.609 56.668 307.875 cv
56.668 307.203 56.723 306.582 56.832 306.016 cv
56.941 305.453 57.117 304.969 57.367 304.562 cv
57.609 304.16 57.934 303.848 58.34 303.621 cv
58.738 303.402 59.234 303.289 59.824 303.289 cv
60.383 303.289 60.855 303.391 61.238 303.586 cv
61.621 303.789 61.926 304.082 62.16 304.465 cv
62.391 304.855 62.559 305.328 62.656 305.891 cv
62.754 306.453 62.801 307.102 62.805 307.832 cv
cp
61.598 307.914 mo
61.594 307.473 61.578 307.074 61.551 306.723 cv
61.516 306.371 61.469 306.062 61.41 305.793 cv
61.344 305.523 61.266 305.293 61.168 305.098 cv
61.07 304.906 60.953 304.746 60.816 304.617 cv
60.676 304.492 60.516 304.398 60.344 304.34 cv
60.164 304.285 59.969 304.258 59.754 304.254 cv
59.363 304.258 59.047 304.348 58.809 304.531 cv
58.563 304.715 58.371 304.969 58.234 305.285 cv
58.094 305.605 58 305.977 57.949 306.406 cv
57.898 306.836 57.875 307.301 57.875 307.793 cv
57.875 308.457 57.906 309.02 57.977 309.48 cv
58.043 309.949 58.152 310.328 58.305 310.617 cv
58.449 310.914 58.641 311.125 58.871 311.254 cv
59.102 311.391 59.383 311.457 59.715 311.453 cv
59.969 311.457 60.191 311.418 60.387 311.332 cv
60.578 311.254 60.746 311.133 60.887 310.977 cv
61.027 310.824 61.141 310.641 61.234 310.426 cv
61.32 310.211 61.395 309.973 61.453 309.711 cv
61.504 309.453 61.543 309.172 61.566 308.867 cv
61.586 308.562 61.594 308.246 61.598 307.914 cv
cp
f
38.395 264.672 mo
63.215 264.672 li
63.215 281.762 li
38.395 281.762 li
cp
0 0 0 0 cmyk
ef
44.938 275.762 mo
44.938 276.148 44.867 276.492 44.73 276.789 cv
44.594 277.094 44.398 277.344 44.141 277.547 cv
43.883 277.754 43.563 277.91 43.184 278.012 cv
42.801 278.117 42.367 278.168 41.883 278.168 cv
41.422 278.168 41.012 278.121 40.652 278.027 cv
40.289 277.934 39.984 277.793 39.734 277.602 cv
39.484 277.418 39.293 277.187 39.16 276.91 cv
39.027 276.637 38.961 276.324 38.961 275.969 cv
38.961 275.695 39.004 275.437 39.098 275.203 cv
39.184 274.969 39.316 274.754 39.492 274.559 cv
39.66 274.363 39.871 274.18 40.125 274.004 cv
40.375 273.836 40.66 273.672 40.977 273.516 cv
40.703 273.375 40.461 273.227 40.25 273.066 cv
40.039 272.91 39.859 272.738 39.715 272.551 cv
39.566 272.367 39.457 272.172 39.383 271.961 cv
39.305 271.754 39.266 271.523 39.27 271.273 cv
39.266 270.965 39.32 270.672 39.438 270.398 cv
39.547 270.129 39.719 269.895 39.945 269.691 cv
40.172 269.492 40.457 269.332 40.809 269.215 cv
41.152 269.098 41.563 269.039 42.031 269.039 cv
42.477 269.039 42.863 269.094 43.191 269.199 cv
43.52 269.309 43.789 269.453 44 269.637 cv
44.211 269.824 44.367 270.043 44.473 270.293 cv
44.57 270.543 44.621 270.812 44.625 271.102 cv
44.621 271.336 44.582 271.562 44.512 271.773 cv
44.434 271.992 44.324 272.195 44.176 272.383 cv
44.027 272.578 43.848 272.758 43.637 272.922 cv
43.426 273.094 43.184 273.25 42.91 273.391 cv
43.23 273.555 43.516 273.719 43.773 273.887 cv
44.023 274.055 44.238 274.234 44.414 274.43 cv
44.582 274.625 44.711 274.832 44.805 275.047 cv
44.891 275.266 44.938 275.504 44.938 275.762 cv
cp
43.457 271.211 mo
43.453 271.023 43.422 270.848 43.355 270.691 cv
43.289 270.535 43.191 270.402 43.066 270.293 cv
42.938 270.184 42.777 270.102 42.59 270.043 cv
42.395 269.988 42.18 269.961 41.941 269.957 cv
41.445 269.961 41.07 270.07 40.82 270.293 cv
40.563 270.52 40.438 270.828 40.441 271.211 cv
40.438 271.391 40.469 271.555 40.531 271.707 cv
40.594 271.863 40.688 272.008 40.82 272.145 cv
40.945 272.281 41.109 272.414 41.313 272.543 cv
41.508 272.676 41.746 272.812 42.023 272.953 cv
42.484 272.719 42.84 272.457 43.086 272.164 cv
43.332 271.879 43.453 271.562 43.457 271.211 cv
cp
43.746 275.887 mo
43.742 275.68 43.703 275.488 43.629 275.316 cv
43.547 275.148 43.43 274.988 43.273 274.836 cv
43.117 274.687 42.918 274.543 42.684 274.402 cv
42.445 274.266 42.176 274.121 41.867 273.969 cv
41.578 274.113 41.324 274.254 41.109 274.395 cv
40.891 274.535 40.711 274.684 40.574 274.832 cv
40.434 274.988 40.328 275.145 40.258 275.309 cv
40.184 275.477 40.148 275.66 40.152 275.859 cv
40.148 276.305 40.301 276.648 40.609 276.887 cv
40.91 277.133 41.363 277.254 41.969 277.25 cv
42.551 277.254 42.996 277.133 43.297 276.883 cv
43.594 276.641 43.742 276.309 43.746 275.887 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
48.027 277.293 mo
48.027 277.621 47.973 277.836 47.867 277.941 cv
47.758 278.047 47.563 278.098 47.281 278.102 cv
47.004 278.098 46.813 278.047 46.711 277.945 cv
46.602 277.84 46.551 277.629 46.555 277.312 cv
46.551 276.988 46.605 276.773 46.715 276.664 cv
46.82 276.559 47.016 276.504 47.301 276.504 cv
47.574 276.504 47.762 276.559 47.871 276.664 cv
47.973 276.77 48.027 276.98 48.027 277.293 cv
cp
f
55.52 269.676 mo
55.516 269.762 55.512 269.836 55.508 269.898 cv
55.5 269.969 55.492 270.031 55.48 270.09 cv
55.469 270.156 55.453 270.215 55.434 270.27 cv
55.41 270.328 55.387 270.391 55.363 270.449 cv
52.168 277.812 li
52.141 277.871 52.113 277.914 52.082 277.945 cv
52.047 277.98 52.004 278.008 51.949 278.027 cv
51.895 278.047 51.824 278.059 51.746 278.07 cv
51.66 278.074 51.563 278.078 51.445 278.082 cv
51.289 278.078 51.168 278.07 51.082 278.059 cv
50.996 278.043 50.934 278.027 50.895 277.996 cv
50.855 277.969 50.836 277.93 50.844 277.887 cv
50.844 277.844 50.859 277.793 50.891 277.73 cv
54.25 270.203 li
49.992 270.203 li
49.906 270.207 49.84 270.16 49.797 270.066 cv
49.754 269.977 49.734 269.848 49.734 269.684 cv
49.734 269.598 49.738 269.523 49.75 269.457 cv
49.762 269.395 49.777 269.34 49.801 269.297 cv
49.82 269.254 49.848 269.223 49.883 269.199 cv
49.914 269.18 49.953 269.168 49.992 269.168 cv
55.164 269.168 li
55.223 269.168 55.277 269.176 55.328 269.191 cv
55.375 269.207 55.41 269.234 55.438 269.273 cv
55.461 269.312 55.48 269.367 55.496 269.43 cv
55.508 269.496 55.516 269.578 55.52 269.676 cv
cp
f
62.469 275.187 mo
62.469 275.664 62.387 276.086 62.227 276.457 cv
62.066 276.828 61.84 277.141 61.551 277.395 cv
61.254 277.648 60.906 277.844 60.504 277.973 cv
60.098 278.105 59.648 278.168 59.156 278.168 cv
58.879 278.168 58.617 278.148 58.375 278.109 cv
58.125 278.07 57.906 278.023 57.719 277.969 cv
57.523 277.914 57.367 277.859 57.242 277.801 cv
57.117 277.75 57.039 277.707 57.008 277.672 cv
56.973 277.641 56.949 277.609 56.938 277.582 cv
56.922 277.555 56.906 277.523 56.898 277.48 cv
56.883 277.445 56.875 277.395 56.875 277.332 cv
56.867 277.273 56.867 277.203 56.867 277.121 cv
56.867 277.047 56.871 276.977 56.879 276.914 cv
56.887 276.852 56.898 276.801 56.918 276.762 cv
56.934 276.723 56.953 276.695 56.98 276.676 cv
57.004 276.66 57.035 276.652 57.066 276.648 cv
57.113 276.652 57.184 276.68 57.277 276.734 cv
57.371 276.793 57.5 276.855 57.664 276.922 cv
57.828 276.988 58.027 277.051 58.27 277.109 cv
58.504 277.168 58.789 277.195 59.125 277.195 cv
59.426 277.195 59.707 277.16 59.965 277.086 cv
60.219 277.016 60.441 276.902 60.629 276.746 cv
60.813 276.594 60.957 276.398 61.063 276.16 cv
61.168 275.926 61.219 275.637 61.223 275.297 cv
61.219 275.016 61.176 274.766 61.086 274.547 cv
60.996 274.328 60.859 274.148 60.676 274.004 cv
60.488 273.863 60.254 273.758 59.973 273.684 cv
59.688 273.613 59.348 273.574 58.961 273.574 cv
58.676 273.574 58.438 273.59 58.238 273.617 cv
58.035 273.648 57.848 273.664 57.676 273.66 cv
57.547 273.664 57.453 273.633 57.402 273.57 cv
57.344 273.512 57.316 273.398 57.32 273.227 cv
57.32 269.613 li
57.316 269.465 57.352 269.355 57.426 269.277 cv
57.492 269.207 57.594 269.168 57.73 269.168 cv
61.66 269.168 li
61.695 269.168 61.73 269.18 61.766 269.199 cv
61.797 269.223 61.824 269.254 61.852 269.293 cv
61.871 269.336 61.887 269.387 61.902 269.449 cv
61.91 269.516 61.918 269.594 61.922 269.676 cv
61.918 269.844 61.895 269.969 61.855 270.059 cv
61.809 270.152 61.75 270.199 61.672 270.195 cv
58.5 270.195 li
58.5 272.684 li
58.652 272.664 58.809 272.652 58.973 272.645 cv
59.129 272.641 59.316 272.637 59.531 272.637 cv
60.016 272.637 60.441 272.699 60.809 272.82 cv
61.172 272.941 61.477 273.113 61.727 273.332 cv
61.969 273.559 62.156 273.824 62.281 274.137 cv
62.406 274.453 62.469 274.805 62.469 275.187 cv
cp
f
31.301 230.43 mo
63.215 230.43 li
63.215 247.52 li
31.301 247.52 li
cp
0 0 0 0 cmyk
ef
37.676 243.324 mo
37.672 243.414 37.664 243.484 37.652 243.543 cv
37.637 243.605 37.617 243.656 37.598 243.687 cv
37.574 243.727 37.551 243.75 37.52 243.766 cv
37.488 243.781 37.457 243.789 37.43 243.789 cv
32.793 243.789 li
32.758 243.789 32.73 243.781 32.703 243.766 cv
32.676 243.75 32.648 243.727 32.625 243.687 cv
32.598 243.656 32.578 243.605 32.566 243.543 cv
32.551 243.484 32.543 243.414 32.547 243.324 cv
32.543 243.246 32.551 243.172 32.566 243.109 cv
32.578 243.051 32.594 243.004 32.617 242.965 cv
32.633 242.93 32.66 242.898 32.691 242.875 cv
32.723 242.855 32.754 242.848 32.793 242.844 cv
34.645 242.844 li
34.645 236.098 li
32.93 237.117 li
32.84 237.168 32.77 237.195 32.723 237.203 cv
32.668 237.211 32.625 237.203 32.594 237.172 cv
32.559 237.145 32.539 237.094 32.527 237.023 cv
32.516 236.957 32.508 236.871 32.512 236.762 cv
32.508 236.687 32.512 236.621 32.523 236.562 cv
32.527 236.512 32.539 236.465 32.555 236.426 cv
32.566 236.391 32.586 236.359 32.609 236.332 cv
32.633 236.305 32.664 236.277 32.711 236.25 cv
34.754 234.937 li
34.77 234.926 34.789 234.914 34.82 234.906 cv
34.844 234.898 34.879 234.891 34.926 234.879 cv
34.965 234.871 35.016 234.863 35.07 234.859 cv
35.125 234.859 35.191 234.859 35.277 234.855 cv
35.383 234.859 35.477 234.863 35.551 234.871 cv
35.621 234.879 35.676 234.895 35.723 234.91 cv
35.762 234.93 35.789 234.949 35.805 234.973 cv
35.813 235 35.82 235.023 35.824 235.047 cv
35.824 242.844 li
37.43 242.844 li
37.465 242.848 37.5 242.855 37.531 242.875 cv
37.563 242.898 37.586 242.93 37.609 242.965 cv
37.625 243.004 37.641 243.051 37.656 243.109 cv
37.664 243.172 37.672 243.246 37.676 243.324 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
45.066 239.332 mo
45.063 240.016 45.012 240.637 44.906 241.199 cv
44.797 241.762 44.617 242.246 44.371 242.648 cv
44.117 243.055 43.789 243.367 43.391 243.586 cv
42.984 243.809 42.492 243.918 41.906 243.918 cv
41.348 243.918 40.875 243.82 40.496 243.621 cv
40.113 243.426 39.809 243.133 39.574 242.746 cv
39.34 242.359 39.172 241.887 39.078 241.32 cv
38.977 240.758 38.93 240.109 38.93 239.375 cv
38.93 238.703 38.984 238.082 39.094 237.516 cv
39.203 236.953 39.379 236.469 39.629 236.062 cv
39.871 235.66 40.195 235.348 40.602 235.121 cv
41 234.902 41.496 234.789 42.086 234.789 cv
42.645 234.789 43.117 234.891 43.5 235.086 cv
43.883 235.289 44.188 235.582 44.422 235.965 cv
44.652 236.355 44.82 236.828 44.918 237.391 cv
45.016 237.953 45.063 238.602 45.066 239.332 cv
cp
43.859 239.414 mo
43.855 238.973 43.84 238.574 43.813 238.223 cv
43.777 237.871 43.73 237.562 43.672 237.293 cv
43.605 237.023 43.527 236.793 43.43 236.598 cv
43.332 236.406 43.215 236.246 43.078 236.117 cv
42.938 235.992 42.777 235.898 42.605 235.84 cv
42.426 235.785 42.23 235.758 42.016 235.754 cv
41.625 235.758 41.309 235.848 41.07 236.031 cv
40.824 236.215 40.633 236.469 40.496 236.785 cv
40.355 237.105 40.262 237.477 40.211 237.906 cv
40.16 238.336 40.137 238.801 40.137 239.293 cv
40.137 239.957 40.168 240.52 40.238 240.98 cv
40.305 241.449 40.414 241.828 40.566 242.117 cv
40.711 242.414 40.902 242.625 41.133 242.754 cv
41.363 242.891 41.645 242.957 41.977 242.953 cv
42.23 242.957 42.453 242.918 42.648 242.832 cv
42.84 242.754 43.008 242.633 43.148 242.477 cv
43.289 242.324 43.402 242.141 43.496 241.926 cv
43.582 241.711 43.656 241.473 43.715 241.211 cv
43.766 240.953 43.805 240.672 43.828 240.367 cv
43.848 240.062 43.855 239.746 43.859 239.414 cv
cp
f
47.996 243.043 mo
47.996 243.371 47.941 243.586 47.836 243.691 cv
47.727 243.797 47.531 243.848 47.25 243.852 cv
46.973 243.848 46.781 243.797 46.68 243.695 cv
46.57 243.59 46.52 243.379 46.523 243.062 cv
46.52 242.738 46.574 242.523 46.684 242.414 cv
46.789 242.309 46.984 242.254 47.27 242.254 cv
47.543 242.254 47.73 242.309 47.84 242.414 cv
47.941 242.52 47.996 242.73 47.996 243.043 cv
cp
f
55.695 239.332 mo
55.691 240.016 55.641 240.637 55.535 241.199 cv
55.426 241.762 55.246 242.246 55 242.648 cv
54.746 243.055 54.418 243.367 54.02 243.586 cv
53.613 243.809 53.121 243.918 52.535 243.918 cv
51.977 243.918 51.504 243.82 51.125 243.621 cv
50.742 243.426 50.438 243.133 50.203 242.746 cv
49.969 242.359 49.801 241.887 49.707 241.32 cv
49.605 240.758 49.559 240.109 49.559 239.375 cv
49.559 238.703 49.613 238.082 49.723 237.516 cv
49.832 236.953 50.008 236.469 50.258 236.062 cv
50.5 235.66 50.824 235.348 51.23 235.121 cv
51.629 234.902 52.125 234.789 52.715 234.789 cv
53.273 234.789 53.746 234.891 54.129 235.086 cv
54.512 235.289 54.816 235.582 55.051 235.965 cv
55.281 236.355 55.449 236.828 55.547 237.391 cv
55.645 237.953 55.691 238.602 55.695 239.332 cv
cp
54.488 239.414 mo
54.484 238.973 54.469 238.574 54.441 238.223 cv
54.406 237.871 54.359 237.562 54.301 237.293 cv
54.234 237.023 54.156 236.793 54.059 236.598 cv
53.961 236.406 53.844 236.246 53.707 236.117 cv
53.566 235.992 53.406 235.898 53.234 235.84 cv
53.055 235.785 52.859 235.758 52.645 235.754 cv
52.254 235.758 51.938 235.848 51.699 236.031 cv
51.453 236.215 51.262 236.469 51.125 236.785 cv
50.984 237.105 50.891 237.477 50.84 237.906 cv
50.789 238.336 50.766 238.801 50.766 239.293 cv
50.766 239.957 50.797 240.52 50.867 240.98 cv
50.934 241.449 51.043 241.828 51.195 242.117 cv
51.34 242.414 51.531 242.625 51.762 242.754 cv
51.992 242.891 52.273 242.957 52.605 242.953 cv
52.859 242.957 53.082 242.918 53.277 242.832 cv
53.469 242.754 53.637 242.633 53.777 242.477 cv
53.918 242.324 54.031 242.141 54.125 241.926 cv
54.211 241.711 54.285 241.473 54.344 241.211 cv
54.395 240.953 54.434 240.672 54.457 240.367 cv
54.477 240.062 54.484 239.746 54.488 239.414 cv
cp
f
62.813 239.332 mo
62.809 240.016 62.758 240.637 62.652 241.199 cv
62.543 241.762 62.363 242.246 62.117 242.648 cv
61.863 243.055 61.535 243.367 61.137 243.586 cv
60.73 243.809 60.238 243.918 59.652 243.918 cv
59.094 243.918 58.621 243.82 58.242 243.621 cv
57.859 243.426 57.555 243.133 57.32 242.746 cv
57.086 242.359 56.918 241.887 56.824 241.32 cv
56.723 240.758 56.676 240.109 56.676 239.375 cv
56.676 238.703 56.73 238.082 56.84 237.516 cv
56.949 236.953 57.125 236.469 57.375 236.062 cv
57.617 235.66 57.941 235.348 58.348 235.121 cv
58.746 234.902 59.242 234.789 59.832 234.789 cv
60.391 234.789 60.863 234.891 61.246 235.086 cv
61.629 235.289 61.934 235.582 62.168 235.965 cv
62.398 236.355 62.566 236.828 62.664 237.391 cv
62.762 237.953 62.809 238.602 62.813 239.332 cv
cp
61.605 239.414 mo
61.602 238.973 61.586 238.574 61.559 238.223 cv
61.523 237.871 61.477 237.562 61.418 237.293 cv
61.352 237.023 61.273 236.793 61.176 236.598 cv
61.078 236.406 60.961 236.246 60.824 236.117 cv
60.684 235.992 60.523 235.898 60.352 235.84 cv
60.172 235.785 59.977 235.758 59.762 235.754 cv
59.371 235.758 59.055 235.848 58.816 236.031 cv
58.57 236.215 58.379 236.469 58.242 236.785 cv
58.102 237.105 58.008 237.477 57.957 237.906 cv
57.906 238.336 57.883 238.801 57.883 239.293 cv
57.883 239.957 57.914 240.52 57.984 240.98 cv
58.051 241.449 58.16 241.828 58.313 242.117 cv
58.457 242.414 58.648 242.625 58.879 242.754 cv
59.109 242.891 59.391 242.957 59.723 242.953 cv
59.977 242.957 60.199 242.918 60.395 242.832 cv
60.586 242.754 60.754 242.633 60.895 242.477 cv
61.035 242.324 61.148 242.141 61.242 241.926 cv
61.328 241.711 61.402 241.473 61.461 241.211 cv
61.512 240.953 61.551 240.672 61.574 240.367 cv
61.594 240.062 61.602 239.746 61.605 239.414 cv
cp
f
31.301 196.191 mo
63.215 196.191 li
63.215 213.281 li
31.301 213.281 li
cp
0 0 0 0 cmyk
ef
37.676 209.074 mo
37.672 209.164 37.664 209.234 37.652 209.293 cv
37.637 209.355 37.617 209.406 37.598 209.437 cv
37.574 209.477 37.551 209.5 37.52 209.516 cv
37.488 209.531 37.457 209.539 37.43 209.539 cv
32.793 209.539 li
32.758 209.539 32.73 209.531 32.703 209.516 cv
32.676 209.5 32.648 209.477 32.625 209.437 cv
32.598 209.406 32.578 209.355 32.566 209.293 cv
32.551 209.234 32.543 209.164 32.547 209.074 cv
32.543 208.996 32.551 208.922 32.566 208.859 cv
32.578 208.801 32.594 208.754 32.617 208.715 cv
32.633 208.68 32.66 208.648 32.691 208.625 cv
32.723 208.605 32.754 208.598 32.793 208.594 cv
34.645 208.594 li
34.645 201.848 li
32.93 202.867 li
32.84 202.918 32.77 202.945 32.723 202.953 cv
32.668 202.961 32.625 202.953 32.594 202.922 cv
32.559 202.895 32.539 202.844 32.527 202.773 cv
32.516 202.707 32.508 202.621 32.512 202.512 cv
32.508 202.437 32.512 202.371 32.523 202.312 cv
32.527 202.262 32.539 202.215 32.555 202.176 cv
32.566 202.141 32.586 202.109 32.609 202.082 cv
32.633 202.055 32.664 202.027 32.711 202 cv
34.754 200.687 li
34.77 200.676 34.789 200.664 34.82 200.656 cv
34.844 200.648 34.879 200.641 34.926 200.629 cv
34.965 200.621 35.016 200.613 35.07 200.609 cv
35.125 200.609 35.191 200.609 35.277 200.605 cv
35.383 200.609 35.477 200.613 35.551 200.621 cv
35.621 200.629 35.676 200.645 35.723 200.66 cv
35.762 200.68 35.789 200.699 35.805 200.723 cv
35.813 200.75 35.82 200.773 35.824 200.797 cv
35.824 208.594 li
37.43 208.594 li
37.465 208.598 37.5 208.605 37.531 208.625 cv
37.563 208.648 37.586 208.68 37.609 208.715 cv
37.625 208.754 37.641 208.801 37.656 208.859 cv
37.664 208.922 37.672 208.996 37.676 209.074 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.793 209.074 mo
44.789 209.164 44.781 209.234 44.77 209.293 cv
44.754 209.355 44.734 209.406 44.715 209.437 cv
44.691 209.477 44.668 209.5 44.637 209.516 cv
44.605 209.531 44.574 209.539 44.547 209.539 cv
39.91 209.539 li
39.875 209.539 39.848 209.531 39.82 209.516 cv
39.793 209.5 39.766 209.477 39.742 209.437 cv
39.715 209.406 39.695 209.355 39.684 209.293 cv
39.668 209.234 39.66 209.164 39.664 209.074 cv
39.66 208.996 39.668 208.922 39.684 208.859 cv
39.695 208.801 39.711 208.754 39.734 208.715 cv
39.75 208.68 39.777 208.648 39.809 208.625 cv
39.84 208.605 39.871 208.598 39.91 208.594 cv
41.762 208.594 li
41.762 201.848 li
40.047 202.867 li
39.957 202.918 39.887 202.945 39.84 202.953 cv
39.785 202.961 39.742 202.953 39.711 202.922 cv
39.676 202.895 39.656 202.844 39.645 202.773 cv
39.633 202.707 39.625 202.621 39.629 202.512 cv
39.625 202.437 39.629 202.371 39.641 202.312 cv
39.645 202.262 39.656 202.215 39.672 202.176 cv
39.684 202.141 39.703 202.109 39.727 202.082 cv
39.75 202.055 39.781 202.027 39.828 202 cv
41.871 200.687 li
41.887 200.676 41.906 200.664 41.938 200.656 cv
41.961 200.648 41.996 200.641 42.043 200.629 cv
42.082 200.621 42.133 200.613 42.188 200.609 cv
42.242 200.609 42.309 200.609 42.395 200.605 cv
42.5 200.609 42.594 200.613 42.668 200.621 cv
42.738 200.629 42.793 200.645 42.84 200.66 cv
42.879 200.68 42.906 200.699 42.922 200.723 cv
42.93 200.75 42.938 200.773 42.941 200.797 cv
42.941 208.594 li
44.547 208.594 li
44.582 208.598 44.617 208.605 44.648 208.625 cv
44.68 208.648 44.703 208.68 44.727 208.715 cv
44.742 208.754 44.758 208.801 44.773 208.859 cv
44.781 208.922 44.789 208.996 44.793 209.074 cv
cp
f
47.996 208.793 mo
47.996 209.121 47.941 209.336 47.836 209.441 cv
47.727 209.547 47.531 209.598 47.25 209.602 cv
46.973 209.598 46.781 209.547 46.68 209.445 cv
46.57 209.34 46.52 209.129 46.523 208.812 cv
46.52 208.488 46.574 208.273 46.684 208.164 cv
46.789 208.059 46.984 208.004 47.27 208.004 cv
47.543 208.004 47.73 208.059 47.84 208.164 cv
47.941 208.27 47.996 208.48 47.996 208.793 cv
cp
f
55.402 209.031 mo
55.398 209.117 55.395 209.191 55.383 209.254 cv
55.371 209.32 55.355 209.375 55.336 209.414 cv
55.313 209.461 55.285 209.492 55.254 209.508 cv
55.219 209.531 55.18 209.539 55.141 209.539 cv
50.238 209.539 li
50.176 209.539 50.117 209.531 50.07 209.516 cv
50.02 209.5 49.98 209.477 49.945 209.437 cv
49.91 209.406 49.883 209.352 49.871 209.281 cv
49.852 209.211 49.844 209.125 49.848 209.023 cv
49.844 208.934 49.848 208.855 49.855 208.785 cv
49.859 208.719 49.875 208.66 49.902 208.605 cv
49.926 208.555 49.957 208.5 49.992 208.445 cv
50.027 208.395 50.07 208.34 50.129 208.277 cv
51.902 206.453 li
52.313 206.035 52.641 205.66 52.891 205.324 cv
53.137 204.996 53.328 204.691 53.461 204.414 cv
53.594 204.141 53.68 203.891 53.727 203.664 cv
53.766 203.441 53.789 203.23 53.789 203.035 cv
53.789 202.84 53.754 202.656 53.688 202.477 cv
53.621 202.305 53.527 202.148 53.402 202.012 cv
53.277 201.883 53.121 201.777 52.934 201.695 cv
52.746 201.621 52.527 201.582 52.281 201.578 cv
51.992 201.582 51.734 201.621 51.508 201.695 cv
51.277 201.777 51.078 201.863 50.906 201.949 cv
50.734 202.043 50.59 202.125 50.473 202.203 cv
50.355 202.281 50.27 202.32 50.219 202.32 cv
50.184 202.32 50.152 202.312 50.129 202.293 cv
50.098 202.277 50.078 202.246 50.063 202.203 cv
50.047 202.164 50.031 202.109 50.023 202.039 cv
50.012 201.973 50.008 201.891 50.012 201.793 cv
50.008 201.727 50.012 201.668 50.02 201.617 cv
50.023 201.566 50.031 201.523 50.043 201.484 cv
50.051 201.449 50.066 201.414 50.086 201.383 cv
50.105 201.352 50.141 201.312 50.199 201.262 cv
50.25 201.215 50.344 201.148 50.48 201.066 cv
50.613 200.984 50.785 200.906 50.988 200.824 cv
51.191 200.746 51.414 200.676 51.66 200.621 cv
51.902 200.566 52.16 200.539 52.434 200.539 cv
52.859 200.539 53.234 200.602 53.559 200.723 cv
53.879 200.844 54.145 201.008 54.359 201.219 cv
54.57 201.43 54.73 201.676 54.836 201.949 cv
54.941 202.23 54.996 202.527 54.996 202.84 cv
54.996 203.129 54.969 203.41 54.918 203.687 cv
54.867 203.973 54.762 204.277 54.602 204.602 cv
54.438 204.93 54.203 205.293 53.898 205.691 cv
53.59 206.094 53.184 206.555 52.68 207.07 cv
51.273 208.539 li
55.133 208.539 li
55.164 208.543 55.199 208.555 55.238 208.57 cv
55.27 208.594 55.301 208.625 55.328 208.664 cv
55.352 208.707 55.371 208.758 55.383 208.816 cv
55.395 208.883 55.398 208.953 55.402 209.031 cv
cp
f
62.477 206.687 mo
62.477 207.164 62.395 207.586 62.234 207.957 cv
62.074 208.328 61.848 208.641 61.559 208.895 cv
61.262 209.148 60.914 209.344 60.512 209.473 cv
60.105 209.605 59.656 209.668 59.164 209.668 cv
58.887 209.668 58.625 209.648 58.383 209.609 cv
58.133 209.57 57.914 209.523 57.727 209.469 cv
57.531 209.414 57.375 209.359 57.25 209.301 cv
57.125 209.25 57.047 209.207 57.016 209.172 cv
56.98 209.141 56.957 209.109 56.945 209.082 cv
56.93 209.055 56.914 209.023 56.906 208.98 cv
56.891 208.945 56.883 208.895 56.883 208.832 cv
56.875 208.773 56.875 208.703 56.875 208.621 cv
56.875 208.547 56.879 208.477 56.887 208.414 cv
56.895 208.352 56.906 208.301 56.926 208.262 cv
56.941 208.223 56.961 208.195 56.988 208.176 cv
57.012 208.16 57.043 208.152 57.074 208.148 cv
57.121 208.152 57.191 208.18 57.285 208.234 cv
57.379 208.293 57.508 208.355 57.672 208.422 cv
57.836 208.488 58.035 208.551 58.277 208.609 cv
58.512 208.668 58.797 208.695 59.133 208.695 cv
59.434 208.695 59.715 208.66 59.973 208.586 cv
60.227 208.516 60.449 208.402 60.637 208.246 cv
60.82 208.094 60.965 207.898 61.07 207.66 cv
61.176 207.426 61.227 207.137 61.23 206.797 cv
61.227 206.516 61.184 206.266 61.094 206.047 cv
61.004 205.828 60.867 205.648 60.684 205.504 cv
60.496 205.363 60.262 205.258 59.98 205.184 cv
59.695 205.113 59.355 205.074 58.969 205.074 cv
58.684 205.074 58.445 205.09 58.246 205.117 cv
58.043 205.148 57.855 205.164 57.684 205.16 cv
57.555 205.164 57.461 205.133 57.41 205.07 cv
57.352 205.012 57.324 204.898 57.328 204.727 cv
57.328 201.113 li
57.324 200.965 57.359 200.855 57.434 200.777 cv
57.5 200.707 57.602 200.668 57.738 200.668 cv
61.668 200.668 li
61.703 200.668 61.738 200.68 61.773 200.699 cv
61.805 200.723 61.832 200.754 61.859 200.793 cv
61.879 200.836 61.895 200.887 61.91 200.949 cv
61.918 201.016 61.926 201.094 61.93 201.176 cv
61.926 201.344 61.902 201.469 61.863 201.559 cv
61.816 201.652 61.758 201.699 61.68 201.695 cv
58.508 201.695 li
58.508 204.184 li
58.66 204.164 58.816 204.152 58.98 204.145 cv
59.137 204.141 59.324 204.137 59.539 204.137 cv
60.023 204.137 60.449 204.199 60.816 204.32 cv
61.18 204.441 61.484 204.613 61.734 204.832 cv
61.977 205.059 62.164 205.324 62.289 205.637 cv
62.414 205.953 62.477 206.305 62.477 206.687 cv
cp
f
31.301 161.949 mo
63.215 161.949 li
63.215 179.039 li
31.301 179.039 li
cp
0 0 0 0 cmyk
ef
37.676 174.836 mo
37.672 174.926 37.664 174.996 37.652 175.055 cv
37.637 175.117 37.617 175.168 37.598 175.199 cv
37.574 175.238 37.551 175.262 37.52 175.277 cv
37.488 175.293 37.457 175.301 37.43 175.301 cv
32.793 175.301 li
32.758 175.301 32.73 175.293 32.703 175.277 cv
32.676 175.262 32.648 175.238 32.625 175.199 cv
32.598 175.168 32.578 175.117 32.566 175.055 cv
32.551 174.996 32.543 174.926 32.547 174.836 cv
32.543 174.758 32.551 174.684 32.566 174.621 cv
32.578 174.562 32.594 174.516 32.617 174.477 cv
32.633 174.441 32.66 174.41 32.691 174.387 cv
32.723 174.367 32.754 174.359 32.793 174.355 cv
34.645 174.355 li
34.645 167.609 li
32.93 168.629 li
32.84 168.68 32.77 168.707 32.723 168.715 cv
32.668 168.723 32.625 168.715 32.594 168.684 cv
32.559 168.656 32.539 168.605 32.527 168.535 cv
32.516 168.469 32.508 168.383 32.512 168.273 cv
32.508 168.199 32.512 168.133 32.523 168.074 cv
32.527 168.023 32.539 167.977 32.555 167.937 cv
32.566 167.902 32.586 167.871 32.609 167.844 cv
32.633 167.816 32.664 167.789 32.711 167.762 cv
34.754 166.449 li
34.77 166.437 34.789 166.426 34.82 166.418 cv
34.844 166.41 34.879 166.402 34.926 166.391 cv
34.965 166.383 35.016 166.375 35.07 166.371 cv
35.125 166.371 35.191 166.371 35.277 166.367 cv
35.383 166.371 35.477 166.375 35.551 166.383 cv
35.621 166.391 35.676 166.406 35.723 166.422 cv
35.762 166.441 35.789 166.461 35.805 166.484 cv
35.813 166.512 35.82 166.535 35.824 166.559 cv
35.824 174.355 li
37.43 174.355 li
37.465 174.359 37.5 174.367 37.531 174.387 cv
37.563 174.41 37.586 174.441 37.609 174.477 cv
37.625 174.516 37.641 174.562 37.656 174.621 cv
37.664 174.684 37.672 174.758 37.676 174.836 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.773 174.793 mo
44.77 174.879 44.766 174.953 44.754 175.016 cv
44.742 175.082 44.727 175.137 44.707 175.176 cv
44.684 175.223 44.656 175.254 44.625 175.27 cv
44.59 175.293 44.551 175.301 44.512 175.301 cv
39.609 175.301 li
39.547 175.301 39.488 175.293 39.441 175.277 cv
39.391 175.262 39.352 175.238 39.316 175.199 cv
39.281 175.168 39.254 175.113 39.242 175.043 cv
39.223 174.973 39.215 174.887 39.219 174.785 cv
39.215 174.695 39.219 174.617 39.227 174.547 cv
39.23 174.48 39.246 174.422 39.273 174.367 cv
39.297 174.316 39.328 174.262 39.363 174.207 cv
39.398 174.156 39.441 174.102 39.5 174.039 cv
41.273 172.215 li
41.684 171.797 42.012 171.422 42.262 171.086 cv
42.508 170.758 42.699 170.453 42.832 170.176 cv
42.965 169.902 43.051 169.652 43.098 169.426 cv
43.137 169.203 43.16 168.992 43.16 168.797 cv
43.16 168.602 43.125 168.418 43.059 168.238 cv
42.992 168.066 42.898 167.91 42.773 167.773 cv
42.648 167.645 42.492 167.539 42.305 167.457 cv
42.117 167.383 41.898 167.344 41.652 167.34 cv
41.363 167.344 41.105 167.383 40.879 167.457 cv
40.648 167.539 40.449 167.625 40.277 167.711 cv
40.105 167.805 39.961 167.887 39.844 167.965 cv
39.727 168.043 39.641 168.082 39.59 168.082 cv
39.555 168.082 39.523 168.074 39.5 168.055 cv
39.469 168.039 39.449 168.008 39.434 167.965 cv
39.418 167.926 39.402 167.871 39.395 167.801 cv
39.383 167.734 39.379 167.652 39.383 167.555 cv
39.379 167.488 39.383 167.43 39.391 167.379 cv
39.395 167.328 39.402 167.285 39.414 167.246 cv
39.422 167.211 39.438 167.176 39.457 167.145 cv
39.477 167.113 39.512 167.074 39.57 167.023 cv
39.621 166.977 39.715 166.91 39.852 166.828 cv
39.984 166.746 40.156 166.668 40.359 166.586 cv
40.563 166.508 40.785 166.437 41.031 166.383 cv
41.273 166.328 41.531 166.301 41.805 166.301 cv
42.23 166.301 42.605 166.363 42.93 166.484 cv
43.25 166.605 43.516 166.77 43.73 166.98 cv
43.941 167.191 44.102 167.437 44.207 167.711 cv
44.313 167.992 44.367 168.289 44.367 168.602 cv
44.367 168.891 44.34 169.172 44.289 169.449 cv
44.238 169.734 44.133 170.039 43.973 170.363 cv
43.809 170.691 43.574 171.055 43.27 171.453 cv
42.961 171.855 42.555 172.316 42.051 172.832 cv
40.645 174.301 li
44.504 174.301 li
44.535 174.305 44.57 174.316 44.609 174.332 cv
44.641 174.355 44.672 174.387 44.699 174.426 cv
44.723 174.469 44.742 174.52 44.754 174.578 cv
44.766 174.645 44.77 174.715 44.773 174.793 cv
cp
f
47.996 174.555 mo
47.996 174.883 47.941 175.098 47.836 175.203 cv
47.727 175.309 47.531 175.359 47.25 175.363 cv
46.973 175.359 46.781 175.309 46.68 175.207 cv
46.57 175.102 46.52 174.891 46.523 174.574 cv
46.52 174.25 46.574 174.035 46.684 173.926 cv
46.789 173.82 46.984 173.766 47.27 173.766 cv
47.543 173.766 47.73 173.82 47.84 173.926 cv
47.941 174.031 47.996 174.242 47.996 174.555 cv
cp
f
55.359 172.449 mo
55.359 172.926 55.277 173.348 55.117 173.719 cv
54.957 174.09 54.73 174.402 54.441 174.656 cv
54.145 174.91 53.797 175.105 53.395 175.234 cv
52.988 175.367 52.539 175.43 52.047 175.43 cv
51.77 175.43 51.508 175.41 51.266 175.371 cv
51.016 175.332 50.797 175.285 50.609 175.23 cv
50.414 175.176 50.258 175.121 50.133 175.062 cv
50.008 175.012 49.93 174.969 49.898 174.934 cv
49.863 174.902 49.84 174.871 49.828 174.844 cv
49.813 174.816 49.797 174.785 49.789 174.742 cv
49.773 174.707 49.766 174.656 49.766 174.594 cv
49.758 174.535 49.758 174.465 49.758 174.383 cv
49.758 174.309 49.762 174.238 49.77 174.176 cv
49.777 174.113 49.789 174.062 49.809 174.023 cv
49.824 173.984 49.844 173.957 49.871 173.937 cv
49.895 173.922 49.926 173.914 49.957 173.91 cv
50.004 173.914 50.074 173.941 50.168 173.996 cv
50.262 174.055 50.391 174.117 50.555 174.184 cv
50.719 174.25 50.918 174.312 51.16 174.371 cv
51.395 174.43 51.68 174.457 52.016 174.457 cv
52.316 174.457 52.598 174.422 52.855 174.348 cv
53.109 174.277 53.332 174.164 53.52 174.008 cv
53.703 173.855 53.848 173.66 53.953 173.422 cv
54.059 173.187 54.109 172.898 54.113 172.559 cv
54.109 172.277 54.066 172.027 53.977 171.809 cv
53.887 171.59 53.75 171.41 53.566 171.266 cv
53.379 171.125 53.145 171.02 52.863 170.945 cv
52.578 170.875 52.238 170.836 51.852 170.836 cv
51.566 170.836 51.328 170.852 51.129 170.879 cv
50.926 170.91 50.738 170.926 50.566 170.922 cv
50.438 170.926 50.344 170.895 50.293 170.832 cv
50.234 170.773 50.207 170.66 50.211 170.488 cv
50.211 166.875 li
50.207 166.727 50.242 166.617 50.316 166.539 cv
50.383 166.469 50.484 166.43 50.621 166.43 cv
54.551 166.43 li
54.586 166.43 54.621 166.441 54.656 166.461 cv
54.688 166.484 54.715 166.516 54.742 166.555 cv
54.762 166.598 54.777 166.648 54.793 166.711 cv
54.801 166.777 54.809 166.855 54.813 166.937 cv
54.809 167.105 54.785 167.23 54.746 167.32 cv
54.699 167.414 54.641 167.461 54.563 167.457 cv
51.391 167.457 li
51.391 169.945 li
51.543 169.926 51.699 169.914 51.863 169.906 cv
52.02 169.902 52.207 169.898 52.422 169.898 cv
52.906 169.898 53.332 169.961 53.699 170.082 cv
54.063 170.203 54.367 170.375 54.617 170.594 cv
54.859 170.82 55.047 171.086 55.172 171.398 cv
55.297 171.715 55.359 172.066 55.359 172.449 cv
cp
f
62.813 170.844 mo
62.809 171.527 62.758 172.148 62.652 172.711 cv
62.543 173.273 62.363 173.758 62.117 174.16 cv
61.863 174.566 61.535 174.879 61.137 175.098 cv
60.73 175.32 60.238 175.43 59.652 175.43 cv
59.094 175.43 58.621 175.332 58.242 175.133 cv
57.859 174.937 57.555 174.645 57.32 174.258 cv
57.086 173.871 56.918 173.398 56.824 172.832 cv
56.723 172.27 56.676 171.621 56.676 170.887 cv
56.676 170.215 56.73 169.594 56.84 169.027 cv
56.949 168.465 57.125 167.98 57.375 167.574 cv
57.617 167.172 57.941 166.859 58.348 166.633 cv
58.746 166.414 59.242 166.301 59.832 166.301 cv
60.391 166.301 60.863 166.402 61.246 166.598 cv
61.629 166.801 61.934 167.094 62.168 167.477 cv
62.398 167.867 62.566 168.34 62.664 168.902 cv
62.762 169.465 62.809 170.113 62.813 170.844 cv
cp
61.605 170.926 mo
61.602 170.484 61.586 170.086 61.559 169.734 cv
61.523 169.383 61.477 169.074 61.418 168.805 cv
61.352 168.535 61.273 168.305 61.176 168.109 cv
61.078 167.918 60.961 167.758 60.824 167.629 cv
60.684 167.504 60.523 167.41 60.352 167.352 cv
60.172 167.297 59.977 167.27 59.762 167.266 cv
59.371 167.27 59.055 167.359 58.816 167.543 cv
58.57 167.727 58.379 167.98 58.242 168.297 cv
58.102 168.617 58.008 168.988 57.957 169.418 cv
57.906 169.848 57.883 170.312 57.883 170.805 cv
57.883 171.469 57.914 172.031 57.984 172.492 cv
58.051 172.961 58.16 173.34 58.313 173.629 cv
58.457 173.926 58.648 174.137 58.879 174.266 cv
59.109 174.402 59.391 174.469 59.723 174.465 cv
59.977 174.469 60.199 174.43 60.395 174.344 cv
60.586 174.266 60.754 174.145 60.895 173.988 cv
61.035 173.836 61.148 173.652 61.242 173.437 cv
61.328 173.223 61.402 172.984 61.461 172.723 cv
61.512 172.465 61.551 172.184 61.574 171.879 cv
61.594 171.574 61.602 171.258 61.605 170.926 cv
cp
f
31.301 127.711 mo
63.215 127.711 li
63.215 144.801 li
31.301 144.801 li
cp
0 0 0 0 cmyk
ef
37.676 140.586 mo
37.672 140.676 37.664 140.746 37.652 140.805 cv
37.637 140.867 37.617 140.918 37.598 140.949 cv
37.574 140.988 37.551 141.012 37.52 141.027 cv
37.488 141.043 37.457 141.051 37.43 141.051 cv
32.793 141.051 li
32.758 141.051 32.73 141.043 32.703 141.027 cv
32.676 141.012 32.648 140.988 32.625 140.949 cv
32.598 140.918 32.578 140.867 32.566 140.805 cv
32.551 140.746 32.543 140.676 32.547 140.586 cv
32.543 140.508 32.551 140.434 32.566 140.371 cv
32.578 140.312 32.594 140.266 32.617 140.227 cv
32.633 140.191 32.66 140.16 32.691 140.137 cv
32.723 140.117 32.754 140.109 32.793 140.105 cv
34.645 140.105 li
34.645 133.359 li
32.93 134.379 li
32.84 134.43 32.77 134.457 32.723 134.465 cv
32.668 134.473 32.625 134.465 32.594 134.434 cv
32.559 134.406 32.539 134.355 32.527 134.285 cv
32.516 134.219 32.508 134.133 32.512 134.023 cv
32.508 133.949 32.512 133.883 32.523 133.824 cv
32.527 133.773 32.539 133.727 32.555 133.687 cv
32.566 133.652 32.586 133.621 32.609 133.594 cv
32.633 133.566 32.664 133.539 32.711 133.512 cv
34.754 132.199 li
34.77 132.187 34.789 132.176 34.82 132.168 cv
34.844 132.16 34.879 132.152 34.926 132.141 cv
34.965 132.133 35.016 132.125 35.07 132.121 cv
35.125 132.121 35.191 132.121 35.277 132.117 cv
35.383 132.121 35.477 132.125 35.551 132.133 cv
35.621 132.141 35.676 132.156 35.723 132.172 cv
35.762 132.191 35.789 132.211 35.805 132.234 cv
35.813 132.262 35.82 132.285 35.824 132.309 cv
35.824 140.105 li
37.43 140.105 li
37.465 140.109 37.5 140.117 37.531 140.137 cv
37.563 140.16 37.586 140.191 37.609 140.227 cv
37.625 140.266 37.641 140.312 37.656 140.371 cv
37.664 140.434 37.672 140.508 37.676 140.586 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.703 138.516 mo
44.699 138.926 44.629 139.293 44.488 139.617 cv
44.344 139.945 44.141 140.227 43.879 140.457 cv
43.613 140.691 43.285 140.867 42.898 140.992 cv
42.508 141.117 42.07 141.18 41.586 141.18 cv
41.281 141.18 41.004 141.152 40.75 141.105 cv
40.488 141.059 40.258 141.008 40.063 140.937 cv
39.859 140.875 39.695 140.805 39.563 140.734 cv
39.43 140.664 39.344 140.613 39.313 140.578 cv
39.273 140.551 39.25 140.52 39.234 140.484 cv
39.215 140.453 39.195 140.414 39.184 140.367 cv
39.168 140.324 39.16 140.27 39.152 140.199 cv
39.145 140.137 39.141 140.055 39.145 139.953 cv
39.141 139.793 39.156 139.68 39.191 139.613 cv
39.223 139.551 39.27 139.516 39.332 139.516 cv
39.375 139.516 39.457 139.555 39.582 139.625 cv
39.703 139.703 39.863 139.781 40.059 139.863 cv
40.25 139.949 40.477 140.027 40.742 140.098 cv
41 140.172 41.293 140.207 41.613 140.207 cv
41.922 140.207 42.191 140.168 42.43 140.09 cv
42.66 140.012 42.859 139.902 43.02 139.762 cv
43.176 139.621 43.293 139.453 43.375 139.258 cv
43.453 139.062 43.492 138.852 43.496 138.625 cv
43.492 138.375 43.441 138.148 43.344 137.945 cv
43.238 137.746 43.09 137.574 42.898 137.426 cv
42.699 137.281 42.461 137.168 42.176 137.09 cv
41.891 137.012 41.566 136.973 41.203 136.973 cv
40.332 136.973 li
40.289 136.973 40.254 136.965 40.219 136.949 cv
40.184 136.934 40.152 136.906 40.129 136.867 cv
40.102 136.832 40.082 136.785 40.066 136.727 cv
40.051 136.668 40.043 136.59 40.043 136.492 cv
40.043 136.406 40.047 136.336 40.063 136.277 cv
40.07 136.223 40.09 136.176 40.121 136.141 cv
40.145 136.105 40.176 136.082 40.207 136.062 cv
40.238 136.051 40.273 136.043 40.316 136.039 cv
41.09 136.039 li
41.391 136.043 41.66 136.004 41.902 135.922 cv
42.137 135.848 42.34 135.734 42.512 135.586 cv
42.676 135.441 42.805 135.266 42.895 135.062 cv
42.984 134.859 43.031 134.633 43.031 134.379 cv
43.031 134.199 43 134.023 42.941 133.855 cv
42.879 133.691 42.789 133.547 42.672 133.422 cv
42.551 133.297 42.398 133.199 42.219 133.129 cv
42.031 133.059 41.82 133.023 41.578 133.023 cv
41.313 133.023 41.066 133.066 40.848 133.145 cv
40.621 133.227 40.426 133.312 40.254 133.402 cv
40.078 133.496 39.934 133.582 39.82 133.66 cv
39.707 133.742 39.625 133.781 39.582 133.777 cv
39.547 133.781 39.52 133.773 39.496 133.762 cv
39.469 133.75 39.449 133.727 39.434 133.691 cv
39.418 133.66 39.406 133.613 39.398 133.547 cv
39.391 133.488 39.387 133.406 39.391 133.305 cv
39.387 133.238 39.387 133.18 39.395 133.125 cv
39.395 133.074 39.406 133.027 39.422 132.984 cv
39.438 132.949 39.453 132.914 39.473 132.879 cv
39.488 132.852 39.52 132.812 39.563 132.766 cv
39.605 132.723 39.691 132.66 39.828 132.578 cv
39.957 132.496 40.121 132.418 40.316 132.336 cv
40.508 132.258 40.73 132.187 40.988 132.133 cv
41.238 132.078 41.512 132.051 41.809 132.051 cv
42.215 132.051 42.578 132.105 42.891 132.207 cv
43.203 132.316 43.461 132.465 43.672 132.652 cv
43.875 132.848 44.031 133.078 44.137 133.344 cv
44.238 133.613 44.289 133.906 44.293 134.23 cv
44.289 134.512 44.254 134.773 44.184 135.008 cv
44.109 135.25 44 135.461 43.859 135.645 cv
43.715 135.832 43.543 135.988 43.34 136.117 cv
43.133 136.25 42.895 136.344 42.625 136.391 cv
42.625 136.402 li
42.93 136.437 43.211 136.512 43.465 136.633 cv
43.719 136.754 43.938 136.906 44.121 137.09 cv
44.301 137.273 44.441 137.488 44.547 137.73 cv
44.648 137.977 44.699 138.238 44.703 138.516 cv
cp
f
47.996 140.305 mo
47.996 140.633 47.941 140.848 47.836 140.953 cv
47.727 141.059 47.531 141.109 47.25 141.113 cv
46.973 141.109 46.781 141.059 46.68 140.957 cv
46.57 140.852 46.52 140.641 46.523 140.324 cv
46.52 140 46.574 139.785 46.684 139.676 cv
46.789 139.57 46.984 139.516 47.27 139.516 cv
47.543 139.516 47.73 139.57 47.84 139.676 cv
47.941 139.781 47.996 139.992 47.996 140.305 cv
cp
f
55.531 132.687 mo
55.527 132.773 55.523 132.848 55.52 132.91 cv
55.512 132.98 55.504 133.043 55.492 133.102 cv
55.48 133.168 55.465 133.227 55.445 133.281 cv
55.422 133.34 55.398 133.402 55.375 133.461 cv
52.18 140.824 li
52.152 140.883 52.125 140.926 52.094 140.957 cv
52.059 140.992 52.016 141.02 51.961 141.039 cv
51.906 141.059 51.836 141.07 51.758 141.082 cv
51.672 141.086 51.574 141.09 51.457 141.094 cv
51.301 141.09 51.18 141.082 51.094 141.07 cv
51.008 141.055 50.945 141.039 50.906 141.008 cv
50.867 140.98 50.848 140.941 50.855 140.898 cv
50.855 140.855 50.871 140.805 50.902 140.742 cv
54.262 133.215 li
50.004 133.215 li
49.918 133.219 49.852 133.172 49.809 133.078 cv
49.766 132.988 49.746 132.859 49.746 132.695 cv
49.746 132.609 49.75 132.535 49.762 132.469 cv
49.773 132.406 49.789 132.352 49.813 132.309 cv
49.832 132.266 49.859 132.234 49.895 132.211 cv
49.926 132.191 49.965 132.18 50.004 132.18 cv
55.176 132.18 li
55.234 132.18 55.289 132.187 55.34 132.203 cv
55.387 132.219 55.422 132.246 55.449 132.285 cv
55.473 132.324 55.492 132.379 55.508 132.441 cv
55.52 132.508 55.527 132.59 55.531 132.687 cv
cp
f
62.477 138.199 mo
62.477 138.676 62.395 139.098 62.234 139.469 cv
62.074 139.84 61.848 140.152 61.559 140.406 cv
61.262 140.66 60.914 140.855 60.512 140.984 cv
60.105 141.117 59.656 141.18 59.164 141.18 cv
58.887 141.18 58.625 141.16 58.383 141.121 cv
58.133 141.082 57.914 141.035 57.727 140.98 cv
57.531 140.926 57.375 140.871 57.25 140.812 cv
57.125 140.762 57.047 140.719 57.016 140.684 cv
56.98 140.652 56.957 140.621 56.945 140.594 cv
56.93 140.566 56.914 140.535 56.906 140.492 cv
56.891 140.457 56.883 140.406 56.883 140.344 cv
56.875 140.285 56.875 140.215 56.875 140.133 cv
56.875 140.059 56.879 139.988 56.887 139.926 cv
56.895 139.863 56.906 139.812 56.926 139.773 cv
56.941 139.734 56.961 139.707 56.988 139.687 cv
57.012 139.672 57.043 139.664 57.074 139.66 cv
57.121 139.664 57.191 139.691 57.285 139.746 cv
57.379 139.805 57.508 139.867 57.672 139.934 cv
57.836 140 58.035 140.062 58.277 140.121 cv
58.512 140.18 58.797 140.207 59.133 140.207 cv
59.434 140.207 59.715 140.172 59.973 140.098 cv
60.227 140.027 60.449 139.914 60.637 139.758 cv
60.82 139.605 60.965 139.41 61.07 139.172 cv
61.176 138.937 61.227 138.648 61.23 138.309 cv
61.227 138.027 61.184 137.777 61.094 137.559 cv
61.004 137.34 60.867 137.16 60.684 137.016 cv
60.496 136.875 60.262 136.77 59.98 136.695 cv
59.695 136.625 59.355 136.586 58.969 136.586 cv
58.684 136.586 58.445 136.602 58.246 136.629 cv
58.043 136.66 57.855 136.676 57.684 136.672 cv
57.555 136.676 57.461 136.645 57.41 136.582 cv
57.352 136.523 57.324 136.41 57.328 136.238 cv
57.328 132.625 li
57.324 132.477 57.359 132.367 57.434 132.289 cv
57.5 132.219 57.602 132.18 57.738 132.18 cv
61.668 132.18 li
61.703 132.18 61.738 132.191 61.773 132.211 cv
61.805 132.234 61.832 132.266 61.859 132.305 cv
61.879 132.348 61.895 132.398 61.91 132.461 cv
61.918 132.527 61.926 132.605 61.93 132.687 cv
61.926 132.855 61.902 132.98 61.863 133.07 cv
61.816 133.164 61.758 133.211 61.68 133.207 cv
58.508 133.207 li
58.508 135.695 li
58.66 135.676 58.816 135.664 58.98 135.656 cv
59.137 135.652 59.324 135.648 59.539 135.648 cv
60.023 135.648 60.449 135.711 60.816 135.832 cv
61.18 135.953 61.484 136.125 61.734 136.344 cv
61.977 136.57 62.164 136.836 62.289 137.148 cv
62.414 137.465 62.477 137.816 62.477 138.199 cv
cp
f
31.301 93.469 mo
63.215 93.469 li
63.215 110.559 li
31.301 110.559 li
cp
0 0 0 0 cmyk
ef
37.676 106.336 mo
37.672 106.426 37.664 106.496 37.652 106.555 cv
37.637 106.617 37.617 106.668 37.598 106.699 cv
37.574 106.738 37.551 106.762 37.52 106.777 cv
37.488 106.793 37.457 106.801 37.43 106.801 cv
32.793 106.801 li
32.758 106.801 32.73 106.793 32.703 106.777 cv
32.676 106.762 32.648 106.738 32.625 106.699 cv
32.598 106.668 32.578 106.617 32.566 106.555 cv
32.551 106.496 32.543 106.426 32.547 106.336 cv
32.543 106.258 32.551 106.184 32.566 106.121 cv
32.578 106.062 32.594 106.016 32.617 105.977 cv
32.633 105.941 32.66 105.91 32.691 105.887 cv
32.723 105.867 32.754 105.859 32.793 105.855 cv
34.645 105.855 li
34.645 99.109 li
32.93 100.129 li
32.84 100.18 32.77 100.207 32.723 100.215 cv
32.668 100.223 32.625 100.215 32.594 100.184 cv
32.559 100.156 32.539 100.105 32.527 100.035 cv
32.516 99.969 32.508 99.883 32.512 99.773 cv
32.508 99.699 32.512 99.633 32.523 99.574 cv
32.527 99.523 32.539 99.477 32.555 99.437 cv
32.566 99.402 32.586 99.371 32.609 99.344 cv
32.633 99.316 32.664 99.289 32.711 99.262 cv
34.754 97.949 li
34.77 97.937 34.789 97.926 34.82 97.918 cv
34.844 97.91 34.879 97.902 34.926 97.891 cv
34.965 97.883 35.016 97.875 35.07 97.871 cv
35.125 97.871 35.191 97.871 35.277 97.867 cv
35.383 97.871 35.477 97.875 35.551 97.883 cv
35.621 97.891 35.676 97.906 35.723 97.922 cv
35.762 97.941 35.789 97.961 35.805 97.984 cv
35.813 98.012 35.82 98.035 35.824 98.059 cv
35.824 105.855 li
37.43 105.855 li
37.465 105.859 37.5 105.867 37.531 105.887 cv
37.563 105.91 37.586 105.941 37.609 105.977 cv
37.625 106.016 37.641 106.062 37.656 106.121 cv
37.664 106.184 37.672 106.258 37.676 106.336 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.73 103.949 mo
44.73 104.426 44.648 104.848 44.488 105.219 cv
44.328 105.59 44.102 105.902 43.813 106.156 cv
43.516 106.41 43.168 106.605 42.766 106.734 cv
42.359 106.867 41.91 106.93 41.418 106.93 cv
41.141 106.93 40.879 106.91 40.637 106.871 cv
40.387 106.832 40.168 106.785 39.98 106.73 cv
39.785 106.676 39.629 106.621 39.504 106.562 cv
39.379 106.512 39.301 106.469 39.27 106.434 cv
39.234 106.402 39.211 106.371 39.199 106.344 cv
39.184 106.316 39.168 106.285 39.16 106.242 cv
39.145 106.207 39.137 106.156 39.137 106.094 cv
39.129 106.035 39.129 105.965 39.129 105.883 cv
39.129 105.809 39.133 105.738 39.141 105.676 cv
39.148 105.613 39.16 105.562 39.18 105.523 cv
39.195 105.484 39.215 105.457 39.242 105.437 cv
39.266 105.422 39.297 105.414 39.328 105.41 cv
39.375 105.414 39.445 105.441 39.539 105.496 cv
39.633 105.555 39.762 105.617 39.926 105.684 cv
40.09 105.75 40.289 105.812 40.531 105.871 cv
40.766 105.93 41.051 105.957 41.387 105.957 cv
41.688 105.957 41.969 105.922 42.227 105.848 cv
42.48 105.777 42.703 105.664 42.891 105.508 cv
43.074 105.355 43.219 105.16 43.324 104.922 cv
43.43 104.687 43.48 104.398 43.484 104.059 cv
43.48 103.777 43.438 103.527 43.348 103.309 cv
43.258 103.09 43.121 102.91 42.938 102.766 cv
42.75 102.625 42.516 102.52 42.234 102.445 cv
41.949 102.375 41.609 102.336 41.223 102.336 cv
40.938 102.336 40.699 102.352 40.5 102.379 cv
40.297 102.41 40.109 102.426 39.938 102.422 cv
39.809 102.426 39.715 102.395 39.664 102.332 cv
39.605 102.273 39.578 102.16 39.582 101.988 cv
39.582 98.375 li
39.578 98.227 39.613 98.117 39.688 98.039 cv
39.754 97.969 39.855 97.93 39.992 97.93 cv
43.922 97.93 li
43.957 97.93 43.992 97.941 44.027 97.961 cv
44.059 97.984 44.086 98.016 44.113 98.055 cv
44.133 98.098 44.148 98.148 44.164 98.211 cv
44.172 98.277 44.18 98.355 44.184 98.437 cv
44.18 98.605 44.156 98.73 44.117 98.82 cv
44.07 98.914 44.012 98.961 43.934 98.957 cv
40.762 98.957 li
40.762 101.445 li
40.914 101.426 41.07 101.414 41.234 101.406 cv
41.391 101.402 41.578 101.398 41.793 101.398 cv
42.277 101.398 42.703 101.461 43.07 101.582 cv
43.434 101.703 43.738 101.875 43.988 102.094 cv
44.23 102.32 44.418 102.586 44.543 102.898 cv
44.668 103.215 44.73 103.566 44.73 103.949 cv
cp
f
47.996 106.055 mo
47.996 106.383 47.941 106.598 47.836 106.703 cv
47.727 106.809 47.531 106.859 47.25 106.863 cv
46.973 106.859 46.781 106.809 46.68 106.707 cv
46.57 106.602 46.52 106.391 46.523 106.074 cv
46.52 105.75 46.574 105.535 46.684 105.426 cv
46.789 105.32 46.984 105.266 47.27 105.266 cv
47.543 105.266 47.73 105.32 47.84 105.426 cv
47.941 105.531 47.996 105.742 47.996 106.055 cv
cp
f
55.695 102.344 mo
55.691 103.027 55.641 103.648 55.535 104.211 cv
55.426 104.773 55.246 105.258 55 105.66 cv
54.746 106.066 54.418 106.379 54.02 106.598 cv
53.613 106.82 53.121 106.93 52.535 106.93 cv
51.977 106.93 51.504 106.832 51.125 106.633 cv
50.742 106.437 50.438 106.145 50.203 105.758 cv
49.969 105.371 49.801 104.898 49.707 104.332 cv
49.605 103.77 49.559 103.121 49.559 102.387 cv
49.559 101.715 49.613 101.094 49.723 100.527 cv
49.832 99.965 50.008 99.48 50.258 99.074 cv
50.5 98.672 50.824 98.359 51.23 98.133 cv
51.629 97.914 52.125 97.801 52.715 97.801 cv
53.273 97.801 53.746 97.902 54.129 98.098 cv
54.512 98.301 54.816 98.594 55.051 98.977 cv
55.281 99.367 55.449 99.84 55.547 100.402 cv
55.645 100.965 55.691 101.613 55.695 102.344 cv
cp
54.488 102.426 mo
54.484 101.984 54.469 101.586 54.441 101.234 cv
54.406 100.883 54.359 100.574 54.301 100.305 cv
54.234 100.035 54.156 99.805 54.059 99.609 cv
53.961 99.418 53.844 99.258 53.707 99.129 cv
53.566 99.004 53.406 98.91 53.234 98.852 cv
53.055 98.797 52.859 98.77 52.645 98.766 cv
52.254 98.77 51.938 98.859 51.699 99.043 cv
51.453 99.227 51.262 99.48 51.125 99.797 cv
50.984 100.117 50.891 100.488 50.84 100.918 cv
50.789 101.348 50.766 101.812 50.766 102.305 cv
50.766 102.969 50.797 103.531 50.867 103.992 cv
50.934 104.461 51.043 104.84 51.195 105.129 cv
51.34 105.426 51.531 105.637 51.762 105.766 cv
51.992 105.902 52.273 105.969 52.605 105.965 cv
52.859 105.969 53.082 105.93 53.277 105.844 cv
53.469 105.766 53.637 105.645 53.777 105.488 cv
53.918 105.336 54.031 105.152 54.125 104.937 cv
54.211 104.723 54.285 104.484 54.344 104.223 cv
54.395 103.965 54.434 103.684 54.457 103.379 cv
54.477 103.074 54.484 102.758 54.488 102.426 cv
cp
f
62.813 102.344 mo
62.809 103.027 62.758 103.648 62.652 104.211 cv
62.543 104.773 62.363 105.258 62.117 105.66 cv
61.863 106.066 61.535 106.379 61.137 106.598 cv
60.73 106.82 60.238 106.93 59.652 106.93 cv
59.094 106.93 58.621 106.832 58.242 106.633 cv
57.859 106.437 57.555 106.145 57.32 105.758 cv
57.086 105.371 56.918 104.898 56.824 104.332 cv
56.723 103.77 56.676 103.121 56.676 102.387 cv
56.676 101.715 56.73 101.094 56.84 100.527 cv
56.949 99.965 57.125 99.48 57.375 99.074 cv
57.617 98.672 57.941 98.359 58.348 98.133 cv
58.746 97.914 59.242 97.801 59.832 97.801 cv
60.391 97.801 60.863 97.902 61.246 98.098 cv
61.629 98.301 61.934 98.594 62.168 98.977 cv
62.398 99.367 62.566 99.84 62.664 100.402 cv
62.762 100.965 62.809 101.613 62.813 102.344 cv
cp
61.605 102.426 mo
61.602 101.984 61.586 101.586 61.559 101.234 cv
61.523 100.883 61.477 100.574 61.418 100.305 cv
61.352 100.035 61.273 99.805 61.176 99.609 cv
61.078 99.418 60.961 99.258 60.824 99.129 cv
60.684 99.004 60.523 98.91 60.352 98.852 cv
60.172 98.797 59.977 98.77 59.762 98.766 cv
59.371 98.77 59.055 98.859 58.816 99.043 cv
58.57 99.227 58.379 99.48 58.242 99.797 cv
58.102 100.117 58.008 100.488 57.957 100.918 cv
57.906 101.348 57.883 101.812 57.883 102.305 cv
57.883 102.969 57.914 103.531 57.984 103.992 cv
58.051 104.461 58.16 104.84 58.313 105.129 cv
58.457 105.426 58.648 105.637 58.879 105.766 cv
59.109 105.902 59.391 105.969 59.723 105.965 cv
59.977 105.969 60.199 105.93 60.395 105.844 cv
60.586 105.766 60.754 105.645 60.895 105.488 cv
61.035 105.336 61.148 105.152 61.242 104.937 cv
61.328 104.723 61.402 104.484 61.461 104.223 cv
61.512 103.965 61.551 103.684 61.574 103.379 cv
61.594 103.074 61.602 102.758 61.605 102.426 cv
cp
f
31.301 59.23 mo
63.215 59.23 li
63.215 76.32 li
31.301 76.32 li
cp
0 0 0 0 cmyk
ef
37.688 72.109 mo
37.684 72.199 37.676 72.273 37.664 72.332 cv
37.648 72.395 37.629 72.445 37.609 72.477 cv
37.586 72.516 37.563 72.539 37.531 72.555 cv
37.5 72.57 37.469 72.578 37.438 72.578 cv
32.797 72.578 li
32.766 72.578 32.734 72.57 32.707 72.555 cv
32.68 72.539 32.652 72.516 32.629 72.477 cv
32.598 72.445 32.578 72.395 32.57 72.332 cv
32.555 72.273 32.551 72.199 32.551 72.109 cv
32.551 72.031 32.555 71.961 32.57 71.898 cv
32.578 71.84 32.598 71.793 32.621 71.75 cv
32.641 71.715 32.664 71.684 32.695 71.66 cv
32.723 71.641 32.758 71.629 32.797 71.629 cv
34.652 71.629 li
34.652 64.875 li
32.934 65.895 li
32.844 65.945 32.773 65.973 32.723 65.98 cv
32.668 65.988 32.629 65.98 32.598 65.949 cv
32.566 65.922 32.543 65.871 32.531 65.801 cv
32.52 65.734 32.516 65.648 32.516 65.539 cv
32.516 65.465 32.516 65.398 32.523 65.34 cv
32.527 65.289 32.539 65.242 32.555 65.203 cv
32.566 65.168 32.586 65.137 32.613 65.109 cv
32.637 65.082 32.672 65.055 32.715 65.023 cv
34.762 63.711 li
34.777 63.703 34.801 63.691 34.828 63.68 cv
34.855 63.672 34.891 63.664 34.934 63.652 cv
34.973 63.645 35.02 63.637 35.078 63.633 cv
35.129 63.633 35.199 63.633 35.281 63.629 cv
35.391 63.633 35.48 63.637 35.559 63.645 cv
35.629 63.656 35.688 63.668 35.727 63.684 cv
35.766 63.699 35.793 63.723 35.809 63.746 cv
35.824 63.773 35.832 63.797 35.832 63.824 cv
35.832 71.629 li
37.438 71.629 li
37.473 71.629 37.504 71.641 37.539 71.66 cv
37.57 71.684 37.598 71.715 37.621 71.75 cv
37.637 71.793 37.652 71.84 37.668 71.898 cv
37.676 71.961 37.684 72.031 37.688 72.109 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.965 69.699 mo
44.961 70.094 44.902 70.469 44.785 70.832 cv
44.664 71.195 44.48 71.516 44.238 71.793 cv
43.988 72.07 43.676 72.293 43.297 72.457 cv
42.914 72.625 42.465 72.707 41.953 72.707 cv
41.578 72.707 41.25 72.664 40.969 72.57 cv
40.68 72.484 40.434 72.352 40.227 72.18 cv
40.016 72.012 39.84 71.805 39.703 71.555 cv
39.559 71.309 39.445 71.027 39.363 70.711 cv
39.277 70.398 39.219 70.055 39.184 69.676 cv
39.145 69.301 39.125 68.895 39.129 68.465 cv
39.125 68.086 39.148 67.703 39.191 67.312 cv
39.23 66.926 39.301 66.551 39.41 66.184 cv
39.512 65.824 39.656 65.484 39.84 65.164 cv
40.02 64.852 40.246 64.574 40.52 64.336 cv
40.789 64.102 41.117 63.914 41.5 63.777 cv
41.879 63.641 42.32 63.574 42.824 63.57 cv
42.992 63.574 43.164 63.582 43.34 63.602 cv
43.512 63.621 43.672 63.648 43.82 63.684 cv
43.965 63.719 44.086 63.758 44.188 63.797 cv
44.285 63.84 44.352 63.871 44.387 63.895 cv
44.418 63.922 44.441 63.953 44.461 63.98 cv
44.473 64.012 44.484 64.043 44.496 64.074 cv
44.504 64.113 44.512 64.152 44.52 64.191 cv
44.52 64.238 44.523 64.289 44.527 64.352 cv
44.523 64.437 44.523 64.512 44.523 64.566 cv
44.52 64.629 44.508 64.676 44.496 64.707 cv
44.477 64.746 44.457 64.773 44.434 64.789 cv
44.406 64.812 44.375 64.82 44.336 64.816 cv
44.281 64.82 44.211 64.805 44.129 64.77 cv
44.039 64.742 43.934 64.707 43.813 64.664 cv
43.688 64.629 43.539 64.594 43.363 64.559 cv
43.184 64.527 42.977 64.512 42.75 64.508 cv
42.32 64.512 41.953 64.598 41.648 64.77 cv
41.34 64.945 41.09 65.18 40.898 65.473 cv
40.699 65.766 40.555 66.105 40.465 66.492 cv
40.367 66.879 40.316 67.281 40.305 67.703 cv
40.422 67.633 40.555 67.566 40.703 67.496 cv
40.852 67.434 41.012 67.371 41.191 67.312 cv
41.363 67.262 41.551 67.219 41.75 67.18 cv
41.945 67.148 42.156 67.129 42.383 67.125 cv
42.863 67.129 43.27 67.195 43.598 67.32 cv
43.926 67.453 44.191 67.633 44.398 67.863 cv
44.602 68.098 44.746 68.371 44.836 68.684 cv
44.918 69 44.961 69.34 44.965 69.699 cv
cp
43.773 69.812 mo
43.773 69.547 43.746 69.309 43.691 69.09 cv
43.637 68.875 43.547 68.687 43.426 68.535 cv
43.301 68.387 43.137 68.27 42.934 68.184 cv
42.727 68.102 42.473 68.062 42.172 68.059 cv
42 68.062 41.832 68.078 41.664 68.105 cv
41.492 68.137 41.328 68.176 41.172 68.23 cv
41.012 68.285 40.859 68.348 40.719 68.414 cv
40.574 68.488 40.441 68.566 40.324 68.645 cv
40.32 69.238 40.359 69.73 40.438 70.125 cv
40.512 70.527 40.621 70.848 40.766 71.086 cv
40.91 71.328 41.09 71.5 41.305 71.602 cv
41.52 71.707 41.773 71.758 42.063 71.754 cv
42.352 71.758 42.605 71.703 42.824 71.59 cv
43.039 71.484 43.215 71.336 43.359 71.148 cv
43.5 70.961 43.605 70.754 43.672 70.523 cv
43.738 70.293 43.773 70.055 43.773 69.812 cv
cp
f
47.98 71.828 mo
47.977 72.156 47.922 72.375 47.82 72.48 cv
47.711 72.586 47.516 72.637 47.234 72.641 cv
46.953 72.637 46.762 72.586 46.66 72.484 cv
46.551 72.379 46.5 72.168 46.504 71.852 cv
46.5 71.527 46.555 71.312 46.664 71.203 cv
46.773 71.098 46.969 71.043 47.254 71.039 cv
47.527 71.043 47.719 71.098 47.824 71.199 cv
47.926 71.309 47.977 71.516 47.98 71.828 cv
cp
f
55.398 72.07 mo
55.395 72.156 55.391 72.23 55.383 72.293 cv
55.371 72.359 55.355 72.414 55.336 72.453 cv
55.313 72.5 55.281 72.531 55.25 72.547 cv
55.211 72.57 55.176 72.578 55.141 72.578 cv
50.23 72.578 li
50.164 72.578 50.105 72.57 50.059 72.555 cv
50.008 72.539 49.969 72.516 49.938 72.477 cv
49.902 72.445 49.875 72.391 49.859 72.32 cv
49.84 72.25 49.832 72.164 49.836 72.062 cv
49.832 71.973 49.836 71.895 49.848 71.824 cv
49.852 71.758 49.867 71.695 49.895 71.641 cv
49.914 71.59 49.945 71.539 49.98 71.484 cv
50.016 71.434 50.063 71.379 50.121 71.316 cv
51.898 69.488 li
52.305 69.07 52.633 68.691 52.883 68.355 cv
53.125 68.023 53.316 67.719 53.457 67.441 cv
53.59 67.172 53.68 66.922 53.723 66.695 cv
53.762 66.469 53.781 66.258 53.785 66.062 cv
53.781 65.867 53.75 65.684 53.684 65.504 cv
53.617 65.332 53.52 65.176 53.398 65.039 cv
53.27 64.91 53.113 64.805 52.926 64.723 cv
52.734 64.648 52.52 64.609 52.277 64.605 cv
51.988 64.609 51.727 64.648 51.5 64.723 cv
51.266 64.805 51.066 64.891 50.898 64.977 cv
50.723 65.07 50.578 65.152 50.465 65.23 cv
50.348 65.309 50.262 65.348 50.207 65.348 cv
50.172 65.348 50.145 65.34 50.121 65.32 cv
50.094 65.305 50.07 65.273 50.055 65.23 cv
50.035 65.191 50.023 65.137 50.016 65.066 cv
50.008 64.996 50.004 64.914 50.004 64.816 cv
50.004 64.75 50.004 64.691 50.008 64.641 cv
50.012 64.59 50.02 64.547 50.031 64.508 cv
50.043 64.477 50.059 64.441 50.078 64.406 cv
50.094 64.379 50.129 64.34 50.188 64.289 cv
50.238 64.242 50.336 64.176 50.473 64.09 cv
50.605 64.008 50.773 63.926 50.98 63.848 cv
51.18 63.77 51.402 63.703 51.652 63.645 cv
51.895 63.594 52.152 63.566 52.426 63.562 cv
52.852 63.566 53.23 63.629 53.555 63.746 cv
53.875 63.871 54.141 64.035 54.359 64.242 cv
54.57 64.457 54.73 64.703 54.836 64.977 cv
54.941 65.258 54.996 65.555 54.996 65.867 cv
54.996 66.156 54.969 66.437 54.918 66.719 cv
54.867 67 54.762 67.305 54.598 67.633 cv
54.434 67.961 54.199 68.324 53.895 68.723 cv
53.59 69.125 53.18 69.586 52.672 70.105 cv
51.266 71.574 li
55.133 71.574 li
55.164 71.578 55.199 71.586 55.238 71.605 cv
55.27 71.629 55.301 71.66 55.328 71.699 cv
55.352 71.742 55.371 71.797 55.383 71.855 cv
55.391 71.918 55.395 71.988 55.398 72.07 cv
cp
f
62.434 69.723 mo
62.434 70.203 62.352 70.625 62.191 70.992 cv
62.031 71.363 61.805 71.676 61.512 71.93 cv
61.219 72.184 60.871 72.375 60.465 72.508 cv
60.059 72.641 59.609 72.707 59.117 72.707 cv
58.84 72.707 58.578 72.687 58.332 72.648 cv
58.082 72.609 57.859 72.562 57.672 72.508 cv
57.477 72.453 57.32 72.398 57.199 72.34 cv
57.074 72.285 56.996 72.242 56.961 72.207 cv
56.926 72.18 56.902 72.148 56.891 72.121 cv
56.875 72.094 56.859 72.062 56.852 72.02 cv
56.836 71.984 56.828 71.934 56.828 71.871 cv
56.82 71.812 56.82 71.742 56.824 71.656 cv
56.82 71.586 56.824 71.516 56.832 71.449 cv
56.84 71.391 56.852 71.34 56.871 71.297 cv
56.887 71.262 56.906 71.234 56.934 71.211 cv
56.957 71.195 56.988 71.184 57.023 71.184 cv
57.066 71.184 57.137 71.215 57.234 71.27 cv
57.328 71.332 57.457 71.395 57.621 71.457 cv
57.781 71.527 57.984 71.59 58.227 71.645 cv
58.465 71.707 58.75 71.734 59.082 71.734 cv
59.387 71.734 59.668 71.699 59.926 71.625 cv
60.184 71.555 60.402 71.441 60.59 71.281 cv
60.77 71.129 60.914 70.934 61.023 70.695 cv
61.125 70.461 61.18 70.172 61.184 69.832 cv
61.18 69.551 61.133 69.301 61.047 69.082 cv
60.953 68.867 60.816 68.687 60.637 68.539 cv
60.449 68.398 60.215 68.289 59.934 68.215 cv
59.645 68.148 59.309 68.113 58.918 68.109 cv
58.637 68.113 58.395 68.129 58.195 68.152 cv
57.992 68.184 57.805 68.195 57.633 68.191 cv
57.504 68.195 57.414 68.164 57.359 68.102 cv
57.305 68.043 57.277 67.93 57.277 67.758 cv
57.277 64.137 li
57.277 63.988 57.313 63.875 57.383 63.801 cv
57.453 63.73 57.555 63.695 57.688 63.691 cv
61.621 63.691 li
61.652 63.695 61.688 63.707 61.727 63.723 cv
61.758 63.746 61.789 63.777 61.813 63.816 cv
61.836 63.863 61.852 63.914 61.863 63.977 cv
61.875 64.039 61.883 64.113 61.883 64.199 cv
61.883 64.367 61.859 64.496 61.816 64.586 cv
61.773 64.68 61.711 64.727 61.633 64.723 cv
58.457 64.723 li
58.457 67.215 li
58.605 67.195 58.766 67.18 58.93 67.176 cv
59.09 67.172 59.273 67.172 59.488 67.168 cv
59.973 67.172 60.402 67.23 60.77 67.352 cv
61.137 67.473 61.441 67.645 61.688 67.863 cv
61.93 68.086 62.113 68.355 62.242 68.672 cv
62.367 68.988 62.434 69.34 62.434 69.723 cv
cp
f
31.301 24.988 mo
63.215 24.988 li
63.215 42.0781 li
31.301 42.0781 li
cp
0 0 0 0 cmyk
ef
37.676 37.863 mo
37.672 37.953 37.664 38.023 37.652 38.082 cv
37.637 38.145 37.617 38.195 37.598 38.227 cv
37.574 38.266 37.551 38.289 37.52 38.305 cv
37.488 38.32 37.457 38.328 37.43 38.328 cv
32.793 38.328 li
32.758 38.328 32.73 38.32 32.703 38.305 cv
32.676 38.289 32.648 38.266 32.625 38.227 cv
32.598 38.195 32.578 38.145 32.566 38.082 cv
32.551 38.023 32.543 37.953 32.547 37.863 cv
32.543 37.785 32.551 37.711 32.566 37.648 cv
32.578 37.59 32.594 37.543 32.617 37.504 cv
32.633 37.469 32.66 37.437 32.691 37.414 cv
32.723 37.395 32.754 37.387 32.793 37.383 cv
34.645 37.383 li
34.645 30.637 li
32.93 31.656 li
32.84 31.707 32.77 31.734 32.723 31.742 cv
32.668 31.75 32.625 31.742 32.594 31.711 cv
32.559 31.684 32.539 31.633 32.527 31.562 cv
32.516 31.496 32.508 31.41 32.512 31.301 cv
32.508 31.227 32.512 31.16 32.523 31.102 cv
32.527 31.051 32.539 31.004 32.555 30.965 cv
32.566 30.93 32.586 30.898 32.609 30.871 cv
32.633 30.844 32.664 30.816 32.711 30.789 cv
34.754 29.477 li
34.77 29.465 34.789 29.453 34.82 29.445 cv
34.844 29.437 34.879 29.43 34.926 29.418 cv
34.965 29.41 35.016 29.402 35.07 29.398 cv
35.125 29.398 35.191 29.398 35.277 29.395 cv
35.383 29.398 35.477 29.402 35.551 29.41 cv
35.621 29.418 35.676 29.434 35.723 29.449 cv
35.762 29.469 35.789 29.488 35.805 29.512 cv
35.813 29.539 35.82 29.562 35.824 29.586 cv
35.824 37.383 li
37.43 37.383 li
37.465 37.387 37.5 37.395 37.531 37.414 cv
37.563 37.437 37.586 37.469 37.609 37.504 cv
37.625 37.543 37.641 37.59 37.656 37.648 cv
37.664 37.711 37.672 37.785 37.676 37.863 cv
cp
.629114 .553033 .543389 .289647 cmyk
f
44.902 29.965 mo
44.898 30.051 44.895 30.125 44.891 30.187 cv
44.883 30.258 44.875 30.32 44.863 30.379 cv
44.852 30.445 44.836 30.504 44.816 30.559 cv
44.793 30.617 44.77 30.68 44.746 30.738 cv
41.551 38.102 li
41.523 38.16 41.496 38.203 41.465 38.234 cv
41.43 38.27 41.387 38.297 41.332 38.316 cv
41.277 38.336 41.207 38.348 41.129 38.359 cv
41.043 38.363 40.945 38.367 40.828 38.371 cv
40.672 38.367 40.551 38.359 40.465 38.348 cv
40.379 38.332 40.316 38.316 40.277 38.285 cv
40.238 38.258 40.219 38.219 40.227 38.176 cv
40.227 38.133 40.242 38.082 40.273 38.02 cv
43.633 30.492 li
39.375 30.492 li
39.289 30.496 39.223 30.449 39.18 30.355 cv
39.137 30.266 39.117 30.137 39.117 29.973 cv
39.117 29.887 39.121 29.812 39.133 29.746 cv
39.145 29.684 39.16 29.629 39.184 29.586 cv
39.203 29.543 39.23 29.512 39.266 29.488 cv
39.297 29.469 39.336 29.457 39.375 29.457 cv
44.547 29.457 li
44.605 29.457 44.66 29.465 44.711 29.48 cv
44.758 29.496 44.793 29.523 44.82 29.562 cv
44.844 29.602 44.863 29.656 44.879 29.719 cv
44.891 29.785 44.898 29.867 44.902 29.965 cv
cp
f
47.996 37.582 mo
47.996 37.91 47.941 38.125 47.836 38.23 cv
47.727 38.336 47.531 38.387 47.25 38.391 cv
46.973 38.387 46.781 38.336 46.68 38.234 cv
46.57 38.129 46.52 37.918 46.523 37.602 cv
46.52 37.277 46.574 37.062 46.684 36.953 cv
46.789 36.848 46.984 36.793 47.27 36.793 cv
47.543 36.793 47.73 36.848 47.84 36.953 cv
47.941 37.059 47.996 37.27 47.996 37.582 cv
cp
f
55.359 35.477 mo
55.359 35.953 55.277 36.375 55.117 36.746 cv
54.957 37.117 54.73 37.43 54.441 37.684 cv
54.145 37.937 53.797 38.133 53.395 38.262 cv
52.988 38.395 52.539 38.457 52.047 38.457 cv
51.77 38.457 51.508 38.437 51.266 38.398 cv
51.016 38.359 50.797 38.312 50.609 38.258 cv
50.414 38.203 50.258 38.148 50.133 38.09 cv
50.008 38.039 49.93 37.996 49.898 37.961 cv
49.863 37.93 49.84 37.898 49.828 37.871 cv
49.813 37.844 49.797 37.812 49.789 37.77 cv
49.773 37.734 49.766 37.684 49.766 37.621 cv
49.758 37.562 49.758 37.492 49.758 37.41 cv
49.758 37.336 49.762 37.266 49.77 37.203 cv
49.777 37.141 49.789 37.09 49.809 37.051 cv
49.824 37.012 49.844 36.984 49.871 36.965 cv
49.895 36.949 49.926 36.941 49.957 36.937 cv
50.004 36.941 50.074 36.969 50.168 37.023 cv
50.262 37.082 50.391 37.145 50.555 37.211 cv
50.719 37.277 50.918 37.34 51.16 37.398 cv
51.395 37.457 51.68 37.484 52.016 37.484 cv
52.316 37.484 52.598 37.449 52.855 37.375 cv
53.109 37.305 53.332 37.191 53.52 37.035 cv
53.703 36.883 53.848 36.687 53.953 36.449 cv
54.059 36.215 54.109 35.926 54.113 35.586 cv
54.109 35.305 54.066 35.055 53.977 34.836 cv
53.887 34.617 53.75 34.437 53.566 34.293 cv
53.379 34.152 53.145 34.047 52.863 33.973 cv
52.578 33.902 52.238 33.863 51.852 33.863 cv
51.566 33.863 51.328 33.879 51.129 33.906 cv
50.926 33.937 50.738 33.953 50.566 33.949 cv
50.438 33.953 50.344 33.922 50.293 33.859 cv
50.234 33.801 50.207 33.687 50.211 33.516 cv
50.211 29.902 li
50.207 29.754 50.242 29.645 50.316 29.566 cv
50.383 29.496 50.484 29.457 50.621 29.457 cv
54.551 29.457 li
54.586 29.457 54.621 29.469 54.656 29.488 cv
54.688 29.512 54.715 29.543 54.742 29.582 cv
54.762 29.625 54.777 29.676 54.793 29.738 cv
54.801 29.805 54.809 29.883 54.813 29.965 cv
54.809 30.133 54.785 30.258 54.746 30.348 cv
54.699 30.441 54.641 30.488 54.563 30.484 cv
51.391 30.484 li
51.391 32.973 li
51.543 32.953 51.699 32.941 51.863 32.934 cv
52.02 32.93 52.207 32.926 52.422 32.926 cv
52.906 32.926 53.332 32.988 53.699 33.109 cv
54.063 33.23 54.367 33.402 54.617 33.621 cv
54.859 33.848 55.047 34.113 55.172 34.426 cv
55.297 34.742 55.359 35.094 55.359 35.477 cv
cp
f
62.813 33.871 mo
62.809 34.555 62.758 35.176 62.652 35.738 cv
62.543 36.301 62.363 36.785 62.117 37.187 cv
61.863 37.594 61.535 37.906 61.137 38.125 cv
60.73 38.348 60.238 38.457 59.652 38.457 cv
59.094 38.457 58.621 38.359 58.242 38.16 cv
57.859 37.965 57.555 37.672 57.32 37.285 cv
57.086 36.898 56.918 36.426 56.824 35.859 cv
56.723 35.297 56.676 34.648 56.676 33.914 cv
56.676 33.242 56.73 32.621 56.84 32.055 cv
56.949 31.492 57.125 31.008 57.375 30.602 cv
57.617 30.199 57.941 29.887 58.348 29.66 cv
58.746 29.441 59.242 29.328 59.832 29.328 cv
60.391 29.328 60.863 29.43 61.246 29.625 cv
61.629 29.828 61.934 30.121 62.168 30.504 cv
62.398 30.895 62.566 31.367 62.664 31.93 cv
62.762 32.492 62.809 33.141 62.813 33.871 cv
cp
61.605 33.953 mo
61.602 33.512 61.586 33.113 61.559 32.762 cv
61.523 32.41 61.477 32.102 61.418 31.832 cv
61.352 31.562 61.273 31.332 61.176 31.137 cv
61.078 30.945 60.961 30.785 60.824 30.656 cv
60.684 30.531 60.523 30.437 60.352 30.379 cv
60.172 30.324 59.977 30.297 59.762 30.293 cv
59.371 30.297 59.055 30.387 58.816 30.57 cv
58.57 30.754 58.379 31.008 58.242 31.324 cv
58.102 31.645 58.008 32.016 57.957 32.445 cv
57.906 32.875 57.883 33.34 57.883 33.832 cv
57.883 34.496 57.914 35.059 57.984 35.52 cv
58.051 35.988 58.16 36.367 58.313 36.656 cv
58.457 36.953 58.648 37.164 58.879 37.293 cv
59.109 37.43 59.391 37.496 59.723 37.492 cv
59.977 37.496 60.199 37.457 60.395 37.371 cv
60.586 37.293 60.754 37.172 60.895 37.016 cv
61.035 36.863 61.148 36.68 61.242 36.465 cv
61.328 36.25 61.402 36.012 61.461 35.75 cv
61.512 35.492 61.551 35.211 61.574 34.906 cv
61.594 34.602 61.602 34.285 61.605 33.953 cv
cp
f
79.039 535.523 mo
79.035 535.613 79.027 535.687 79.016 535.746 cv
79 535.809 78.98 535.859 78.961 535.891 cv
78.938 535.93 78.914 535.953 78.883 535.969 cv
78.852 535.984 78.82 535.992 78.789 535.992 cv
74.148 535.992 li
74.117 535.992 74.086 535.984 74.059 535.969 cv
74.031 535.953 74.004 535.93 73.98 535.891 cv
73.949 535.859 73.93 535.809 73.922 535.746 cv
73.906 535.687 73.902 535.613 73.902 535.523 cv
73.902 535.445 73.906 535.375 73.922 535.312 cv
73.93 535.254 73.949 535.207 73.973 535.164 cv
73.992 535.129 74.016 535.098 74.047 535.074 cv
74.074 535.055 74.109 535.043 74.148 535.043 cv
76.004 535.043 li
76.004 528.289 li
74.285 529.309 li
74.195 529.359 74.125 529.387 74.074 529.395 cv
74.02 529.402 73.98 529.395 73.949 529.363 cv
73.918 529.336 73.895 529.285 73.883 529.215 cv
73.871 529.148 73.867 529.062 73.867 528.953 cv
73.867 528.879 73.867 528.812 73.875 528.754 cv
73.879 528.703 73.891 528.656 73.906 528.617 cv
73.918 528.582 73.938 528.551 73.965 528.523 cv
73.988 528.496 74.023 528.469 74.066 528.437 cv
76.113 527.125 li
76.129 527.117 76.152 527.105 76.18 527.094 cv
76.207 527.086 76.242 527.078 76.285 527.066 cv
76.324 527.059 76.371 527.051 76.43 527.047 cv
76.48 527.047 76.551 527.047 76.633 527.043 cv
76.742 527.047 76.832 527.051 76.91 527.059 cv
76.98 527.07 77.039 527.082 77.078 527.098 cv
77.117 527.113 77.145 527.137 77.16 527.16 cv
77.176 527.187 77.184 527.211 77.184 527.238 cv
77.184 535.043 li
78.789 535.043 li
78.824 535.043 78.855 535.055 78.891 535.074 cv
78.922 535.098 78.949 535.129 78.973 535.164 cv
78.988 535.207 79.004 535.254 79.02 535.312 cv
79.027 535.375 79.035 535.445 79.039 535.523 cv
cp
f
156.082 535.484 mo
156.078 535.57 156.074 535.645 156.066 535.707 cv
156.055 535.773 156.039 535.828 156.02 535.867 cv
155.996 535.914 155.965 535.945 155.934 535.961 cv
155.895 535.984 155.859 535.992 155.824 535.992 cv
150.914 535.992 li
150.848 535.992 150.789 535.984 150.742 535.969 cv
150.691 535.953 150.652 535.93 150.621 535.891 cv
150.586 535.859 150.559 535.805 150.543 535.734 cv
150.523 535.664 150.516 535.578 150.52 535.477 cv
150.516 535.387 150.52 535.309 150.531 535.238 cv
150.535 535.172 150.551 535.109 150.578 535.055 cv
150.598 535.004 150.629 534.953 150.664 534.898 cv
150.699 534.848 150.746 534.793 150.805 534.73 cv
152.582 532.902 li
152.988 532.484 153.316 532.105 153.566 531.77 cv
153.809 531.437 154 531.133 154.141 530.855 cv
154.273 530.586 154.363 530.336 154.406 530.109 cv
154.445 529.883 154.465 529.672 154.469 529.477 cv
154.465 529.281 154.434 529.098 154.367 528.918 cv
154.301 528.746 154.203 528.59 154.082 528.453 cv
153.953 528.324 153.797 528.219 153.609 528.137 cv
153.418 528.062 153.203 528.023 152.961 528.02 cv
152.672 528.023 152.41 528.062 152.184 528.137 cv
151.949 528.219 151.75 528.305 151.582 528.391 cv
151.406 528.484 151.262 528.566 151.148 528.645 cv
151.031 528.723 150.945 528.762 150.891 528.762 cv
150.855 528.762 150.828 528.754 150.805 528.734 cv
150.777 528.719 150.754 528.687 150.738 528.645 cv
150.719 528.605 150.707 528.551 150.699 528.48 cv
150.691 528.41 150.688 528.328 150.688 528.23 cv
150.688 528.164 150.688 528.105 150.691 528.055 cv
150.695 528.004 150.703 527.961 150.715 527.922 cv
150.727 527.891 150.742 527.855 150.762 527.82 cv
150.777 527.793 150.813 527.754 150.871 527.703 cv
150.922 527.656 151.02 527.59 151.156 527.504 cv
151.289 527.422 151.457 527.34 151.664 527.262 cv
151.863 527.184 152.086 527.117 152.336 527.059 cv
152.578 527.008 152.836 526.98 153.109 526.977 cv
153.535 526.98 153.914 527.043 154.238 527.16 cv
154.559 527.285 154.824 527.449 155.043 527.656 cv
155.254 527.871 155.414 528.117 155.52 528.391 cv
155.625 528.672 155.68 528.969 155.68 529.281 cv
155.68 529.57 155.652 529.852 155.602 530.133 cv
155.551 530.414 155.445 530.719 155.281 531.047 cv
155.117 531.375 154.883 531.738 154.578 532.137 cv
154.273 532.539 153.863 533 153.355 533.52 cv
151.949 534.988 li
155.816 534.988 li
155.848 534.992 155.883 535 155.922 535.02 cv
155.953 535.043 155.984 535.074 156.012 535.113 cv
156.035 535.156 156.055 535.211 156.066 535.27 cv
156.074 535.332 156.078 535.402 156.082 535.484 cv
cp
f
233.543 533.465 mo
233.539 533.621 233.516 533.738 233.473 533.824 cv
233.426 533.91 233.363 533.953 233.281 533.953 cv
232.281 533.953 li
232.281 535.82 li
232.281 535.859 232.27 535.891 232.25 535.914 cv
232.23 535.941 232.199 535.961 232.152 535.98 cv
232.105 535.996 232.043 536.008 231.969 536.02 cv
231.891 536.027 231.793 536.031 231.68 536.035 cv
231.563 536.031 231.469 536.027 231.395 536.02 cv
231.316 536.008 231.258 535.996 231.215 535.98 cv
231.168 535.961 231.137 535.941 231.121 535.914 cv
231.105 535.891 231.098 535.859 231.098 535.82 cv
231.098 533.953 li
227.465 533.953 li
227.41 533.953 227.363 533.949 227.328 533.934 cv
227.289 533.922 227.254 533.895 227.227 533.855 cv
227.195 533.82 227.176 533.77 227.164 533.699 cv
227.152 533.633 227.148 533.543 227.148 533.43 cv
227.148 533.348 227.148 533.27 227.156 533.199 cv
227.156 533.133 227.168 533.07 227.184 533.008 cv
227.195 532.953 227.211 532.898 227.238 532.844 cv
227.258 532.797 227.285 532.738 227.32 532.676 cv
230.488 527.277 li
230.512 527.246 230.543 527.215 230.59 527.184 cv
230.629 527.16 230.688 527.137 230.762 527.113 cv
230.828 527.098 230.914 527.086 231.02 527.078 cv
231.117 527.074 231.238 527.07 231.383 527.066 cv
231.535 527.07 231.668 527.074 231.785 527.082 cv
231.895 527.094 231.988 527.109 232.063 527.125 cv
232.129 527.148 232.184 527.172 232.223 527.199 cv
232.262 527.23 232.281 527.266 232.281 527.305 cv
232.281 532.977 li
233.281 532.977 li
233.355 532.98 233.418 533.02 233.469 533.098 cv
233.516 533.18 233.539 533.305 233.543 533.465 cv
cp
231.098 528.102 mo
231.086 528.102 li
228.227 532.977 li
231.098 532.977 li
cp
f
310.461 533.113 mo
310.457 533.508 310.398 533.883 310.281 534.246 cv
310.16 534.609 309.977 534.93 309.734 535.207 cv
309.484 535.484 309.172 535.707 308.793 535.871 cv
308.41 536.039 307.961 536.121 307.449 536.121 cv
307.074 536.121 306.746 536.078 306.465 535.984 cv
306.176 535.898 305.93 535.766 305.723 535.594 cv
305.512 535.426 305.336 535.219 305.199 534.969 cv
305.055 534.723 304.941 534.441 304.859 534.125 cv
304.773 533.812 304.715 533.469 304.68 533.09 cv
304.641 532.715 304.621 532.309 304.625 531.879 cv
304.621 531.5 304.645 531.117 304.688 530.727 cv
304.727 530.34 304.797 529.965 304.906 529.598 cv
305.008 529.238 305.152 528.898 305.336 528.578 cv
305.516 528.266 305.742 527.988 306.016 527.75 cv
306.285 527.516 306.613 527.328 306.996 527.191 cv
307.375 527.055 307.816 526.988 308.32 526.984 cv
308.488 526.988 308.66 526.996 308.836 527.016 cv
309.008 527.035 309.168 527.062 309.316 527.098 cv
309.461 527.133 309.582 527.172 309.684 527.211 cv
309.781 527.254 309.848 527.285 309.883 527.309 cv
309.914 527.336 309.938 527.367 309.957 527.395 cv
309.969 527.426 309.98 527.457 309.992 527.488 cv
310 527.527 310.008 527.566 310.016 527.605 cv
310.016 527.652 310.02 527.703 310.023 527.766 cv
310.02 527.852 310.02 527.926 310.02 527.98 cv
310.016 528.043 310.004 528.09 309.992 528.121 cv
309.973 528.16 309.953 528.187 309.93 528.203 cv
309.902 528.227 309.871 528.234 309.832 528.23 cv
309.777 528.234 309.707 528.219 309.625 528.184 cv
309.535 528.156 309.43 528.121 309.309 528.078 cv
309.184 528.043 309.035 528.008 308.859 527.973 cv
308.68 527.941 308.473 527.926 308.246 527.922 cv
307.816 527.926 307.449 528.012 307.145 528.184 cv
306.836 528.359 306.586 528.594 306.395 528.887 cv
306.195 529.18 306.051 529.52 305.961 529.906 cv
305.863 530.293 305.813 530.695 305.801 531.117 cv
305.918 531.047 306.051 530.98 306.199 530.91 cv
306.348 530.848 306.508 530.785 306.688 530.727 cv
306.859 530.676 307.047 530.633 307.246 530.594 cv
307.441 530.562 307.652 530.543 307.879 530.539 cv
308.359 530.543 308.766 530.609 309.094 530.734 cv
309.422 530.867 309.688 531.047 309.895 531.277 cv
310.098 531.512 310.242 531.785 310.332 532.098 cv
310.414 532.414 310.457 532.754 310.461 533.113 cv
cp
309.27 533.227 mo
309.27 532.961 309.242 532.723 309.188 532.504 cv
309.133 532.289 309.043 532.102 308.922 531.949 cv
308.797 531.801 308.633 531.684 308.43 531.598 cv
308.223 531.516 307.969 531.477 307.668 531.473 cv
307.496 531.477 307.328 531.492 307.16 531.52 cv
306.988 531.551 306.824 531.59 306.668 531.645 cv
306.508 531.699 306.355 531.762 306.215 531.828 cv
306.07 531.902 305.938 531.98 305.82 532.059 cv
305.816 532.652 305.855 533.145 305.934 533.539 cv
306.008 533.941 306.117 534.262 306.262 534.5 cv
306.406 534.742 306.586 534.914 306.801 535.016 cv
307.016 535.121 307.27 535.172 307.559 535.168 cv
307.848 535.172 308.102 535.117 308.32 535.004 cv
308.535 534.898 308.711 534.75 308.855 534.562 cv
308.996 534.375 309.102 534.168 309.168 533.937 cv
309.234 533.707 309.27 533.469 309.27 533.227 cv
cp
f
387.5 533.711 mo
387.5 534.102 387.43 534.441 387.293 534.738 cv
387.156 535.039 386.957 535.293 386.699 535.5 cv
386.438 535.707 386.121 535.863 385.742 535.965 cv
385.359 536.07 384.922 536.121 384.438 536.121 cv
383.977 536.121 383.566 536.074 383.207 535.98 cv
382.844 535.887 382.539 535.746 382.289 535.555 cv
382.035 535.367 381.844 535.137 381.711 534.859 cv
381.578 534.586 381.512 534.27 381.512 533.918 cv
381.512 533.641 381.555 533.387 381.648 533.152 cv
381.734 532.922 381.867 532.707 382.043 532.504 cv
382.211 532.309 382.422 532.121 382.68 531.949 cv
382.93 531.777 383.215 531.617 383.531 531.461 cv
383.254 531.32 383.012 531.168 382.805 531.012 cv
382.59 530.855 382.41 530.684 382.266 530.496 cv
382.117 530.312 382.008 530.117 381.934 529.902 cv
381.855 529.695 381.816 529.465 381.82 529.215 cv
381.816 528.906 381.871 528.613 381.988 528.34 cv
382.098 528.066 382.27 527.832 382.496 527.629 cv
382.723 527.43 383.008 527.27 383.359 527.152 cv
383.707 527.039 384.117 526.98 384.59 526.977 cv
385.035 526.98 385.422 527.035 385.75 527.137 cv
386.074 527.246 386.348 527.391 386.563 527.578 cv
386.773 527.766 386.93 527.984 387.031 528.234 cv
387.133 528.484 387.184 528.754 387.184 529.043 cv
387.184 529.277 387.145 529.504 387.07 529.719 cv
386.992 529.934 386.883 530.137 386.738 530.328 cv
386.59 530.52 386.41 530.699 386.199 530.867 cv
385.984 531.035 385.738 531.191 385.469 531.336 cv
385.789 531.5 386.078 531.664 386.336 531.832 cv
386.586 532.004 386.801 532.187 386.977 532.379 cv
387.145 532.574 387.273 532.781 387.367 532.996 cv
387.453 533.215 387.5 533.453 387.5 533.711 cv
cp
386.016 529.152 mo
386.012 528.965 385.977 528.789 385.914 528.633 cv
385.844 528.477 385.75 528.344 385.625 528.234 cv
385.496 528.125 385.336 528.043 385.148 527.98 cv
384.957 527.926 384.742 527.895 384.5 527.895 cv
384.004 527.895 383.629 528.008 383.375 528.234 cv
383.121 528.461 382.992 528.77 382.996 529.152 cv
382.992 529.336 383.023 529.5 383.086 529.652 cv
383.145 529.805 383.242 529.949 383.375 530.086 cv
383.508 530.227 383.672 530.363 383.871 530.488 cv
384.07 530.621 384.309 530.758 384.582 530.898 cv
385.043 530.664 385.395 530.398 385.645 530.109 cv
385.887 529.82 386.012 529.504 386.016 529.152 cv
cp
386.305 533.836 mo
386.305 533.625 386.266 533.434 386.188 533.262 cv
386.109 533.09 385.988 532.93 385.832 532.781 cv
385.672 532.633 385.477 532.492 385.242 532.352 cv
385.004 532.215 384.73 532.066 384.426 531.914 cv
384.133 532.055 383.879 532.199 383.664 532.34 cv
383.445 532.484 383.27 532.629 383.129 532.777 cv
382.988 532.93 382.883 533.09 382.813 533.258 cv
382.742 533.426 382.707 533.609 382.707 533.809 cv
382.707 534.254 382.859 534.598 383.164 534.84 cv
383.469 535.086 383.922 535.207 384.527 535.203 cv
385.109 535.207 385.551 535.086 385.855 534.836 cv
386.152 534.594 386.305 534.258 386.305 533.836 cv
cp
f
460.828 535.523 mo
460.824 535.613 460.816 535.687 460.805 535.746 cv
460.789 535.809 460.77 535.859 460.75 535.891 cv
460.727 535.93 460.703 535.953 460.672 535.969 cv
460.641 535.984 460.609 535.992 460.578 535.992 cv
455.938 535.992 li
455.906 535.992 455.875 535.984 455.848 535.969 cv
455.82 535.953 455.793 535.93 455.77 535.891 cv
455.738 535.859 455.719 535.809 455.711 535.746 cv
455.695 535.687 455.691 535.613 455.691 535.523 cv
455.691 535.445 455.695 535.375 455.711 535.312 cv
455.719 535.254 455.738 535.207 455.762 535.164 cv
455.781 535.129 455.805 535.098 455.836 535.074 cv
455.863 535.055 455.898 535.043 455.938 535.043 cv
457.793 535.043 li
457.793 528.289 li
456.074 529.309 li
455.984 529.359 455.914 529.387 455.863 529.395 cv
455.809 529.402 455.77 529.395 455.738 529.363 cv
455.707 529.336 455.684 529.285 455.672 529.215 cv
455.66 529.148 455.656 529.062 455.656 528.953 cv
455.656 528.879 455.656 528.812 455.664 528.754 cv
455.668 528.703 455.68 528.656 455.695 528.617 cv
455.707 528.582 455.727 528.551 455.754 528.523 cv
455.777 528.496 455.813 528.469 455.855 528.437 cv
457.902 527.125 li
457.918 527.117 457.941 527.105 457.969 527.094 cv
457.996 527.086 458.031 527.078 458.074 527.066 cv
458.113 527.059 458.16 527.051 458.219 527.047 cv
458.27 527.047 458.34 527.047 458.422 527.043 cv
458.531 527.047 458.621 527.051 458.699 527.059 cv
458.77 527.07 458.828 527.082 458.867 527.098 cv
458.906 527.113 458.934 527.137 458.949 527.16 cv
458.965 527.187 458.973 527.211 458.973 527.238 cv
458.973 535.043 li
460.578 535.043 li
460.613 535.043 460.645 535.055 460.68 535.074 cv
460.711 535.098 460.738 535.129 460.762 535.164 cv
460.777 535.207 460.793 535.254 460.809 535.312 cv
460.816 535.375 460.824 535.445 460.828 535.523 cv
cp
f
468.18 531.527 mo
468.176 532.211 468.121 532.836 468.016 533.398 cv
467.906 533.965 467.73 534.449 467.48 534.852 cv
467.23 535.258 466.902 535.57 466.504 535.789 cv
466.098 536.012 465.602 536.121 465.016 536.121 cv
464.453 536.121 463.984 536.023 463.602 535.824 cv
463.219 535.625 462.91 535.332 462.676 534.945 cv
462.441 534.559 462.273 534.082 462.18 533.516 cv
462.078 532.953 462.031 532.305 462.035 531.57 cv
462.031 530.895 462.086 530.273 462.199 529.707 cv
462.305 529.141 462.484 528.656 462.734 528.25 cv
462.98 527.848 463.305 527.531 463.707 527.309 cv
464.109 527.09 464.602 526.98 465.191 526.977 cv
465.75 526.98 466.223 527.082 466.609 527.277 cv
466.988 527.48 467.297 527.773 467.531 528.156 cv
467.762 528.547 467.93 529.02 468.031 529.582 cv
468.129 530.148 468.176 530.797 468.18 531.527 cv
cp
466.973 531.609 mo
466.969 531.168 466.953 530.773 466.922 530.418 cv
466.887 530.066 466.84 529.754 466.781 529.484 cv
466.715 529.215 466.633 528.98 466.539 528.785 cv
466.438 528.59 466.32 528.43 466.188 528.305 cv
466.047 528.18 465.891 528.09 465.715 528.031 cv
465.539 527.977 465.344 527.949 465.125 527.945 cv
464.734 527.949 464.418 528.039 464.176 528.219 cv
463.934 528.402 463.742 528.652 463.602 528.973 cv
463.461 529.293 463.363 529.672 463.316 530.102 cv
463.262 530.535 463.238 530.996 463.242 531.488 cv
463.238 532.156 463.273 532.723 463.344 533.184 cv
463.414 533.652 463.523 534.031 463.672 534.32 cv
463.82 534.617 464.008 534.828 464.242 534.957 cv
464.469 535.094 464.75 535.16 465.082 535.156 cv
465.336 535.16 465.563 535.117 465.758 535.031 cv
465.953 534.949 466.117 534.832 466.258 534.676 cv
466.395 534.523 466.512 534.34 466.605 534.125 cv
466.695 533.91 466.77 533.672 466.828 533.41 cv
466.879 533.152 466.918 532.871 466.941 532.562 cv
466.961 532.262 466.969 531.941 466.973 531.609 cv
cp
f
537.918 535.523 mo
537.914 535.613 537.906 535.687 537.895 535.746 cv
537.879 535.809 537.859 535.859 537.84 535.891 cv
537.816 535.93 537.793 535.953 537.762 535.969 cv
537.73 535.984 537.699 535.992 537.668 535.992 cv
533.027 535.992 li
532.996 535.992 532.965 535.984 532.938 535.969 cv
532.91 535.953 532.883 535.93 532.859 535.891 cv
532.828 535.859 532.809 535.809 532.801 535.746 cv
532.785 535.687 532.781 535.613 532.781 535.523 cv
532.781 535.445 532.785 535.375 532.801 535.312 cv
532.809 535.254 532.828 535.207 532.852 535.164 cv
532.871 535.129 532.895 535.098 532.926 535.074 cv
532.953 535.055 532.988 535.043 533.027 535.043 cv
534.883 535.043 li
534.883 528.289 li
533.164 529.309 li
533.074 529.359 533.004 529.387 532.953 529.395 cv
532.898 529.402 532.859 529.395 532.828 529.363 cv
532.797 529.336 532.773 529.285 532.762 529.215 cv
532.75 529.148 532.746 529.062 532.746 528.953 cv
532.746 528.879 532.746 528.812 532.754 528.754 cv
532.758 528.703 532.77 528.656 532.785 528.617 cv
532.797 528.582 532.816 528.551 532.844 528.523 cv
532.867 528.496 532.902 528.469 532.945 528.437 cv
534.992 527.125 li
535.008 527.117 535.031 527.105 535.059 527.094 cv
535.086 527.086 535.121 527.078 535.164 527.066 cv
535.203 527.059 535.25 527.051 535.309 527.047 cv
535.359 527.047 535.43 527.047 535.512 527.043 cv
535.621 527.047 535.711 527.051 535.789 527.059 cv
535.859 527.07 535.918 527.082 535.957 527.098 cv
535.996 527.113 536.023 527.137 536.039 527.16 cv
536.055 527.187 536.063 527.211 536.063 527.238 cv
536.063 535.043 li
537.668 535.043 li
537.703 535.043 537.734 535.055 537.77 535.074 cv
537.801 535.098 537.828 535.129 537.852 535.164 cv
537.867 535.207 537.883 535.254 537.898 535.312 cv
537.906 535.375 537.914 535.445 537.918 535.523 cv
cp
f
544.973 535.484 mo
544.969 535.57 544.965 535.645 544.957 535.707 cv
544.945 535.773 544.93 535.828 544.91 535.867 cv
544.887 535.914 544.855 535.945 544.824 535.961 cv
544.785 535.984 544.75 535.992 544.715 535.992 cv
539.805 535.992 li
539.738 535.992 539.68 535.984 539.633 535.969 cv
539.582 535.953 539.543 535.93 539.512 535.891 cv
539.477 535.859 539.449 535.805 539.434 535.734 cv
539.414 535.664 539.406 535.578 539.41 535.477 cv
539.406 535.387 539.41 535.309 539.422 535.238 cv
539.426 535.172 539.441 535.109 539.469 535.055 cv
539.488 535.004 539.52 534.953 539.555 534.898 cv
539.59 534.848 539.637 534.793 539.695 534.73 cv
541.473 532.902 li
541.879 532.484 542.207 532.105 542.457 531.77 cv
542.699 531.437 542.891 531.133 543.031 530.855 cv
543.164 530.586 543.254 530.336 543.297 530.109 cv
543.336 529.883 543.355 529.672 543.359 529.477 cv
543.355 529.281 543.324 529.098 543.258 528.918 cv
543.191 528.746 543.094 528.59 542.973 528.453 cv
542.844 528.324 542.688 528.219 542.5 528.137 cv
542.309 528.062 542.094 528.023 541.852 528.02 cv
541.563 528.023 541.301 528.062 541.074 528.137 cv
540.84 528.219 540.641 528.305 540.473 528.391 cv
540.297 528.484 540.152 528.566 540.039 528.645 cv
539.922 528.723 539.836 528.762 539.781 528.762 cv
539.746 528.762 539.719 528.754 539.695 528.734 cv
539.668 528.719 539.645 528.687 539.629 528.645 cv
539.609 528.605 539.598 528.551 539.59 528.48 cv
539.582 528.41 539.578 528.328 539.578 528.23 cv
539.578 528.164 539.578 528.105 539.582 528.055 cv
539.586 528.004 539.594 527.961 539.605 527.922 cv
539.617 527.891 539.633 527.855 539.652 527.82 cv
539.668 527.793 539.703 527.754 539.762 527.703 cv
539.813 527.656 539.91 527.59 540.047 527.504 cv
540.18 527.422 540.348 527.34 540.555 527.262 cv
540.754 527.184 540.977 527.117 541.227 527.059 cv
541.469 527.008 541.727 526.98 542 526.977 cv
542.426 526.98 542.805 527.043 543.129 527.16 cv
543.449 527.285 543.715 527.449 543.934 527.656 cv
544.145 527.871 544.305 528.117 544.41 528.391 cv
544.516 528.672 544.57 528.969 544.57 529.281 cv
544.57 529.57 544.543 529.852 544.492 530.133 cv
544.441 530.414 544.336 530.719 544.172 531.047 cv
544.008 531.375 543.773 531.738 543.469 532.137 cv
543.164 532.539 542.754 533 542.246 533.52 cv
540.84 534.988 li
544.707 534.988 li
544.738 534.992 544.773 535 544.813 535.02 cv
544.844 535.043 544.875 535.074 544.902 535.113 cv
544.926 535.156 544.945 535.211 544.957 535.27 cv
544.965 535.332 544.969 535.402 544.973 535.484 cv
cp
f
614.988 535.523 mo
614.984 535.613 614.977 535.687 614.965 535.746 cv
614.949 535.809 614.93 535.859 614.91 535.891 cv
614.887 535.93 614.863 535.953 614.832 535.969 cv
614.801 535.984 614.77 535.992 614.738 535.992 cv
610.098 535.992 li
610.066 535.992 610.035 535.984 610.008 535.969 cv
609.98 535.953 609.953 535.93 609.93 535.891 cv
609.898 535.859 609.879 535.809 609.871 535.746 cv
609.855 535.687 609.852 535.613 609.852 535.523 cv
609.852 535.445 609.855 535.375 609.871 535.312 cv
609.879 535.254 609.898 535.207 609.922 535.164 cv
609.941 535.129 609.965 535.098 609.996 535.074 cv
610.023 535.055 610.059 535.043 610.098 535.043 cv
611.953 535.043 li
611.953 528.289 li
610.234 529.309 li
610.145 529.359 610.074 529.387 610.023 529.395 cv
609.969 529.402 609.93 529.395 609.898 529.363 cv
609.867 529.336 609.844 529.285 609.832 529.215 cv
609.82 529.148 609.816 529.062 609.816 528.953 cv
609.816 528.879 609.816 528.812 609.824 528.754 cv
609.828 528.703 609.84 528.656 609.855 528.617 cv
609.867 528.582 609.887 528.551 609.914 528.523 cv
609.938 528.496 609.973 528.469 610.016 528.437 cv
612.063 527.125 li
612.078 527.117 612.102 527.105 612.129 527.094 cv
612.156 527.086 612.191 527.078 612.234 527.066 cv
612.273 527.059 612.32 527.051 612.379 527.047 cv
612.43 527.047 612.5 527.047 612.582 527.043 cv
612.691 527.047 612.781 527.051 612.859 527.059 cv
612.93 527.07 612.988 527.082 613.027 527.098 cv
613.066 527.113 613.094 527.137 613.109 527.16 cv
613.125 527.187 613.133 527.211 613.133 527.238 cv
613.133 535.043 li
614.738 535.043 li
614.773 535.043 614.805 535.055 614.84 535.074 cv
614.871 535.098 614.898 535.129 614.922 535.164 cv
614.938 535.207 614.953 535.254 614.969 535.312 cv
614.977 535.375 614.984 535.445 614.988 535.523 cv
cp
f
622.422 533.465 mo
622.418 533.621 622.395 533.738 622.352 533.824 cv
622.305 533.91 622.242 533.953 622.16 533.953 cv
621.16 533.953 li
621.16 535.82 li
621.16 535.859 621.148 535.891 621.129 535.914 cv
621.109 535.941 621.078 535.961 621.031 535.98 cv
620.984 535.996 620.922 536.008 620.848 536.02 cv
620.77 536.027 620.672 536.031 620.559 536.035 cv
620.441 536.031 620.348 536.027 620.273 536.02 cv
620.195 536.008 620.137 535.996 620.094 535.98 cv
620.047 535.961 620.016 535.941 620 535.914 cv
619.984 535.891 619.977 535.859 619.977 535.82 cv
619.977 533.953 li
616.344 533.953 li
616.289 533.953 616.242 533.949 616.207 533.934 cv
616.168 533.922 616.133 533.895 616.105 533.855 cv
616.074 533.82 616.055 533.77 616.043 533.699 cv
616.031 533.633 616.027 533.543 616.027 533.43 cv
616.027 533.348 616.027 533.27 616.035 533.199 cv
616.035 533.133 616.047 533.07 616.063 533.008 cv
616.074 532.953 616.09 532.898 616.117 532.844 cv
616.137 532.797 616.164 532.738 616.199 532.676 cv
619.367 527.277 li
619.391 527.246 619.422 527.215 619.469 527.184 cv
619.508 527.16 619.566 527.137 619.641 527.113 cv
619.707 527.098 619.793 527.086 619.898 527.078 cv
619.996 527.074 620.117 527.07 620.262 527.066 cv
620.414 527.07 620.547 527.074 620.664 527.082 cv
620.773 527.094 620.867 527.109 620.941 527.125 cv
621.008 527.148 621.063 527.172 621.102 527.199 cv
621.141 527.23 621.16 527.266 621.16 527.305 cv
621.16 532.977 li
622.16 532.977 li
622.234 532.98 622.297 533.02 622.348 533.098 cv
622.395 533.18 622.418 533.305 622.422 533.465 cv
cp
619.977 528.102 mo
619.965 528.102 li
617.105 532.977 li
619.977 532.977 li
cp
f
692.047 535.523 mo
692.043 535.613 692.035 535.687 692.023 535.746 cv
692.008 535.809 691.988 535.859 691.969 535.891 cv
691.945 535.93 691.922 535.953 691.891 535.969 cv
691.859 535.984 691.828 535.992 691.797 535.992 cv
687.156 535.992 li
687.125 535.992 687.094 535.984 687.066 535.969 cv
687.039 535.953 687.012 535.93 686.988 535.891 cv
686.957 535.859 686.938 535.809 686.93 535.746 cv
686.914 535.687 686.91 535.613 686.91 535.523 cv
686.91 535.445 686.914 535.375 686.93 535.312 cv
686.938 535.254 686.957 535.207 686.98 535.164 cv
687 535.129 687.023 535.098 687.055 535.074 cv
687.082 535.055 687.117 535.043 687.156 535.043 cv
689.012 535.043 li
689.012 528.289 li
687.293 529.309 li
687.203 529.359 687.133 529.387 687.082 529.395 cv
687.027 529.402 686.988 529.395 686.957 529.363 cv
686.926 529.336 686.902 529.285 686.891 529.215 cv
686.879 529.148 686.875 529.062 686.875 528.953 cv
686.875 528.879 686.875 528.812 686.883 528.754 cv
686.887 528.703 686.898 528.656 686.914 528.617 cv
686.926 528.582 686.945 528.551 686.973 528.523 cv
686.996 528.496 687.031 528.469 687.074 528.437 cv
689.121 527.125 li
689.137 527.117 689.16 527.105 689.188 527.094 cv
689.215 527.086 689.25 527.078 689.293 527.066 cv
689.332 527.059 689.379 527.051 689.438 527.047 cv
689.488 527.047 689.559 527.047 689.641 527.043 cv
689.75 527.047 689.84 527.051 689.918 527.059 cv
689.988 527.07 690.047 527.082 690.086 527.098 cv
690.125 527.113 690.152 527.137 690.168 527.16 cv
690.184 527.187 690.191 527.211 690.191 527.238 cv
690.191 535.043 li
691.797 535.043 li
691.832 535.043 691.863 535.055 691.898 535.074 cv
691.93 535.098 691.957 535.129 691.98 535.164 cv
691.996 535.207 692.012 535.254 692.027 535.312 cv
692.035 535.375 692.043 535.445 692.047 535.523 cv
cp
f
699.332 533.113 mo
699.328 533.508 699.27 533.883 699.152 534.246 cv
699.031 534.609 698.848 534.93 698.605 535.207 cv
698.355 535.484 698.043 535.707 697.664 535.871 cv
697.281 536.039 696.832 536.121 696.32 536.121 cv
695.945 536.121 695.617 536.078 695.336 535.984 cv
695.047 535.898 694.801 535.766 694.594 535.594 cv
694.383 535.426 694.207 535.219 694.07 534.969 cv
693.926 534.723 693.813 534.441 693.73 534.125 cv
693.645 533.812 693.586 533.469 693.551 533.09 cv
693.512 532.715 693.492 532.309 693.496 531.879 cv
693.492 531.5 693.516 531.117 693.559 530.727 cv
693.598 530.34 693.668 529.965 693.777 529.598 cv
693.879 529.238 694.023 528.898 694.207 528.578 cv
694.387 528.266 694.613 527.988 694.887 527.75 cv
695.156 527.516 695.484 527.328 695.867 527.191 cv
696.246 527.055 696.688 526.988 697.191 526.984 cv
697.359 526.988 697.531 526.996 697.707 527.016 cv
697.879 527.035 698.039 527.062 698.188 527.098 cv
698.332 527.133 698.453 527.172 698.555 527.211 cv
698.652 527.254 698.719 527.285 698.754 527.309 cv
698.785 527.336 698.809 527.367 698.828 527.395 cv
698.84 527.426 698.852 527.457 698.863 527.488 cv
698.871 527.527 698.879 527.566 698.887 527.605 cv
698.887 527.652 698.891 527.703 698.895 527.766 cv
698.891 527.852 698.891 527.926 698.891 527.98 cv
698.887 528.043 698.875 528.09 698.863 528.121 cv
698.844 528.16 698.824 528.187 698.801 528.203 cv
698.773 528.227 698.742 528.234 698.703 528.23 cv
698.648 528.234 698.578 528.219 698.496 528.184 cv
698.406 528.156 698.301 528.121 698.18 528.078 cv
698.055 528.043 697.906 528.008 697.73 527.973 cv
697.551 527.941 697.344 527.926 697.117 527.922 cv
696.688 527.926 696.32 528.012 696.016 528.184 cv
695.707 528.359 695.457 528.594 695.266 528.887 cv
695.066 529.18 694.922 529.52 694.832 529.906 cv
694.734 530.293 694.684 530.695 694.672 531.117 cv
694.789 531.047 694.922 530.98 695.07 530.91 cv
695.219 530.848 695.379 530.785 695.559 530.727 cv
695.73 530.676 695.918 530.633 696.117 530.594 cv
696.313 530.562 696.523 530.543 696.75 530.539 cv
697.23 530.543 697.637 530.609 697.965 530.734 cv
698.293 530.867 698.559 531.047 698.766 531.277 cv
698.969 531.512 699.113 531.785 699.203 532.098 cv
699.285 532.414 699.328 532.754 699.332 533.113 cv
cp
698.141 533.227 mo
698.141 532.961 698.113 532.723 698.059 532.504 cv
698.004 532.289 697.914 532.102 697.793 531.949 cv
697.668 531.801 697.504 531.684 697.301 531.598 cv
697.094 531.516 696.84 531.477 696.539 531.473 cv
696.367 531.477 696.199 531.492 696.031 531.52 cv
695.859 531.551 695.695 531.59 695.539 531.645 cv
695.379 531.699 695.227 531.762 695.086 531.828 cv
694.941 531.902 694.809 531.98 694.691 532.059 cv
694.688 532.652 694.727 533.145 694.805 533.539 cv
694.879 533.941 694.988 534.262 695.133 534.5 cv
695.277 534.742 695.457 534.914 695.672 535.016 cv
695.887 535.121 696.141 535.172 696.43 535.168 cv
696.719 535.172 696.973 535.117 697.191 535.004 cv
697.406 534.898 697.582 534.75 697.727 534.562 cv
697.867 534.375 697.973 534.168 698.039 533.937 cv
698.105 533.707 698.141 533.469 698.141 533.227 cv
cp
f
16.676 380.109 mo
16.773 380.109 16.855 380.117 16.922 380.125 cv
16.996 380.141 17.055 380.156 17.098 380.18 cv
17.148 380.207 17.184 380.238 17.199 380.27 cv
17.223 380.305 17.23 380.344 17.23 380.383 cv
17.23 385.227 li
17.23 385.348 17.191 385.461 17.109 385.566 cv
17.031 385.676 16.891 385.73 16.684 385.727 cv
7.676 385.727 li
7.477 385.73 7.336 385.676 7.254 385.566 cv
7.176 385.461 7.137 385.348 7.133 385.227 cv
7.133 380.437 li
7.137 380.398 7.145 380.363 7.164 380.324 cv
7.188 380.293 7.223 380.266 7.266 380.242 cv
7.316 380.227 7.375 380.207 7.441 380.191 cv
7.512 380.18 7.598 380.176 7.699 380.172 cv
7.797 380.176 7.879 380.18 7.945 380.191 cv
8.02 380.207 8.078 380.227 8.117 380.242 cv
8.164 380.266 8.195 380.293 8.215 380.324 cv
8.238 380.363 8.25 380.398 8.246 380.437 cv
8.246 384.387 li
11.414 384.387 li
11.414 381 li
11.418 380.961 11.43 380.926 11.449 380.887 cv
11.477 380.855 11.508 380.824 11.547 380.801 cv
11.59 380.777 11.648 380.762 11.719 380.75 cv
11.793 380.742 11.879 380.738 11.977 380.734 cv
12.074 380.738 12.156 380.742 12.219 380.75 cv
12.289 380.762 12.344 380.777 12.383 380.801 cv
12.43 380.824 12.457 380.855 12.473 380.887 cv
12.492 380.926 12.504 380.961 12.5 381 cv
12.5 384.387 li
16.113 384.387 li
16.113 380.383 li
16.117 380.344 16.129 380.305 16.145 380.27 cv
16.168 380.238 16.199 380.207 16.242 380.18 cv
16.289 380.156 16.348 380.141 16.414 380.125 cv
16.488 380.117 16.574 380.109 16.676 380.109 cv
cp
f
17.035 372.027 mo
17.082 372.027 17.117 372.039 17.141 372.059 cv
17.172 372.082 17.195 372.117 17.215 372.16 cv
17.234 372.211 17.246 372.273 17.262 372.355 cv
17.27 372.441 17.277 372.547 17.277 372.668 cv
17.277 372.801 17.27 372.906 17.262 372.988 cv
17.246 373.074 17.234 373.141 17.215 373.184 cv
17.195 373.234 17.172 373.27 17.141 373.285 cv
17.117 373.309 17.082 373.316 17.035 373.316 cv
12.922 373.316 li
12.523 373.316 12.199 373.348 11.953 373.41 cv
11.711 373.473 11.5 373.562 11.324 373.68 cv
11.148 373.801 11.016 373.957 10.918 374.145 cv
10.828 374.336 10.781 374.555 10.777 374.805 cv
10.781 375.129 10.895 375.453 11.121 375.773 cv
11.352 376.098 11.688 376.437 12.125 376.789 cv
17.035 376.789 li
17.082 376.793 17.117 376.801 17.141 376.82 cv
17.172 376.844 17.195 376.879 17.215 376.922 cv
17.234 376.973 17.246 377.039 17.262 377.117 cv
17.27 377.203 17.277 377.309 17.277 377.434 cv
17.277 377.562 17.27 377.664 17.262 377.746 cv
17.246 377.832 17.234 377.898 17.215 377.945 cv
17.195 377.996 17.172 378.031 17.141 378.047 cv
17.117 378.066 17.082 378.074 17.035 378.074 cv
10.012 378.074 li
9.973 378.074 9.938 378.066 9.906 378.051 cv
9.879 378.035 9.855 378.004 9.828 377.957 cv
9.809 377.91 9.793 377.852 9.781 377.777 cv
9.777 377.707 9.773 377.609 9.77 377.488 cv
9.773 377.375 9.777 377.281 9.781 377.207 cv
9.793 377.133 9.809 377.074 9.828 377.031 cv
9.855 376.992 9.879 376.965 9.906 376.941 cv
9.938 376.926 9.973 376.914 10.012 376.914 cv
10.941 376.914 li
10.504 376.52 10.18 376.125 9.969 375.73 cv
9.766 375.34 9.66 374.945 9.66 374.539 cv
9.66 374.074 9.742 373.68 9.898 373.359 cv
10.063 373.043 10.273 372.785 10.535 372.582 cv
10.805 372.387 11.117 372.242 11.469 372.156 cv
11.828 372.07 12.254 372.027 12.75 372.027 cv
cp
f
13.219 363.691 mo
13.426 363.695 13.57 363.746 13.652 363.844 cv
13.742 363.949 13.785 364.066 13.781 364.191 cv
13.781 368.82 li
14.176 368.824 14.527 368.785 14.836 368.703 cv
15.148 368.625 15.414 368.492 15.637 368.309 cv
15.863 368.129 16.035 367.891 16.152 367.598 cv
16.273 367.305 16.336 366.945 16.332 366.52 cv
16.336 366.187 16.309 365.891 16.25 365.629 cv
16.199 365.367 16.137 365.141 16.066 364.949 cv
16 364.758 15.938 364.602 15.883 364.477 cv
15.828 364.355 15.801 364.262 15.801 364.199 cv
15.801 364.164 15.813 364.133 15.828 364.102 cv
15.852 364.074 15.879 364.051 15.91 364.035 cv
15.949 364.02 16 364.008 16.063 364 cv
16.133 363.992 16.211 363.988 16.301 363.988 cv
16.371 363.988 16.43 363.992 16.477 363.996 cv
16.527 364.004 16.57 364.012 16.609 364.016 cv
16.648 364.027 16.684 364.039 16.715 364.055 cv
16.746 364.074 16.777 364.098 16.805 364.125 cv
16.836 364.156 16.883 364.242 16.945 364.379 cv
17.012 364.523 17.074 364.703 17.137 364.926 cv
17.199 365.148 17.254 365.406 17.305 365.699 cv
17.352 365.996 17.375 366.312 17.379 366.641 cv
17.375 367.223 17.297 367.727 17.137 368.16 cv
16.977 368.598 16.738 368.965 16.418 369.258 cv
16.102 369.555 15.703 369.777 15.227 369.926 cv
14.75 370.078 14.195 370.152 13.555 370.152 cv
12.953 370.152 12.41 370.074 11.93 369.918 cv
11.449 369.762 11.039 369.539 10.703 369.246 cv
10.367 368.953 10.109 368.598 9.93 368.18 cv
9.75 367.766 9.66 367.301 9.66 366.781 cv
9.66 366.234 9.75 365.766 9.926 365.375 cv
10.105 364.992 10.344 364.672 10.641 364.418 cv
10.941 364.172 11.293 363.988 11.695 363.867 cv
12.098 363.754 12.527 363.695 12.984 363.691 cv
cp
12.836 364.988 mo
12.16 364.977 11.633 365.125 11.246 365.441 cv
10.863 365.758 10.668 366.227 10.668 366.848 cv
10.668 367.168 10.73 367.449 10.848 367.691 cv
10.973 367.934 11.129 368.137 11.324 368.293 cv
11.52 368.457 11.75 368.582 12.012 368.672 cv
12.277 368.762 12.551 368.812 12.836 368.82 cv
cp
f
10.473 357.617 mo
10.59 357.621 10.684 357.625 10.762 357.625 cv
10.84 357.633 10.902 357.641 10.945 357.656 cv
10.992 357.672 11.027 357.691 11.047 357.715 cv
11.074 357.738 11.086 357.773 11.082 357.812 cv
11.086 357.859 11.074 357.91 11.047 357.965 cv
11.027 358.027 11.004 358.094 10.977 358.168 cv
10.957 358.246 10.934 358.332 10.91 358.422 cv
10.891 358.52 10.879 358.621 10.879 358.727 cv
10.879 358.859 10.906 358.984 10.957 359.109 cv
11.012 359.234 11.098 359.367 11.215 359.504 cv
11.336 359.645 11.492 359.789 11.688 359.937 cv
11.887 360.09 12.129 360.258 12.414 360.437 cv
17.035 360.437 li
17.082 360.441 17.117 360.449 17.141 360.469 cv
17.172 360.492 17.195 360.527 17.215 360.57 cv
17.234 360.621 17.246 360.687 17.262 360.766 cv
17.27 360.852 17.277 360.957 17.277 361.082 cv
17.277 361.211 17.27 361.312 17.262 361.395 cv
17.246 361.48 17.234 361.547 17.215 361.594 cv
17.195 361.645 17.172 361.68 17.141 361.695 cv
17.117 361.715 17.082 361.723 17.035 361.723 cv
10.012 361.723 li
9.973 361.723 9.938 361.715 9.906 361.699 cv
9.879 361.684 9.855 361.652 9.828 361.605 cv
9.809 361.559 9.793 361.5 9.781 361.426 cv
9.777 361.355 9.773 361.258 9.77 361.137 cv
9.773 361.023 9.777 360.93 9.781 360.855 cv
9.793 360.781 9.809 360.723 9.828 360.68 cv
9.855 360.641 9.879 360.613 9.906 360.59 cv
9.938 360.574 9.973 360.562 10.012 360.562 cv
11.035 360.562 li
10.758 360.371 10.527 360.191 10.348 360.02 cv
10.172 359.852 10.031 359.691 9.93 359.539 cv
9.828 359.391 9.758 359.242 9.719 359.09 cv
9.68 358.945 9.66 358.793 9.66 358.641 cv
9.66 358.574 9.664 358.5 9.672 358.41 cv
9.68 358.328 9.695 358.238 9.715 358.141 cv
9.738 358.051 9.762 357.965 9.785 357.887 cv
9.813 357.812 9.84 357.758 9.863 357.727 cv
9.895 357.695 9.918 357.676 9.938 357.664 cv
9.965 357.656 9.996 357.648 10.027 357.637 cv
10.066 357.633 10.117 357.625 10.188 357.621 cv
10.258 357.621 10.355 357.621 10.473 357.617 cv
cp
f
10.332 350.613 mo
10.52 350.617 10.648 350.641 10.727 350.687 cv
10.809 350.738 10.852 350.801 10.848 350.879 cv
10.848 351.883 li
11.039 351.707 11.246 351.582 11.469 351.504 cv
11.695 351.434 11.93 351.395 12.172 351.395 cv
12.582 351.395 12.941 351.461 13.25 351.59 cv
13.566 351.723 13.828 351.91 14.043 352.148 cv
14.262 352.391 14.43 352.676 14.539 353.008 cv
14.656 353.344 14.711 353.715 14.711 354.117 cv
14.711 354.406 14.676 354.676 14.598 354.934 cv
14.527 355.191 14.43 355.391 14.313 355.531 cv
14.406 355.625 14.516 355.703 14.633 355.762 cv
14.758 355.82 14.895 355.848 15.047 355.848 cv
15.23 355.848 15.379 355.766 15.496 355.598 cv
15.617 355.43 15.684 355.203 15.691 354.922 cv
15.77 353.086 li
15.785 352.742 15.832 352.422 15.914 352.129 cv
16.004 351.84 16.125 351.586 16.281 351.371 cv
16.441 351.16 16.637 350.996 16.867 350.871 cv
17.102 350.754 17.371 350.691 17.676 350.691 cv
17.996 350.691 18.301 350.762 18.598 350.895 cv
18.887 351.035 19.145 351.242 19.363 351.516 cv
19.582 351.797 19.754 352.148 19.887 352.578 cv
20.012 353.012 20.078 353.523 20.078 354.109 cv
20.078 354.68 20.027 355.164 19.934 355.559 cv
19.832 355.957 19.703 356.281 19.539 356.535 cv
19.371 356.793 19.172 356.977 18.941 357.09 cv
18.711 357.207 18.461 357.266 18.191 357.262 cv
18.02 357.266 17.852 357.246 17.691 357.199 cv
17.527 357.16 17.375 357.094 17.23 357.008 cv
17.086 356.922 16.949 356.816 16.813 356.687 cv
16.684 356.562 16.551 356.414 16.418 356.246 cv
16.289 356.504 16.125 356.695 15.926 356.812 cv
15.73 356.937 15.516 356.996 15.285 356.996 cv
14.973 356.996 14.691 356.934 14.438 356.801 cv
14.191 356.676 13.969 356.512 13.766 356.316 cv
13.578 356.48 13.359 356.609 13.113 356.699 cv
12.875 356.797 12.582 356.844 12.234 356.84 cv
11.836 356.844 11.477 356.777 11.16 356.637 cv
10.844 356.504 10.578 356.316 10.355 356.078 cv
10.141 355.84 9.973 355.551 9.852 355.215 cv
9.738 354.879 9.68 354.516 9.676 354.117 cv
9.68 353.906 9.691 353.707 9.711 353.52 cv
9.738 353.34 9.77 353.164 9.809 353 cv
9.809 350.879 li
9.813 350.793 9.855 350.727 9.938 350.68 cv
10.027 350.637 10.16 350.617 10.332 350.613 cv
cp
12.18 352.625 mo
11.703 352.625 11.332 352.758 11.063 353.02 cv
10.797 353.285 10.664 353.66 10.66 354.141 cv
10.664 354.395 10.703 354.609 10.785 354.793 cv
10.871 354.98 10.988 355.137 11.129 355.254 cv
11.277 355.379 11.445 355.469 11.633 355.527 cv
11.824 355.59 12.02 355.621 12.227 355.617 cv
12.691 355.621 13.059 355.488 13.32 355.223 cv
13.59 354.961 13.723 354.594 13.719 354.117 cv
13.723 353.867 13.68 353.645 13.598 353.453 cv
13.52 353.27 13.41 353.113 13.262 352.988 cv
13.121 352.867 12.953 352.777 12.766 352.715 cv
12.578 352.656 12.383 352.625 12.18 352.625 cv
cp
17.746 351.977 mo
17.441 351.98 17.211 352.105 17.047 352.348 cv
16.887 352.598 16.797 352.93 16.785 353.352 cv
16.723 355.172 li
16.855 355.344 16.98 355.48 17.094 355.582 cv
17.211 355.691 17.32 355.773 17.43 355.832 cv
17.535 355.898 17.641 355.941 17.746 355.961 cv
17.848 355.988 17.953 356 18.066 355.996 cv
18.402 356 18.66 355.828 18.836 355.484 cv
19.008 355.141 19.094 354.664 19.098 354.047 cv
19.094 353.66 19.055 353.332 18.984 353.066 cv
18.906 352.805 18.809 352.594 18.684 352.43 cv
18.559 352.273 18.414 352.156 18.254 352.082 cv
18.09 352.016 17.922 351.98 17.746 351.977 cv
cp
f
17.23 345.754 mo
19.813 346.691 li
19.895 346.723 19.957 346.805 20.004 346.93 cv
20.043 347.062 20.066 347.254 20.07 347.512 cv
20.066 347.648 20.059 347.758 20.051 347.84 cv
20.035 347.926 20.016 347.992 19.984 348.031 cv
19.953 348.078 19.91 348.102 19.859 348.105 cv
19.805 348.113 19.742 348.102 19.672 348.066 cv
17.23 347.098 li
17.211 347.148 17.18 347.191 17.129 347.23 cv
17.086 347.273 17.035 347.305 16.98 347.316 cv
10.27 349.82 li
10.16 349.863 10.074 349.887 10.012 349.883 cv
9.949 349.887 9.902 349.863 9.863 349.82 cv
9.832 349.781 9.805 349.715 9.789 349.617 cv
9.777 349.527 9.773 349.402 9.77 349.242 cv
9.773 349.09 9.777 348.969 9.781 348.875 cv
9.793 348.789 9.805 348.719 9.824 348.664 cv
9.848 348.617 9.879 348.578 9.914 348.551 cv
9.957 348.531 10.012 348.508 10.074 348.477 cv
15.707 346.473 li
15.707 346.449 li
10.043 344.512 li
9.945 344.48 9.883 344.445 9.852 344.398 cv
9.828 344.359 9.805 344.293 9.789 344.203 cv
9.777 344.117 9.773 343.988 9.77 343.82 cv
9.773 343.676 9.777 343.559 9.789 343.461 cv
9.805 343.371 9.832 343.301 9.863 343.254 cv
9.902 343.211 9.949 343.187 10.012 343.187 cv
10.074 343.187 10.152 343.203 10.246 343.234 cv
cp
f
15.801 331.129 mo
15.887 331.129 15.961 331.133 16.02 331.137 cv
16.086 331.145 16.141 331.152 16.184 331.164 cv
16.234 331.18 16.277 331.199 16.309 331.215 cv
16.348 331.238 16.391 331.273 16.441 331.324 cv
16.496 331.379 16.574 331.488 16.68 331.652 cv
16.789 331.82 16.895 332.027 16.992 332.273 cv
17.098 332.523 17.18 332.809 17.25 333.125 cv
17.316 333.445 17.352 333.793 17.355 334.172 cv
17.352 334.832 17.246 335.426 17.027 335.949 cv
16.813 336.48 16.488 336.93 16.059 337.301 cv
15.633 337.672 15.109 337.957 14.48 338.156 cv
13.855 338.359 13.133 338.461 12.313 338.457 cv
11.48 338.461 10.734 338.352 10.074 338.133 cv
9.422 337.918 8.863 337.617 8.406 337.227 cv
7.953 336.84 7.609 336.371 7.367 335.824 cv
7.133 335.281 7.012 334.68 7.008 334.016 cv
7.012 333.727 7.039 333.441 7.09 333.168 cv
7.148 332.895 7.219 332.641 7.297 332.402 cv
7.383 332.172 7.477 331.965 7.586 331.777 cv
7.695 331.598 7.785 331.469 7.852 331.398 cv
7.926 331.328 7.98 331.285 8.012 331.262 cv
8.051 331.246 8.094 331.227 8.141 331.211 cv
8.195 331.199 8.254 331.191 8.316 331.18 cv
8.387 331.176 8.465 331.172 8.559 331.168 cv
8.664 331.172 8.754 331.176 8.824 331.184 cv
8.898 331.195 8.961 331.211 9.008 331.23 cv
9.063 331.254 9.098 331.277 9.117 331.305 cv
9.145 331.336 9.156 331.371 9.152 331.41 cv
9.156 331.484 9.105 331.59 9 331.719 cv
8.902 331.852 8.789 332.02 8.664 332.227 cv
8.543 332.434 8.434 332.684 8.328 332.98 cv
8.23 333.277 8.18 333.633 8.176 334.039 cv
8.18 334.492 8.27 334.902 8.445 335.27 cv
8.629 335.641 8.891 335.953 9.238 336.215 cv
9.59 336.477 10.016 336.68 10.516 336.824 cv
11.02 336.969 11.594 337.043 12.234 337.039 cv
12.879 337.043 13.445 336.973 13.934 336.832 cv
14.43 336.695 14.84 336.496 15.168 336.234 cv
15.496 335.977 15.746 335.66 15.914 335.281 cv
16.086 334.906 16.172 334.477 16.168 334 cv
16.172 333.602 16.121 333.254 16.02 332.949 cv
15.922 332.652 15.813 332.395 15.688 332.18 cv
15.57 331.969 15.461 331.793 15.359 331.656 cv
15.266 331.52 15.215 331.414 15.211 331.332 cv
15.215 331.301 15.223 331.27 15.234 331.238 cv
15.254 331.215 15.285 331.191 15.324 331.176 cv
15.371 331.16 15.43 331.148 15.504 331.141 cv
15.586 331.133 15.684 331.129 15.801 331.129 cv
cp
f
13.445 322.969 mo
14.02 322.973 14.547 323.047 15.027 323.195 cv
15.508 323.348 15.922 323.574 16.27 323.871 cv
16.621 324.172 16.895 324.547 17.086 324.996 cv
17.281 325.445 17.375 325.965 17.379 326.559 cv
17.375 327.137 17.293 327.641 17.121 328.07 cv
16.953 328.5 16.703 328.859 16.371 329.145 cv
16.047 329.43 15.648 329.641 15.18 329.781 cv
14.711 329.922 14.18 329.992 13.586 329.992 cv
13.016 329.992 12.492 329.918 12.008 329.77 cv
11.531 329.621 11.113 329.398 10.762 329.102 cv
10.414 328.805 10.145 328.434 9.949 327.98 cv
9.758 327.535 9.66 327.012 9.66 326.41 cv
9.66 325.836 9.746 325.332 9.918 324.902 cv
10.09 324.477 10.34 324.117 10.668 323.828 cv
10.996 323.543 11.395 323.328 11.863 323.184 cv
12.332 323.043 12.859 322.973 13.445 322.969 cv
cp
13.531 324.305 mo
13.156 324.309 12.797 324.344 12.453 324.41 cv
12.117 324.484 11.82 324.602 11.566 324.762 cv
11.313 324.926 11.109 325.145 10.961 325.422 cv
10.813 325.703 10.738 326.051 10.738 326.461 cv
10.738 326.848 10.809 327.176 10.941 327.449 cv
11.082 327.727 11.273 327.957 11.516 328.133 cv
11.766 328.312 12.055 328.445 12.391 328.531 cv
12.73 328.621 13.102 328.664 13.5 328.66 cv
13.887 328.664 14.25 328.629 14.586 328.555 cv
14.93 328.484 15.223 328.363 15.473 328.199 cv
15.723 328.035 15.922 327.812 16.07 327.531 cv
16.219 327.254 16.293 326.91 16.293 326.492 cv
16.293 326.117 16.227 325.789 16.09 325.508 cv
15.957 325.234 15.77 325.004 15.523 324.824 cv
15.281 324.645 14.988 324.516 14.648 324.43 cv
14.313 324.352 13.941 324.309 13.531 324.305 cv
cp
f
17.035 315.027 mo
17.082 315.027 17.117 315.039 17.141 315.059 cv
17.172 315.082 17.195 315.117 17.215 315.16 cv
17.234 315.211 17.246 315.273 17.262 315.355 cv
17.27 315.441 17.277 315.547 17.277 315.668 cv
17.277 315.801 17.27 315.906 17.262 315.988 cv
17.246 316.074 17.234 316.141 17.215 316.184 cv
17.195 316.234 17.172 316.27 17.141 316.285 cv
17.117 316.309 17.082 316.316 17.035 316.316 cv
12.922 316.316 li
12.523 316.316 12.199 316.348 11.953 316.41 cv
11.711 316.473 11.5 316.562 11.324 316.68 cv
11.148 316.801 11.016 316.957 10.918 317.145 cv
10.828 317.336 10.781 317.555 10.777 317.805 cv
10.781 318.129 10.895 318.453 11.121 318.773 cv
11.352 319.098 11.688 319.437 12.125 319.789 cv
17.035 319.789 li
17.082 319.793 17.117 319.801 17.141 319.82 cv
17.172 319.844 17.195 319.879 17.215 319.922 cv
17.234 319.973 17.246 320.039 17.262 320.117 cv
17.27 320.203 17.277 320.309 17.277 320.434 cv
17.277 320.562 17.27 320.664 17.262 320.746 cv
17.246 320.832 17.234 320.898 17.215 320.945 cv
17.195 320.996 17.172 321.031 17.141 321.047 cv
17.117 321.066 17.082 321.074 17.035 321.074 cv
10.012 321.074 li
9.973 321.074 9.938 321.066 9.906 321.051 cv
9.879 321.035 9.855 321.004 9.828 320.957 cv
9.809 320.91 9.793 320.852 9.781 320.777 cv
9.777 320.707 9.773 320.609 9.77 320.488 cv
9.773 320.375 9.777 320.281 9.781 320.207 cv
9.793 320.133 9.809 320.074 9.828 320.031 cv
9.855 319.992 9.879 319.965 9.906 319.941 cv
9.938 319.926 9.973 319.914 10.012 319.914 cv
10.941 319.914 li
10.504 319.52 10.18 319.125 9.969 318.73 cv
9.766 318.34 9.66 317.945 9.66 317.539 cv
9.66 317.074 9.742 316.68 9.898 316.359 cv
10.063 316.043 10.273 315.785 10.535 315.582 cv
10.805 315.387 11.117 315.242 11.469 315.156 cv
11.828 315.07 12.254 315.027 12.75 315.027 cv
cp
f
15.125 308.273 mo
15.484 308.277 15.801 308.344 16.082 308.473 cv
16.363 308.609 16.602 308.797 16.793 309.039 cv
16.988 309.285 17.133 309.578 17.23 309.914 cv
17.328 310.254 17.375 310.625 17.379 311.031 cv
17.375 311.281 17.355 311.52 17.32 311.746 cv
17.277 311.973 17.23 312.176 17.172 312.352 cv
17.113 312.535 17.051 312.687 16.984 312.809 cv
16.922 312.937 16.863 313.027 16.809 313.082 cv
16.758 313.141 16.688 313.184 16.59 313.207 cv
16.5 313.234 16.371 313.246 16.207 313.246 cv
16.109 313.246 16.027 313.242 15.957 313.23 cv
15.895 313.223 15.84 313.211 15.793 313.191 cv
15.754 313.18 15.723 313.156 15.703 313.125 cv
15.688 313.098 15.68 313.066 15.676 313.027 cv
15.68 312.973 15.715 312.887 15.781 312.773 cv
15.855 312.664 15.93 312.527 16.012 312.359 cv
16.098 312.199 16.176 312.004 16.242 311.781 cv
16.316 311.559 16.352 311.301 16.348 311.008 cv
16.352 310.789 16.328 310.594 16.277 310.414 cv
16.234 310.242 16.164 310.086 16.07 309.953 cv
15.98 309.824 15.867 309.727 15.723 309.652 cv
15.586 309.586 15.418 309.551 15.227 309.547 cv
15.031 309.551 14.867 309.602 14.727 309.699 cv
14.594 309.805 14.473 309.937 14.367 310.102 cv
14.266 310.27 14.172 310.457 14.09 310.664 cv
14.012 310.875 13.93 311.09 13.836 311.309 cv
13.75 311.531 13.648 311.746 13.535 311.957 cv
13.426 312.168 13.289 312.355 13.125 312.52 cv
12.965 312.687 12.773 312.824 12.547 312.922 cv
12.328 313.027 12.059 313.078 11.742 313.074 cv
11.473 313.078 11.211 313.023 10.953 312.914 cv
10.703 312.809 10.48 312.648 10.289 312.434 cv
10.102 312.223 9.949 311.957 9.832 311.637 cv
9.719 311.32 9.66 310.945 9.66 310.516 cv
9.66 310.328 9.676 310.141 9.707 309.953 cv
9.738 309.766 9.777 309.598 9.824 309.445 cv
9.871 309.297 9.922 309.168 9.977 309.059 cv
10.031 308.953 10.082 308.871 10.121 308.816 cv
10.168 308.762 10.203 308.727 10.23 308.707 cv
10.266 308.691 10.301 308.68 10.336 308.668 cv
10.379 308.664 10.426 308.656 10.48 308.645 cv
10.539 308.641 10.609 308.637 10.691 308.633 cv
10.781 308.637 10.859 308.641 10.922 308.645 cv
10.988 308.656 11.043 308.668 11.082 308.684 cv
11.129 308.703 11.156 308.727 11.172 308.75 cv
11.191 308.781 11.203 308.809 11.199 308.836 cv
11.203 308.887 11.172 308.953 11.113 309.039 cv
11.059 309.129 11 309.246 10.93 309.383 cv
10.867 309.527 10.805 309.691 10.746 309.879 cv
10.691 310.07 10.664 310.289 10.66 310.531 cv
10.664 310.754 10.688 310.945 10.734 311.109 cv
10.785 311.277 10.855 311.414 10.945 311.52 cv
11.039 311.629 11.148 311.711 11.27 311.762 cv
11.395 311.82 11.527 311.848 11.672 311.844 cv
11.879 311.848 12.051 311.793 12.184 311.687 cv
12.324 311.586 12.445 311.453 12.547 311.281 cv
12.656 311.117 12.75 310.926 12.828 310.711 cv
12.914 310.5 13 310.281 13.086 310.059 cv
13.18 309.84 13.277 309.621 13.383 309.402 cv
13.496 309.187 13.629 308.996 13.781 308.828 cv
13.941 308.664 14.129 308.531 14.344 308.426 cv
14.566 308.328 14.828 308.277 15.125 308.273 cv
cp
f
17.035 300.418 mo
17.082 300.422 17.117 300.43 17.141 300.445 cv
17.172 300.465 17.195 300.5 17.215 300.543 cv
17.234 300.594 17.246 300.652 17.262 300.727 cv
17.27 300.805 17.277 300.898 17.277 301.004 cv
17.277 301.125 17.27 301.223 17.262 301.297 cv
17.246 301.375 17.234 301.434 17.215 301.477 cv
17.195 301.523 17.172 301.555 17.141 301.566 cv
17.117 301.586 17.082 301.594 17.035 301.59 cv
16.105 301.59 li
16.551 301.992 16.875 302.387 17.074 302.773 cv
17.277 303.168 17.375 303.562 17.379 303.961 cv
17.375 304.43 17.301 304.824 17.145 305.145 cv
16.992 305.465 16.781 305.727 16.508 305.922 cv
16.242 306.121 15.93 306.262 15.574 306.344 cv
15.219 306.434 14.785 306.477 14.273 306.473 cv
10.012 306.473 li
9.973 306.477 9.938 306.465 9.906 306.445 cv
9.879 306.43 9.855 306.395 9.828 306.34 cv
9.809 306.289 9.793 306.223 9.781 306.137 cv
9.777 306.055 9.773 305.949 9.77 305.824 cv
9.773 305.703 9.777 305.602 9.781 305.516 cv
9.793 305.434 9.809 305.367 9.828 305.316 cv
9.855 305.27 9.879 305.234 9.906 305.211 cv
9.938 305.191 9.973 305.18 10.012 305.18 cv
14.102 305.18 li
14.516 305.18 14.848 305.152 15.09 305.09 cv
15.34 305.035 15.547 304.941 15.719 304.816 cv
15.895 304.695 16.031 304.543 16.125 304.352 cv
16.223 304.168 16.27 303.949 16.27 303.695 cv
16.27 303.375 16.156 303.051 15.926 302.73 cv
15.699 302.41 15.363 302.074 14.922 301.715 cv
10.012 301.715 li
9.973 301.719 9.938 301.707 9.906 301.687 cv
9.879 301.672 9.855 301.637 9.828 301.582 cv
9.809 301.531 9.793 301.465 9.781 301.383 cv
9.777 301.305 9.773 301.199 9.77 301.066 cv
9.773 300.941 9.777 300.84 9.781 300.754 cv
9.793 300.676 9.809 300.609 9.828 300.559 cv
9.855 300.516 9.879 300.48 9.906 300.453 cv
9.938 300.434 9.973 300.422 10.012 300.418 cv
cp
f
17.035 287.625 mo
17.082 287.625 17.117 287.637 17.141 287.656 cv
17.172 287.68 17.195 287.715 17.215 287.758 cv
17.234 287.809 17.246 287.871 17.262 287.953 cv
17.27 288.039 17.277 288.145 17.277 288.266 cv
17.277 288.398 17.27 288.504 17.262 288.586 cv
17.246 288.672 17.234 288.738 17.215 288.785 cv
17.195 288.836 17.172 288.871 17.141 288.891 cv
17.117 288.914 17.082 288.926 17.035 288.922 cv
12.766 288.922 li
12.469 288.926 12.199 288.953 11.953 289 cv
11.711 289.055 11.5 289.137 11.324 289.25 cv
11.148 289.367 11.016 289.512 10.918 289.687 cv
10.828 289.863 10.781 290.07 10.777 290.309 cv
10.781 290.605 10.895 290.906 11.121 291.203 cv
11.352 291.508 11.688 291.836 12.125 292.191 cv
17.035 292.191 li
17.082 292.195 17.117 292.207 17.141 292.223 cv
17.172 292.246 17.195 292.281 17.215 292.328 cv
17.234 292.383 17.246 292.449 17.262 292.527 cv
17.27 292.613 17.277 292.715 17.277 292.84 cv
17.277 292.961 17.27 293.066 17.262 293.148 cv
17.246 293.238 17.234 293.305 17.215 293.352 cv
17.195 293.402 17.172 293.434 17.141 293.449 cv
17.117 293.469 17.082 293.48 17.035 293.477 cv
12.766 293.477 li
12.469 293.48 12.199 293.508 11.953 293.562 cv
11.711 293.621 11.5 293.707 11.324 293.82 cv
11.148 293.937 11.016 294.082 10.918 294.254 cv
10.828 294.43 10.781 294.637 10.777 294.875 cv
10.781 295.176 10.895 295.477 11.121 295.773 cv
11.352 296.078 11.688 296.406 12.125 296.758 cv
17.035 296.758 li
17.082 296.762 17.117 296.77 17.141 296.789 cv
17.172 296.812 17.195 296.848 17.215 296.891 cv
17.234 296.941 17.246 297.008 17.262 297.086 cv
17.27 297.172 17.277 297.277 17.277 297.402 cv
17.277 297.531 17.27 297.633 17.262 297.715 cv
17.246 297.801 17.234 297.867 17.215 297.914 cv
17.195 297.965 17.172 298 17.141 298.016 cv
17.117 298.035 17.082 298.043 17.035 298.043 cv
10.012 298.043 li
9.973 298.043 9.938 298.035 9.906 298.02 cv
9.879 298.004 9.855 297.973 9.828 297.926 cv
9.809 297.879 9.793 297.82 9.781 297.746 cv
9.777 297.676 9.773 297.578 9.77 297.457 cv
9.773 297.344 9.777 297.25 9.781 297.176 cv
9.793 297.102 9.809 297.043 9.828 297 cv
9.855 296.961 9.879 296.934 9.906 296.91 cv
9.938 296.895 9.973 296.883 10.012 296.883 cv
10.941 296.883 li
10.504 296.488 10.18 296.105 9.969 295.73 cv
9.766 295.359 9.66 294.984 9.66 294.602 cv
9.66 294.312 9.695 294.051 9.762 293.816 cv
9.832 293.59 9.926 293.387 10.047 293.207 cv
10.172 293.035 10.32 292.883 10.484 292.754 cv
10.656 292.633 10.844 292.527 11.051 292.441 cv
10.797 292.207 10.582 291.984 10.402 291.773 cv
10.23 291.562 10.086 291.359 9.973 291.164 cv
9.867 290.969 9.789 290.781 9.734 290.594 cv
9.688 290.414 9.66 290.227 9.66 290.035 cv
9.66 289.586 9.742 289.207 9.898 288.898 cv
10.063 288.594 10.273 288.344 10.535 288.152 cv
10.805 287.965 11.117 287.832 11.469 287.746 cv
11.828 287.668 12.203 287.625 12.594 287.625 cv
cp
f
13.414 278.875 mo
14.031 278.879 14.582 278.945 15.07 279.074 cv
15.559 279.211 15.973 279.406 16.313 279.66 cv
16.656 279.922 16.918 280.242 17.102 280.617 cv
17.285 281 17.375 281.434 17.379 281.918 cv
17.375 282.129 17.355 282.32 17.316 282.496 cv
17.273 282.676 17.211 282.848 17.121 283.016 cv
17.035 283.187 16.922 283.355 16.785 283.52 cv
16.652 283.687 16.496 283.867 16.309 284.051 cv
19.82 284.051 li
19.859 284.055 19.895 284.062 19.93 284.082 cv
19.957 284.105 19.984 284.141 20.008 284.184 cv
20.027 284.234 20.043 284.301 20.055 284.379 cv
20.063 284.465 20.066 284.57 20.07 284.695 cv
20.066 284.824 20.063 284.926 20.055 285.008 cv
20.043 285.094 20.027 285.16 20.008 285.207 cv
19.984 285.258 19.957 285.293 19.93 285.309 cv
19.895 285.328 19.859 285.336 19.82 285.336 cv
10.012 285.336 li
9.965 285.336 9.93 285.328 9.898 285.312 cv
9.875 285.297 9.848 285.266 9.824 285.219 cv
9.805 285.172 9.793 285.113 9.781 285.039 cv
9.777 284.969 9.773 284.879 9.77 284.773 cv
9.773 284.664 9.777 284.578 9.781 284.508 cv
9.793 284.441 9.805 284.383 9.824 284.332 cv
9.848 284.289 9.875 284.254 9.898 284.234 cv
9.93 284.219 9.965 284.211 10.012 284.207 cv
10.957 284.207 li
10.742 283.996 10.551 283.789 10.387 283.59 cv
10.227 283.395 10.094 283.195 9.984 282.992 cv
9.879 282.793 9.797 282.59 9.742 282.375 cv
9.688 282.168 9.66 281.945 9.66 281.707 cv
9.66 281.199 9.762 280.766 9.957 280.406 cv
10.16 280.051 10.43 279.758 10.77 279.527 cv
11.117 279.305 11.516 279.137 11.969 279.031 cv
12.422 278.93 12.906 278.879 13.414 278.875 cv
cp
13.563 280.211 mo
13.203 280.215 12.855 280.242 12.52 280.293 cv
12.184 280.352 11.887 280.445 11.629 280.574 cv
11.371 280.711 11.164 280.891 11.004 281.113 cv
10.852 281.34 10.773 281.621 10.77 281.953 cv
10.773 282.125 10.797 282.289 10.844 282.449 cv
10.895 282.613 10.973 282.777 11.078 282.945 cv
11.188 283.113 11.328 283.289 11.5 283.469 cv
11.672 283.652 11.887 283.848 12.141 284.051 cv
14.938 284.051 li
15.371 283.699 15.699 283.359 15.926 283.039 cv
16.156 282.719 16.27 282.383 16.27 282.031 cv
16.27 281.707 16.191 281.43 16.035 281.195 cv
15.879 280.965 15.672 280.777 15.414 280.629 cv
15.156 280.488 14.867 280.383 14.539 280.312 cv
14.219 280.25 13.891 280.215 13.563 280.211 cv
cp
f
16.52 273.402 mo
16.676 273.406 16.793 273.414 16.879 273.434 cv
16.969 273.457 17.035 273.488 17.074 273.527 cv
17.117 273.57 17.156 273.633 17.191 273.715 cv
17.227 273.801 17.254 273.898 17.281 274 cv
17.301 274.109 17.32 274.223 17.34 274.34 cv
17.352 274.465 17.359 274.582 17.363 274.699 cv
17.359 275.066 17.313 275.379 17.219 275.637 cv
17.125 275.898 16.98 276.113 16.781 276.277 cv
16.59 276.445 16.344 276.566 16.039 276.637 cv
15.742 276.715 15.391 276.75 14.984 276.75 cv
10.879 276.75 li
10.879 277.734 li
10.879 277.812 10.84 277.875 10.754 277.922 cv
10.676 277.969 10.539 277.992 10.348 277.992 cv
10.25 277.992 10.168 277.988 10.098 277.973 cv
10.035 277.965 9.977 277.945 9.93 277.922 cv
9.887 277.902 9.855 277.875 9.836 277.84 cv
9.82 277.809 9.813 277.773 9.809 277.727 cv
9.809 276.75 li
8.137 276.75 li
8.102 276.75 8.07 276.742 8.035 276.723 cv
8.008 276.707 7.98 276.672 7.953 276.621 cv
7.934 276.574 7.914 276.508 7.902 276.422 cv
7.895 276.34 7.891 276.238 7.887 276.113 cv
7.891 275.984 7.895 275.879 7.902 275.793 cv
7.914 275.715 7.934 275.648 7.953 275.598 cv
7.98 275.555 8.008 275.52 8.035 275.496 cv
8.07 275.477 8.102 275.469 8.137 275.465 cv
9.809 275.465 li
9.809 273.66 li
9.813 273.621 9.82 273.582 9.836 273.551 cv
9.855 273.52 9.887 273.492 9.93 273.469 cv
9.977 273.445 10.035 273.43 10.098 273.418 cv
10.168 273.41 10.25 273.406 10.348 273.402 cv
10.539 273.406 10.676 273.43 10.754 273.473 cv
10.84 273.523 10.879 273.586 10.879 273.66 cv
10.879 275.465 li
14.797 275.465 li
15.281 275.469 15.645 275.395 15.891 275.25 cv
16.141 275.109 16.266 274.855 16.262 274.48 cv
16.266 274.363 16.254 274.254 16.227 274.16 cv
16.207 274.066 16.18 273.984 16.152 273.91 cv
16.129 273.84 16.105 273.777 16.078 273.723 cv
16.059 273.672 16.047 273.625 16.043 273.582 cv
16.047 273.559 16.055 273.535 16.063 273.508 cv
16.078 273.488 16.102 273.469 16.137 273.453 cv
16.176 273.441 16.227 273.43 16.285 273.418 cv
16.352 273.41 16.43 273.406 16.52 273.402 cv
cp
f
17.035 270.414 mo
17.082 270.418 17.117 270.426 17.141 270.445 cv
17.172 270.469 17.195 270.504 17.215 270.547 cv
17.234 270.598 17.246 270.664 17.262 270.742 cv
17.27 270.828 17.277 270.934 17.277 271.059 cv
17.277 271.187 17.27 271.289 17.262 271.371 cv
17.246 271.457 17.234 271.523 17.215 271.57 cv
17.195 271.621 17.172 271.656 17.141 271.672 cv
17.117 271.691 17.082 271.699 17.035 271.699 cv
10.012 271.699 li
9.977 271.699 9.945 271.691 9.91 271.672 cv
9.883 271.656 9.855 271.621 9.832 271.57 cv
9.813 271.523 9.797 271.457 9.785 271.371 cv
9.777 271.289 9.773 271.187 9.77 271.059 cv
9.773 270.934 9.777 270.828 9.785 270.742 cv
9.797 270.664 9.813 270.598 9.832 270.547 cv
9.855 270.504 9.883 270.469 9.91 270.445 cv
9.945 270.426 9.977 270.418 10.012 270.414 cv
cp
7.637 270.266 mo
7.941 270.27 8.145 270.328 8.254 270.437 cv
8.363 270.555 8.418 270.762 8.418 271.066 cv
8.418 271.371 8.367 271.578 8.258 271.687 cv
8.156 271.801 7.953 271.859 7.652 271.855 cv
7.355 271.859 7.152 271.801 7.039 271.684 cv
6.934 271.57 6.879 271.359 6.875 271.051 cv
6.879 270.754 6.93 270.547 7.035 270.434 cv
7.145 270.324 7.348 270.27 7.637 270.266 cv
cp
f
13.445 261.414 mo
14.02 261.418 14.547 261.492 15.027 261.641 cv
15.508 261.793 15.922 262.02 16.27 262.316 cv
16.621 262.617 16.895 262.992 17.086 263.441 cv
17.281 263.891 17.375 264.41 17.379 265.004 cv
17.375 265.582 17.293 266.086 17.121 266.516 cv
16.953 266.945 16.703 267.305 16.371 267.59 cv
16.047 267.875 15.648 268.086 15.18 268.227 cv
14.711 268.367 14.18 268.437 13.586 268.437 cv
13.016 268.437 12.492 268.363 12.008 268.215 cv
11.531 268.066 11.113 267.844 10.762 267.547 cv
10.414 267.25 10.145 266.879 9.949 266.426 cv
9.758 265.98 9.66 265.457 9.66 264.855 cv
9.66 264.281 9.746 263.777 9.918 263.348 cv
10.09 262.922 10.34 262.562 10.668 262.273 cv
10.996 261.988 11.395 261.773 11.863 261.629 cv
12.332 261.488 12.859 261.418 13.445 261.414 cv
cp
13.531 262.75 mo
13.156 262.754 12.797 262.789 12.453 262.855 cv
12.117 262.93 11.82 263.047 11.566 263.207 cv
11.313 263.371 11.109 263.59 10.961 263.867 cv
10.813 264.148 10.738 264.496 10.738 264.906 cv
10.738 265.293 10.809 265.621 10.941 265.895 cv
11.082 266.172 11.273 266.402 11.516 266.578 cv
11.766 266.758 12.055 266.891 12.391 266.977 cv
12.73 267.066 13.102 267.109 13.5 267.105 cv
13.887 267.109 14.25 267.074 14.586 267 cv
14.93 266.93 15.223 266.809 15.473 266.645 cv
15.723 266.48 15.922 266.258 16.07 265.977 cv
16.219 265.699 16.293 265.355 16.293 264.937 cv
16.293 264.562 16.227 264.234 16.09 263.953 cv
15.957 263.68 15.77 263.449 15.523 263.27 cv
15.281 263.09 14.988 262.961 14.648 262.875 cv
14.313 262.797 13.941 262.754 13.531 262.75 cv
cp
f
17.035 253.473 mo
17.082 253.473 17.117 253.484 17.141 253.504 cv
17.172 253.527 17.195 253.562 17.215 253.605 cv
17.234 253.656 17.246 253.719 17.262 253.801 cv
17.27 253.887 17.277 253.992 17.277 254.113 cv
17.277 254.246 17.27 254.352 17.262 254.434 cv
17.246 254.52 17.234 254.586 17.215 254.629 cv
17.195 254.68 17.172 254.715 17.141 254.73 cv
17.117 254.754 17.082 254.762 17.035 254.762 cv
12.922 254.762 li
12.523 254.762 12.199 254.793 11.953 254.855 cv
11.711 254.918 11.5 255.008 11.324 255.125 cv
11.148 255.246 11.016 255.402 10.918 255.59 cv
10.828 255.781 10.781 256 10.777 256.25 cv
10.781 256.574 10.895 256.898 11.121 257.219 cv
11.352 257.543 11.688 257.883 12.125 258.234 cv
17.035 258.234 li
17.082 258.238 17.117 258.246 17.141 258.266 cv
17.172 258.289 17.195 258.324 17.215 258.367 cv
17.234 258.418 17.246 258.484 17.262 258.562 cv
17.27 258.648 17.277 258.754 17.277 258.879 cv
17.277 259.008 17.27 259.109 17.262 259.191 cv
17.246 259.277 17.234 259.344 17.215 259.391 cv
17.195 259.441 17.172 259.477 17.141 259.492 cv
17.117 259.512 17.082 259.52 17.035 259.52 cv
10.012 259.52 li
9.973 259.52 9.938 259.512 9.906 259.496 cv
9.879 259.48 9.855 259.449 9.828 259.402 cv
9.809 259.355 9.793 259.297 9.781 259.223 cv
9.777 259.152 9.773 259.055 9.77 258.934 cv
9.773 258.82 9.777 258.727 9.781 258.652 cv
9.793 258.578 9.809 258.52 9.828 258.477 cv
9.855 258.437 9.879 258.41 9.906 258.387 cv
9.938 258.371 9.973 258.359 10.012 258.359 cv
10.941 258.359 li
10.504 257.965 10.18 257.57 9.969 257.176 cv
9.766 256.785 9.66 256.391 9.66 255.984 cv
9.66 255.52 9.742 255.125 9.898 254.805 cv
10.063 254.488 10.273 254.23 10.535 254.027 cv
10.805 253.832 11.117 253.687 11.469 253.602 cv
11.828 253.516 12.254 253.473 12.75 253.473 cv
cp
f
6.477 244.656 mo
7.523 245.156 8.594 245.523 9.695 245.762 cv
10.797 246.008 11.906 246.129 13.016 246.125 cv
14.141 246.129 15.25 246.004 16.344 245.754 cv
17.441 245.508 18.512 245.148 19.57 244.672 cv
19.629 244.648 19.684 244.633 19.73 244.629 cv
19.773 244.629 19.809 244.648 19.84 244.68 cv
19.863 244.719 19.887 244.773 19.902 244.848 cv
19.914 244.926 19.918 245.027 19.922 245.156 cv
19.918 245.25 19.918 245.332 19.914 245.398 cv
19.906 245.469 19.895 245.527 19.883 245.574 cv
19.863 245.625 19.844 245.664 19.828 245.695 cv
19.805 245.727 19.781 245.75 19.758 245.766 cv
19.227 246.047 18.691 246.297 18.148 246.508 cv
17.602 246.723 17.051 246.898 16.488 247.043 cv
15.93 247.191 15.363 247.301 14.785 247.371 cv
14.215 247.445 13.633 247.484 13.039 247.48 cv
12.453 247.484 11.871 247.441 11.301 247.359 cv
10.73 247.281 10.164 247.168 9.594 247.016 cv
9.031 246.871 8.477 246.691 7.93 246.477 cv
7.387 246.266 6.844 246.027 6.305 245.758 cv
6.285 245.758 6.266 245.742 6.25 245.715 cv
6.234 245.695 6.219 245.664 6.203 245.617 cv
6.188 245.578 6.176 245.52 6.168 245.445 cv
6.16 245.375 6.156 245.281 6.156 245.164 cv
6.156 245.047 6.164 244.949 6.18 244.875 cv
6.195 244.805 6.219 244.75 6.242 244.703 cv
6.273 244.664 6.305 244.641 6.344 244.633 cv
6.387 244.633 6.434 244.641 6.477 244.656 cv
cp
f
17.012 235.746 mo
17.059 235.75 17.094 235.758 17.125 235.773 cv
17.16 235.793 17.188 235.828 17.207 235.879 cv
17.227 235.934 17.242 236.004 17.258 236.09 cv
17.27 236.18 17.277 236.293 17.277 236.434 cv
17.277 236.617 17.27 236.766 17.254 236.879 cv
17.238 236.996 17.211 237.082 17.168 237.137 cv
17.129 237.195 17.082 237.242 17.027 237.277 cv
11.977 240.992 li
17.027 240.992 li
17.066 240.992 17.102 241.004 17.133 241.023 cv
17.168 241.047 17.195 241.082 17.211 241.133 cv
17.23 241.187 17.242 241.258 17.258 241.34 cv
17.27 241.43 17.277 241.539 17.277 241.664 cv
17.277 241.789 17.27 241.895 17.258 241.98 cv
17.242 242.074 17.23 242.145 17.211 242.191 cv
17.195 242.246 17.168 242.281 17.133 242.301 cv
17.102 242.324 17.066 242.336 17.027 242.332 cv
7.336 242.332 li
7.297 242.336 7.262 242.324 7.227 242.301 cv
7.199 242.281 7.172 242.246 7.152 242.191 cv
7.137 242.145 7.121 242.074 7.105 241.98 cv
7.094 241.895 7.09 241.789 7.086 241.664 cv
7.09 241.539 7.094 241.43 7.105 241.34 cv
7.121 241.258 7.137 241.187 7.152 241.133 cv
7.172 241.082 7.199 241.047 7.227 241.023 cv
7.262 241.004 7.297 240.992 7.336 240.992 cv
11.82 240.992 li
7.336 237.418 li
7.293 237.387 7.254 237.352 7.219 237.309 cv
7.191 237.27 7.168 237.219 7.145 237.156 cv
7.129 237.098 7.113 237.023 7.102 236.937 cv
7.094 236.852 7.09 236.742 7.086 236.605 cv
7.09 236.473 7.094 236.363 7.105 236.277 cv
7.121 236.195 7.141 236.129 7.156 236.078 cv
7.18 236.031 7.203 235.996 7.234 235.977 cv
7.266 235.961 7.301 235.953 7.336 235.949 cv
7.406 235.953 7.473 235.969 7.539 236 cv
7.605 236.035 7.699 236.102 7.816 236.191 cv
11.82 239.539 li
16.613 235.934 li
16.754 235.848 16.844 235.793 16.891 235.773 cv
16.941 235.758 16.984 235.75 17.012 235.746 cv
cp
f
16.934 224.672 mo
17.008 224.695 17.066 224.727 17.109 224.766 cv
17.156 224.812 17.191 224.867 17.211 224.937 cv
17.234 225.012 17.246 225.102 17.262 225.207 cv
17.27 225.316 17.277 225.449 17.277 225.602 cv
17.277 225.766 17.27 225.902 17.262 226.012 cv
17.246 226.125 17.234 226.215 17.211 226.285 cv
17.191 226.359 17.156 226.414 17.109 226.449 cv
17.066 226.488 17.008 226.52 16.934 226.535 cv
9.309 228.652 li
9.309 228.668 li
16.934 230.617 li
17.008 230.637 17.066 230.664 17.109 230.695 cv
17.156 230.734 17.191 230.785 17.211 230.852 cv
17.234 230.922 17.246 231.008 17.262 231.113 cv
17.27 231.223 17.277 231.359 17.277 231.523 cv
17.277 231.695 17.27 231.84 17.262 231.953 cv
17.246 232.07 17.234 232.164 17.211 232.234 cv
17.191 232.309 17.156 232.363 17.109 232.402 cv
17.066 232.441 17.008 232.469 16.934 232.484 cv
7.605 235.152 li
7.492 235.187 7.398 235.203 7.328 235.203 cv
7.262 235.207 7.211 235.187 7.172 235.141 cv
7.137 235.098 7.113 235.027 7.102 234.926 cv
7.094 234.832 7.09 234.699 7.086 234.527 cv
7.09 234.371 7.094 234.242 7.098 234.145 cv
7.109 234.055 7.121 233.984 7.141 233.93 cv
7.164 233.883 7.195 233.848 7.227 233.828 cv
7.266 233.812 7.313 233.797 7.367 233.785 cv
15.824 231.516 li
15.824 231.508 li
7.383 229.355 li
7.328 229.34 7.281 229.32 7.238 229.297 cv
7.203 229.273 7.172 229.238 7.148 229.184 cv
7.129 229.137 7.113 229.062 7.102 228.961 cv
7.094 228.867 7.09 228.738 7.086 228.582 cv
7.09 228.437 7.094 228.324 7.102 228.234 cv
7.113 228.152 7.129 228.082 7.148 228.027 cv
7.172 227.977 7.203 227.937 7.238 227.914 cv
7.281 227.891 7.328 227.871 7.383 227.855 cv
15.824 225.539 li
15.824 225.523 li
7.375 223.297 li
7.324 223.281 7.281 223.266 7.238 223.25 cv
7.203 223.234 7.172 223.203 7.148 223.152 cv
7.129 223.105 7.113 223.035 7.102 222.941 cv
7.094 222.852 7.09 222.73 7.086 222.578 cv
7.09 222.426 7.094 222.301 7.105 222.207 cv
7.121 222.117 7.148 222.055 7.18 222.012 cv
7.219 221.973 7.27 221.953 7.336 221.953 cv
7.406 221.961 7.5 221.973 7.613 221.996 cv
cp
f
17.035 214.281 mo
17.082 214.281 17.117 214.293 17.141 214.312 cv
17.172 214.336 17.195 214.371 17.215 214.414 cv
17.234 214.465 17.246 214.527 17.262 214.609 cv
17.27 214.695 17.277 214.801 17.277 214.922 cv
17.277 215.055 17.27 215.16 17.262 215.242 cv
17.246 215.328 17.234 215.395 17.215 215.437 cv
17.195 215.488 17.172 215.523 17.141 215.539 cv
17.117 215.562 17.082 215.57 17.035 215.57 cv
12.922 215.57 li
12.523 215.57 12.199 215.602 11.953 215.664 cv
11.711 215.727 11.5 215.816 11.324 215.934 cv
11.148 216.055 11.016 216.211 10.918 216.398 cv
10.828 216.59 10.781 216.809 10.777 217.059 cv
10.781 217.383 10.895 217.707 11.121 218.027 cv
11.352 218.352 11.688 218.691 12.125 219.043 cv
17.035 219.043 li
17.082 219.047 17.117 219.055 17.141 219.074 cv
17.172 219.098 17.195 219.133 17.215 219.176 cv
17.234 219.227 17.246 219.293 17.262 219.371 cv
17.27 219.457 17.277 219.562 17.277 219.687 cv
17.277 219.816 17.27 219.918 17.262 220 cv
17.246 220.086 17.234 220.152 17.215 220.199 cv
17.195 220.25 17.172 220.285 17.141 220.301 cv
17.117 220.32 17.082 220.328 17.035 220.328 cv
6.609 220.328 li
6.57 220.328 6.535 220.32 6.5 220.301 cv
6.473 220.285 6.445 220.25 6.422 220.199 cv
6.402 220.152 6.387 220.086 6.375 220 cv
6.367 219.918 6.363 219.816 6.359 219.687 cv
6.363 219.562 6.367 219.457 6.375 219.371 cv
6.387 219.293 6.402 219.227 6.422 219.176 cv
6.445 219.133 6.473 219.098 6.5 219.074 cv
6.535 219.055 6.57 219.047 6.609 219.043 cv
10.816 219.043 li
10.43 218.676 10.141 218.301 9.945 217.926 cv
9.758 217.551 9.66 217.176 9.66 216.793 cv
9.66 216.328 9.742 215.934 9.898 215.613 cv
10.063 215.297 10.273 215.039 10.535 214.836 cv
10.805 214.641 11.117 214.496 11.469 214.41 cv
11.828 214.324 12.258 214.281 12.758 214.281 cv
cp
f
19.113 211.82 mo
19.176 211.844 19.23 211.871 19.27 211.902 cv
19.309 211.937 19.336 211.98 19.359 212.031 cv
19.375 212.086 19.391 212.152 19.406 212.223 cv
19.414 212.301 19.422 212.391 19.422 212.5 cv
19.422 212.633 19.41 212.742 19.395 212.824 cv
19.371 212.914 19.348 212.98 19.316 213.023 cv
19.281 213.074 19.238 213.102 19.191 213.109 cv
19.141 213.121 19.082 213.113 19.02 213.078 cv
6.07 208.355 li
6.004 208.34 5.949 208.312 5.91 208.273 cv
5.871 208.242 5.84 208.199 5.816 208.148 cv
5.793 208.102 5.777 208.039 5.77 207.957 cv
5.762 207.883 5.758 207.789 5.758 207.676 cv
5.758 207.551 5.77 207.445 5.785 207.359 cv
5.809 207.281 5.832 207.215 5.859 207.164 cv
5.895 207.121 5.938 207.094 5.984 207.078 cv
6.039 207.07 6.098 207.078 6.164 207.102 cv
cp
f
16.699 199.727 mo
16.801 199.73 16.883 199.738 16.949 199.75 cv
17.02 199.77 17.074 199.789 17.113 199.812 cv
17.156 199.84 17.188 199.871 17.203 199.902 cv
17.223 199.937 17.23 199.973 17.23 200.008 cv
17.23 205.281 li
17.23 205.32 17.223 205.355 17.203 205.383 cv
17.188 205.418 17.156 205.445 17.113 205.473 cv
17.074 205.504 17.02 205.527 16.949 205.539 cv
16.883 205.559 16.801 205.566 16.699 205.562 cv
16.609 205.566 16.527 205.559 16.457 205.539 cv
16.391 205.527 16.336 205.508 16.289 205.48 cv
16.246 205.461 16.211 205.434 16.188 205.395 cv
16.164 205.363 16.152 205.324 16.152 205.281 cv
16.152 203.176 li
8.473 203.176 li
9.637 205.125 li
9.691 205.227 9.723 205.305 9.73 205.363 cv
9.742 205.426 9.73 205.473 9.695 205.508 cv
9.664 205.547 9.609 205.574 9.527 205.582 cv
9.453 205.598 9.355 205.602 9.23 205.602 cv
9.145 205.602 9.066 205.598 9.004 205.59 cv
8.941 205.582 8.891 205.57 8.848 205.555 cv
8.809 205.539 8.773 205.52 8.738 205.488 cv
8.711 205.465 8.68 205.426 8.645 205.375 cv
7.156 203.051 li
7.145 203.035 7.129 203.008 7.117 202.973 cv
7.109 202.945 7.102 202.906 7.086 202.855 cv
7.078 202.812 7.07 202.758 7.066 202.691 cv
7.066 202.633 7.066 202.555 7.063 202.457 cv
7.066 202.336 7.07 202.23 7.078 202.145 cv
7.09 202.062 7.105 202 7.121 201.949 cv
7.145 201.906 7.168 201.875 7.191 201.855 cv
7.223 201.844 7.25 201.836 7.281 201.832 cv
16.152 201.832 li
16.152 200.008 li
16.152 199.969 16.164 199.93 16.188 199.891 cv
16.211 199.855 16.246 199.824 16.289 199.801 cv
16.336 199.777 16.391 199.762 16.457 199.746 cv
16.527 199.738 16.609 199.73 16.699 199.727 cv
cp
f
12.156 191.422 mo
12.934 191.422 13.645 191.484 14.281 191.605 cv
14.926 191.73 15.477 191.934 15.934 192.215 cv
16.395 192.5 16.75 192.871 17 193.328 cv
17.254 193.785 17.375 194.348 17.379 195.02 cv
17.375 195.656 17.266 196.191 17.039 196.625 cv
16.816 197.059 16.484 197.41 16.039 197.672 cv
15.602 197.941 15.059 198.129 14.418 198.238 cv
13.777 198.352 13.039 198.406 12.203 198.406 cv
11.438 198.406 10.734 198.344 10.086 198.219 cv
9.445 198.094 8.891 197.891 8.43 197.609 cv
7.969 197.328 7.613 196.961 7.363 196.504 cv
7.113 196.047 6.988 195.484 6.984 194.816 cv
6.988 194.18 7.102 193.645 7.324 193.207 cv
7.551 192.777 7.883 192.426 8.32 192.156 cv
8.762 191.895 9.305 191.707 9.945 191.59 cv
10.594 191.48 11.328 191.422 12.156 191.422 cv
cp
12.25 192.797 mo
11.746 192.801 11.297 192.816 10.895 192.852 cv
10.496 192.891 10.141 192.945 9.832 193.012 cv
9.527 193.086 9.262 193.176 9.039 193.285 cv
8.82 193.395 8.641 193.527 8.492 193.684 cv
8.352 193.84 8.246 194.02 8.18 194.219 cv
8.117 194.422 8.086 194.648 8.082 194.895 cv
8.086 195.34 8.188 195.699 8.395 195.973 cv
8.605 196.254 8.895 196.469 9.254 196.625 cv
9.621 196.785 10.047 196.895 10.535 196.949 cv
11.027 197.008 11.551 197.035 12.109 197.031 cv
12.867 197.035 13.512 196.996 14.035 196.918 cv
14.566 196.84 14.996 196.719 15.328 196.547 cv
15.66 196.383 15.902 196.164 16.051 195.898 cv
16.207 195.637 16.281 195.32 16.277 194.941 cv
16.281 194.652 16.234 194.395 16.137 194.172 cv
16.047 193.953 15.914 193.762 15.734 193.602 cv
15.563 193.445 15.352 193.316 15.109 193.211 cv
14.867 193.109 14.598 193.027 14.297 192.961 cv
14.004 192.902 13.684 192.859 13.332 192.832 cv
12.988 192.812 12.625 192.801 12.25 192.797 cv
cp
f
9.773 187.941 mo
9.914 187.945 10.008 187.961 10.055 187.988 cv
10.109 188.023 10.133 188.07 10.133 188.125 cv
10.133 190.305 li
10.133 190.371 10.109 190.418 10.055 190.445 cv
10.004 190.48 9.91 190.496 9.773 190.492 cv
9.645 190.496 9.551 190.48 9.496 190.445 cv
9.445 190.418 9.418 190.371 9.418 190.305 cv
9.418 188.125 li
9.418 188.102 9.426 188.074 9.434 188.051 cv
9.449 188.027 9.469 188.008 9.496 187.992 cv
9.527 187.977 9.563 187.965 9.605 187.957 cv
9.652 187.949 9.711 187.945 9.773 187.941 cv
cp
f
10.477 182.844 mo
10.789 182.848 11.066 182.902 11.316 183.008 cv
11.566 183.117 11.781 183.27 11.953 183.469 cv
12.133 183.672 12.27 183.922 12.363 184.215 cv
12.457 184.512 12.5 184.844 12.504 185.215 cv
12.5 185.445 12.48 185.656 12.449 185.852 cv
12.41 186.047 12.371 186.223 12.32 186.375 cv
12.273 186.527 12.223 186.652 12.164 186.754 cv
12.113 186.855 12.074 186.922 12.047 186.945 cv
12.027 186.977 12.004 186.996 11.977 187.004 cv
11.953 187.02 11.922 187.031 11.887 187.039 cv
11.852 187.055 11.809 187.062 11.758 187.062 cv
11.707 187.07 11.645 187.07 11.57 187.07 cv
11.449 187.07 11.363 187.059 11.313 187.035 cv
11.266 187.012 11.242 186.977 11.238 186.93 cv
11.242 186.898 11.27 186.836 11.324 186.738 cv
11.383 186.648 11.441 186.527 11.504 186.375 cv
11.566 186.23 11.629 186.059 11.684 185.855 cv
11.742 185.66 11.77 185.437 11.766 185.195 cv
11.77 184.961 11.738 184.754 11.676 184.574 cv
11.617 184.395 11.535 184.246 11.426 184.125 cv
11.324 184.004 11.195 183.914 11.043 183.852 cv
10.898 183.797 10.738 183.766 10.559 183.762 cv
10.371 183.766 10.199 183.805 10.047 183.879 cv
9.895 183.957 9.762 184.07 9.648 184.215 cv
9.539 184.367 9.453 184.551 9.395 184.766 cv
9.336 184.984 9.309 185.23 9.305 185.504 cv
9.305 186.168 li
9.309 186.199 9.301 186.23 9.285 186.254 cv
9.273 186.285 9.254 186.309 9.227 186.324 cv
9.199 186.348 9.164 186.363 9.117 186.371 cv
9.074 186.387 9.012 186.391 8.938 186.391 cv
8.875 186.391 8.82 186.387 8.773 186.375 cv
8.73 186.367 8.695 186.352 8.668 186.332 cv
8.645 186.312 8.629 186.293 8.613 186.266 cv
8.605 186.242 8.598 186.211 8.594 186.18 cv
8.594 185.59 li
8.598 185.363 8.57 185.156 8.508 184.973 cv
8.453 184.793 8.367 184.641 8.25 184.512 cv
8.141 184.387 8.008 184.289 7.852 184.219 cv
7.699 184.152 7.523 184.117 7.332 184.117 cv
7.195 184.117 7.063 184.141 6.934 184.184 cv
6.809 184.23 6.699 184.297 6.602 184.387 cv
6.512 184.48 6.438 184.598 6.383 184.734 cv
6.328 184.879 6.301 185.043 6.301 185.223 cv
6.301 185.426 6.332 185.609 6.391 185.777 cv
6.453 185.945 6.52 186.094 6.586 186.227 cv
6.66 186.359 6.727 186.473 6.785 186.559 cv
6.848 186.648 6.875 186.707 6.875 186.738 cv
6.875 186.766 6.871 186.789 6.863 186.805 cv
6.855 186.828 6.84 186.844 6.809 186.852 cv
6.785 186.867 6.746 186.875 6.699 186.875 cv
6.652 186.883 6.59 186.883 6.512 186.883 cv
6.461 186.883 6.418 186.883 6.375 186.879 cv
6.34 186.879 6.305 186.871 6.273 186.859 cv
6.246 186.852 6.219 186.84 6.191 186.824 cv
6.168 186.809 6.141 186.785 6.105 186.754 cv
6.074 186.723 6.023 186.656 5.961 186.551 cv
5.898 186.453 5.84 186.328 5.777 186.18 cv
5.719 186.031 5.664 185.863 5.621 185.668 cv
5.582 185.48 5.563 185.27 5.559 185.043 cv
5.563 184.73 5.602 184.457 5.68 184.219 cv
5.762 183.984 5.875 183.789 6.02 183.629 cv
6.168 183.473 6.344 183.352 6.543 183.273 cv
6.75 183.195 6.977 183.156 7.219 183.156 cv
7.434 183.156 7.629 183.187 7.809 183.242 cv
7.992 183.301 8.152 183.379 8.293 183.484 cv
8.434 183.594 8.555 183.727 8.656 183.883 cv
8.758 184.039 8.828 184.219 8.859 184.422 cv
8.871 184.422 li
8.898 184.191 8.957 183.98 9.047 183.785 cv
9.141 183.594 9.254 183.43 9.395 183.289 cv
9.535 183.152 9.699 183.043 9.883 182.961 cv
10.07 182.887 10.27 182.848 10.477 182.844 cv
cp
f
13.039 178.41 mo
13.633 178.414 14.215 178.449 14.785 178.52 cv
15.363 178.594 15.93 178.703 16.488 178.848 cv
17.051 178.996 17.602 179.176 18.148 179.383 cv
18.691 179.598 19.227 179.844 19.758 180.121 cv
19.781 180.141 19.805 180.164 19.828 180.191 cv
19.844 180.227 19.863 180.266 19.883 180.312 cv
19.895 180.359 19.906 180.418 19.914 180.484 cv
19.918 180.555 19.918 180.637 19.922 180.727 cv
19.918 180.867 19.914 180.973 19.902 181.043 cv
19.887 181.121 19.863 181.176 19.84 181.207 cv
19.809 181.246 19.773 181.262 19.73 181.254 cv
19.684 181.254 19.629 181.238 19.57 181.211 cv
18.516 180.734 17.445 180.375 16.348 180.129 cv
15.25 179.887 14.141 179.762 13.016 179.762 cv
11.906 179.762 10.797 179.887 9.695 180.129 cv
8.594 180.375 7.523 180.738 6.477 181.227 cv
6.434 181.25 6.387 181.258 6.344 181.25 cv
6.305 181.246 6.273 181.223 6.242 181.18 cv
6.219 181.141 6.195 181.086 6.18 181.008 cv
6.164 180.937 6.156 180.84 6.156 180.719 cv
6.156 180.613 6.16 180.523 6.168 180.445 cv
6.176 180.375 6.188 180.316 6.203 180.273 cv
6.219 180.23 6.234 180.199 6.25 180.176 cv
6.266 180.16 6.285 180.145 6.305 180.129 cv
7.371 179.598 8.469 179.176 9.594 178.867 cv
10.727 178.566 11.875 178.414 13.039 178.41 cv
cp
f
324.27 557.324 mo
324.266 557.43 324.25 557.52 324.215 557.59 cv
324.18 557.668 324.133 557.727 324.078 557.77 cv
324.02 557.82 323.957 557.855 323.891 557.871 cv
323.816 557.895 323.746 557.902 323.684 557.902 cv
323.238 557.902 li
323.098 557.902 322.977 557.891 322.871 557.859 cv
322.766 557.836 322.668 557.781 322.574 557.703 cv
322.48 557.629 322.387 557.527 322.293 557.395 cv
322.199 557.266 322.098 557.102 321.992 556.898 cv
318.918 551.16 li
318.754 550.867 318.59 550.559 318.43 550.23 cv
318.262 549.91 318.109 549.594 317.973 549.285 cv
317.957 549.285 li
317.965 549.66 317.973 550.043 317.98 550.43 cv
317.984 550.82 317.984 551.207 317.988 551.59 cv
317.988 557.676 li
317.984 557.715 317.973 557.75 317.953 557.781 cv
317.93 557.816 317.895 557.844 317.844 557.859 cv
317.789 557.879 317.719 557.891 317.637 557.906 cv
317.551 557.918 317.445 557.926 317.316 557.926 cv
317.18 557.926 317.07 557.918 316.988 557.906 cv
316.902 557.891 316.836 557.879 316.789 557.859 cv
316.738 557.844 316.703 557.816 316.68 557.781 cv
316.656 557.75 316.645 557.715 316.648 557.676 cv
316.648 548.371 li
316.645 548.164 316.703 548.016 316.824 547.926 cv
316.941 547.84 317.07 547.797 317.211 547.793 cv
317.871 547.793 li
318.023 547.797 318.156 547.809 318.262 547.832 cv
318.363 547.859 318.457 547.902 318.543 547.961 cv
318.625 548.023 318.703 548.105 318.785 548.211 cv
318.859 548.32 318.941 548.457 319.027 548.613 cv
321.395 553.039 li
321.539 553.312 321.68 553.578 321.816 553.832 cv
321.949 554.09 322.078 554.344 322.207 554.59 cv
322.328 554.844 322.453 555.09 322.578 555.328 cv
322.699 555.57 322.82 555.812 322.945 556.055 cv
322.953 556.055 li
322.941 555.648 322.934 555.219 322.934 554.773 cv
322.926 554.328 322.926 553.902 322.93 553.492 cv
322.93 548.02 li
322.926 547.984 322.938 547.949 322.961 547.918 cv
322.984 547.887 323.02 547.859 323.074 547.836 cv
323.121 547.812 323.191 547.797 323.277 547.785 cv
323.363 547.777 323.473 547.773 323.613 547.77 cv
323.73 547.773 323.836 547.777 323.926 547.785 cv
324.012 547.797 324.078 547.812 324.129 547.836 cv
324.176 547.859 324.211 547.887 324.234 547.918 cv
324.254 547.949 324.266 547.984 324.27 548.02 cv
cp
f
332.82 557.684 mo
332.816 557.73 332.809 557.766 332.793 557.789 cv
332.773 557.82 332.738 557.844 332.695 557.863 cv
332.648 557.883 332.59 557.895 332.516 557.91 cv
332.438 557.918 332.344 557.926 332.238 557.926 cv
332.113 557.926 332.016 557.918 331.945 557.91 cv
331.867 557.895 331.809 557.883 331.766 557.863 cv
331.719 557.844 331.688 557.82 331.676 557.789 cv
331.656 557.766 331.648 557.73 331.652 557.684 cv
331.652 556.758 li
331.25 557.203 330.855 557.523 330.469 557.723 cv
330.074 557.926 329.68 558.023 329.285 558.027 cv
328.813 558.023 328.418 557.949 328.102 557.793 cv
327.781 557.641 327.523 557.43 327.328 557.16 cv
327.125 556.895 326.984 556.582 326.902 556.223 cv
326.813 555.867 326.77 555.434 326.773 554.926 cv
326.773 550.672 li
326.77 550.633 326.777 550.598 326.801 550.566 cv
326.816 550.539 326.852 550.516 326.906 550.488 cv
326.953 550.469 327.023 550.453 327.109 550.441 cv
327.191 550.437 327.293 550.434 327.422 550.43 cv
327.543 550.434 327.648 550.437 327.734 550.441 cv
327.816 550.453 327.883 550.469 327.93 550.488 cv
327.977 550.516 328.012 550.539 328.035 550.566 cv
328.055 550.598 328.063 550.633 328.066 550.672 cv
328.066 554.754 li
328.063 555.168 328.094 555.496 328.156 555.742 cv
328.215 555.988 328.305 556.199 328.43 556.371 cv
328.547 556.551 328.703 556.684 328.895 556.777 cv
329.078 556.875 329.297 556.926 329.547 556.922 cv
329.867 556.926 330.188 556.809 330.512 556.578 cv
330.828 556.352 331.168 556.016 331.527 555.57 cv
331.527 550.672 li
331.527 550.633 331.535 550.598 331.555 550.566 cv
331.57 550.539 331.605 550.516 331.66 550.488 cv
331.711 550.469 331.777 550.453 331.859 550.441 cv
331.938 550.437 332.043 550.434 332.176 550.43 cv
332.297 550.434 332.402 550.437 332.488 550.441 cv
332.57 550.453 332.633 550.469 332.68 550.488 cv
332.723 550.516 332.758 550.539 332.785 550.566 cv
332.805 550.598 332.816 550.633 332.82 550.672 cv
cp
f
345.598 557.684 mo
345.594 557.73 345.586 557.766 345.566 557.789 cv
345.543 557.82 345.508 557.844 345.465 557.863 cv
345.414 557.883 345.348 557.895 345.27 557.91 cv
345.184 557.918 345.082 557.926 344.957 557.926 cv
344.824 557.926 344.715 557.918 344.637 557.91 cv
344.551 557.895 344.484 557.883 344.438 557.863 cv
344.383 557.844 344.348 557.82 344.332 557.789 cv
344.309 557.766 344.301 557.73 344.301 557.684 cv
344.301 553.422 li
344.301 553.129 344.273 552.859 344.223 552.613 cv
344.168 552.371 344.086 552.16 343.973 551.98 cv
343.859 551.805 343.715 551.668 343.539 551.574 cv
343.359 551.48 343.148 551.434 342.914 551.434 cv
342.617 551.434 342.32 551.551 342.023 551.777 cv
341.719 552.012 341.391 552.344 341.035 552.781 cv
341.035 557.684 li
341.031 557.73 341.02 557.766 341.004 557.789 cv
340.98 557.82 340.949 557.844 340.902 557.863 cv
340.852 557.883 340.785 557.895 340.703 557.91 cv
340.617 557.918 340.512 557.926 340.391 557.926 cv
340.27 557.926 340.168 557.918 340.082 557.91 cv
339.996 557.895 339.926 557.883 339.879 557.863 cv
339.824 557.844 339.793 557.82 339.777 557.789 cv
339.758 557.766 339.746 557.73 339.75 557.684 cv
339.75 553.422 li
339.746 553.129 339.719 552.859 339.664 552.613 cv
339.605 552.371 339.52 552.16 339.406 551.98 cv
339.293 551.805 339.148 551.668 338.977 551.574 cv
338.797 551.48 338.59 551.434 338.355 551.434 cv
338.055 551.434 337.758 551.551 337.457 551.777 cv
337.156 552.012 336.828 552.344 336.477 552.781 cv
336.477 557.684 li
336.473 557.73 336.461 557.766 336.445 557.789 cv
336.422 557.82 336.391 557.844 336.344 557.863 cv
336.297 557.883 336.23 557.895 336.152 557.91 cv
336.066 557.918 335.961 557.926 335.832 557.926 cv
335.703 557.926 335.598 557.918 335.52 557.91 cv
335.434 557.895 335.367 557.883 335.32 557.863 cv
335.266 557.844 335.234 557.82 335.219 557.789 cv
335.199 557.766 335.188 557.73 335.191 557.684 cv
335.191 550.672 li
335.188 550.633 335.195 550.598 335.215 550.566 cv
335.227 550.539 335.258 550.516 335.309 550.488 cv
335.352 550.469 335.414 550.453 335.488 550.441 cv
335.559 550.437 335.652 550.434 335.777 550.43 cv
335.887 550.434 335.984 550.437 336.063 550.441 cv
336.137 550.453 336.195 550.469 336.238 550.488 cv
336.277 550.516 336.305 550.539 336.324 550.566 cv
336.34 550.598 336.348 550.633 336.352 550.672 cv
336.352 551.598 li
336.742 551.156 337.125 550.836 337.5 550.629 cv
337.867 550.426 338.246 550.32 338.629 550.32 cv
338.918 550.32 339.176 550.355 339.41 550.422 cv
339.637 550.492 339.844 550.586 340.023 550.707 cv
340.199 550.828 340.348 550.973 340.477 551.141 cv
340.598 551.312 340.703 551.504 340.789 551.707 cv
341.02 551.457 341.242 551.242 341.453 551.062 cv
341.664 550.891 341.867 550.746 342.063 550.633 cv
342.258 550.527 342.445 550.449 342.629 550.395 cv
342.813 550.348 343 550.32 343.188 550.32 cv
343.641 550.32 344.02 550.402 344.324 550.559 cv
344.629 550.723 344.875 550.934 345.07 551.195 cv
345.258 551.461 345.395 551.77 345.477 552.125 cv
345.555 552.48 345.594 552.855 345.598 553.25 cv
cp
f
354.395 554.082 mo
354.391 554.691 354.324 555.242 354.195 555.727 cv
354.059 556.215 353.863 556.629 353.609 556.969 cv
353.352 557.312 353.035 557.574 352.664 557.754 cv
352.289 557.937 351.863 558.023 351.379 558.027 cv
351.152 558.023 350.945 558.004 350.758 557.961 cv
350.57 557.914 350.383 557.844 350.203 557.746 cv
350.016 557.648 349.836 557.523 349.656 557.371 cv
349.473 557.223 349.281 557.043 349.082 556.828 cv
349.082 557.684 li
349.082 557.73 349.07 557.766 349.051 557.793 cv
349.027 557.828 348.992 557.852 348.949 557.867 cv
348.898 557.883 348.84 557.895 348.773 557.91 cv
348.699 557.918 348.609 557.926 348.504 557.926 cv
348.395 557.926 348.309 557.918 348.238 557.91 cv
348.164 557.895 348.102 557.883 348.059 557.867 cv
348.008 557.852 347.977 557.828 347.965 557.793 cv
347.945 557.766 347.938 557.73 347.941 557.684 cv
347.941 547.273 li
347.938 547.234 347.949 547.199 347.969 547.164 cv
347.984 547.137 348.016 547.109 348.07 547.086 cv
348.117 547.066 348.184 547.051 348.27 547.039 cv
348.348 547.031 348.453 547.027 348.582 547.023 cv
348.711 547.027 348.816 547.031 348.902 547.039 cv
348.98 547.051 349.047 547.066 349.094 547.086 cv
349.141 547.109 349.172 547.137 349.195 547.164 cv
349.211 547.199 349.223 547.234 349.227 547.273 cv
349.227 551.473 li
349.434 551.262 349.637 551.082 349.832 550.937 cv
350.027 550.793 350.215 550.676 350.402 550.582 cv
350.586 550.496 350.773 550.43 350.965 550.383 cv
351.148 550.344 351.348 550.32 351.559 550.32 cv
352.063 550.32 352.496 550.422 352.863 550.625 cv
353.223 550.828 353.516 551.102 353.742 551.437 cv
353.965 551.781 354.133 552.18 354.238 552.637 cv
354.34 553.094 354.391 553.574 354.395 554.082 cv
cp
353.063 554.23 mo
353.059 553.875 353.031 553.527 352.98 553.187 cv
352.922 552.852 352.828 552.555 352.691 552.293 cv
352.555 552.035 352.375 551.824 352.152 551.664 cv
351.926 551.508 351.645 551.43 351.313 551.426 cv
351.145 551.43 350.98 551.453 350.82 551.496 cv
350.656 551.547 350.492 551.625 350.324 551.73 cv
350.156 551.844 349.98 551.984 349.805 552.152 cv
349.621 552.328 349.43 552.543 349.227 552.797 cv
349.227 555.594 li
349.582 556.027 349.922 556.359 350.246 556.582 cv
350.57 556.812 350.906 556.926 351.258 556.922 cv
351.578 556.926 351.855 556.848 352.09 556.687 cv
352.316 556.535 352.504 556.328 352.648 556.066 cv
352.793 555.812 352.898 555.523 352.965 555.203 cv
353.027 554.887 353.059 554.562 353.063 554.23 cv
cp
f
362.305 553.875 mo
362.301 554.078 362.25 554.219 362.152 554.305 cv
362.047 554.391 361.93 554.434 361.805 554.434 cv
357.188 554.434 li
357.184 554.824 357.223 555.176 357.305 555.488 cv
357.379 555.801 357.512 556.07 357.695 556.289 cv
357.875 556.516 358.109 556.687 358.406 556.805 cv
358.695 556.93 359.055 556.988 359.48 556.984 cv
359.813 556.988 360.109 556.961 360.371 556.902 cv
360.633 556.852 360.859 556.789 361.051 556.719 cv
361.238 556.652 361.395 556.594 361.52 556.535 cv
361.641 556.484 361.734 556.457 361.797 556.453 cv
361.832 556.457 361.863 556.465 361.895 556.48 cv
361.922 556.5 361.945 556.527 361.965 556.562 cv
361.977 556.602 361.988 556.652 362 556.715 cv
362.004 556.781 362.008 556.859 362.012 556.953 cv
362.008 557.023 362.004 557.082 362.004 557.129 cv
361.996 557.176 361.992 557.219 361.984 557.258 cv
361.977 557.297 361.961 557.332 361.945 557.363 cv
361.922 557.395 361.898 557.426 361.875 557.453 cv
361.844 557.484 361.762 557.531 361.621 557.594 cv
361.48 557.66 361.297 557.723 361.074 557.785 cv
360.848 557.848 360.59 557.902 360.297 557.953 cv
360.004 558 359.691 558.023 359.359 558.027 cv
358.781 558.023 358.273 557.945 357.844 557.785 cv
357.406 557.625 357.043 557.387 356.75 557.07 cv
356.449 556.754 356.227 556.359 356.078 555.879 cv
355.93 555.402 355.855 554.844 355.855 554.207 cv
355.855 553.609 355.93 553.07 356.086 552.586 cv
356.238 552.109 356.465 551.699 356.762 551.363 cv
357.055 551.027 357.41 550.77 357.824 550.59 cv
358.238 550.41 358.703 550.32 359.219 550.32 cv
359.77 550.32 360.238 550.41 360.625 550.586 cv
361.012 550.766 361.328 551.004 361.582 551.301 cv
361.828 551.602 362.012 551.953 362.129 552.352 cv
362.242 552.758 362.301 553.187 362.305 553.641 cv
cp
361.012 553.492 mo
361.027 552.816 360.875 552.285 360.559 551.902 cv
360.242 551.52 359.773 551.328 359.156 551.324 cv
358.832 551.328 358.551 551.387 358.313 551.504 cv
358.07 551.625 357.871 551.785 357.711 551.98 cv
357.547 552.18 357.422 552.41 357.336 552.672 cv
357.246 552.934 357.195 553.207 357.188 553.492 cv
cp
f
368.371 551.129 mo
368.367 551.246 368.367 551.344 368.363 551.418 cv
368.355 551.5 368.344 551.562 368.332 551.602 cv
368.313 551.648 368.293 551.68 368.273 551.703 cv
368.246 551.727 368.215 551.738 368.176 551.738 cv
368.133 551.738 368.082 551.727 368.023 551.703 cv
367.961 551.68 367.891 551.656 367.82 551.633 cv
367.742 551.609 367.66 551.59 367.566 551.566 cv
367.473 551.551 367.371 551.539 367.262 551.535 cv
367.129 551.539 367 551.566 366.879 551.613 cv
366.754 551.668 366.625 551.754 366.488 551.871 cv
366.348 551.996 366.203 552.152 366.055 552.348 cv
365.902 552.543 365.734 552.785 365.555 553.07 cv
365.555 557.684 li
365.551 557.73 365.539 557.766 365.523 557.789 cv
365.5 557.82 365.469 557.844 365.422 557.863 cv
365.375 557.883 365.309 557.895 365.23 557.91 cv
365.145 557.918 365.039 557.926 364.91 557.926 cv
364.781 557.926 364.676 557.918 364.598 557.91 cv
364.512 557.895 364.445 557.883 364.398 557.863 cv
364.344 557.844 364.313 557.82 364.297 557.789 cv
364.277 557.766 364.266 557.73 364.27 557.684 cv
364.27 550.672 li
364.266 550.633 364.273 550.598 364.293 550.566 cv
364.305 550.539 364.336 550.516 364.387 550.488 cv
364.43 550.469 364.492 550.453 364.566 550.441 cv
364.637 550.437 364.73 550.434 364.855 550.43 cv
364.965 550.434 365.063 550.437 365.141 550.441 cv
365.215 550.453 365.273 550.469 365.316 550.488 cv
365.355 550.516 365.383 550.539 365.402 550.566 cv
365.418 550.598 365.426 550.633 365.43 550.672 cv
365.43 551.691 li
365.617 551.41 365.801 551.184 365.973 551.008 cv
366.141 550.832 366.301 550.691 366.453 550.59 cv
366.602 550.488 366.75 550.418 366.898 550.379 cv
367.047 550.34 367.195 550.32 367.348 550.32 cv
367.414 550.32 367.492 550.324 367.578 550.332 cv
367.664 550.34 367.754 550.355 367.848 550.375 cv
367.941 550.398 368.023 550.422 368.102 550.445 cv
368.172 550.473 368.227 550.5 368.262 550.523 cv
368.289 550.555 368.309 550.578 368.324 550.598 cv
368.332 550.625 368.344 550.656 368.352 550.687 cv
368.359 550.727 368.363 550.777 368.367 550.848 cv
368.367 550.918 368.367 551.012 368.371 551.129 cv
cp
f
380.129 554.098 mo
380.125 554.676 380.051 555.203 379.902 555.68 cv
379.75 556.164 379.523 556.578 379.227 556.922 cv
378.926 557.273 378.551 557.543 378.105 557.734 cv
377.652 557.93 377.133 558.023 376.543 558.027 cv
375.965 558.023 375.461 557.941 375.035 557.77 cv
374.605 557.602 374.25 557.352 373.965 557.023 cv
373.676 556.695 373.461 556.301 373.324 555.832 cv
373.184 555.367 373.117 554.836 373.117 554.238 cv
373.117 553.672 373.188 553.145 373.336 552.664 cv
373.48 552.184 373.707 551.77 374.008 551.418 cv
374.305 551.07 374.676 550.801 375.125 550.609 cv
375.57 550.418 376.094 550.32 376.691 550.32 cv
377.27 550.32 377.77 550.406 378.199 550.578 cv
378.625 550.75 378.984 551 379.27 551.328 cv
379.555 551.656 379.77 552.055 379.914 552.52 cv
380.055 552.988 380.125 553.516 380.129 554.098 cv
cp
378.797 554.184 mo
378.793 553.809 378.758 553.449 378.691 553.109 cv
378.617 552.773 378.5 552.48 378.34 552.223 cv
378.176 551.973 377.957 551.77 377.68 551.617 cv
377.398 551.473 377.051 551.398 376.641 551.395 cv
376.254 551.398 375.926 551.465 375.652 551.598 cv
375.375 551.734 375.148 551.926 374.973 552.172 cv
374.793 552.418 374.66 552.711 374.578 553.047 cv
374.488 553.387 374.445 553.754 374.449 554.152 cv
374.445 554.539 374.48 554.902 374.555 555.238 cv
374.621 555.578 374.738 555.871 374.906 556.121 cv
375.07 556.375 375.293 556.578 375.57 556.723 cv
375.848 556.875 376.195 556.949 376.609 556.945 cv
376.984 556.949 377.313 556.879 377.594 556.742 cv
377.871 556.609 378.098 556.422 378.277 556.172 cv
378.453 555.93 378.582 555.637 378.668 555.301 cv
378.75 554.965 378.793 554.594 378.797 554.184 cv
cp
f
385.859 547.785 mo
385.855 547.887 385.852 547.965 385.844 548.023 cv
385.832 548.086 385.82 548.137 385.809 548.168 cv
385.793 548.207 385.777 548.23 385.758 548.242 cv
385.734 548.258 385.707 548.266 385.68 548.262 cv
385.641 548.266 385.594 548.254 385.543 548.227 cv
385.484 548.207 385.418 548.18 385.344 548.148 cv
385.262 548.121 385.172 548.094 385.066 548.07 cv
384.957 548.047 384.832 548.035 384.699 548.035 cv
384.504 548.035 384.34 548.066 384.207 548.129 cv
384.066 548.191 383.957 548.289 383.879 548.422 cv
383.793 548.555 383.734 548.727 383.699 548.937 cv
383.66 549.148 383.641 549.406 383.645 549.703 cv
383.645 550.469 li
385.211 550.469 li
385.25 550.473 385.285 550.48 385.316 550.496 cv
385.344 550.516 385.371 550.547 385.395 550.59 cv
385.418 550.637 385.434 550.695 385.449 550.758 cv
385.457 550.828 385.465 550.91 385.469 551.004 cv
385.465 551.195 385.441 551.328 385.398 551.41 cv
385.348 551.496 385.285 551.539 385.211 551.535 cv
383.645 551.535 li
383.645 557.684 li
383.641 557.73 383.633 557.766 383.613 557.789 cv
383.59 557.82 383.555 557.844 383.508 557.863 cv
383.457 557.883 383.391 557.895 383.309 557.91 cv
383.223 557.918 383.117 557.926 383 557.926 cv
382.871 557.926 382.77 557.918 382.688 557.91 cv
382.602 557.895 382.535 557.883 382.488 557.863 cv
382.438 557.844 382.402 557.82 382.383 557.789 cv
382.359 557.766 382.348 557.73 382.352 557.684 cv
382.352 551.535 li
381.363 551.535 li
381.277 551.539 381.215 551.496 381.176 551.41 cv
381.133 551.328 381.109 551.195 381.113 551.004 cv
381.109 550.91 381.117 550.828 381.129 550.758 cv
381.137 550.695 381.152 550.637 381.176 550.59 cv
381.195 550.547 381.219 550.516 381.254 550.496 cv
381.281 550.48 381.32 550.473 381.363 550.469 cv
382.352 550.469 li
382.352 549.742 li
382.348 549.258 382.395 548.84 382.488 548.484 cv
382.578 548.137 382.715 547.848 382.902 547.625 cv
383.086 547.402 383.32 547.238 383.609 547.129 cv
383.891 547.023 384.227 546.969 384.613 546.969 cv
384.789 546.969 384.965 546.988 385.141 547.02 cv
385.309 547.059 385.441 547.094 385.539 547.129 cv
385.629 547.172 385.691 547.207 385.727 547.234 cv
385.754 547.27 385.781 547.309 385.805 547.355 cv
385.824 547.406 385.836 547.469 385.848 547.535 cv
385.852 547.609 385.855 547.691 385.859 547.785 cv
cp
f
396.059 555.051 mo
396.055 555.523 395.969 555.945 395.797 556.312 cv
395.621 556.687 395.379 557 395.07 557.254 cv
394.762 557.512 394.398 557.703 393.98 557.832 cv
393.559 557.961 393.109 558.023 392.629 558.027 cv
392.289 558.023 391.973 557.996 391.688 557.941 cv
391.398 557.883 391.145 557.816 390.918 557.73 cv
390.691 557.652 390.5 557.566 390.348 557.473 cv
390.191 557.387 390.086 557.309 390.027 557.246 cv
389.969 557.184 389.926 557.105 389.898 557.012 cv
389.867 556.918 389.852 556.789 389.855 556.625 cv
389.852 556.512 389.855 556.418 389.871 556.34 cv
389.879 556.266 389.895 556.203 389.918 556.156 cv
389.934 556.109 389.961 556.078 389.996 556.059 cv
390.023 556.043 390.059 556.035 390.102 556.031 cv
390.172 556.035 390.273 556.078 390.41 556.164 cv
390.539 556.254 390.711 556.352 390.922 556.453 cv
391.129 556.562 391.379 556.66 391.672 556.746 cv
391.965 556.84 392.305 556.883 392.691 556.883 cv
392.98 556.883 393.246 556.844 393.488 556.766 cv
393.727 556.687 393.934 556.578 394.113 556.434 cv
394.285 556.293 394.422 556.117 394.516 555.906 cv
394.609 555.699 394.656 555.465 394.656 555.199 cv
394.656 554.918 394.59 554.672 394.461 554.465 cv
394.328 554.266 394.156 554.09 393.945 553.934 cv
393.73 553.785 393.488 553.645 393.215 553.512 cv
392.941 553.387 392.66 553.254 392.379 553.121 cv
392.09 552.988 391.813 552.844 391.543 552.68 cv
391.273 552.523 391.031 552.332 390.82 552.113 cv
390.602 551.895 390.43 551.641 390.301 551.344 cv
390.164 551.055 390.098 550.703 390.102 550.289 cv
390.098 549.871 390.176 549.496 390.332 549.164 cv
390.484 548.836 390.695 548.559 390.973 548.332 cv
391.242 548.113 391.566 547.941 391.945 547.824 cv
392.32 547.707 392.73 547.648 393.168 547.648 cv
393.387 547.648 393.609 547.668 393.84 547.707 cv
394.063 547.746 394.273 547.797 394.477 547.859 cv
394.672 547.926 394.852 548 395.012 548.078 cv
395.164 548.16 395.266 548.227 395.32 548.273 cv
395.367 548.328 395.402 548.367 395.418 548.391 cv
395.434 548.422 395.445 548.457 395.457 548.5 cv
395.465 548.547 395.473 548.602 395.48 548.66 cv
395.484 548.727 395.488 548.805 395.488 548.902 cv
395.488 548.996 395.484 549.082 395.477 549.152 cv
395.469 549.23 395.457 549.289 395.441 549.336 cv
395.426 549.383 395.402 549.418 395.375 549.441 cv
395.344 549.465 395.313 549.477 395.277 549.477 cv
395.219 549.477 395.129 549.441 395.008 549.371 cv
394.883 549.301 394.73 549.219 394.559 549.125 cv
394.379 549.035 394.172 548.953 393.934 548.875 cv
393.688 548.801 393.418 548.762 393.121 548.762 cv
392.84 548.762 392.594 548.801 392.387 548.875 cv
392.176 548.953 392.004 549.055 391.871 549.176 cv
391.734 549.301 391.633 549.445 391.566 549.617 cv
391.5 549.789 391.469 549.973 391.469 550.164 cv
391.469 550.449 391.531 550.691 391.66 550.891 cv
391.789 551.094 391.961 551.273 392.18 551.426 cv
392.391 551.586 392.637 551.727 392.914 551.855 cv
393.188 551.988 393.469 552.121 393.758 552.25 cv
394.043 552.383 394.324 552.527 394.598 552.684 cv
394.871 552.844 395.117 553.031 395.336 553.246 cv
395.551 553.465 395.723 553.719 395.859 554.012 cv
395.988 554.305 396.055 554.652 396.059 555.051 cv
cp
f
403.824 557.684 mo
403.82 557.73 403.813 557.766 403.797 557.789 cv
403.777 557.82 403.742 557.844 403.699 557.863 cv
403.652 557.883 403.594 557.895 403.52 557.91 cv
403.441 557.918 403.348 557.926 403.242 557.926 cv
403.117 557.926 403.02 557.918 402.949 557.91 cv
402.871 557.895 402.813 557.883 402.77 557.863 cv
402.723 557.844 402.691 557.82 402.68 557.789 cv
402.66 557.766 402.652 557.73 402.656 557.684 cv
402.656 556.758 li
402.254 557.203 401.859 557.523 401.473 557.723 cv
401.078 557.926 400.684 558.023 400.289 558.027 cv
399.816 558.023 399.422 557.949 399.105 557.793 cv
398.785 557.641 398.527 557.43 398.332 557.16 cv
398.129 556.895 397.988 556.582 397.906 556.223 cv
397.816 555.867 397.773 555.434 397.777 554.926 cv
397.777 550.672 li
397.773 550.633 397.781 550.598 397.805 550.566 cv
397.82 550.539 397.855 550.516 397.91 550.488 cv
397.957 550.469 398.027 550.453 398.113 550.441 cv
398.195 550.437 398.297 550.434 398.426 550.43 cv
398.547 550.434 398.652 550.437 398.738 550.441 cv
398.82 550.453 398.887 550.469 398.934 550.488 cv
398.98 550.516 399.016 550.539 399.039 550.566 cv
399.059 550.598 399.066 550.633 399.07 550.672 cv
399.07 554.754 li
399.066 555.168 399.098 555.496 399.16 555.742 cv
399.219 555.988 399.309 556.199 399.434 556.371 cv
399.551 556.551 399.707 556.684 399.898 556.777 cv
400.082 556.875 400.301 556.926 400.551 556.922 cv
400.871 556.926 401.191 556.809 401.516 556.578 cv
401.832 556.352 402.172 556.016 402.531 555.57 cv
402.531 550.672 li
402.531 550.633 402.539 550.598 402.559 550.566 cv
402.574 550.539 402.609 550.516 402.664 550.488 cv
402.715 550.469 402.781 550.453 402.863 550.441 cv
402.941 550.437 403.047 550.434 403.18 550.43 cv
403.301 550.434 403.406 550.437 403.492 550.441 cv
403.574 550.453 403.637 550.469 403.684 550.488 cv
403.727 550.516 403.762 550.539 403.789 550.566 cv
403.809 550.598 403.82 550.633 403.824 550.672 cv
cp
f
412.684 554.082 mo
412.68 554.691 412.613 555.242 412.484 555.727 cv
412.348 556.215 412.152 556.629 411.898 556.969 cv
411.641 557.312 411.324 557.574 410.953 557.754 cv
410.578 557.937 410.152 558.023 409.668 558.027 cv
409.441 558.023 409.234 558.004 409.047 557.961 cv
408.859 557.914 408.672 557.844 408.492 557.746 cv
408.305 557.648 408.125 557.523 407.945 557.371 cv
407.762 557.223 407.57 557.043 407.371 556.828 cv
407.371 557.684 li
407.371 557.73 407.359 557.766 407.34 557.793 cv
407.316 557.828 407.281 557.852 407.238 557.867 cv
407.188 557.883 407.129 557.895 407.063 557.91 cv
406.988 557.918 406.898 557.926 406.793 557.926 cv
406.684 557.926 406.598 557.918 406.527 557.91 cv
406.453 557.895 406.391 557.883 406.348 557.867 cv
406.297 557.852 406.266 557.828 406.254 557.793 cv
406.234 557.766 406.227 557.73 406.23 557.684 cv
406.23 547.273 li
406.227 547.234 406.238 547.199 406.258 547.164 cv
406.273 547.137 406.305 547.109 406.359 547.086 cv
406.406 547.066 406.473 547.051 406.559 547.039 cv
406.637 547.031 406.742 547.027 406.871 547.023 cv
407 547.027 407.105 547.031 407.191 547.039 cv
407.27 547.051 407.336 547.066 407.383 547.086 cv
407.43 547.109 407.461 547.137 407.484 547.164 cv
407.5 547.199 407.512 547.234 407.516 547.273 cv
407.516 551.473 li
407.723 551.262 407.926 551.082 408.121 550.937 cv
408.316 550.793 408.504 550.676 408.691 550.582 cv
408.875 550.496 409.063 550.43 409.254 550.383 cv
409.438 550.344 409.637 550.32 409.848 550.32 cv
410.352 550.32 410.785 550.422 411.152 550.625 cv
411.512 550.828 411.805 551.102 412.031 551.437 cv
412.254 551.781 412.422 552.18 412.527 552.637 cv
412.629 553.094 412.68 553.574 412.684 554.082 cv
cp
411.352 554.23 mo
411.348 553.875 411.32 553.527 411.27 553.187 cv
411.211 552.852 411.117 552.555 410.98 552.293 cv
410.844 552.035 410.664 551.824 410.441 551.664 cv
410.215 551.508 409.934 551.43 409.602 551.426 cv
409.434 551.43 409.27 551.453 409.109 551.496 cv
408.945 551.547 408.781 551.625 408.613 551.73 cv
408.445 551.844 408.27 551.984 408.094 552.152 cv
407.91 552.328 407.719 552.543 407.516 552.797 cv
407.516 555.594 li
407.871 556.027 408.211 556.359 408.535 556.582 cv
408.859 556.812 409.195 556.926 409.547 556.922 cv
409.867 556.926 410.145 556.848 410.379 556.687 cv
410.605 556.535 410.793 556.328 410.938 556.066 cv
411.082 555.812 411.188 555.523 411.254 555.203 cv
411.316 554.887 411.348 554.562 411.352 554.23 cv
cp
f
417.848 553.945 mo
417.848 554.148 417.824 554.285 417.777 554.363 cv
417.73 554.441 417.66 554.48 417.574 554.48 cv
414.316 554.48 li
414.223 554.48 414.156 554.441 414.109 554.359 cv
414.063 554.281 414.039 554.145 414.039 553.945 cv
414.039 553.75 414.063 553.609 414.109 553.531 cv
414.156 553.453 414.223 553.414 414.316 553.414 cv
417.574 553.414 li
417.613 553.414 417.652 553.422 417.688 553.437 cv
417.719 553.453 417.746 553.484 417.773 553.527 cv
417.793 553.574 417.813 553.629 417.828 553.695 cv
417.84 553.766 417.848 553.852 417.848 553.945 cv
cp
f
421.102 557.676 mo
421.098 557.719 421.09 557.754 421.07 557.785 cv
421.047 557.816 421.008 557.844 420.961 557.859 cv
420.906 557.879 420.84 557.891 420.754 557.906 cv
420.668 557.918 420.559 557.926 420.434 557.926 cv
420.305 557.926 420.199 557.918 420.113 557.906 cv
420.023 557.891 419.953 557.879 419.902 557.859 cv
419.848 557.844 419.813 557.816 419.793 557.785 cv
419.77 557.754 419.758 557.719 419.762 557.676 cv
419.762 547.996 li
419.758 547.957 419.77 547.922 419.797 547.887 cv
419.816 547.859 419.855 547.832 419.914 547.812 cv
419.965 547.797 420.035 547.781 420.125 547.766 cv
420.207 547.754 420.309 547.75 420.434 547.746 cv
420.559 547.75 420.668 547.754 420.754 547.766 cv
420.84 547.781 420.906 547.797 420.961 547.812 cv
421.008 547.832 421.047 547.859 421.07 547.887 cv
421.09 547.922 421.098 547.957 421.102 547.996 cv
cp
f
434.086 557.684 mo
434.082 557.73 434.074 557.766 434.055 557.789 cv
434.031 557.82 433.996 557.844 433.953 557.863 cv
433.902 557.883 433.836 557.895 433.758 557.91 cv
433.672 557.918 433.57 557.926 433.445 557.926 cv
433.313 557.926 433.203 557.918 433.125 557.91 cv
433.039 557.895 432.973 557.883 432.926 557.863 cv
432.871 557.844 432.836 557.82 432.82 557.789 cv
432.797 557.766 432.789 557.73 432.789 557.684 cv
432.789 553.422 li
432.789 553.129 432.762 552.859 432.711 552.613 cv
432.656 552.371 432.574 552.16 432.461 551.98 cv
432.348 551.805 432.203 551.668 432.027 551.574 cv
431.848 551.48 431.637 551.434 431.402 551.434 cv
431.105 551.434 430.809 551.551 430.512 551.777 cv
430.207 552.012 429.879 552.344 429.523 552.781 cv
429.523 557.684 li
429.52 557.73 429.508 557.766 429.492 557.789 cv
429.469 557.82 429.438 557.844 429.391 557.863 cv
429.34 557.883 429.273 557.895 429.191 557.91 cv
429.105 557.918 429 557.926 428.879 557.926 cv
428.758 557.926 428.656 557.918 428.57 557.91 cv
428.484 557.895 428.414 557.883 428.367 557.863 cv
428.313 557.844 428.281 557.82 428.266 557.789 cv
428.246 557.766 428.234 557.73 428.238 557.684 cv
428.238 553.422 li
428.234 553.129 428.207 552.859 428.152 552.613 cv
428.094 552.371 428.008 552.16 427.895 551.98 cv
427.781 551.805 427.637 551.668 427.465 551.574 cv
427.285 551.48 427.078 551.434 426.844 551.434 cv
426.543 551.434 426.246 551.551 425.945 551.777 cv
425.645 552.012 425.316 552.344 424.965 552.781 cv
424.965 557.684 li
424.961 557.73 424.949 557.766 424.934 557.789 cv
424.91 557.82 424.879 557.844 424.832 557.863 cv
424.785 557.883 424.719 557.895 424.641 557.91 cv
424.555 557.918 424.449 557.926 424.32 557.926 cv
424.191 557.926 424.086 557.918 424.008 557.91 cv
423.922 557.895 423.855 557.883 423.809 557.863 cv
423.754 557.844 423.723 557.82 423.707 557.789 cv
423.688 557.766 423.676 557.73 423.68 557.684 cv
423.68 550.672 li
423.676 550.633 423.684 550.598 423.703 550.566 cv
423.715 550.539 423.746 550.516 423.797 550.488 cv
423.84 550.469 423.902 550.453 423.977 550.441 cv
424.047 550.437 424.141 550.434 424.266 550.43 cv
424.375 550.434 424.473 550.437 424.551 550.441 cv
424.625 550.453 424.684 550.469 424.727 550.488 cv
424.766 550.516 424.793 550.539 424.813 550.566 cv
424.828 550.598 424.836 550.633 424.84 550.672 cv
424.84 551.598 li
425.23 551.156 425.613 550.836 425.988 550.629 cv
426.355 550.426 426.734 550.32 427.117 550.32 cv
427.406 550.32 427.664 550.355 427.898 550.422 cv
428.125 550.492 428.332 550.586 428.512 550.707 cv
428.688 550.828 428.836 550.973 428.965 551.141 cv
429.086 551.312 429.191 551.504 429.277 551.707 cv
429.508 551.457 429.73 551.242 429.941 551.062 cv
430.152 550.891 430.355 550.746 430.551 550.633 cv
430.746 550.527 430.934 550.449 431.117 550.395 cv
431.301 550.348 431.488 550.32 431.676 550.32 cv
432.129 550.32 432.508 550.402 432.813 550.559 cv
433.117 550.723 433.363 550.934 433.559 551.195 cv
433.746 551.461 433.883 551.77 433.965 552.125 cv
434.043 552.48 434.082 552.855 434.086 553.25 cv
cp
f
441.719 557.691 mo
441.715 557.754 441.695 557.801 441.656 557.832 cv
441.613 557.863 441.555 557.887 441.484 557.902 cv
441.406 557.918 441.301 557.926 441.164 557.926 cv
441.027 557.926 440.918 557.918 440.84 557.902 cv
440.754 557.887 440.695 557.863 440.664 557.832 cv
440.625 557.801 440.609 557.754 440.613 557.691 cv
440.613 556.992 li
440.305 557.32 439.961 557.574 439.586 557.754 cv
439.207 557.937 438.809 558.023 438.391 558.027 cv
438.016 558.023 437.684 557.977 437.387 557.883 cv
437.09 557.785 436.836 557.648 436.625 557.465 cv
436.414 557.285 436.25 557.062 436.133 556.797 cv
436.016 556.535 435.957 556.234 435.961 555.891 cv
435.957 555.5 436.035 555.156 436.199 554.863 cv
436.355 554.574 436.59 554.332 436.895 554.141 cv
437.195 553.949 437.563 553.805 438 553.707 cv
438.434 553.613 438.926 553.566 439.473 553.562 cv
440.441 553.562 li
440.441 553.016 li
440.438 552.746 440.41 552.508 440.355 552.301 cv
440.297 552.094 440.203 551.922 440.078 551.781 cv
439.945 551.645 439.781 551.539 439.582 551.469 cv
439.375 551.398 439.125 551.363 438.836 551.363 cv
438.516 551.363 438.23 551.402 437.98 551.477 cv
437.723 551.555 437.504 551.637 437.316 551.727 cv
437.129 551.82 436.969 551.906 436.844 551.977 cv
436.711 552.055 436.617 552.09 436.559 552.09 cv
436.516 552.09 436.48 552.082 436.449 552.059 cv
436.418 552.043 436.391 552.012 436.367 551.965 cv
436.344 551.926 436.324 551.871 436.316 551.805 cv
436.301 551.742 436.297 551.672 436.301 551.59 cv
436.297 551.465 436.305 551.359 436.328 551.281 cv
436.344 551.207 436.391 551.137 436.461 551.066 cv
436.531 551 436.652 550.922 436.824 550.832 cv
436.996 550.742 437.191 550.66 437.414 550.582 cv
437.637 550.512 437.883 550.449 438.148 550.395 cv
438.414 550.348 438.68 550.32 438.953 550.32 cv
439.453 550.32 439.883 550.379 440.234 550.492 cv
440.586 550.609 440.871 550.777 441.094 550.996 cv
441.309 551.219 441.469 551.492 441.57 551.816 cv
441.668 552.148 441.715 552.531 441.719 552.961 cv
cp
440.441 554.488 mo
439.34 554.488 li
438.984 554.492 438.68 554.523 438.422 554.578 cv
438.16 554.641 437.945 554.727 437.773 554.844 cv
437.602 554.961 437.477 555.102 437.398 555.266 cv
437.316 555.43 437.273 555.617 437.277 555.828 cv
437.273 556.195 437.391 556.488 437.621 556.699 cv
437.852 556.918 438.176 557.023 438.594 557.023 cv
438.93 557.023 439.242 556.937 439.531 556.766 cv
439.82 556.594 440.121 556.332 440.441 555.977 cv
cp
f
449.938 550.988 mo
449.934 551.172 449.91 551.305 449.863 551.383 cv
449.813 551.465 449.75 551.504 449.676 551.504 cv
448.668 551.504 li
448.848 551.691 448.977 551.898 449.051 552.125 cv
449.121 552.352 449.156 552.586 449.16 552.828 cv
449.156 553.234 449.09 553.594 448.965 553.906 cv
448.832 554.219 448.648 554.484 448.406 554.695 cv
448.164 554.914 447.875 555.078 447.547 555.191 cv
447.211 555.309 446.844 555.367 446.441 555.363 cv
446.152 555.367 445.879 555.328 445.625 555.25 cv
445.363 555.176 445.168 555.082 445.031 554.965 cv
444.938 555.062 444.859 555.168 444.801 555.285 cv
444.738 555.406 444.707 555.543 444.711 555.695 cv
444.707 555.879 444.793 556.031 444.965 556.148 cv
445.133 556.273 445.355 556.336 445.637 556.344 cv
447.469 556.422 li
447.816 556.434 448.133 556.48 448.426 556.566 cv
448.715 556.652 448.969 556.777 449.184 556.934 cv
449.395 557.094 449.563 557.285 449.684 557.516 cv
449.801 557.75 449.859 558.02 449.863 558.324 cv
449.859 558.645 449.793 558.949 449.66 559.242 cv
449.523 559.531 449.316 559.785 449.039 560.008 cv
448.758 560.227 448.402 560.402 447.973 560.531 cv
447.543 560.656 447.035 560.719 446.449 560.723 cv
445.879 560.719 445.395 560.672 445 560.578 cv
444.602 560.48 444.277 560.348 444.023 560.184 cv
443.77 560.016 443.586 559.82 443.473 559.59 cv
443.355 559.355 443.297 559.102 443.301 558.836 cv
443.297 558.664 443.316 558.5 443.363 558.34 cv
443.402 558.176 443.465 558.023 443.551 557.879 cv
443.633 557.734 443.742 557.598 443.871 557.461 cv
443.996 557.332 444.141 557.199 444.313 557.07 cv
444.055 556.941 443.867 556.777 443.746 556.578 cv
443.625 556.383 443.566 556.172 443.566 555.937 cv
443.566 555.625 443.629 555.34 443.758 555.09 cv
443.887 554.84 444.047 554.617 444.242 554.418 cv
444.078 554.227 443.953 554.012 443.859 553.77 cv
443.766 553.531 443.719 553.238 443.719 552.891 cv
443.719 552.496 443.785 552.137 443.922 551.816 cv
444.055 551.5 444.242 551.234 444.484 551.016 cv
444.723 550.801 445.008 550.633 445.344 550.512 cv
445.676 550.398 446.043 550.34 446.441 550.336 cv
446.652 550.34 446.852 550.352 447.035 550.371 cv
447.219 550.398 447.391 550.43 447.555 550.469 cv
449.676 550.469 li
449.762 550.473 449.828 550.516 449.871 550.598 cv
449.914 550.687 449.934 550.816 449.938 550.988 cv
cp
447.93 552.836 mo
447.926 552.363 447.793 551.992 447.535 551.719 cv
447.27 551.453 446.898 551.316 446.418 551.316 cv
446.164 551.316 445.945 551.359 445.766 551.441 cv
445.578 551.527 445.426 551.641 445.305 551.785 cv
445.184 551.934 445.094 552.102 445.035 552.289 cv
444.973 552.477 444.941 552.676 444.945 552.883 cv
444.941 553.348 445.074 553.711 445.336 553.977 cv
445.598 554.242 445.965 554.375 446.441 554.371 cv
446.691 554.375 446.91 554.336 447.102 554.25 cv
447.285 554.172 447.441 554.059 447.566 553.918 cv
447.688 553.777 447.777 553.613 447.84 553.422 cv
447.895 553.238 447.926 553.043 447.93 552.836 cv
cp
448.574 558.395 mo
448.57 558.09 448.445 557.859 448.203 557.695 cv
447.953 557.535 447.621 557.445 447.203 557.434 cv
445.387 557.371 li
445.219 557.504 445.082 557.629 444.98 557.742 cv
444.871 557.859 444.789 557.969 444.727 558.078 cv
444.664 558.184 444.621 558.289 444.598 558.395 cv
444.574 558.496 444.563 558.602 444.563 558.711 cv
444.563 559.047 444.73 559.301 445.074 559.48 cv
445.414 559.652 445.895 559.742 446.512 559.742 cv
446.898 559.742 447.223 559.703 447.488 559.629 cv
447.746 559.551 447.957 559.449 448.121 559.328 cv
448.277 559.199 448.395 559.059 448.469 558.898 cv
448.535 558.738 448.57 558.57 448.574 558.395 cv
cp
f
457.5 553.875 mo
457.496 554.078 457.445 554.219 457.348 554.305 cv
457.242 554.391 457.125 554.434 457 554.434 cv
452.383 554.434 li
452.379 554.824 452.418 555.176 452.5 555.488 cv
452.574 555.801 452.707 556.07 452.891 556.289 cv
453.07 556.516 453.305 556.687 453.602 556.805 cv
453.891 556.93 454.25 556.988 454.676 556.984 cv
455.008 556.988 455.305 556.961 455.566 556.902 cv
455.828 556.852 456.055 556.789 456.246 556.719 cv
456.434 556.652 456.59 556.594 456.715 556.535 cv
456.836 556.484 456.93 556.457 456.992 556.453 cv
457.027 556.457 457.059 556.465 457.09 556.48 cv
457.117 556.5 457.141 556.527 457.16 556.562 cv
457.172 556.602 457.184 556.652 457.195 556.715 cv
457.199 556.781 457.203 556.859 457.207 556.953 cv
457.203 557.023 457.199 557.082 457.199 557.129 cv
457.191 557.176 457.188 557.219 457.18 557.258 cv
457.172 557.297 457.156 557.332 457.141 557.363 cv
457.117 557.395 457.094 557.426 457.07 557.453 cv
457.039 557.484 456.957 557.531 456.816 557.594 cv
456.676 557.66 456.492 557.723 456.27 557.785 cv
456.043 557.848 455.785 557.902 455.492 557.953 cv
455.199 558 454.887 558.023 454.555 558.027 cv
453.977 558.023 453.469 557.945 453.039 557.785 cv
452.602 557.625 452.238 557.387 451.945 557.07 cv
451.645 556.754 451.422 556.359 451.273 555.879 cv
451.125 555.402 451.051 554.844 451.051 554.207 cv
451.051 553.609 451.125 553.07 451.281 552.586 cv
451.434 552.109 451.66 551.699 451.957 551.363 cv
452.25 551.027 452.605 550.77 453.02 550.59 cv
453.434 550.41 453.898 550.32 454.414 550.32 cv
454.965 550.32 455.434 550.41 455.82 550.586 cv
456.207 550.766 456.523 551.004 456.777 551.301 cv
457.023 551.602 457.207 551.953 457.324 552.352 cv
457.438 552.758 457.496 553.187 457.5 553.641 cv
cp
456.207 553.492 mo
456.223 552.816 456.07 552.285 455.754 551.902 cv
455.438 551.52 454.969 551.328 454.352 551.324 cv
454.027 551.328 453.746 551.387 453.508 551.504 cv
453.266 551.625 453.066 551.785 452.906 551.98 cv
452.742 552.18 452.617 552.41 452.531 552.672 cv
452.441 552.934 452.391 553.207 452.383 553.492 cv
cp
f
463.867 555.773 mo
463.863 556.137 463.797 556.457 463.668 556.734 cv
463.535 557.016 463.348 557.25 463.105 557.441 cv
462.859 557.637 462.566 557.781 462.23 557.879 cv
461.891 557.977 461.52 558.023 461.117 558.027 cv
460.863 558.023 460.625 558.004 460.402 557.969 cv
460.176 557.926 459.977 557.879 459.797 557.82 cv
459.617 557.762 459.465 557.699 459.34 557.633 cv
459.215 557.57 459.121 557.512 459.066 557.457 cv
459.008 557.406 458.969 557.336 458.945 557.238 cv
458.918 557.148 458.906 557.02 458.906 556.859 cv
458.906 556.762 458.91 556.68 458.922 556.609 cv
458.93 556.543 458.941 556.488 458.961 556.445 cv
458.973 556.406 458.996 556.375 459.023 556.355 cv
459.051 556.34 459.082 556.332 459.121 556.328 cv
459.176 556.332 459.262 556.367 459.375 556.434 cv
459.484 556.508 459.621 556.586 459.789 556.664 cv
459.949 556.75 460.141 556.824 460.367 556.895 cv
460.586 556.965 460.844 557 461.141 557 cv
461.355 557 461.555 556.977 461.734 556.93 cv
461.91 556.883 462.063 556.816 462.191 556.723 cv
462.32 556.637 462.422 556.52 462.492 556.375 cv
462.563 556.238 462.598 556.07 462.598 555.875 cv
462.598 555.68 462.547 555.516 462.445 555.379 cv
462.344 555.246 462.207 555.125 462.043 555.02 cv
461.875 554.918 461.691 554.828 461.484 554.742 cv
461.273 554.664 461.059 554.578 460.84 554.488 cv
460.621 554.402 460.406 554.301 460.195 554.187 cv
459.984 554.078 459.793 553.945 459.629 553.781 cv
459.457 553.625 459.324 553.43 459.227 553.203 cv
459.121 552.98 459.07 552.715 459.074 552.402 cv
459.07 552.129 459.125 551.863 459.234 551.609 cv
459.34 551.359 459.5 551.141 459.715 550.949 cv
459.926 550.762 460.191 550.609 460.512 550.492 cv
460.832 550.379 461.203 550.32 461.633 550.32 cv
461.816 550.32 462.004 550.336 462.191 550.367 cv
462.375 550.398 462.543 550.437 462.699 550.484 cv
462.848 550.531 462.977 550.582 463.086 550.637 cv
463.188 550.691 463.27 550.742 463.328 550.781 cv
463.379 550.828 463.414 550.863 463.438 550.891 cv
463.453 550.922 463.469 550.957 463.477 550.992 cv
463.484 551.035 463.492 551.082 463.5 551.137 cv
463.508 551.195 463.512 551.266 463.512 551.348 cv
463.512 551.437 463.508 551.516 463.5 551.578 cv
463.492 551.648 463.477 551.699 463.461 551.738 cv
463.438 551.781 463.418 551.812 463.395 551.828 cv
463.367 551.848 463.336 551.855 463.309 551.855 cv
463.258 551.855 463.191 551.828 463.105 551.77 cv
463.016 551.715 462.902 551.652 462.762 551.586 cv
462.621 551.523 462.453 551.465 462.266 551.402 cv
462.074 551.348 461.859 551.316 461.617 551.316 cv
461.395 551.316 461.203 551.344 461.039 551.391 cv
460.871 551.445 460.734 551.516 460.629 551.602 cv
460.523 551.695 460.441 551.801 460.391 551.926 cv
460.332 552.051 460.305 552.187 460.309 552.332 cv
460.305 552.535 460.355 552.703 460.461 552.84 cv
460.563 552.98 460.699 553.102 460.867 553.203 cv
461.031 553.309 461.223 553.402 461.438 553.484 cv
461.648 553.57 461.863 553.656 462.086 553.742 cv
462.305 553.832 462.523 553.934 462.742 554.039 cv
462.957 554.148 463.148 554.277 463.316 554.434 cv
463.48 554.59 463.613 554.777 463.715 554.996 cv
463.813 555.215 463.863 555.477 463.867 555.773 cv
cp
f
260.293 18.398 mo
260.289 18.551 260.285 18.676 260.273 18.773 cv
260.258 18.879 260.238 18.961 260.215 19.02 cv
260.191 19.086 260.16 19.133 260.121 19.156 cv
260.082 19.187 260.039 19.199 259.992 19.199 cv
254.926 19.199 li
254.75 19.199 254.605 19.148 254.492 19.047 cv
254.371 18.945 254.313 18.781 254.316 18.551 cv
254.316 9.76202 li
254.313 9.53497 254.371 9.37097 254.492 9.26599 cv
254.605 9.16803 254.75 9.117 254.926 9.11298 cv
259.961 9.11298 li
260.004 9.117 260.047 9.12903 260.086 9.15198 cv
260.121 9.17999 260.152 9.22699 260.18 9.289 cv
260.203 9.35901 260.219 9.44098 260.234 9.539 cv
260.242 9.64502 260.25 9.77301 260.254 9.92603 cv
260.25 10.074 260.242 10.199 260.234 10.297 cv
260.219 10.402 260.203 10.484 260.18 10.543 cv
260.152 10.605 260.121 10.648 260.086 10.676 cv
260.047 10.707 260.004 10.723 259.961 10.719 cv
256.359 10.719 li
256.359 13.184 li
259.406 13.184 li
259.453 13.187 259.496 13.203 259.535 13.227 cv
259.574 13.258 259.605 13.301 259.633 13.359 cv
259.656 13.422 259.676 13.504 259.691 13.602 cv
259.703 13.703 259.711 13.824 259.711 13.969 cv
259.711 14.121 259.703 14.246 259.691 14.344 cv
259.676 14.445 259.656 14.523 259.633 14.582 cv
259.605 14.645 259.574 14.687 259.535 14.711 cv
259.496 14.738 259.453 14.754 259.406 14.75 cv
256.359 14.75 li
256.359 17.594 li
259.992 17.594 li
260.039 17.594 260.082 17.609 260.121 17.637 cv
260.16 17.668 260.191 17.715 260.215 17.773 cv
260.238 17.84 260.258 17.922 260.273 18.02 cv
260.285 18.125 260.289 18.25 260.293 18.398 cv
cp
f
268.629 18.934 mo
268.625 18.988 268.609 19.031 268.582 19.07 cv
268.547 19.109 268.496 19.145 268.426 19.168 cv
268.352 19.195 268.25 19.211 268.125 19.227 cv
267.996 19.238 267.84 19.246 267.656 19.246 cv
267.461 19.246 267.301 19.238 267.176 19.227 cv
267.047 19.211 266.945 19.195 266.875 19.168 cv
266.797 19.145 266.746 19.109 266.719 19.07 cv
266.684 19.031 266.668 18.988 266.672 18.934 cv
266.672 14.969 li
266.668 14.633 266.645 14.367 266.598 14.172 cv
266.547 13.98 266.473 13.816 266.383 13.68 cv
266.289 13.543 266.172 13.437 266.023 13.359 cv
265.875 13.285 265.699 13.246 265.504 13.246 cv
265.25 13.246 265 13.34 264.746 13.52 cv
264.492 13.703 264.227 13.965 263.953 14.312 cv
263.953 18.934 li
263.949 18.988 263.934 19.031 263.906 19.07 cv
263.871 19.109 263.816 19.145 263.746 19.168 cv
263.668 19.195 263.57 19.211 263.445 19.227 cv
263.32 19.238 263.16 19.246 262.973 19.246 cv
262.777 19.246 262.621 19.238 262.496 19.227 cv
262.371 19.211 262.27 19.195 262.195 19.168 cv
262.117 19.145 262.063 19.109 262.035 19.07 cv
262 19.031 261.984 18.988 261.988 18.934 cv
261.988 11.984 li
261.984 11.937 262 11.891 262.027 11.848 cv
262.051 11.812 262.098 11.781 262.168 11.75 cv
262.234 11.727 262.32 11.707 262.43 11.691 cv
262.535 11.684 262.668 11.676 262.832 11.672 cv
262.996 11.676 263.133 11.684 263.242 11.691 cv
263.348 11.707 263.434 11.727 263.496 11.75 cv
263.555 11.781 263.598 11.812 263.625 11.848 cv
263.648 11.891 263.66 11.937 263.664 11.984 cv
263.664 12.785 li
264.047 12.375 264.438 12.062 264.836 11.852 cv
265.23 11.645 265.648 11.543 266.082 11.539 cv
266.551 11.543 266.949 11.621 267.277 11.773 cv
267.602 11.934 267.863 12.145 268.063 12.41 cv
268.262 12.68 268.406 12.992 268.496 13.348 cv
268.582 13.707 268.625 14.137 268.629 14.641 cv
cp
f
276.98 15.258 mo
276.977 15.496 276.926 15.672 276.82 15.785 cv
276.711 15.902 276.563 15.961 276.383 15.957 cv
272.148 15.957 li
272.145 16.258 272.18 16.527 272.254 16.766 cv
272.32 17.008 272.434 17.211 272.59 17.379 cv
272.742 17.551 272.938 17.68 273.18 17.766 cv
273.418 17.855 273.707 17.898 274.051 17.898 cv
274.391 17.898 274.691 17.875 274.953 17.824 cv
275.211 17.777 275.438 17.723 275.629 17.66 cv
275.816 17.602 275.973 17.547 276.102 17.496 cv
276.223 17.449 276.324 17.426 276.406 17.422 cv
276.449 17.426 276.488 17.434 276.523 17.449 cv
276.551 17.469 276.578 17.5 276.598 17.547 cv
276.617 17.594 276.629 17.66 276.641 17.746 cv
276.645 17.832 276.648 17.941 276.652 18.07 cv
276.648 18.187 276.648 18.285 276.645 18.363 cv
276.637 18.445 276.629 18.512 276.621 18.566 cv
276.609 18.625 276.594 18.676 276.574 18.711 cv
276.555 18.754 276.527 18.789 276.496 18.824 cv
276.461 18.863 276.367 18.914 276.219 18.973 cv
276.063 19.039 275.871 19.102 275.641 19.156 cv
275.402 19.219 275.133 19.266 274.836 19.312 cv
274.531 19.352 274.211 19.375 273.871 19.379 cv
273.25 19.375 272.707 19.301 272.246 19.145 cv
271.777 18.992 271.391 18.754 271.082 18.437 cv
270.766 18.121 270.531 17.723 270.383 17.238 cv
270.227 16.758 270.152 16.191 270.156 15.535 cv
270.152 14.922 270.23 14.363 270.395 13.867 cv
270.551 13.371 270.785 12.953 271.098 12.605 cv
271.402 12.262 271.777 11.996 272.215 11.812 cv
272.652 11.633 273.145 11.543 273.699 11.539 cv
274.277 11.543 274.777 11.629 275.191 11.797 cv
275.605 11.973 275.941 12.211 276.207 12.512 cv
276.469 12.816 276.664 13.176 276.793 13.59 cv
276.914 14.008 276.977 14.457 276.98 14.945 cv
cp
275.078 14.695 mo
275.09 14.145 274.98 13.711 274.746 13.398 cv
274.512 13.086 274.145 12.93 273.652 12.926 cv
273.402 12.93 273.188 12.977 273.004 13.066 cv
272.816 13.164 272.664 13.289 272.543 13.445 cv
272.418 13.605 272.324 13.793 272.262 14.008 cv
272.195 14.223 272.156 14.453 272.148 14.695 cv
cp
f
283.055 12.629 mo
283.055 12.82 283.047 12.973 283.039 13.09 cv
283.023 13.211 283.008 13.305 282.992 13.371 cv
282.969 13.441 282.941 13.488 282.91 13.512 cv
282.871 13.539 282.828 13.551 282.781 13.551 cv
282.734 13.551 282.688 13.543 282.641 13.523 cv
282.586 13.508 282.527 13.488 282.465 13.465 cv
282.395 13.445 282.324 13.426 282.25 13.406 cv
282.168 13.391 282.082 13.383 281.992 13.379 cv
281.879 13.383 281.77 13.402 281.664 13.445 cv
281.555 13.492 281.441 13.562 281.328 13.652 cv
281.207 13.746 281.086 13.871 280.961 14.023 cv
280.832 14.184 280.695 14.375 280.551 14.602 cv
280.551 18.934 li
280.547 18.988 280.531 19.031 280.504 19.07 cv
280.469 19.109 280.414 19.145 280.344 19.168 cv
280.266 19.195 280.168 19.211 280.043 19.227 cv
279.918 19.238 279.758 19.246 279.57 19.246 cv
279.375 19.246 279.219 19.238 279.094 19.227 cv
278.969 19.211 278.867 19.195 278.793 19.168 cv
278.715 19.145 278.66 19.109 278.633 19.07 cv
278.598 19.031 278.582 18.988 278.586 18.934 cv
278.586 11.984 li
278.582 11.937 278.598 11.891 278.625 11.848 cv
278.648 11.812 278.695 11.781 278.766 11.75 cv
278.832 11.727 278.918 11.707 279.027 11.691 cv
279.133 11.684 279.266 11.676 279.43 11.672 cv
279.594 11.676 279.73 11.684 279.84 11.691 cv
279.945 11.707 280.031 11.727 280.094 11.75 cv
280.152 11.781 280.195 11.812 280.223 11.848 cv
280.246 11.891 280.258 11.937 280.262 11.984 cv
280.262 12.848 li
280.441 12.59 280.613 12.379 280.777 12.207 cv
280.934 12.043 281.09 11.906 281.238 11.805 cv
281.383 11.707 281.527 11.641 281.672 11.598 cv
281.816 11.562 281.961 11.543 282.109 11.539 cv
282.176 11.543 282.25 11.547 282.328 11.551 cv
282.406 11.562 282.484 11.574 282.57 11.59 cv
282.648 11.609 282.723 11.629 282.789 11.652 cv
282.848 11.676 282.895 11.703 282.926 11.727 cv
282.953 11.758 282.973 11.785 282.988 11.812 cv
283 11.848 283.012 11.891 283.023 11.941 cv
283.031 12 283.039 12.082 283.047 12.187 cv
283.051 12.297 283.055 12.445 283.055 12.629 cv
cp
f
290.23 12.465 mo
290.227 12.719 290.199 12.902 290.145 13.02 cv
290.086 13.141 290.016 13.199 289.938 13.199 cv
289.117 13.199 li
289.23 13.324 289.313 13.469 289.363 13.625 cv
289.41 13.785 289.434 13.949 289.438 14.117 cv
289.434 14.527 289.367 14.887 289.234 15.199 cv
289.098 15.516 288.902 15.781 288.652 15.992 cv
288.398 16.211 288.098 16.375 287.742 16.484 cv
287.383 16.602 286.984 16.656 286.555 16.652 cv
286.328 16.656 286.117 16.629 285.914 16.57 cv
285.711 16.52 285.555 16.457 285.445 16.379 cv
285.383 16.449 285.324 16.527 285.277 16.621 cv
285.227 16.715 285.203 16.82 285.207 16.93 cv
285.203 17.086 285.27 17.207 285.402 17.301 cv
285.531 17.398 285.719 17.453 285.961 17.461 cv
287.652 17.523 li
288.047 17.539 288.398 17.598 288.707 17.691 cv
289.016 17.793 289.277 17.926 289.488 18.098 cv
289.699 18.273 289.859 18.484 289.969 18.727 cv
290.078 18.973 290.133 19.246 290.137 19.559 cv
290.133 19.895 290.059 20.219 289.91 20.527 cv
289.762 20.828 289.535 21.09 289.234 21.316 cv
288.93 21.535 288.551 21.715 288.098 21.848 cv
287.641 21.977 287.109 22.039 286.508 22.043 cv
285.91 22.039 285.406 21.992 284.988 21.902 cv
284.57 21.805 284.227 21.676 283.961 21.512 cv
283.691 21.344 283.496 21.145 283.379 20.918 cv
283.254 20.684 283.195 20.43 283.195 20.156 cv
283.195 19.984 283.215 19.824 283.262 19.668 cv
283.301 19.512 283.367 19.359 283.457 19.219 cv
283.539 19.074 283.645 18.941 283.77 18.809 cv
283.895 18.68 284.035 18.555 284.199 18.434 cv
283.973 18.32 283.801 18.16 283.68 17.949 cv
283.559 17.746 283.5 17.52 283.5 17.273 cv
283.5 16.973 283.566 16.695 283.707 16.437 cv
283.844 16.187 284.027 15.957 284.254 15.754 cv
284.07 15.574 283.926 15.359 283.816 15.102 cv
283.707 14.852 283.652 14.531 283.656 14.148 cv
283.652 13.746 283.723 13.387 283.867 13.062 cv
284.008 12.746 284.207 12.477 284.465 12.254 cv
284.719 12.035 285.023 11.863 285.375 11.746 cv
285.727 11.629 286.117 11.57 286.547 11.57 cv
286.766 11.57 286.973 11.586 287.172 11.609 cv
287.371 11.641 287.559 11.676 287.73 11.719 cv
289.938 11.719 li
290.02 11.723 290.09 11.781 290.148 11.891 cv
290.199 12.008 290.227 12.199 290.23 12.465 cv
cp
287.715 14.109 mo
287.711 13.738 287.609 13.449 287.402 13.238 cv
287.191 13.035 286.898 12.93 286.523 12.926 cv
286.328 12.93 286.156 12.961 286.016 13.023 cv
285.867 13.09 285.746 13.18 285.652 13.289 cv
285.551 13.402 285.48 13.531 285.438 13.68 cv
285.387 13.828 285.363 13.984 285.367 14.141 cv
285.363 14.5 285.469 14.777 285.68 14.98 cv
285.887 15.187 286.176 15.293 286.547 15.289 cv
286.742 15.293 286.91 15.262 287.059 15.195 cv
287.199 15.137 287.32 15.051 287.422 14.937 cv
287.516 14.832 287.59 14.703 287.641 14.559 cv
287.688 14.418 287.711 14.27 287.715 14.109 cv
cp
288.176 19.66 mo
288.176 19.422 288.082 19.246 287.895 19.121 cv
287.707 19 287.449 18.93 287.121 18.918 cv
285.727 18.879 li
285.59 18.98 285.48 19.074 285.402 19.164 cv
285.32 19.254 285.258 19.34 285.211 19.426 cv
285.16 19.508 285.125 19.59 285.113 19.668 cv
285.094 19.746 285.086 19.824 285.09 19.91 cv
285.086 20.164 285.219 20.363 285.48 20.5 cv
285.742 20.633 286.113 20.699 286.594 20.703 cv
286.887 20.699 287.133 20.668 287.34 20.613 cv
287.539 20.551 287.703 20.473 287.832 20.375 cv
287.953 20.273 288.043 20.164 288.098 20.043 cv
288.148 19.922 288.176 19.793 288.176 19.66 cv
cp
f
295.563 19.199 mo
294.719 21.66 li
294.668 21.789 294.543 21.883 294.336 21.941 cv
294.129 21.996 293.824 22.023 293.426 22.027 cv
293.215 22.023 293.047 22.016 292.926 22 cv
292.801 21.98 292.711 21.949 292.648 21.91 cv
292.586 21.867 292.551 21.816 292.547 21.754 cv
292.539 21.691 292.555 21.617 292.594 21.531 cv
293.52 19.199 li
293.449 19.168 293.387 19.121 293.336 19.055 cv
293.277 18.992 293.238 18.922 293.215 18.848 cv
290.824 12.457 li
290.754 12.277 290.719 12.141 290.723 12.043 cv
290.719 11.949 290.75 11.871 290.816 11.816 cv
290.875 11.762 290.98 11.727 291.129 11.703 cv
291.273 11.687 291.469 11.676 291.719 11.672 cv
291.938 11.676 292.117 11.68 292.25 11.684 cv
292.379 11.695 292.48 11.715 292.555 11.742 cv
292.625 11.777 292.68 11.824 292.719 11.887 cv
292.754 11.953 292.789 12.047 292.828 12.164 cv
294.461 16.816 li
294.484 16.816 li
295.984 12.07 li
296.008 11.937 296.047 11.848 296.102 11.801 cv
296.148 11.758 296.23 11.727 296.348 11.703 cv
296.457 11.687 296.66 11.676 296.949 11.672 cv
297.172 11.676 297.355 11.687 297.504 11.703 cv
297.648 11.727 297.758 11.766 297.832 11.82 cv
297.898 11.883 297.934 11.957 297.938 12.051 cv
297.934 12.145 297.914 12.258 297.875 12.387 cv
cp
f
310.004 17.672 mo
310.004 17.805 310 17.914 309.992 18.004 cv
309.984 18.098 309.973 18.176 309.957 18.238 cv
309.941 18.305 309.918 18.363 309.895 18.406 cv
309.863 18.453 309.824 18.504 309.77 18.562 cv
309.711 18.625 309.598 18.703 309.438 18.793 cv
309.27 18.891 309.07 18.98 308.836 19.062 cv
308.598 19.152 308.328 19.219 308.027 19.277 cv
307.719 19.332 307.391 19.363 307.043 19.363 cv
306.348 19.363 305.723 19.258 305.168 19.043 cv
304.609 18.832 304.137 18.516 303.75 18.09 cv
303.359 17.668 303.063 17.137 302.855 16.504 cv
302.648 15.871 302.543 15.133 302.547 14.289 cv
302.543 13.434 302.656 12.676 302.887 12.008 cv
303.113 11.344 303.434 10.785 303.844 10.332 cv
304.254 9.883 304.746 9.539 305.32 9.30499 cv
305.895 9.07397 306.527 8.95697 307.223 8.953 cv
307.496 8.95697 307.766 8.97998 308.031 9.02301 cv
308.289 9.07001 308.531 9.12903 308.75 9.203 cv
308.969 9.28101 309.168 9.37097 309.348 9.46503 cv
309.523 9.56598 309.645 9.64801 309.719 9.71899 cv
309.785 9.789 309.836 9.84802 309.863 9.89502 cv
309.887 9.94098 309.906 10.004 309.926 10.074 cv
309.938 10.152 309.949 10.238 309.961 10.332 cv
309.965 10.434 309.969 10.555 309.973 10.695 cv
309.969 10.855 309.965 10.988 309.957 11.094 cv
309.945 11.207 309.926 11.293 309.902 11.359 cv
309.875 11.43 309.844 11.48 309.809 11.508 cv
309.77 11.543 309.727 11.559 309.684 11.555 cv
309.602 11.559 309.504 11.512 309.387 11.418 cv
309.266 11.328 309.109 11.227 308.922 11.113 cv
308.73 11.004 308.508 10.902 308.246 10.809 cv
307.98 10.719 307.668 10.676 307.309 10.672 cv
306.906 10.676 306.547 10.758 306.234 10.918 cv
305.918 11.086 305.652 11.32 305.434 11.621 cv
305.211 11.93 305.043 12.297 304.93 12.727 cv
304.813 13.16 304.754 13.645 304.758 14.18 cv
304.754 14.777 304.816 15.293 304.941 15.723 cv
305.063 16.16 305.234 16.516 305.465 16.793 cv
305.688 17.074 305.961 17.281 306.281 17.418 cv
306.598 17.559 306.957 17.629 307.363 17.625 cv
307.723 17.629 308.039 17.586 308.305 17.496 cv
308.57 17.414 308.797 17.32 308.984 17.211 cv
309.172 17.109 309.328 17.016 309.453 16.934 cv
309.574 16.852 309.668 16.809 309.738 16.809 cv
309.789 16.809 309.832 16.82 309.863 16.84 cv
309.895 16.859 309.918 16.898 309.941 16.961 cv
309.957 17.023 309.973 17.113 309.988 17.223 cv
309.996 17.34 310.004 17.488 310.004 17.672 cv
cp
f
318.383 15.387 mo
318.379 15.984 318.301 16.527 318.148 17.012 cv
317.988 17.504 317.754 17.922 317.438 18.273 cv
317.121 18.625 316.723 18.898 316.246 19.09 cv
315.766 19.281 315.207 19.375 314.57 19.379 cv
313.949 19.375 313.41 19.293 312.957 19.121 cv
312.496 18.953 312.117 18.703 311.82 18.375 cv
311.516 18.051 311.293 17.648 311.148 17.168 cv
311.004 16.691 310.934 16.145 310.934 15.527 cv
310.934 14.937 311.012 14.398 311.168 13.906 cv
311.324 13.418 311.563 12.996 311.883 12.645 cv
312.199 12.297 312.594 12.023 313.07 11.828 cv
313.543 11.637 314.102 11.543 314.742 11.539 cv
315.367 11.543 315.906 11.625 316.363 11.793 cv
316.82 11.965 317.199 12.215 317.496 12.539 cv
317.793 12.867 318.016 13.27 318.164 13.746 cv
318.309 14.227 318.379 14.773 318.383 15.387 cv
cp
316.363 15.465 mo
316.359 15.129 316.332 14.812 316.281 14.52 cv
316.223 14.234 316.129 13.984 316.004 13.77 cv
315.871 13.559 315.699 13.391 315.488 13.27 cv
315.27 13.152 315 13.094 314.672 13.09 cv
314.383 13.094 314.129 13.148 313.91 13.25 cv
313.691 13.359 313.512 13.516 313.371 13.719 cv
313.23 13.926 313.125 14.172 313.055 14.457 cv
312.984 14.75 312.949 15.078 312.949 15.441 cv
312.949 15.789 312.977 16.105 313.035 16.391 cv
313.09 16.684 313.184 16.934 313.313 17.145 cv
313.438 17.359 313.609 17.523 313.832 17.637 cv
314.047 17.758 314.316 17.816 314.641 17.812 cv
314.934 17.816 315.191 17.762 315.414 17.652 cv
315.629 17.547 315.809 17.395 315.949 17.187 cv
316.09 16.988 316.191 16.742 316.262 16.453 cv
316.324 16.168 316.359 15.84 316.363 15.465 cv
cp
f
326.582 18.934 mo
326.578 18.988 326.563 19.031 326.535 19.07 cv
326.5 19.109 326.449 19.145 326.379 19.168 cv
326.305 19.195 326.203 19.211 326.078 19.227 cv
325.949 19.238 325.793 19.246 325.609 19.246 cv
325.414 19.246 325.254 19.238 325.129 19.227 cv
325 19.211 324.898 19.195 324.828 19.168 cv
324.75 19.145 324.699 19.109 324.672 19.07 cv
324.637 19.031 324.621 18.988 324.625 18.934 cv
324.625 14.969 li
324.621 14.633 324.598 14.367 324.551 14.172 cv
324.5 13.98 324.426 13.816 324.336 13.68 cv
324.242 13.543 324.125 13.437 323.977 13.359 cv
323.828 13.285 323.652 13.246 323.457 13.246 cv
323.203 13.246 322.953 13.34 322.699 13.52 cv
322.445 13.703 322.18 13.965 321.906 14.312 cv
321.906 18.934 li
321.902 18.988 321.887 19.031 321.859 19.07 cv
321.824 19.109 321.77 19.145 321.699 19.168 cv
321.621 19.195 321.523 19.211 321.398 19.227 cv
321.273 19.238 321.113 19.246 320.926 19.246 cv
320.73 19.246 320.574 19.238 320.449 19.227 cv
320.324 19.211 320.223 19.195 320.148 19.168 cv
320.07 19.145 320.016 19.109 319.988 19.07 cv
319.953 19.031 319.938 18.988 319.941 18.934 cv
319.941 11.984 li
319.938 11.937 319.953 11.891 319.98 11.848 cv
320.004 11.812 320.051 11.781 320.121 11.75 cv
320.188 11.727 320.273 11.707 320.383 11.691 cv
320.488 11.684 320.621 11.676 320.785 11.672 cv
320.949 11.676 321.086 11.684 321.195 11.691 cv
321.301 11.707 321.387 11.727 321.449 11.75 cv
321.508 11.781 321.551 11.812 321.578 11.848 cv
321.602 11.891 321.613 11.937 321.617 11.984 cv
321.617 12.785 li
322 12.375 322.391 12.062 322.789 11.852 cv
323.184 11.645 323.602 11.543 324.035 11.539 cv
324.504 11.543 324.902 11.621 325.23 11.773 cv
325.555 11.934 325.816 12.145 326.016 12.41 cv
326.215 12.68 326.359 12.992 326.449 13.348 cv
326.535 13.707 326.578 14.137 326.582 14.641 cv
cp
f
333.406 16.969 mo
333.402 17.367 333.328 17.715 333.184 18.016 cv
333.035 18.316 332.828 18.57 332.559 18.77 cv
332.285 18.977 331.965 19.125 331.598 19.227 cv
331.23 19.324 330.828 19.375 330.398 19.379 cv
330.133 19.375 329.887 19.355 329.652 19.32 cv
329.418 19.277 329.207 19.23 329.02 19.172 cv
328.832 19.113 328.676 19.051 328.551 18.988 cv
328.426 18.926 328.332 18.867 328.277 18.812 cv
328.219 18.758 328.176 18.676 328.148 18.559 cv
328.113 18.445 328.098 18.27 328.102 18.039 cv
328.098 17.891 328.105 17.77 328.117 17.676 cv
328.125 17.586 328.141 17.516 328.164 17.457 cv
328.184 17.406 328.207 17.367 328.242 17.348 cv
328.27 17.332 328.309 17.324 328.355 17.32 cv
328.41 17.324 328.496 17.355 328.609 17.418 cv
328.719 17.484 328.855 17.559 329.027 17.633 cv
329.191 17.715 329.387 17.785 329.605 17.852 cv
329.824 17.922 330.074 17.957 330.359 17.953 cv
330.535 17.957 330.691 17.937 330.832 17.898 cv
330.965 17.863 331.086 17.812 331.191 17.742 cv
331.289 17.676 331.363 17.59 331.418 17.484 cv
331.465 17.383 331.492 17.262 331.496 17.125 cv
331.492 16.969 331.445 16.836 331.352 16.727 cv
331.258 16.617 331.129 16.52 330.973 16.434 cv
330.809 16.352 330.629 16.273 330.434 16.199 cv
330.23 16.129 330.027 16.051 329.816 15.957 cv
329.605 15.871 329.398 15.77 329.203 15.652 cv
329 15.543 328.82 15.402 328.664 15.234 cv
328.5 15.07 328.375 14.871 328.281 14.633 cv
328.188 14.402 328.141 14.121 328.141 13.789 cv
328.141 13.461 328.203 13.156 328.332 12.875 cv
328.461 12.602 328.648 12.363 328.895 12.164 cv
329.137 11.969 329.434 11.816 329.785 11.703 cv
330.133 11.598 330.527 11.543 330.969 11.539 cv
331.184 11.543 331.395 11.559 331.602 11.586 cv
331.805 11.621 331.992 11.66 332.16 11.703 cv
332.324 11.754 332.465 11.805 332.582 11.855 cv
332.695 11.914 332.777 11.961 332.828 11.996 cv
332.875 12.039 332.91 12.078 332.934 12.113 cv
332.953 12.156 332.965 12.203 332.977 12.254 cv
332.984 12.309 332.996 12.375 333.004 12.453 cv
333.012 12.539 333.016 12.637 333.016 12.754 cv
333.016 12.895 333.012 13.012 333.004 13.098 cv
332.996 13.191 332.98 13.262 332.965 13.309 cv
332.945 13.363 332.922 13.398 332.895 13.414 cv
332.859 13.437 332.824 13.445 332.785 13.441 cv
332.734 13.445 332.66 13.418 332.566 13.359 cv
332.465 13.309 332.344 13.25 332.195 13.184 cv
332.047 13.125 331.875 13.066 331.68 13.008 cv
331.484 12.957 331.262 12.93 331.016 12.926 cv
330.836 12.93 330.684 12.949 330.555 12.98 cv
330.422 13.02 330.313 13.07 330.234 13.137 cv
330.148 13.207 330.086 13.285 330.047 13.375 cv
330 13.469 329.98 13.566 329.984 13.668 cv
329.98 13.828 330.031 13.965 330.133 14.07 cv
330.23 14.184 330.359 14.277 330.523 14.359 cv
330.684 14.445 330.867 14.523 331.074 14.594 cv
331.277 14.668 331.484 14.75 331.695 14.832 cv
331.902 14.922 332.109 15.02 332.32 15.133 cv
332.523 15.246 332.707 15.387 332.867 15.551 cv
333.027 15.719 333.156 15.918 333.258 16.148 cv
333.352 16.383 333.402 16.656 333.406 16.969 cv
cp
f
341.473 18.934 mo
341.469 18.988 341.457 19.031 341.434 19.07 cv
341.406 19.109 341.359 19.145 341.297 19.168 cv
341.23 19.195 341.145 19.211 341.039 19.227 cv
340.934 19.238 340.801 19.246 340.641 19.246 cv
340.465 19.246 340.324 19.238 340.223 19.227 cv
340.113 19.211 340.031 19.195 339.969 19.168 cv
339.906 19.145 339.859 19.109 339.836 19.07 cv
339.805 19.031 339.793 18.988 339.797 18.934 cv
339.797 18.133 li
339.41 18.547 339.02 18.859 338.625 19.066 cv
338.223 19.273 337.813 19.375 337.391 19.379 cv
336.91 19.375 336.508 19.301 336.184 19.145 cv
335.859 18.992 335.598 18.777 335.398 18.508 cv
335.195 18.238 335.051 17.926 334.969 17.566 cv
334.879 17.211 334.836 16.77 334.84 16.238 cv
334.84 11.984 li
334.836 11.937 334.852 11.891 334.883 11.848 cv
334.91 11.812 334.961 11.781 335.039 11.75 cv
335.113 11.727 335.215 11.707 335.344 11.691 cv
335.469 11.684 335.625 11.676 335.816 11.672 cv
336.004 11.676 336.164 11.684 336.289 11.691 cv
336.414 11.707 336.512 11.727 336.59 11.75 cv
336.66 11.781 336.715 11.812 336.75 11.848 cv
336.777 11.891 336.793 11.937 336.797 11.984 cv
336.797 15.91 li
336.793 16.277 336.816 16.555 336.867 16.746 cv
336.91 16.937 336.98 17.102 337.082 17.238 cv
337.176 17.379 337.301 17.484 337.449 17.559 cv
337.598 17.637 337.77 17.676 337.965 17.672 cv
338.215 17.676 338.465 17.586 338.719 17.398 cv
338.969 17.219 339.238 16.953 339.523 16.605 cv
339.523 11.984 li
339.523 11.937 339.535 11.891 339.566 11.848 cv
339.59 11.812 339.645 11.781 339.723 11.75 cv
339.797 11.727 339.895 11.707 340.023 11.691 cv
340.145 11.684 340.305 11.676 340.5 11.672 cv
340.691 11.676 340.848 11.684 340.973 11.691 cv
341.094 11.707 341.195 11.727 341.27 11.75 cv
341.34 11.781 341.391 11.812 341.426 11.848 cv
341.453 11.891 341.469 11.937 341.473 11.984 cv
cp
f
354.41 18.934 mo
354.406 18.988 354.391 19.031 354.363 19.07 cv
354.328 19.109 354.277 19.145 354.207 19.168 cv
354.133 19.195 354.031 19.211 353.91 19.227 cv
353.785 19.238 353.629 19.246 353.438 19.246 cv
353.238 19.246 353.078 19.238 352.953 19.227 cv
352.828 19.211 352.727 19.195 352.652 19.168 cv
352.574 19.145 352.523 19.109 352.496 19.07 cv
352.469 19.031 352.453 18.988 352.457 18.934 cv
352.457 14.812 li
352.453 14.582 352.434 14.367 352.391 14.172 cv
352.344 13.98 352.273 13.816 352.188 13.68 cv
352.094 13.543 351.98 13.437 351.844 13.359 cv
351.703 13.285 351.539 13.246 351.348 13.246 cv
351.113 13.246 350.875 13.34 350.637 13.52 cv
350.398 13.703 350.141 13.965 349.859 14.312 cv
349.859 18.934 li
349.859 18.988 349.844 19.031 349.813 19.07 cv
349.781 19.109 349.727 19.145 349.652 19.168 cv
349.574 19.195 349.473 19.211 349.352 19.227 cv
349.227 19.238 349.074 19.246 348.887 19.246 cv
348.691 19.246 348.531 19.238 348.41 19.227 cv
348.281 19.211 348.18 19.195 348.109 19.168 cv
348.031 19.145 347.98 19.109 347.949 19.07 cv
347.918 19.031 347.902 18.988 347.902 18.934 cv
347.902 14.812 li
347.902 14.582 347.879 14.367 347.836 14.172 cv
347.793 13.98 347.727 13.816 347.641 13.68 cv
347.547 13.543 347.434 13.437 347.297 13.359 cv
347.152 13.285 346.988 13.246 346.805 13.246 cv
346.563 13.246 346.324 13.34 346.086 13.52 cv
345.848 13.703 345.59 13.965 345.316 14.312 cv
345.316 18.934 li
345.313 18.988 345.297 19.031 345.27 19.07 cv
345.234 19.109 345.18 19.145 345.109 19.168 cv
345.031 19.195 344.934 19.211 344.809 19.227 cv
344.684 19.238 344.523 19.246 344.336 19.246 cv
344.141 19.246 343.984 19.238 343.859 19.227 cv
343.734 19.211 343.633 19.195 343.559 19.168 cv
343.48 19.145 343.426 19.109 343.398 19.07 cv
343.363 19.031 343.348 18.988 343.352 18.934 cv
343.352 11.984 li
343.348 11.937 343.363 11.891 343.391 11.848 cv
343.414 11.812 343.461 11.781 343.531 11.75 cv
343.598 11.727 343.684 11.707 343.793 11.691 cv
343.898 11.684 344.031 11.676 344.195 11.672 cv
344.359 11.676 344.496 11.684 344.605 11.691 cv
344.711 11.707 344.797 11.727 344.859 11.75 cv
344.918 11.781 344.961 11.812 344.988 11.848 cv
345.012 11.891 345.023 11.937 345.027 11.984 cv
345.027 12.785 li
345.41 12.375 345.793 12.062 346.176 11.852 cv
346.555 11.645 346.957 11.543 347.375 11.539 cv
347.66 11.543 347.914 11.57 348.145 11.629 cv
348.371 11.691 348.578 11.777 348.758 11.887 cv
348.938 12 349.09 12.137 349.219 12.289 cv
349.348 12.445 349.457 12.617 349.547 12.809 cv
349.754 12.586 349.957 12.395 350.16 12.234 cv
350.355 12.074 350.555 11.941 350.75 11.84 cv
350.945 11.738 351.141 11.664 351.336 11.613 cv
351.531 11.566 351.73 11.543 351.934 11.539 cv
352.395 11.543 352.781 11.621 353.102 11.773 cv
353.414 11.934 353.672 12.145 353.867 12.41 cv
354.063 12.68 354.199 12.992 354.285 13.348 cv
354.363 13.707 354.406 14.086 354.41 14.484 cv
cp
f
363.328 15.355 mo
363.328 15.977 363.262 16.535 363.129 17.031 cv
362.996 17.527 362.801 17.949 362.547 18.297 cv
362.293 18.645 361.977 18.914 361.598 19.098 cv
361.215 19.285 360.781 19.375 360.297 19.379 cv
360.09 19.375 359.902 19.355 359.738 19.32 cv
359.566 19.277 359.402 19.219 359.246 19.141 cv
359.086 19.062 358.93 18.965 358.777 18.84 cv
358.617 18.723 358.457 18.582 358.293 18.418 cv
358.293 21.691 li
358.289 21.738 358.273 21.785 358.246 21.832 cv
358.211 21.871 358.156 21.906 358.086 21.937 cv
358.008 21.961 357.91 21.984 357.785 22.004 cv
357.66 22.016 357.5 22.023 357.313 22.027 cv
357.117 22.023 356.961 22.016 356.836 22.004 cv
356.711 21.984 356.609 21.961 356.535 21.937 cv
356.457 21.906 356.402 21.871 356.375 21.832 cv
356.34 21.785 356.324 21.738 356.328 21.691 cv
356.328 11.984 li
356.324 11.937 356.34 11.891 356.367 11.848 cv
356.391 11.812 356.434 11.781 356.504 11.75 cv
356.566 11.727 356.652 11.707 356.762 11.691 cv
356.863 11.684 357 11.676 357.164 11.672 cv
357.32 11.676 357.449 11.684 357.555 11.691 cv
357.66 11.707 357.746 11.727 357.813 11.75 cv
357.875 11.781 357.922 11.812 357.949 11.848 cv
357.973 11.891 357.984 11.937 357.988 11.984 cv
357.988 12.801 li
358.188 12.594 358.387 12.414 358.586 12.254 cv
358.777 12.098 358.977 11.965 359.18 11.855 cv
359.383 11.754 359.59 11.672 359.809 11.617 cv
360.02 11.566 360.25 11.543 360.5 11.539 cv
361.004 11.543 361.438 11.641 361.801 11.84 cv
362.156 12.043 362.449 12.32 362.676 12.664 cv
362.898 13.016 363.063 13.418 363.172 13.879 cv
363.273 14.34 363.328 14.832 363.328 15.355 cv
cp
361.285 15.496 mo
361.281 15.203 361.262 14.922 361.219 14.645 cv
361.172 14.375 361.094 14.133 360.992 13.918 cv
360.883 13.707 360.742 13.535 360.57 13.406 cv
360.395 13.281 360.18 13.219 359.922 13.215 cv
359.789 13.219 359.66 13.238 359.535 13.273 cv
359.406 13.316 359.277 13.379 359.145 13.465 cv
359.012 13.555 358.875 13.668 358.738 13.809 cv
358.594 13.949 358.445 14.125 358.293 14.328 cv
358.293 16.621 li
358.566 16.969 358.828 17.238 359.078 17.426 cv
359.324 17.617 359.586 17.711 359.859 17.711 cv
360.113 17.711 360.328 17.648 360.512 17.516 cv
360.688 17.391 360.836 17.219 360.949 17.008 cv
361.063 16.797 361.145 16.559 361.203 16.293 cv
361.254 16.027 361.281 15.762 361.285 15.496 cv
cp
f
368.824 18.25 mo
368.824 18.477 368.809 18.652 368.781 18.773 cv
368.75 18.898 368.711 18.984 368.668 19.031 cv
368.617 19.082 368.551 19.125 368.461 19.164 cv
368.367 19.203 368.258 19.234 368.141 19.266 cv
368.016 19.289 367.883 19.312 367.742 19.332 cv
367.598 19.344 367.457 19.352 367.313 19.355 cv
366.922 19.352 366.582 19.301 366.297 19.207 cv
366.012 19.105 365.777 18.957 365.59 18.75 cv
365.402 18.547 365.262 18.289 365.176 17.977 cv
365.082 17.668 365.039 17.297 365.043 16.867 cv
365.043 13.309 li
364.211 13.309 li
364.109 13.312 364.035 13.25 363.984 13.125 cv
363.93 13.004 363.902 12.801 363.906 12.512 cv
363.902 12.363 363.91 12.234 363.926 12.133 cv
363.938 12.031 363.957 11.949 363.984 11.887 cv
364.008 11.828 364.039 11.785 364.082 11.758 cv
364.117 11.734 364.164 11.723 364.219 11.719 cv
365.043 11.719 li
365.043 10.168 li
365.039 10.121 365.055 10.074 365.086 10.027 cv
365.113 9.98798 365.164 9.953 365.242 9.922 cv
365.316 9.89801 365.418 9.875 365.547 9.85901 cv
365.672 9.84802 365.828 9.84399 366.02 9.84003 cv
366.207 9.84399 366.367 9.84802 366.496 9.85901 cv
366.621 9.875 366.723 9.89801 366.797 9.922 cv
366.867 9.953 366.918 9.98798 366.953 10.027 cv
366.98 10.074 366.996 10.121 367 10.168 cv
367 11.719 li
368.512 11.719 li
368.563 11.723 368.609 11.734 368.648 11.758 cv
368.688 11.785 368.719 11.828 368.746 11.887 cv
368.77 11.949 368.789 12.031 368.805 12.133 cv
368.816 12.234 368.824 12.363 368.824 12.512 cv
368.824 12.801 368.797 13.004 368.746 13.125 cv
368.691 13.25 368.617 13.312 368.52 13.309 cv
367 13.309 li
367 16.574 li
366.996 16.953 367.055 17.238 367.18 17.426 cv
367.297 17.617 367.512 17.711 367.816 17.711 cv
367.918 17.711 368.012 17.703 368.098 17.684 cv
368.18 17.668 368.254 17.648 368.32 17.621 cv
368.383 17.602 368.438 17.578 368.484 17.559 cv
368.527 17.543 368.566 17.535 368.605 17.531 cv
368.633 17.535 368.664 17.543 368.695 17.559 cv
368.723 17.578 368.742 17.617 368.762 17.668 cv
368.773 17.727 368.789 17.801 368.805 17.891 cv
368.816 17.988 368.824 18.105 368.824 18.25 cv
cp
f
372.211 18.934 mo
372.207 18.988 372.191 19.031 372.164 19.07 cv
372.129 19.109 372.074 19.145 372.004 19.168 cv
371.926 19.195 371.828 19.211 371.703 19.227 cv
371.578 19.238 371.418 19.246 371.23 19.246 cv
371.035 19.246 370.879 19.238 370.754 19.227 cv
370.629 19.211 370.527 19.195 370.453 19.168 cv
370.375 19.145 370.32 19.109 370.293 19.07 cv
370.258 19.031 370.242 18.988 370.246 18.934 cv
370.246 12 li
370.242 11.949 370.258 11.902 370.293 11.863 cv
370.32 11.824 370.375 11.793 370.453 11.762 cv
370.527 11.738 370.629 11.715 370.754 11.695 cv
370.879 11.684 371.035 11.676 371.23 11.672 cv
371.418 11.676 371.578 11.684 371.703 11.695 cv
371.828 11.715 371.926 11.738 372.004 11.762 cv
372.074 11.793 372.129 11.824 372.164 11.863 cv
372.191 11.902 372.207 11.949 372.211 12 cv
cp
372.359 9.62903 mo
372.359 10.027 372.277 10.301 372.117 10.449 cv
371.953 10.602 371.656 10.676 371.223 10.672 cv
370.777 10.676 370.477 10.602 370.328 10.457 cv
370.172 10.312 370.098 10.051 370.098 9.66803 cv
370.098 9.27301 370.176 9 370.336 8.84802 cv
370.492 8.69501 370.793 8.617 371.238 8.617 cv
371.672 8.617 371.969 8.69098 372.125 8.84003 cv
372.281 8.98798 372.359 9.25403 372.359 9.62903 cv
cp
f
381.203 15.387 mo
381.199 15.984 381.121 16.527 380.969 17.012 cv
380.809 17.504 380.574 17.922 380.258 18.273 cv
379.941 18.625 379.543 18.898 379.066 19.09 cv
378.586 19.281 378.027 19.375 377.391 19.379 cv
376.77 19.375 376.23 19.293 375.777 19.121 cv
375.316 18.953 374.938 18.703 374.641 18.375 cv
374.336 18.051 374.113 17.648 373.969 17.168 cv
373.824 16.691 373.754 16.145 373.754 15.527 cv
373.754 14.937 373.832 14.398 373.988 13.906 cv
374.145 13.418 374.383 12.996 374.703 12.645 cv
375.02 12.297 375.414 12.023 375.891 11.828 cv
376.363 11.637 376.922 11.543 377.563 11.539 cv
378.188 11.543 378.727 11.625 379.184 11.793 cv
379.641 11.965 380.02 12.215 380.316 12.539 cv
380.613 12.867 380.836 13.27 380.984 13.746 cv
381.129 14.227 381.199 14.773 381.203 15.387 cv
cp
379.184 15.465 mo
379.18 15.129 379.152 14.812 379.102 14.52 cv
379.043 14.234 378.949 13.984 378.824 13.77 cv
378.691 13.559 378.52 13.391 378.309 13.27 cv
378.09 13.152 377.82 13.094 377.492 13.09 cv
377.203 13.094 376.949 13.148 376.73 13.25 cv
376.512 13.359 376.332 13.516 376.191 13.719 cv
376.051 13.926 375.945 14.172 375.875 14.457 cv
375.805 14.75 375.77 15.078 375.77 15.441 cv
375.77 15.789 375.797 16.105 375.855 16.391 cv
375.91 16.684 376.004 16.934 376.133 17.145 cv
376.258 17.359 376.43 17.523 376.652 17.637 cv
376.867 17.758 377.137 17.816 377.461 17.812 cv
377.754 17.816 378.012 17.762 378.234 17.652 cv
378.449 17.547 378.629 17.395 378.77 17.187 cv
378.91 16.988 379.012 16.742 379.082 16.453 cv
379.145 16.168 379.18 15.84 379.184 15.465 cv
cp
f
389.445 18.934 mo
389.441 18.988 389.426 19.031 389.398 19.07 cv
389.363 19.109 389.313 19.145 389.242 19.168 cv
389.168 19.195 389.066 19.211 388.941 19.227 cv
388.813 19.238 388.656 19.246 388.473 19.246 cv
388.277 19.246 388.117 19.238 387.992 19.227 cv
387.863 19.211 387.762 19.195 387.691 19.168 cv
387.613 19.145 387.563 19.109 387.535 19.07 cv
387.5 19.031 387.484 18.988 387.488 18.934 cv
387.488 14.969 li
387.484 14.633 387.461 14.367 387.414 14.172 cv
387.363 13.98 387.289 13.816 387.199 13.68 cv
387.105 13.543 386.988 13.437 386.84 13.359 cv
386.691 13.285 386.516 13.246 386.32 13.246 cv
386.066 13.246 385.816 13.34 385.563 13.52 cv
385.309 13.703 385.043 13.965 384.77 14.312 cv
384.77 18.934 li
384.766 18.988 384.75 19.031 384.723 19.07 cv
384.688 19.109 384.633 19.145 384.563 19.168 cv
384.484 19.195 384.387 19.211 384.262 19.227 cv
384.137 19.238 383.977 19.246 383.789 19.246 cv
383.594 19.246 383.438 19.238 383.313 19.227 cv
383.188 19.211 383.086 19.195 383.012 19.168 cv
382.934 19.145 382.879 19.109 382.852 19.07 cv
382.816 19.031 382.801 18.988 382.805 18.934 cv
382.805 11.984 li
382.801 11.937 382.816 11.891 382.844 11.848 cv
382.867 11.812 382.914 11.781 382.984 11.75 cv
383.051 11.727 383.137 11.707 383.246 11.691 cv
383.352 11.684 383.484 11.676 383.648 11.672 cv
383.813 11.676 383.949 11.684 384.059 11.691 cv
384.164 11.707 384.25 11.727 384.313 11.75 cv
384.371 11.781 384.414 11.812 384.441 11.848 cv
384.465 11.891 384.477 11.937 384.48 11.984 cv
384.48 12.785 li
384.863 12.375 385.254 12.062 385.652 11.852 cv
386.047 11.645 386.465 11.543 386.898 11.539 cv
387.367 11.543 387.766 11.621 388.094 11.773 cv
388.418 11.934 388.68 12.145 388.879 12.41 cv
389.078 12.68 389.223 12.992 389.313 13.348 cv
389.398 13.707 389.441 14.137 389.445 14.641 cv
cp
f
398.797 15.281 mo
398.793 15.582 398.766 15.793 398.711 15.91 cv
398.652 16.035 398.563 16.094 398.438 16.09 cv
395.195 16.09 li
395.066 16.094 394.973 16.031 394.918 15.906 cv
394.855 15.785 394.828 15.578 394.832 15.281 cv
394.828 14.992 394.855 14.785 394.918 14.664 cv
394.973 14.547 395.066 14.488 395.195 14.484 cv
398.438 14.484 li
398.5 14.488 398.551 14.5 398.598 14.523 cv
398.637 14.551 398.676 14.598 398.711 14.656 cv
398.738 14.723 398.762 14.805 398.777 14.906 cv
398.789 15.012 398.793 15.137 398.797 15.281 cv
cp
f
409.531 18.344 mo
409.527 18.5 409.523 18.633 409.512 18.734 cv
409.496 18.844 409.477 18.93 409.453 19 cv
409.426 19.07 409.391 19.121 409.355 19.152 cv
409.313 19.184 409.27 19.199 409.219 19.199 cv
404.598 19.199 li
404.422 19.199 404.277 19.148 404.164 19.047 cv
404.043 18.945 403.984 18.781 403.988 18.551 cv
403.988 9.39502 li
403.984 9.34802 404.004 9.30103 404.039 9.25403 cv
404.07 9.21503 404.125 9.17999 404.207 9.15198 cv
404.281 9.12903 404.387 9.10901 404.523 9.09003 cv
404.652 9.078 404.816 9.07001 405.02 9.06598 cv
405.215 9.07001 405.383 9.078 405.516 9.09003 cv
405.645 9.10901 405.746 9.12903 405.828 9.15198 cv
405.902 9.17999 405.961 9.21503 405.996 9.25403 cv
406.027 9.30103 406.043 9.34802 406.047 9.39502 cv
406.047 17.508 li
409.219 17.508 li
409.27 17.512 409.313 17.527 409.355 17.551 cv
409.391 17.582 409.426 17.629 409.453 17.691 cv
409.477 17.762 409.496 17.848 409.512 17.949 cv
409.523 18.059 409.527 18.187 409.531 18.344 cv
cp
f
417.652 15.387 mo
417.648 15.984 417.57 16.527 417.418 17.012 cv
417.258 17.504 417.023 17.922 416.707 18.273 cv
416.391 18.625 415.992 18.898 415.516 19.09 cv
415.035 19.281 414.477 19.375 413.84 19.379 cv
413.219 19.375 412.68 19.293 412.227 19.121 cv
411.766 18.953 411.387 18.703 411.09 18.375 cv
410.785 18.051 410.563 17.648 410.418 17.168 cv
410.273 16.691 410.203 16.145 410.203 15.527 cv
410.203 14.937 410.281 14.398 410.438 13.906 cv
410.594 13.418 410.832 12.996 411.152 12.645 cv
411.469 12.297 411.863 12.023 412.34 11.828 cv
412.813 11.637 413.371 11.543 414.012 11.539 cv
414.637 11.543 415.176 11.625 415.633 11.793 cv
416.09 11.965 416.469 12.215 416.766 12.539 cv
417.063 12.867 417.285 13.27 417.434 13.746 cv
417.578 14.227 417.648 14.773 417.652 15.387 cv
cp
415.633 15.465 mo
415.629 15.129 415.602 14.812 415.551 14.52 cv
415.492 14.234 415.398 13.984 415.273 13.77 cv
415.141 13.559 414.969 13.391 414.758 13.27 cv
414.539 13.152 414.27 13.094 413.941 13.09 cv
413.652 13.094 413.398 13.148 413.18 13.25 cv
412.961 13.359 412.781 13.516 412.641 13.719 cv
412.5 13.926 412.395 14.172 412.324 14.457 cv
412.254 14.75 412.219 15.078 412.219 15.441 cv
412.219 15.789 412.246 16.105 412.305 16.391 cv
412.359 16.684 412.453 16.934 412.582 17.145 cv
412.707 17.359 412.879 17.523 413.102 17.637 cv
413.316 17.758 413.586 17.816 413.91 17.812 cv
414.203 17.816 414.461 17.762 414.684 17.652 cv
414.898 17.547 415.078 17.395 415.219 17.187 cv
415.359 16.988 415.461 16.742 415.531 16.453 cv
415.594 16.168 415.629 15.84 415.633 15.465 cv
cp
f
424.469 17.828 mo
424.465 17.965 424.461 18.078 424.457 18.168 cv
424.445 18.262 424.438 18.34 424.426 18.398 cv
424.41 18.461 424.395 18.512 424.379 18.547 cv
424.359 18.59 424.316 18.637 424.258 18.695 cv
424.191 18.758 424.086 18.832 423.938 18.914 cv
423.785 19.004 423.613 19.082 423.422 19.145 cv
423.23 19.215 423.023 19.266 422.797 19.309 cv
422.57 19.348 422.336 19.367 422.102 19.371 cv
421.563 19.367 421.09 19.289 420.676 19.121 cv
420.262 18.957 419.914 18.711 419.637 18.387 cv
419.352 18.062 419.141 17.668 419 17.199 cv
418.859 16.734 418.789 16.195 418.789 15.59 cv
418.789 14.895 418.875 14.297 419.047 13.789 cv
419.219 13.285 419.461 12.863 419.777 12.531 cv
420.086 12.199 420.453 11.953 420.883 11.789 cv
421.305 11.629 421.773 11.547 422.285 11.547 cv
422.492 11.547 422.695 11.566 422.898 11.602 cv
423.094 11.641 423.281 11.691 423.457 11.75 cv
423.629 11.816 423.785 11.887 423.926 11.961 cv
424.063 12.043 424.16 12.109 424.219 12.164 cv
424.273 12.223 424.313 12.27 424.34 12.305 cv
424.359 12.348 424.379 12.398 424.395 12.457 cv
424.406 12.523 424.418 12.602 424.426 12.687 cv
424.434 12.781 424.438 12.891 424.438 13.02 cv
424.438 13.324 424.41 13.535 424.359 13.656 cv
424.305 13.777 424.238 13.84 424.156 13.836 cv
424.066 13.84 423.973 13.805 423.875 13.73 cv
423.773 13.66 423.656 13.578 423.523 13.488 cv
423.391 13.402 423.23 13.32 423.043 13.246 cv
422.855 13.176 422.629 13.141 422.371 13.137 cv
421.859 13.141 421.473 13.336 421.203 13.727 cv
420.93 14.117 420.793 14.691 420.797 15.449 cv
420.793 15.824 420.828 16.156 420.898 16.441 cv
420.965 16.727 421.063 16.965 421.199 17.156 cv
421.328 17.352 421.496 17.496 421.699 17.59 cv
421.898 17.687 422.129 17.734 422.395 17.734 cv
422.66 17.734 422.895 17.695 423.094 17.613 cv
423.285 17.535 423.453 17.445 423.602 17.344 cv
423.742 17.246 423.867 17.156 423.969 17.074 cv
424.066 16.996 424.148 16.957 424.219 16.953 cv
424.262 16.957 424.301 16.969 424.336 16.992 cv
424.363 17.02 424.387 17.066 424.41 17.137 cv
424.426 17.207 424.441 17.297 424.453 17.406 cv
424.461 17.516 424.465 17.656 424.469 17.828 cv
cp
f
431.758 18.957 mo
431.754 19.035 431.727 19.09 431.68 19.129 cv
431.625 19.172 431.543 19.199 431.434 19.219 cv
431.316 19.234 431.152 19.246 430.938 19.246 cv
430.699 19.246 430.527 19.234 430.426 19.219 cv
430.316 19.199 430.242 19.172 430.203 19.129 cv
430.156 19.09 430.137 19.035 430.137 18.957 cv
430.137 18.406 li
429.848 18.715 429.52 18.953 429.156 19.121 cv
428.789 19.293 428.383 19.375 427.938 19.379 cv
427.566 19.375 427.227 19.328 426.918 19.234 cv
426.609 19.141 426.344 19 426.117 18.805 cv
425.891 18.617 425.715 18.383 425.59 18.102 cv
425.465 17.824 425.402 17.496 425.406 17.117 cv
425.402 16.719 425.48 16.367 425.641 16.062 cv
425.797 15.766 426.035 15.52 426.352 15.324 cv
426.664 15.133 427.055 14.988 427.523 14.891 cv
427.992 14.801 428.535 14.754 429.152 14.75 cv
429.832 14.75 li
429.832 14.328 li
429.832 14.113 429.809 13.922 429.766 13.758 cv
429.719 13.598 429.645 13.461 429.547 13.348 cv
429.441 13.242 429.309 13.16 429.141 13.105 cv
428.969 13.055 428.758 13.031 428.516 13.027 cv
428.184 13.031 427.891 13.066 427.637 13.137 cv
427.375 13.211 427.148 13.293 426.953 13.379 cv
426.754 13.473 426.59 13.551 426.461 13.621 cv
426.324 13.695 426.215 13.734 426.137 13.73 cv
426.074 13.734 426.023 13.715 425.984 13.676 cv
425.938 13.641 425.902 13.59 425.875 13.52 cv
425.844 13.457 425.82 13.371 425.809 13.27 cv
425.789 13.172 425.781 13.062 425.785 12.941 cv
425.781 12.781 425.797 12.656 425.824 12.559 cv
425.848 12.469 425.895 12.383 425.973 12.305 cv
426.043 12.23 426.172 12.148 426.355 12.059 cv
426.535 11.969 426.746 11.883 426.992 11.805 cv
427.234 11.727 427.504 11.664 427.793 11.613 cv
428.082 11.566 428.379 11.543 428.688 11.539 cv
429.23 11.543 429.695 11.594 430.082 11.699 cv
430.469 11.809 430.789 11.973 431.039 12.191 cv
431.289 12.41 431.469 12.695 431.586 13.043 cv
431.695 13.395 431.754 13.809 431.758 14.281 cv
cp
429.832 15.98 mo
429.082 15.98 li
428.766 15.984 428.496 16.008 428.273 16.051 cv
428.047 16.102 427.863 16.172 427.727 16.262 cv
427.582 16.359 427.48 16.473 427.418 16.602 cv
427.352 16.738 427.316 16.887 427.32 17.055 cv
427.316 17.348 427.41 17.578 427.598 17.742 cv
427.781 17.91 428.039 17.992 428.367 17.992 cv
428.641 17.992 428.891 17.922 429.125 17.781 cv
429.352 17.641 429.59 17.437 429.832 17.164 cv
cp
f
435.68 18.934 mo
435.676 18.988 435.66 19.031 435.633 19.07 cv
435.598 19.109 435.543 19.145 435.473 19.168 cv
435.395 19.195 435.297 19.211 435.172 19.227 cv
435.047 19.238 434.887 19.246 434.699 19.246 cv
434.504 19.246 434.348 19.238 434.223 19.227 cv
434.098 19.211 433.996 19.195 433.922 19.168 cv
433.844 19.145 433.789 19.109 433.762 19.07 cv
433.727 19.031 433.711 18.988 433.715 18.934 cv
433.715 8.68701 li
433.711 8.63702 433.727 8.59003 433.762 8.547 cv
433.789 8.508 433.844 8.47302 433.922 8.44098 cv
433.996 8.414 434.098 8.39502 434.223 8.375 cv
434.348 8.36298 434.504 8.35498 434.699 8.35199 cv
434.887 8.35498 435.047 8.36298 435.172 8.375 cv
435.297 8.39502 435.395 8.414 435.473 8.44098 cv
435.543 8.47302 435.598 8.508 435.633 8.547 cv
435.66 8.59003 435.676 8.63702 435.68 8.68701 cv
cp
f
453.168 18.918 mo
453.164 18.973 453.152 19.02 453.125 19.059 cv
453.094 19.102 453.039 19.137 452.969 19.16 cv
452.891 19.187 452.793 19.207 452.668 19.223 cv
452.543 19.238 452.383 19.246 452.191 19.246 cv
452.004 19.246 451.848 19.238 451.727 19.223 cv
451.598 19.207 451.5 19.187 451.43 19.16 cv
451.355 19.137 451.305 19.102 451.273 19.059 cv
451.242 19.02 451.227 18.973 451.227 18.918 cv
451.227 10.711 li
451.211 10.711 li
448.289 18.91 li
448.266 18.98 448.23 19.035 448.188 19.078 cv
448.137 19.125 448.074 19.16 447.996 19.184 cv
447.914 19.211 447.813 19.227 447.688 19.234 cv
447.563 19.242 447.41 19.246 447.238 19.246 cv
447.059 19.246 446.91 19.238 446.785 19.227 cv
446.66 19.211 446.555 19.191 446.477 19.164 cv
446.391 19.137 446.328 19.102 446.285 19.059 cv
446.234 19.02 446.203 18.973 446.191 18.91 cv
443.371 10.711 li
443.355 10.711 li
443.355 18.918 li
443.352 18.973 443.336 19.02 443.313 19.059 cv
443.281 19.102 443.23 19.137 443.152 19.16 cv
443.074 19.187 442.973 19.207 442.852 19.223 cv
442.727 19.238 442.57 19.246 442.383 19.246 cv
442.191 19.246 442.035 19.238 441.914 19.223 cv
441.785 19.207 441.684 19.187 441.613 19.16 cv
441.535 19.137 441.484 19.102 441.457 19.059 cv
441.426 19.02 441.41 18.973 441.414 18.918 cv
441.414 9.93402 li
441.41 9.672 441.48 9.46899 441.625 9.32397 cv
441.762 9.18701 441.949 9.117 442.188 9.11298 cv
443.527 9.11298 li
443.766 9.117 443.969 9.13702 444.141 9.172 cv
444.309 9.21503 444.457 9.27698 444.586 9.367 cv
444.707 9.461 444.813 9.58197 444.898 9.72699 cv
444.98 9.87903 445.051 10.062 445.117 10.277 cv
447.301 16.285 li
447.332 16.285 li
449.59 10.293 li
449.656 10.074 449.73 9.89099 449.813 9.73798 cv
449.891 9.59003 449.984 9.46899 450.094 9.37097 cv
450.199 9.28101 450.324 9.21503 450.469 9.172 cv
450.613 9.13702 450.781 9.117 450.977 9.11298 cv
452.355 9.11298 li
452.492 9.117 452.613 9.133 452.719 9.16803 cv
452.816 9.20697 452.898 9.26202 452.969 9.328 cv
453.031 9.40198 453.082 9.48798 453.117 9.586 cv
453.148 9.69098 453.164 9.80902 453.168 9.93402 cv
cp
f
462.277 15.387 mo
462.273 15.984 462.195 16.527 462.043 17.012 cv
461.883 17.504 461.648 17.922 461.332 18.273 cv
461.016 18.625 460.617 18.898 460.141 19.09 cv
459.66 19.281 459.102 19.375 458.465 19.379 cv
457.844 19.375 457.305 19.293 456.852 19.121 cv
456.391 18.953 456.012 18.703 455.715 18.375 cv
455.41 18.051 455.188 17.648 455.043 17.168 cv
454.898 16.691 454.828 16.145 454.828 15.527 cv
454.828 14.937 454.906 14.398 455.063 13.906 cv
455.219 13.418 455.457 12.996 455.777 12.645 cv
456.094 12.297 456.488 12.023 456.965 11.828 cv
457.438 11.637 457.996 11.543 458.637 11.539 cv
459.262 11.543 459.801 11.625 460.258 11.793 cv
460.715 11.965 461.094 12.215 461.391 12.539 cv
461.688 12.867 461.91 13.27 462.059 13.746 cv
462.203 14.227 462.273 14.773 462.277 15.387 cv
cp
460.258 15.465 mo
460.254 15.129 460.227 14.812 460.176 14.52 cv
460.117 14.234 460.023 13.984 459.898 13.77 cv
459.766 13.559 459.594 13.391 459.383 13.27 cv
459.164 13.152 458.895 13.094 458.566 13.09 cv
458.277 13.094 458.023 13.148 457.805 13.25 cv
457.586 13.359 457.406 13.516 457.266 13.719 cv
457.125 13.926 457.02 14.172 456.949 14.457 cv
456.879 14.75 456.844 15.078 456.844 15.441 cv
456.844 15.789 456.871 16.105 456.93 16.391 cv
456.984 16.684 457.078 16.934 457.207 17.145 cv
457.332 17.359 457.504 17.523 457.727 17.637 cv
457.941 17.758 458.211 17.816 458.535 17.812 cv
458.828 17.816 459.086 17.762 459.309 17.652 cv
459.523 17.547 459.703 17.395 459.844 17.187 cv
459.984 16.988 460.086 16.742 460.156 16.453 cv
460.219 16.168 460.254 15.84 460.258 15.465 cv
cp
f
470.426 18.934 mo
470.422 18.996 470.41 19.043 470.387 19.078 cv
470.359 19.121 470.313 19.152 470.254 19.176 cv
470.188 19.199 470.105 19.215 470 19.23 cv
469.895 19.238 469.762 19.246 469.609 19.246 cv
469.438 19.246 469.305 19.238 469.203 19.23 cv
469.098 19.215 469.012 19.199 468.949 19.176 cv
468.883 19.152 468.836 19.121 468.809 19.078 cv
468.777 19.043 468.762 18.996 468.766 18.934 cv
468.766 18.164 li
468.406 18.551 468.031 18.848 467.641 19.059 cv
467.242 19.27 466.809 19.375 466.336 19.379 cv
465.801 19.375 465.352 19.273 464.988 19.07 cv
464.621 18.867 464.324 18.594 464.094 18.242 cv
463.859 17.898 463.691 17.492 463.59 17.023 cv
463.488 16.562 463.438 16.07 463.438 15.551 cv
463.438 14.937 463.5 14.383 463.633 13.887 cv
463.762 13.395 463.957 12.973 464.215 12.625 cv
464.469 12.277 464.785 12.012 465.164 11.82 cv
465.543 11.637 465.98 11.543 466.477 11.539 cv
466.863 11.543 467.215 11.621 467.535 11.777 cv
467.848 11.937 468.164 12.168 468.477 12.473 cv
468.477 8.711 li
468.477 8.65997 468.488 8.61298 468.52 8.57001 cv
468.543 8.53101 468.598 8.49597 468.676 8.46503 cv
468.75 8.43701 468.848 8.41803 468.977 8.39801 cv
469.098 8.38702 469.258 8.37903 469.453 8.375 cv
469.645 8.37903 469.801 8.38702 469.926 8.39801 cv
470.047 8.41803 470.148 8.43701 470.223 8.46503 cv
470.293 8.49597 470.344 8.53101 470.379 8.57001 cv
470.406 8.61298 470.422 8.65997 470.426 8.711 cv
cp
468.477 14.289 mo
468.195 13.937 467.926 13.668 467.672 13.48 cv
467.41 13.293 467.141 13.199 466.863 13.199 cv
466.609 13.199 466.391 13.266 466.207 13.391 cv
466.02 13.523 465.871 13.691 465.762 13.902 cv
465.648 14.113 465.566 14.352 465.512 14.613 cv
465.457 14.879 465.43 15.148 465.43 15.418 cv
465.43 15.715 465.453 15.996 465.5 16.27 cv
465.547 16.547 465.621 16.793 465.73 17.008 cv
465.832 17.223 465.977 17.395 466.156 17.523 cv
466.332 17.656 466.555 17.723 466.824 17.719 cv
466.957 17.723 467.086 17.703 467.219 17.66 cv
467.344 17.625 467.477 17.562 467.609 17.469 cv
467.742 17.383 467.879 17.266 468.02 17.121 cv
468.16 16.98 468.313 16.805 468.477 16.598 cv
cp
f
478.824 15.258 mo
478.82 15.496 478.77 15.672 478.664 15.785 cv
478.555 15.902 478.406 15.961 478.227 15.957 cv
473.992 15.957 li
473.988 16.258 474.023 16.527 474.098 16.766 cv
474.164 17.008 474.277 17.211 474.434 17.379 cv
474.586 17.551 474.781 17.68 475.023 17.766 cv
475.262 17.855 475.551 17.898 475.895 17.898 cv
476.234 17.898 476.535 17.875 476.797 17.824 cv
477.055 17.777 477.281 17.723 477.473 17.66 cv
477.66 17.602 477.816 17.547 477.945 17.496 cv
478.066 17.449 478.168 17.426 478.25 17.422 cv
478.293 17.426 478.332 17.434 478.367 17.449 cv
478.395 17.469 478.422 17.5 478.441 17.547 cv
478.461 17.594 478.473 17.66 478.484 17.746 cv
478.488 17.832 478.492 17.941 478.496 18.07 cv
478.492 18.187 478.492 18.285 478.488 18.363 cv
478.48 18.445 478.473 18.512 478.465 18.566 cv
478.453 18.625 478.438 18.676 478.418 18.711 cv
478.398 18.754 478.371 18.789 478.34 18.824 cv
478.305 18.863 478.211 18.914 478.063 18.973 cv
477.906 19.039 477.715 19.102 477.484 19.156 cv
477.246 19.219 476.977 19.266 476.68 19.312 cv
476.375 19.352 476.055 19.375 475.715 19.379 cv
475.094 19.375 474.551 19.301 474.09 19.145 cv
473.621 18.992 473.234 18.754 472.926 18.437 cv
472.609 18.121 472.375 17.723 472.227 17.238 cv
472.07 16.758 471.996 16.191 472 15.535 cv
471.996 14.922 472.074 14.363 472.238 13.867 cv
472.395 13.371 472.629 12.953 472.941 12.605 cv
473.246 12.262 473.621 11.996 474.059 11.812 cv
474.496 11.633 474.988 11.543 475.543 11.539 cv
476.121 11.543 476.621 11.629 477.035 11.797 cv
477.449 11.973 477.785 12.211 478.051 12.512 cv
478.313 12.816 478.508 13.176 478.637 13.59 cv
478.758 14.008 478.82 14.457 478.824 14.945 cv
cp
476.922 14.695 mo
476.934 14.145 476.824 13.711 476.59 13.398 cv
476.355 13.086 475.988 12.93 475.496 12.926 cv
475.246 12.93 475.031 12.977 474.848 13.066 cv
474.66 13.164 474.508 13.289 474.387 13.445 cv
474.262 13.605 474.168 13.793 474.105 14.008 cv
474.039 14.223 474 14.453 473.992 14.695 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
